
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad df 01 00 	mov    0x1dfad(%rip),%rax        # 21fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca df 01 00    	push   0x1dfca(%rip)        # 21ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc df 01 00    	jmp    *0x1dfcc(%rip)        # 21ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca df 01 00    	jmp    *0x1dfca(%rip)        # 22000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 df 01 00    	jmp    *0x1dfc2(%rip)        # 22008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4050:	ff 25 ba df 01 00    	jmp    *0x1dfba(%rip)        # 22010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZNSaIcED2Ev@plt>:
    4060:	ff 25 b2 df 01 00    	jmp    *0x1dfb2(%rip)        # 22018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4070:	ff 25 aa df 01 00    	jmp    *0x1dfaa(%rip)        # 22020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4080:	ff 25 a2 df 01 00    	jmp    *0x1dfa2(%rip)        # 22028 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSolsEm@plt>:
    4090:	ff 25 9a df 01 00    	jmp    *0x1df9a(%rip)        # 22030 <_ZNSolsEm@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <vkDeviceWaitIdle@plt>:
    40a0:	ff 25 92 df 01 00    	jmp    *0x1df92(%rip)        # 22038 <vkDeviceWaitIdle@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40b0:	ff 25 8a df 01 00    	jmp    *0x1df8a(%rip)        # 22040 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDestroySwapchainKHR@plt>:
    40c0:	ff 25 82 df 01 00    	jmp    *0x1df82(%rip)        # 22048 <vkDestroySwapchainKHR@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <glfwDestroyWindow@plt>:
    40d0:	ff 25 7a df 01 00    	jmp    *0x1df7a(%rip)        # 22050 <glfwDestroyWindow@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <_ZSt17__throw_bad_allocv@plt>:
    40e0:	ff 25 72 df 01 00    	jmp    *0x1df72(%rip)        # 22058 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    40f0:	ff 25 6a df 01 00    	jmp    *0x1df6a(%rip)        # 22060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNSt13runtime_errorC1EPKc@plt>:
    4100:	ff 25 62 df 01 00    	jmp    *0x1df62(%rip)        # 22068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <vkGetPhysicalDeviceProperties@plt>:
    4110:	ff 25 5a df 01 00    	jmp    *0x1df5a(%rip)        # 22070 <vkGetPhysicalDeviceProperties@Base>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <__cxa_begin_catch@plt>:
    4120:	ff 25 52 df 01 00    	jmp    *0x1df52(%rip)        # 22078 <__cxa_begin_catch@CXXABI_1.3>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkCreateCommandPool@plt>:
    4130:	ff 25 4a df 01 00    	jmp    *0x1df4a(%rip)        # 22080 <vkCreateCommandPool@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <strlen@plt>:
    4140:	ff 25 42 df 01 00    	jmp    *0x1df42(%rip)        # 22088 <strlen@GLIBC_2.2.5>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <memcmp@plt>:
    4150:	ff 25 3a df 01 00    	jmp    *0x1df3a(%rip)        # 22090 <memcmp@GLIBC_2.2.5>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <__cxa_allocate_exception@plt>:
    4160:	ff 25 32 df 01 00    	jmp    *0x1df32(%rip)        # 22098 <__cxa_allocate_exception@CXXABI_1.3>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <_ZSt20__throw_length_errorPKc@plt>:
    4170:	ff 25 2a df 01 00    	jmp    *0x1df2a(%rip)        # 220a0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <vkEnumeratePhysicalDevices@plt>:
    4180:	ff 25 22 df 01 00    	jmp    *0x1df22(%rip)        # 220a8 <vkEnumeratePhysicalDevices@Base>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <memset@plt>:
    4190:	ff 25 1a df 01 00    	jmp    *0x1df1a(%rip)        # 220b0 <memset@GLIBC_2.2.5>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <_ZNSaIcEC1ERKS_@plt>:
    41a0:	ff 25 12 df 01 00    	jmp    *0x1df12(%rip)        # 220b8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <vkGetSwapchainImagesKHR@plt>:
    41b0:	ff 25 0a df 01 00    	jmp    *0x1df0a(%rip)        # 220c0 <vkGetSwapchainImagesKHR@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    41c0:	ff 25 02 df 01 00    	jmp    *0x1df02(%rip)        # 220c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    41d0:	ff 25 fa de 01 00    	jmp    *0x1defa(%rip)        # 220d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    41e0:	ff 25 f2 de 01 00    	jmp    *0x1def2(%rip)        # 220d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    41f0:	ff 25 ea de 01 00    	jmp    *0x1deea(%rip)        # 220e0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4200:	ff 25 e2 de 01 00    	jmp    *0x1dee2(%rip)        # 220e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZSt19__throw_logic_errorPKc@plt>:
    4210:	ff 25 da de 01 00    	jmp    *0x1deda(%rip)        # 220f0 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <__cxa_free_exception@plt>:
    4220:	ff 25 d2 de 01 00    	jmp    *0x1ded2(%rip)        # 220f8 <__cxa_free_exception@CXXABI_1.3>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4230:	ff 25 ca de 01 00    	jmp    *0x1deca(%rip)        # 22100 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <glfwGetRequiredInstanceExtensions@plt>:
    4240:	ff 25 c2 de 01 00    	jmp    *0x1dec2(%rip)        # 22108 <glfwGetRequiredInstanceExtensions@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4250:	ff 25 ba de 01 00    	jmp    *0x1deba(%rip)        # 22110 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <vkCreateShaderModule@plt>:
    4260:	ff 25 b2 de 01 00    	jmp    *0x1deb2(%rip)        # 22118 <vkCreateShaderModule@Base>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4270:	ff 25 aa de 01 00    	jmp    *0x1deaa(%rip)        # 22120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <vkDestroyDevice@plt>:
    4280:	ff 25 a2 de 01 00    	jmp    *0x1dea2(%rip)        # 22128 <vkDestroyDevice@Base>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <vkEnumerateInstanceExtensionProperties@plt>:
    4290:	ff 25 9a de 01 00    	jmp    *0x1de9a(%rip)        # 22130 <vkEnumerateInstanceExtensionProperties@Base>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    42a0:	ff 25 92 de 01 00    	jmp    *0x1de92(%rip)        # 22138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <glfwWindowHint@plt>:
    42b0:	ff 25 8a de 01 00    	jmp    *0x1de8a(%rip)        # 22140 <glfwWindowHint@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    42c0:	ff 25 82 de 01 00    	jmp    *0x1de82(%rip)        # 22148 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <__cxa_atexit@plt>:
    42d0:	ff 25 7a de 01 00    	jmp    *0x1de7a(%rip)        # 22150 <__cxa_atexit@GLIBC_2.2.5>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    42e0:	ff 25 72 de 01 00    	jmp    *0x1de72(%rip)        # 22158 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkAllocateCommandBuffers@plt>:
    42f0:	ff 25 6a de 01 00    	jmp    *0x1de6a(%rip)        # 22160 <vkAllocateCommandBuffers@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <vkGetPhysicalDeviceProperties2@plt>:
    4300:	ff 25 62 de 01 00    	jmp    *0x1de62(%rip)        # 22168 <vkGetPhysicalDeviceProperties2@Base>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkGetInstanceProcAddr@plt>:
    4310:	ff 25 5a de 01 00    	jmp    *0x1de5a(%rip)        # 22170 <vkGetInstanceProcAddr@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <glfwPollEvents@plt>:
    4320:	ff 25 52 de 01 00    	jmp    *0x1de52(%rip)        # 22178 <glfwPollEvents@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4330:	ff 25 4a de 01 00    	jmp    *0x1de4a(%rip)        # 22180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <_Znwm@plt>:
    4340:	ff 25 42 de 01 00    	jmp    *0x1de42(%rip)        # 22188 <_Znwm@GLIBCXX_3.4>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <_ZdlPvm@plt>:
    4350:	ff 25 3a de 01 00    	jmp    *0x1de3a(%rip)        # 22190 <_ZdlPvm@CXXABI_1.3.9>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkDestroyInstance@plt>:
    4360:	ff 25 32 de 01 00    	jmp    *0x1de32(%rip)        # 22198 <vkDestroyInstance@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <glfwTerminate@plt>:
    4370:	ff 25 2a de 01 00    	jmp    *0x1de2a(%rip)        # 221a0 <glfwTerminate@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <vkCreateImageView@plt>:
    4380:	ff 25 22 de 01 00    	jmp    *0x1de22(%rip)        # 221a8 <vkCreateImageView@Base>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    4390:	ff 25 1a de 01 00    	jmp    *0x1de1a(%rip)        # 221b0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <_ZNSolsEPFRSoS_E@plt>:
    43a0:	ff 25 12 de 01 00    	jmp    *0x1de12(%rip)        # 221b8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    43b0:	ff 25 0a de 01 00    	jmp    *0x1de0a(%rip)        # 221c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    43c0:	ff 25 02 de 01 00    	jmp    *0x1de02(%rip)        # 221c8 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    43d0:	ff 25 fa dd 01 00    	jmp    *0x1ddfa(%rip)        # 221d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZNSaIcED1Ev@plt>:
    43e0:	ff 25 f2 dd 01 00    	jmp    *0x1ddf2(%rip)        # 221d8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkDestroyPipeline@plt>:
    43f0:	ff 25 ea dd 01 00    	jmp    *0x1ddea(%rip)        # 221e0 <vkDestroyPipeline@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4400:	ff 25 e2 dd 01 00    	jmp    *0x1dde2(%rip)        # 221e8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4410:	ff 25 da dd 01 00    	jmp    *0x1ddda(%rip)        # 221f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkEnumerateInstanceLayerProperties@plt>:
    4420:	ff 25 d2 dd 01 00    	jmp    *0x1ddd2(%rip)        # 221f8 <vkEnumerateInstanceLayerProperties@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <glfwInit@plt>:
    4430:	ff 25 ca dd 01 00    	jmp    *0x1ddca(%rip)        # 22200 <glfwInit@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4440:	ff 25 c2 dd 01 00    	jmp    *0x1ddc2(%rip)        # 22208 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <vkCreateSwapchainKHR@plt>:
    4450:	ff 25 ba dd 01 00    	jmp    *0x1ddba(%rip)        # 22210 <vkCreateSwapchainKHR@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    4460:	ff 25 b2 dd 01 00    	jmp    *0x1ddb2(%rip)        # 22218 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <vkDestroyShaderModule@plt>:
    4470:	ff 25 aa dd 01 00    	jmp    *0x1ddaa(%rip)        # 22220 <vkDestroyShaderModule@Base>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <vkCreateInstance@plt>:
    4480:	ff 25 a2 dd 01 00    	jmp    *0x1dda2(%rip)        # 22228 <vkCreateInstance@Base>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4490:	ff 25 9a dd 01 00    	jmp    *0x1dd9a(%rip)        # 22230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZNSi4readEPcl@plt>:
    44a0:	ff 25 92 dd 01 00    	jmp    *0x1dd92(%rip)        # 22238 <_ZNSi4readEPcl@GLIBCXX_3.4>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    44b0:	ff 25 8a dd 01 00    	jmp    *0x1dd8a(%rip)        # 22240 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    44c0:	ff 25 82 dd 01 00    	jmp    *0x1dd82(%rip)        # 22248 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    44d0:	ff 25 7a dd 01 00    	jmp    *0x1dd7a(%rip)        # 22250 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    44e0:	ff 25 72 dd 01 00    	jmp    *0x1dd72(%rip)        # 22258 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <vkGetDeviceQueue@plt>:
    44f0:	ff 25 6a dd 01 00    	jmp    *0x1dd6a(%rip)        # 22260 <vkGetDeviceQueue@Base>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSolsEj@plt>:
    4500:	ff 25 62 dd 01 00    	jmp    *0x1dd62(%rip)        # 22268 <_ZNSolsEj@GLIBCXX_3.4>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4510:	ff 25 5a dd 01 00    	jmp    *0x1dd5a(%rip)        # 22270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4520:	ff 25 52 dd 01 00    	jmp    *0x1dd52(%rip)        # 22278 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <vkEnumerateDeviceExtensionProperties@plt>:
    4530:	ff 25 4a dd 01 00    	jmp    *0x1dd4a(%rip)        # 22280 <vkEnumerateDeviceExtensionProperties@Base>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    4540:	ff 25 42 dd 01 00    	jmp    *0x1dd42(%rip)        # 22288 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkDestroyCommandPool@plt>:
    4550:	ff 25 3a dd 01 00    	jmp    *0x1dd3a(%rip)        # 22290 <vkDestroyCommandPool@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <_ZNSaIcEC2ERKS_@plt>:
    4560:	ff 25 32 dd 01 00    	jmp    *0x1dd32(%rip)        # 22298 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <__cxa_rethrow@plt>:
    4570:	ff 25 2a dd 01 00    	jmp    *0x1dd2a(%rip)        # 222a0 <__cxa_rethrow@CXXABI_1.3>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <vkCreateDevice@plt>:
    4580:	ff 25 22 dd 01 00    	jmp    *0x1dd22(%rip)        # 222a8 <vkCreateDevice@Base>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <_ZNSt8ios_base4InitC1Ev@plt>:
    4590:	ff 25 1a dd 01 00    	jmp    *0x1dd1a(%rip)        # 222b0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <glfwCreateWindowSurface@plt>:
    45a0:	ff 25 12 dd 01 00    	jmp    *0x1dd12(%rip)        # 222b8 <glfwCreateWindowSurface@Base>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <glfwCreateWindow@plt>:
    45b0:	ff 25 0a dd 01 00    	jmp    *0x1dd0a(%rip)        # 222c0 <glfwCreateWindow@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    45c0:	ff 25 02 dd 01 00    	jmp    *0x1dd02(%rip)        # 222c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    45d0:	ff 25 fa dc 01 00    	jmp    *0x1dcfa(%rip)        # 222d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    45e0:	ff 25 f2 dc 01 00    	jmp    *0x1dcf2(%rip)        # 222d8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    45f0:	ff 25 ea dc 01 00    	jmp    *0x1dcea(%rip)        # 222e0 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <memmove@plt>:
    4600:	ff 25 e2 dc 01 00    	jmp    *0x1dce2(%rip)        # 222e8 <memmove@GLIBC_2.2.5>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <__cxa_end_catch@plt>:
    4610:	ff 25 da dc 01 00    	jmp    *0x1dcda(%rip)        # 222f0 <__cxa_end_catch@CXXABI_1.3>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <__cxa_throw@plt>:
    4620:	ff 25 d2 dc 01 00    	jmp    *0x1dcd2(%rip)        # 222f8 <__cxa_throw@CXXABI_1.3>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    4630:	ff 25 ca dc 01 00    	jmp    *0x1dcca(%rip)        # 22300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4640:	ff 25 c2 dc 01 00    	jmp    *0x1dcc2(%rip)        # 22308 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <_ZNSolsEi@plt>:
    4650:	ff 25 ba dc 01 00    	jmp    *0x1dcba(%rip)        # 22310 <_ZNSolsEi@GLIBCXX_3.4>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <_ZNSi5tellgEv@plt>:
    4660:	ff 25 b2 dc 01 00    	jmp    *0x1dcb2(%rip)        # 22318 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <vkDestroySurfaceKHR@plt>:
    4670:	ff 25 aa dc 01 00    	jmp    *0x1dcaa(%rip)        # 22320 <vkDestroySurfaceKHR@Base>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <_Unwind_Resume@plt>:
    4680:	ff 25 a2 dc 01 00    	jmp    *0x1dca2(%rip)        # 22328 <_Unwind_Resume@GCC_3.0>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSaIcEC1Ev@plt>:
    4690:	ff 25 9a dc 01 00    	jmp    *0x1dc9a(%rip)        # 22330 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <vkDestroyImageView@plt>:
    46a0:	ff 25 92 dc 01 00    	jmp    *0x1dc92(%rip)        # 22338 <vkDestroyImageView@Base>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    46b0:	ff 25 8a dc 01 00    	jmp    *0x1dc8a(%rip)        # 22340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <_ZNSt9exceptionD2Ev@plt>:
    46c0:	ff 25 82 dc 01 00    	jmp    *0x1dc82(%rip)        # 22348 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <glfwWindowShouldClose@plt>:
    46d0:	ff 25 7a dc 01 00    	jmp    *0x1dc7a(%rip)        # 22350 <glfwWindowShouldClose@Base>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <_ZNSolsEd@plt>:
    46e0:	ff 25 72 dc 01 00    	jmp    *0x1dc72(%rip)        # 22358 <_ZNSolsEd@GLIBCXX_3.4>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    46f0:	ff 25 6a dc 01 00    	jmp    *0x1dc6a(%rip)        # 22360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4700:	ff 25 62 dc 01 00    	jmp    *0x1dc62(%rip)        # 22368 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004710 <__cxa_finalize@plt>:
    4710:	ff 25 7a d8 01 00    	jmp    *0x1d87a(%rip)        # 21f90 <__cxa_finalize@GLIBC_2.2.5>
    4716:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004720 <_start>:
    4720:	31 ed                	xor    %ebp,%ebp
    4722:	49 89 d1             	mov    %rdx,%r9
    4725:	5e                   	pop    %rsi
    4726:	48 89 e2             	mov    %rsp,%rdx
    4729:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    472d:	50                   	push   %rax
    472e:	54                   	push   %rsp
    472f:	45 31 c0             	xor    %r8d,%r8d
    4732:	31 c9                	xor    %ecx,%ecx
    4734:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 48e4 <main>
    473b:	ff 15 5f d8 01 00    	call   *0x1d85f(%rip)        # 21fa0 <__libc_start_main@GLIBC_2.34>
    4741:	f4                   	hlt
    4742:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4749:	00 00 00 
    474c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004750 <deregister_tm_clones>:
    4750:	48 8d 3d 39 dc 01 00 	lea    0x1dc39(%rip),%rdi        # 22390 <__TMC_END__>
    4757:	48 8d 05 32 dc 01 00 	lea    0x1dc32(%rip),%rax        # 22390 <__TMC_END__>
    475e:	48 39 f8             	cmp    %rdi,%rax
    4761:	74 15                	je     4778 <deregister_tm_clones+0x28>
    4763:	48 8b 05 46 d8 01 00 	mov    0x1d846(%rip),%rax        # 21fb0 <_ITM_deregisterTMCloneTable@Base>
    476a:	48 85 c0             	test   %rax,%rax
    476d:	74 09                	je     4778 <deregister_tm_clones+0x28>
    476f:	ff e0                	jmp    *%rax
    4771:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4778:	c3                   	ret
    4779:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004780 <register_tm_clones>:
    4780:	48 8d 3d 09 dc 01 00 	lea    0x1dc09(%rip),%rdi        # 22390 <__TMC_END__>
    4787:	48 8d 35 02 dc 01 00 	lea    0x1dc02(%rip),%rsi        # 22390 <__TMC_END__>
    478e:	48 29 fe             	sub    %rdi,%rsi
    4791:	48 89 f0             	mov    %rsi,%rax
    4794:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4798:	48 c1 f8 03          	sar    $0x3,%rax
    479c:	48 01 c6             	add    %rax,%rsi
    479f:	48 d1 fe             	sar    %rsi
    47a2:	74 14                	je     47b8 <register_tm_clones+0x38>
    47a4:	48 8b 05 15 d8 01 00 	mov    0x1d815(%rip),%rax        # 21fc0 <_ITM_registerTMCloneTable@Base>
    47ab:	48 85 c0             	test   %rax,%rax
    47ae:	74 08                	je     47b8 <register_tm_clones+0x38>
    47b0:	ff e0                	jmp    *%rax
    47b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    47b8:	c3                   	ret
    47b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000047c0 <__do_global_dtors_aux>:
    47c0:	f3 0f 1e fa          	endbr64
    47c4:	80 3d 25 de 01 00 00 	cmpb   $0x0,0x1de25(%rip)        # 225f0 <completed.0>
    47cb:	75 2b                	jne    47f8 <__do_global_dtors_aux+0x38>
    47cd:	55                   	push   %rbp
    47ce:	48 83 3d ba d7 01 00 	cmpq   $0x0,0x1d7ba(%rip)        # 21f90 <__cxa_finalize@GLIBC_2.2.5>
    47d5:	00 
    47d6:	48 89 e5             	mov    %rsp,%rbp
    47d9:	74 0c                	je     47e7 <__do_global_dtors_aux+0x27>
    47db:	48 8b 3d 96 db 01 00 	mov    0x1db96(%rip),%rdi        # 22378 <__dso_handle>
    47e2:	e8 29 ff ff ff       	call   4710 <__cxa_finalize@plt>
    47e7:	e8 64 ff ff ff       	call   4750 <deregister_tm_clones>
    47ec:	c6 05 fd dd 01 00 01 	movb   $0x1,0x1ddfd(%rip)        # 225f0 <completed.0>
    47f3:	5d                   	pop    %rbp
    47f4:	c3                   	ret
    47f5:	0f 1f 00             	nopl   (%rax)
    47f8:	c3                   	ret
    47f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004800 <frame_dummy>:
    4800:	f3 0f 1e fa          	endbr64
    4804:	e9 77 ff ff ff       	jmp    4780 <register_tm_clones>

0000000000004809 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    4809:	55                   	push   %rbp
    480a:	48 89 e5             	mov    %rsp,%rbp
    480d:	53                   	push   %rbx
    480e:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
  VulkanApp app;
    4815:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    481c:	48 89 c7             	mov    %rax,%rdi
    481f:	e8 54 96 00 00       	call   de78 <_ZN9VulkanAppC1Ev>
  app.run();
    4824:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    482b:	48 89 c7             	mov    %rax,%rdi
    482e:	e8 43 9a 00 00       	call   e276 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4833:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4837:	48 89 c7             	mov    %rax,%rdi
    483a:	e8 51 fe ff ff       	call   4690 <_ZNSaIcEC1Ev@plt>
    483f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4843:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4847:	48 8d 0d 96 fd 00 00 	lea    0xfd96(%rip),%rcx        # 145e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    484e:	48 89 ce             	mov    %rcx,%rsi
    4851:	48 89 c7             	mov    %rax,%rdi
    4854:	e8 77 02 00 00       	call   4ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4859:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    485d:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4864:	48 89 d6             	mov    %rdx,%rsi
    4867:	48 89 c7             	mov    %rax,%rdi
    486a:	e8 4b 9b 00 00       	call   e3ba <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    486f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4873:	48 89 c7             	mov    %rax,%rdi
    4876:	e8 55 f9 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    487b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    487f:	48 89 c7             	mov    %rax,%rdi
    4882:	e8 59 fb ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    4887:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    488c:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4893:	48 89 c7             	mov    %rax,%rdi
    4896:	e8 33 98 00 00       	call   e0ce <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    489b:	89 d8                	mov    %ebx,%eax
    489d:	eb 3f                	jmp    48de <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    489f:	48 89 c3             	mov    %rax,%rbx
    48a2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48a6:	48 89 c7             	mov    %rax,%rdi
    48a9:	e8 22 f9 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48ae:	eb 03                	jmp    48b3 <_Z14protected_mainv+0xaa>
    48b0:	48 89 c3             	mov    %rax,%rbx
    48b3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48b7:	48 89 c7             	mov    %rax,%rdi
    48ba:	e8 21 fb ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    48bf:	eb 03                	jmp    48c4 <_Z14protected_mainv+0xbb>
}
    48c1:	48 89 c3             	mov    %rax,%rbx
    48c4:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    48cb:	48 89 c7             	mov    %rax,%rdi
    48ce:	e8 fb 97 00 00       	call   e0ce <_ZN9VulkanAppD1Ev>
    48d3:	48 89 d8             	mov    %rbx,%rax
    48d6:	48 89 c7             	mov    %rax,%rdi
    48d9:	e8 a2 fd ff ff       	call   4680 <_Unwind_Resume@plt>
    48de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    48e2:	c9                   	leave
    48e3:	c3                   	ret

00000000000048e4 <main>:

int main() {
    48e4:	55                   	push   %rbp
    48e5:	48 89 e5             	mov    %rsp,%rbp
    48e8:	53                   	push   %rbx
    48e9:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    48ed:	e8 17 ff ff ff       	call   4809 <_Z14protected_mainv>
    48f2:	e9 aa 00 00 00       	jmp    49a1 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    48f7:	b8 01 00 00 00       	mov    $0x1,%eax
    48fc:	e9 a0 00 00 00       	jmp    49a1 <main+0xbd>
  } catch (const std::exception &e) {
    4901:	48 83 fa 01          	cmp    $0x1,%rdx
    4905:	75 49                	jne    4950 <main+0x6c>
    4907:	48 89 c7             	mov    %rax,%rdi
    490a:	e8 11 f8 ff ff       	call   4120 <__cxa_begin_catch@plt>
    490f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4913:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4917:	48 8b 00             	mov    (%rax),%rax
    491a:	48 83 c0 10          	add    $0x10,%rax
    491e:	48 8b 10             	mov    (%rax),%rdx
    4921:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4925:	48 89 c7             	mov    %rax,%rdi
    4928:	ff d2                	call   *%rdx
    492a:	48 89 c6             	mov    %rax,%rsi
    492d:	48 8d 05 ac db 01 00 	lea    0x1dbac(%rip),%rax        # 224e0 <_ZSt4cerr@GLIBCXX_3.4>
    4934:	48 89 c7             	mov    %rax,%rdi
    4937:	e8 f4 f9 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    493c:	be 0a 00 00 00       	mov    $0xa,%esi
    4941:	48 89 c7             	mov    %rax,%rdi
    4944:	e8 f7 fa ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4949:	e8 c2 fc ff ff       	call   4610 <__cxa_end_catch@plt>
    494e:	eb a7                	jmp    48f7 <main+0x13>
    4950:	48 89 c7             	mov    %rax,%rdi
    4953:	e8 c8 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4958:	48 8d 05 8e fc 00 00 	lea    0xfc8e(%rip),%rax        # 145ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    495f:	48 89 c6             	mov    %rax,%rsi
    4962:	48 8d 05 77 db 01 00 	lea    0x1db77(%rip),%rax        # 224e0 <_ZSt4cerr@GLIBCXX_3.4>
    4969:	48 89 c7             	mov    %rax,%rdi
    496c:	e8 bf f9 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4971:	e8 9a fc ff ff       	call   4610 <__cxa_end_catch@plt>
    4976:	e9 7c ff ff ff       	jmp    48f7 <main+0x13>
  } catch (...) {
    497b:	48 89 c3             	mov    %rax,%rbx
    497e:	e8 8d fc ff ff       	call   4610 <__cxa_end_catch@plt>
    4983:	48 89 d8             	mov    %rbx,%rax
    4986:	48 89 c7             	mov    %rax,%rdi
    4989:	e8 f2 fc ff ff       	call   4680 <_Unwind_Resume@plt>
  }
    498e:	48 89 c3             	mov    %rax,%rbx
    4991:	e8 7a fc ff ff       	call   4610 <__cxa_end_catch@plt>
    4996:	48 89 d8             	mov    %rbx,%rax
    4999:	48 89 c7             	mov    %rax,%rdi
    499c:	e8 df fc ff ff       	call   4680 <_Unwind_Resume@plt>
    49a1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49a5:	c9                   	leave
    49a6:	c3                   	ret

00000000000049a7 <_Z41__static_initialization_and_destruction_0ii>:
    49a7:	55                   	push   %rbp
    49a8:	48 89 e5             	mov    %rsp,%rbp
    49ab:	48 83 ec 10          	sub    $0x10,%rsp
    49af:	89 7d fc             	mov    %edi,-0x4(%rbp)
    49b2:	89 75 f8             	mov    %esi,-0x8(%rbp)
    49b5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    49b9:	75 3b                	jne    49f6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    49bb:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    49c2:	75 32                	jne    49f6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    49c4:	48 8d 05 26 dc 01 00 	lea    0x1dc26(%rip),%rax        # 225f1 <_ZStL8__ioinit>
    49cb:	48 89 c7             	mov    %rax,%rdi
    49ce:	e8 bd fb ff ff       	call   4590 <_ZNSt8ios_base4InitC1Ev@plt>
    49d3:	48 8d 05 9e d9 01 00 	lea    0x1d99e(%rip),%rax        # 22378 <__dso_handle>
    49da:	48 89 c2             	mov    %rax,%rdx
    49dd:	48 8d 05 0d dc 01 00 	lea    0x1dc0d(%rip),%rax        # 225f1 <_ZStL8__ioinit>
    49e4:	48 89 c6             	mov    %rax,%rsi
    49e7:	48 8b 05 da d5 01 00 	mov    0x1d5da(%rip),%rax        # 21fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    49ee:	48 89 c7             	mov    %rax,%rdi
    49f1:	e8 da f8 ff ff       	call   42d0 <__cxa_atexit@plt>
    49f6:	90                   	nop
    49f7:	c9                   	leave
    49f8:	c3                   	ret

00000000000049f9 <_GLOBAL__sub_I__Z14protected_mainv>:
    49f9:	55                   	push   %rbp
    49fa:	48 89 e5             	mov    %rsp,%rbp
    49fd:	be ff ff 00 00       	mov    $0xffff,%esi
    4a02:	bf 01 00 00 00       	mov    $0x1,%edi
    4a07:	e8 9b ff ff ff       	call   49a7 <_Z41__static_initialization_and_destruction_0ii>
    4a0c:	5d                   	pop    %rbp
    4a0d:	c3                   	ret

0000000000004a0e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4a0e:	55                   	push   %rbp
    4a0f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4a12:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4a17:	5d                   	pop    %rbp
    4a18:	c3                   	ret

0000000000004a19 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4a19:	55                   	push   %rbp
    4a1a:	48 89 e5             	mov    %rsp,%rbp
    4a1d:	48 83 ec 10          	sub    $0x10,%rsp
    4a21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4a25:	e8 e4 ff ff ff       	call   4a0e <_ZSt23__is_constant_evaluatedv>
    4a2a:	84 c0                	test   %al,%al
    4a2c:	74 0e                	je     4a3c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a32:	48 89 c7             	mov    %rax,%rdi
    4a35:	e8 12 00 00 00       	call   4a4c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4a3a:	eb 0d                	jmp    4a49 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4a3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a40:	48 89 c7             	mov    %rax,%rdi
    4a43:	e8 f8 f6 ff ff       	call   4140 <strlen@plt>
    4a48:	90                   	nop
      }
    4a49:	c9                   	leave
    4a4a:	c3                   	ret
    4a4b:	90                   	nop

0000000000004a4c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4a4c:	55                   	push   %rbp
    4a4d:	48 89 e5             	mov    %rsp,%rbp
    4a50:	48 83 ec 20          	sub    $0x20,%rsp
    4a54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4a58:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4a5f:	00 
      while (!eq(__p[__i], char_type()))
    4a60:	eb 05                	jmp    4a67 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4a62:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4a67:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4a6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a73:	48 01 c2             	add    %rax,%rdx
    4a76:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4a7a:	48 89 c6             	mov    %rax,%rsi
    4a7d:	48 89 d7             	mov    %rdx,%rdi
    4a80:	e8 0d 00 00 00       	call   4a92 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4a85:	83 f0 01             	xor    $0x1,%eax
    4a88:	84 c0                	test   %al,%al
    4a8a:	75 d6                	jne    4a62 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4a90:	c9                   	leave
    4a91:	c3                   	ret

0000000000004a92 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4a92:	55                   	push   %rbp
    4a93:	48 89 e5             	mov    %rsp,%rbp
    4a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa2:	0f b6 10             	movzbl (%rax),%edx
    4aa5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4aa9:	0f b6 00             	movzbl (%rax),%eax
    4aac:	38 c2                	cmp    %al,%dl
    4aae:	0f 94 c0             	sete   %al
    4ab1:	5d                   	pop    %rbp
    4ab2:	c3                   	ret
    4ab3:	90                   	nop

0000000000004ab4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4ab4:	55                   	push   %rbp
    4ab5:	48 89 e5             	mov    %rsp,%rbp
    4ab8:	48 83 ec 10          	sub    $0x10,%rsp
    4abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ac4:	48 89 c7             	mov    %rax,%rdi
    4ac7:	e8 94 f5 ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    4acc:	90                   	nop
    4acd:	c9                   	leave
    4ace:	c3                   	ret
    4acf:	90                   	nop

0000000000004ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4ad0:	55                   	push   %rbp
    4ad1:	48 89 e5             	mov    %rsp,%rbp
    4ad4:	53                   	push   %rbx
    4ad5:	48 83 ec 38          	sub    $0x38,%rsp
    4ad9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4add:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4ae1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4ae5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4ae9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4aed:	48 89 c7             	mov    %rax,%rdi
    4af0:	e8 7b f7 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4af5:	48 89 c1             	mov    %rax,%rcx
    4af8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4afc:	48 89 c2             	mov    %rax,%rdx
    4aff:	48 89 ce             	mov    %rcx,%rsi
    4b02:	48 89 df             	mov    %rbx,%rdi
    4b05:	e8 a6 f8 ff ff       	call   43b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4b0a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4b0f:	75 0f                	jne    4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4b11:	48 8d 05 f0 fa 00 00 	lea    0xfaf0(%rip),%rax        # 14608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4b18:	48 89 c7             	mov    %rax,%rdi
    4b1b:	e8 f0 f6 ff ff       	call   4210 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4b20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b24:	48 89 c7             	mov    %rax,%rdi
    4b27:	e8 ed fe ff ff       	call   4a19 <_ZNSt11char_traitsIcE6lengthEPKc>
    4b2c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4b30:	48 01 d0             	add    %rdx,%rax
    4b33:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4b37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b3b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4b3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b43:	48 89 ce             	mov    %rcx,%rsi
    4b46:	48 89 c7             	mov    %rax,%rdi
    4b49:	e8 66 00 00 00       	call   4bb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4b4e:	eb 1a                	jmp    4b6a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4b50:	48 89 c3             	mov    %rax,%rbx
    4b53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b57:	48 89 c7             	mov    %rax,%rdi
    4b5a:	e8 55 ff ff ff       	call   4ab4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4b5f:	48 89 d8             	mov    %rbx,%rax
    4b62:	48 89 c7             	mov    %rax,%rdi
    4b65:	e8 16 fb ff ff       	call   4680 <_Unwind_Resume@plt>
    4b6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b6e:	c9                   	leave
    4b6f:	c3                   	ret

0000000000004b70 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4b70:	55                   	push   %rbp
    4b71:	48 89 e5             	mov    %rsp,%rbp
    4b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b80:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4b84:	48 89 10             	mov    %rdx,(%rax)
    4b87:	90                   	nop
    4b88:	5d                   	pop    %rbp
    4b89:	c3                   	ret

0000000000004b8a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4b8a:	55                   	push   %rbp
    4b8b:	48 89 e5             	mov    %rsp,%rbp
    4b8e:	48 83 ec 10          	sub    $0x10,%rsp
    4b92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b9a:	48 8b 00             	mov    (%rax),%rax
    4b9d:	48 85 c0             	test   %rax,%rax
    4ba0:	74 0f                	je     4bb1 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ba6:	48 8b 00             	mov    (%rax),%rax
    4ba9:	48 89 c7             	mov    %rax,%rdi
    4bac:	e8 df f8 ff ff       	call   4490 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4bb1:	90                   	nop
    4bb2:	c9                   	leave
    4bb3:	c3                   	ret

0000000000004bb4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4bb4:	55                   	push   %rbp
    4bb5:	48 89 e5             	mov    %rsp,%rbp
    4bb8:	48 83 ec 40          	sub    $0x40,%rsp
    4bbc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4bc0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4bc4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4bc8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4bcc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4bd0:	48 89 d6             	mov    %rdx,%rsi
    4bd3:	48 89 c7             	mov    %rax,%rdi
    4bd6:	e8 c0 00 00 00       	call   4c9b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4bdb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4bdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4be3:	48 83 f8 0f          	cmp    $0xf,%rax
    4be7:	76 3f                	jbe    4c28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4be9:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4bed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bf1:	ba 00 00 00 00       	mov    $0x0,%edx
    4bf6:	48 89 ce             	mov    %rcx,%rsi
    4bf9:	48 89 c7             	mov    %rax,%rdi
    4bfc:	e8 af fa ff ff       	call   46b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4c01:	48 89 c2             	mov    %rax,%rdx
    4c04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c08:	48 89 d6             	mov    %rdx,%rsi
    4c0b:	48 89 c7             	mov    %rax,%rdi
    4c0e:	e8 8d f6 ff ff       	call   42a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4c13:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c1b:	48 89 d6             	mov    %rdx,%rsi
    4c1e:	48 89 c7             	mov    %rax,%rdi
    4c21:	e8 da fa ff ff       	call   4700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4c26:	eb 15                	jmp    4c3d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4c28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c34:	48 89 c7             	mov    %rax,%rdi
    4c37:	e8 34 f6 ff ff       	call   4270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4c3c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4c3d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4c41:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4c45:	48 89 d6             	mov    %rdx,%rsi
    4c48:	48 89 c7             	mov    %rax,%rdi
    4c4b:	e8 20 ff ff ff       	call   4b70 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4c50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c54:	48 89 c7             	mov    %rax,%rdi
    4c57:	e8 a4 f7 ff ff       	call   4400 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4c5c:	48 89 c1             	mov    %rax,%rcx
    4c5f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c63:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c67:	48 89 c6             	mov    %rax,%rsi
    4c6a:	48 89 cf             	mov    %rcx,%rdi
    4c6d:	e8 9e f7 ff ff       	call   4410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4c72:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4c79:	00 

	_M_set_length(__dnew);
    4c7a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c7e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c82:	48 89 d6             	mov    %rdx,%rsi
    4c85:	48 89 c7             	mov    %rax,%rdi
    4c88:	e8 53 f5 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4c8d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4c91:	48 89 c7             	mov    %rax,%rdi
    4c94:	e8 f1 fe ff ff       	call   4b8a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4c99:	c9                   	leave
    4c9a:	c3                   	ret

0000000000004c9b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4c9b:	55                   	push   %rbp
    4c9c:	48 89 e5             	mov    %rsp,%rbp
    4c9f:	48 83 ec 10          	sub    $0x10,%rsp
    4ca3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ca7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4cab:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4caf:	48 89 c7             	mov    %rax,%rdi
    4cb2:	e8 15 00 00 00       	call   4ccc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cbb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cbf:	48 89 d6             	mov    %rdx,%rsi
    4cc2:	48 89 c7             	mov    %rax,%rdi
    4cc5:	e8 0d 00 00 00       	call   4cd7 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4cca:	c9                   	leave
    4ccb:	c3                   	ret

0000000000004ccc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4ccc:	55                   	push   %rbp
    4ccd:	48 89 e5             	mov    %rsp,%rbp
    4cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4cd4:	90                   	nop
    4cd5:	5d                   	pop    %rbp
    4cd6:	c3                   	ret

0000000000004cd7 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4cd7:	55                   	push   %rbp
    4cd8:	48 89 e5             	mov    %rsp,%rbp
    4cdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cdf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4ce3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ce7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4ceb:	5d                   	pop    %rbp
    4cec:	c3                   	ret

0000000000004ced <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4ced:	55                   	push   %rbp
    4cee:	48 89 e5             	mov    %rsp,%rbp
    4cf1:	41 54                	push   %r12
    4cf3:	53                   	push   %rbx
    4cf4:	48 83 ec 30          	sub    $0x30,%rsp
    4cf8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4cfc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d00:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4d04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d08:	8b 40 1c             	mov    0x1c(%rax),%eax
    4d0b:	89 c3                	mov    %eax,%ebx
    4d0d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d11:	48 89 c7             	mov    %rax,%rdi
    4d14:	e8 13 01 00 00       	call   4e2c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4d19:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d21:	48 89 de             	mov    %rbx,%rsi
    4d24:	48 89 c7             	mov    %rax,%rdi
    4d27:	e8 38 01 00 00       	call   4e64 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4d2c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d30:	48 89 c7             	mov    %rax,%rdi
    4d33:	e8 10 01 00 00       	call   4e48 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4d38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d3c:	48 89 c7             	mov    %rax,%rdi
    4d3f:	e8 da 01 00 00       	call   4f1e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4d44:	48 89 c2             	mov    %rax,%rdx
    4d47:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4d4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d4f:	48 89 ce             	mov    %rcx,%rsi
    4d52:	48 89 c7             	mov    %rax,%rdi
    4d55:	e8 96 f5 ff ff       	call   42f0 <vkAllocateCommandBuffers@plt>
    4d5a:	85 c0                	test   %eax,%eax
    4d5c:	0f 95 c0             	setne  %al
    4d5f:	84 c0                	test   %al,%al
    4d61:	74 7f                	je     4de2 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4d63:	bf 10 00 00 00       	mov    $0x10,%edi
    4d68:	e8 f3 f3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    4d6d:	48 89 c3             	mov    %rax,%rbx
    4d70:	48 8d 05 a1 fe 00 00 	lea    0xfea1(%rip),%rax        # 14c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4d77:	48 89 c6             	mov    %rax,%rsi
    4d7a:	48 89 df             	mov    %rbx,%rdi
    4d7d:	e8 7e f3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4d82:	48 8b 05 1f d2 01 00 	mov    0x1d21f(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4d89:	48 89 c2             	mov    %rax,%rdx
    4d8c:	48 8d 05 ad cf 01 00 	lea    0x1cfad(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4d93:	48 89 c6             	mov    %rax,%rsi
    4d96:	48 89 df             	mov    %rbx,%rdi
    4d99:	e8 82 f8 ff ff       	call   4620 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4d9e:	48 89 c3             	mov    %rax,%rbx
    4da1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4da5:	48 89 c7             	mov    %rax,%rdi
    4da8:	e8 9b 00 00 00       	call   4e48 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4dad:	48 89 d8             	mov    %rbx,%rax
    4db0:	48 89 c7             	mov    %rax,%rdi
    4db3:	e8 c8 f8 ff ff       	call   4680 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4db8:	49 89 c4             	mov    %rax,%r12
    4dbb:	48 89 df             	mov    %rbx,%rdi
    4dbe:	e8 5d f4 ff ff       	call   4220 <__cxa_free_exception@plt>
    4dc3:	4c 89 e3             	mov    %r12,%rbx
    4dc6:	eb 03                	jmp    4dcb <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4dc8:	48 89 c3             	mov    %rax,%rbx
    4dcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dcf:	48 89 c7             	mov    %rax,%rdi
    4dd2:	e8 03 01 00 00       	call   4eda <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4dd7:	48 89 d8             	mov    %rbx,%rax
    4dda:	48 89 c7             	mov    %rax,%rdi
    4ddd:	e8 9e f8 ff ff       	call   4680 <_Unwind_Resume@plt>
  return commandBuffers;
    4de2:	90                   	nop
}
    4de3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4de7:	48 83 c4 30          	add    $0x30,%rsp
    4deb:	5b                   	pop    %rbx
    4dec:	41 5c                	pop    %r12
    4dee:	5d                   	pop    %rbp
    4def:	c3                   	ret

0000000000004df0 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4df0:	55                   	push   %rbp
    4df1:	48 89 e5             	mov    %rsp,%rbp
    4df4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4df8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4dfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e00:	5d                   	pop    %rbp
    4e01:	c3                   	ret

0000000000004e02 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e02:	55                   	push   %rbp
    4e03:	48 89 e5             	mov    %rsp,%rbp
    4e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e0e:	5d                   	pop    %rbp
    4e0f:	c3                   	ret

0000000000004e10 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4e10:	55                   	push   %rbp
    4e11:	48 89 e5             	mov    %rsp,%rbp
    4e14:	48 83 ec 10          	sub    $0x10,%rsp
    4e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e20:	48 89 c7             	mov    %rax,%rdi
    4e23:	e8 20 00 00 00       	call   4e48 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e28:	90                   	nop
    4e29:	c9                   	leave
    4e2a:	c3                   	ret
    4e2b:	90                   	nop

0000000000004e2c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4e2c:	55                   	push   %rbp
    4e2d:	48 89 e5             	mov    %rsp,%rbp
    4e30:	48 83 ec 10          	sub    $0x10,%rsp
    4e34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e3c:	48 89 c7             	mov    %rax,%rdi
    4e3f:	e8 4c 01 00 00       	call   4f90 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    4e44:	90                   	nop
    4e45:	c9                   	leave
    4e46:	c3                   	ret
    4e47:	90                   	nop

0000000000004e48 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4e48:	55                   	push   %rbp
    4e49:	48 89 e5             	mov    %rsp,%rbp
    4e4c:	48 83 ec 10          	sub    $0x10,%rsp
    4e50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e58:	48 89 c7             	mov    %rax,%rdi
    4e5b:	e8 3c 01 00 00       	call   4f9c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    4e60:	90                   	nop
    4e61:	c9                   	leave
    4e62:	c3                   	ret
    4e63:	90                   	nop

0000000000004e64 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4e64:	55                   	push   %rbp
    4e65:	48 89 e5             	mov    %rsp,%rbp
    4e68:	53                   	push   %rbx
    4e69:	48 83 ec 28          	sub    $0x28,%rsp
    4e6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4e71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4e75:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4e79:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4e7d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4e81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e85:	48 89 d6             	mov    %rdx,%rsi
    4e88:	48 89 c7             	mov    %rax,%rdi
    4e8b:	e8 17 01 00 00       	call   4fa7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4e90:	48 89 c1             	mov    %rax,%rcx
    4e93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e97:	48 89 c2             	mov    %rax,%rdx
    4e9a:	48 89 ce             	mov    %rcx,%rsi
    4e9d:	48 89 df             	mov    %rbx,%rdi
    4ea0:	e8 63 01 00 00       	call   5008 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4ea5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ea9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ead:	48 89 d6             	mov    %rdx,%rsi
    4eb0:	48 89 c7             	mov    %rax,%rdi
    4eb3:	e8 ae 01 00 00       	call   5066 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    4eb8:	eb 1a                	jmp    4ed4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    4eba:	48 89 c3             	mov    %rax,%rbx
    4ebd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ec1:	48 89 c7             	mov    %rax,%rdi
    4ec4:	e8 79 00 00 00       	call   4f42 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4ec9:	48 89 d8             	mov    %rbx,%rax
    4ecc:	48 89 c7             	mov    %rax,%rdi
    4ecf:	e8 ac f7 ff ff       	call   4680 <_Unwind_Resume@plt>
    4ed4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ed8:	c9                   	leave
    4ed9:	c3                   	ret

0000000000004eda <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4eda:	55                   	push   %rbp
    4edb:	48 89 e5             	mov    %rsp,%rbp
    4ede:	48 83 ec 10          	sub    $0x10,%rsp
    4ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eea:	48 89 c7             	mov    %rax,%rdi
    4eed:	e8 b4 01 00 00       	call   50a6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4ef2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ef9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4efd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f01:	48 8b 00             	mov    (%rax),%rax
    4f04:	48 89 ce             	mov    %rcx,%rsi
    4f07:	48 89 c7             	mov    %rax,%rdi
    4f0a:	e8 a5 01 00 00       	call   50b4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f13:	48 89 c7             	mov    %rax,%rdi
    4f16:	e8 27 00 00 00       	call   4f42 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f1b:	90                   	nop
    4f1c:	c9                   	leave
    4f1d:	c3                   	ret

0000000000004f1e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4f1e:	55                   	push   %rbp
    4f1f:	48 89 e5             	mov    %rsp,%rbp
    4f22:	48 83 ec 10          	sub    $0x10,%rsp
    4f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f2e:	48 8b 10             	mov    (%rax),%rdx
    4f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f35:	48 89 d6             	mov    %rdx,%rsi
    4f38:	48 89 c7             	mov    %rax,%rdi
    4f3b:	e8 9e 01 00 00       	call   50de <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    4f40:	c9                   	leave
    4f41:	c3                   	ret

0000000000004f42 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4f42:	55                   	push   %rbp
    4f43:	48 89 e5             	mov    %rsp,%rbp
    4f46:	48 83 ec 10          	sub    $0x10,%rsp
    4f4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f52:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5a:	48 8b 00             	mov    (%rax),%rax
    4f5d:	48 29 c2             	sub    %rax,%rdx
    4f60:	48 89 d0             	mov    %rdx,%rax
    4f63:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4f67:	48 89 c2             	mov    %rax,%rdx
    4f6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f6e:	48 8b 08             	mov    (%rax),%rcx
    4f71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f75:	48 89 ce             	mov    %rcx,%rsi
    4f78:	48 89 c7             	mov    %rax,%rdi
    4f7b:	e8 96 01 00 00       	call   5116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f84:	48 89 c7             	mov    %rax,%rdi
    4f87:	e8 84 fe ff ff       	call   4e10 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    4f8c:	90                   	nop
    4f8d:	c9                   	leave
    4f8e:	c3                   	ret
    4f8f:	90                   	nop

0000000000004f90 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4f90:	55                   	push   %rbp
    4f91:	48 89 e5             	mov    %rsp,%rbp
    4f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f98:	90                   	nop
    4f99:	5d                   	pop    %rbp
    4f9a:	c3                   	ret
    4f9b:	90                   	nop

0000000000004f9c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4f9c:	55                   	push   %rbp
    4f9d:	48 89 e5             	mov    %rsp,%rbp
    4fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fa4:	90                   	nop
    4fa5:	5d                   	pop    %rbp
    4fa6:	c3                   	ret

0000000000004fa7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4fa7:	55                   	push   %rbp
    4fa8:	48 89 e5             	mov    %rsp,%rbp
    4fab:	53                   	push   %rbx
    4fac:	48 83 ec 28          	sub    $0x28,%rsp
    4fb0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4fb4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    4fb8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4fbc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4fc0:	48 89 d6             	mov    %rdx,%rsi
    4fc3:	48 89 c7             	mov    %rax,%rdi
    4fc6:	e8 25 01 00 00       	call   50f0 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    4fcb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4fcf:	48 89 c7             	mov    %rax,%rdi
    4fd2:	e8 74 01 00 00       	call   514b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    4fd7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    4fdb:	0f 92 c3             	setb   %bl
    4fde:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4fe2:	48 89 c7             	mov    %rax,%rdi
    4fe5:	e8 5e fe ff ff       	call   4e48 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4fea:	84 db                	test   %bl,%bl
    4fec:	74 0f                	je     4ffd <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    4fee:	48 8d 05 4b fc 00 00 	lea    0xfc4b(%rip),%rax        # 14c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    4ff5:	48 89 c7             	mov    %rax,%rdi
    4ff8:	e8 73 f1 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    4ffd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5001:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5005:	c9                   	leave
    5006:	c3                   	ret
    5007:	90                   	nop

0000000000005008 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5008:	55                   	push   %rbp
    5009:	48 89 e5             	mov    %rsp,%rbp
    500c:	53                   	push   %rbx
    500d:	48 83 ec 28          	sub    $0x28,%rsp
    5011:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5015:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5019:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    501d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5021:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5025:	48 89 d6             	mov    %rdx,%rsi
    5028:	48 89 c7             	mov    %rax,%rdi
    502b:	e8 5e 01 00 00       	call   518e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5030:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5034:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5038:	48 89 d6             	mov    %rdx,%rsi
    503b:	48 89 c7             	mov    %rax,%rdi
    503e:	e8 7d 01 00 00       	call   51c0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    5043:	eb 1a                	jmp    505f <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    5045:	48 89 c3             	mov    %rax,%rbx
    5048:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    504c:	48 89 c7             	mov    %rax,%rdi
    504f:	e8 bc fd ff ff       	call   4e10 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5054:	48 89 d8             	mov    %rbx,%rax
    5057:	48 89 c7             	mov    %rax,%rdi
    505a:	e8 21 f6 ff ff       	call   4680 <_Unwind_Resume@plt>
    505f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5063:	c9                   	leave
    5064:	c3                   	ret
    5065:	90                   	nop

0000000000005066 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5066:	55                   	push   %rbp
    5067:	48 89 e5             	mov    %rsp,%rbp
    506a:	48 83 ec 10          	sub    $0x10,%rsp
    506e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5072:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    507a:	48 89 c7             	mov    %rax,%rdi
    507d:	e8 24 00 00 00       	call   50a6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5082:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5089:	48 8b 00             	mov    (%rax),%rax
    508c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5090:	48 89 ce             	mov    %rcx,%rsi
    5093:	48 89 c7             	mov    %rax,%rdi
    5096:	e8 7b 01 00 00       	call   5216 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    509b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    509f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    50a3:	90                   	nop
    50a4:	c9                   	leave
    50a5:	c3                   	ret

00000000000050a6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    50a6:	55                   	push   %rbp
    50a7:	48 89 e5             	mov    %rsp,%rbp
    50aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    50ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50b2:	5d                   	pop    %rbp
    50b3:	c3                   	ret

00000000000050b4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    50b4:	55                   	push   %rbp
    50b5:	48 89 e5             	mov    %rsp,%rbp
    50b8:	48 83 ec 20          	sub    $0x20,%rsp
    50bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    50c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    50c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    50cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50d0:	48 89 d6             	mov    %rdx,%rsi
    50d3:	48 89 c7             	mov    %rax,%rdi
    50d6:	e8 64 01 00 00       	call   523f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    50db:	90                   	nop
    50dc:	c9                   	leave
    50dd:	c3                   	ret

00000000000050de <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    50de:	55                   	push   %rbp
    50df:	48 89 e5             	mov    %rsp,%rbp
    50e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    50ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50ee:	5d                   	pop    %rbp
    50ef:	c3                   	ret

00000000000050f0 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    50f0:	55                   	push   %rbp
    50f1:	48 89 e5             	mov    %rsp,%rbp
    50f4:	48 83 ec 10          	sub    $0x10,%rsp
    50f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5100:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5108:	48 89 d6             	mov    %rdx,%rsi
    510b:	48 89 c7             	mov    %rax,%rdi
    510e:	e8 53 01 00 00       	call   5266 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5113:	90                   	nop
    5114:	c9                   	leave
    5115:	c3                   	ret

0000000000005116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5116:	55                   	push   %rbp
    5117:	48 89 e5             	mov    %rsp,%rbp
    511a:	48 83 ec 20          	sub    $0x20,%rsp
    511e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5122:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5126:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    512a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    512f:	74 17                	je     5148 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5135:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5139:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    513d:	48 89 ce             	mov    %rcx,%rsi
    5140:	48 89 c7             	mov    %rax,%rdi
    5143:	e8 2d 01 00 00       	call   5275 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5148:	90                   	nop
    5149:	c9                   	leave
    514a:	c3                   	ret

000000000000514b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    514b:	55                   	push   %rbp
    514c:	48 89 e5             	mov    %rsp,%rbp
    514f:	48 83 ec 20          	sub    $0x20,%rsp
    5153:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5157:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    515e:	ff ff 0f 
    5161:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5165:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5169:	48 89 c7             	mov    %rax,%rdi
    516c:	e8 32 01 00 00       	call   52a3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    5171:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5175:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5179:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    517d:	48 89 d6             	mov    %rdx,%rsi
    5180:	48 89 c7             	mov    %rax,%rdi
    5183:	e8 35 01 00 00       	call   52bd <_ZSt3minImERKT_S2_S2_>
    5188:	48 8b 00             	mov    (%rax),%rax
      }
    518b:	c9                   	leave
    518c:	c3                   	ret
    518d:	90                   	nop

000000000000518e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    518e:	55                   	push   %rbp
    518f:	48 89 e5             	mov    %rsp,%rbp
    5192:	48 83 ec 10          	sub    $0x10,%rsp
    5196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    519a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    519e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    51a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a6:	48 89 d6             	mov    %rdx,%rsi
    51a9:	48 89 c7             	mov    %rax,%rdi
    51ac:	e8 3f ff ff ff       	call   50f0 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    51b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51b5:	48 89 c7             	mov    %rax,%rdi
    51b8:	e8 2b 01 00 00       	call   52e8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    51bd:	90                   	nop
    51be:	c9                   	leave
    51bf:	c3                   	ret

00000000000051c0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    51c0:	55                   	push   %rbp
    51c1:	48 89 e5             	mov    %rsp,%rbp
    51c4:	48 83 ec 10          	sub    $0x10,%rsp
    51c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    51d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    51d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51d8:	48 89 d6             	mov    %rdx,%rsi
    51db:	48 89 c7             	mov    %rax,%rdi
    51de:	e8 33 01 00 00       	call   5316 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    51e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    51e7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    51ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ee:	48 8b 10             	mov    (%rax),%rdx
    51f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    51f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51fd:	48 8b 00             	mov    (%rax),%rax
    5200:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5204:	48 c1 e2 03          	shl    $0x3,%rdx
    5208:	48 01 c2             	add    %rax,%rdx
    520b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    520f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5213:	90                   	nop
    5214:	c9                   	leave
    5215:	c3                   	ret

0000000000005216 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5216:	55                   	push   %rbp
    5217:	48 89 e5             	mov    %rsp,%rbp
    521a:	48 83 ec 20          	sub    $0x20,%rsp
    521e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5222:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5226:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    522a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    522e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5232:	48 89 d6             	mov    %rdx,%rsi
    5235:	48 89 c7             	mov    %rax,%rdi
    5238:	e8 0c 01 00 00       	call   5349 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    523d:	c9                   	leave
    523e:	c3                   	ret

000000000000523f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    523f:	55                   	push   %rbp
    5240:	48 89 e5             	mov    %rsp,%rbp
    5243:	48 83 ec 10          	sub    $0x10,%rsp
    5247:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    524b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    524f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5257:	48 89 d6             	mov    %rdx,%rsi
    525a:	48 89 c7             	mov    %rax,%rdi
    525d:	e8 10 01 00 00       	call   5372 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    5262:	90                   	nop
    5263:	c9                   	leave
    5264:	c3                   	ret
    5265:	90                   	nop

0000000000005266 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5266:	55                   	push   %rbp
    5267:	48 89 e5             	mov    %rsp,%rbp
    526a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    526e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5272:	90                   	nop
    5273:	5d                   	pop    %rbp
    5274:	c3                   	ret

0000000000005275 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5275:	55                   	push   %rbp
    5276:	48 89 e5             	mov    %rsp,%rbp
    5279:	48 83 ec 20          	sub    $0x20,%rsp
    527d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5281:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5285:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5289:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    528d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5295:	48 89 ce             	mov    %rcx,%rsi
    5298:	48 89 c7             	mov    %rax,%rdi
    529b:	e8 e2 00 00 00       	call   5382 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    52a0:	90                   	nop
    52a1:	c9                   	leave
    52a2:	c3                   	ret

00000000000052a3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    52a3:	55                   	push   %rbp
    52a4:	48 89 e5             	mov    %rsp,%rbp
    52a7:	48 83 ec 10          	sub    $0x10,%rsp
    52ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    52af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52b3:	48 89 c7             	mov    %rax,%rdi
    52b6:	e8 f9 00 00 00       	call   53b4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    52bb:	c9                   	leave
    52bc:	c3                   	ret

00000000000052bd <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    52bd:	55                   	push   %rbp
    52be:	48 89 e5             	mov    %rsp,%rbp
    52c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    52c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52cd:	48 8b 10             	mov    (%rax),%rdx
    52d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52d4:	48 8b 00             	mov    (%rax),%rax
    52d7:	48 39 c2             	cmp    %rax,%rdx
    52da:	73 06                	jae    52e2 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    52dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52e0:	eb 04                	jmp    52e6 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    52e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    52e6:	5d                   	pop    %rbp
    52e7:	c3                   	ret

00000000000052e8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    52e8:	55                   	push   %rbp
    52e9:	48 89 e5             	mov    %rsp,%rbp
    52ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    52f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52f4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    52fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52ff:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5306:	00 
    5307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    530b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5312:	00 
	{ }
    5313:	90                   	nop
    5314:	5d                   	pop    %rbp
    5315:	c3                   	ret

0000000000005316 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5316:	55                   	push   %rbp
    5317:	48 89 e5             	mov    %rsp,%rbp
    531a:	48 83 ec 10          	sub    $0x10,%rsp
    531e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5322:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5326:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    532b:	74 15                	je     5342 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    532d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5331:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5335:	48 89 d6             	mov    %rdx,%rsi
    5338:	48 89 c7             	mov    %rax,%rdi
    533b:	e8 8e 00 00 00       	call   53ce <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    5340:	eb 05                	jmp    5347 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    5342:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5347:	c9                   	leave
    5348:	c3                   	ret

0000000000005349 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5349:	55                   	push   %rbp
    534a:	48 89 e5             	mov    %rsp,%rbp
    534d:	48 83 ec 20          	sub    $0x20,%rsp
    5351:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5355:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    5359:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    535d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5365:	48 89 d6             	mov    %rdx,%rsi
    5368:	48 89 c7             	mov    %rax,%rdi
    536b:	e8 88 00 00 00       	call   53f8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    5370:	c9                   	leave
    5371:	c3                   	ret

0000000000005372 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    5372:	55                   	push   %rbp
    5373:	48 89 e5             	mov    %rsp,%rbp
    5376:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    537a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    537e:	90                   	nop
    537f:	5d                   	pop    %rbp
    5380:	c3                   	ret
    5381:	90                   	nop

0000000000005382 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5382:	55                   	push   %rbp
    5383:	48 89 e5             	mov    %rsp,%rbp
    5386:	48 83 ec 20          	sub    $0x20,%rsp
    538a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    538e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5392:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5396:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    539a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    53a1:	00 
    53a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    53a6:	48 89 d6             	mov    %rdx,%rsi
    53a9:	48 89 c7             	mov    %rax,%rdi
    53ac:	e8 9f ef ff ff       	call   4350 <_ZdlPvm@plt>
      }
    53b1:	c9                   	leave
    53b2:	c3                   	ret
    53b3:	90                   	nop

00000000000053b4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    53b4:	55                   	push   %rbp
    53b5:	48 89 e5             	mov    %rsp,%rbp
    53b8:	48 83 ec 10          	sub    $0x10,%rsp
    53bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    53c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53c4:	48 89 c7             	mov    %rax,%rdi
    53c7:	e8 8a 00 00 00       	call   5456 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    53cc:	c9                   	leave
    53cd:	c3                   	ret

00000000000053ce <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    53ce:	55                   	push   %rbp
    53cf:	48 89 e5             	mov    %rsp,%rbp
    53d2:	48 83 ec 10          	sub    $0x10,%rsp
    53d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    53de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    53e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e6:	ba 00 00 00 00       	mov    $0x0,%edx
    53eb:	48 89 ce             	mov    %rcx,%rsi
    53ee:	48 89 c7             	mov    %rax,%rdi
    53f1:	e8 74 00 00 00       	call   546a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    53f6:	c9                   	leave
    53f7:	c3                   	ret

00000000000053f8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    53f8:	55                   	push   %rbp
    53f9:	48 89 e5             	mov    %rsp,%rbp
    53fc:	48 83 ec 20          	sub    $0x20,%rsp
    5400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5404:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5408:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    540d:	74 40                	je     544f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    540f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5413:	48 89 c7             	mov    %rax,%rdi
    5416:	e8 b0 00 00 00       	call   54cb <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    541b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    541f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5423:	48 89 c7             	mov    %rax,%rdi
    5426:	e8 ae 00 00 00       	call   54d9 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    542b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5430:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5434:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5438:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    543c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5440:	48 89 ce             	mov    %rcx,%rsi
    5443:	48 89 c7             	mov    %rax,%rdi
    5446:	e8 b5 00 00 00       	call   5500 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    544b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    544f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5453:	c9                   	leave
    5454:	c3                   	ret
    5455:	90                   	nop

0000000000005456 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5456:	55                   	push   %rbp
    5457:	48 89 e5             	mov    %rsp,%rbp
    545a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    545e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    5465:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5468:	5d                   	pop    %rbp
    5469:	c3                   	ret

000000000000546a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    546a:	55                   	push   %rbp
    546b:	48 89 e5             	mov    %rsp,%rbp
    546e:	48 83 ec 20          	sub    $0x20,%rsp
    5472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    547a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    547e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5482:	48 89 c7             	mov    %rax,%rdi
    5485:	e8 cc ff ff ff       	call   5456 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    548a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    548e:	0f 92 c0             	setb   %al
    5491:	0f b6 c0             	movzbl %al,%eax
    5494:	48 85 c0             	test   %rax,%rax
    5497:	0f 95 c0             	setne  %al
    549a:	84 c0                	test   %al,%al
    549c:	74 1a                	je     54b8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    549e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    54a5:	ff ff 1f 
    54a8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54ac:	73 05                	jae    54b3 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    54ae:	e8 9d ed ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    54b3:	e8 28 ec ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    54b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54bc:	48 c1 e0 03          	shl    $0x3,%rax
    54c0:	48 89 c7             	mov    %rax,%rdi
    54c3:	e8 78 ee ff ff       	call   4340 <_Znwm@plt>
    54c8:	90                   	nop
      }
    54c9:	c9                   	leave
    54ca:	c3                   	ret

00000000000054cb <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    54cb:	55                   	push   %rbp
    54cc:	48 89 e5             	mov    %rsp,%rbp
    54cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    54d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d7:	5d                   	pop    %rbp
    54d8:	c3                   	ret

00000000000054d9 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    54d9:	55                   	push   %rbp
    54da:	48 89 e5             	mov    %rsp,%rbp
    54dd:	48 83 ec 10          	sub    $0x10,%rsp
    54e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    54e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54e9:	48 89 c6             	mov    %rax,%rsi
    54ec:	bf 08 00 00 00       	mov    $0x8,%edi
    54f1:	e8 fa f8 ff ff       	call   4df0 <_ZnwmPv>
    54f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    54fd:	90                   	nop
    54fe:	c9                   	leave
    54ff:	c3                   	ret

0000000000005500 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5500:	55                   	push   %rbp
    5501:	48 89 e5             	mov    %rsp,%rbp
    5504:	48 83 ec 20          	sub    $0x20,%rsp
    5508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    550c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5510:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5514:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5518:	48 89 c7             	mov    %rax,%rdi
    551b:	e8 24 00 00 00       	call   5544 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5520:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5524:	48 89 c7             	mov    %rax,%rdi
    5527:	e8 d6 f8 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    552c:	48 89 c1             	mov    %rax,%rcx
    552f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5533:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5537:	48 89 ce             	mov    %rcx,%rsi
    553a:	48 89 c7             	mov    %rax,%rdi
    553d:	e8 0d 00 00 00       	call   554f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    5542:	c9                   	leave
    5543:	c3                   	ret

0000000000005544 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5544:	55                   	push   %rbp
    5545:	48 89 e5             	mov    %rsp,%rbp
    5548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    554c:	90                   	nop
    554d:	5d                   	pop    %rbp
    554e:	c3                   	ret

000000000000554f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    554f:	55                   	push   %rbp
    5550:	48 89 e5             	mov    %rsp,%rbp
    5553:	48 83 ec 20          	sub    $0x20,%rsp
    5557:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    555b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    555f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5563:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5568:	75 06                	jne    5570 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    556a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    556e:	eb 3a                	jmp    55aa <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    5570:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5574:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    557b:	00 
    557c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5580:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5584:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    558c:	48 89 ce             	mov    %rcx,%rsi
    558f:	48 89 c7             	mov    %rax,%rdi
    5592:	e8 15 00 00 00       	call   55ac <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    5597:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    559b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55a2:	00 
    55a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a7:	48 01 d0             	add    %rdx,%rax
    }
    55aa:	c9                   	leave
    55ab:	c3                   	ret

00000000000055ac <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    55ac:	55                   	push   %rbp
    55ad:	48 89 e5             	mov    %rsp,%rbp
    55b0:	48 83 ec 20          	sub    $0x20,%rsp
    55b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    55c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55c4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    55c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55cc:	48 89 ce             	mov    %rcx,%rsi
    55cf:	48 89 c7             	mov    %rax,%rdi
    55d2:	e8 03 00 00 00       	call   55da <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    55d7:	90                   	nop
    55d8:	c9                   	leave
    55d9:	c3                   	ret

00000000000055da <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    55da:	55                   	push   %rbp
    55db:	48 89 e5             	mov    %rsp,%rbp
    55de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    55e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    55ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    55ee:	48 8b 00             	mov    (%rax),%rax
    55f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    55f5:	eb 10                	jmp    5607 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    55f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    55ff:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5602:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5607:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    560b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    560f:	75 e6                	jne    55f7 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5611:	90                   	nop
    5612:	90                   	nop
    5613:	5d                   	pop    %rbp
    5614:	c3                   	ret

0000000000005615 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    5615:	55                   	push   %rbp
    5616:	48 89 e5             	mov    %rsp,%rbp
    5619:	48 83 ec 20          	sub    $0x20,%rsp
    561d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5620:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5623:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5627:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    562b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    562f:	be 00 00 00 00       	mov    $0x0,%esi
    5634:	bf 01 20 02 00       	mov    $0x22001,%edi
    5639:	e8 72 ec ff ff       	call   42b0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    563e:	be 00 00 00 00       	mov    $0x0,%esi
    5643:	bf 03 00 02 00       	mov    $0x20003,%edi
    5648:	e8 63 ec ff ff       	call   42b0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    564d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5651:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5655:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5659:	8b 75 f8             	mov    -0x8(%rbp),%esi
    565c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    565f:	49 89 f8             	mov    %rdi,%r8
    5662:	89 c7                	mov    %eax,%edi
    5664:	e8 47 ef ff ff       	call   45b0 <glfwCreateWindow@plt>
}
    5669:	c9                   	leave
    566a:	c3                   	ret

000000000000566b <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    566b:	55                   	push   %rbp
    566c:	48 89 e5             	mov    %rsp,%rbp
    566f:	41 54                	push   %r12
    5671:	53                   	push   %rbx
    5672:	48 83 ec 20          	sub    $0x20,%rsp
    5676:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    567a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    567e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    5682:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5686:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    568a:	48 89 ce             	mov    %rcx,%rsi
    568d:	48 89 c7             	mov    %rax,%rdi
    5690:	e8 eb ed ff ff       	call   4480 <vkCreateInstance@plt>
    5695:	85 c0                	test   %eax,%eax
    5697:	0f 95 c0             	setne  %al
    569a:	84 c0                	test   %al,%al
    569c:	74 3b                	je     56d9 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    569e:	bf 10 00 00 00       	mov    $0x10,%edi
    56a3:	e8 b8 ea ff ff       	call   4160 <__cxa_allocate_exception@plt>
    56a8:	48 89 c3             	mov    %rax,%rbx
    56ab:	48 8d 05 9e fb 00 00 	lea    0xfb9e(%rip),%rax        # 15250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    56b2:	48 89 c6             	mov    %rax,%rsi
    56b5:	48 89 df             	mov    %rbx,%rdi
    56b8:	e8 43 ea ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    56bd:	48 8b 05 e4 c8 01 00 	mov    0x1c8e4(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    56c4:	48 89 c2             	mov    %rax,%rdx
    56c7:	48 8d 05 72 c6 01 00 	lea    0x1c672(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    56ce:	48 89 c6             	mov    %rax,%rsi
    56d1:	48 89 df             	mov    %rbx,%rdi
    56d4:	e8 47 ef ff ff       	call   4620 <__cxa_throw@plt>
  }
  return instance;
    56d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56dd:	eb 16                	jmp    56f5 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    56df:	49 89 c4             	mov    %rax,%r12
    56e2:	48 89 df             	mov    %rbx,%rdi
    56e5:	e8 36 eb ff ff       	call   4220 <__cxa_free_exception@plt>
    56ea:	4c 89 e0             	mov    %r12,%rax
    56ed:	48 89 c7             	mov    %rax,%rdi
    56f0:	e8 8b ef ff ff       	call   4680 <_Unwind_Resume@plt>
}
    56f5:	48 83 c4 20          	add    $0x20,%rsp
    56f9:	5b                   	pop    %rbx
    56fa:	41 5c                	pop    %r12
    56fc:	5d                   	pop    %rbp
    56fd:	c3                   	ret

00000000000056fe <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    56fe:	55                   	push   %rbp
    56ff:	48 89 e5             	mov    %rsp,%rbp
    5702:	41 54                	push   %r12
    5704:	53                   	push   %rbx
    5705:	48 83 ec 30          	sub    $0x30,%rsp
    5709:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    570d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5711:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    5715:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5719:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    571d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5721:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5725:	48 89 c7             	mov    %rax,%rdi
    5728:	e8 53 ee ff ff       	call   4580 <vkCreateDevice@plt>
    572d:	85 c0                	test   %eax,%eax
    572f:	0f 95 c0             	setne  %al
    5732:	84 c0                	test   %al,%al
    5734:	74 3b                	je     5771 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    5736:	bf 10 00 00 00       	mov    $0x10,%edi
    573b:	e8 20 ea ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5740:	48 89 c3             	mov    %rax,%rbx
    5743:	48 8d 05 26 fb 00 00 	lea    0xfb26(%rip),%rax        # 15270 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    574a:	48 89 c6             	mov    %rax,%rsi
    574d:	48 89 df             	mov    %rbx,%rdi
    5750:	e8 ab e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5755:	48 8b 05 4c c8 01 00 	mov    0x1c84c(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    575c:	48 89 c2             	mov    %rax,%rdx
    575f:	48 8d 05 da c5 01 00 	lea    0x1c5da(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5766:	48 89 c6             	mov    %rax,%rsi
    5769:	48 89 df             	mov    %rbx,%rdi
    576c:	e8 af ee ff ff       	call   4620 <__cxa_throw@plt>
  }
  return device;
    5771:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5775:	eb 16                	jmp    578d <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    5777:	49 89 c4             	mov    %rax,%r12
    577a:	48 89 df             	mov    %rbx,%rdi
    577d:	e8 9e ea ff ff       	call   4220 <__cxa_free_exception@plt>
    5782:	4c 89 e0             	mov    %r12,%rax
    5785:	48 89 c7             	mov    %rax,%rdi
    5788:	e8 f3 ee ff ff       	call   4680 <_Unwind_Resume@plt>
}
    578d:	48 83 c4 30          	add    $0x30,%rsp
    5791:	5b                   	pop    %rbx
    5792:	41 5c                	pop    %r12
    5794:	5d                   	pop    %rbp
    5795:	c3                   	ret

0000000000005796 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    5796:	55                   	push   %rbp
    5797:	48 89 e5             	mov    %rsp,%rbp
    579a:	41 54                	push   %r12
    579c:	53                   	push   %rbx
    579d:	48 83 ec 30          	sub    $0x30,%rsp
    57a1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    57a5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    57a9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    57ad:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    57b1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    57b5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    57b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57bd:	48 89 c7             	mov    %rax,%rdi
    57c0:	e8 db ed ff ff       	call   45a0 <glfwCreateWindowSurface@plt>
    57c5:	85 c0                	test   %eax,%eax
    57c7:	0f 95 c0             	setne  %al
    57ca:	84 c0                	test   %al,%al
    57cc:	74 3b                	je     5809 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    57ce:	bf 10 00 00 00       	mov    $0x10,%edi
    57d3:	e8 88 e9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    57d8:	48 89 c3             	mov    %rax,%rbx
    57db:	48 8d 05 b6 fa 00 00 	lea    0xfab6(%rip),%rax        # 15298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    57e2:	48 89 c6             	mov    %rax,%rsi
    57e5:	48 89 df             	mov    %rbx,%rdi
    57e8:	e8 13 e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    57ed:	48 8b 05 b4 c7 01 00 	mov    0x1c7b4(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    57f4:	48 89 c2             	mov    %rax,%rdx
    57f7:	48 8d 05 42 c5 01 00 	lea    0x1c542(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    57fe:	48 89 c6             	mov    %rax,%rsi
    5801:	48 89 df             	mov    %rbx,%rdi
    5804:	e8 17 ee ff ff       	call   4620 <__cxa_throw@plt>
  }
  return surface;
    5809:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    580d:	eb 16                	jmp    5825 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    580f:	49 89 c4             	mov    %rax,%r12
    5812:	48 89 df             	mov    %rbx,%rdi
    5815:	e8 06 ea ff ff       	call   4220 <__cxa_free_exception@plt>
    581a:	4c 89 e0             	mov    %r12,%rax
    581d:	48 89 c7             	mov    %rax,%rdi
    5820:	e8 5b ee ff ff       	call   4680 <_Unwind_Resume@plt>
}
    5825:	48 83 c4 30          	add    $0x30,%rsp
    5829:	5b                   	pop    %rbx
    582a:	41 5c                	pop    %r12
    582c:	5d                   	pop    %rbp
    582d:	c3                   	ret

000000000000582e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    582e:	55                   	push   %rbp
    582f:	48 89 e5             	mov    %rsp,%rbp
    5832:	41 54                	push   %r12
    5834:	53                   	push   %rbx
    5835:	48 83 ec 30          	sub    $0x30,%rsp
    5839:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    583d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5841:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    5845:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    584c:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    584d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5851:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5855:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5859:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    585d:	48 89 c7             	mov    %rax,%rdi
    5860:	e8 eb eb ff ff       	call   4450 <vkCreateSwapchainKHR@plt>
    5865:	85 c0                	test   %eax,%eax
    5867:	0f 95 c0             	setne  %al
    586a:	84 c0                	test   %al,%al
    586c:	74 3b                	je     58a9 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    586e:	bf 10 00 00 00       	mov    $0x10,%edi
    5873:	e8 e8 e8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5878:	48 89 c3             	mov    %rax,%rbx
    587b:	48 8d 05 37 fa 00 00 	lea    0xfa37(%rip),%rax        # 152b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    5882:	48 89 c6             	mov    %rax,%rsi
    5885:	48 89 df             	mov    %rbx,%rdi
    5888:	e8 73 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    588d:	48 8b 05 14 c7 01 00 	mov    0x1c714(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5894:	48 89 c2             	mov    %rax,%rdx
    5897:	48 8d 05 a2 c4 01 00 	lea    0x1c4a2(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    589e:	48 89 c6             	mov    %rax,%rsi
    58a1:	48 89 df             	mov    %rbx,%rdi
    58a4:	e8 77 ed ff ff       	call   4620 <__cxa_throw@plt>
  }
  return swapchain;
    58a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58ad:	eb 16                	jmp    58c5 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    58af:	49 89 c4             	mov    %rax,%r12
    58b2:	48 89 df             	mov    %rbx,%rdi
    58b5:	e8 66 e9 ff ff       	call   4220 <__cxa_free_exception@plt>
    58ba:	4c 89 e0             	mov    %r12,%rax
    58bd:	48 89 c7             	mov    %rax,%rdi
    58c0:	e8 bb ed ff ff       	call   4680 <_Unwind_Resume@plt>
}
    58c5:	48 83 c4 30          	add    $0x30,%rsp
    58c9:	5b                   	pop    %rbx
    58ca:	41 5c                	pop    %r12
    58cc:	5d                   	pop    %rbp
    58cd:	c3                   	ret

00000000000058ce <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    58ce:	55                   	push   %rbp
    58cf:	48 89 e5             	mov    %rsp,%rbp
    58d2:	41 54                	push   %r12
    58d4:	53                   	push   %rbx
    58d5:	48 83 ec 30          	sub    $0x30,%rsp
    58d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    58dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    58e1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    58e5:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    58e9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    58ed:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    58f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58f5:	48 89 c7             	mov    %rax,%rdi
    58f8:	e8 83 ea ff ff       	call   4380 <vkCreateImageView@plt>
    58fd:	85 c0                	test   %eax,%eax
    58ff:	0f 95 c0             	setne  %al
    5902:	84 c0                	test   %al,%al
    5904:	74 3b                	je     5941 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5906:	bf 10 00 00 00       	mov    $0x10,%edi
    590b:	e8 50 e8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5910:	48 89 c3             	mov    %rax,%rbx
    5913:	48 8d 05 be f9 00 00 	lea    0xf9be(%rip),%rax        # 152d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    591a:	48 89 c6             	mov    %rax,%rsi
    591d:	48 89 df             	mov    %rbx,%rdi
    5920:	e8 db e7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5925:	48 8b 05 7c c6 01 00 	mov    0x1c67c(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    592c:	48 89 c2             	mov    %rax,%rdx
    592f:	48 8d 05 0a c4 01 00 	lea    0x1c40a(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5936:	48 89 c6             	mov    %rax,%rsi
    5939:	48 89 df             	mov    %rbx,%rdi
    593c:	e8 df ec ff ff       	call   4620 <__cxa_throw@plt>
  }
  return imageView;
    5941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5945:	eb 16                	jmp    595d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    5947:	49 89 c4             	mov    %rax,%r12
    594a:	48 89 df             	mov    %rbx,%rdi
    594d:	e8 ce e8 ff ff       	call   4220 <__cxa_free_exception@plt>
    5952:	4c 89 e0             	mov    %r12,%rax
    5955:	48 89 c7             	mov    %rax,%rdi
    5958:	e8 23 ed ff ff       	call   4680 <_Unwind_Resume@plt>
}
    595d:	48 83 c4 30          	add    $0x30,%rsp
    5961:	5b                   	pop    %rbx
    5962:	41 5c                	pop    %r12
    5964:	5d                   	pop    %rbp
    5965:	c3                   	ret

0000000000005966 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    5966:	55                   	push   %rbp
    5967:	48 89 e5             	mov    %rsp,%rbp
    596a:	41 54                	push   %r12
    596c:	53                   	push   %rbx
    596d:	48 83 ec 60          	sub    $0x60,%rsp
    5971:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    5975:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    5979:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    597d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5981:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    5985:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    5989:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    598e:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    5995:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5999:	48 89 c7             	mov    %rax,%rdi
    599c:	e8 87 03 00 00       	call   5d28 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    59a1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    59a5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    59a9:	48 89 c7             	mov    %rax,%rdi
    59ac:	e8 97 03 00 00       	call   5d48 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    59b1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    59b5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    59bc:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    59bd:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    59c1:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    59c5:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    59c9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    59cd:	48 89 c7             	mov    %rax,%rdi
    59d0:	e8 8b e8 ff ff       	call   4260 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    59d5:	85 c0                	test   %eax,%eax
    59d7:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    59da:	84 c0                	test   %al,%al
    59dc:	74 3b                	je     5a19 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    59de:	bf 10 00 00 00       	mov    $0x10,%edi
    59e3:	e8 78 e7 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    59e8:	48 89 c3             	mov    %rax,%rbx
    59eb:	48 8d 05 06 f9 00 00 	lea    0xf906(%rip),%rax        # 152f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    59f2:	48 89 c6             	mov    %rax,%rsi
    59f5:	48 89 df             	mov    %rbx,%rdi
    59f8:	e8 03 e7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    59fd:	48 8b 05 a4 c5 01 00 	mov    0x1c5a4(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a04:	48 89 c2             	mov    %rax,%rdx
    5a07:	48 8d 05 32 c3 01 00 	lea    0x1c332(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a0e:	48 89 c6             	mov    %rax,%rsi
    5a11:	48 89 df             	mov    %rbx,%rdi
    5a14:	e8 07 ec ff ff       	call   4620 <__cxa_throw@plt>
  }
  return shaderModule;
    5a19:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a1d:	eb 16                	jmp    5a35 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5a1f:	49 89 c4             	mov    %rax,%r12
    5a22:	48 89 df             	mov    %rbx,%rdi
    5a25:	e8 f6 e7 ff ff       	call   4220 <__cxa_free_exception@plt>
    5a2a:	4c 89 e0             	mov    %r12,%rax
    5a2d:	48 89 c7             	mov    %rax,%rdi
    5a30:	e8 4b ec ff ff       	call   4680 <_Unwind_Resume@plt>
}
    5a35:	48 83 c4 60          	add    $0x60,%rsp
    5a39:	5b                   	pop    %rbx
    5a3a:	41 5c                	pop    %r12
    5a3c:	5d                   	pop    %rbp
    5a3d:	c3                   	ret

0000000000005a3e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5a3e:	55                   	push   %rbp
    5a3f:	48 89 e5             	mov    %rsp,%rbp
    5a42:	41 54                	push   %r12
    5a44:	53                   	push   %rbx
    5a45:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5a4c:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5a53:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5a5a:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5a61:	be 04 00 00 00       	mov    $0x4,%esi
    5a66:	bf 02 00 00 00       	mov    $0x2,%edi
    5a6b:	e8 a6 02 00 00       	call   5d16 <_ZStorSt13_Ios_OpenmodeS_>
    5a70:	89 c2                	mov    %eax,%edx
    5a72:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5a79:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5a80:	48 89 ce             	mov    %rcx,%rsi
    5a83:	48 89 c7             	mov    %rax,%rdi
    5a86:	e8 55 eb ff ff       	call   45e0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5a8b:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5a92:	48 89 c7             	mov    %rax,%rdi
    5a95:	e8 36 eb ff ff       	call   45d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5a9a:	83 f0 01             	xor    $0x1,%eax
    5a9d:	84 c0                	test   %al,%al
    5a9f:	74 61                	je     5b02 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5aa1:	bf 10 00 00 00       	mov    $0x10,%edi
    5aa6:	e8 b5 e6 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5aab:	48 89 c3             	mov    %rax,%rbx
    5aae:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5ab2:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5ab9:	48 8d 0d 58 f8 00 00 	lea    0xf858(%rip),%rcx        # 15318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5ac0:	48 89 ce             	mov    %rcx,%rsi
    5ac3:	48 89 c7             	mov    %rax,%rdi
    5ac6:	e8 a1 02 00 00       	call   5d6c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5acb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5acf:	48 89 c6             	mov    %rax,%rsi
    5ad2:	48 89 df             	mov    %rbx,%rdi
    5ad5:	e8 16 eb ff ff       	call   45f0 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5ada:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5ade:	48 89 c7             	mov    %rax,%rdi
    5ae1:	e8 ea e6 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5ae6:	48 8b 05 bb c4 01 00 	mov    0x1c4bb(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5aed:	48 89 c2             	mov    %rax,%rdx
    5af0:	48 8d 05 49 c2 01 00 	lea    0x1c249(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5af7:	48 89 c6             	mov    %rax,%rsi
    5afa:	48 89 df             	mov    %rbx,%rdi
    5afd:	e8 1e eb ff ff       	call   4620 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5b02:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b09:	48 89 c7             	mov    %rax,%rdi
    5b0c:	e8 4f eb ff ff       	call   4660 <_ZNSi5tellgEv@plt>
    5b11:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5b15:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5b19:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5b1d:	48 89 c7             	mov    %rax,%rdi
    5b20:	e8 49 03 00 00       	call   5e6e <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5b25:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5b29:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b2d:	48 89 c7             	mov    %rax,%rdi
    5b30:	e8 5b eb ff ff       	call   4690 <_ZNSaIcEC1Ev@plt>
    5b35:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5b39:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5b3d:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5b44:	48 89 ce             	mov    %rcx,%rsi
    5b47:	48 89 c7             	mov    %rax,%rdi
    5b4a:	e8 31 03 00 00       	call   5e80 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5b4f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b53:	48 89 c7             	mov    %rax,%rdi
    5b56:	e8 85 e8 ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5b5b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5b5f:	be 00 00 00 00       	mov    $0x0,%esi
    5b64:	48 89 c7             	mov    %rax,%rdi
    5b67:	e8 ce 03 00 00       	call   5f3a <_ZNSt4fposI11__mbstate_tEC1El>
    5b6c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5b70:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b74:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b7b:	48 89 ce             	mov    %rcx,%rsi
    5b7e:	48 89 c7             	mov    %rax,%rdi
    5b81:	e8 2a e9 ff ff       	call   44b0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5b86:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5b8a:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5b91:	48 89 c7             	mov    %rax,%rdi
    5b94:	e8 d1 03 00 00       	call   5f6a <_ZNSt6vectorIcSaIcEE4dataEv>
    5b99:	48 89 c1             	mov    %rax,%rcx
    5b9c:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ba3:	48 89 da             	mov    %rbx,%rdx
    5ba6:	48 89 ce             	mov    %rcx,%rsi
    5ba9:	48 89 c7             	mov    %rax,%rdi
    5bac:	e8 ef e8 ff ff       	call   44a0 <_ZNSi4readEPcl@plt>
  file.close();
    5bb1:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bb8:	48 89 c7             	mov    %rax,%rdi
    5bbb:	e8 b0 e4 ff ff       	call   4070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5bc0:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5bc7:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5bce:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5bd5:	48 89 ce             	mov    %rcx,%rsi
    5bd8:	48 89 c7             	mov    %rax,%rdi
    5bdb:	e8 86 fd ff ff       	call   5966 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5be0:	48 89 c3             	mov    %rax,%rbx
    5be3:	90                   	nop
}
    5be4:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5beb:	48 89 c7             	mov    %rax,%rdi
    5bee:	e8 03 03 00 00       	call   5ef6 <_ZNSt6vectorIcSaIcEED1Ev>
    5bf3:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bfa:	48 89 c7             	mov    %rax,%rdi
    5bfd:	e8 ae e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5c02:	48 89 d8             	mov    %rbx,%rax
    5c05:	eb 63                	jmp    5c6a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5c07:	49 89 c4             	mov    %rax,%r12
    5c0a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c0e:	48 89 c7             	mov    %rax,%rdi
    5c11:	e8 ba e5 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5c16:	eb 03                	jmp    5c1b <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5c18:	49 89 c4             	mov    %rax,%r12
    5c1b:	48 89 df             	mov    %rbx,%rdi
    5c1e:	e8 fd e5 ff ff       	call   4220 <__cxa_free_exception@plt>
    5c23:	4c 89 e3             	mov    %r12,%rbx
    5c26:	eb 28                	jmp    5c50 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5c28:	48 89 c3             	mov    %rax,%rbx
    5c2b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5c2f:	48 89 c7             	mov    %rax,%rdi
    5c32:	e8 a9 e7 ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    5c37:	eb 17                	jmp    5c50 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5c39:	48 89 c3             	mov    %rax,%rbx
    5c3c:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c43:	48 89 c7             	mov    %rax,%rdi
    5c46:	e8 ab 02 00 00       	call   5ef6 <_ZNSt6vectorIcSaIcEED1Ev>
    5c4b:	eb 03                	jmp    5c50 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5c4d:	48 89 c3             	mov    %rax,%rbx
    5c50:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c57:	48 89 c7             	mov    %rax,%rdi
    5c5a:	e8 51 e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5c5f:	48 89 d8             	mov    %rbx,%rax
    5c62:	48 89 c7             	mov    %rax,%rdi
    5c65:	e8 16 ea ff ff       	call   4680 <_Unwind_Resume@plt>
    5c6a:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5c71:	5b                   	pop    %rbx
    5c72:	41 5c                	pop    %r12
    5c74:	5d                   	pop    %rbp
    5c75:	c3                   	ret

0000000000005c76 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5c76:	55                   	push   %rbp
    5c77:	48 89 e5             	mov    %rsp,%rbp
    5c7a:	41 54                	push   %r12
    5c7c:	53                   	push   %rbx
    5c7d:	48 83 ec 30          	sub    $0x30,%rsp
    5c81:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5c85:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5c89:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    5c8d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5c94:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    5c95:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5c99:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5c9d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5ca1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ca5:	48 89 c7             	mov    %rax,%rdi
    5ca8:	e8 83 e4 ff ff       	call   4130 <vkCreateCommandPool@plt>
    5cad:	85 c0                	test   %eax,%eax
    5caf:	0f 95 c0             	setne  %al
    5cb2:	84 c0                	test   %al,%al
    5cb4:	74 3b                	je     5cf1 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    5cb6:	bf 10 00 00 00       	mov    $0x10,%edi
    5cbb:	e8 a0 e4 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5cc0:	48 89 c3             	mov    %rax,%rbx
    5cc3:	48 8d 05 5e f6 00 00 	lea    0xf65e(%rip),%rax        # 15328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5cca:	48 89 c6             	mov    %rax,%rsi
    5ccd:	48 89 df             	mov    %rbx,%rdi
    5cd0:	e8 2b e4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5cd5:	48 8b 05 cc c2 01 00 	mov    0x1c2cc(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5cdc:	48 89 c2             	mov    %rax,%rdx
    5cdf:	48 8d 05 5a c0 01 00 	lea    0x1c05a(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5ce6:	48 89 c6             	mov    %rax,%rsi
    5ce9:	48 89 df             	mov    %rbx,%rdi
    5cec:	e8 2f e9 ff ff       	call   4620 <__cxa_throw@plt>
  }
  return commandPool;
    5cf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cf5:	eb 16                	jmp    5d0d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    5cf7:	49 89 c4             	mov    %rax,%r12
    5cfa:	48 89 df             	mov    %rbx,%rdi
    5cfd:	e8 1e e5 ff ff       	call   4220 <__cxa_free_exception@plt>
    5d02:	4c 89 e0             	mov    %r12,%rax
    5d05:	48 89 c7             	mov    %rax,%rdi
    5d08:	e8 73 e9 ff ff       	call   4680 <_Unwind_Resume@plt>
}
    5d0d:	48 83 c4 30          	add    $0x30,%rsp
    5d11:	5b                   	pop    %rbx
    5d12:	41 5c                	pop    %r12
    5d14:	5d                   	pop    %rbp
    5d15:	c3                   	ret

0000000000005d16 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    5d16:	55                   	push   %rbp
    5d17:	48 89 e5             	mov    %rsp,%rbp
    5d1a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5d1d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5d20:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5d23:	0b 45 f8             	or     -0x8(%rbp),%eax
    5d26:	5d                   	pop    %rbp
    5d27:	c3                   	ret

0000000000005d28 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5d28:	55                   	push   %rbp
    5d29:	48 89 e5             	mov    %rsp,%rbp
    5d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d34:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5d38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d3c:	48 8b 00             	mov    (%rax),%rax
    5d3f:	48 29 c2             	sub    %rax,%rdx
    5d42:	48 89 d0             	mov    %rdx,%rax
    5d45:	5d                   	pop    %rbp
    5d46:	c3                   	ret
    5d47:	90                   	nop

0000000000005d48 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    5d48:	55                   	push   %rbp
    5d49:	48 89 e5             	mov    %rsp,%rbp
    5d4c:	48 83 ec 10          	sub    $0x10,%rsp
    5d50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d58:	48 8b 10             	mov    (%rax),%rdx
    5d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d5f:	48 89 d6             	mov    %rdx,%rsi
    5d62:	48 89 c7             	mov    %rax,%rdi
    5d65:	e8 24 02 00 00       	call   5f8e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    5d6a:	c9                   	leave
    5d6b:	c3                   	ret

0000000000005d6c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    5d6c:	55                   	push   %rbp
    5d6d:	48 89 e5             	mov    %rsp,%rbp
    5d70:	53                   	push   %rbx
    5d71:	48 83 ec 38          	sub    $0x38,%rsp
    5d75:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d79:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5d7d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    5d81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5d85:	48 89 c7             	mov    %rax,%rdi
    5d88:	e8 8c ec ff ff       	call   4a19 <_ZNSt11char_traitsIcE6lengthEPKc>
    5d8d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5d91:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5d95:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d99:	48 89 d6             	mov    %rdx,%rsi
    5d9c:	48 89 c7             	mov    %rax,%rdi
    5d9f:	e8 4c e3 ff ff       	call   40f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    5da4:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5da8:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    5dac:	48 89 d6             	mov    %rdx,%rsi
    5daf:	48 89 c7             	mov    %rax,%rdi
    5db2:	e8 e9 01 00 00       	call   5fa0 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    5db7:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    5dbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5dbf:	48 89 d6             	mov    %rdx,%rsi
    5dc2:	48 89 c7             	mov    %rax,%rdi
    5dc5:	e8 66 e8 ff ff       	call   4630 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    5dca:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5dce:	48 89 c7             	mov    %rax,%rdi
    5dd1:	e8 0a e6 ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    5dd6:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5dda:	48 89 c7             	mov    %rax,%rdi
    5ddd:	e8 fe e5 ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    5de2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5de6:	48 89 c7             	mov    %rax,%rdi
    5de9:	e8 12 e4 ff ff       	call   4200 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    5dee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5df2:	48 01 c2             	add    %rax,%rdx
    5df5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5df9:	48 89 d6             	mov    %rdx,%rsi
    5dfc:	48 89 c7             	mov    %rax,%rdi
    5dff:	e8 bc e7 ff ff       	call   45c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    5e04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e08:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5e0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e10:	48 89 ce             	mov    %rcx,%rsi
    5e13:	48 89 c7             	mov    %rax,%rdi
    5e16:	e8 25 e2 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    5e1b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e23:	48 89 d6             	mov    %rdx,%rsi
    5e26:	48 89 c7             	mov    %rax,%rdi
    5e29:	e8 c2 e8 ff ff       	call   46f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    5e2e:	eb 34                	jmp    5e64 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5e30:	48 89 c3             	mov    %rax,%rbx
    5e33:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5e37:	48 89 c7             	mov    %rax,%rdi
    5e3a:	e8 a1 e5 ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    5e3f:	48 89 d8             	mov    %rbx,%rax
    5e42:	48 89 c7             	mov    %rax,%rdi
    5e45:	e8 36 e8 ff ff       	call   4680 <_Unwind_Resume@plt>
    }
    5e4a:	48 89 c3             	mov    %rax,%rbx
    5e4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e51:	48 89 c7             	mov    %rax,%rdi
    5e54:	e8 77 e3 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5e59:	48 89 d8             	mov    %rbx,%rax
    5e5c:	48 89 c7             	mov    %rax,%rdi
    5e5f:	e8 1c e8 ff ff       	call   4680 <_Unwind_Resume@plt>
    5e64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e6c:	c9                   	leave
    5e6d:	c3                   	ret

0000000000005e6e <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    5e6e:	55                   	push   %rbp
    5e6f:	48 89 e5             	mov    %rsp,%rbp
    5e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e7a:	48 8b 00             	mov    (%rax),%rax
    5e7d:	5d                   	pop    %rbp
    5e7e:	c3                   	ret
    5e7f:	90                   	nop

0000000000005e80 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5e80:	55                   	push   %rbp
    5e81:	48 89 e5             	mov    %rsp,%rbp
    5e84:	53                   	push   %rbx
    5e85:	48 83 ec 28          	sub    $0x28,%rsp
    5e89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5e8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5e91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5e95:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5e99:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5e9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5ea1:	48 89 d6             	mov    %rdx,%rsi
    5ea4:	48 89 c7             	mov    %rax,%rdi
    5ea7:	e8 1d 01 00 00       	call   5fc9 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    5eac:	48 89 c1             	mov    %rax,%rcx
    5eaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5eb3:	48 89 c2             	mov    %rax,%rdx
    5eb6:	48 89 ce             	mov    %rcx,%rsi
    5eb9:	48 89 df             	mov    %rbx,%rdi
    5ebc:	e8 85 01 00 00       	call   6046 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    5ec1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5ec5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ec9:	48 89 d6             	mov    %rdx,%rsi
    5ecc:	48 89 c7             	mov    %rax,%rdi
    5ecf:	e8 14 02 00 00       	call   60e8 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    5ed4:	eb 1a                	jmp    5ef0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    5ed6:	48 89 c3             	mov    %rax,%rbx
    5ed9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5edd:	48 89 c7             	mov    %rax,%rdi
    5ee0:	e8 bf 01 00 00       	call   60a4 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    5ee5:	48 89 d8             	mov    %rbx,%rax
    5ee8:	48 89 c7             	mov    %rax,%rdi
    5eeb:	e8 90 e7 ff ff       	call   4680 <_Unwind_Resume@plt>
    5ef0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5ef4:	c9                   	leave
    5ef5:	c3                   	ret

0000000000005ef6 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5ef6:	55                   	push   %rbp
    5ef7:	48 89 e5             	mov    %rsp,%rbp
    5efa:	48 83 ec 10          	sub    $0x10,%rsp
    5efe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5f02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f06:	48 89 c7             	mov    %rax,%rdi
    5f09:	e8 1a 02 00 00       	call   6128 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    5f0e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5f11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f15:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f1d:	48 8b 00             	mov    (%rax),%rax
    5f20:	48 89 ce             	mov    %rcx,%rsi
    5f23:	48 89 c7             	mov    %rax,%rdi
    5f26:	e8 0b 02 00 00       	call   6136 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    5f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f2f:	48 89 c7             	mov    %rax,%rdi
    5f32:	e8 6d 01 00 00       	call   60a4 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    5f37:	90                   	nop
    5f38:	c9                   	leave
    5f39:	c3                   	ret

0000000000005f3a <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    5f3a:	55                   	push   %rbp
    5f3b:	48 89 e5             	mov    %rsp,%rbp
    5f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    5f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f4e:	48 89 10             	mov    %rdx,(%rax)
    5f51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f55:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    5f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f60:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    5f67:	90                   	nop
    5f68:	5d                   	pop    %rbp
    5f69:	c3                   	ret

0000000000005f6a <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5f6a:	55                   	push   %rbp
    5f6b:	48 89 e5             	mov    %rsp,%rbp
    5f6e:	48 83 ec 10          	sub    $0x10,%rsp
    5f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f7a:	48 8b 10             	mov    (%rax),%rdx
    5f7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f81:	48 89 d6             	mov    %rdx,%rsi
    5f84:	48 89 c7             	mov    %rax,%rdi
    5f87:	e8 02 00 00 00       	call   5f8e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    5f8c:	c9                   	leave
    5f8d:	c3                   	ret

0000000000005f8e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5f8e:	55                   	push   %rbp
    5f8f:	48 89 e5             	mov    %rsp,%rbp
    5f92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5f9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f9e:	5d                   	pop    %rbp
    5f9f:	c3                   	ret

0000000000005fa0 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    5fa0:	55                   	push   %rbp
    5fa1:	48 89 e5             	mov    %rsp,%rbp
    5fa4:	48 83 ec 10          	sub    $0x10,%rsp
    5fa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    5fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fb4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5fb8:	48 89 d6             	mov    %rdx,%rsi
    5fbb:	48 89 c7             	mov    %rax,%rdi
    5fbe:	e8 a8 01 00 00       	call   616b <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    5fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fc7:	c9                   	leave
    5fc8:	c3                   	ret

0000000000005fc9 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5fc9:	55                   	push   %rbp
    5fca:	48 89 e5             	mov    %rsp,%rbp
    5fcd:	53                   	push   %rbx
    5fce:	48 83 ec 28          	sub    $0x28,%rsp
    5fd2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5fd6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5fda:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5fde:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5fe2:	48 89 d6             	mov    %rdx,%rsi
    5fe5:	48 89 c7             	mov    %rax,%rdi
    5fe8:	e8 b3 e1 ff ff       	call   41a0 <_ZNSaIcEC1ERKS_@plt>
    5fed:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5ff1:	48 89 c7             	mov    %rax,%rdi
    5ff4:	e8 9b 01 00 00       	call   6194 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    5ff9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5ffd:	0f 92 c3             	setb   %bl
    6000:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6004:	48 89 c7             	mov    %rax,%rdi
    6007:	e8 d4 e3 ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    600c:	84 db                	test   %bl,%bl
    600e:	74 0f                	je     601f <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6010:	48 8d 05 31 f3 00 00 	lea    0xf331(%rip),%rax        # 15348 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x100>
    6017:	48 89 c7             	mov    %rax,%rdi
    601a:	e8 51 e1 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    601f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6023:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6027:	c9                   	leave
    6028:	c3                   	ret
    6029:	90                   	nop

000000000000602a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    602a:	55                   	push   %rbp
    602b:	48 89 e5             	mov    %rsp,%rbp
    602e:	48 83 ec 10          	sub    $0x10,%rsp
    6032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    603a:	48 89 c7             	mov    %rax,%rdi
    603d:	e8 1e e0 ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    6042:	90                   	nop
    6043:	c9                   	leave
    6044:	c3                   	ret
    6045:	90                   	nop

0000000000006046 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6046:	55                   	push   %rbp
    6047:	48 89 e5             	mov    %rsp,%rbp
    604a:	53                   	push   %rbx
    604b:	48 83 ec 28          	sub    $0x28,%rsp
    604f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6053:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6057:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    605b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    605f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6063:	48 89 d6             	mov    %rdx,%rsi
    6066:	48 89 c7             	mov    %rax,%rdi
    6069:	e8 68 01 00 00       	call   61d6 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    606e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6076:	48 89 d6             	mov    %rdx,%rsi
    6079:	48 89 c7             	mov    %rax,%rdi
    607c:	e8 87 01 00 00       	call   6208 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    6081:	eb 1a                	jmp    609d <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    6083:	48 89 c3             	mov    %rax,%rbx
    6086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    608a:	48 89 c7             	mov    %rax,%rdi
    608d:	e8 98 ff ff ff       	call   602a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6092:	48 89 d8             	mov    %rbx,%rax
    6095:	48 89 c7             	mov    %rax,%rdi
    6098:	e8 e3 e5 ff ff       	call   4680 <_Unwind_Resume@plt>
    609d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    60a1:	c9                   	leave
    60a2:	c3                   	ret
    60a3:	90                   	nop

00000000000060a4 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    60a4:	55                   	push   %rbp
    60a5:	48 89 e5             	mov    %rsp,%rbp
    60a8:	48 83 ec 10          	sub    $0x10,%rsp
    60ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    60b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    60b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60bc:	48 8b 00             	mov    (%rax),%rax
    60bf:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    60c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c6:	48 8b 08             	mov    (%rax),%rcx
    60c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60cd:	48 89 ce             	mov    %rcx,%rsi
    60d0:	48 89 c7             	mov    %rax,%rdi
    60d3:	e8 82 01 00 00       	call   625a <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    60d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60dc:	48 89 c7             	mov    %rax,%rdi
    60df:	e8 46 ff ff ff       	call   602a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    60e4:	90                   	nop
    60e5:	c9                   	leave
    60e6:	c3                   	ret
    60e7:	90                   	nop

00000000000060e8 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    60e8:	55                   	push   %rbp
    60e9:	48 89 e5             	mov    %rsp,%rbp
    60ec:	48 83 ec 10          	sub    $0x10,%rsp
    60f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    60f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60fc:	48 89 c7             	mov    %rax,%rdi
    60ff:	e8 24 00 00 00       	call   6128 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6104:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    610b:	48 8b 00             	mov    (%rax),%rax
    610e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6112:	48 89 ce             	mov    %rcx,%rsi
    6115:	48 89 c7             	mov    %rax,%rdi
    6118:	e8 72 01 00 00       	call   628f <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    611d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6121:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6125:	90                   	nop
    6126:	c9                   	leave
    6127:	c3                   	ret

0000000000006128 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6128:	55                   	push   %rbp
    6129:	48 89 e5             	mov    %rsp,%rbp
    612c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6134:	5d                   	pop    %rbp
    6135:	c3                   	ret

0000000000006136 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6136:	55                   	push   %rbp
    6137:	48 89 e5             	mov    %rsp,%rbp
    613a:	48 83 ec 20          	sub    $0x20,%rsp
    613e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6146:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    614a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    614e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6152:	48 89 d6             	mov    %rdx,%rsi
    6155:	48 89 c7             	mov    %rax,%rdi
    6158:	e8 5b 01 00 00       	call   62b8 <_ZSt8_DestroyIPcEvT_S1_>
    }
    615d:	90                   	nop
    615e:	c9                   	leave
    615f:	c3                   	ret

0000000000006160 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    6160:	55                   	push   %rbp
    6161:	48 89 e5             	mov    %rsp,%rbp
    6164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6168:	90                   	nop
    6169:	5d                   	pop    %rbp
    616a:	c3                   	ret

000000000000616b <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    616b:	55                   	push   %rbp
    616c:	48 89 e5             	mov    %rsp,%rbp
    616f:	48 83 ec 10          	sub    $0x10,%rsp
    6173:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6177:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    617b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    617f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6183:	48 89 d6             	mov    %rdx,%rsi
    6186:	48 89 c7             	mov    %rax,%rdi
    6189:	e8 12 e0 ff ff       	call   41a0 <_ZNSaIcEC1ERKS_@plt>
    618e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6192:	c9                   	leave
    6193:	c3                   	ret

0000000000006194 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6194:	55                   	push   %rbp
    6195:	48 89 e5             	mov    %rsp,%rbp
    6198:	48 83 ec 20          	sub    $0x20,%rsp
    619c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    61a0:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    61a7:	ff ff 7f 
    61aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    61ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61b2:	48 89 c7             	mov    %rax,%rdi
    61b5:	e8 52 01 00 00       	call   630c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    61ba:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    61be:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    61c2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    61c6:	48 89 d6             	mov    %rdx,%rsi
    61c9:	48 89 c7             	mov    %rax,%rdi
    61cc:	e8 ec f0 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    61d1:	48 8b 00             	mov    (%rax),%rax
      }
    61d4:	c9                   	leave
    61d5:	c3                   	ret

00000000000061d6 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    61d6:	55                   	push   %rbp
    61d7:	48 89 e5             	mov    %rsp,%rbp
    61da:	48 83 ec 10          	sub    $0x10,%rsp
    61de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    61e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ee:	48 89 d6             	mov    %rdx,%rsi
    61f1:	48 89 c7             	mov    %rax,%rdi
    61f4:	e8 67 e3 ff ff       	call   4560 <_ZNSaIcEC2ERKS_@plt>
    61f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61fd:	48 89 c7             	mov    %rax,%rdi
    6200:	e8 21 01 00 00       	call   6326 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    6205:	90                   	nop
    6206:	c9                   	leave
    6207:	c3                   	ret

0000000000006208 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6208:	55                   	push   %rbp
    6209:	48 89 e5             	mov    %rsp,%rbp
    620c:	48 83 ec 10          	sub    $0x10,%rsp
    6210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6214:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6218:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    621c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6220:	48 89 d6             	mov    %rdx,%rsi
    6223:	48 89 c7             	mov    %rax,%rdi
    6226:	e8 29 01 00 00       	call   6354 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    622b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    622f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6236:	48 8b 10             	mov    (%rax),%rdx
    6239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    623d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6245:	48 8b 10             	mov    (%rax),%rdx
    6248:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    624c:	48 01 c2             	add    %rax,%rdx
    624f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6253:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6257:	90                   	nop
    6258:	c9                   	leave
    6259:	c3                   	ret

000000000000625a <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    625a:	55                   	push   %rbp
    625b:	48 89 e5             	mov    %rsp,%rbp
    625e:	48 83 ec 20          	sub    $0x20,%rsp
    6262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6266:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    626a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    626e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6273:	74 17                	je     628c <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6279:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    627d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6281:	48 89 ce             	mov    %rcx,%rsi
    6284:	48 89 c7             	mov    %rax,%rdi
    6287:	e8 52 00 00 00       	call   62de <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    628c:	90                   	nop
    628d:	c9                   	leave
    628e:	c3                   	ret

000000000000628f <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    628f:	55                   	push   %rbp
    6290:	48 89 e5             	mov    %rsp,%rbp
    6293:	48 83 ec 20          	sub    $0x20,%rsp
    6297:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    629b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    629f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    62a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ab:	48 89 d6             	mov    %rdx,%rsi
    62ae:	48 89 c7             	mov    %rax,%rdi
    62b1:	e8 d1 00 00 00       	call   6387 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    62b6:	c9                   	leave
    62b7:	c3                   	ret

00000000000062b8 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    62b8:	55                   	push   %rbp
    62b9:	48 89 e5             	mov    %rsp,%rbp
    62bc:	48 83 ec 10          	sub    $0x10,%rsp
    62c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    62c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d0:	48 89 d6             	mov    %rdx,%rsi
    62d3:	48 89 c7             	mov    %rax,%rdi
    62d6:	e8 d5 00 00 00       	call   63b0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    62db:	90                   	nop
    62dc:	c9                   	leave
    62dd:	c3                   	ret

00000000000062de <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    62de:	55                   	push   %rbp
    62df:	48 89 e5             	mov    %rsp,%rbp
    62e2:	48 83 ec 20          	sub    $0x20,%rsp
    62e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    62f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    62fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62fe:	48 89 ce             	mov    %rcx,%rsi
    6301:	48 89 c7             	mov    %rax,%rdi
    6304:	e8 c5 00 00 00       	call   63ce <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    6309:	90                   	nop
    630a:	c9                   	leave
    630b:	c3                   	ret

000000000000630c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    630c:	55                   	push   %rbp
    630d:	48 89 e5             	mov    %rsp,%rbp
    6310:	48 83 ec 10          	sub    $0x10,%rsp
    6314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    631c:	48 89 c7             	mov    %rax,%rdi
    631f:	e8 d4 00 00 00       	call   63f8 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    6324:	c9                   	leave
    6325:	c3                   	ret

0000000000006326 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6326:	55                   	push   %rbp
    6327:	48 89 e5             	mov    %rsp,%rbp
    632a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    632e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6332:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    633d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6344:	00 
    6345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6349:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6350:	00 
	{ }
    6351:	90                   	nop
    6352:	5d                   	pop    %rbp
    6353:	c3                   	ret

0000000000006354 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6354:	55                   	push   %rbp
    6355:	48 89 e5             	mov    %rsp,%rbp
    6358:	48 83 ec 10          	sub    $0x10,%rsp
    635c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6360:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6364:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6369:	74 15                	je     6380 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    636b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6373:	48 89 d6             	mov    %rdx,%rsi
    6376:	48 89 c7             	mov    %rax,%rdi
    6379:	e8 94 00 00 00       	call   6412 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    637e:	eb 05                	jmp    6385 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    6380:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6385:	c9                   	leave
    6386:	c3                   	ret

0000000000006387 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6387:	55                   	push   %rbp
    6388:	48 89 e5             	mov    %rsp,%rbp
    638b:	48 83 ec 20          	sub    $0x20,%rsp
    638f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6393:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6397:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    639b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    639f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63a3:	48 89 d6             	mov    %rdx,%rsi
    63a6:	48 89 c7             	mov    %rax,%rdi
    63a9:	e8 8e 00 00 00       	call   643c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    63ae:	c9                   	leave
    63af:	c3                   	ret

00000000000063b0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    63b0:	55                   	push   %rbp
    63b1:	48 89 e5             	mov    %rsp,%rbp
    63b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63bc:	90                   	nop
    63bd:	5d                   	pop    %rbp
    63be:	c3                   	ret

00000000000063bf <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    63bf:	55                   	push   %rbp
    63c0:	48 89 e5             	mov    %rsp,%rbp
    63c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    63c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63cb:	5d                   	pop    %rbp
    63cc:	c3                   	ret
    63cd:	90                   	nop

00000000000063ce <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    63ce:	55                   	push   %rbp
    63cf:	48 89 e5             	mov    %rsp,%rbp
    63d2:	48 83 ec 20          	sub    $0x20,%rsp
    63d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    63e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63ea:	48 89 d6             	mov    %rdx,%rsi
    63ed:	48 89 c7             	mov    %rax,%rdi
    63f0:	e8 5b df ff ff       	call   4350 <_ZdlPvm@plt>
      }
    63f5:	c9                   	leave
    63f6:	c3                   	ret
    63f7:	90                   	nop

00000000000063f8 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    63f8:	55                   	push   %rbp
    63f9:	48 89 e5             	mov    %rsp,%rbp
    63fc:	48 83 ec 10          	sub    $0x10,%rsp
    6400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6408:	48 89 c7             	mov    %rax,%rdi
    640b:	e8 8a 00 00 00       	call   649a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6410:	c9                   	leave
    6411:	c3                   	ret

0000000000006412 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6412:	55                   	push   %rbp
    6413:	48 89 e5             	mov    %rsp,%rbp
    6416:	48 83 ec 10          	sub    $0x10,%rsp
    641a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    641e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6422:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    642a:	ba 00 00 00 00       	mov    $0x0,%edx
    642f:	48 89 ce             	mov    %rcx,%rsi
    6432:	48 89 c7             	mov    %rax,%rdi
    6435:	e8 74 00 00 00       	call   64ae <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    643a:	c9                   	leave
    643b:	c3                   	ret

000000000000643c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    643c:	55                   	push   %rbp
    643d:	48 89 e5             	mov    %rsp,%rbp
    6440:	48 83 ec 20          	sub    $0x20,%rsp
    6444:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6448:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    644c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6451:	74 40                	je     6493 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    6453:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6457:	48 89 c7             	mov    %rax,%rdi
    645a:	e8 60 ff ff ff       	call   63bf <_ZSt11__addressofIcEPT_RS0_>
    645f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    6463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6467:	48 89 c7             	mov    %rax,%rdi
    646a:	e8 87 00 00 00       	call   64f6 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    646f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6474:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6478:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    647c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6480:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6484:	48 89 ce             	mov    %rcx,%rsi
    6487:	48 89 c7             	mov    %rax,%rdi
    648a:	e8 8a 00 00 00       	call   6519 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    648f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6493:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6497:	c9                   	leave
    6498:	c3                   	ret
    6499:	90                   	nop

000000000000649a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    649a:	55                   	push   %rbp
    649b:	48 89 e5             	mov    %rsp,%rbp
    649e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    64a2:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    64a9:	ff ff 7f 
      }
    64ac:	5d                   	pop    %rbp
    64ad:	c3                   	ret

00000000000064ae <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    64ae:	55                   	push   %rbp
    64af:	48 89 e5             	mov    %rsp,%rbp
    64b2:	48 83 ec 20          	sub    $0x20,%rsp
    64b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    64c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c6:	48 89 c7             	mov    %rax,%rdi
    64c9:	e8 cc ff ff ff       	call   649a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    64ce:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    64d2:	0f 92 c0             	setb   %al
    64d5:	0f b6 c0             	movzbl %al,%eax
    64d8:	48 85 c0             	test   %rax,%rax
    64db:	0f 95 c0             	setne  %al
    64de:	84 c0                	test   %al,%al
    64e0:	74 05                	je     64e7 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    64e2:	e8 f9 db ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    64e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64eb:	48 89 c7             	mov    %rax,%rdi
    64ee:	e8 4d de ff ff       	call   4340 <_Znwm@plt>
    64f3:	90                   	nop
      }
    64f4:	c9                   	leave
    64f5:	c3                   	ret

00000000000064f6 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    64f6:	55                   	push   %rbp
    64f7:	48 89 e5             	mov    %rsp,%rbp
    64fa:	48 83 ec 10          	sub    $0x10,%rsp
    64fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6506:	48 89 c6             	mov    %rax,%rsi
    6509:	bf 01 00 00 00       	mov    $0x1,%edi
    650e:	e8 dd e8 ff ff       	call   4df0 <_ZnwmPv>
    6513:	c6 00 00             	movb   $0x0,(%rax)
    }
    6516:	90                   	nop
    6517:	c9                   	leave
    6518:	c3                   	ret

0000000000006519 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6519:	55                   	push   %rbp
    651a:	48 89 e5             	mov    %rsp,%rbp
    651d:	48 83 ec 20          	sub    $0x20,%rsp
    6521:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6525:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6529:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    652d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6531:	48 89 c7             	mov    %rax,%rdi
    6534:	e8 27 fc ff ff       	call   6160 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6539:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    653d:	48 89 c7             	mov    %rax,%rdi
    6540:	e8 bd e8 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    6545:	48 89 c1             	mov    %rax,%rcx
    6548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    654c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6550:	48 89 ce             	mov    %rcx,%rsi
    6553:	48 89 c7             	mov    %rax,%rdi
    6556:	e8 02 00 00 00       	call   655d <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    655b:	c9                   	leave
    655c:	c3                   	ret

000000000000655d <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    655d:	55                   	push   %rbp
    655e:	48 89 e5             	mov    %rsp,%rbp
    6561:	48 83 ec 20          	sub    $0x20,%rsp
    6565:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6569:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    656d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6571:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6576:	75 06                	jne    657e <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    6578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    657c:	eb 2a                	jmp    65a8 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    657e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6582:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6586:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    658a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    658e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6592:	48 89 ce             	mov    %rcx,%rsi
    6595:	48 89 c7             	mov    %rax,%rdi
    6598:	e8 0d 00 00 00       	call   65aa <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    659d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    65a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    65a5:	48 01 d0             	add    %rdx,%rax
    }
    65a8:	c9                   	leave
    65a9:	c3                   	ret

00000000000065aa <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    65aa:	55                   	push   %rbp
    65ab:	48 89 e5             	mov    %rsp,%rbp
    65ae:	48 83 ec 20          	sub    $0x20,%rsp
    65b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    65be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    65c2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    65c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65ca:	48 89 ce             	mov    %rcx,%rsi
    65cd:	48 89 c7             	mov    %rax,%rdi
    65d0:	e8 03 00 00 00       	call   65d8 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    65d5:	90                   	nop
    65d6:	c9                   	leave
    65d7:	c3                   	ret

00000000000065d8 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    65d8:	55                   	push   %rbp
    65d9:	48 89 e5             	mov    %rsp,%rbp
    65dc:	48 83 ec 30          	sub    $0x30,%rsp
    65e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    65e8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    65ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65f0:	0f b6 00             	movzbl (%rax),%eax
    65f3:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    65f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65fa:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    65fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6602:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6607:	74 19                	je     6622 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6609:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    660d:	0f b6 c8             	movzbl %al,%ecx
    6610:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6614:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6618:	89 ce                	mov    %ecx,%esi
    661a:	48 89 c7             	mov    %rax,%rdi
    661d:	e8 6e db ff ff       	call   4190 <memset@plt>
    }
    6622:	90                   	nop
    6623:	c9                   	leave
    6624:	c3                   	ret

0000000000006625 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    6625:	55                   	push   %rbp
    6626:	48 89 e5             	mov    %rsp,%rbp
    6629:	48 83 ec 10          	sub    $0x10,%rsp
    662d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6635:	48 89 c7             	mov    %rax,%rdi
    6638:	e8 93 da ff ff       	call   40d0 <glfwDestroyWindow@plt>
    663d:	90                   	nop
    663e:	c9                   	leave
    663f:	c3                   	ret

0000000000006640 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    6640:	55                   	push   %rbp
    6641:	48 89 e5             	mov    %rsp,%rbp
    6644:	48 83 ec 10          	sub    $0x10,%rsp
    6648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    664c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    6650:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6658:	48 89 d6             	mov    %rdx,%rsi
    665b:	48 89 c7             	mov    %rax,%rdi
    665e:	e8 fd dc ff ff       	call   4360 <vkDestroyInstance@plt>
}
    6663:	90                   	nop
    6664:	c9                   	leave
    6665:	c3                   	ret

0000000000006666 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    6666:	55                   	push   %rbp
    6667:	48 89 e5             	mov    %rsp,%rbp
    666a:	48 83 ec 10          	sub    $0x10,%rsp
    666e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    6676:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    667a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    667e:	48 89 d6             	mov    %rdx,%rsi
    6681:	48 89 c7             	mov    %rax,%rdi
    6684:	e8 f7 db ff ff       	call   4280 <vkDestroyDevice@plt>
}
    6689:	90                   	nop
    668a:	c9                   	leave
    668b:	c3                   	ret

000000000000668c <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    668c:	55                   	push   %rbp
    668d:	48 89 e5             	mov    %rsp,%rbp
    6690:	48 83 ec 20          	sub    $0x20,%rsp
    6694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6698:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    669c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    66a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    66a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66ac:	48 89 ce             	mov    %rcx,%rsi
    66af:	48 89 c7             	mov    %rax,%rdi
    66b2:	e8 b9 df ff ff       	call   4670 <vkDestroySurfaceKHR@plt>
}
    66b7:	90                   	nop
    66b8:	c9                   	leave
    66b9:	c3                   	ret

00000000000066ba <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    66ba:	55                   	push   %rbp
    66bb:	48 89 e5             	mov    %rsp,%rbp
    66be:	48 83 ec 20          	sub    $0x20,%rsp
    66c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    66ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    66d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66da:	48 89 ce             	mov    %rcx,%rsi
    66dd:	48 89 c7             	mov    %rax,%rdi
    66e0:	e8 db d9 ff ff       	call   40c0 <vkDestroySwapchainKHR@plt>
}
    66e5:	90                   	nop
    66e6:	c9                   	leave
    66e7:	c3                   	ret

00000000000066e8 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    66e8:	55                   	push   %rbp
    66e9:	48 89 e5             	mov    %rsp,%rbp
    66ec:	48 83 ec 20          	sub    $0x20,%rsp
    66f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    66fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6700:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6708:	48 89 ce             	mov    %rcx,%rsi
    670b:	48 89 c7             	mov    %rax,%rdi
    670e:	e8 8d df ff ff       	call   46a0 <vkDestroyImageView@plt>
}
    6713:	90                   	nop
    6714:	c9                   	leave
    6715:	c3                   	ret

0000000000006716 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    6716:	55                   	push   %rbp
    6717:	48 89 e5             	mov    %rsp,%rbp
    671a:	48 83 ec 20          	sub    $0x20,%rsp
    671e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6726:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    672a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    672e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6736:	48 89 ce             	mov    %rcx,%rsi
    6739:	48 89 c7             	mov    %rax,%rdi
    673c:	e8 2f dd ff ff       	call   4470 <vkDestroyShaderModule@plt>
}
    6741:	90                   	nop
    6742:	c9                   	leave
    6743:	c3                   	ret

0000000000006744 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    6744:	55                   	push   %rbp
    6745:	48 89 e5             	mov    %rsp,%rbp
    6748:	48 83 ec 20          	sub    $0x20,%rsp
    674c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6750:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6754:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    6758:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    675c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6764:	48 89 ce             	mov    %rcx,%rsi
    6767:	48 89 c7             	mov    %rax,%rdi
    676a:	e8 81 dc ff ff       	call   43f0 <vkDestroyPipeline@plt>
}
    676f:	90                   	nop
    6770:	c9                   	leave
    6771:	c3                   	ret

0000000000006772 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    6772:	55                   	push   %rbp
    6773:	48 89 e5             	mov    %rsp,%rbp
    6776:	48 83 ec 40          	sub    $0x40,%rsp
    677a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    677e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6782:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6786:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    678a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    678e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6792:	48 89 c7             	mov    %rax,%rdi
    6795:	e8 96 00 00 00       	call   6830 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    679a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    679e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a2:	48 89 c7             	mov    %rax,%rdi
    67a5:	e8 ac 00 00 00       	call   6856 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    67aa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    67ae:	eb 36                	jmp    67e6 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    67b0:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    67b4:	48 89 c7             	mov    %rax,%rdi
    67b7:	e8 1e 01 00 00       	call   68da <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    67bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    67c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67c4:	48 8b 08             	mov    (%rax),%rcx
    67c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    67cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67cf:	48 89 ce             	mov    %rcx,%rsi
    67d2:	48 89 c7             	mov    %rax,%rdi
    67d5:	e8 16 dc ff ff       	call   43f0 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    67da:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    67de:	48 89 c7             	mov    %rax,%rdi
    67e1:	e8 d4 00 00 00       	call   68ba <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    67e6:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    67ea:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    67ee:	48 89 d6             	mov    %rdx,%rsi
    67f1:	48 89 c7             	mov    %rax,%rdi
    67f4:	e8 86 00 00 00       	call   687f <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    67f9:	84 c0                	test   %al,%al
    67fb:	75 b3                	jne    67b0 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    67fd:	90                   	nop
    67fe:	90                   	nop
    67ff:	c9                   	leave
    6800:	c3                   	ret

0000000000006801 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    6801:	55                   	push   %rbp
    6802:	48 89 e5             	mov    %rsp,%rbp
    6805:	48 83 ec 20          	sub    $0x20,%rsp
    6809:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    680d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6811:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    6815:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6819:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    681d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6821:	48 89 ce             	mov    %rcx,%rsi
    6824:	48 89 c7             	mov    %rax,%rdi
    6827:	e8 24 dd ff ff       	call   4550 <vkDestroyCommandPool@plt>
}
    682c:	90                   	nop
    682d:	c9                   	leave
    682e:	c3                   	ret
    682f:	90                   	nop

0000000000006830 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6830:	55                   	push   %rbp
    6831:	48 89 e5             	mov    %rsp,%rbp
    6834:	48 83 ec 20          	sub    $0x20,%rsp
    6838:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    683c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6840:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6844:	48 89 d6             	mov    %rdx,%rsi
    6847:	48 89 c7             	mov    %rax,%rdi
    684a:	e8 9d 00 00 00       	call   68ec <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    684f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6853:	c9                   	leave
    6854:	c3                   	ret
    6855:	90                   	nop

0000000000006856 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6856:	55                   	push   %rbp
    6857:	48 89 e5             	mov    %rsp,%rbp
    685a:	48 83 ec 20          	sub    $0x20,%rsp
    685e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6862:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6866:	48 8d 50 08          	lea    0x8(%rax),%rdx
    686a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    686e:	48 89 d6             	mov    %rdx,%rsi
    6871:	48 89 c7             	mov    %rax,%rdi
    6874:	e8 73 00 00 00       	call   68ec <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    687d:	c9                   	leave
    687e:	c3                   	ret

000000000000687f <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    687f:	55                   	push   %rbp
    6880:	48 89 e5             	mov    %rsp,%rbp
    6883:	53                   	push   %rbx
    6884:	48 83 ec 18          	sub    $0x18,%rsp
    6888:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    688c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6894:	48 89 c7             	mov    %rax,%rdi
    6897:	e8 6e 00 00 00       	call   690a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    689c:	48 8b 18             	mov    (%rax),%rbx
    689f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    68a3:	48 89 c7             	mov    %rax,%rdi
    68a6:	e8 5f 00 00 00       	call   690a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    68ab:	48 8b 00             	mov    (%rax),%rax
    68ae:	48 39 c3             	cmp    %rax,%rbx
    68b1:	0f 95 c0             	setne  %al
    68b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    68b8:	c9                   	leave
    68b9:	c3                   	ret

00000000000068ba <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    68ba:	55                   	push   %rbp
    68bb:	48 89 e5             	mov    %rsp,%rbp
    68be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    68c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68c6:	48 8b 00             	mov    (%rax),%rax
    68c9:	48 8d 50 08          	lea    0x8(%rax),%rdx
    68cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68d1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    68d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    68d8:	5d                   	pop    %rbp
    68d9:	c3                   	ret

00000000000068da <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    68da:	55                   	push   %rbp
    68db:	48 89 e5             	mov    %rsp,%rbp
    68de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    68e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68e6:	48 8b 00             	mov    (%rax),%rax
    68e9:	5d                   	pop    %rbp
    68ea:	c3                   	ret
    68eb:	90                   	nop

00000000000068ec <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    68ec:	55                   	push   %rbp
    68ed:	48 89 e5             	mov    %rsp,%rbp
    68f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    68f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    68fc:	48 8b 10             	mov    (%rax),%rdx
    68ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6903:	48 89 10             	mov    %rdx,(%rax)
    6906:	90                   	nop
    6907:	5d                   	pop    %rbp
    6908:	c3                   	ret
    6909:	90                   	nop

000000000000690a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    690a:	55                   	push   %rbp
    690b:	48 89 e5             	mov    %rsp,%rbp
    690e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6916:	5d                   	pop    %rbp
    6917:	c3                   	ret

0000000000006918 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6918:	55                   	push   %rbp
    6919:	48 89 e5             	mov    %rsp,%rbp
    691c:	53                   	push   %rbx
    691d:	48 83 ec 28          	sub    $0x28,%rsp
    6921:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6925:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6929:	be 00 00 00 00       	mov    $0x0,%esi
    692e:	48 89 c7             	mov    %rax,%rdi
    6931:	e8 ea da ff ff       	call   4420 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6936:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6939:	89 c3                	mov    %eax,%ebx
    693b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    693f:	48 89 c7             	mov    %rax,%rdi
    6942:	e8 47 11 00 00       	call   7a8e <_ZNSaI17VkLayerPropertiesEC1Ev>
    6947:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    694b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    694f:	48 89 de             	mov    %rbx,%rsi
    6952:	48 89 c7             	mov    %rax,%rdi
    6955:	e8 6c 11 00 00       	call   7ac6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    695a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    695e:	48 89 c7             	mov    %rax,%rdi
    6961:	e8 44 11 00 00       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6966:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    696a:	48 89 c7             	mov    %rax,%rdi
    696d:	e8 0e 12 00 00       	call   7b80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6972:	48 89 c2             	mov    %rax,%rdx
    6975:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6979:	48 89 d6             	mov    %rdx,%rsi
    697c:	48 89 c7             	mov    %rax,%rdi
    697f:	e8 9c da ff ff       	call   4420 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6984:	eb 34                	jmp    69ba <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6986:	48 89 c3             	mov    %rax,%rbx
    6989:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    698d:	48 89 c7             	mov    %rax,%rdi
    6990:	e8 15 11 00 00       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
    6995:	48 89 d8             	mov    %rbx,%rax
    6998:	48 89 c7             	mov    %rax,%rdi
    699b:	e8 e0 dc ff ff       	call   4680 <_Unwind_Resume@plt>
}
    69a0:	48 89 c3             	mov    %rax,%rbx
    69a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69a7:	48 89 c7             	mov    %rax,%rdi
    69aa:	e8 8d 11 00 00       	call   7b3c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    69af:	48 89 d8             	mov    %rbx,%rax
    69b2:	48 89 c7             	mov    %rax,%rdi
    69b5:	e8 c6 dc ff ff       	call   4680 <_Unwind_Resume@plt>
    69ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    69c2:	c9                   	leave
    69c3:	c3                   	ret

00000000000069c4 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    69c4:	55                   	push   %rbp
    69c5:	48 89 e5             	mov    %rsp,%rbp
    69c8:	41 54                	push   %r12
    69ca:	53                   	push   %rbx
    69cb:	48 83 ec 20          	sub    $0x20,%rsp
    69cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    69d3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    69d7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    69db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    69df:	ba 00 00 00 00       	mov    $0x0,%edx
    69e4:	48 89 ce             	mov    %rcx,%rsi
    69e7:	48 89 c7             	mov    %rax,%rdi
    69ea:	e8 a1 d8 ff ff       	call   4290 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    69ef:	85 c0                	test   %eax,%eax
    69f1:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    69f4:	84 c0                	test   %al,%al
    69f6:	74 3b                	je     6a33 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    69f8:	bf 10 00 00 00       	mov    $0x10,%edi
    69fd:	e8 5e d7 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6a02:	48 89 c3             	mov    %rax,%rbx
    6a05:	48 8d 05 24 f5 00 00 	lea    0xf524(%rip),%rax        # 15f30 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6a0c:	48 89 c6             	mov    %rax,%rsi
    6a0f:	48 89 df             	mov    %rbx,%rdi
    6a12:	e8 e9 d6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6a17:	48 8b 05 8a b5 01 00 	mov    0x1b58a(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6a1e:	48 89 c2             	mov    %rax,%rdx
    6a21:	48 8d 05 18 b3 01 00 	lea    0x1b318(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6a28:	48 89 c6             	mov    %rax,%rsi
    6a2b:	48 89 df             	mov    %rbx,%rdi
    6a2e:	e8 ed db ff ff       	call   4620 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6a33:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6a36:	89 c3                	mov    %eax,%ebx
    6a38:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6a3c:	48 89 c7             	mov    %rax,%rdi
    6a3f:	e8 b8 11 00 00       	call   7bfc <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6a44:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6a48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a4c:	48 89 de             	mov    %rbx,%rsi
    6a4f:	48 89 c7             	mov    %rax,%rdi
    6a52:	e8 dd 11 00 00       	call   7c34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6a57:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6a5b:	48 89 c7             	mov    %rax,%rdi
    6a5e:	e8 b5 11 00 00       	call   7c18 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6a63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a67:	48 89 c7             	mov    %rax,%rdi
    6a6a:	e8 7f 12 00 00       	call   7cee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6a6f:	48 89 c2             	mov    %rax,%rdx
    6a72:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6a76:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6a7a:	48 89 ce             	mov    %rcx,%rsi
    6a7d:	48 89 c7             	mov    %rax,%rdi
    6a80:	e8 0b d8 ff ff       	call   4290 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    6a85:	85 c0                	test   %eax,%eax
    6a87:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6a8a:	84 c0                	test   %al,%al
    6a8c:	0f 84 95 00 00 00    	je     6b27 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    6a92:	bf 10 00 00 00       	mov    $0x10,%edi
    6a97:	e8 c4 d6 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6a9c:	48 89 c3             	mov    %rax,%rbx
    6a9f:	48 8d 05 8a f4 00 00 	lea    0xf48a(%rip),%rax        # 15f30 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6aa6:	48 89 c6             	mov    %rax,%rsi
    6aa9:	48 89 df             	mov    %rbx,%rdi
    6aac:	e8 4f d6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6ab1:	48 8b 05 f0 b4 01 00 	mov    0x1b4f0(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ab8:	48 89 c2             	mov    %rax,%rdx
    6abb:	48 8d 05 7e b2 01 00 	lea    0x1b27e(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6ac2:	48 89 c6             	mov    %rax,%rsi
    6ac5:	48 89 df             	mov    %rbx,%rdi
    6ac8:	e8 53 db ff ff       	call   4620 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6acd:	49 89 c4             	mov    %rax,%r12
    6ad0:	48 89 df             	mov    %rbx,%rdi
    6ad3:	e8 48 d7 ff ff       	call   4220 <__cxa_free_exception@plt>
    6ad8:	4c 89 e0             	mov    %r12,%rax
    6adb:	48 89 c7             	mov    %rax,%rdi
    6ade:	e8 9d db ff ff       	call   4680 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6ae3:	48 89 c3             	mov    %rax,%rbx
    6ae6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6aea:	48 89 c7             	mov    %rax,%rdi
    6aed:	e8 26 11 00 00       	call   7c18 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6af2:	48 89 d8             	mov    %rbx,%rax
    6af5:	48 89 c7             	mov    %rax,%rdi
    6af8:	e8 83 db ff ff       	call   4680 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6afd:	49 89 c4             	mov    %rax,%r12
    6b00:	48 89 df             	mov    %rbx,%rdi
    6b03:	e8 18 d7 ff ff       	call   4220 <__cxa_free_exception@plt>
    6b08:	4c 89 e3             	mov    %r12,%rbx
    6b0b:	eb 03                	jmp    6b10 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    6b0d:	48 89 c3             	mov    %rax,%rbx
    6b10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b14:	48 89 c7             	mov    %rax,%rdi
    6b17:	e8 8e 11 00 00       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6b1c:	48 89 d8             	mov    %rbx,%rax
    6b1f:	48 89 c7             	mov    %rax,%rdi
    6b22:	e8 59 db ff ff       	call   4680 <_Unwind_Resume@plt>
  return instanceExtensions;
    6b27:	90                   	nop
}
    6b28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b2c:	48 83 c4 20          	add    $0x20,%rsp
    6b30:	5b                   	pop    %rbx
    6b31:	41 5c                	pop    %r12
    6b33:	5d                   	pop    %rbp
    6b34:	c3                   	ret

0000000000006b35 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    6b35:	55                   	push   %rbp
    6b36:	48 89 e5             	mov    %rsp,%rbp
    6b39:	41 54                	push   %r12
    6b3b:	53                   	push   %rbx
    6b3c:	48 83 ec 30          	sub    $0x30,%rsp
    6b40:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6b44:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6b48:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    6b4c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6b50:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6b54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6b58:	b9 00 00 00 00       	mov    $0x0,%ecx
    6b5d:	48 89 c7             	mov    %rax,%rdi
    6b60:	e8 cb d9 ff ff       	call   4530 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    6b65:	85 c0                	test   %eax,%eax
    6b67:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6b6a:	84 c0                	test   %al,%al
    6b6c:	74 3b                	je     6ba9 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    6b6e:	bf 10 00 00 00       	mov    $0x10,%edi
    6b73:	e8 e8 d5 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6b78:	48 89 c3             	mov    %rax,%rbx
    6b7b:	48 8d 05 d6 f3 00 00 	lea    0xf3d6(%rip),%rax        # 15f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6b82:	48 89 c6             	mov    %rax,%rsi
    6b85:	48 89 df             	mov    %rbx,%rdi
    6b88:	e8 73 d5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6b8d:	48 8b 05 14 b4 01 00 	mov    0x1b414(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6b94:	48 89 c2             	mov    %rax,%rdx
    6b97:	48 8d 05 a2 b1 01 00 	lea    0x1b1a2(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6b9e:	48 89 c6             	mov    %rax,%rsi
    6ba1:	48 89 df             	mov    %rbx,%rdi
    6ba4:	e8 77 da ff ff       	call   4620 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6ba9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6bac:	89 c3                	mov    %eax,%ebx
    6bae:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6bb2:	48 89 c7             	mov    %rax,%rdi
    6bb5:	e8 42 10 00 00       	call   7bfc <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6bba:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6bbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bc2:	48 89 de             	mov    %rbx,%rsi
    6bc5:	48 89 c7             	mov    %rax,%rdi
    6bc8:	e8 67 10 00 00       	call   7c34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6bcd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6bd1:	48 89 c7             	mov    %rax,%rdi
    6bd4:	e8 3f 10 00 00       	call   7c18 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    6bd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bdd:	48 89 c7             	mov    %rax,%rdi
    6be0:	e8 09 11 00 00       	call   7cee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6be5:	48 89 c1             	mov    %rax,%rcx
    6be8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6bec:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6bf0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6bf4:	48 89 c7             	mov    %rax,%rdi
    6bf7:	e8 34 d9 ff ff       	call   4530 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    6bfc:	85 c0                	test   %eax,%eax
    6bfe:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6c01:	84 c0                	test   %al,%al
    6c03:	0f 84 95 00 00 00    	je     6c9e <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    6c09:	bf 10 00 00 00       	mov    $0x10,%edi
    6c0e:	e8 4d d5 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6c13:	48 89 c3             	mov    %rax,%rbx
    6c16:	48 8d 05 3b f3 00 00 	lea    0xf33b(%rip),%rax        # 15f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6c1d:	48 89 c6             	mov    %rax,%rsi
    6c20:	48 89 df             	mov    %rbx,%rdi
    6c23:	e8 d8 d4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6c28:	48 8b 05 79 b3 01 00 	mov    0x1b379(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6c2f:	48 89 c2             	mov    %rax,%rdx
    6c32:	48 8d 05 07 b1 01 00 	lea    0x1b107(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6c39:	48 89 c6             	mov    %rax,%rsi
    6c3c:	48 89 df             	mov    %rbx,%rdi
    6c3f:	e8 dc d9 ff ff       	call   4620 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6c44:	49 89 c4             	mov    %rax,%r12
    6c47:	48 89 df             	mov    %rbx,%rdi
    6c4a:	e8 d1 d5 ff ff       	call   4220 <__cxa_free_exception@plt>
    6c4f:	4c 89 e0             	mov    %r12,%rax
    6c52:	48 89 c7             	mov    %rax,%rdi
    6c55:	e8 26 da ff ff       	call   4680 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6c5a:	48 89 c3             	mov    %rax,%rbx
    6c5d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c61:	48 89 c7             	mov    %rax,%rdi
    6c64:	e8 af 0f 00 00       	call   7c18 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6c69:	48 89 d8             	mov    %rbx,%rax
    6c6c:	48 89 c7             	mov    %rax,%rdi
    6c6f:	e8 0c da ff ff       	call   4680 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6c74:	49 89 c4             	mov    %rax,%r12
    6c77:	48 89 df             	mov    %rbx,%rdi
    6c7a:	e8 a1 d5 ff ff       	call   4220 <__cxa_free_exception@plt>
    6c7f:	4c 89 e3             	mov    %r12,%rbx
    6c82:	eb 03                	jmp    6c87 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    6c84:	48 89 c3             	mov    %rax,%rbx
    6c87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c8b:	48 89 c7             	mov    %rax,%rdi
    6c8e:	e8 17 10 00 00       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6c93:	48 89 d8             	mov    %rbx,%rax
    6c96:	48 89 c7             	mov    %rax,%rdi
    6c99:	e8 e2 d9 ff ff       	call   4680 <_Unwind_Resume@plt>
  return deviceExtensions;
    6c9e:	90                   	nop
}
    6c9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ca3:	48 83 c4 30          	add    $0x30,%rsp
    6ca7:	5b                   	pop    %rbx
    6ca8:	41 5c                	pop    %r12
    6caa:	5d                   	pop    %rbp
    6cab:	c3                   	ret

0000000000006cac <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    6cac:	55                   	push   %rbp
    6cad:	48 89 e5             	mov    %rsp,%rbp
    6cb0:	53                   	push   %rbx
    6cb1:	48 83 ec 38          	sub    $0x38,%rsp
    6cb5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    6cb9:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6cbd:	48 89 c7             	mov    %rax,%rdi
    6cc0:	e8 7b d5 ff ff       	call   4240 <glfwGetRequiredInstanceExtensions@plt>
    6cc5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6cc9:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6ccc:	89 c3                	mov    %eax,%ebx
    6cce:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6cd2:	48 89 c7             	mov    %rax,%rdi
    6cd5:	e8 90 10 00 00       	call   7d6a <_ZNSaIPKcEC1Ev>
    6cda:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    6cde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6ce2:	48 89 de             	mov    %rbx,%rsi
    6ce5:	48 89 c7             	mov    %rax,%rdi
    6ce8:	e8 b5 10 00 00       	call   7da2 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    6ced:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6cf1:	48 89 c7             	mov    %rax,%rdi
    6cf4:	e8 8d 10 00 00       	call   7d86 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6cf9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    6d00:	eb 2e                	jmp    6d30 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    6d02:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6d05:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6d0c:	00 
    6d0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6d11:	48 01 d0             	add    %rdx,%rax
    6d14:	48 8b 18             	mov    (%rax),%rbx
    6d17:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6d1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6d1e:	48 89 d6             	mov    %rdx,%rsi
    6d21:	48 89 c7             	mov    %rax,%rdi
    6d24:	e8 ef 10 00 00       	call   7e18 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    6d29:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6d2c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6d30:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6d33:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6d36:	72 ca                	jb     6d02 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    6d38:	eb 1a                	jmp    6d54 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6d3a:	48 89 c3             	mov    %rax,%rbx
    6d3d:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6d41:	48 89 c7             	mov    %rax,%rdi
    6d44:	e8 3d 10 00 00       	call   7d86 <_ZNSaIPKcED1Ev>
    6d49:	48 89 d8             	mov    %rbx,%rax
    6d4c:	48 89 c7             	mov    %rax,%rdi
    6d4f:	e8 2c d9 ff ff       	call   4680 <_Unwind_Resume@plt>
}
    6d54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6d58:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6d5c:	c9                   	leave
    6d5d:	c3                   	ret

0000000000006d5e <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    6d5e:	55                   	push   %rbp
    6d5f:	48 89 e5             	mov    %rsp,%rbp
    6d62:	53                   	push   %rbx
    6d63:	48 83 ec 28          	sub    $0x28,%rsp
    6d67:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6d6b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6d6f:	be 00 00 00 00       	mov    $0x0,%esi
    6d74:	48 89 c7             	mov    %rax,%rdi
    6d77:	e8 a4 d6 ff ff       	call   4420 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6d7c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6d7f:	89 c3                	mov    %eax,%ebx
    6d81:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d85:	48 89 c7             	mov    %rax,%rdi
    6d88:	e8 01 0d 00 00       	call   7a8e <_ZNSaI17VkLayerPropertiesEC1Ev>
    6d8d:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6d91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d95:	48 89 de             	mov    %rbx,%rsi
    6d98:	48 89 c7             	mov    %rax,%rdi
    6d9b:	e8 26 0d 00 00       	call   7ac6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6da0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6da4:	48 89 c7             	mov    %rax,%rdi
    6da7:	e8 fe 0c 00 00       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6dac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6db0:	48 89 c7             	mov    %rax,%rdi
    6db3:	e8 c8 0d 00 00       	call   7b80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6db8:	48 89 c2             	mov    %rax,%rdx
    6dbb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6dbf:	48 89 d6             	mov    %rdx,%rsi
    6dc2:	48 89 c7             	mov    %rax,%rdi
    6dc5:	e8 56 d6 ff ff       	call   4420 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6dca:	eb 34                	jmp    6e00 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6dcc:	48 89 c3             	mov    %rax,%rbx
    6dcf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6dd3:	48 89 c7             	mov    %rax,%rdi
    6dd6:	e8 cf 0c 00 00       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
    6ddb:	48 89 d8             	mov    %rbx,%rax
    6dde:	48 89 c7             	mov    %rax,%rdi
    6de1:	e8 9a d8 ff ff       	call   4680 <_Unwind_Resume@plt>
}
    6de6:	48 89 c3             	mov    %rax,%rbx
    6de9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ded:	48 89 c7             	mov    %rax,%rdi
    6df0:	e8 47 0d 00 00       	call   7b3c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6df5:	48 89 d8             	mov    %rbx,%rax
    6df8:	48 89 c7             	mov    %rax,%rdi
    6dfb:	e8 80 d8 ff ff       	call   4680 <_Unwind_Resume@plt>
    6e00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6e08:	c9                   	leave
    6e09:	c3                   	ret

0000000000006e0a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    6e0a:	55                   	push   %rbp
    6e0b:	48 89 e5             	mov    %rsp,%rbp
    6e0e:	41 54                	push   %r12
    6e10:	53                   	push   %rbx
    6e11:	48 83 ec 20          	sub    $0x20,%rsp
    6e15:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6e19:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    6e1d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6e21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6e25:	ba 00 00 00 00       	mov    $0x0,%edx
    6e2a:	48 89 ce             	mov    %rcx,%rsi
    6e2d:	48 89 c7             	mov    %rax,%rdi
    6e30:	e8 4b d3 ff ff       	call   4180 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    6e35:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6e38:	85 c0                	test   %eax,%eax
    6e3a:	75 3b                	jne    6e77 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    6e3c:	bf 10 00 00 00       	mov    $0x10,%edi
    6e41:	e8 1a d3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6e46:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    6e49:	48 8d 05 30 f1 00 00 	lea    0xf130(%rip),%rax        # 15f80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    6e50:	48 89 c6             	mov    %rax,%rsi
    6e53:	48 89 df             	mov    %rbx,%rdi
    6e56:	e8 a5 d2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    6e5b:	48 8b 05 46 b1 01 00 	mov    0x1b146(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6e62:	48 89 c2             	mov    %rax,%rdx
    6e65:	48 8d 05 d4 ae 01 00 	lea    0x1aed4(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6e6c:	48 89 c6             	mov    %rax,%rsi
    6e6f:	48 89 df             	mov    %rbx,%rdi
    6e72:	e8 a9 d7 ff ff       	call   4620 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    6e77:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6e7a:	89 c3                	mov    %eax,%ebx
    6e7c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e80:	48 89 c7             	mov    %rax,%rdi
    6e83:	e8 fe 0f 00 00       	call   7e86 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    6e88:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6e8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e90:	48 89 de             	mov    %rbx,%rsi
    6e93:	48 89 c7             	mov    %rax,%rdi
    6e96:	e8 23 10 00 00       	call   7ebe <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    6e9b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e9f:	48 89 c7             	mov    %rax,%rdi
    6ea2:	e8 fb 0f 00 00       	call   7ea2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    6ea7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6eab:	48 89 c7             	mov    %rax,%rdi
    6eae:	e8 c5 10 00 00       	call   7f78 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    6eb3:	48 89 c2             	mov    %rax,%rdx
    6eb6:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6eba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6ebe:	48 89 ce             	mov    %rcx,%rsi
    6ec1:	48 89 c7             	mov    %rax,%rdi
    6ec4:	e8 b7 d2 ff ff       	call   4180 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    6ec9:	85 c0                	test   %eax,%eax
    6ecb:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    6ece:	84 c0                	test   %al,%al
    6ed0:	0f 84 95 00 00 00    	je     6f6b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    6ed6:	bf 10 00 00 00       	mov    $0x10,%edi
    6edb:	e8 80 d2 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6ee0:	48 89 c3             	mov    %rax,%rbx
    6ee3:	48 8d 05 ce f0 00 00 	lea    0xf0ce(%rip),%rax        # 15fb8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    6eea:	48 89 c6             	mov    %rax,%rsi
    6eed:	48 89 df             	mov    %rbx,%rdi
    6ef0:	e8 0b d2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6ef5:	48 8b 05 ac b0 01 00 	mov    0x1b0ac(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6efc:	48 89 c2             	mov    %rax,%rdx
    6eff:	48 8d 05 3a ae 01 00 	lea    0x1ae3a(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6f06:	48 89 c6             	mov    %rax,%rsi
    6f09:	48 89 df             	mov    %rbx,%rdi
    6f0c:	e8 0f d7 ff ff       	call   4620 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    6f11:	49 89 c4             	mov    %rax,%r12
    6f14:	48 89 df             	mov    %rbx,%rdi
    6f17:	e8 04 d3 ff ff       	call   4220 <__cxa_free_exception@plt>
    6f1c:	4c 89 e0             	mov    %r12,%rax
    6f1f:	48 89 c7             	mov    %rax,%rdi
    6f22:	e8 59 d7 ff ff       	call   4680 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    6f27:	48 89 c3             	mov    %rax,%rbx
    6f2a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f2e:	48 89 c7             	mov    %rax,%rdi
    6f31:	e8 6c 0f 00 00       	call   7ea2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    6f36:	48 89 d8             	mov    %rbx,%rax
    6f39:	48 89 c7             	mov    %rax,%rdi
    6f3c:	e8 3f d7 ff ff       	call   4680 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    6f41:	49 89 c4             	mov    %rax,%r12
    6f44:	48 89 df             	mov    %rbx,%rdi
    6f47:	e8 d4 d2 ff ff       	call   4220 <__cxa_free_exception@plt>
    6f4c:	4c 89 e3             	mov    %r12,%rbx
    6f4f:	eb 03                	jmp    6f54 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    6f51:	48 89 c3             	mov    %rax,%rbx
    6f54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f58:	48 89 c7             	mov    %rax,%rdi
    6f5b:	e8 d4 0f 00 00       	call   7f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6f60:	48 89 d8             	mov    %rbx,%rax
    6f63:	48 89 c7             	mov    %rax,%rdi
    6f66:	e8 15 d7 ff ff       	call   4680 <_Unwind_Resume@plt>
  return physicalDevices;
    6f6b:	90                   	nop
}
    6f6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f70:	48 83 c4 20          	add    $0x20,%rsp
    6f74:	5b                   	pop    %rbx
    6f75:	41 5c                	pop    %r12
    6f77:	5d                   	pop    %rbp
    6f78:	c3                   	ret

0000000000006f79 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    6f79:	55                   	push   %rbp
    6f7a:	48 89 e5             	mov    %rsp,%rbp
    6f7d:	48 83 ec 10          	sub    $0x10,%rsp
    6f81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f85:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    6f89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6f8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f91:	48 89 d6             	mov    %rdx,%rsi
    6f94:	48 89 c7             	mov    %rax,%rdi
    6f97:	e8 74 d1 ff ff       	call   4110 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    6f9c:	90                   	nop
}
    6f9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fa1:	c9                   	leave
    6fa2:	c3                   	ret

0000000000006fa3 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    6fa3:	55                   	push   %rbp
    6fa4:	48 89 e5             	mov    %rsp,%rbp
    6fa7:	48 83 ec 20          	sub    $0x20,%rsp
    6fab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6faf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6fb3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    6fb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fbb:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    6fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fc5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6fc9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    6fcd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6fd1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6fd5:	48 89 d6             	mov    %rdx,%rsi
    6fd8:	48 89 c7             	mov    %rax,%rdi
    6fdb:	e8 20 d3 ff ff       	call   4300 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    6fe0:	90                   	nop
}
    6fe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fe5:	c9                   	leave
    6fe6:	c3                   	ret

0000000000006fe7 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    6fe7:	55                   	push   %rbp
    6fe8:	48 89 e5             	mov    %rsp,%rbp
    6feb:	53                   	push   %rbx
    6fec:	48 83 ec 28          	sub    $0x28,%rsp
    6ff0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ff4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    6ff8:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6ffc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7000:	ba 00 00 00 00       	mov    $0x0,%edx
    7005:	48 89 ce             	mov    %rcx,%rsi
    7008:	48 89 c7             	mov    %rax,%rdi
    700b:	e8 20 d2 ff ff       	call   4230 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    7010:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7013:	89 c3                	mov    %eax,%ebx
    7015:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7019:	48 89 c7             	mov    %rax,%rdi
    701c:	e8 c9 0f 00 00       	call   7fea <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    7021:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7025:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7029:	48 89 de             	mov    %rbx,%rsi
    702c:	48 89 c7             	mov    %rax,%rdi
    702f:	e8 ee 0f 00 00       	call   8022 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    7034:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7038:	48 89 c7             	mov    %rax,%rdi
    703b:	e8 c6 0f 00 00       	call   8006 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    7040:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7044:	48 89 c7             	mov    %rax,%rdi
    7047:	e8 90 10 00 00       	call   80dc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    704c:	48 89 c2             	mov    %rax,%rdx
    704f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7053:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7057:	48 89 ce             	mov    %rcx,%rsi
    705a:	48 89 c7             	mov    %rax,%rdi
    705d:	e8 ce d1 ff ff       	call   4230 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    7062:	eb 34                	jmp    7098 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    7064:	48 89 c3             	mov    %rax,%rbx
    7067:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    706b:	48 89 c7             	mov    %rax,%rdi
    706e:	e8 93 0f 00 00       	call   8006 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7073:	48 89 d8             	mov    %rbx,%rax
    7076:	48 89 c7             	mov    %rax,%rdi
    7079:	e8 02 d6 ff ff       	call   4680 <_Unwind_Resume@plt>
}
    707e:	48 89 c3             	mov    %rax,%rbx
    7081:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7085:	48 89 c7             	mov    %rax,%rdi
    7088:	e8 0b 10 00 00       	call   8098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    708d:	48 89 d8             	mov    %rbx,%rax
    7090:	48 89 c7             	mov    %rax,%rdi
    7093:	e8 e8 d5 ff ff       	call   4680 <_Unwind_Resume@plt>
    7098:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    709c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    70a0:	c9                   	leave
    70a1:	c3                   	ret

00000000000070a2 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    70a2:	55                   	push   %rbp
    70a3:	48 89 e5             	mov    %rsp,%rbp
    70a6:	53                   	push   %rbx
    70a7:	48 83 ec 68          	sub    $0x68,%rsp
    70ab:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    70af:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    70b3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    70b7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    70bb:	48 89 d6             	mov    %rdx,%rsi
    70be:	48 89 c7             	mov    %rax,%rdi
    70c1:	e8 21 ff ff ff       	call   6fe7 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    70c6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    70ca:	48 89 c7             	mov    %rax,%rdi
    70cd:	e8 86 10 00 00       	call   8158 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    70d2:	48 89 c3             	mov    %rax,%rbx
    70d5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    70d9:	48 89 c7             	mov    %rax,%rdi
    70dc:	e8 a5 10 00 00       	call   8186 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    70e1:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    70e5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    70e9:	48 89 de             	mov    %rbx,%rsi
    70ec:	48 89 c7             	mov    %rax,%rdi
    70ef:	e8 ca 10 00 00       	call   81be <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    70f4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    70f8:	48 89 c7             	mov    %rax,%rdi
    70fb:	e8 a2 10 00 00       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7100:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7107:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7108:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    710c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7110:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7114:	48 89 c7             	mov    %rax,%rdi
    7117:	e8 5c 11 00 00       	call   8278 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    711c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7120:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7124:	48 89 c7             	mov    %rax,%rdi
    7127:	e8 72 11 00 00       	call   829e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    712c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7130:	eb 4e                	jmp    7180 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    7132:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7136:	48 89 c7             	mov    %rax,%rdi
    7139:	e8 e4 11 00 00       	call   8322 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    713e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    7142:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7146:	8b 00                	mov    (%rax),%eax
    7148:	83 e0 01             	and    $0x1,%eax
    714b:	85 c0                	test   %eax,%eax
    714d:	74 25                	je     7174 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    714f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7153:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7157:	48 89 d6             	mov    %rdx,%rsi
    715a:	48 89 c7             	mov    %rax,%rdi
    715d:	e8 d2 11 00 00       	call   8334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7162:	48 89 c2             	mov    %rax,%rdx
    7165:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7169:	48 89 c6             	mov    %rax,%rsi
    716c:	48 89 d7             	mov    %rdx,%rdi
    716f:	e8 ea 11 00 00       	call   835e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7174:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7178:	48 89 c7             	mov    %rax,%rdi
    717b:	e8 82 11 00 00       	call   8302 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7180:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7184:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7188:	48 89 d6             	mov    %rdx,%rsi
    718b:	48 89 c7             	mov    %rax,%rdi
    718e:	e8 34 11 00 00       	call   82c7 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7193:	84 c0                	test   %al,%al
    7195:	75 9b                	jne    7132 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    7197:	90                   	nop
}
    7198:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    719c:	48 89 c7             	mov    %rax,%rdi
    719f:	e8 f4 0e 00 00       	call   8098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    71a4:	eb 26                	jmp    71cc <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    71a6:	48 89 c3             	mov    %rax,%rbx
    71a9:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    71ad:	48 89 c7             	mov    %rax,%rdi
    71b0:	e8 ed 0f 00 00       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    71b5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    71b9:	48 89 c7             	mov    %rax,%rdi
    71bc:	e8 d7 0e 00 00       	call   8098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    71c1:	48 89 d8             	mov    %rbx,%rax
    71c4:	48 89 c7             	mov    %rax,%rdi
    71c7:	e8 b4 d4 ff ff       	call   4680 <_Unwind_Resume@plt>
    71cc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    71d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    71d4:	c9                   	leave
    71d5:	c3                   	ret

00000000000071d6 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    71d6:	55                   	push   %rbp
    71d7:	48 89 e5             	mov    %rsp,%rbp
    71da:	53                   	push   %rbx
    71db:	48 83 ec 68          	sub    $0x68,%rsp
    71df:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    71e3:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    71e7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    71eb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    71ef:	48 89 d6             	mov    %rdx,%rsi
    71f2:	48 89 c7             	mov    %rax,%rdi
    71f5:	e8 ed fd ff ff       	call   6fe7 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    71fa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    71fe:	48 89 c7             	mov    %rax,%rdi
    7201:	e8 52 0f 00 00       	call   8158 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7206:	48 89 c3             	mov    %rax,%rbx
    7209:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    720d:	48 89 c7             	mov    %rax,%rdi
    7210:	e8 71 0f 00 00       	call   8186 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7215:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7219:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    721d:	48 89 de             	mov    %rbx,%rsi
    7220:	48 89 c7             	mov    %rax,%rdi
    7223:	e8 96 0f 00 00       	call   81be <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7228:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    722c:	48 89 c7             	mov    %rax,%rdi
    722f:	e8 6e 0f 00 00       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7234:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    723b:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    723c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7240:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7244:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7248:	48 89 c7             	mov    %rax,%rdi
    724b:	e8 28 10 00 00       	call   8278 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7250:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7254:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7258:	48 89 c7             	mov    %rax,%rdi
    725b:	e8 3e 10 00 00       	call   829e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7260:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7264:	eb 53                	jmp    72b9 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    7266:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    726a:	48 89 c7             	mov    %rax,%rdi
    726d:	e8 b0 10 00 00       	call   8322 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7272:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    7276:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    727a:	8b 00                	mov    (%rax),%eax
    727c:	83 e0 02             	and    $0x2,%eax
    727f:	85 c0                	test   %eax,%eax
    7281:	74 25                	je     72a8 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    7283:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7287:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    728b:	48 89 d6             	mov    %rdx,%rsi
    728e:	48 89 c7             	mov    %rax,%rdi
    7291:	e8 9e 10 00 00       	call   8334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7296:	48 89 c2             	mov    %rax,%rdx
    7299:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    729d:	48 89 c6             	mov    %rax,%rsi
    72a0:	48 89 d7             	mov    %rdx,%rdi
    72a3:	e8 b6 10 00 00       	call   835e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    72a8:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    72ad:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    72b1:	48 89 c7             	mov    %rax,%rdi
    72b4:	e8 49 10 00 00       	call   8302 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    72b9:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    72bd:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    72c1:	48 89 d6             	mov    %rdx,%rsi
    72c4:	48 89 c7             	mov    %rax,%rdi
    72c7:	e8 fb 0f 00 00       	call   82c7 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    72cc:	84 c0                	test   %al,%al
    72ce:	75 96                	jne    7266 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    72d0:	90                   	nop
}
    72d1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    72d5:	48 89 c7             	mov    %rax,%rdi
    72d8:	e8 bb 0d 00 00       	call   8098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    72dd:	eb 26                	jmp    7305 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    72df:	48 89 c3             	mov    %rax,%rbx
    72e2:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    72e6:	48 89 c7             	mov    %rax,%rdi
    72e9:	e8 b4 0e 00 00       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    72ee:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    72f2:	48 89 c7             	mov    %rax,%rdi
    72f5:	e8 9e 0d 00 00       	call   8098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    72fa:	48 89 d8             	mov    %rbx,%rax
    72fd:	48 89 c7             	mov    %rax,%rdi
    7300:	e8 7b d3 ff ff       	call   4680 <_Unwind_Resume@plt>
    7305:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7309:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    730d:	c9                   	leave
    730e:	c3                   	ret

000000000000730f <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    730f:	55                   	push   %rbp
    7310:	48 89 e5             	mov    %rsp,%rbp
    7313:	53                   	push   %rbx
    7314:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    731b:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    731f:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    7323:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    732a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    732e:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    7332:	48 89 d6             	mov    %rdx,%rsi
    7335:	48 89 c7             	mov    %rax,%rdi
    7338:	e8 aa fc ff ff       	call   6fe7 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    733d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7341:	48 89 c7             	mov    %rax,%rdi
    7344:	e8 0f 0e 00 00       	call   8158 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7349:	48 89 c3             	mov    %rax,%rbx
    734c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7350:	48 89 c7             	mov    %rax,%rdi
    7353:	e8 2e 0e 00 00       	call   8186 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7358:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    735c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7360:	48 89 de             	mov    %rbx,%rsi
    7363:	48 89 c7             	mov    %rax,%rdi
    7366:	e8 53 0e 00 00       	call   81be <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    736b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    736f:	48 89 c7             	mov    %rax,%rdi
    7372:	e8 2b 0e 00 00       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    7377:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    737e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7382:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7386:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    738a:	48 89 c7             	mov    %rax,%rdi
    738d:	e8 e6 0e 00 00       	call   8278 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7392:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7396:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    739a:	48 89 c7             	mov    %rax,%rdi
    739d:	e8 fc 0e 00 00       	call   829e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    73a2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    73a6:	eb 6c                	jmp    7414 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    73a8:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    73ac:	48 89 c7             	mov    %rax,%rdi
    73af:	e8 6e 0f 00 00       	call   8322 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    73b4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    73b8:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    73bf:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    73c3:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    73ca:	8b 75 ec             	mov    -0x14(%rbp),%esi
    73cd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    73d1:	48 89 c7             	mov    %rax,%rdi
    73d4:	e8 e7 cf ff ff       	call   43c0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    73d9:	8b 45 9c             	mov    -0x64(%rbp),%eax
    73dc:	85 c0                	test   %eax,%eax
    73de:	74 24                	je     7404 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    73e0:	8b 55 ec             	mov    -0x14(%rbp),%edx
    73e3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    73e7:	48 89 d6             	mov    %rdx,%rsi
    73ea:	48 89 c7             	mov    %rax,%rdi
    73ed:	e8 42 0f 00 00       	call   8334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    73f2:	48 89 c2             	mov    %rax,%rdx
    73f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73f9:	48 89 c6             	mov    %rax,%rsi
    73fc:	48 89 d7             	mov    %rdx,%rdi
    73ff:	e8 5a 0f 00 00       	call   835e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7404:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7408:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    740c:	48 89 c7             	mov    %rax,%rdi
    740f:	e8 ee 0e 00 00       	call   8302 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7414:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7418:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    741c:	48 89 d6             	mov    %rdx,%rsi
    741f:	48 89 c7             	mov    %rax,%rdi
    7422:	e8 a0 0e 00 00       	call   82c7 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7427:	84 c0                	test   %al,%al
    7429:	0f 85 79 ff ff ff    	jne    73a8 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    742f:	90                   	nop
}
    7430:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7434:	48 89 c7             	mov    %rax,%rdi
    7437:	e8 5c 0c 00 00       	call   8098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    743c:	eb 37                	jmp    7475 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    743e:	48 89 c3             	mov    %rax,%rbx
    7441:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7445:	48 89 c7             	mov    %rax,%rdi
    7448:	e8 55 0d 00 00       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    744d:	eb 0f                	jmp    745e <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    744f:	48 89 c3             	mov    %rax,%rbx
    7452:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7456:	48 89 c7             	mov    %rax,%rdi
    7459:	e8 d6 0d 00 00       	call   8234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    745e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7462:	48 89 c7             	mov    %rax,%rdi
    7465:	e8 2e 0c 00 00       	call   8098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    746a:	48 89 d8             	mov    %rbx,%rax
    746d:	48 89 c7             	mov    %rax,%rdi
    7470:	e8 0b d2 ff ff       	call   4680 <_Unwind_Resume@plt>
    7475:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7479:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    747d:	c9                   	leave
    747e:	c3                   	ret

000000000000747f <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    747f:	55                   	push   %rbp
    7480:	48 89 e5             	mov    %rsp,%rbp
    7483:	41 54                	push   %r12
    7485:	53                   	push   %rbx
    7486:	48 83 ec 20          	sub    $0x20,%rsp
    748a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    748e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7492:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    7496:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    749a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    749e:	0f 11 00             	movups %xmm0,(%rax)
    74a1:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    74a5:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    74a9:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    74ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    74b2:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    74b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    74ba:	48 89 ce             	mov    %rcx,%rsi
    74bd:	48 89 c7             	mov    %rax,%rdi
    74c0:	e8 fb cd ff ff       	call   42c0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    74c5:	85 c0                	test   %eax,%eax
    74c7:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    74ca:	84 c0                	test   %al,%al
    74cc:	74 51                	je     751f <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    74ce:	bf 10 00 00 00       	mov    $0x10,%edi
    74d3:	e8 88 cc ff ff       	call   4160 <__cxa_allocate_exception@plt>
    74d8:	48 89 c3             	mov    %rax,%rbx
    74db:	48 8d 05 fe ea 00 00 	lea    0xeafe(%rip),%rax        # 15fe0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    74e2:	48 89 c6             	mov    %rax,%rsi
    74e5:	48 89 df             	mov    %rbx,%rdi
    74e8:	e8 13 cc ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    74ed:	48 8b 05 b4 aa 01 00 	mov    0x1aab4(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    74f4:	48 89 c2             	mov    %rax,%rdx
    74f7:	48 8d 05 42 a8 01 00 	lea    0x1a842(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    74fe:	48 89 c6             	mov    %rax,%rsi
    7501:	48 89 df             	mov    %rbx,%rdi
    7504:	e8 17 d1 ff ff       	call   4620 <__cxa_throw@plt>
    7509:	49 89 c4             	mov    %rax,%r12
    750c:	48 89 df             	mov    %rbx,%rdi
    750f:	e8 0c cd ff ff       	call   4220 <__cxa_free_exception@plt>
    7514:	4c 89 e0             	mov    %r12,%rax
    7517:	48 89 c7             	mov    %rax,%rdi
    751a:	e8 61 d1 ff ff       	call   4680 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    751f:	90                   	nop
}
    7520:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7524:	48 83 c4 20          	add    $0x20,%rsp
    7528:	5b                   	pop    %rbx
    7529:	41 5c                	pop    %r12
    752b:	5d                   	pop    %rbp
    752c:	c3                   	ret

000000000000752d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    752d:	55                   	push   %rbp
    752e:	48 89 e5             	mov    %rsp,%rbp
    7531:	41 54                	push   %r12
    7533:	53                   	push   %rbx
    7534:	48 83 ec 30          	sub    $0x30,%rsp
    7538:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    753c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7540:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7544:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7548:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    754c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7550:	b9 00 00 00 00       	mov    $0x0,%ecx
    7555:	48 89 c7             	mov    %rax,%rdi
    7558:	e8 63 cf ff ff       	call   44c0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    755d:	85 c0                	test   %eax,%eax
    755f:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7562:	84 c0                	test   %al,%al
    7564:	74 3b                	je     75a1 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7566:	bf 10 00 00 00       	mov    $0x10,%edi
    756b:	e8 f0 cb ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7570:	48 89 c3             	mov    %rax,%rbx
    7573:	48 8d 05 8e ea 00 00 	lea    0xea8e(%rip),%rax        # 16008 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    757a:	48 89 c6             	mov    %rax,%rsi
    757d:	48 89 df             	mov    %rbx,%rdi
    7580:	e8 7b cb ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7585:	48 8b 05 1c aa 01 00 	mov    0x1aa1c(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    758c:	48 89 c2             	mov    %rax,%rdx
    758f:	48 8d 05 aa a7 01 00 	lea    0x1a7aa(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7596:	48 89 c6             	mov    %rax,%rsi
    7599:	48 89 df             	mov    %rbx,%rdi
    759c:	e8 7f d0 ff ff       	call   4620 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    75a1:	8b 45 e8             	mov    -0x18(%rbp),%eax
    75a4:	89 c3                	mov    %eax,%ebx
    75a6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    75aa:	48 89 c7             	mov    %rax,%rdi
    75ad:	e8 84 0e 00 00       	call   8436 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    75b2:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    75b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75ba:	48 89 de             	mov    %rbx,%rsi
    75bd:	48 89 c7             	mov    %rax,%rdi
    75c0:	e8 a9 0e 00 00       	call   846e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    75c5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    75c9:	48 89 c7             	mov    %rax,%rdi
    75cc:	e8 81 0e 00 00       	call   8452 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    75d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75d5:	48 89 c7             	mov    %rax,%rdi
    75d8:	e8 4b 0f 00 00       	call   8528 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    75dd:	48 89 c1             	mov    %rax,%rcx
    75e0:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    75e4:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    75e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    75ec:	48 89 c7             	mov    %rax,%rdi
    75ef:	e8 cc ce ff ff       	call   44c0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    75f4:	85 c0                	test   %eax,%eax
    75f6:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    75f9:	84 c0                	test   %al,%al
    75fb:	0f 84 95 00 00 00    	je     7696 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    7601:	bf 10 00 00 00       	mov    $0x10,%edi
    7606:	e8 55 cb ff ff       	call   4160 <__cxa_allocate_exception@plt>
    760b:	48 89 c3             	mov    %rax,%rbx
    760e:	48 8d 05 f3 e9 00 00 	lea    0xe9f3(%rip),%rax        # 16008 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7615:	48 89 c6             	mov    %rax,%rsi
    7618:	48 89 df             	mov    %rbx,%rdi
    761b:	e8 e0 ca ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7620:	48 8b 05 81 a9 01 00 	mov    0x1a981(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7627:	48 89 c2             	mov    %rax,%rdx
    762a:	48 8d 05 0f a7 01 00 	lea    0x1a70f(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7631:	48 89 c6             	mov    %rax,%rsi
    7634:	48 89 df             	mov    %rbx,%rdi
    7637:	e8 e4 cf ff ff       	call   4620 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    763c:	49 89 c4             	mov    %rax,%r12
    763f:	48 89 df             	mov    %rbx,%rdi
    7642:	e8 d9 cb ff ff       	call   4220 <__cxa_free_exception@plt>
    7647:	4c 89 e0             	mov    %r12,%rax
    764a:	48 89 c7             	mov    %rax,%rdi
    764d:	e8 2e d0 ff ff       	call   4680 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7652:	48 89 c3             	mov    %rax,%rbx
    7655:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7659:	48 89 c7             	mov    %rax,%rdi
    765c:	e8 f1 0d 00 00       	call   8452 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7661:	48 89 d8             	mov    %rbx,%rax
    7664:	48 89 c7             	mov    %rax,%rdi
    7667:	e8 14 d0 ff ff       	call   4680 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    766c:	49 89 c4             	mov    %rax,%r12
    766f:	48 89 df             	mov    %rbx,%rdi
    7672:	e8 a9 cb ff ff       	call   4220 <__cxa_free_exception@plt>
    7677:	4c 89 e3             	mov    %r12,%rbx
    767a:	eb 03                	jmp    767f <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    767c:	48 89 c3             	mov    %rax,%rbx
    767f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7683:	48 89 c7             	mov    %rax,%rdi
    7686:	e8 59 0e 00 00       	call   84e4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    768b:	48 89 d8             	mov    %rbx,%rax
    768e:	48 89 c7             	mov    %rax,%rdi
    7691:	e8 ea cf ff ff       	call   4680 <_Unwind_Resume@plt>
  return surfaceFormats;
    7696:	90                   	nop
}
    7697:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    769b:	48 83 c4 30          	add    $0x30,%rsp
    769f:	5b                   	pop    %rbx
    76a0:	41 5c                	pop    %r12
    76a2:	5d                   	pop    %rbp
    76a3:	c3                   	ret

00000000000076a4 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    76a4:	55                   	push   %rbp
    76a5:	48 89 e5             	mov    %rsp,%rbp
    76a8:	41 54                	push   %r12
    76aa:	53                   	push   %rbx
    76ab:	48 83 ec 30          	sub    $0x30,%rsp
    76af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    76b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    76b7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    76bb:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    76bf:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    76c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    76c7:	b9 00 00 00 00       	mov    $0x0,%ecx
    76cc:	48 89 c7             	mov    %rax,%rdi
    76cf:	e8 fc cd ff ff       	call   44d0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    76d4:	85 c0                	test   %eax,%eax
    76d6:	0f 95 c0             	setne  %al
    76d9:	84 c0                	test   %al,%al
    76db:	74 3b                	je     7718 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    76dd:	bf 10 00 00 00       	mov    $0x10,%edi
    76e2:	e8 79 ca ff ff       	call   4160 <__cxa_allocate_exception@plt>
    76e7:	48 89 c3             	mov    %rax,%rbx
    76ea:	48 8d 05 3f e9 00 00 	lea    0xe93f(%rip),%rax        # 16030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    76f1:	48 89 c6             	mov    %rax,%rsi
    76f4:	48 89 df             	mov    %rbx,%rdi
    76f7:	e8 04 ca ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    76fc:	48 8b 05 a5 a8 01 00 	mov    0x1a8a5(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7703:	48 89 c2             	mov    %rax,%rdx
    7706:	48 8d 05 33 a6 01 00 	lea    0x1a633(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    770d:	48 89 c6             	mov    %rax,%rsi
    7710:	48 89 df             	mov    %rbx,%rdi
    7713:	e8 08 cf ff ff       	call   4620 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7718:	8b 45 e8             	mov    -0x18(%rbp),%eax
    771b:	89 c3                	mov    %eax,%ebx
    771d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7721:	48 89 c7             	mov    %rax,%rdi
    7724:	e8 71 0e 00 00       	call   859a <_ZNSaI16VkPresentModeKHREC1Ev>
    7729:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    772d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7731:	48 89 de             	mov    %rbx,%rsi
    7734:	48 89 c7             	mov    %rax,%rdi
    7737:	e8 96 0e 00 00       	call   85d2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    773c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7740:	48 89 c7             	mov    %rax,%rdi
    7743:	e8 6e 0e 00 00       	call   85b6 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7748:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    774c:	48 89 c7             	mov    %rax,%rdi
    774f:	e8 38 0f 00 00       	call   868c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7754:	48 89 c1             	mov    %rax,%rcx
    7757:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    775b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    775f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7763:	48 89 c7             	mov    %rax,%rdi
    7766:	e8 65 cd ff ff       	call   44d0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    776b:	85 c0                	test   %eax,%eax
    776d:	0f 95 c0             	setne  %al
    7770:	84 c0                	test   %al,%al
    7772:	0f 84 95 00 00 00    	je     780d <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7778:	bf 10 00 00 00       	mov    $0x10,%edi
    777d:	e8 de c9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7782:	48 89 c3             	mov    %rax,%rbx
    7785:	48 8d 05 a4 e8 00 00 	lea    0xe8a4(%rip),%rax        # 16030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    778c:	48 89 c6             	mov    %rax,%rsi
    778f:	48 89 df             	mov    %rbx,%rdi
    7792:	e8 69 c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7797:	48 8b 05 0a a8 01 00 	mov    0x1a80a(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    779e:	48 89 c2             	mov    %rax,%rdx
    77a1:	48 8d 05 98 a5 01 00 	lea    0x1a598(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    77a8:	48 89 c6             	mov    %rax,%rsi
    77ab:	48 89 df             	mov    %rbx,%rdi
    77ae:	e8 6d ce ff ff       	call   4620 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    77b3:	49 89 c4             	mov    %rax,%r12
    77b6:	48 89 df             	mov    %rbx,%rdi
    77b9:	e8 62 ca ff ff       	call   4220 <__cxa_free_exception@plt>
    77be:	4c 89 e0             	mov    %r12,%rax
    77c1:	48 89 c7             	mov    %rax,%rdi
    77c4:	e8 b7 ce ff ff       	call   4680 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    77c9:	48 89 c3             	mov    %rax,%rbx
    77cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    77d0:	48 89 c7             	mov    %rax,%rdi
    77d3:	e8 de 0d 00 00       	call   85b6 <_ZNSaI16VkPresentModeKHRED1Ev>
    77d8:	48 89 d8             	mov    %rbx,%rax
    77db:	48 89 c7             	mov    %rax,%rdi
    77de:	e8 9d ce ff ff       	call   4680 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    77e3:	49 89 c4             	mov    %rax,%r12
    77e6:	48 89 df             	mov    %rbx,%rdi
    77e9:	e8 32 ca ff ff       	call   4220 <__cxa_free_exception@plt>
    77ee:	4c 89 e3             	mov    %r12,%rbx
    77f1:	eb 03                	jmp    77f6 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    77f3:	48 89 c3             	mov    %rax,%rbx
    77f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77fa:	48 89 c7             	mov    %rax,%rdi
    77fd:	e8 46 0e 00 00       	call   8648 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7802:	48 89 d8             	mov    %rbx,%rax
    7805:	48 89 c7             	mov    %rax,%rdi
    7808:	e8 73 ce ff ff       	call   4680 <_Unwind_Resume@plt>
  return presentModes;
    780d:	90                   	nop
}
    780e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7812:	48 83 c4 30          	add    $0x30,%rsp
    7816:	5b                   	pop    %rbx
    7817:	41 5c                	pop    %r12
    7819:	5d                   	pop    %rbp
    781a:	c3                   	ret

000000000000781b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    781b:	55                   	push   %rbp
    781c:	48 89 e5             	mov    %rsp,%rbp
    781f:	41 54                	push   %r12
    7821:	53                   	push   %rbx
    7822:	48 83 ec 30          	sub    $0x30,%rsp
    7826:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    782a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    782e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7832:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7836:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    783a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    783e:	b9 00 00 00 00       	mov    $0x0,%ecx
    7843:	48 89 c7             	mov    %rax,%rdi
    7846:	e8 65 c9 ff ff       	call   41b0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    784b:	85 c0                	test   %eax,%eax
    784d:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7850:	84 c0                	test   %al,%al
    7852:	74 3b                	je     788f <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7854:	bf 10 00 00 00       	mov    $0x10,%edi
    7859:	e8 02 c9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    785e:	48 89 c3             	mov    %rax,%rbx
    7861:	48 8d 05 f8 e7 00 00 	lea    0xe7f8(%rip),%rax        # 16060 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7868:	48 89 c6             	mov    %rax,%rsi
    786b:	48 89 df             	mov    %rbx,%rdi
    786e:	e8 8d c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7873:	48 8b 05 2e a7 01 00 	mov    0x1a72e(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    787a:	48 89 c2             	mov    %rax,%rdx
    787d:	48 8d 05 bc a4 01 00 	lea    0x1a4bc(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7884:	48 89 c6             	mov    %rax,%rsi
    7887:	48 89 df             	mov    %rbx,%rdi
    788a:	e8 91 cd ff ff       	call   4620 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    788f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7892:	89 c3                	mov    %eax,%ebx
    7894:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7898:	48 89 c7             	mov    %rax,%rdi
    789b:	e8 5e 0e 00 00       	call   86fe <_ZNSaIP9VkImage_TEC1Ev>
    78a0:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    78a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78a8:	48 89 de             	mov    %rbx,%rsi
    78ab:	48 89 c7             	mov    %rax,%rdi
    78ae:	e8 83 0e 00 00       	call   8736 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    78b3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    78b7:	48 89 c7             	mov    %rax,%rdi
    78ba:	e8 5b 0e 00 00       	call   871a <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    78bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78c3:	48 89 c7             	mov    %rax,%rdi
    78c6:	e8 25 0f 00 00       	call   87f0 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    78cb:	48 89 c1             	mov    %rax,%rcx
    78ce:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    78d2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    78d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78da:	48 89 c7             	mov    %rax,%rdi
    78dd:	e8 ce c8 ff ff       	call   41b0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    78e2:	85 c0                	test   %eax,%eax
    78e4:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    78e7:	84 c0                	test   %al,%al
    78e9:	0f 84 95 00 00 00    	je     7984 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    78ef:	bf 10 00 00 00       	mov    $0x10,%edi
    78f4:	e8 67 c8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    78f9:	48 89 c3             	mov    %rax,%rbx
    78fc:	48 8d 05 5d e7 00 00 	lea    0xe75d(%rip),%rax        # 16060 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7903:	48 89 c6             	mov    %rax,%rsi
    7906:	48 89 df             	mov    %rbx,%rdi
    7909:	e8 f2 c7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    790e:	48 8b 05 93 a6 01 00 	mov    0x1a693(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7915:	48 89 c2             	mov    %rax,%rdx
    7918:	48 8d 05 21 a4 01 00 	lea    0x1a421(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    791f:	48 89 c6             	mov    %rax,%rsi
    7922:	48 89 df             	mov    %rbx,%rdi
    7925:	e8 f6 cc ff ff       	call   4620 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    792a:	49 89 c4             	mov    %rax,%r12
    792d:	48 89 df             	mov    %rbx,%rdi
    7930:	e8 eb c8 ff ff       	call   4220 <__cxa_free_exception@plt>
    7935:	4c 89 e0             	mov    %r12,%rax
    7938:	48 89 c7             	mov    %rax,%rdi
    793b:	e8 40 cd ff ff       	call   4680 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7940:	48 89 c3             	mov    %rax,%rbx
    7943:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7947:	48 89 c7             	mov    %rax,%rdi
    794a:	e8 cb 0d 00 00       	call   871a <_ZNSaIP9VkImage_TED1Ev>
    794f:	48 89 d8             	mov    %rbx,%rax
    7952:	48 89 c7             	mov    %rax,%rdi
    7955:	e8 26 cd ff ff       	call   4680 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    795a:	49 89 c4             	mov    %rax,%r12
    795d:	48 89 df             	mov    %rbx,%rdi
    7960:	e8 bb c8 ff ff       	call   4220 <__cxa_free_exception@plt>
    7965:	4c 89 e3             	mov    %r12,%rbx
    7968:	eb 03                	jmp    796d <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    796a:	48 89 c3             	mov    %rax,%rbx
    796d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7971:	48 89 c7             	mov    %rax,%rdi
    7974:	e8 33 0e 00 00       	call   87ac <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7979:	48 89 d8             	mov    %rbx,%rax
    797c:	48 89 c7             	mov    %rax,%rdi
    797f:	e8 fc cc ff ff       	call   4680 <_Unwind_Resume@plt>
  return swapchainImages;
    7984:	90                   	nop
}
    7985:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7989:	48 83 c4 30          	add    $0x30,%rsp
    798d:	5b                   	pop    %rbx
    798e:	41 5c                	pop    %r12
    7990:	5d                   	pop    %rbp
    7991:	c3                   	ret

0000000000007992 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7992:	55                   	push   %rbp
    7993:	48 89 e5             	mov    %rsp,%rbp
    7996:	48 83 ec 10          	sub    $0x10,%rsp
    799a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    799e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79a2:	48 89 c7             	mov    %rax,%rdi
    79a5:	e8 00 01 00 00       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
    79aa:	90                   	nop
    79ab:	c9                   	leave
    79ac:	c3                   	ret
    79ad:	90                   	nop

00000000000079ae <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    79ae:	55                   	push   %rbp
    79af:	48 89 e5             	mov    %rsp,%rbp
    79b2:	48 83 ec 10          	sub    $0x10,%rsp
    79b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79be:	48 89 c7             	mov    %rax,%rdi
    79c1:	e8 52 02 00 00       	call   7c18 <_ZNSaI21VkExtensionPropertiesED1Ev>
    79c6:	90                   	nop
    79c7:	c9                   	leave
    79c8:	c3                   	ret
    79c9:	90                   	nop

00000000000079ca <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    79ca:	55                   	push   %rbp
    79cb:	48 89 e5             	mov    %rsp,%rbp
    79ce:	48 83 ec 10          	sub    $0x10,%rsp
    79d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79da:	48 89 c7             	mov    %rax,%rdi
    79dd:	e8 a4 03 00 00       	call   7d86 <_ZNSaIPKcED1Ev>
    79e2:	90                   	nop
    79e3:	c9                   	leave
    79e4:	c3                   	ret
    79e5:	90                   	nop

00000000000079e6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    79e6:	55                   	push   %rbp
    79e7:	48 89 e5             	mov    %rsp,%rbp
    79ea:	48 83 ec 10          	sub    $0x10,%rsp
    79ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79f6:	48 89 c7             	mov    %rax,%rdi
    79f9:	e8 a4 04 00 00       	call   7ea2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    79fe:	90                   	nop
    79ff:	c9                   	leave
    7a00:	c3                   	ret
    7a01:	90                   	nop

0000000000007a02 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7a02:	55                   	push   %rbp
    7a03:	48 89 e5             	mov    %rsp,%rbp
    7a06:	48 83 ec 10          	sub    $0x10,%rsp
    7a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a12:	48 89 c7             	mov    %rax,%rdi
    7a15:	e8 ec 05 00 00       	call   8006 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7a1a:	90                   	nop
    7a1b:	c9                   	leave
    7a1c:	c3                   	ret
    7a1d:	90                   	nop

0000000000007a1e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    7a1e:	55                   	push   %rbp
    7a1f:	48 89 e5             	mov    %rsp,%rbp
    7a22:	48 83 ec 10          	sub    $0x10,%rsp
    7a26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a2e:	48 89 c7             	mov    %rax,%rdi
    7a31:	e8 6c 07 00 00       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7a36:	90                   	nop
    7a37:	c9                   	leave
    7a38:	c3                   	ret
    7a39:	90                   	nop

0000000000007a3a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    7a3a:	55                   	push   %rbp
    7a3b:	48 89 e5             	mov    %rsp,%rbp
    7a3e:	48 83 ec 10          	sub    $0x10,%rsp
    7a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a4a:	48 89 c7             	mov    %rax,%rdi
    7a4d:	e8 00 0a 00 00       	call   8452 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7a52:	90                   	nop
    7a53:	c9                   	leave
    7a54:	c3                   	ret
    7a55:	90                   	nop

0000000000007a56 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    7a56:	55                   	push   %rbp
    7a57:	48 89 e5             	mov    %rsp,%rbp
    7a5a:	48 83 ec 10          	sub    $0x10,%rsp
    7a5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a66:	48 89 c7             	mov    %rax,%rdi
    7a69:	e8 48 0b 00 00       	call   85b6 <_ZNSaI16VkPresentModeKHRED1Ev>
    7a6e:	90                   	nop
    7a6f:	c9                   	leave
    7a70:	c3                   	ret
    7a71:	90                   	nop

0000000000007a72 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    7a72:	55                   	push   %rbp
    7a73:	48 89 e5             	mov    %rsp,%rbp
    7a76:	48 83 ec 10          	sub    $0x10,%rsp
    7a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a82:	48 89 c7             	mov    %rax,%rdi
    7a85:	e8 90 0c 00 00       	call   871a <_ZNSaIP9VkImage_TED1Ev>
    7a8a:	90                   	nop
    7a8b:	c9                   	leave
    7a8c:	c3                   	ret
    7a8d:	90                   	nop

0000000000007a8e <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7a8e:	55                   	push   %rbp
    7a8f:	48 89 e5             	mov    %rsp,%rbp
    7a92:	48 83 ec 10          	sub    $0x10,%rsp
    7a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a9e:	48 89 c7             	mov    %rax,%rdi
    7aa1:	e8 bc 0d 00 00       	call   8862 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    7aa6:	90                   	nop
    7aa7:	c9                   	leave
    7aa8:	c3                   	ret
    7aa9:	90                   	nop

0000000000007aaa <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7aaa:	55                   	push   %rbp
    7aab:	48 89 e5             	mov    %rsp,%rbp
    7aae:	48 83 ec 10          	sub    $0x10,%rsp
    7ab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7aba:	48 89 c7             	mov    %rax,%rdi
    7abd:	e8 ac 0d 00 00       	call   886e <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    7ac2:	90                   	nop
    7ac3:	c9                   	leave
    7ac4:	c3                   	ret
    7ac5:	90                   	nop

0000000000007ac6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7ac6:	55                   	push   %rbp
    7ac7:	48 89 e5             	mov    %rsp,%rbp
    7aca:	53                   	push   %rbx
    7acb:	48 83 ec 28          	sub    $0x28,%rsp
    7acf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ad3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7ad7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7adb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7adf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7ae3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ae7:	48 89 d6             	mov    %rdx,%rsi
    7aea:	48 89 c7             	mov    %rax,%rdi
    7aed:	e8 87 0d 00 00       	call   8879 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7af2:	48 89 c1             	mov    %rax,%rcx
    7af5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7af9:	48 89 c2             	mov    %rax,%rdx
    7afc:	48 89 ce             	mov    %rcx,%rsi
    7aff:	48 89 df             	mov    %rbx,%rdi
    7b02:	e8 d3 0d 00 00       	call   88da <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7b07:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7b0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b0f:	48 89 d6             	mov    %rdx,%rsi
    7b12:	48 89 c7             	mov    %rax,%rdi
    7b15:	e8 1e 0e 00 00       	call   8938 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    7b1a:	eb 1a                	jmp    7b36 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7b1c:	48 89 c3             	mov    %rax,%rbx
    7b1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b23:	48 89 c7             	mov    %rax,%rdi
    7b26:	e8 79 00 00 00       	call   7ba4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7b2b:	48 89 d8             	mov    %rbx,%rax
    7b2e:	48 89 c7             	mov    %rax,%rdi
    7b31:	e8 4a cb ff ff       	call   4680 <_Unwind_Resume@plt>
    7b36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b3a:	c9                   	leave
    7b3b:	c3                   	ret

0000000000007b3c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7b3c:	55                   	push   %rbp
    7b3d:	48 89 e5             	mov    %rsp,%rbp
    7b40:	48 83 ec 10          	sub    $0x10,%rsp
    7b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b4c:	48 89 c7             	mov    %rax,%rdi
    7b4f:	e8 24 0e 00 00       	call   8978 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7b54:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b5b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b63:	48 8b 00             	mov    (%rax),%rax
    7b66:	48 89 ce             	mov    %rcx,%rsi
    7b69:	48 89 c7             	mov    %rax,%rdi
    7b6c:	e8 15 0e 00 00       	call   8986 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7b71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b75:	48 89 c7             	mov    %rax,%rdi
    7b78:	e8 27 00 00 00       	call   7ba4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7b7d:	90                   	nop
    7b7e:	c9                   	leave
    7b7f:	c3                   	ret

0000000000007b80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7b80:	55                   	push   %rbp
    7b81:	48 89 e5             	mov    %rsp,%rbp
    7b84:	48 83 ec 10          	sub    $0x10,%rsp
    7b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b90:	48 8b 10             	mov    (%rax),%rdx
    7b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b97:	48 89 d6             	mov    %rdx,%rsi
    7b9a:	48 89 c7             	mov    %rax,%rdi
    7b9d:	e8 0e 0e 00 00       	call   89b0 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7ba2:	c9                   	leave
    7ba3:	c3                   	ret

0000000000007ba4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7ba4:	55                   	push   %rbp
    7ba5:	48 89 e5             	mov    %rsp,%rbp
    7ba8:	48 83 ec 10          	sub    $0x10,%rsp
    7bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bb4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7bb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bbc:	48 8b 00             	mov    (%rax),%rax
    7bbf:	48 29 c2             	sub    %rax,%rdx
    7bc2:	48 c1 fa 03          	sar    $0x3,%rdx
    7bc6:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7bcd:	fc c0 0f 
    7bd0:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7bd4:	48 89 c2             	mov    %rax,%rdx
    7bd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bdb:	48 8b 08             	mov    (%rax),%rcx
    7bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7be2:	48 89 ce             	mov    %rcx,%rsi
    7be5:	48 89 c7             	mov    %rax,%rdi
    7be8:	e8 fb 0d 00 00       	call   89e8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bf1:	48 89 c7             	mov    %rax,%rdi
    7bf4:	e8 99 fd ff ff       	call   7992 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    7bf9:	90                   	nop
    7bfa:	c9                   	leave
    7bfb:	c3                   	ret

0000000000007bfc <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7bfc:	55                   	push   %rbp
    7bfd:	48 89 e5             	mov    %rsp,%rbp
    7c00:	48 83 ec 10          	sub    $0x10,%rsp
    7c04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c0c:	48 89 c7             	mov    %rax,%rdi
    7c0f:	e8 0a 0e 00 00       	call   8a1e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    7c14:	90                   	nop
    7c15:	c9                   	leave
    7c16:	c3                   	ret
    7c17:	90                   	nop

0000000000007c18 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7c18:	55                   	push   %rbp
    7c19:	48 89 e5             	mov    %rsp,%rbp
    7c1c:	48 83 ec 10          	sub    $0x10,%rsp
    7c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c28:	48 89 c7             	mov    %rax,%rdi
    7c2b:	e8 fa 0d 00 00       	call   8a2a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    7c30:	90                   	nop
    7c31:	c9                   	leave
    7c32:	c3                   	ret
    7c33:	90                   	nop

0000000000007c34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7c34:	55                   	push   %rbp
    7c35:	48 89 e5             	mov    %rsp,%rbp
    7c38:	53                   	push   %rbx
    7c39:	48 83 ec 28          	sub    $0x28,%rsp
    7c3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7c41:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7c45:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7c49:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7c4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7c51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7c55:	48 89 d6             	mov    %rdx,%rsi
    7c58:	48 89 c7             	mov    %rax,%rdi
    7c5b:	e8 d5 0d 00 00       	call   8a35 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7c60:	48 89 c1             	mov    %rax,%rcx
    7c63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c67:	48 89 c2             	mov    %rax,%rdx
    7c6a:	48 89 ce             	mov    %rcx,%rsi
    7c6d:	48 89 df             	mov    %rbx,%rdi
    7c70:	e8 21 0e 00 00       	call   8a96 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7c75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c7d:	48 89 d6             	mov    %rdx,%rsi
    7c80:	48 89 c7             	mov    %rax,%rdi
    7c83:	e8 6c 0e 00 00       	call   8af4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    7c88:	eb 1a                	jmp    7ca4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7c8a:	48 89 c3             	mov    %rax,%rbx
    7c8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c91:	48 89 c7             	mov    %rax,%rdi
    7c94:	e8 79 00 00 00       	call   7d12 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7c99:	48 89 d8             	mov    %rbx,%rax
    7c9c:	48 89 c7             	mov    %rax,%rdi
    7c9f:	e8 dc c9 ff ff       	call   4680 <_Unwind_Resume@plt>
    7ca4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ca8:	c9                   	leave
    7ca9:	c3                   	ret

0000000000007caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7caa:	55                   	push   %rbp
    7cab:	48 89 e5             	mov    %rsp,%rbp
    7cae:	48 83 ec 10          	sub    $0x10,%rsp
    7cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cba:	48 89 c7             	mov    %rax,%rdi
    7cbd:	e8 72 0e 00 00       	call   8b34 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7cc2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cc9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7ccd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cd1:	48 8b 00             	mov    (%rax),%rax
    7cd4:	48 89 ce             	mov    %rcx,%rsi
    7cd7:	48 89 c7             	mov    %rax,%rdi
    7cda:	e8 63 0e 00 00       	call   8b42 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7cdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ce3:	48 89 c7             	mov    %rax,%rdi
    7ce6:	e8 27 00 00 00       	call   7d12 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7ceb:	90                   	nop
    7cec:	c9                   	leave
    7ced:	c3                   	ret

0000000000007cee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7cee:	55                   	push   %rbp
    7cef:	48 89 e5             	mov    %rsp,%rbp
    7cf2:	48 83 ec 10          	sub    $0x10,%rsp
    7cf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7cfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cfe:	48 8b 10             	mov    (%rax),%rdx
    7d01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d05:	48 89 d6             	mov    %rdx,%rsi
    7d08:	48 89 c7             	mov    %rax,%rdi
    7d0b:	e8 5c 0e 00 00       	call   8b6c <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7d10:	c9                   	leave
    7d11:	c3                   	ret

0000000000007d12 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7d12:	55                   	push   %rbp
    7d13:	48 89 e5             	mov    %rsp,%rbp
    7d16:	48 83 ec 10          	sub    $0x10,%rsp
    7d1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d22:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d2a:	48 8b 00             	mov    (%rax),%rax
    7d2d:	48 29 c2             	sub    %rax,%rdx
    7d30:	48 c1 fa 02          	sar    $0x2,%rdx
    7d34:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7d3b:	fc c0 0f 
    7d3e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7d42:	48 89 c2             	mov    %rax,%rdx
    7d45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d49:	48 8b 08             	mov    (%rax),%rcx
    7d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d50:	48 89 ce             	mov    %rcx,%rsi
    7d53:	48 89 c7             	mov    %rax,%rdi
    7d56:	e8 49 0e 00 00       	call   8ba4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d5f:	48 89 c7             	mov    %rax,%rdi
    7d62:	e8 47 fc ff ff       	call   79ae <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    7d67:	90                   	nop
    7d68:	c9                   	leave
    7d69:	c3                   	ret

0000000000007d6a <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7d6a:	55                   	push   %rbp
    7d6b:	48 89 e5             	mov    %rsp,%rbp
    7d6e:	48 83 ec 10          	sub    $0x10,%rsp
    7d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7a:	48 89 c7             	mov    %rax,%rdi
    7d7d:	e8 58 0e 00 00       	call   8bda <_ZNSt15__new_allocatorIPKcEC1Ev>
    7d82:	90                   	nop
    7d83:	c9                   	leave
    7d84:	c3                   	ret
    7d85:	90                   	nop

0000000000007d86 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7d86:	55                   	push   %rbp
    7d87:	48 89 e5             	mov    %rsp,%rbp
    7d8a:	48 83 ec 10          	sub    $0x10,%rsp
    7d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d96:	48 89 c7             	mov    %rax,%rdi
    7d99:	e8 48 0e 00 00       	call   8be6 <_ZNSt15__new_allocatorIPKcED1Ev>
    7d9e:	90                   	nop
    7d9f:	c9                   	leave
    7da0:	c3                   	ret
    7da1:	90                   	nop

0000000000007da2 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7da2:	55                   	push   %rbp
    7da3:	48 89 e5             	mov    %rsp,%rbp
    7da6:	53                   	push   %rbx
    7da7:	48 83 ec 28          	sub    $0x28,%rsp
    7dab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7daf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7db3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7db7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7dbb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7dbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7dc3:	48 89 d6             	mov    %rdx,%rsi
    7dc6:	48 89 c7             	mov    %rax,%rdi
    7dc9:	e8 23 0e 00 00       	call   8bf1 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    7dce:	48 89 c1             	mov    %rax,%rcx
    7dd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dd5:	48 89 c2             	mov    %rax,%rdx
    7dd8:	48 89 ce             	mov    %rcx,%rsi
    7ddb:	48 89 df             	mov    %rbx,%rdi
    7dde:	e8 6f 0e 00 00       	call   8c52 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    7de3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7de7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7deb:	48 89 d6             	mov    %rdx,%rsi
    7dee:	48 89 c7             	mov    %rax,%rdi
    7df1:	e8 ba 0e 00 00       	call   8cb0 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    7df6:	eb 1a                	jmp    7e12 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    7df8:	48 89 c3             	mov    %rax,%rbx
    7dfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dff:	48 89 c7             	mov    %rax,%rdi
    7e02:	e8 31 00 00 00       	call   7e38 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    7e07:	48 89 d8             	mov    %rbx,%rax
    7e0a:	48 89 c7             	mov    %rax,%rdi
    7e0d:	e8 6e c8 ff ff       	call   4680 <_Unwind_Resume@plt>
    7e12:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7e16:	c9                   	leave
    7e17:	c3                   	ret

0000000000007e18 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    7e18:	55                   	push   %rbp
    7e19:	48 89 e5             	mov    %rsp,%rbp
    7e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    7e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e28:	48 8b 00             	mov    (%rax),%rax
    7e2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e2f:	48 c1 e2 03          	shl    $0x3,%rdx
    7e33:	48 01 d0             	add    %rdx,%rax
      }
    7e36:	5d                   	pop    %rbp
    7e37:	c3                   	ret

0000000000007e38 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7e38:	55                   	push   %rbp
    7e39:	48 89 e5             	mov    %rsp,%rbp
    7e3c:	48 83 ec 10          	sub    $0x10,%rsp
    7e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e48:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e50:	48 8b 00             	mov    (%rax),%rax
    7e53:	48 29 c2             	sub    %rax,%rdx
    7e56:	48 89 d0             	mov    %rdx,%rax
    7e59:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    7e5d:	48 89 c2             	mov    %rax,%rdx
    7e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e64:	48 8b 08             	mov    (%rax),%rcx
    7e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e6b:	48 89 ce             	mov    %rcx,%rsi
    7e6e:	48 89 c7             	mov    %rax,%rdi
    7e71:	e8 ae 0e 00 00       	call   8d24 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    7e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e7a:	48 89 c7             	mov    %rax,%rdi
    7e7d:	e8 48 fb ff ff       	call   79ca <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    7e82:	90                   	nop
    7e83:	c9                   	leave
    7e84:	c3                   	ret
    7e85:	90                   	nop

0000000000007e86 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7e86:	55                   	push   %rbp
    7e87:	48 89 e5             	mov    %rsp,%rbp
    7e8a:	48 83 ec 10          	sub    $0x10,%rsp
    7e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e96:	48 89 c7             	mov    %rax,%rdi
    7e99:	e8 bc 0e 00 00       	call   8d5a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    7e9e:	90                   	nop
    7e9f:	c9                   	leave
    7ea0:	c3                   	ret
    7ea1:	90                   	nop

0000000000007ea2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7ea2:	55                   	push   %rbp
    7ea3:	48 89 e5             	mov    %rsp,%rbp
    7ea6:	48 83 ec 10          	sub    $0x10,%rsp
    7eaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eb2:	48 89 c7             	mov    %rax,%rdi
    7eb5:	e8 ac 0e 00 00       	call   8d66 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    7eba:	90                   	nop
    7ebb:	c9                   	leave
    7ebc:	c3                   	ret
    7ebd:	90                   	nop

0000000000007ebe <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7ebe:	55                   	push   %rbp
    7ebf:	48 89 e5             	mov    %rsp,%rbp
    7ec2:	53                   	push   %rbx
    7ec3:	48 83 ec 28          	sub    $0x28,%rsp
    7ec7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ecb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7ecf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7ed3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7ed7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7edb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7edf:	48 89 d6             	mov    %rdx,%rsi
    7ee2:	48 89 c7             	mov    %rax,%rdi
    7ee5:	e8 87 0e 00 00       	call   8d71 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    7eea:	48 89 c1             	mov    %rax,%rcx
    7eed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ef1:	48 89 c2             	mov    %rax,%rdx
    7ef4:	48 89 ce             	mov    %rcx,%rsi
    7ef7:	48 89 df             	mov    %rbx,%rdi
    7efa:	e8 d3 0e 00 00       	call   8dd2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    7eff:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7f03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f07:	48 89 d6             	mov    %rdx,%rsi
    7f0a:	48 89 c7             	mov    %rax,%rdi
    7f0d:	e8 1e 0f 00 00       	call   8e30 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    7f12:	eb 1a                	jmp    7f2e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    7f14:	48 89 c3             	mov    %rax,%rbx
    7f17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f1b:	48 89 c7             	mov    %rax,%rdi
    7f1e:	e8 79 00 00 00       	call   7f9c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7f23:	48 89 d8             	mov    %rbx,%rax
    7f26:	48 89 c7             	mov    %rax,%rdi
    7f29:	e8 52 c7 ff ff       	call   4680 <_Unwind_Resume@plt>
    7f2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f32:	c9                   	leave
    7f33:	c3                   	ret

0000000000007f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7f34:	55                   	push   %rbp
    7f35:	48 89 e5             	mov    %rsp,%rbp
    7f38:	48 83 ec 10          	sub    $0x10,%rsp
    7f3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f44:	48 89 c7             	mov    %rax,%rdi
    7f47:	e8 24 0f 00 00       	call   8e70 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    7f4c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f53:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f5b:	48 8b 00             	mov    (%rax),%rax
    7f5e:	48 89 ce             	mov    %rcx,%rsi
    7f61:	48 89 c7             	mov    %rax,%rdi
    7f64:	e8 15 0f 00 00       	call   8e7e <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    7f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f6d:	48 89 c7             	mov    %rax,%rdi
    7f70:	e8 27 00 00 00       	call   7f9c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7f75:	90                   	nop
    7f76:	c9                   	leave
    7f77:	c3                   	ret

0000000000007f78 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7f78:	55                   	push   %rbp
    7f79:	48 89 e5             	mov    %rsp,%rbp
    7f7c:	48 83 ec 10          	sub    $0x10,%rsp
    7f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f88:	48 8b 10             	mov    (%rax),%rdx
    7f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f8f:	48 89 d6             	mov    %rdx,%rsi
    7f92:	48 89 c7             	mov    %rax,%rdi
    7f95:	e8 0e 0f 00 00       	call   8ea8 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    7f9a:	c9                   	leave
    7f9b:	c3                   	ret

0000000000007f9c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7f9c:	55                   	push   %rbp
    7f9d:	48 89 e5             	mov    %rsp,%rbp
    7fa0:	48 83 ec 10          	sub    $0x10,%rsp
    7fa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fac:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fb4:	48 8b 00             	mov    (%rax),%rax
    7fb7:	48 29 c2             	sub    %rax,%rdx
    7fba:	48 89 d0             	mov    %rdx,%rax
    7fbd:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    7fc1:	48 89 c2             	mov    %rax,%rdx
    7fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc8:	48 8b 08             	mov    (%rax),%rcx
    7fcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fcf:	48 89 ce             	mov    %rcx,%rsi
    7fd2:	48 89 c7             	mov    %rax,%rdi
    7fd5:	e8 06 0f 00 00       	call   8ee0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    7fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fde:	48 89 c7             	mov    %rax,%rdi
    7fe1:	e8 00 fa ff ff       	call   79e6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    7fe6:	90                   	nop
    7fe7:	c9                   	leave
    7fe8:	c3                   	ret
    7fe9:	90                   	nop

0000000000007fea <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7fea:	55                   	push   %rbp
    7feb:	48 89 e5             	mov    %rsp,%rbp
    7fee:	48 83 ec 10          	sub    $0x10,%rsp
    7ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ffa:	48 89 c7             	mov    %rax,%rdi
    7ffd:	e8 14 0f 00 00       	call   8f16 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    8002:	90                   	nop
    8003:	c9                   	leave
    8004:	c3                   	ret
    8005:	90                   	nop

0000000000008006 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8006:	55                   	push   %rbp
    8007:	48 89 e5             	mov    %rsp,%rbp
    800a:	48 83 ec 10          	sub    $0x10,%rsp
    800e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8016:	48 89 c7             	mov    %rax,%rdi
    8019:	e8 04 0f 00 00       	call   8f22 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    801e:	90                   	nop
    801f:	c9                   	leave
    8020:	c3                   	ret
    8021:	90                   	nop

0000000000008022 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8022:	55                   	push   %rbp
    8023:	48 89 e5             	mov    %rsp,%rbp
    8026:	53                   	push   %rbx
    8027:	48 83 ec 28          	sub    $0x28,%rsp
    802b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    802f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8033:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8037:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    803b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    803f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8043:	48 89 d6             	mov    %rdx,%rsi
    8046:	48 89 c7             	mov    %rax,%rdi
    8049:	e8 df 0e 00 00       	call   8f2d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    804e:	48 89 c1             	mov    %rax,%rcx
    8051:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8055:	48 89 c2             	mov    %rax,%rdx
    8058:	48 89 ce             	mov    %rcx,%rsi
    805b:	48 89 df             	mov    %rbx,%rdi
    805e:	e8 2b 0f 00 00       	call   8f8e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8063:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8067:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    806b:	48 89 d6             	mov    %rdx,%rsi
    806e:	48 89 c7             	mov    %rax,%rdi
    8071:	e8 76 0f 00 00       	call   8fec <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    8076:	eb 1a                	jmp    8092 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8078:	48 89 c3             	mov    %rax,%rbx
    807b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    807f:	48 89 c7             	mov    %rax,%rdi
    8082:	e8 79 00 00 00       	call   8100 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8087:	48 89 d8             	mov    %rbx,%rax
    808a:	48 89 c7             	mov    %rax,%rdi
    808d:	e8 ee c5 ff ff       	call   4680 <_Unwind_Resume@plt>
    8092:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8096:	c9                   	leave
    8097:	c3                   	ret

0000000000008098 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8098:	55                   	push   %rbp
    8099:	48 89 e5             	mov    %rsp,%rbp
    809c:	48 83 ec 10          	sub    $0x10,%rsp
    80a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    80a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80a8:	48 89 c7             	mov    %rax,%rdi
    80ab:	e8 7c 0f 00 00       	call   902c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    80b0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    80b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    80bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80bf:	48 8b 00             	mov    (%rax),%rax
    80c2:	48 89 ce             	mov    %rcx,%rsi
    80c5:	48 89 c7             	mov    %rax,%rdi
    80c8:	e8 6d 0f 00 00       	call   903a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    80cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80d1:	48 89 c7             	mov    %rax,%rdi
    80d4:	e8 27 00 00 00       	call   8100 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    80d9:	90                   	nop
    80da:	c9                   	leave
    80db:	c3                   	ret

00000000000080dc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    80dc:	55                   	push   %rbp
    80dd:	48 89 e5             	mov    %rsp,%rbp
    80e0:	48 83 ec 10          	sub    $0x10,%rsp
    80e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    80e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ec:	48 8b 10             	mov    (%rax),%rdx
    80ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80f3:	48 89 d6             	mov    %rdx,%rsi
    80f6:	48 89 c7             	mov    %rax,%rdi
    80f9:	e8 66 0f 00 00       	call   9064 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    80fe:	c9                   	leave
    80ff:	c3                   	ret

0000000000008100 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8100:	55                   	push   %rbp
    8101:	48 89 e5             	mov    %rsp,%rbp
    8104:	48 83 ec 10          	sub    $0x10,%rsp
    8108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    810c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8110:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8118:	48 8b 00             	mov    (%rax),%rax
    811b:	48 29 c2             	sub    %rax,%rdx
    811e:	48 c1 fa 03          	sar    $0x3,%rdx
    8122:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8129:	aa aa aa 
    812c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8130:	48 89 c2             	mov    %rax,%rdx
    8133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8137:	48 8b 08             	mov    (%rax),%rcx
    813a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    813e:	48 89 ce             	mov    %rcx,%rsi
    8141:	48 89 c7             	mov    %rax,%rdi
    8144:	e8 53 0f 00 00       	call   909c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    814d:	48 89 c7             	mov    %rax,%rdi
    8150:	e8 ad f8 ff ff       	call   7a02 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    8155:	90                   	nop
    8156:	c9                   	leave
    8157:	c3                   	ret

0000000000008158 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8158:	55                   	push   %rbp
    8159:	48 89 e5             	mov    %rsp,%rbp
    815c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8164:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    816c:	48 8b 00             	mov    (%rax),%rax
    816f:	48 29 c2             	sub    %rax,%rdx
    8172:	48 c1 fa 03          	sar    $0x3,%rdx
    8176:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    817d:	aa aa aa 
    8180:	48 0f af c2          	imul   %rdx,%rax
    8184:	5d                   	pop    %rbp
    8185:	c3                   	ret

0000000000008186 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8186:	55                   	push   %rbp
    8187:	48 89 e5             	mov    %rsp,%rbp
    818a:	48 83 ec 10          	sub    $0x10,%rsp
    818e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8196:	48 89 c7             	mov    %rax,%rdi
    8199:	e8 34 0f 00 00       	call   90d2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    819e:	90                   	nop
    819f:	c9                   	leave
    81a0:	c3                   	ret
    81a1:	90                   	nop

00000000000081a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    81a2:	55                   	push   %rbp
    81a3:	48 89 e5             	mov    %rsp,%rbp
    81a6:	48 83 ec 10          	sub    $0x10,%rsp
    81aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81b2:	48 89 c7             	mov    %rax,%rdi
    81b5:	e8 24 0f 00 00       	call   90de <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    81ba:	90                   	nop
    81bb:	c9                   	leave
    81bc:	c3                   	ret
    81bd:	90                   	nop

00000000000081be <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    81be:	55                   	push   %rbp
    81bf:	48 89 e5             	mov    %rsp,%rbp
    81c2:	53                   	push   %rbx
    81c3:	48 83 ec 28          	sub    $0x28,%rsp
    81c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    81cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    81cf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    81d3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    81d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    81db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81df:	48 89 d6             	mov    %rdx,%rsi
    81e2:	48 89 c7             	mov    %rax,%rdi
    81e5:	e8 ff 0e 00 00       	call   90e9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    81ea:	48 89 c1             	mov    %rax,%rcx
    81ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81f1:	48 89 c2             	mov    %rax,%rdx
    81f4:	48 89 ce             	mov    %rcx,%rsi
    81f7:	48 89 df             	mov    %rbx,%rdi
    81fa:	e8 4b 0f 00 00       	call   914a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    81ff:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8203:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8207:	48 89 d6             	mov    %rdx,%rsi
    820a:	48 89 c7             	mov    %rax,%rdi
    820d:	e8 96 0f 00 00       	call   91a8 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    8212:	eb 1a                	jmp    822e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    8214:	48 89 c3             	mov    %rax,%rbx
    8217:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    821b:	48 89 c7             	mov    %rax,%rdi
    821e:	e8 bb 01 00 00       	call   83de <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8223:	48 89 d8             	mov    %rbx,%rax
    8226:	48 89 c7             	mov    %rax,%rdi
    8229:	e8 52 c4 ff ff       	call   4680 <_Unwind_Resume@plt>
    822e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8232:	c9                   	leave
    8233:	c3                   	ret

0000000000008234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8234:	55                   	push   %rbp
    8235:	48 89 e5             	mov    %rsp,%rbp
    8238:	48 83 ec 10          	sub    $0x10,%rsp
    823c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8244:	48 89 c7             	mov    %rax,%rdi
    8247:	e8 9c 0f 00 00       	call   91e8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    824c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    824f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8253:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    825b:	48 8b 00             	mov    (%rax),%rax
    825e:	48 89 ce             	mov    %rcx,%rsi
    8261:	48 89 c7             	mov    %rax,%rdi
    8264:	e8 8d 0f 00 00       	call   91f6 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    8269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    826d:	48 89 c7             	mov    %rax,%rdi
    8270:	e8 69 01 00 00       	call   83de <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8275:	90                   	nop
    8276:	c9                   	leave
    8277:	c3                   	ret

0000000000008278 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    8278:	55                   	push   %rbp
    8279:	48 89 e5             	mov    %rsp,%rbp
    827c:	48 83 ec 20          	sub    $0x20,%rsp
    8280:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8284:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8288:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    828c:	48 89 d6             	mov    %rdx,%rsi
    828f:	48 89 c7             	mov    %rax,%rdi
    8292:	e8 89 0f 00 00       	call   9220 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    829b:	c9                   	leave
    829c:	c3                   	ret
    829d:	90                   	nop

000000000000829e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    829e:	55                   	push   %rbp
    829f:	48 89 e5             	mov    %rsp,%rbp
    82a2:	48 83 ec 20          	sub    $0x20,%rsp
    82a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    82aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82ae:	48 8d 50 08          	lea    0x8(%rax),%rdx
    82b2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    82b6:	48 89 d6             	mov    %rdx,%rsi
    82b9:	48 89 c7             	mov    %rax,%rdi
    82bc:	e8 5f 0f 00 00       	call   9220 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    82c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c5:	c9                   	leave
    82c6:	c3                   	ret

00000000000082c7 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    82c7:	55                   	push   %rbp
    82c8:	48 89 e5             	mov    %rsp,%rbp
    82cb:	53                   	push   %rbx
    82cc:	48 83 ec 18          	sub    $0x18,%rsp
    82d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82d4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    82d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82dc:	48 89 c7             	mov    %rax,%rdi
    82df:	e8 5a 0f 00 00       	call   923e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    82e4:	48 8b 18             	mov    (%rax),%rbx
    82e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    82eb:	48 89 c7             	mov    %rax,%rdi
    82ee:	e8 4b 0f 00 00       	call   923e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    82f3:	48 8b 00             	mov    (%rax),%rax
    82f6:	48 39 c3             	cmp    %rax,%rbx
    82f9:	0f 95 c0             	setne  %al
    82fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8300:	c9                   	leave
    8301:	c3                   	ret

0000000000008302 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8302:	55                   	push   %rbp
    8303:	48 89 e5             	mov    %rsp,%rbp
    8306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    830a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    830e:	48 8b 00             	mov    (%rax),%rax
    8311:	48 8d 50 18          	lea    0x18(%rax),%rdx
    8315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8319:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    831c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8320:	5d                   	pop    %rbp
    8321:	c3                   	ret

0000000000008322 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8322:	55                   	push   %rbp
    8323:	48 89 e5             	mov    %rsp,%rbp
    8326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    832a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    832e:	48 8b 00             	mov    (%rax),%rax
    8331:	5d                   	pop    %rbp
    8332:	c3                   	ret
    8333:	90                   	nop

0000000000008334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8334:	55                   	push   %rbp
    8335:	48 89 e5             	mov    %rsp,%rbp
    8338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    833c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8344:	48 8b 08             	mov    (%rax),%rcx
    8347:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    834b:	48 89 d0             	mov    %rdx,%rax
    834e:	48 c1 e0 03          	shl    $0x3,%rax
    8352:	48 29 d0             	sub    %rdx,%rax
    8355:	48 c1 e0 02          	shl    $0x2,%rax
    8359:	48 01 c8             	add    %rcx,%rax
      }
    835c:	5d                   	pop    %rbp
    835d:	c3                   	ret

000000000000835e <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    835e:	55                   	push   %rbp
    835f:	48 89 e5             	mov    %rsp,%rbp
    8362:	53                   	push   %rbx
    8363:	48 83 ec 18          	sub    $0x18,%rsp
    8367:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    836b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    836f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8373:	48 89 c7             	mov    %rax,%rdi
    8376:	e8 d1 0e 00 00       	call   924c <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    837b:	84 c0                	test   %al,%al
    837d:	74 36                	je     83b5 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    837f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8383:	48 89 c7             	mov    %rax,%rdi
    8386:	e8 17 0f 00 00       	call   92a2 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    838b:	48 89 c3             	mov    %rax,%rbx
    838e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8392:	48 89 c7             	mov    %rax,%rdi
    8395:	e8 c4 0e 00 00       	call   925e <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    839a:	48 89 c1             	mov    %rax,%rcx
    839d:	48 8b 03             	mov    (%rbx),%rax
    83a0:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    83a4:	48 89 01             	mov    %rax,(%rcx)
    83a7:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    83ab:	48 8b 43 10          	mov    0x10(%rbx),%rax
    83af:	48 89 41 10          	mov    %rax,0x10(%rcx)
    83b3:	eb 1e                	jmp    83d3 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    83b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83b9:	48 89 c7             	mov    %rax,%rdi
    83bc:	e8 e1 0e 00 00       	call   92a2 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    83c1:	48 89 c2             	mov    %rax,%rdx
    83c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83c8:	48 89 d6             	mov    %rdx,%rsi
    83cb:	48 89 c7             	mov    %rax,%rdi
    83ce:	e8 dd 0e 00 00       	call   92b0 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    83d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    83d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    83db:	c9                   	leave
    83dc:	c3                   	ret
    83dd:	90                   	nop

00000000000083de <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    83de:	55                   	push   %rbp
    83df:	48 89 e5             	mov    %rsp,%rbp
    83e2:	48 83 ec 10          	sub    $0x10,%rsp
    83e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    83ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83ee:	48 8b 50 10          	mov    0x10(%rax),%rdx
    83f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f6:	48 8b 00             	mov    (%rax),%rax
    83f9:	48 29 c2             	sub    %rax,%rdx
    83fc:	48 c1 fa 02          	sar    $0x2,%rdx
    8400:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    8407:	db b6 6d 
    840a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    840e:	48 89 c2             	mov    %rax,%rdx
    8411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8415:	48 8b 08             	mov    (%rax),%rcx
    8418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    841c:	48 89 ce             	mov    %rcx,%rsi
    841f:	48 89 c7             	mov    %rax,%rdi
    8422:	e8 e3 0e 00 00       	call   930a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    8427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    842b:	48 89 c7             	mov    %rax,%rdi
    842e:	e8 eb f5 ff ff       	call   7a1e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    8433:	90                   	nop
    8434:	c9                   	leave
    8435:	c3                   	ret

0000000000008436 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8436:	55                   	push   %rbp
    8437:	48 89 e5             	mov    %rsp,%rbp
    843a:	48 83 ec 10          	sub    $0x10,%rsp
    843e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8446:	48 89 c7             	mov    %rax,%rdi
    8449:	e8 f2 0e 00 00       	call   9340 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    844e:	90                   	nop
    844f:	c9                   	leave
    8450:	c3                   	ret
    8451:	90                   	nop

0000000000008452 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8452:	55                   	push   %rbp
    8453:	48 89 e5             	mov    %rsp,%rbp
    8456:	48 83 ec 10          	sub    $0x10,%rsp
    845a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    845e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8462:	48 89 c7             	mov    %rax,%rdi
    8465:	e8 e2 0e 00 00       	call   934c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    846a:	90                   	nop
    846b:	c9                   	leave
    846c:	c3                   	ret
    846d:	90                   	nop

000000000000846e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    846e:	55                   	push   %rbp
    846f:	48 89 e5             	mov    %rsp,%rbp
    8472:	53                   	push   %rbx
    8473:	48 83 ec 28          	sub    $0x28,%rsp
    8477:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    847b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    847f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8483:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8487:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    848b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    848f:	48 89 d6             	mov    %rdx,%rsi
    8492:	48 89 c7             	mov    %rax,%rdi
    8495:	e8 bd 0e 00 00       	call   9357 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    849a:	48 89 c1             	mov    %rax,%rcx
    849d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    84a1:	48 89 c2             	mov    %rax,%rdx
    84a4:	48 89 ce             	mov    %rcx,%rsi
    84a7:	48 89 df             	mov    %rbx,%rdi
    84aa:	e8 09 0f 00 00       	call   93b8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    84af:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    84b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84b7:	48 89 d6             	mov    %rdx,%rsi
    84ba:	48 89 c7             	mov    %rax,%rdi
    84bd:	e8 54 0f 00 00       	call   9416 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    84c2:	eb 1a                	jmp    84de <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    84c4:	48 89 c3             	mov    %rax,%rbx
    84c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84cb:	48 89 c7             	mov    %rax,%rdi
    84ce:	e8 79 00 00 00       	call   854c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    84d3:	48 89 d8             	mov    %rbx,%rax
    84d6:	48 89 c7             	mov    %rax,%rdi
    84d9:	e8 a2 c1 ff ff       	call   4680 <_Unwind_Resume@plt>
    84de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84e2:	c9                   	leave
    84e3:	c3                   	ret

00000000000084e4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    84e4:	55                   	push   %rbp
    84e5:	48 89 e5             	mov    %rsp,%rbp
    84e8:	48 83 ec 10          	sub    $0x10,%rsp
    84ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    84f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84f4:	48 89 c7             	mov    %rax,%rdi
    84f7:	e8 5a 0f 00 00       	call   9456 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    84fc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    84ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8503:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    850b:	48 8b 00             	mov    (%rax),%rax
    850e:	48 89 ce             	mov    %rcx,%rsi
    8511:	48 89 c7             	mov    %rax,%rdi
    8514:	e8 4b 0f 00 00       	call   9464 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    8519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851d:	48 89 c7             	mov    %rax,%rdi
    8520:	e8 27 00 00 00       	call   854c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8525:	90                   	nop
    8526:	c9                   	leave
    8527:	c3                   	ret

0000000000008528 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8528:	55                   	push   %rbp
    8529:	48 89 e5             	mov    %rsp,%rbp
    852c:	48 83 ec 10          	sub    $0x10,%rsp
    8530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8538:	48 8b 10             	mov    (%rax),%rdx
    853b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    853f:	48 89 d6             	mov    %rdx,%rsi
    8542:	48 89 c7             	mov    %rax,%rdi
    8545:	e8 44 0f 00 00       	call   948e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    854a:	c9                   	leave
    854b:	c3                   	ret

000000000000854c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    854c:	55                   	push   %rbp
    854d:	48 89 e5             	mov    %rsp,%rbp
    8550:	48 83 ec 10          	sub    $0x10,%rsp
    8554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    855c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8560:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8564:	48 8b 00             	mov    (%rax),%rax
    8567:	48 29 c2             	sub    %rax,%rdx
    856a:	48 89 d0             	mov    %rdx,%rax
    856d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8571:	48 89 c2             	mov    %rax,%rdx
    8574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8578:	48 8b 08             	mov    (%rax),%rcx
    857b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    857f:	48 89 ce             	mov    %rcx,%rsi
    8582:	48 89 c7             	mov    %rax,%rdi
    8585:	e8 3c 0f 00 00       	call   94c6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    858a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    858e:	48 89 c7             	mov    %rax,%rdi
    8591:	e8 a4 f4 ff ff       	call   7a3a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    8596:	90                   	nop
    8597:	c9                   	leave
    8598:	c3                   	ret
    8599:	90                   	nop

000000000000859a <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    859a:	55                   	push   %rbp
    859b:	48 89 e5             	mov    %rsp,%rbp
    859e:	48 83 ec 10          	sub    $0x10,%rsp
    85a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85aa:	48 89 c7             	mov    %rax,%rdi
    85ad:	e8 4a 0f 00 00       	call   94fc <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    85b2:	90                   	nop
    85b3:	c9                   	leave
    85b4:	c3                   	ret
    85b5:	90                   	nop

00000000000085b6 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    85b6:	55                   	push   %rbp
    85b7:	48 89 e5             	mov    %rsp,%rbp
    85ba:	48 83 ec 10          	sub    $0x10,%rsp
    85be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c6:	48 89 c7             	mov    %rax,%rdi
    85c9:	e8 3a 0f 00 00       	call   9508 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    85ce:	90                   	nop
    85cf:	c9                   	leave
    85d0:	c3                   	ret
    85d1:	90                   	nop

00000000000085d2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    85d2:	55                   	push   %rbp
    85d3:	48 89 e5             	mov    %rsp,%rbp
    85d6:	53                   	push   %rbx
    85d7:	48 83 ec 28          	sub    $0x28,%rsp
    85db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    85e3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    85e7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    85eb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    85ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85f3:	48 89 d6             	mov    %rdx,%rsi
    85f6:	48 89 c7             	mov    %rax,%rdi
    85f9:	e8 15 0f 00 00       	call   9513 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    85fe:	48 89 c1             	mov    %rax,%rcx
    8601:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8605:	48 89 c2             	mov    %rax,%rdx
    8608:	48 89 ce             	mov    %rcx,%rsi
    860b:	48 89 df             	mov    %rbx,%rdi
    860e:	e8 61 0f 00 00       	call   9574 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8613:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8617:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    861b:	48 89 d6             	mov    %rdx,%rsi
    861e:	48 89 c7             	mov    %rax,%rdi
    8621:	e8 ac 0f 00 00       	call   95d2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    8626:	eb 1a                	jmp    8642 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    8628:	48 89 c3             	mov    %rax,%rbx
    862b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    862f:	48 89 c7             	mov    %rax,%rdi
    8632:	e8 79 00 00 00       	call   86b0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8637:	48 89 d8             	mov    %rbx,%rax
    863a:	48 89 c7             	mov    %rax,%rdi
    863d:	e8 3e c0 ff ff       	call   4680 <_Unwind_Resume@plt>
    8642:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8646:	c9                   	leave
    8647:	c3                   	ret

0000000000008648 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8648:	55                   	push   %rbp
    8649:	48 89 e5             	mov    %rsp,%rbp
    864c:	48 83 ec 10          	sub    $0x10,%rsp
    8650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8658:	48 89 c7             	mov    %rax,%rdi
    865b:	e8 b2 0f 00 00       	call   9612 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8660:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8663:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8667:	48 8b 48 08          	mov    0x8(%rax),%rcx
    866b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    866f:	48 8b 00             	mov    (%rax),%rax
    8672:	48 89 ce             	mov    %rcx,%rsi
    8675:	48 89 c7             	mov    %rax,%rdi
    8678:	e8 a3 0f 00 00       	call   9620 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    867d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8681:	48 89 c7             	mov    %rax,%rdi
    8684:	e8 27 00 00 00       	call   86b0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8689:	90                   	nop
    868a:	c9                   	leave
    868b:	c3                   	ret

000000000000868c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    868c:	55                   	push   %rbp
    868d:	48 89 e5             	mov    %rsp,%rbp
    8690:	48 83 ec 10          	sub    $0x10,%rsp
    8694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    869c:	48 8b 10             	mov    (%rax),%rdx
    869f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86a3:	48 89 d6             	mov    %rdx,%rsi
    86a6:	48 89 c7             	mov    %rax,%rdi
    86a9:	e8 9c 0f 00 00       	call   964a <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    86ae:	c9                   	leave
    86af:	c3                   	ret

00000000000086b0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    86b0:	55                   	push   %rbp
    86b1:	48 89 e5             	mov    %rsp,%rbp
    86b4:	48 83 ec 10          	sub    $0x10,%rsp
    86b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    86bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    86c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c8:	48 8b 00             	mov    (%rax),%rax
    86cb:	48 29 c2             	sub    %rax,%rdx
    86ce:	48 89 d0             	mov    %rdx,%rax
    86d1:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    86d5:	48 89 c2             	mov    %rax,%rdx
    86d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86dc:	48 8b 08             	mov    (%rax),%rcx
    86df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e3:	48 89 ce             	mov    %rcx,%rsi
    86e6:	48 89 c7             	mov    %rax,%rdi
    86e9:	e8 94 0f 00 00       	call   9682 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    86ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86f2:	48 89 c7             	mov    %rax,%rdi
    86f5:	e8 5c f3 ff ff       	call   7a56 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    86fa:	90                   	nop
    86fb:	c9                   	leave
    86fc:	c3                   	ret
    86fd:	90                   	nop

00000000000086fe <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    86fe:	55                   	push   %rbp
    86ff:	48 89 e5             	mov    %rsp,%rbp
    8702:	48 83 ec 10          	sub    $0x10,%rsp
    8706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    870a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    870e:	48 89 c7             	mov    %rax,%rdi
    8711:	e8 a2 0f 00 00       	call   96b8 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    8716:	90                   	nop
    8717:	c9                   	leave
    8718:	c3                   	ret
    8719:	90                   	nop

000000000000871a <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    871a:	55                   	push   %rbp
    871b:	48 89 e5             	mov    %rsp,%rbp
    871e:	48 83 ec 10          	sub    $0x10,%rsp
    8722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    872a:	48 89 c7             	mov    %rax,%rdi
    872d:	e8 92 0f 00 00       	call   96c4 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    8732:	90                   	nop
    8733:	c9                   	leave
    8734:	c3                   	ret
    8735:	90                   	nop

0000000000008736 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8736:	55                   	push   %rbp
    8737:	48 89 e5             	mov    %rsp,%rbp
    873a:	53                   	push   %rbx
    873b:	48 83 ec 28          	sub    $0x28,%rsp
    873f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8743:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8747:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    874b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    874f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8753:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8757:	48 89 d6             	mov    %rdx,%rsi
    875a:	48 89 c7             	mov    %rax,%rdi
    875d:	e8 6d 0f 00 00       	call   96cf <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8762:	48 89 c1             	mov    %rax,%rcx
    8765:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8769:	48 89 c2             	mov    %rax,%rdx
    876c:	48 89 ce             	mov    %rcx,%rsi
    876f:	48 89 df             	mov    %rbx,%rdi
    8772:	e8 b9 0f 00 00       	call   9730 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8777:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    877b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    877f:	48 89 d6             	mov    %rdx,%rsi
    8782:	48 89 c7             	mov    %rax,%rdi
    8785:	e8 04 10 00 00       	call   978e <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    878a:	eb 1a                	jmp    87a6 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    878c:	48 89 c3             	mov    %rax,%rbx
    878f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8793:	48 89 c7             	mov    %rax,%rdi
    8796:	e8 79 00 00 00       	call   8814 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    879b:	48 89 d8             	mov    %rbx,%rax
    879e:	48 89 c7             	mov    %rax,%rdi
    87a1:	e8 da be ff ff       	call   4680 <_Unwind_Resume@plt>
    87a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87aa:	c9                   	leave
    87ab:	c3                   	ret

00000000000087ac <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    87ac:	55                   	push   %rbp
    87ad:	48 89 e5             	mov    %rsp,%rbp
    87b0:	48 83 ec 10          	sub    $0x10,%rsp
    87b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    87b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87bc:	48 89 c7             	mov    %rax,%rdi
    87bf:	e8 0a 10 00 00       	call   97ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    87c4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    87c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87cb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    87cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87d3:	48 8b 00             	mov    (%rax),%rax
    87d6:	48 89 ce             	mov    %rcx,%rsi
    87d9:	48 89 c7             	mov    %rax,%rdi
    87dc:	e8 fb 0f 00 00       	call   97dc <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    87e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87e5:	48 89 c7             	mov    %rax,%rdi
    87e8:	e8 27 00 00 00       	call   8814 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    87ed:	90                   	nop
    87ee:	c9                   	leave
    87ef:	c3                   	ret

00000000000087f0 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    87f0:	55                   	push   %rbp
    87f1:	48 89 e5             	mov    %rsp,%rbp
    87f4:	48 83 ec 10          	sub    $0x10,%rsp
    87f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    87fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8800:	48 8b 10             	mov    (%rax),%rdx
    8803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8807:	48 89 d6             	mov    %rdx,%rsi
    880a:	48 89 c7             	mov    %rax,%rdi
    880d:	e8 f4 0f 00 00       	call   9806 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8812:	c9                   	leave
    8813:	c3                   	ret

0000000000008814 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8814:	55                   	push   %rbp
    8815:	48 89 e5             	mov    %rsp,%rbp
    8818:	48 83 ec 10          	sub    $0x10,%rsp
    881c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8824:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    882c:	48 8b 00             	mov    (%rax),%rax
    882f:	48 29 c2             	sub    %rax,%rdx
    8832:	48 89 d0             	mov    %rdx,%rax
    8835:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8839:	48 89 c2             	mov    %rax,%rdx
    883c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8840:	48 8b 08             	mov    (%rax),%rcx
    8843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8847:	48 89 ce             	mov    %rcx,%rsi
    884a:	48 89 c7             	mov    %rax,%rdi
    884d:	e8 ec 0f 00 00       	call   983e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8856:	48 89 c7             	mov    %rax,%rdi
    8859:	e8 14 f2 ff ff       	call   7a72 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    885e:	90                   	nop
    885f:	c9                   	leave
    8860:	c3                   	ret
    8861:	90                   	nop

0000000000008862 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8862:	55                   	push   %rbp
    8863:	48 89 e5             	mov    %rsp,%rbp
    8866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    886a:	90                   	nop
    886b:	5d                   	pop    %rbp
    886c:	c3                   	ret
    886d:	90                   	nop

000000000000886e <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    886e:	55                   	push   %rbp
    886f:	48 89 e5             	mov    %rsp,%rbp
    8872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8876:	90                   	nop
    8877:	5d                   	pop    %rbp
    8878:	c3                   	ret

0000000000008879 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8879:	55                   	push   %rbp
    887a:	48 89 e5             	mov    %rsp,%rbp
    887d:	53                   	push   %rbx
    887e:	48 83 ec 28          	sub    $0x28,%rsp
    8882:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8886:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    888a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    888e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8892:	48 89 d6             	mov    %rdx,%rsi
    8895:	48 89 c7             	mov    %rax,%rdi
    8898:	e8 25 01 00 00       	call   89c2 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    889d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    88a1:	48 89 c7             	mov    %rax,%rdi
    88a4:	e8 ca 0f 00 00       	call   9873 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    88a9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    88ad:	0f 92 c3             	setb   %bl
    88b0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    88b4:	48 89 c7             	mov    %rax,%rdi
    88b7:	e8 ee f1 ff ff       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
    88bc:	84 db                	test   %bl,%bl
    88be:	74 0f                	je     88cf <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    88c0:	48 8d 05 b9 d7 00 00 	lea    0xd7b9(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    88c7:	48 89 c7             	mov    %rax,%rdi
    88ca:	e8 a1 b8 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    88cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    88d3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88d7:	c9                   	leave
    88d8:	c3                   	ret
    88d9:	90                   	nop

00000000000088da <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    88da:	55                   	push   %rbp
    88db:	48 89 e5             	mov    %rsp,%rbp
    88de:	53                   	push   %rbx
    88df:	48 83 ec 28          	sub    $0x28,%rsp
    88e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    88eb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    88ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88f3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    88f7:	48 89 d6             	mov    %rdx,%rsi
    88fa:	48 89 c7             	mov    %rax,%rdi
    88fd:	e8 b4 0f 00 00       	call   98b6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8902:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8906:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    890a:	48 89 d6             	mov    %rdx,%rsi
    890d:	48 89 c7             	mov    %rax,%rdi
    8910:	e8 d3 0f 00 00       	call   98e8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8915:	eb 1a                	jmp    8931 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8917:	48 89 c3             	mov    %rax,%rbx
    891a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    891e:	48 89 c7             	mov    %rax,%rdi
    8921:	e8 6c f0 ff ff       	call   7992 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8926:	48 89 d8             	mov    %rbx,%rax
    8929:	48 89 c7             	mov    %rax,%rdi
    892c:	e8 4f bd ff ff       	call   4680 <_Unwind_Resume@plt>
    8931:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8935:	c9                   	leave
    8936:	c3                   	ret
    8937:	90                   	nop

0000000000008938 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8938:	55                   	push   %rbp
    8939:	48 89 e5             	mov    %rsp,%rbp
    893c:	48 83 ec 10          	sub    $0x10,%rsp
    8940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8944:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    894c:	48 89 c7             	mov    %rax,%rdi
    894f:	e8 24 00 00 00       	call   8978 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8954:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    895b:	48 8b 00             	mov    (%rax),%rax
    895e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8962:	48 89 ce             	mov    %rcx,%rsi
    8965:	48 89 c7             	mov    %rax,%rdi
    8968:	e8 dc 0f 00 00       	call   9949 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    896d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8971:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8975:	90                   	nop
    8976:	c9                   	leave
    8977:	c3                   	ret

0000000000008978 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8978:	55                   	push   %rbp
    8979:	48 89 e5             	mov    %rsp,%rbp
    897c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8984:	5d                   	pop    %rbp
    8985:	c3                   	ret

0000000000008986 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8986:	55                   	push   %rbp
    8987:	48 89 e5             	mov    %rsp,%rbp
    898a:	48 83 ec 20          	sub    $0x20,%rsp
    898e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8992:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8996:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    899a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    899e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a2:	48 89 d6             	mov    %rdx,%rsi
    89a5:	48 89 c7             	mov    %rax,%rdi
    89a8:	e8 c5 0f 00 00       	call   9972 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    89ad:	90                   	nop
    89ae:	c9                   	leave
    89af:	c3                   	ret

00000000000089b0 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    89b0:	55                   	push   %rbp
    89b1:	48 89 e5             	mov    %rsp,%rbp
    89b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    89bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89c0:	5d                   	pop    %rbp
    89c1:	c3                   	ret

00000000000089c2 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    89c2:	55                   	push   %rbp
    89c3:	48 89 e5             	mov    %rsp,%rbp
    89c6:	48 83 ec 10          	sub    $0x10,%rsp
    89ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    89d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    89d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89da:	48 89 d6             	mov    %rdx,%rsi
    89dd:	48 89 c7             	mov    %rax,%rdi
    89e0:	e8 b3 0f 00 00       	call   9998 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    89e5:	90                   	nop
    89e6:	c9                   	leave
    89e7:	c3                   	ret

00000000000089e8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    89e8:	55                   	push   %rbp
    89e9:	48 89 e5             	mov    %rsp,%rbp
    89ec:	48 83 ec 20          	sub    $0x20,%rsp
    89f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    89f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    89fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8a01:	74 17                	je     8a1a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8a0b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8a0f:	48 89 ce             	mov    %rcx,%rsi
    8a12:	48 89 c7             	mov    %rax,%rdi
    8a15:	e8 8d 0f 00 00       	call   99a7 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    8a1a:	90                   	nop
    8a1b:	c9                   	leave
    8a1c:	c3                   	ret
    8a1d:	90                   	nop

0000000000008a1e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8a1e:	55                   	push   %rbp
    8a1f:	48 89 e5             	mov    %rsp,%rbp
    8a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a26:	90                   	nop
    8a27:	5d                   	pop    %rbp
    8a28:	c3                   	ret
    8a29:	90                   	nop

0000000000008a2a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8a2a:	55                   	push   %rbp
    8a2b:	48 89 e5             	mov    %rsp,%rbp
    8a2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a32:	90                   	nop
    8a33:	5d                   	pop    %rbp
    8a34:	c3                   	ret

0000000000008a35 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8a35:	55                   	push   %rbp
    8a36:	48 89 e5             	mov    %rsp,%rbp
    8a39:	53                   	push   %rbx
    8a3a:	48 83 ec 28          	sub    $0x28,%rsp
    8a3e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8a42:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8a46:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8a4a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a4e:	48 89 d6             	mov    %rdx,%rsi
    8a51:	48 89 c7             	mov    %rax,%rdi
    8a54:	e8 25 01 00 00       	call   8b7e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8a59:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a5d:	48 89 c7             	mov    %rax,%rdi
    8a60:	e8 70 0f 00 00       	call   99d5 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8a65:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8a69:	0f 92 c3             	setb   %bl
    8a6c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a70:	48 89 c7             	mov    %rax,%rdi
    8a73:	e8 a0 f1 ff ff       	call   7c18 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8a78:	84 db                	test   %bl,%bl
    8a7a:	74 0f                	je     8a8b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8a7c:	48 8d 05 fd d5 00 00 	lea    0xd5fd(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8a83:	48 89 c7             	mov    %rax,%rdi
    8a86:	e8 e5 b6 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8a8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8a8f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a93:	c9                   	leave
    8a94:	c3                   	ret
    8a95:	90                   	nop

0000000000008a96 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8a96:	55                   	push   %rbp
    8a97:	48 89 e5             	mov    %rsp,%rbp
    8a9a:	53                   	push   %rbx
    8a9b:	48 83 ec 28          	sub    $0x28,%rsp
    8a9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8aa3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8aa7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8aab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8aaf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8ab3:	48 89 d6             	mov    %rdx,%rsi
    8ab6:	48 89 c7             	mov    %rax,%rdi
    8ab9:	e8 5a 0f 00 00       	call   9a18 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8abe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ac2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ac6:	48 89 d6             	mov    %rdx,%rsi
    8ac9:	48 89 c7             	mov    %rax,%rdi
    8acc:	e8 79 0f 00 00       	call   9a4a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8ad1:	eb 1a                	jmp    8aed <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8ad3:	48 89 c3             	mov    %rax,%rbx
    8ad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ada:	48 89 c7             	mov    %rax,%rdi
    8add:	e8 cc ee ff ff       	call   79ae <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8ae2:	48 89 d8             	mov    %rbx,%rax
    8ae5:	48 89 c7             	mov    %rax,%rdi
    8ae8:	e8 93 bb ff ff       	call   4680 <_Unwind_Resume@plt>
    8aed:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8af1:	c9                   	leave
    8af2:	c3                   	ret
    8af3:	90                   	nop

0000000000008af4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8af4:	55                   	push   %rbp
    8af5:	48 89 e5             	mov    %rsp,%rbp
    8af8:	48 83 ec 10          	sub    $0x10,%rsp
    8afc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b08:	48 89 c7             	mov    %rax,%rdi
    8b0b:	e8 24 00 00 00       	call   8b34 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8b10:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b17:	48 8b 00             	mov    (%rax),%rax
    8b1a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b1e:	48 89 ce             	mov    %rcx,%rsi
    8b21:	48 89 c7             	mov    %rax,%rdi
    8b24:	e8 82 0f 00 00       	call   9aab <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8b29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8b2d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8b31:	90                   	nop
    8b32:	c9                   	leave
    8b33:	c3                   	ret

0000000000008b34 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8b34:	55                   	push   %rbp
    8b35:	48 89 e5             	mov    %rsp,%rbp
    8b38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b40:	5d                   	pop    %rbp
    8b41:	c3                   	ret

0000000000008b42 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8b42:	55                   	push   %rbp
    8b43:	48 89 e5             	mov    %rsp,%rbp
    8b46:	48 83 ec 20          	sub    $0x20,%rsp
    8b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8b56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b5e:	48 89 d6             	mov    %rdx,%rsi
    8b61:	48 89 c7             	mov    %rax,%rdi
    8b64:	e8 6b 0f 00 00       	call   9ad4 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8b69:	90                   	nop
    8b6a:	c9                   	leave
    8b6b:	c3                   	ret

0000000000008b6c <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8b6c:	55                   	push   %rbp
    8b6d:	48 89 e5             	mov    %rsp,%rbp
    8b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8b78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b7c:	5d                   	pop    %rbp
    8b7d:	c3                   	ret

0000000000008b7e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8b7e:	55                   	push   %rbp
    8b7f:	48 89 e5             	mov    %rsp,%rbp
    8b82:	48 83 ec 10          	sub    $0x10,%rsp
    8b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8b8e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8b92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b96:	48 89 d6             	mov    %rdx,%rsi
    8b99:	48 89 c7             	mov    %rax,%rdi
    8b9c:	e8 59 0f 00 00       	call   9afa <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8ba1:	90                   	nop
    8ba2:	c9                   	leave
    8ba3:	c3                   	ret

0000000000008ba4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8ba4:	55                   	push   %rbp
    8ba5:	48 89 e5             	mov    %rsp,%rbp
    8ba8:	48 83 ec 20          	sub    $0x20,%rsp
    8bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8bb4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8bb8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8bbd:	74 17                	je     8bd6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8bbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bc3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8bc7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8bcb:	48 89 ce             	mov    %rcx,%rsi
    8bce:	48 89 c7             	mov    %rax,%rdi
    8bd1:	e8 33 0f 00 00       	call   9b09 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    8bd6:	90                   	nop
    8bd7:	c9                   	leave
    8bd8:	c3                   	ret
    8bd9:	90                   	nop

0000000000008bda <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8bda:	55                   	push   %rbp
    8bdb:	48 89 e5             	mov    %rsp,%rbp
    8bde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8be2:	90                   	nop
    8be3:	5d                   	pop    %rbp
    8be4:	c3                   	ret
    8be5:	90                   	nop

0000000000008be6 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8be6:	55                   	push   %rbp
    8be7:	48 89 e5             	mov    %rsp,%rbp
    8bea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bee:	90                   	nop
    8bef:	5d                   	pop    %rbp
    8bf0:	c3                   	ret

0000000000008bf1 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8bf1:	55                   	push   %rbp
    8bf2:	48 89 e5             	mov    %rsp,%rbp
    8bf5:	53                   	push   %rbx
    8bf6:	48 83 ec 28          	sub    $0x28,%rsp
    8bfa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8bfe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8c02:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8c06:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c0a:	48 89 d6             	mov    %rdx,%rsi
    8c0d:	48 89 c7             	mov    %rax,%rdi
    8c10:	e8 e9 00 00 00       	call   8cfe <_ZNSaIPKcEC1ERKS1_>
    8c15:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c19:	48 89 c7             	mov    %rax,%rdi
    8c1c:	e8 16 0f 00 00       	call   9b37 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    8c21:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8c25:	0f 92 c3             	setb   %bl
    8c28:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c2c:	48 89 c7             	mov    %rax,%rdi
    8c2f:	e8 52 f1 ff ff       	call   7d86 <_ZNSaIPKcED1Ev>
    8c34:	84 db                	test   %bl,%bl
    8c36:	74 0f                	je     8c47 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8c38:	48 8d 05 41 d4 00 00 	lea    0xd441(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8c3f:	48 89 c7             	mov    %rax,%rdi
    8c42:	e8 29 b5 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8c47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8c4b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c4f:	c9                   	leave
    8c50:	c3                   	ret
    8c51:	90                   	nop

0000000000008c52 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8c52:	55                   	push   %rbp
    8c53:	48 89 e5             	mov    %rsp,%rbp
    8c56:	53                   	push   %rbx
    8c57:	48 83 ec 28          	sub    $0x28,%rsp
    8c5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c5f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c63:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8c67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c6b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c6f:	48 89 d6             	mov    %rdx,%rsi
    8c72:	48 89 c7             	mov    %rax,%rdi
    8c75:	e8 00 0f 00 00       	call   9b7a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8c7a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c82:	48 89 d6             	mov    %rdx,%rsi
    8c85:	48 89 c7             	mov    %rax,%rdi
    8c88:	e8 1f 0f 00 00       	call   9bac <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    8c8d:	eb 1a                	jmp    8ca9 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    8c8f:	48 89 c3             	mov    %rax,%rbx
    8c92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c96:	48 89 c7             	mov    %rax,%rdi
    8c99:	e8 2c ed ff ff       	call   79ca <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8c9e:	48 89 d8             	mov    %rbx,%rax
    8ca1:	48 89 c7             	mov    %rax,%rdi
    8ca4:	e8 d7 b9 ff ff       	call   4680 <_Unwind_Resume@plt>
    8ca9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cad:	c9                   	leave
    8cae:	c3                   	ret
    8caf:	90                   	nop

0000000000008cb0 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8cb0:	55                   	push   %rbp
    8cb1:	48 89 e5             	mov    %rsp,%rbp
    8cb4:	48 83 ec 10          	sub    $0x10,%rsp
    8cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc4:	48 89 c7             	mov    %rax,%rdi
    8cc7:	e8 24 00 00 00       	call   8cf0 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    8ccc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8ccf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd3:	48 8b 00             	mov    (%rax),%rax
    8cd6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8cda:	48 89 ce             	mov    %rcx,%rsi
    8cdd:	48 89 c7             	mov    %rax,%rdi
    8ce0:	e8 1d 0f 00 00       	call   9c02 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8ce5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8ce9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8ced:	90                   	nop
    8cee:	c9                   	leave
    8cef:	c3                   	ret

0000000000008cf0 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8cf0:	55                   	push   %rbp
    8cf1:	48 89 e5             	mov    %rsp,%rbp
    8cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cfc:	5d                   	pop    %rbp
    8cfd:	c3                   	ret

0000000000008cfe <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8cfe:	55                   	push   %rbp
    8cff:	48 89 e5             	mov    %rsp,%rbp
    8d02:	48 83 ec 10          	sub    $0x10,%rsp
    8d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8d0e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d16:	48 89 d6             	mov    %rdx,%rsi
    8d19:	48 89 c7             	mov    %rax,%rdi
    8d1c:	e8 0b 0f 00 00       	call   9c2c <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    8d21:	90                   	nop
    8d22:	c9                   	leave
    8d23:	c3                   	ret

0000000000008d24 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    8d24:	55                   	push   %rbp
    8d25:	48 89 e5             	mov    %rsp,%rbp
    8d28:	48 83 ec 20          	sub    $0x20,%rsp
    8d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8d38:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8d3d:	74 17                	je     8d56 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8d3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d4b:	48 89 ce             	mov    %rcx,%rsi
    8d4e:	48 89 c7             	mov    %rax,%rdi
    8d51:	e8 e5 0e 00 00       	call   9c3b <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    8d56:	90                   	nop
    8d57:	c9                   	leave
    8d58:	c3                   	ret
    8d59:	90                   	nop

0000000000008d5a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8d5a:	55                   	push   %rbp
    8d5b:	48 89 e5             	mov    %rsp,%rbp
    8d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d62:	90                   	nop
    8d63:	5d                   	pop    %rbp
    8d64:	c3                   	ret
    8d65:	90                   	nop

0000000000008d66 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8d66:	55                   	push   %rbp
    8d67:	48 89 e5             	mov    %rsp,%rbp
    8d6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d6e:	90                   	nop
    8d6f:	5d                   	pop    %rbp
    8d70:	c3                   	ret

0000000000008d71 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8d71:	55                   	push   %rbp
    8d72:	48 89 e5             	mov    %rsp,%rbp
    8d75:	53                   	push   %rbx
    8d76:	48 83 ec 28          	sub    $0x28,%rsp
    8d7a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8d7e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8d82:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8d86:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d8a:	48 89 d6             	mov    %rdx,%rsi
    8d8d:	48 89 c7             	mov    %rax,%rdi
    8d90:	e8 25 01 00 00       	call   8eba <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    8d95:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d99:	48 89 c7             	mov    %rax,%rdi
    8d9c:	e8 c8 0e 00 00       	call   9c69 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    8da1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8da5:	0f 92 c3             	setb   %bl
    8da8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8dac:	48 89 c7             	mov    %rax,%rdi
    8daf:	e8 ee f0 ff ff       	call   7ea2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8db4:	84 db                	test   %bl,%bl
    8db6:	74 0f                	je     8dc7 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8db8:	48 8d 05 c1 d2 00 00 	lea    0xd2c1(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8dbf:	48 89 c7             	mov    %rax,%rdi
    8dc2:	e8 a9 b3 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8dc7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8dcb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8dcf:	c9                   	leave
    8dd0:	c3                   	ret
    8dd1:	90                   	nop

0000000000008dd2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8dd2:	55                   	push   %rbp
    8dd3:	48 89 e5             	mov    %rsp,%rbp
    8dd6:	53                   	push   %rbx
    8dd7:	48 83 ec 28          	sub    $0x28,%rsp
    8ddb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ddf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8de3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8de7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8deb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8def:	48 89 d6             	mov    %rdx,%rsi
    8df2:	48 89 c7             	mov    %rax,%rdi
    8df5:	e8 b2 0e 00 00       	call   9cac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8dfa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8dfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e02:	48 89 d6             	mov    %rdx,%rsi
    8e05:	48 89 c7             	mov    %rax,%rdi
    8e08:	e8 d1 0e 00 00       	call   9cde <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    8e0d:	eb 1a                	jmp    8e29 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    8e0f:	48 89 c3             	mov    %rax,%rbx
    8e12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e16:	48 89 c7             	mov    %rax,%rdi
    8e19:	e8 c8 eb ff ff       	call   79e6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    8e1e:	48 89 d8             	mov    %rbx,%rax
    8e21:	48 89 c7             	mov    %rax,%rdi
    8e24:	e8 57 b8 ff ff       	call   4680 <_Unwind_Resume@plt>
    8e29:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e2d:	c9                   	leave
    8e2e:	c3                   	ret
    8e2f:	90                   	nop

0000000000008e30 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8e30:	55                   	push   %rbp
    8e31:	48 89 e5             	mov    %rsp,%rbp
    8e34:	48 83 ec 10          	sub    $0x10,%rsp
    8e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e44:	48 89 c7             	mov    %rax,%rdi
    8e47:	e8 24 00 00 00       	call   8e70 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8e4c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8e4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e53:	48 8b 00             	mov    (%rax),%rax
    8e56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e5a:	48 89 ce             	mov    %rcx,%rsi
    8e5d:	48 89 c7             	mov    %rax,%rdi
    8e60:	e8 cf 0e 00 00       	call   9d34 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8e65:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8e69:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8e6d:	90                   	nop
    8e6e:	c9                   	leave
    8e6f:	c3                   	ret

0000000000008e70 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8e70:	55                   	push   %rbp
    8e71:	48 89 e5             	mov    %rsp,%rbp
    8e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e7c:	5d                   	pop    %rbp
    8e7d:	c3                   	ret

0000000000008e7e <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8e7e:	55                   	push   %rbp
    8e7f:	48 89 e5             	mov    %rsp,%rbp
    8e82:	48 83 ec 20          	sub    $0x20,%rsp
    8e86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8e92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e9a:	48 89 d6             	mov    %rdx,%rsi
    8e9d:	48 89 c7             	mov    %rax,%rdi
    8ea0:	e8 b8 0e 00 00       	call   9d5d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    8ea5:	90                   	nop
    8ea6:	c9                   	leave
    8ea7:	c3                   	ret

0000000000008ea8 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8ea8:	55                   	push   %rbp
    8ea9:	48 89 e5             	mov    %rsp,%rbp
    8eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8eb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8eb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8eb8:	5d                   	pop    %rbp
    8eb9:	c3                   	ret

0000000000008eba <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8eba:	55                   	push   %rbp
    8ebb:	48 89 e5             	mov    %rsp,%rbp
    8ebe:	48 83 ec 10          	sub    $0x10,%rsp
    8ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ec6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8eca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed2:	48 89 d6             	mov    %rdx,%rsi
    8ed5:	48 89 c7             	mov    %rax,%rdi
    8ed8:	e8 a7 0e 00 00       	call   9d84 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    8edd:	90                   	nop
    8ede:	c9                   	leave
    8edf:	c3                   	ret

0000000000008ee0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    8ee0:	55                   	push   %rbp
    8ee1:	48 89 e5             	mov    %rsp,%rbp
    8ee4:	48 83 ec 20          	sub    $0x20,%rsp
    8ee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8eec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ef0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8ef4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8ef9:	74 17                	je     8f12 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8efb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f03:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f07:	48 89 ce             	mov    %rcx,%rsi
    8f0a:	48 89 c7             	mov    %rax,%rdi
    8f0d:	e8 81 0e 00 00       	call   9d93 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    8f12:	90                   	nop
    8f13:	c9                   	leave
    8f14:	c3                   	ret
    8f15:	90                   	nop

0000000000008f16 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8f16:	55                   	push   %rbp
    8f17:	48 89 e5             	mov    %rsp,%rbp
    8f1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f1e:	90                   	nop
    8f1f:	5d                   	pop    %rbp
    8f20:	c3                   	ret
    8f21:	90                   	nop

0000000000008f22 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8f22:	55                   	push   %rbp
    8f23:	48 89 e5             	mov    %rsp,%rbp
    8f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f2a:	90                   	nop
    8f2b:	5d                   	pop    %rbp
    8f2c:	c3                   	ret

0000000000008f2d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8f2d:	55                   	push   %rbp
    8f2e:	48 89 e5             	mov    %rsp,%rbp
    8f31:	53                   	push   %rbx
    8f32:	48 83 ec 28          	sub    $0x28,%rsp
    8f36:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8f3a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8f3e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8f42:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f46:	48 89 d6             	mov    %rdx,%rsi
    8f49:	48 89 c7             	mov    %rax,%rdi
    8f4c:	e8 25 01 00 00       	call   9076 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    8f51:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f55:	48 89 c7             	mov    %rax,%rdi
    8f58:	e8 64 0e 00 00       	call   9dc1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8f5d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8f61:	0f 92 c3             	setb   %bl
    8f64:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f68:	48 89 c7             	mov    %rax,%rdi
    8f6b:	e8 96 f0 ff ff       	call   8006 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8f70:	84 db                	test   %bl,%bl
    8f72:	74 0f                	je     8f83 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8f74:	48 8d 05 05 d1 00 00 	lea    0xd105(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8f7b:	48 89 c7             	mov    %rax,%rdi
    8f7e:	e8 ed b1 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8f83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8f87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f8b:	c9                   	leave
    8f8c:	c3                   	ret
    8f8d:	90                   	nop

0000000000008f8e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8f8e:	55                   	push   %rbp
    8f8f:	48 89 e5             	mov    %rsp,%rbp
    8f92:	53                   	push   %rbx
    8f93:	48 83 ec 28          	sub    $0x28,%rsp
    8f97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f9f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8fa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fa7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8fab:	48 89 d6             	mov    %rdx,%rsi
    8fae:	48 89 c7             	mov    %rax,%rdi
    8fb1:	e8 4e 0e 00 00       	call   9e04 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8fb6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8fba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fbe:	48 89 d6             	mov    %rdx,%rsi
    8fc1:	48 89 c7             	mov    %rax,%rdi
    8fc4:	e8 6d 0e 00 00       	call   9e36 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    8fc9:	eb 1a                	jmp    8fe5 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8fcb:	48 89 c3             	mov    %rax,%rbx
    8fce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fd2:	48 89 c7             	mov    %rax,%rdi
    8fd5:	e8 28 ea ff ff       	call   7a02 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    8fda:	48 89 d8             	mov    %rbx,%rax
    8fdd:	48 89 c7             	mov    %rax,%rdi
    8fe0:	e8 9b b6 ff ff       	call   4680 <_Unwind_Resume@plt>
    8fe5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8fe9:	c9                   	leave
    8fea:	c3                   	ret
    8feb:	90                   	nop

0000000000008fec <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8fec:	55                   	push   %rbp
    8fed:	48 89 e5             	mov    %rsp,%rbp
    8ff0:	48 83 ec 10          	sub    $0x10,%rsp
    8ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ff8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9000:	48 89 c7             	mov    %rax,%rdi
    9003:	e8 24 00 00 00       	call   902c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9008:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    900b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    900f:	48 8b 00             	mov    (%rax),%rax
    9012:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9016:	48 89 ce             	mov    %rcx,%rsi
    9019:	48 89 c7             	mov    %rax,%rdi
    901c:	e8 75 0e 00 00       	call   9e96 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9021:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9025:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9029:	90                   	nop
    902a:	c9                   	leave
    902b:	c3                   	ret

000000000000902c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    902c:	55                   	push   %rbp
    902d:	48 89 e5             	mov    %rsp,%rbp
    9030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9038:	5d                   	pop    %rbp
    9039:	c3                   	ret

000000000000903a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    903a:	55                   	push   %rbp
    903b:	48 89 e5             	mov    %rsp,%rbp
    903e:	48 83 ec 20          	sub    $0x20,%rsp
    9042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9046:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    904a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    904e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9056:	48 89 d6             	mov    %rdx,%rsi
    9059:	48 89 c7             	mov    %rax,%rdi
    905c:	e8 5e 0e 00 00       	call   9ebf <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    9061:	90                   	nop
    9062:	c9                   	leave
    9063:	c3                   	ret

0000000000009064 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9064:	55                   	push   %rbp
    9065:	48 89 e5             	mov    %rsp,%rbp
    9068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    906c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9070:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9074:	5d                   	pop    %rbp
    9075:	c3                   	ret

0000000000009076 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9076:	55                   	push   %rbp
    9077:	48 89 e5             	mov    %rsp,%rbp
    907a:	48 83 ec 10          	sub    $0x10,%rsp
    907e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9082:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9086:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    908a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    908e:	48 89 d6             	mov    %rdx,%rsi
    9091:	48 89 c7             	mov    %rax,%rdi
    9094:	e8 4d 0e 00 00       	call   9ee6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    9099:	90                   	nop
    909a:	c9                   	leave
    909b:	c3                   	ret

000000000000909c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    909c:	55                   	push   %rbp
    909d:	48 89 e5             	mov    %rsp,%rbp
    90a0:	48 83 ec 20          	sub    $0x20,%rsp
    90a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    90ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    90b0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    90b5:	74 17                	je     90ce <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    90b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    90c3:	48 89 ce             	mov    %rcx,%rsi
    90c6:	48 89 c7             	mov    %rax,%rdi
    90c9:	e8 27 0e 00 00       	call   9ef5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    90ce:	90                   	nop
    90cf:	c9                   	leave
    90d0:	c3                   	ret
    90d1:	90                   	nop

00000000000090d2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    90d2:	55                   	push   %rbp
    90d3:	48 89 e5             	mov    %rsp,%rbp
    90d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90da:	90                   	nop
    90db:	5d                   	pop    %rbp
    90dc:	c3                   	ret
    90dd:	90                   	nop

00000000000090de <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    90de:	55                   	push   %rbp
    90df:	48 89 e5             	mov    %rsp,%rbp
    90e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90e6:	90                   	nop
    90e7:	5d                   	pop    %rbp
    90e8:	c3                   	ret

00000000000090e9 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    90e9:	55                   	push   %rbp
    90ea:	48 89 e5             	mov    %rsp,%rbp
    90ed:	53                   	push   %rbx
    90ee:	48 83 ec 28          	sub    $0x28,%rsp
    90f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    90f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    90fa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    90fe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9102:	48 89 d6             	mov    %rdx,%rsi
    9105:	48 89 c7             	mov    %rax,%rdi
    9108:	e8 d7 01 00 00       	call   92e4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    910d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9111:	48 89 c7             	mov    %rax,%rdi
    9114:	e8 0a 0e 00 00       	call   9f23 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    9119:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    911d:	0f 92 c3             	setb   %bl
    9120:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9124:	48 89 c7             	mov    %rax,%rdi
    9127:	e8 76 f0 ff ff       	call   81a2 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    912c:	84 db                	test   %bl,%bl
    912e:	74 0f                	je     913f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    9130:	48 8d 05 49 cf 00 00 	lea    0xcf49(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9137:	48 89 c7             	mov    %rax,%rdi
    913a:	e8 31 b0 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    913f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9143:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9147:	c9                   	leave
    9148:	c3                   	ret
    9149:	90                   	nop

000000000000914a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    914a:	55                   	push   %rbp
    914b:	48 89 e5             	mov    %rsp,%rbp
    914e:	53                   	push   %rbx
    914f:	48 83 ec 28          	sub    $0x28,%rsp
    9153:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9157:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    915b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    915f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9163:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9167:	48 89 d6             	mov    %rdx,%rsi
    916a:	48 89 c7             	mov    %rax,%rdi
    916d:	e8 f4 0d 00 00       	call   9f66 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    9172:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    917a:	48 89 d6             	mov    %rdx,%rsi
    917d:	48 89 c7             	mov    %rax,%rdi
    9180:	e8 13 0e 00 00       	call   9f98 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    9185:	eb 1a                	jmp    91a1 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    9187:	48 89 c3             	mov    %rax,%rbx
    918a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    918e:	48 89 c7             	mov    %rax,%rdi
    9191:	e8 88 e8 ff ff       	call   7a1e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    9196:	48 89 d8             	mov    %rbx,%rax
    9199:	48 89 c7             	mov    %rax,%rdi
    919c:	e8 df b4 ff ff       	call   4680 <_Unwind_Resume@plt>
    91a1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91a5:	c9                   	leave
    91a6:	c3                   	ret
    91a7:	90                   	nop

00000000000091a8 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    91a8:	55                   	push   %rbp
    91a9:	48 89 e5             	mov    %rsp,%rbp
    91ac:	48 83 ec 10          	sub    $0x10,%rsp
    91b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    91b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91bc:	48 89 c7             	mov    %rax,%rdi
    91bf:	e8 24 00 00 00       	call   91e8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    91c4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    91c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91cb:	48 8b 00             	mov    (%rax),%rax
    91ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    91d2:	48 89 ce             	mov    %rcx,%rsi
    91d5:	48 89 c7             	mov    %rax,%rdi
    91d8:	e8 1c 0e 00 00       	call   9ff9 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    91dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    91e1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    91e5:	90                   	nop
    91e6:	c9                   	leave
    91e7:	c3                   	ret

00000000000091e8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    91e8:	55                   	push   %rbp
    91e9:	48 89 e5             	mov    %rsp,%rbp
    91ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    91f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91f4:	5d                   	pop    %rbp
    91f5:	c3                   	ret

00000000000091f6 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    91f6:	55                   	push   %rbp
    91f7:	48 89 e5             	mov    %rsp,%rbp
    91fa:	48 83 ec 20          	sub    $0x20,%rsp
    91fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9202:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9206:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    920a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    920e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9212:	48 89 d6             	mov    %rdx,%rsi
    9215:	48 89 c7             	mov    %rax,%rdi
    9218:	e8 05 0e 00 00       	call   a022 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    921d:	90                   	nop
    921e:	c9                   	leave
    921f:	c3                   	ret

0000000000009220 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    9220:	55                   	push   %rbp
    9221:	48 89 e5             	mov    %rsp,%rbp
    9224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9228:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    922c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9230:	48 8b 10             	mov    (%rax),%rdx
    9233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9237:	48 89 10             	mov    %rdx,(%rax)
    923a:	90                   	nop
    923b:	5d                   	pop    %rbp
    923c:	c3                   	ret
    923d:	90                   	nop

000000000000923e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    923e:	55                   	push   %rbp
    923f:	48 89 e5             	mov    %rsp,%rbp
    9242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    924a:	5d                   	pop    %rbp
    924b:	c3                   	ret

000000000000924c <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    924c:	55                   	push   %rbp
    924d:	48 89 e5             	mov    %rsp,%rbp
    9250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    9254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9258:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    925c:	5d                   	pop    %rbp
    925d:	c3                   	ret

000000000000925e <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    925e:	55                   	push   %rbp
    925f:	48 89 e5             	mov    %rsp,%rbp
    9262:	48 83 ec 10          	sub    $0x10,%rsp
    9266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    926a:	e8 9f b7 ff ff       	call   4a0e <_ZSt23__is_constant_evaluatedv>
    926f:	84 c0                	test   %al,%al
    9271:	74 1a                	je     928d <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9277:	48 89 c7             	mov    %rax,%rdi
    927a:	e8 cd ff ff ff       	call   924c <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    927f:	83 f0 01             	xor    $0x1,%eax
    9282:	84 c0                	test   %al,%al
    9284:	74 07                	je     928d <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9286:	b8 01 00 00 00       	mov    $0x1,%eax
    928b:	eb 05                	jmp    9292 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    928d:	b8 00 00 00 00       	mov    $0x0,%eax
    9292:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    9294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9298:	48 89 c7             	mov    %rax,%rdi
    929b:	e8 a8 0d 00 00       	call   a048 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    92a0:	c9                   	leave
    92a1:	c3                   	ret

00000000000092a2 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    92a2:	55                   	push   %rbp
    92a3:	48 89 e5             	mov    %rsp,%rbp
    92a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    92aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ae:	5d                   	pop    %rbp
    92af:	c3                   	ret

00000000000092b0 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    92b0:	55                   	push   %rbp
    92b1:	48 89 e5             	mov    %rsp,%rbp
    92b4:	53                   	push   %rbx
    92b5:	48 83 ec 18          	sub    $0x18,%rsp
    92b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    92c1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    92c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    92c9:	48 89 c7             	mov    %rax,%rdi
    92cc:	e8 d1 ff ff ff       	call   92a2 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    92d1:	48 89 c6             	mov    %rax,%rsi
    92d4:	48 89 df             	mov    %rbx,%rdi
    92d7:	e8 7a 0d 00 00       	call   a056 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    92dc:	90                   	nop
    92dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92e1:	c9                   	leave
    92e2:	c3                   	ret
    92e3:	90                   	nop

00000000000092e4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    92e4:	55                   	push   %rbp
    92e5:	48 89 e5             	mov    %rsp,%rbp
    92e8:	48 83 ec 10          	sub    $0x10,%rsp
    92ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    92f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    92f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92fc:	48 89 d6             	mov    %rdx,%rsi
    92ff:	48 89 c7             	mov    %rax,%rdi
    9302:	e8 95 0d 00 00       	call   a09c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    9307:	90                   	nop
    9308:	c9                   	leave
    9309:	c3                   	ret

000000000000930a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    930a:	55                   	push   %rbp
    930b:	48 89 e5             	mov    %rsp,%rbp
    930e:	48 83 ec 20          	sub    $0x20,%rsp
    9312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9316:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    931a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    931e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9323:	74 17                	je     933c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9329:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    932d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9331:	48 89 ce             	mov    %rcx,%rsi
    9334:	48 89 c7             	mov    %rax,%rdi
    9337:	e8 6f 0d 00 00       	call   a0ab <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    933c:	90                   	nop
    933d:	c9                   	leave
    933e:	c3                   	ret
    933f:	90                   	nop

0000000000009340 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9340:	55                   	push   %rbp
    9341:	48 89 e5             	mov    %rsp,%rbp
    9344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9348:	90                   	nop
    9349:	5d                   	pop    %rbp
    934a:	c3                   	ret
    934b:	90                   	nop

000000000000934c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    934c:	55                   	push   %rbp
    934d:	48 89 e5             	mov    %rsp,%rbp
    9350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9354:	90                   	nop
    9355:	5d                   	pop    %rbp
    9356:	c3                   	ret

0000000000009357 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9357:	55                   	push   %rbp
    9358:	48 89 e5             	mov    %rsp,%rbp
    935b:	53                   	push   %rbx
    935c:	48 83 ec 28          	sub    $0x28,%rsp
    9360:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9364:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9368:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    936c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9370:	48 89 d6             	mov    %rdx,%rsi
    9373:	48 89 c7             	mov    %rax,%rdi
    9376:	e8 25 01 00 00       	call   94a0 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    937b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    937f:	48 89 c7             	mov    %rax,%rdi
    9382:	e8 52 0d 00 00       	call   a0d9 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    9387:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    938b:	0f 92 c3             	setb   %bl
    938e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9392:	48 89 c7             	mov    %rax,%rdi
    9395:	e8 b8 f0 ff ff       	call   8452 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    939a:	84 db                	test   %bl,%bl
    939c:	74 0f                	je     93ad <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    939e:	48 8d 05 db cc 00 00 	lea    0xccdb(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    93a5:	48 89 c7             	mov    %rax,%rdi
    93a8:	e8 c3 ad ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    93ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    93b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    93b5:	c9                   	leave
    93b6:	c3                   	ret
    93b7:	90                   	nop

00000000000093b8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    93b8:	55                   	push   %rbp
    93b9:	48 89 e5             	mov    %rsp,%rbp
    93bc:	53                   	push   %rbx
    93bd:	48 83 ec 28          	sub    $0x28,%rsp
    93c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    93c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    93c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    93cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    93d5:	48 89 d6             	mov    %rdx,%rsi
    93d8:	48 89 c7             	mov    %rax,%rdi
    93db:	e8 3c 0d 00 00       	call   a11c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    93e0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    93e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93e8:	48 89 d6             	mov    %rdx,%rsi
    93eb:	48 89 c7             	mov    %rax,%rdi
    93ee:	e8 5b 0d 00 00       	call   a14e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    93f3:	eb 1a                	jmp    940f <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    93f5:	48 89 c3             	mov    %rax,%rbx
    93f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93fc:	48 89 c7             	mov    %rax,%rdi
    93ff:	e8 36 e6 ff ff       	call   7a3a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    9404:	48 89 d8             	mov    %rbx,%rax
    9407:	48 89 c7             	mov    %rax,%rdi
    940a:	e8 71 b2 ff ff       	call   4680 <_Unwind_Resume@plt>
    940f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9413:	c9                   	leave
    9414:	c3                   	ret
    9415:	90                   	nop

0000000000009416 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9416:	55                   	push   %rbp
    9417:	48 89 e5             	mov    %rsp,%rbp
    941a:	48 83 ec 10          	sub    $0x10,%rsp
    941e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9422:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    942a:	48 89 c7             	mov    %rax,%rdi
    942d:	e8 24 00 00 00       	call   9456 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9432:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9439:	48 8b 00             	mov    (%rax),%rax
    943c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9440:	48 89 ce             	mov    %rcx,%rsi
    9443:	48 89 c7             	mov    %rax,%rdi
    9446:	e8 59 0d 00 00       	call   a1a4 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    944b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    944f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9453:	90                   	nop
    9454:	c9                   	leave
    9455:	c3                   	ret

0000000000009456 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9456:	55                   	push   %rbp
    9457:	48 89 e5             	mov    %rsp,%rbp
    945a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    945e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9462:	5d                   	pop    %rbp
    9463:	c3                   	ret

0000000000009464 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9464:	55                   	push   %rbp
    9465:	48 89 e5             	mov    %rsp,%rbp
    9468:	48 83 ec 20          	sub    $0x20,%rsp
    946c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9470:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9474:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9478:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    947c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9480:	48 89 d6             	mov    %rdx,%rsi
    9483:	48 89 c7             	mov    %rax,%rdi
    9486:	e8 42 0d 00 00       	call   a1cd <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    948b:	90                   	nop
    948c:	c9                   	leave
    948d:	c3                   	ret

000000000000948e <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    948e:	55                   	push   %rbp
    948f:	48 89 e5             	mov    %rsp,%rbp
    9492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9496:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    949a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    949e:	5d                   	pop    %rbp
    949f:	c3                   	ret

00000000000094a0 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    94a0:	55                   	push   %rbp
    94a1:	48 89 e5             	mov    %rsp,%rbp
    94a4:	48 83 ec 10          	sub    $0x10,%rsp
    94a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    94b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b8:	48 89 d6             	mov    %rdx,%rsi
    94bb:	48 89 c7             	mov    %rax,%rdi
    94be:	e8 31 0d 00 00       	call   a1f4 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    94c3:	90                   	nop
    94c4:	c9                   	leave
    94c5:	c3                   	ret

00000000000094c6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    94c6:	55                   	push   %rbp
    94c7:	48 89 e5             	mov    %rsp,%rbp
    94ca:	48 83 ec 20          	sub    $0x20,%rsp
    94ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    94da:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    94df:	74 17                	je     94f8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    94e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94ed:	48 89 ce             	mov    %rcx,%rsi
    94f0:	48 89 c7             	mov    %rax,%rdi
    94f3:	e8 0b 0d 00 00       	call   a203 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    94f8:	90                   	nop
    94f9:	c9                   	leave
    94fa:	c3                   	ret
    94fb:	90                   	nop

00000000000094fc <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    94fc:	55                   	push   %rbp
    94fd:	48 89 e5             	mov    %rsp,%rbp
    9500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9504:	90                   	nop
    9505:	5d                   	pop    %rbp
    9506:	c3                   	ret
    9507:	90                   	nop

0000000000009508 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9508:	55                   	push   %rbp
    9509:	48 89 e5             	mov    %rsp,%rbp
    950c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9510:	90                   	nop
    9511:	5d                   	pop    %rbp
    9512:	c3                   	ret

0000000000009513 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9513:	55                   	push   %rbp
    9514:	48 89 e5             	mov    %rsp,%rbp
    9517:	53                   	push   %rbx
    9518:	48 83 ec 28          	sub    $0x28,%rsp
    951c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9520:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9524:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9528:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    952c:	48 89 d6             	mov    %rdx,%rsi
    952f:	48 89 c7             	mov    %rax,%rdi
    9532:	e8 25 01 00 00       	call   965c <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    9537:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    953b:	48 89 c7             	mov    %rax,%rdi
    953e:	e8 ee 0c 00 00       	call   a231 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    9543:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9547:	0f 92 c3             	setb   %bl
    954a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    954e:	48 89 c7             	mov    %rax,%rdi
    9551:	e8 60 f0 ff ff       	call   85b6 <_ZNSaI16VkPresentModeKHRED1Ev>
    9556:	84 db                	test   %bl,%bl
    9558:	74 0f                	je     9569 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    955a:	48 8d 05 1f cb 00 00 	lea    0xcb1f(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9561:	48 89 c7             	mov    %rax,%rdi
    9564:	e8 07 ac ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9569:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    956d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9571:	c9                   	leave
    9572:	c3                   	ret
    9573:	90                   	nop

0000000000009574 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9574:	55                   	push   %rbp
    9575:	48 89 e5             	mov    %rsp,%rbp
    9578:	53                   	push   %rbx
    9579:	48 83 ec 28          	sub    $0x28,%rsp
    957d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9581:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9585:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9589:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    958d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9591:	48 89 d6             	mov    %rdx,%rsi
    9594:	48 89 c7             	mov    %rax,%rdi
    9597:	e8 d8 0c 00 00       	call   a274 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    959c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95a4:	48 89 d6             	mov    %rdx,%rsi
    95a7:	48 89 c7             	mov    %rax,%rdi
    95aa:	e8 f7 0c 00 00       	call   a2a6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    95af:	eb 1a                	jmp    95cb <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    95b1:	48 89 c3             	mov    %rax,%rbx
    95b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95b8:	48 89 c7             	mov    %rax,%rdi
    95bb:	e8 96 e4 ff ff       	call   7a56 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    95c0:	48 89 d8             	mov    %rbx,%rax
    95c3:	48 89 c7             	mov    %rax,%rdi
    95c6:	e8 b5 b0 ff ff       	call   4680 <_Unwind_Resume@plt>
    95cb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95cf:	c9                   	leave
    95d0:	c3                   	ret
    95d1:	90                   	nop

00000000000095d2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    95d2:	55                   	push   %rbp
    95d3:	48 89 e5             	mov    %rsp,%rbp
    95d6:	48 83 ec 10          	sub    $0x10,%rsp
    95da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    95e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e6:	48 89 c7             	mov    %rax,%rdi
    95e9:	e8 24 00 00 00       	call   9612 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    95ee:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    95f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f5:	48 8b 00             	mov    (%rax),%rax
    95f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95fc:	48 89 ce             	mov    %rcx,%rsi
    95ff:	48 89 c7             	mov    %rax,%rdi
    9602:	e8 f5 0c 00 00       	call   a2fc <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9607:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    960b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    960f:	90                   	nop
    9610:	c9                   	leave
    9611:	c3                   	ret

0000000000009612 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9612:	55                   	push   %rbp
    9613:	48 89 e5             	mov    %rsp,%rbp
    9616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    961a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    961e:	5d                   	pop    %rbp
    961f:	c3                   	ret

0000000000009620 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9620:	55                   	push   %rbp
    9621:	48 89 e5             	mov    %rsp,%rbp
    9624:	48 83 ec 20          	sub    $0x20,%rsp
    9628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    962c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9630:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9634:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963c:	48 89 d6             	mov    %rdx,%rsi
    963f:	48 89 c7             	mov    %rax,%rdi
    9642:	e8 de 0c 00 00       	call   a325 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9647:	90                   	nop
    9648:	c9                   	leave
    9649:	c3                   	ret

000000000000964a <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    964a:	55                   	push   %rbp
    964b:	48 89 e5             	mov    %rsp,%rbp
    964e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9652:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9656:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    965a:	5d                   	pop    %rbp
    965b:	c3                   	ret

000000000000965c <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    965c:	55                   	push   %rbp
    965d:	48 89 e5             	mov    %rsp,%rbp
    9660:	48 83 ec 10          	sub    $0x10,%rsp
    9664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    966c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9674:	48 89 d6             	mov    %rdx,%rsi
    9677:	48 89 c7             	mov    %rax,%rdi
    967a:	e8 cd 0c 00 00       	call   a34c <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    967f:	90                   	nop
    9680:	c9                   	leave
    9681:	c3                   	ret

0000000000009682 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9682:	55                   	push   %rbp
    9683:	48 89 e5             	mov    %rsp,%rbp
    9686:	48 83 ec 20          	sub    $0x20,%rsp
    968a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    968e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9692:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9696:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    969b:	74 17                	je     96b4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    969d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96a5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    96a9:	48 89 ce             	mov    %rcx,%rsi
    96ac:	48 89 c7             	mov    %rax,%rdi
    96af:	e8 a7 0c 00 00       	call   a35b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    96b4:	90                   	nop
    96b5:	c9                   	leave
    96b6:	c3                   	ret
    96b7:	90                   	nop

00000000000096b8 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    96b8:	55                   	push   %rbp
    96b9:	48 89 e5             	mov    %rsp,%rbp
    96bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96c0:	90                   	nop
    96c1:	5d                   	pop    %rbp
    96c2:	c3                   	ret
    96c3:	90                   	nop

00000000000096c4 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    96c4:	55                   	push   %rbp
    96c5:	48 89 e5             	mov    %rsp,%rbp
    96c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96cc:	90                   	nop
    96cd:	5d                   	pop    %rbp
    96ce:	c3                   	ret

00000000000096cf <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    96cf:	55                   	push   %rbp
    96d0:	48 89 e5             	mov    %rsp,%rbp
    96d3:	53                   	push   %rbx
    96d4:	48 83 ec 28          	sub    $0x28,%rsp
    96d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    96dc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    96e0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    96e4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    96e8:	48 89 d6             	mov    %rdx,%rsi
    96eb:	48 89 c7             	mov    %rax,%rdi
    96ee:	e8 25 01 00 00       	call   9818 <_ZNSaIP9VkImage_TEC1ERKS1_>
    96f3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    96f7:	48 89 c7             	mov    %rax,%rdi
    96fa:	e8 8a 0c 00 00       	call   a389 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    96ff:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9703:	0f 92 c3             	setb   %bl
    9706:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    970a:	48 89 c7             	mov    %rax,%rdi
    970d:	e8 08 f0 ff ff       	call   871a <_ZNSaIP9VkImage_TED1Ev>
    9712:	84 db                	test   %bl,%bl
    9714:	74 0f                	je     9725 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9716:	48 8d 05 63 c9 00 00 	lea    0xc963(%rip),%rax        # 16080 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    971d:	48 89 c7             	mov    %rax,%rdi
    9720:	e8 4b aa ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9725:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9729:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    972d:	c9                   	leave
    972e:	c3                   	ret
    972f:	90                   	nop

0000000000009730 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9730:	55                   	push   %rbp
    9731:	48 89 e5             	mov    %rsp,%rbp
    9734:	53                   	push   %rbx
    9735:	48 83 ec 28          	sub    $0x28,%rsp
    9739:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    973d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9741:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9745:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9749:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    974d:	48 89 d6             	mov    %rdx,%rsi
    9750:	48 89 c7             	mov    %rax,%rdi
    9753:	e8 74 0c 00 00       	call   a3cc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9758:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    975c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9760:	48 89 d6             	mov    %rdx,%rsi
    9763:	48 89 c7             	mov    %rax,%rdi
    9766:	e8 93 0c 00 00       	call   a3fe <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    976b:	eb 1a                	jmp    9787 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    976d:	48 89 c3             	mov    %rax,%rbx
    9770:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9774:	48 89 c7             	mov    %rax,%rdi
    9777:	e8 f6 e2 ff ff       	call   7a72 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    977c:	48 89 d8             	mov    %rbx,%rax
    977f:	48 89 c7             	mov    %rax,%rdi
    9782:	e8 f9 ae ff ff       	call   4680 <_Unwind_Resume@plt>
    9787:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    978b:	c9                   	leave
    978c:	c3                   	ret
    978d:	90                   	nop

000000000000978e <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    978e:	55                   	push   %rbp
    978f:	48 89 e5             	mov    %rsp,%rbp
    9792:	48 83 ec 10          	sub    $0x10,%rsp
    9796:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    979a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    979e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a2:	48 89 c7             	mov    %rax,%rdi
    97a5:	e8 24 00 00 00       	call   97ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    97aa:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    97ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b1:	48 8b 00             	mov    (%rax),%rax
    97b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    97b8:	48 89 ce             	mov    %rcx,%rsi
    97bb:	48 89 c7             	mov    %rax,%rdi
    97be:	e8 91 0c 00 00       	call   a454 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    97c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    97c7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    97cb:	90                   	nop
    97cc:	c9                   	leave
    97cd:	c3                   	ret

00000000000097ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    97ce:	55                   	push   %rbp
    97cf:	48 89 e5             	mov    %rsp,%rbp
    97d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    97d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97da:	5d                   	pop    %rbp
    97db:	c3                   	ret

00000000000097dc <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    97dc:	55                   	push   %rbp
    97dd:	48 89 e5             	mov    %rsp,%rbp
    97e0:	48 83 ec 20          	sub    $0x20,%rsp
    97e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    97ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    97f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    97f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97f8:	48 89 d6             	mov    %rdx,%rsi
    97fb:	48 89 c7             	mov    %rax,%rdi
    97fe:	e8 7a 0c 00 00       	call   a47d <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    9803:	90                   	nop
    9804:	c9                   	leave
    9805:	c3                   	ret

0000000000009806 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9806:	55                   	push   %rbp
    9807:	48 89 e5             	mov    %rsp,%rbp
    980a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    980e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9812:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9816:	5d                   	pop    %rbp
    9817:	c3                   	ret

0000000000009818 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9818:	55                   	push   %rbp
    9819:	48 89 e5             	mov    %rsp,%rbp
    981c:	48 83 ec 10          	sub    $0x10,%rsp
    9820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9824:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9828:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    982c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9830:	48 89 d6             	mov    %rdx,%rsi
    9833:	48 89 c7             	mov    %rax,%rdi
    9836:	e8 69 0c 00 00       	call   a4a4 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    983b:	90                   	nop
    983c:	c9                   	leave
    983d:	c3                   	ret

000000000000983e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    983e:	55                   	push   %rbp
    983f:	48 89 e5             	mov    %rsp,%rbp
    9842:	48 83 ec 20          	sub    $0x20,%rsp
    9846:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    984a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    984e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9852:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9857:	74 17                	je     9870 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    985d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9861:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9865:	48 89 ce             	mov    %rcx,%rsi
    9868:	48 89 c7             	mov    %rax,%rdi
    986b:	e8 43 0c 00 00       	call   a4b3 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9870:	90                   	nop
    9871:	c9                   	leave
    9872:	c3                   	ret

0000000000009873 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9873:	55                   	push   %rbp
    9874:	48 89 e5             	mov    %rsp,%rbp
    9877:	48 83 ec 20          	sub    $0x20,%rsp
    987b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    987f:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9886:	03 3f 00 
    9889:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    988d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9891:	48 89 c7             	mov    %rax,%rdi
    9894:	e8 48 0c 00 00       	call   a4e1 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9899:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    989d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    98a1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    98a5:	48 89 d6             	mov    %rdx,%rsi
    98a8:	48 89 c7             	mov    %rax,%rdi
    98ab:	e8 0d ba ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    98b0:	48 8b 00             	mov    (%rax),%rax
      }
    98b3:	c9                   	leave
    98b4:	c3                   	ret
    98b5:	90                   	nop

00000000000098b6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    98b6:	55                   	push   %rbp
    98b7:	48 89 e5             	mov    %rsp,%rbp
    98ba:	48 83 ec 10          	sub    $0x10,%rsp
    98be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    98c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    98ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98ce:	48 89 d6             	mov    %rdx,%rsi
    98d1:	48 89 c7             	mov    %rax,%rdi
    98d4:	e8 e9 f0 ff ff       	call   89c2 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    98d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98dd:	48 89 c7             	mov    %rax,%rdi
    98e0:	e8 17 0c 00 00       	call   a4fc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    98e5:	90                   	nop
    98e6:	c9                   	leave
    98e7:	c3                   	ret

00000000000098e8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    98e8:	55                   	push   %rbp
    98e9:	48 89 e5             	mov    %rsp,%rbp
    98ec:	48 83 ec 10          	sub    $0x10,%rsp
    98f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    98f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    98fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9900:	48 89 d6             	mov    %rdx,%rsi
    9903:	48 89 c7             	mov    %rax,%rdi
    9906:	e8 1f 0c 00 00       	call   a52a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    990b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    990f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9916:	48 8b 10             	mov    (%rax),%rdx
    9919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    991d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9925:	48 8b 08             	mov    (%rax),%rcx
    9928:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    992c:	48 89 d0             	mov    %rdx,%rax
    992f:	48 c1 e0 06          	shl    $0x6,%rax
    9933:	48 01 d0             	add    %rdx,%rax
    9936:	48 c1 e0 03          	shl    $0x3,%rax
    993a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    993e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9942:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9946:	90                   	nop
    9947:	c9                   	leave
    9948:	c3                   	ret

0000000000009949 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9949:	55                   	push   %rbp
    994a:	48 89 e5             	mov    %rsp,%rbp
    994d:	48 83 ec 20          	sub    $0x20,%rsp
    9951:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9955:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9959:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    995d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9965:	48 89 d6             	mov    %rdx,%rsi
    9968:	48 89 c7             	mov    %rax,%rdi
    996b:	e8 ed 0b 00 00       	call   a55d <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9970:	c9                   	leave
    9971:	c3                   	ret

0000000000009972 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9972:	55                   	push   %rbp
    9973:	48 89 e5             	mov    %rsp,%rbp
    9976:	48 83 ec 10          	sub    $0x10,%rsp
    997a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    997e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9982:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    998a:	48 89 d6             	mov    %rdx,%rsi
    998d:	48 89 c7             	mov    %rax,%rdi
    9990:	e8 f1 0b 00 00       	call   a586 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9995:	90                   	nop
    9996:	c9                   	leave
    9997:	c3                   	ret

0000000000009998 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9998:	55                   	push   %rbp
    9999:	48 89 e5             	mov    %rsp,%rbp
    999c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    99a4:	90                   	nop
    99a5:	5d                   	pop    %rbp
    99a6:	c3                   	ret

00000000000099a7 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    99a7:	55                   	push   %rbp
    99a8:	48 89 e5             	mov    %rsp,%rbp
    99ab:	48 83 ec 20          	sub    $0x20,%rsp
    99af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    99b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    99bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    99bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    99c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99c7:	48 89 ce             	mov    %rcx,%rsi
    99ca:	48 89 c7             	mov    %rax,%rdi
    99cd:	e8 c4 0b 00 00       	call   a596 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    99d2:	90                   	nop
    99d3:	c9                   	leave
    99d4:	c3                   	ret

00000000000099d5 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    99d5:	55                   	push   %rbp
    99d6:	48 89 e5             	mov    %rsp,%rbp
    99d9:	48 83 ec 20          	sub    $0x20,%rsp
    99dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    99e1:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    99e8:	07 7e 00 
    99eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    99ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99f3:	48 89 c7             	mov    %rax,%rdi
    99f6:	e8 d5 0b 00 00       	call   a5d0 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    99fb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    99ff:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9a03:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a07:	48 89 d6             	mov    %rdx,%rsi
    9a0a:	48 89 c7             	mov    %rax,%rdi
    9a0d:	e8 ab b8 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    9a12:	48 8b 00             	mov    (%rax),%rax
      }
    9a15:	c9                   	leave
    9a16:	c3                   	ret
    9a17:	90                   	nop

0000000000009a18 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9a18:	55                   	push   %rbp
    9a19:	48 89 e5             	mov    %rsp,%rbp
    9a1c:	48 83 ec 10          	sub    $0x10,%rsp
    9a20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9a28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a30:	48 89 d6             	mov    %rdx,%rsi
    9a33:	48 89 c7             	mov    %rax,%rdi
    9a36:	e8 43 f1 ff ff       	call   8b7e <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a3f:	48 89 c7             	mov    %rax,%rdi
    9a42:	e8 a3 0b 00 00       	call   a5ea <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9a47:	90                   	nop
    9a48:	c9                   	leave
    9a49:	c3                   	ret

0000000000009a4a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9a4a:	55                   	push   %rbp
    9a4b:	48 89 e5             	mov    %rsp,%rbp
    9a4e:	48 83 ec 10          	sub    $0x10,%rsp
    9a52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9a5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a62:	48 89 d6             	mov    %rdx,%rsi
    9a65:	48 89 c7             	mov    %rax,%rdi
    9a68:	e8 ab 0b 00 00       	call   a618 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    9a6d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a71:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a78:	48 8b 10             	mov    (%rax),%rdx
    9a7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a7f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a87:	48 8b 08             	mov    (%rax),%rcx
    9a8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a8e:	48 89 d0             	mov    %rdx,%rax
    9a91:	48 c1 e0 06          	shl    $0x6,%rax
    9a95:	48 01 d0             	add    %rdx,%rax
    9a98:	48 c1 e0 02          	shl    $0x2,%rax
    9a9c:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa4:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9aa8:	90                   	nop
    9aa9:	c9                   	leave
    9aaa:	c3                   	ret

0000000000009aab <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9aab:	55                   	push   %rbp
    9aac:	48 89 e5             	mov    %rsp,%rbp
    9aaf:	48 83 ec 20          	sub    $0x20,%rsp
    9ab3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ab7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9abb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9abf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac7:	48 89 d6             	mov    %rdx,%rsi
    9aca:	48 89 c7             	mov    %rax,%rdi
    9acd:	e8 79 0b 00 00       	call   a64b <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    9ad2:	c9                   	leave
    9ad3:	c3                   	ret

0000000000009ad4 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9ad4:	55                   	push   %rbp
    9ad5:	48 89 e5             	mov    %rsp,%rbp
    9ad8:	48 83 ec 10          	sub    $0x10,%rsp
    9adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ae0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9ae4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aec:	48 89 d6             	mov    %rdx,%rsi
    9aef:	48 89 c7             	mov    %rax,%rdi
    9af2:	e8 7d 0b 00 00       	call   a674 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    9af7:	90                   	nop
    9af8:	c9                   	leave
    9af9:	c3                   	ret

0000000000009afa <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    9afa:	55                   	push   %rbp
    9afb:	48 89 e5             	mov    %rsp,%rbp
    9afe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b06:	90                   	nop
    9b07:	5d                   	pop    %rbp
    9b08:	c3                   	ret

0000000000009b09 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9b09:	55                   	push   %rbp
    9b0a:	48 89 e5             	mov    %rsp,%rbp
    9b0d:	48 83 ec 20          	sub    $0x20,%rsp
    9b11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b19:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9b1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b21:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b29:	48 89 ce             	mov    %rcx,%rsi
    9b2c:	48 89 c7             	mov    %rax,%rdi
    9b2f:	e8 50 0b 00 00       	call   a684 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    9b34:	90                   	nop
    9b35:	c9                   	leave
    9b36:	c3                   	ret

0000000000009b37 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9b37:	55                   	push   %rbp
    9b38:	48 89 e5             	mov    %rsp,%rbp
    9b3b:	48 83 ec 20          	sub    $0x20,%rsp
    9b3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9b43:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9b4a:	ff ff 0f 
    9b4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9b51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b55:	48 89 c7             	mov    %rax,%rdi
    9b58:	e8 61 0b 00 00       	call   a6be <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    9b5d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9b61:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9b65:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9b69:	48 89 d6             	mov    %rdx,%rsi
    9b6c:	48 89 c7             	mov    %rax,%rdi
    9b6f:	e8 49 b7 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    9b74:	48 8b 00             	mov    (%rax),%rax
      }
    9b77:	c9                   	leave
    9b78:	c3                   	ret
    9b79:	90                   	nop

0000000000009b7a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9b7a:	55                   	push   %rbp
    9b7b:	48 89 e5             	mov    %rsp,%rbp
    9b7e:	48 83 ec 10          	sub    $0x10,%rsp
    9b82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9b8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b92:	48 89 d6             	mov    %rdx,%rsi
    9b95:	48 89 c7             	mov    %rax,%rdi
    9b98:	e8 61 f1 ff ff       	call   8cfe <_ZNSaIPKcEC1ERKS1_>
    9b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ba1:	48 89 c7             	mov    %rax,%rdi
    9ba4:	e8 2f 0b 00 00       	call   a6d8 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9ba9:	90                   	nop
    9baa:	c9                   	leave
    9bab:	c3                   	ret

0000000000009bac <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9bac:	55                   	push   %rbp
    9bad:	48 89 e5             	mov    %rsp,%rbp
    9bb0:	48 83 ec 10          	sub    $0x10,%rsp
    9bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9bbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc4:	48 89 d6             	mov    %rdx,%rsi
    9bc7:	48 89 c7             	mov    %rax,%rdi
    9bca:	e8 37 0b 00 00       	call   a706 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9bcf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9bd3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bda:	48 8b 10             	mov    (%rax),%rdx
    9bdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be9:	48 8b 00             	mov    (%rax),%rax
    9bec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bf0:	48 c1 e2 03          	shl    $0x3,%rdx
    9bf4:	48 01 c2             	add    %rax,%rdx
    9bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bfb:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9bff:	90                   	nop
    9c00:	c9                   	leave
    9c01:	c3                   	ret

0000000000009c02 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9c02:	55                   	push   %rbp
    9c03:	48 89 e5             	mov    %rsp,%rbp
    9c06:	48 83 ec 20          	sub    $0x20,%rsp
    9c0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9c16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c1e:	48 89 d6             	mov    %rdx,%rsi
    9c21:	48 89 c7             	mov    %rax,%rdi
    9c24:	e8 10 0b 00 00       	call   a739 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9c29:	c9                   	leave
    9c2a:	c3                   	ret
    9c2b:	90                   	nop

0000000000009c2c <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    9c2c:	55                   	push   %rbp
    9c2d:	48 89 e5             	mov    %rsp,%rbp
    9c30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c38:	90                   	nop
    9c39:	5d                   	pop    %rbp
    9c3a:	c3                   	ret

0000000000009c3b <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9c3b:	55                   	push   %rbp
    9c3c:	48 89 e5             	mov    %rsp,%rbp
    9c3f:	48 83 ec 20          	sub    $0x20,%rsp
    9c43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c4b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9c4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c5b:	48 89 ce             	mov    %rcx,%rsi
    9c5e:	48 89 c7             	mov    %rax,%rdi
    9c61:	e8 fc 0a 00 00       	call   a762 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    9c66:	90                   	nop
    9c67:	c9                   	leave
    9c68:	c3                   	ret

0000000000009c69 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9c69:	55                   	push   %rbp
    9c6a:	48 89 e5             	mov    %rsp,%rbp
    9c6d:	48 83 ec 20          	sub    $0x20,%rsp
    9c71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9c75:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9c7c:	ff ff 0f 
    9c7f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9c83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c87:	48 89 c7             	mov    %rax,%rdi
    9c8a:	e8 04 0b 00 00       	call   a793 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    9c8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9c93:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9c97:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9c9b:	48 89 d6             	mov    %rdx,%rsi
    9c9e:	48 89 c7             	mov    %rax,%rdi
    9ca1:	e8 17 b6 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    9ca6:	48 8b 00             	mov    (%rax),%rax
      }
    9ca9:	c9                   	leave
    9caa:	c3                   	ret
    9cab:	90                   	nop

0000000000009cac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9cac:	55                   	push   %rbp
    9cad:	48 89 e5             	mov    %rsp,%rbp
    9cb0:	48 83 ec 10          	sub    $0x10,%rsp
    9cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9cbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cc4:	48 89 d6             	mov    %rdx,%rsi
    9cc7:	48 89 c7             	mov    %rax,%rdi
    9cca:	e8 eb f1 ff ff       	call   8eba <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9ccf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd3:	48 89 c7             	mov    %rax,%rdi
    9cd6:	e8 d3 0a 00 00       	call   a7ae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9cdb:	90                   	nop
    9cdc:	c9                   	leave
    9cdd:	c3                   	ret

0000000000009cde <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9cde:	55                   	push   %rbp
    9cdf:	48 89 e5             	mov    %rsp,%rbp
    9ce2:	48 83 ec 10          	sub    $0x10,%rsp
    9ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9cee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf6:	48 89 d6             	mov    %rdx,%rsi
    9cf9:	48 89 c7             	mov    %rax,%rdi
    9cfc:	e8 db 0a 00 00       	call   a7dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    9d01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d05:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d0c:	48 8b 10             	mov    (%rax),%rdx
    9d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d13:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d1b:	48 8b 00             	mov    (%rax),%rax
    9d1e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d22:	48 c1 e2 03          	shl    $0x3,%rdx
    9d26:	48 01 c2             	add    %rax,%rdx
    9d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d2d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9d31:	90                   	nop
    9d32:	c9                   	leave
    9d33:	c3                   	ret

0000000000009d34 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9d34:	55                   	push   %rbp
    9d35:	48 89 e5             	mov    %rsp,%rbp
    9d38:	48 83 ec 20          	sub    $0x20,%rsp
    9d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9d48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d50:	48 89 d6             	mov    %rdx,%rsi
    9d53:	48 89 c7             	mov    %rax,%rdi
    9d56:	e8 b4 0a 00 00       	call   a80f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    9d5b:	c9                   	leave
    9d5c:	c3                   	ret

0000000000009d5d <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9d5d:	55                   	push   %rbp
    9d5e:	48 89 e5             	mov    %rsp,%rbp
    9d61:	48 83 ec 10          	sub    $0x10,%rsp
    9d65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9d6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d75:	48 89 d6             	mov    %rdx,%rsi
    9d78:	48 89 c7             	mov    %rax,%rdi
    9d7b:	e8 b8 0a 00 00       	call   a838 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    9d80:	90                   	nop
    9d81:	c9                   	leave
    9d82:	c3                   	ret
    9d83:	90                   	nop

0000000000009d84 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    9d84:	55                   	push   %rbp
    9d85:	48 89 e5             	mov    %rsp,%rbp
    9d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d90:	90                   	nop
    9d91:	5d                   	pop    %rbp
    9d92:	c3                   	ret

0000000000009d93 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9d93:	55                   	push   %rbp
    9d94:	48 89 e5             	mov    %rsp,%rbp
    9d97:	48 83 ec 20          	sub    $0x20,%rsp
    9d9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9da3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9da7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9dab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db3:	48 89 ce             	mov    %rcx,%rsi
    9db6:	48 89 c7             	mov    %rax,%rdi
    9db9:	e8 8a 0a 00 00       	call   a848 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    9dbe:	90                   	nop
    9dbf:	c9                   	leave
    9dc0:	c3                   	ret

0000000000009dc1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9dc1:	55                   	push   %rbp
    9dc2:	48 89 e5             	mov    %rsp,%rbp
    9dc5:	48 83 ec 20          	sub    $0x20,%rsp
    9dc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9dcd:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    9dd4:	55 55 05 
    9dd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ddf:	48 89 c7             	mov    %rax,%rdi
    9de2:	e8 92 0a 00 00       	call   a879 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    9de7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9deb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9def:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9df3:	48 89 d6             	mov    %rdx,%rsi
    9df6:	48 89 c7             	mov    %rax,%rdi
    9df9:	e8 bf b4 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    9dfe:	48 8b 00             	mov    (%rax),%rax
      }
    9e01:	c9                   	leave
    9e02:	c3                   	ret
    9e03:	90                   	nop

0000000000009e04 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9e04:	55                   	push   %rbp
    9e05:	48 89 e5             	mov    %rsp,%rbp
    9e08:	48 83 ec 10          	sub    $0x10,%rsp
    9e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9e14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1c:	48 89 d6             	mov    %rdx,%rsi
    9e1f:	48 89 c7             	mov    %rax,%rdi
    9e22:	e8 4f f2 ff ff       	call   9076 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    9e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e2b:	48 89 c7             	mov    %rax,%rdi
    9e2e:	e8 61 0a 00 00       	call   a894 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9e33:	90                   	nop
    9e34:	c9                   	leave
    9e35:	c3                   	ret

0000000000009e36 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9e36:	55                   	push   %rbp
    9e37:	48 89 e5             	mov    %rsp,%rbp
    9e3a:	48 83 ec 10          	sub    $0x10,%rsp
    9e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9e46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e4e:	48 89 d6             	mov    %rdx,%rsi
    9e51:	48 89 c7             	mov    %rax,%rdi
    9e54:	e8 69 0a 00 00       	call   a8c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    9e59:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e5d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e64:	48 8b 10             	mov    (%rax),%rdx
    9e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e6b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9e6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e73:	48 8b 08             	mov    (%rax),%rcx
    9e76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e7a:	48 89 d0             	mov    %rdx,%rax
    9e7d:	48 01 c0             	add    %rax,%rax
    9e80:	48 01 d0             	add    %rdx,%rax
    9e83:	48 c1 e0 03          	shl    $0x3,%rax
    9e87:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9e8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e8f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9e93:	90                   	nop
    9e94:	c9                   	leave
    9e95:	c3                   	ret

0000000000009e96 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9e96:	55                   	push   %rbp
    9e97:	48 89 e5             	mov    %rsp,%rbp
    9e9a:	48 83 ec 20          	sub    $0x20,%rsp
    9e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ea2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ea6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9eaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eb2:	48 89 d6             	mov    %rdx,%rsi
    9eb5:	48 89 c7             	mov    %rax,%rdi
    9eb8:	e8 38 0a 00 00       	call   a8f5 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    9ebd:	c9                   	leave
    9ebe:	c3                   	ret

0000000000009ebf <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9ebf:	55                   	push   %rbp
    9ec0:	48 89 e5             	mov    %rsp,%rbp
    9ec3:	48 83 ec 10          	sub    $0x10,%rsp
    9ec7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ecb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9ecf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ed7:	48 89 d6             	mov    %rdx,%rsi
    9eda:	48 89 c7             	mov    %rax,%rdi
    9edd:	e8 3c 0a 00 00       	call   a91e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    9ee2:	90                   	nop
    9ee3:	c9                   	leave
    9ee4:	c3                   	ret
    9ee5:	90                   	nop

0000000000009ee6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    9ee6:	55                   	push   %rbp
    9ee7:	48 89 e5             	mov    %rsp,%rbp
    9eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ef2:	90                   	nop
    9ef3:	5d                   	pop    %rbp
    9ef4:	c3                   	ret

0000000000009ef5 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9ef5:	55                   	push   %rbp
    9ef6:	48 89 e5             	mov    %rsp,%rbp
    9ef9:	48 83 ec 20          	sub    $0x20,%rsp
    9efd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f01:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f05:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9f09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f15:	48 89 ce             	mov    %rcx,%rsi
    9f18:	48 89 c7             	mov    %rax,%rdi
    9f1b:	e8 0e 0a 00 00       	call   a92e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    9f20:	90                   	nop
    9f21:	c9                   	leave
    9f22:	c3                   	ret

0000000000009f23 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9f23:	55                   	push   %rbp
    9f24:	48 89 e5             	mov    %rsp,%rbp
    9f27:	48 83 ec 20          	sub    $0x20,%rsp
    9f2b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9f2f:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    9f36:	49 92 04 
    9f39:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f41:	48 89 c7             	mov    %rax,%rdi
    9f44:	e8 1e 0a 00 00       	call   a967 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    9f49:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9f4d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9f51:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f55:	48 89 d6             	mov    %rdx,%rsi
    9f58:	48 89 c7             	mov    %rax,%rdi
    9f5b:	e8 5d b3 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    9f60:	48 8b 00             	mov    (%rax),%rax
      }
    9f63:	c9                   	leave
    9f64:	c3                   	ret
    9f65:	90                   	nop

0000000000009f66 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9f66:	55                   	push   %rbp
    9f67:	48 89 e5             	mov    %rsp,%rbp
    9f6a:	48 83 ec 10          	sub    $0x10,%rsp
    9f6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9f76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f7e:	48 89 d6             	mov    %rdx,%rsi
    9f81:	48 89 c7             	mov    %rax,%rdi
    9f84:	e8 5b f3 ff ff       	call   92e4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    9f89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f8d:	48 89 c7             	mov    %rax,%rdi
    9f90:	e8 ed 09 00 00       	call   a982 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    9f95:	90                   	nop
    9f96:	c9                   	leave
    9f97:	c3                   	ret

0000000000009f98 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9f98:	55                   	push   %rbp
    9f99:	48 89 e5             	mov    %rsp,%rbp
    9f9c:	48 83 ec 10          	sub    $0x10,%rsp
    9fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9fa8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fb0:	48 89 d6             	mov    %rdx,%rsi
    9fb3:	48 89 c7             	mov    %rax,%rdi
    9fb6:	e8 f5 09 00 00       	call   a9b0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    9fbb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fbf:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9fc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc6:	48 8b 10             	mov    (%rax),%rdx
    9fc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fcd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd5:	48 8b 08             	mov    (%rax),%rcx
    9fd8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fdc:	48 89 d0             	mov    %rdx,%rax
    9fdf:	48 c1 e0 03          	shl    $0x3,%rax
    9fe3:	48 29 d0             	sub    %rdx,%rax
    9fe6:	48 c1 e0 02          	shl    $0x2,%rax
    9fea:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ff2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ff6:	90                   	nop
    9ff7:	c9                   	leave
    9ff8:	c3                   	ret

0000000000009ff9 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9ff9:	55                   	push   %rbp
    9ffa:	48 89 e5             	mov    %rsp,%rbp
    9ffd:	48 83 ec 20          	sub    $0x20,%rsp
    a001:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a005:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a009:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a00d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a015:	48 89 d6             	mov    %rdx,%rsi
    a018:	48 89 c7             	mov    %rax,%rdi
    a01b:	e8 c3 09 00 00       	call   a9e3 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a020:	c9                   	leave
    a021:	c3                   	ret

000000000000a022 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a022:	55                   	push   %rbp
    a023:	48 89 e5             	mov    %rsp,%rbp
    a026:	48 83 ec 10          	sub    $0x10,%rsp
    a02a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a02e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a032:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a03a:	48 89 d6             	mov    %rdx,%rsi
    a03d:	48 89 c7             	mov    %rax,%rdi
    a040:	e8 c7 09 00 00       	call   aa0c <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a045:	90                   	nop
    a046:	c9                   	leave
    a047:	c3                   	ret

000000000000a048 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a048:	55                   	push   %rbp
    a049:	48 89 e5             	mov    %rsp,%rbp
    a04c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a054:	5d                   	pop    %rbp
    a055:	c3                   	ret

000000000000a056 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a056:	55                   	push   %rbp
    a057:	48 89 e5             	mov    %rsp,%rbp
    a05a:	53                   	push   %rbx
    a05b:	48 83 ec 18          	sub    $0x18,%rsp
    a05f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a063:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a067:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a06b:	48 89 c7             	mov    %rax,%rdi
    a06e:	e8 2f f2 ff ff       	call   92a2 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a073:	48 89 c3             	mov    %rax,%rbx
    a076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a07a:	48 89 c7             	mov    %rax,%rdi
    a07d:	e8 99 09 00 00       	call   aa1b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a082:	48 89 de             	mov    %rbx,%rsi
    a085:	48 89 c7             	mov    %rax,%rdi
    a088:	e8 9c 09 00 00       	call   aa29 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a08d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a091:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a095:	90                   	nop
    a096:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a09a:	c9                   	leave
    a09b:	c3                   	ret

000000000000a09c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a09c:	55                   	push   %rbp
    a09d:	48 89 e5             	mov    %rsp,%rbp
    a0a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0a8:	90                   	nop
    a0a9:	5d                   	pop    %rbp
    a0aa:	c3                   	ret

000000000000a0ab <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a0ab:	55                   	push   %rbp
    a0ac:	48 89 e5             	mov    %rsp,%rbp
    a0af:	48 83 ec 20          	sub    $0x20,%rsp
    a0b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0bb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a0bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a0c3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a0c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0cb:	48 89 ce             	mov    %rcx,%rsi
    a0ce:	48 89 c7             	mov    %rax,%rdi
    a0d1:	e8 a4 09 00 00       	call   aa7a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a0d6:	90                   	nop
    a0d7:	c9                   	leave
    a0d8:	c3                   	ret

000000000000a0d9 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a0d9:	55                   	push   %rbp
    a0da:	48 89 e5             	mov    %rsp,%rbp
    a0dd:	48 83 ec 20          	sub    $0x20,%rsp
    a0e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a0e5:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a0ec:	ff ff 0f 
    a0ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a0f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0f7:	48 89 c7             	mov    %rax,%rdi
    a0fa:	e8 b5 09 00 00       	call   aab4 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a0ff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a103:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a107:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a10b:	48 89 d6             	mov    %rdx,%rsi
    a10e:	48 89 c7             	mov    %rax,%rdi
    a111:	e8 a7 b1 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    a116:	48 8b 00             	mov    (%rax),%rax
      }
    a119:	c9                   	leave
    a11a:	c3                   	ret
    a11b:	90                   	nop

000000000000a11c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a11c:	55                   	push   %rbp
    a11d:	48 89 e5             	mov    %rsp,%rbp
    a120:	48 83 ec 10          	sub    $0x10,%rsp
    a124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a128:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a12c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a134:	48 89 d6             	mov    %rdx,%rsi
    a137:	48 89 c7             	mov    %rax,%rdi
    a13a:	e8 61 f3 ff ff       	call   94a0 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a13f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a143:	48 89 c7             	mov    %rax,%rdi
    a146:	e8 83 09 00 00       	call   aace <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a14b:	90                   	nop
    a14c:	c9                   	leave
    a14d:	c3                   	ret

000000000000a14e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a14e:	55                   	push   %rbp
    a14f:	48 89 e5             	mov    %rsp,%rbp
    a152:	48 83 ec 10          	sub    $0x10,%rsp
    a156:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a15a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a15e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a166:	48 89 d6             	mov    %rdx,%rsi
    a169:	48 89 c7             	mov    %rax,%rdi
    a16c:	e8 8b 09 00 00       	call   aafc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a171:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a175:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a17c:	48 8b 10             	mov    (%rax),%rdx
    a17f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a183:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18b:	48 8b 00             	mov    (%rax),%rax
    a18e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a192:	48 c1 e2 03          	shl    $0x3,%rdx
    a196:	48 01 c2             	add    %rax,%rdx
    a199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a19d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a1a1:	90                   	nop
    a1a2:	c9                   	leave
    a1a3:	c3                   	ret

000000000000a1a4 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a1a4:	55                   	push   %rbp
    a1a5:	48 89 e5             	mov    %rsp,%rbp
    a1a8:	48 83 ec 20          	sub    $0x20,%rsp
    a1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a1b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1c0:	48 89 d6             	mov    %rdx,%rsi
    a1c3:	48 89 c7             	mov    %rax,%rdi
    a1c6:	e8 64 09 00 00       	call   ab2f <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a1cb:	c9                   	leave
    a1cc:	c3                   	ret

000000000000a1cd <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a1cd:	55                   	push   %rbp
    a1ce:	48 89 e5             	mov    %rsp,%rbp
    a1d1:	48 83 ec 10          	sub    $0x10,%rsp
    a1d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a1dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1e5:	48 89 d6             	mov    %rdx,%rsi
    a1e8:	48 89 c7             	mov    %rax,%rdi
    a1eb:	e8 68 09 00 00       	call   ab58 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a1f0:	90                   	nop
    a1f1:	c9                   	leave
    a1f2:	c3                   	ret
    a1f3:	90                   	nop

000000000000a1f4 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a1f4:	55                   	push   %rbp
    a1f5:	48 89 e5             	mov    %rsp,%rbp
    a1f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a200:	90                   	nop
    a201:	5d                   	pop    %rbp
    a202:	c3                   	ret

000000000000a203 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a203:	55                   	push   %rbp
    a204:	48 89 e5             	mov    %rsp,%rbp
    a207:	48 83 ec 20          	sub    $0x20,%rsp
    a20b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a20f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a213:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a217:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a21b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a223:	48 89 ce             	mov    %rcx,%rsi
    a226:	48 89 c7             	mov    %rax,%rdi
    a229:	e8 3a 09 00 00       	call   ab68 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a22e:	90                   	nop
    a22f:	c9                   	leave
    a230:	c3                   	ret

000000000000a231 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a231:	55                   	push   %rbp
    a232:	48 89 e5             	mov    %rsp,%rbp
    a235:	48 83 ec 20          	sub    $0x20,%rsp
    a239:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a23d:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a244:	ff ff 1f 
    a247:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a24b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a24f:	48 89 c7             	mov    %rax,%rdi
    a252:	e8 42 09 00 00       	call   ab99 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a257:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a25b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a25f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a263:	48 89 d6             	mov    %rdx,%rsi
    a266:	48 89 c7             	mov    %rax,%rdi
    a269:	e8 4f b0 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    a26e:	48 8b 00             	mov    (%rax),%rax
      }
    a271:	c9                   	leave
    a272:	c3                   	ret
    a273:	90                   	nop

000000000000a274 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a274:	55                   	push   %rbp
    a275:	48 89 e5             	mov    %rsp,%rbp
    a278:	48 83 ec 10          	sub    $0x10,%rsp
    a27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a284:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28c:	48 89 d6             	mov    %rdx,%rsi
    a28f:	48 89 c7             	mov    %rax,%rdi
    a292:	e8 c5 f3 ff ff       	call   965c <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a29b:	48 89 c7             	mov    %rax,%rdi
    a29e:	e8 11 09 00 00       	call   abb4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a2a3:	90                   	nop
    a2a4:	c9                   	leave
    a2a5:	c3                   	ret

000000000000a2a6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a2a6:	55                   	push   %rbp
    a2a7:	48 89 e5             	mov    %rsp,%rbp
    a2aa:	48 83 ec 10          	sub    $0x10,%rsp
    a2ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a2b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2be:	48 89 d6             	mov    %rdx,%rsi
    a2c1:	48 89 c7             	mov    %rax,%rdi
    a2c4:	e8 19 09 00 00       	call   abe2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a2c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a2cd:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a2d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d4:	48 8b 10             	mov    (%rax),%rdx
    a2d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2db:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a2df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2e3:	48 8b 00             	mov    (%rax),%rax
    a2e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2ea:	48 c1 e2 02          	shl    $0x2,%rdx
    a2ee:	48 01 c2             	add    %rax,%rdx
    a2f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f5:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a2f9:	90                   	nop
    a2fa:	c9                   	leave
    a2fb:	c3                   	ret

000000000000a2fc <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a2fc:	55                   	push   %rbp
    a2fd:	48 89 e5             	mov    %rsp,%rbp
    a300:	48 83 ec 20          	sub    $0x20,%rsp
    a304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a30c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a310:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a318:	48 89 d6             	mov    %rdx,%rsi
    a31b:	48 89 c7             	mov    %rax,%rdi
    a31e:	e8 f2 08 00 00       	call   ac15 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a323:	c9                   	leave
    a324:	c3                   	ret

000000000000a325 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a325:	55                   	push   %rbp
    a326:	48 89 e5             	mov    %rsp,%rbp
    a329:	48 83 ec 10          	sub    $0x10,%rsp
    a32d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a331:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a335:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33d:	48 89 d6             	mov    %rdx,%rsi
    a340:	48 89 c7             	mov    %rax,%rdi
    a343:	e8 f6 08 00 00       	call   ac3e <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a348:	90                   	nop
    a349:	c9                   	leave
    a34a:	c3                   	ret
    a34b:	90                   	nop

000000000000a34c <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a34c:	55                   	push   %rbp
    a34d:	48 89 e5             	mov    %rsp,%rbp
    a350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a358:	90                   	nop
    a359:	5d                   	pop    %rbp
    a35a:	c3                   	ret

000000000000a35b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a35b:	55                   	push   %rbp
    a35c:	48 89 e5             	mov    %rsp,%rbp
    a35f:	48 83 ec 20          	sub    $0x20,%rsp
    a363:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a367:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a36b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a36f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a373:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a37b:	48 89 ce             	mov    %rcx,%rsi
    a37e:	48 89 c7             	mov    %rax,%rdi
    a381:	e8 c8 08 00 00       	call   ac4e <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a386:	90                   	nop
    a387:	c9                   	leave
    a388:	c3                   	ret

000000000000a389 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a389:	55                   	push   %rbp
    a38a:	48 89 e5             	mov    %rsp,%rbp
    a38d:	48 83 ec 20          	sub    $0x20,%rsp
    a391:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a395:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a39c:	ff ff 0f 
    a39f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a3a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3a7:	48 89 c7             	mov    %rax,%rdi
    a3aa:	e8 d0 08 00 00       	call   ac7f <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a3af:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a3b3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a3b7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a3bb:	48 89 d6             	mov    %rdx,%rsi
    a3be:	48 89 c7             	mov    %rax,%rdi
    a3c1:	e8 f7 ae ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    a3c6:	48 8b 00             	mov    (%rax),%rax
      }
    a3c9:	c9                   	leave
    a3ca:	c3                   	ret
    a3cb:	90                   	nop

000000000000a3cc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a3cc:	55                   	push   %rbp
    a3cd:	48 89 e5             	mov    %rsp,%rbp
    a3d0:	48 83 ec 10          	sub    $0x10,%rsp
    a3d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a3dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3e4:	48 89 d6             	mov    %rdx,%rsi
    a3e7:	48 89 c7             	mov    %rax,%rdi
    a3ea:	e8 29 f4 ff ff       	call   9818 <_ZNSaIP9VkImage_TEC1ERKS1_>
    a3ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f3:	48 89 c7             	mov    %rax,%rdi
    a3f6:	e8 9f 08 00 00       	call   ac9a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a3fb:	90                   	nop
    a3fc:	c9                   	leave
    a3fd:	c3                   	ret

000000000000a3fe <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a3fe:	55                   	push   %rbp
    a3ff:	48 89 e5             	mov    %rsp,%rbp
    a402:	48 83 ec 10          	sub    $0x10,%rsp
    a406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a40a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a40e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a416:	48 89 d6             	mov    %rdx,%rsi
    a419:	48 89 c7             	mov    %rax,%rdi
    a41c:	e8 a7 08 00 00       	call   acc8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a421:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a425:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a42c:	48 8b 10             	mov    (%rax),%rdx
    a42f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a433:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a43b:	48 8b 00             	mov    (%rax),%rax
    a43e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a442:	48 c1 e2 03          	shl    $0x3,%rdx
    a446:	48 01 c2             	add    %rax,%rdx
    a449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a44d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a451:	90                   	nop
    a452:	c9                   	leave
    a453:	c3                   	ret

000000000000a454 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a454:	55                   	push   %rbp
    a455:	48 89 e5             	mov    %rsp,%rbp
    a458:	48 83 ec 20          	sub    $0x20,%rsp
    a45c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a460:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a464:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a468:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a470:	48 89 d6             	mov    %rdx,%rsi
    a473:	48 89 c7             	mov    %rax,%rdi
    a476:	e8 80 08 00 00       	call   acfb <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    a47b:	c9                   	leave
    a47c:	c3                   	ret

000000000000a47d <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a47d:	55                   	push   %rbp
    a47e:	48 89 e5             	mov    %rsp,%rbp
    a481:	48 83 ec 10          	sub    $0x10,%rsp
    a485:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a489:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a48d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a491:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a495:	48 89 d6             	mov    %rdx,%rsi
    a498:	48 89 c7             	mov    %rax,%rdi
    a49b:	e8 84 08 00 00       	call   ad24 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    a4a0:	90                   	nop
    a4a1:	c9                   	leave
    a4a2:	c3                   	ret
    a4a3:	90                   	nop

000000000000a4a4 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    a4a4:	55                   	push   %rbp
    a4a5:	48 89 e5             	mov    %rsp,%rbp
    a4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4b0:	90                   	nop
    a4b1:	5d                   	pop    %rbp
    a4b2:	c3                   	ret

000000000000a4b3 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a4b3:	55                   	push   %rbp
    a4b4:	48 89 e5             	mov    %rsp,%rbp
    a4b7:	48 83 ec 20          	sub    $0x20,%rsp
    a4bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4c3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a4c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a4cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d3:	48 89 ce             	mov    %rcx,%rsi
    a4d6:	48 89 c7             	mov    %rax,%rdi
    a4d9:	e8 56 08 00 00       	call   ad34 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    a4de:	90                   	nop
    a4df:	c9                   	leave
    a4e0:	c3                   	ret

000000000000a4e1 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a4e1:	55                   	push   %rbp
    a4e2:	48 89 e5             	mov    %rsp,%rbp
    a4e5:	48 83 ec 10          	sub    $0x10,%rsp
    a4e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a4ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f1:	48 89 c7             	mov    %rax,%rdi
    a4f4:	e8 6d 08 00 00       	call   ad66 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    a4f9:	c9                   	leave
    a4fa:	c3                   	ret
    a4fb:	90                   	nop

000000000000a4fc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a4fc:	55                   	push   %rbp
    a4fd:	48 89 e5             	mov    %rsp,%rbp
    a500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a508:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a50f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a513:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a51a:	00 
    a51b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a51f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a526:	00 
	{ }
    a527:	90                   	nop
    a528:	5d                   	pop    %rbp
    a529:	c3                   	ret

000000000000a52a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a52a:	55                   	push   %rbp
    a52b:	48 89 e5             	mov    %rsp,%rbp
    a52e:	48 83 ec 10          	sub    $0x10,%rsp
    a532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a536:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a53a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a53f:	74 15                	je     a556 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a545:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a549:	48 89 d6             	mov    %rdx,%rsi
    a54c:	48 89 c7             	mov    %rax,%rdi
    a54f:	e8 2c 08 00 00       	call   ad80 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    a554:	eb 05                	jmp    a55b <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a556:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a55b:	c9                   	leave
    a55c:	c3                   	ret

000000000000a55d <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a55d:	55                   	push   %rbp
    a55e:	48 89 e5             	mov    %rsp,%rbp
    a561:	48 83 ec 20          	sub    $0x20,%rsp
    a565:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a569:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a56d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a571:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a579:	48 89 d6             	mov    %rdx,%rsi
    a57c:	48 89 c7             	mov    %rax,%rdi
    a57f:	e8 26 08 00 00       	call   adaa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    a584:	c9                   	leave
    a585:	c3                   	ret

000000000000a586 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    a586:	55                   	push   %rbp
    a587:	48 89 e5             	mov    %rsp,%rbp
    a58a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a58e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a592:	90                   	nop
    a593:	5d                   	pop    %rbp
    a594:	c3                   	ret
    a595:	90                   	nop

000000000000a596 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a596:	55                   	push   %rbp
    a597:	48 89 e5             	mov    %rsp,%rbp
    a59a:	48 83 ec 20          	sub    $0x20,%rsp
    a59e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a5aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a5ae:	48 89 d0             	mov    %rdx,%rax
    a5b1:	48 c1 e0 06          	shl    $0x6,%rax
    a5b5:	48 01 d0             	add    %rdx,%rax
    a5b8:	48 c1 e0 03          	shl    $0x3,%rax
    a5bc:	48 89 c2             	mov    %rax,%rdx
    a5bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a5c3:	48 89 d6             	mov    %rdx,%rsi
    a5c6:	48 89 c7             	mov    %rax,%rdi
    a5c9:	e8 82 9d ff ff       	call   4350 <_ZdlPvm@plt>
      }
    a5ce:	c9                   	leave
    a5cf:	c3                   	ret

000000000000a5d0 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a5d0:	55                   	push   %rbp
    a5d1:	48 89 e5             	mov    %rsp,%rbp
    a5d4:	48 83 ec 10          	sub    $0x10,%rsp
    a5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5e0:	48 89 c7             	mov    %rax,%rdi
    a5e3:	e8 22 08 00 00       	call   ae0a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    a5e8:	c9                   	leave
    a5e9:	c3                   	ret

000000000000a5ea <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a5ea:	55                   	push   %rbp
    a5eb:	48 89 e5             	mov    %rsp,%rbp
    a5ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a5f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a5fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a601:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a608:	00 
    a609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a60d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a614:	00 
	{ }
    a615:	90                   	nop
    a616:	5d                   	pop    %rbp
    a617:	c3                   	ret

000000000000a618 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a618:	55                   	push   %rbp
    a619:	48 89 e5             	mov    %rsp,%rbp
    a61c:	48 83 ec 10          	sub    $0x10,%rsp
    a620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a624:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a628:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a62d:	74 15                	je     a644 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a62f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a633:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a637:	48 89 d6             	mov    %rdx,%rsi
    a63a:	48 89 c7             	mov    %rax,%rdi
    a63d:	e8 e2 07 00 00       	call   ae24 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    a642:	eb 05                	jmp    a649 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a644:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a649:	c9                   	leave
    a64a:	c3                   	ret

000000000000a64b <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a64b:	55                   	push   %rbp
    a64c:	48 89 e5             	mov    %rsp,%rbp
    a64f:	48 83 ec 20          	sub    $0x20,%rsp
    a653:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a657:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a65b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a65f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a663:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a667:	48 89 d6             	mov    %rdx,%rsi
    a66a:	48 89 c7             	mov    %rax,%rdi
    a66d:	e8 dc 07 00 00       	call   ae4e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    a672:	c9                   	leave
    a673:	c3                   	ret

000000000000a674 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    a674:	55                   	push   %rbp
    a675:	48 89 e5             	mov    %rsp,%rbp
    a678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a67c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a680:	90                   	nop
    a681:	5d                   	pop    %rbp
    a682:	c3                   	ret
    a683:	90                   	nop

000000000000a684 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a684:	55                   	push   %rbp
    a685:	48 89 e5             	mov    %rsp,%rbp
    a688:	48 83 ec 20          	sub    $0x20,%rsp
    a68c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a690:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a694:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a698:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a69c:	48 89 d0             	mov    %rdx,%rax
    a69f:	48 c1 e0 06          	shl    $0x6,%rax
    a6a3:	48 01 d0             	add    %rdx,%rax
    a6a6:	48 c1 e0 02          	shl    $0x2,%rax
    a6aa:	48 89 c2             	mov    %rax,%rdx
    a6ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a6b1:	48 89 d6             	mov    %rdx,%rsi
    a6b4:	48 89 c7             	mov    %rax,%rdi
    a6b7:	e8 94 9c ff ff       	call   4350 <_ZdlPvm@plt>
      }
    a6bc:	c9                   	leave
    a6bd:	c3                   	ret

000000000000a6be <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a6be:	55                   	push   %rbp
    a6bf:	48 89 e5             	mov    %rsp,%rbp
    a6c2:	48 83 ec 10          	sub    $0x10,%rsp
    a6c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a6ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ce:	48 89 c7             	mov    %rax,%rdi
    a6d1:	e8 d8 07 00 00       	call   aeae <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    a6d6:	c9                   	leave
    a6d7:	c3                   	ret

000000000000a6d8 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a6d8:	55                   	push   %rbp
    a6d9:	48 89 e5             	mov    %rsp,%rbp
    a6dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a6e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a6eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ef:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a6f6:	00 
    a6f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6fb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a702:	00 
	{ }
    a703:	90                   	nop
    a704:	5d                   	pop    %rbp
    a705:	c3                   	ret

000000000000a706 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a706:	55                   	push   %rbp
    a707:	48 89 e5             	mov    %rsp,%rbp
    a70a:	48 83 ec 10          	sub    $0x10,%rsp
    a70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a712:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a716:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a71b:	74 15                	je     a732 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    a71d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a721:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a725:	48 89 d6             	mov    %rdx,%rsi
    a728:	48 89 c7             	mov    %rax,%rdi
    a72b:	e8 98 07 00 00       	call   aec8 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    a730:	eb 05                	jmp    a737 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    a732:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a737:	c9                   	leave
    a738:	c3                   	ret

000000000000a739 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a739:	55                   	push   %rbp
    a73a:	48 89 e5             	mov    %rsp,%rbp
    a73d:	48 83 ec 20          	sub    $0x20,%rsp
    a741:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a745:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a749:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a74d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a751:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a755:	48 89 d6             	mov    %rdx,%rsi
    a758:	48 89 c7             	mov    %rax,%rdi
    a75b:	e8 92 07 00 00       	call   aef2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    a760:	c9                   	leave
    a761:	c3                   	ret

000000000000a762 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a762:	55                   	push   %rbp
    a763:	48 89 e5             	mov    %rsp,%rbp
    a766:	48 83 ec 20          	sub    $0x20,%rsp
    a76a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a76e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a772:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a776:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a77a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a781:	00 
    a782:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a786:	48 89 d6             	mov    %rdx,%rsi
    a789:	48 89 c7             	mov    %rax,%rdi
    a78c:	e8 bf 9b ff ff       	call   4350 <_ZdlPvm@plt>
      }
    a791:	c9                   	leave
    a792:	c3                   	ret

000000000000a793 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a793:	55                   	push   %rbp
    a794:	48 89 e5             	mov    %rsp,%rbp
    a797:	48 83 ec 10          	sub    $0x10,%rsp
    a79b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a79f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7a3:	48 89 c7             	mov    %rax,%rdi
    a7a6:	e8 a5 07 00 00       	call   af50 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    a7ab:	c9                   	leave
    a7ac:	c3                   	ret
    a7ad:	90                   	nop

000000000000a7ae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a7ae:	55                   	push   %rbp
    a7af:	48 89 e5             	mov    %rsp,%rbp
    a7b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a7b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a7c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a7cc:	00 
    a7cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a7d8:	00 
	{ }
    a7d9:	90                   	nop
    a7da:	5d                   	pop    %rbp
    a7db:	c3                   	ret

000000000000a7dc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a7dc:	55                   	push   %rbp
    a7dd:	48 89 e5             	mov    %rsp,%rbp
    a7e0:	48 83 ec 10          	sub    $0x10,%rsp
    a7e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a7ec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a7f1:	74 15                	je     a808 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    a7f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7fb:	48 89 d6             	mov    %rdx,%rsi
    a7fe:	48 89 c7             	mov    %rax,%rdi
    a801:	e8 64 07 00 00       	call   af6a <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    a806:	eb 05                	jmp    a80d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    a808:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a80d:	c9                   	leave
    a80e:	c3                   	ret

000000000000a80f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a80f:	55                   	push   %rbp
    a810:	48 89 e5             	mov    %rsp,%rbp
    a813:	48 83 ec 20          	sub    $0x20,%rsp
    a817:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a81b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a81f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a823:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a827:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a82b:	48 89 d6             	mov    %rdx,%rsi
    a82e:	48 89 c7             	mov    %rax,%rdi
    a831:	e8 5e 07 00 00       	call   af94 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    a836:	c9                   	leave
    a837:	c3                   	ret

000000000000a838 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    a838:	55                   	push   %rbp
    a839:	48 89 e5             	mov    %rsp,%rbp
    a83c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a840:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a844:	90                   	nop
    a845:	5d                   	pop    %rbp
    a846:	c3                   	ret
    a847:	90                   	nop

000000000000a848 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a848:	55                   	push   %rbp
    a849:	48 89 e5             	mov    %rsp,%rbp
    a84c:	48 83 ec 20          	sub    $0x20,%rsp
    a850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a854:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a858:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a85c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a860:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a867:	00 
    a868:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a86c:	48 89 d6             	mov    %rdx,%rsi
    a86f:	48 89 c7             	mov    %rax,%rdi
    a872:	e8 d9 9a ff ff       	call   4350 <_ZdlPvm@plt>
      }
    a877:	c9                   	leave
    a878:	c3                   	ret

000000000000a879 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a879:	55                   	push   %rbp
    a87a:	48 89 e5             	mov    %rsp,%rbp
    a87d:	48 83 ec 10          	sub    $0x10,%rsp
    a881:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a889:	48 89 c7             	mov    %rax,%rdi
    a88c:	e8 61 07 00 00       	call   aff2 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    a891:	c9                   	leave
    a892:	c3                   	ret
    a893:	90                   	nop

000000000000a894 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a894:	55                   	push   %rbp
    a895:	48 89 e5             	mov    %rsp,%rbp
    a898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a89c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a8a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8ab:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a8b2:	00 
    a8b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a8be:	00 
	{ }
    a8bf:	90                   	nop
    a8c0:	5d                   	pop    %rbp
    a8c1:	c3                   	ret

000000000000a8c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a8c2:	55                   	push   %rbp
    a8c3:	48 89 e5             	mov    %rsp,%rbp
    a8c6:	48 83 ec 10          	sub    $0x10,%rsp
    a8ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a8d2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a8d7:	74 15                	je     a8ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a8d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8e1:	48 89 d6             	mov    %rdx,%rsi
    a8e4:	48 89 c7             	mov    %rax,%rdi
    a8e7:	e8 20 07 00 00       	call   b00c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    a8ec:	eb 05                	jmp    a8f3 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a8ee:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a8f3:	c9                   	leave
    a8f4:	c3                   	ret

000000000000a8f5 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a8f5:	55                   	push   %rbp
    a8f6:	48 89 e5             	mov    %rsp,%rbp
    a8f9:	48 83 ec 20          	sub    $0x20,%rsp
    a8fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a901:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a905:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a909:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a90d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a911:	48 89 d6             	mov    %rdx,%rsi
    a914:	48 89 c7             	mov    %rax,%rdi
    a917:	e8 1a 07 00 00       	call   b036 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    a91c:	c9                   	leave
    a91d:	c3                   	ret

000000000000a91e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    a91e:	55                   	push   %rbp
    a91f:	48 89 e5             	mov    %rsp,%rbp
    a922:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a926:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a92a:	90                   	nop
    a92b:	5d                   	pop    %rbp
    a92c:	c3                   	ret
    a92d:	90                   	nop

000000000000a92e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a92e:	55                   	push   %rbp
    a92f:	48 89 e5             	mov    %rsp,%rbp
    a932:	48 83 ec 20          	sub    $0x20,%rsp
    a936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a93a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a93e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a942:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a946:	48 89 d0             	mov    %rdx,%rax
    a949:	48 01 c0             	add    %rax,%rax
    a94c:	48 01 d0             	add    %rdx,%rax
    a94f:	48 c1 e0 03          	shl    $0x3,%rax
    a953:	48 89 c2             	mov    %rax,%rdx
    a956:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a95a:	48 89 d6             	mov    %rdx,%rsi
    a95d:	48 89 c7             	mov    %rax,%rdi
    a960:	e8 eb 99 ff ff       	call   4350 <_ZdlPvm@plt>
      }
    a965:	c9                   	leave
    a966:	c3                   	ret

000000000000a967 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a967:	55                   	push   %rbp
    a968:	48 89 e5             	mov    %rsp,%rbp
    a96b:	48 83 ec 10          	sub    $0x10,%rsp
    a96f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a977:	48 89 c7             	mov    %rax,%rdi
    a97a:	e8 15 07 00 00       	call   b094 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    a97f:	c9                   	leave
    a980:	c3                   	ret
    a981:	90                   	nop

000000000000a982 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a982:	55                   	push   %rbp
    a983:	48 89 e5             	mov    %rsp,%rbp
    a986:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a98a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a98e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a999:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a9a0:	00 
    a9a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a9ac:	00 
	{ }
    a9ad:	90                   	nop
    a9ae:	5d                   	pop    %rbp
    a9af:	c3                   	ret

000000000000a9b0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a9b0:	55                   	push   %rbp
    a9b1:	48 89 e5             	mov    %rsp,%rbp
    a9b4:	48 83 ec 10          	sub    $0x10,%rsp
    a9b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a9c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a9c5:	74 15                	je     a9dc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    a9c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9cb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9cf:	48 89 d6             	mov    %rdx,%rsi
    a9d2:	48 89 c7             	mov    %rax,%rdi
    a9d5:	e8 d4 06 00 00       	call   b0ae <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    a9da:	eb 05                	jmp    a9e1 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    a9dc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a9e1:	c9                   	leave
    a9e2:	c3                   	ret

000000000000a9e3 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a9e3:	55                   	push   %rbp
    a9e4:	48 89 e5             	mov    %rsp,%rbp
    a9e7:	48 83 ec 20          	sub    $0x20,%rsp
    a9eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a9ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a9f3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a9f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a9fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9ff:	48 89 d6             	mov    %rdx,%rsi
    aa02:	48 89 c7             	mov    %rax,%rdi
    aa05:	e8 ce 06 00 00       	call   b0d8 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    aa0a:	c9                   	leave
    aa0b:	c3                   	ret

000000000000aa0c <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    aa0c:	55                   	push   %rbp
    aa0d:	48 89 e5             	mov    %rsp,%rbp
    aa10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa18:	90                   	nop
    aa19:	5d                   	pop    %rbp
    aa1a:	c3                   	ret

000000000000aa1b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    aa1b:	55                   	push   %rbp
    aa1c:	48 89 e5             	mov    %rsp,%rbp
    aa1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    aa23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa27:	5d                   	pop    %rbp
    aa28:	c3                   	ret

000000000000aa29 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    aa29:	55                   	push   %rbp
    aa2a:	48 89 e5             	mov    %rsp,%rbp
    aa2d:	53                   	push   %rbx
    aa2e:	48 83 ec 18          	sub    $0x18,%rsp
    aa32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    aa3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa3e:	48 89 c6             	mov    %rax,%rsi
    aa41:	bf 18 00 00 00       	mov    $0x18,%edi
    aa46:	e8 a5 a3 ff ff       	call   4df0 <_ZnwmPv>
    aa4b:	48 89 c3             	mov    %rax,%rbx
    aa4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aa52:	48 89 c7             	mov    %rax,%rdi
    aa55:	e8 48 e8 ff ff       	call   92a2 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    aa5a:	48 89 c1             	mov    %rax,%rcx
    aa5d:	48 8b 01             	mov    (%rcx),%rax
    aa60:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    aa64:	48 89 03             	mov    %rax,(%rbx)
    aa67:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    aa6b:	48 8b 41 10          	mov    0x10(%rcx),%rax
    aa6f:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    aa73:	90                   	nop
    aa74:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aa78:	c9                   	leave
    aa79:	c3                   	ret

000000000000aa7a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aa7a:	55                   	push   %rbp
    aa7b:	48 89 e5             	mov    %rsp,%rbp
    aa7e:	48 83 ec 20          	sub    $0x20,%rsp
    aa82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aa8e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa92:	48 89 d0             	mov    %rdx,%rax
    aa95:	48 c1 e0 03          	shl    $0x3,%rax
    aa99:	48 29 d0             	sub    %rdx,%rax
    aa9c:	48 c1 e0 02          	shl    $0x2,%rax
    aaa0:	48 89 c2             	mov    %rax,%rdx
    aaa3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aaa7:	48 89 d6             	mov    %rdx,%rsi
    aaaa:	48 89 c7             	mov    %rax,%rdi
    aaad:	e8 9e 98 ff ff       	call   4350 <_ZdlPvm@plt>
      }
    aab2:	c9                   	leave
    aab3:	c3                   	ret

000000000000aab4 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aab4:	55                   	push   %rbp
    aab5:	48 89 e5             	mov    %rsp,%rbp
    aab8:	48 83 ec 10          	sub    $0x10,%rsp
    aabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aac4:	48 89 c7             	mov    %rax,%rdi
    aac7:	e8 52 06 00 00       	call   b11e <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    aacc:	c9                   	leave
    aacd:	c3                   	ret

000000000000aace <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aace:	55                   	push   %rbp
    aacf:	48 89 e5             	mov    %rsp,%rbp
    aad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aada:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aae1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aae5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aaec:	00 
    aaed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaf1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aaf8:	00 
	{ }
    aaf9:	90                   	nop
    aafa:	5d                   	pop    %rbp
    aafb:	c3                   	ret

000000000000aafc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aafc:	55                   	push   %rbp
    aafd:	48 89 e5             	mov    %rsp,%rbp
    ab00:	48 83 ec 10          	sub    $0x10,%rsp
    ab04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab0c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab11:	74 15                	je     ab28 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    ab13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab1b:	48 89 d6             	mov    %rdx,%rsi
    ab1e:	48 89 c7             	mov    %rax,%rdi
    ab21:	e8 12 06 00 00       	call   b138 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    ab26:	eb 05                	jmp    ab2d <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    ab28:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ab2d:	c9                   	leave
    ab2e:	c3                   	ret

000000000000ab2f <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ab2f:	55                   	push   %rbp
    ab30:	48 89 e5             	mov    %rsp,%rbp
    ab33:	48 83 ec 20          	sub    $0x20,%rsp
    ab37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab3b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ab3f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ab43:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab4b:	48 89 d6             	mov    %rdx,%rsi
    ab4e:	48 89 c7             	mov    %rax,%rdi
    ab51:	e8 0c 06 00 00       	call   b162 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    ab56:	c9                   	leave
    ab57:	c3                   	ret

000000000000ab58 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    ab58:	55                   	push   %rbp
    ab59:	48 89 e5             	mov    %rsp,%rbp
    ab5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab64:	90                   	nop
    ab65:	5d                   	pop    %rbp
    ab66:	c3                   	ret
    ab67:	90                   	nop

000000000000ab68 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ab68:	55                   	push   %rbp
    ab69:	48 89 e5             	mov    %rsp,%rbp
    ab6c:	48 83 ec 20          	sub    $0x20,%rsp
    ab70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab78:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ab7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab80:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ab87:	00 
    ab88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab8c:	48 89 d6             	mov    %rdx,%rsi
    ab8f:	48 89 c7             	mov    %rax,%rdi
    ab92:	e8 b9 97 ff ff       	call   4350 <_ZdlPvm@plt>
      }
    ab97:	c9                   	leave
    ab98:	c3                   	ret

000000000000ab99 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ab99:	55                   	push   %rbp
    ab9a:	48 89 e5             	mov    %rsp,%rbp
    ab9d:	48 83 ec 10          	sub    $0x10,%rsp
    aba1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba9:	48 89 c7             	mov    %rax,%rdi
    abac:	e8 0f 06 00 00       	call   b1c0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    abb1:	c9                   	leave
    abb2:	c3                   	ret
    abb3:	90                   	nop

000000000000abb4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    abb4:	55                   	push   %rbp
    abb5:	48 89 e5             	mov    %rsp,%rbp
    abb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    abbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    abc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abcb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    abd2:	00 
    abd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abd7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    abde:	00 
	{ }
    abdf:	90                   	nop
    abe0:	5d                   	pop    %rbp
    abe1:	c3                   	ret

000000000000abe2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    abe2:	55                   	push   %rbp
    abe3:	48 89 e5             	mov    %rsp,%rbp
    abe6:	48 83 ec 10          	sub    $0x10,%rsp
    abea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    abf2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    abf7:	74 15                	je     ac0e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    abf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac01:	48 89 d6             	mov    %rdx,%rsi
    ac04:	48 89 c7             	mov    %rax,%rdi
    ac07:	e8 ce 05 00 00       	call   b1da <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    ac0c:	eb 05                	jmp    ac13 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    ac0e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ac13:	c9                   	leave
    ac14:	c3                   	ret

000000000000ac15 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ac15:	55                   	push   %rbp
    ac16:	48 89 e5             	mov    %rsp,%rbp
    ac19:	48 83 ec 20          	sub    $0x20,%rsp
    ac1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ac25:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ac29:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ac2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac31:	48 89 d6             	mov    %rdx,%rsi
    ac34:	48 89 c7             	mov    %rax,%rdi
    ac37:	e8 c8 05 00 00       	call   b204 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    ac3c:	c9                   	leave
    ac3d:	c3                   	ret

000000000000ac3e <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    ac3e:	55                   	push   %rbp
    ac3f:	48 89 e5             	mov    %rsp,%rbp
    ac42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac4a:	90                   	nop
    ac4b:	5d                   	pop    %rbp
    ac4c:	c3                   	ret
    ac4d:	90                   	nop

000000000000ac4e <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ac4e:	55                   	push   %rbp
    ac4f:	48 89 e5             	mov    %rsp,%rbp
    ac52:	48 83 ec 20          	sub    $0x20,%rsp
    ac56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ac62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac66:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ac6d:	00 
    ac6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac72:	48 89 d6             	mov    %rdx,%rsi
    ac75:	48 89 c7             	mov    %rax,%rdi
    ac78:	e8 d3 96 ff ff       	call   4350 <_ZdlPvm@plt>
      }
    ac7d:	c9                   	leave
    ac7e:	c3                   	ret

000000000000ac7f <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ac7f:	55                   	push   %rbp
    ac80:	48 89 e5             	mov    %rsp,%rbp
    ac83:	48 83 ec 10          	sub    $0x10,%rsp
    ac87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac8f:	48 89 c7             	mov    %rax,%rdi
    ac92:	e8 cb 05 00 00       	call   b262 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    ac97:	c9                   	leave
    ac98:	c3                   	ret
    ac99:	90                   	nop

000000000000ac9a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ac9a:	55                   	push   %rbp
    ac9b:	48 89 e5             	mov    %rsp,%rbp
    ac9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aca6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    acad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    acb8:	00 
    acb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acbd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    acc4:	00 
	{ }
    acc5:	90                   	nop
    acc6:	5d                   	pop    %rbp
    acc7:	c3                   	ret

000000000000acc8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    acc8:	55                   	push   %rbp
    acc9:	48 89 e5             	mov    %rsp,%rbp
    accc:	48 83 ec 10          	sub    $0x10,%rsp
    acd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    acd8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    acdd:	74 15                	je     acf4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    acdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ace7:	48 89 d6             	mov    %rdx,%rsi
    acea:	48 89 c7             	mov    %rax,%rdi
    aced:	e8 8a 05 00 00       	call   b27c <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    acf2:	eb 05                	jmp    acf9 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    acf4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    acf9:	c9                   	leave
    acfa:	c3                   	ret

000000000000acfb <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    acfb:	55                   	push   %rbp
    acfc:	48 89 e5             	mov    %rsp,%rbp
    acff:	48 83 ec 20          	sub    $0x20,%rsp
    ad03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ad0b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ad0f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad17:	48 89 d6             	mov    %rdx,%rsi
    ad1a:	48 89 c7             	mov    %rax,%rdi
    ad1d:	e8 84 05 00 00       	call   b2a6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    ad22:	c9                   	leave
    ad23:	c3                   	ret

000000000000ad24 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    ad24:	55                   	push   %rbp
    ad25:	48 89 e5             	mov    %rsp,%rbp
    ad28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad30:	90                   	nop
    ad31:	5d                   	pop    %rbp
    ad32:	c3                   	ret
    ad33:	90                   	nop

000000000000ad34 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ad34:	55                   	push   %rbp
    ad35:	48 89 e5             	mov    %rsp,%rbp
    ad38:	48 83 ec 20          	sub    $0x20,%rsp
    ad3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad4c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ad53:	00 
    ad54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad58:	48 89 d6             	mov    %rdx,%rsi
    ad5b:	48 89 c7             	mov    %rax,%rdi
    ad5e:	e8 ed 95 ff ff       	call   4350 <_ZdlPvm@plt>
      }
    ad63:	c9                   	leave
    ad64:	c3                   	ret
    ad65:	90                   	nop

000000000000ad66 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ad66:	55                   	push   %rbp
    ad67:	48 89 e5             	mov    %rsp,%rbp
    ad6a:	48 83 ec 10          	sub    $0x10,%rsp
    ad6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ad72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad76:	48 89 c7             	mov    %rax,%rdi
    ad79:	e8 86 05 00 00       	call   b304 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    ad7e:	c9                   	leave
    ad7f:	c3                   	ret

000000000000ad80 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    ad80:	55                   	push   %rbp
    ad81:	48 89 e5             	mov    %rsp,%rbp
    ad84:	48 83 ec 10          	sub    $0x10,%rsp
    ad88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ad90:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ad94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad98:	ba 00 00 00 00       	mov    $0x0,%edx
    ad9d:	48 89 ce             	mov    %rcx,%rsi
    ada0:	48 89 c7             	mov    %rax,%rdi
    ada3:	e8 70 05 00 00       	call   b318 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    ada8:	c9                   	leave
    ada9:	c3                   	ret

000000000000adaa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    adaa:	55                   	push   %rbp
    adab:	48 89 e5             	mov    %rsp,%rbp
    adae:	48 83 ec 20          	sub    $0x20,%rsp
    adb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    adb6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    adba:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    adbf:	74 43                	je     ae04 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    adc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adc5:	48 89 c7             	mov    %rax,%rdi
    adc8:	e8 b6 05 00 00       	call   b383 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    adcd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    add1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add5:	48 89 c7             	mov    %rax,%rdi
    add8:	e8 b4 05 00 00       	call   b391 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    addd:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    ade4:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    ade5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ade9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    aded:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    adf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adf5:	48 89 ce             	mov    %rcx,%rsi
    adf8:	48 89 c7             	mov    %rax,%rdi
    adfb:	e8 eb 05 00 00       	call   b3eb <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    ae00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    ae04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    ae08:	c9                   	leave
    ae09:	c3                   	ret

000000000000ae0a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ae0a:	55                   	push   %rbp
    ae0b:	48 89 e5             	mov    %rsp,%rbp
    ae0e:	48 83 ec 10          	sub    $0x10,%rsp
    ae12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ae16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1a:	48 89 c7             	mov    %rax,%rdi
    ae1d:	e8 0e 06 00 00       	call   b430 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    ae22:	c9                   	leave
    ae23:	c3                   	ret

000000000000ae24 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    ae24:	55                   	push   %rbp
    ae25:	48 89 e5             	mov    %rsp,%rbp
    ae28:	48 83 ec 10          	sub    $0x10,%rsp
    ae2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ae34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ae38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3c:	ba 00 00 00 00       	mov    $0x0,%edx
    ae41:	48 89 ce             	mov    %rcx,%rsi
    ae44:	48 89 c7             	mov    %rax,%rdi
    ae47:	e8 f8 05 00 00       	call   b444 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    ae4c:	c9                   	leave
    ae4d:	c3                   	ret

000000000000ae4e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ae4e:	55                   	push   %rbp
    ae4f:	48 89 e5             	mov    %rsp,%rbp
    ae52:	48 83 ec 20          	sub    $0x20,%rsp
    ae56:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ae5a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    ae5e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ae63:	74 43                	je     aea8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    ae65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae69:	48 89 c7             	mov    %rax,%rdi
    ae6c:	e8 3e 06 00 00       	call   b4af <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    ae71:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    ae75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae79:	48 89 c7             	mov    %rax,%rdi
    ae7c:	e8 3c 06 00 00       	call   b4bd <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    ae81:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    ae88:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    ae89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ae8d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    ae91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae99:	48 89 ce             	mov    %rcx,%rsi
    ae9c:	48 89 c7             	mov    %rax,%rdi
    ae9f:	e8 73 06 00 00       	call   b517 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    aea4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    aea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    aeac:	c9                   	leave
    aead:	c3                   	ret

000000000000aeae <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    aeae:	55                   	push   %rbp
    aeaf:	48 89 e5             	mov    %rsp,%rbp
    aeb2:	48 83 ec 10          	sub    $0x10,%rsp
    aeb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    aeba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aebe:	48 89 c7             	mov    %rax,%rdi
    aec1:	e8 96 06 00 00       	call   b55c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    aec6:	c9                   	leave
    aec7:	c3                   	ret

000000000000aec8 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    aec8:	55                   	push   %rbp
    aec9:	48 89 e5             	mov    %rsp,%rbp
    aecc:	48 83 ec 10          	sub    $0x10,%rsp
    aed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aed4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    aed8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aedc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aee0:	ba 00 00 00 00       	mov    $0x0,%edx
    aee5:	48 89 ce             	mov    %rcx,%rsi
    aee8:	48 89 c7             	mov    %rax,%rdi
    aeeb:	e8 80 06 00 00       	call   b570 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    aef0:	c9                   	leave
    aef1:	c3                   	ret

000000000000aef2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    aef2:	55                   	push   %rbp
    aef3:	48 89 e5             	mov    %rsp,%rbp
    aef6:	48 83 ec 20          	sub    $0x20,%rsp
    aefa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aefe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    af02:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    af07:	74 40                	je     af49 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    af09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af0d:	48 89 c7             	mov    %rax,%rdi
    af10:	e8 bc 06 00 00       	call   b5d1 <_ZSt11__addressofIPKcEPT_RS2_>
    af15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    af19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af1d:	48 89 c7             	mov    %rax,%rdi
    af20:	e8 ba 06 00 00       	call   b5df <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    af25:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    af2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    af2e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    af32:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    af36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af3a:	48 89 ce             	mov    %rcx,%rsi
    af3d:	48 89 c7             	mov    %rax,%rdi
    af40:	e8 c1 06 00 00       	call   b606 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    af45:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    af49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    af4d:	c9                   	leave
    af4e:	c3                   	ret
    af4f:	90                   	nop

000000000000af50 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    af50:	55                   	push   %rbp
    af51:	48 89 e5             	mov    %rsp,%rbp
    af54:	48 83 ec 10          	sub    $0x10,%rsp
    af58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    af5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af60:	48 89 c7             	mov    %rax,%rdi
    af63:	e8 e2 06 00 00       	call   b64a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    af68:	c9                   	leave
    af69:	c3                   	ret

000000000000af6a <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    af6a:	55                   	push   %rbp
    af6b:	48 89 e5             	mov    %rsp,%rbp
    af6e:	48 83 ec 10          	sub    $0x10,%rsp
    af72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    af7a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af82:	ba 00 00 00 00       	mov    $0x0,%edx
    af87:	48 89 ce             	mov    %rcx,%rsi
    af8a:	48 89 c7             	mov    %rax,%rdi
    af8d:	e8 cc 06 00 00       	call   b65e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    af92:	c9                   	leave
    af93:	c3                   	ret

000000000000af94 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    af94:	55                   	push   %rbp
    af95:	48 89 e5             	mov    %rsp,%rbp
    af98:	48 83 ec 20          	sub    $0x20,%rsp
    af9c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    afa0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    afa4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    afa9:	74 40                	je     afeb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    afab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afaf:	48 89 c7             	mov    %rax,%rdi
    afb2:	e8 08 07 00 00       	call   b6bf <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    afb7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    afbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afbf:	48 89 c7             	mov    %rax,%rdi
    afc2:	e8 06 07 00 00       	call   b6cd <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    afc7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    afcc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    afd0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    afd4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    afd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afdc:	48 89 ce             	mov    %rcx,%rsi
    afdf:	48 89 c7             	mov    %rax,%rdi
    afe2:	e8 0d 07 00 00       	call   b6f4 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    afe7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    afeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    afef:	c9                   	leave
    aff0:	c3                   	ret
    aff1:	90                   	nop

000000000000aff2 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    aff2:	55                   	push   %rbp
    aff3:	48 89 e5             	mov    %rsp,%rbp
    aff6:	48 83 ec 10          	sub    $0x10,%rsp
    affa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    affe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b002:	48 89 c7             	mov    %rax,%rdi
    b005:	e8 2e 07 00 00       	call   b738 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b00a:	c9                   	leave
    b00b:	c3                   	ret

000000000000b00c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b00c:	55                   	push   %rbp
    b00d:	48 89 e5             	mov    %rsp,%rbp
    b010:	48 83 ec 10          	sub    $0x10,%rsp
    b014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b018:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b01c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b024:	ba 00 00 00 00       	mov    $0x0,%edx
    b029:	48 89 ce             	mov    %rcx,%rsi
    b02c:	48 89 c7             	mov    %rax,%rdi
    b02f:	e8 18 07 00 00       	call   b74c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b034:	c9                   	leave
    b035:	c3                   	ret

000000000000b036 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b036:	55                   	push   %rbp
    b037:	48 89 e5             	mov    %rsp,%rbp
    b03a:	48 83 ec 20          	sub    $0x20,%rsp
    b03e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b042:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b046:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b04b:	74 40                	je     b08d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b04d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b051:	48 89 c7             	mov    %rax,%rdi
    b054:	e8 c2 f9 ff ff       	call   aa1b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b059:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b05d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b061:	48 89 c7             	mov    %rax,%rdi
    b064:	e8 4d 07 00 00       	call   b7b6 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b069:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b06e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b072:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b076:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b07a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b07e:	48 89 ce             	mov    %rcx,%rsi
    b081:	48 89 c7             	mov    %rax,%rdi
    b084:	e8 76 07 00 00       	call   b7ff <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b089:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b08d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b091:	c9                   	leave
    b092:	c3                   	ret
    b093:	90                   	nop

000000000000b094 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b094:	55                   	push   %rbp
    b095:	48 89 e5             	mov    %rsp,%rbp
    b098:	48 83 ec 10          	sub    $0x10,%rsp
    b09c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b0a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0a4:	48 89 c7             	mov    %rax,%rdi
    b0a7:	e8 98 07 00 00       	call   b844 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b0ac:	c9                   	leave
    b0ad:	c3                   	ret

000000000000b0ae <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b0ae:	55                   	push   %rbp
    b0af:	48 89 e5             	mov    %rsp,%rbp
    b0b2:	48 83 ec 10          	sub    $0x10,%rsp
    b0b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b0be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b0c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0c6:	ba 00 00 00 00       	mov    $0x0,%edx
    b0cb:	48 89 ce             	mov    %rcx,%rsi
    b0ce:	48 89 c7             	mov    %rax,%rdi
    b0d1:	e8 82 07 00 00       	call   b858 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b0d6:	c9                   	leave
    b0d7:	c3                   	ret

000000000000b0d8 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b0d8:	55                   	push   %rbp
    b0d9:	48 89 e5             	mov    %rsp,%rbp
    b0dc:	48 83 ec 20          	sub    $0x20,%rsp
    b0e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b0e4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b0e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b0f0:	eb 1e                	jmp    b110 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b0f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0f6:	48 89 c7             	mov    %rax,%rdi
    b0f9:	e8 c5 07 00 00       	call   b8c3 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b0fe:	48 89 c7             	mov    %rax,%rdi
    b101:	e8 cb 07 00 00       	call   b8d1 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b106:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b10b:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b110:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b115:	75 db                	jne    b0f2 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b11b:	c9                   	leave
    b11c:	c3                   	ret
    b11d:	90                   	nop

000000000000b11e <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b11e:	55                   	push   %rbp
    b11f:	48 89 e5             	mov    %rsp,%rbp
    b122:	48 83 ec 10          	sub    $0x10,%rsp
    b126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b12a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b12e:	48 89 c7             	mov    %rax,%rdi
    b131:	e8 c4 07 00 00       	call   b8fa <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b136:	c9                   	leave
    b137:	c3                   	ret

000000000000b138 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b138:	55                   	push   %rbp
    b139:	48 89 e5             	mov    %rsp,%rbp
    b13c:	48 83 ec 10          	sub    $0x10,%rsp
    b140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b144:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b148:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b14c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b150:	ba 00 00 00 00       	mov    $0x0,%edx
    b155:	48 89 ce             	mov    %rcx,%rsi
    b158:	48 89 c7             	mov    %rax,%rdi
    b15b:	e8 ae 07 00 00       	call   b90e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b160:	c9                   	leave
    b161:	c3                   	ret

000000000000b162 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b162:	55                   	push   %rbp
    b163:	48 89 e5             	mov    %rsp,%rbp
    b166:	48 83 ec 20          	sub    $0x20,%rsp
    b16a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b16e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b172:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b177:	74 40                	je     b1b9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b179:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b17d:	48 89 c7             	mov    %rax,%rdi
    b180:	e8 ea 07 00 00       	call   b96f <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b185:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b18d:	48 89 c7             	mov    %rax,%rdi
    b190:	e8 e8 07 00 00       	call   b97d <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b195:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b19a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b19e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b1a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b1a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1aa:	48 89 ce             	mov    %rcx,%rsi
    b1ad:	48 89 c7             	mov    %rax,%rdi
    b1b0:	e8 f5 07 00 00       	call   b9aa <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b1b5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b1b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b1bd:	c9                   	leave
    b1be:	c3                   	ret
    b1bf:	90                   	nop

000000000000b1c0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b1c0:	55                   	push   %rbp
    b1c1:	48 89 e5             	mov    %rsp,%rbp
    b1c4:	48 83 ec 10          	sub    $0x10,%rsp
    b1c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b1cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1d0:	48 89 c7             	mov    %rax,%rdi
    b1d3:	e8 16 08 00 00       	call   b9ee <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b1d8:	c9                   	leave
    b1d9:	c3                   	ret

000000000000b1da <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b1da:	55                   	push   %rbp
    b1db:	48 89 e5             	mov    %rsp,%rbp
    b1de:	48 83 ec 10          	sub    $0x10,%rsp
    b1e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b1ea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b1ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1f2:	ba 00 00 00 00       	mov    $0x0,%edx
    b1f7:	48 89 ce             	mov    %rcx,%rsi
    b1fa:	48 89 c7             	mov    %rax,%rdi
    b1fd:	e8 00 08 00 00       	call   ba02 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b202:	c9                   	leave
    b203:	c3                   	ret

000000000000b204 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b204:	55                   	push   %rbp
    b205:	48 89 e5             	mov    %rsp,%rbp
    b208:	48 83 ec 20          	sub    $0x20,%rsp
    b20c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b210:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b214:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b219:	74 40                	je     b25b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b21b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b21f:	48 89 c7             	mov    %rax,%rdi
    b222:	e8 3c 08 00 00       	call   ba63 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b227:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b22b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b22f:	48 89 c7             	mov    %rax,%rdi
    b232:	e8 3a 08 00 00       	call   ba71 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b237:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b23c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b240:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b244:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b24c:	48 89 ce             	mov    %rcx,%rsi
    b24f:	48 89 c7             	mov    %rax,%rdi
    b252:	e8 40 08 00 00       	call   ba97 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b257:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b25b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b25f:	c9                   	leave
    b260:	c3                   	ret
    b261:	90                   	nop

000000000000b262 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b262:	55                   	push   %rbp
    b263:	48 89 e5             	mov    %rsp,%rbp
    b266:	48 83 ec 10          	sub    $0x10,%rsp
    b26a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b272:	48 89 c7             	mov    %rax,%rdi
    b275:	e8 62 08 00 00       	call   badc <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b27a:	c9                   	leave
    b27b:	c3                   	ret

000000000000b27c <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b27c:	55                   	push   %rbp
    b27d:	48 89 e5             	mov    %rsp,%rbp
    b280:	48 83 ec 10          	sub    $0x10,%rsp
    b284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b288:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b28c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b294:	ba 00 00 00 00       	mov    $0x0,%edx
    b299:	48 89 ce             	mov    %rcx,%rsi
    b29c:	48 89 c7             	mov    %rax,%rdi
    b29f:	e8 4c 08 00 00       	call   baf0 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b2a4:	c9                   	leave
    b2a5:	c3                   	ret

000000000000b2a6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b2a6:	55                   	push   %rbp
    b2a7:	48 89 e5             	mov    %rsp,%rbp
    b2aa:	48 83 ec 20          	sub    $0x20,%rsp
    b2ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2b2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b2b6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b2bb:	74 40                	je     b2fd <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b2bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2c1:	48 89 c7             	mov    %rax,%rdi
    b2c4:	e8 88 08 00 00       	call   bb51 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b2c9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b2cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2d1:	48 89 c7             	mov    %rax,%rdi
    b2d4:	e8 86 08 00 00       	call   bb5f <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b2d9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b2de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b2e2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b2e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b2ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2ee:	48 89 ce             	mov    %rcx,%rsi
    b2f1:	48 89 c7             	mov    %rax,%rdi
    b2f4:	e8 8d 08 00 00       	call   bb86 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b2f9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b2fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b301:	c9                   	leave
    b302:	c3                   	ret
    b303:	90                   	nop

000000000000b304 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b304:	55                   	push   %rbp
    b305:	48 89 e5             	mov    %rsp,%rbp
    b308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b30c:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b313:	03 3f 00 
      }
    b316:	5d                   	pop    %rbp
    b317:	c3                   	ret

000000000000b318 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b318:	55                   	push   %rbp
    b319:	48 89 e5             	mov    %rsp,%rbp
    b31c:	48 83 ec 20          	sub    $0x20,%rsp
    b320:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b324:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b328:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b32c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b330:	48 89 c7             	mov    %rax,%rdi
    b333:	e8 cc ff ff ff       	call   b304 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b338:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b33c:	0f 92 c0             	setb   %al
    b33f:	0f b6 c0             	movzbl %al,%eax
    b342:	48 85 c0             	test   %rax,%rax
    b345:	0f 95 c0             	setne  %al
    b348:	84 c0                	test   %al,%al
    b34a:	74 1a                	je     b366 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b34c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b353:	07 7e 00 
    b356:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b35a:	73 05                	jae    b361 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b35c:	e8 ef 8e ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b361:	e8 7a 8d ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b366:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b36a:	48 89 d0             	mov    %rdx,%rax
    b36d:	48 c1 e0 06          	shl    $0x6,%rax
    b371:	48 01 d0             	add    %rdx,%rax
    b374:	48 c1 e0 03          	shl    $0x3,%rax
    b378:	48 89 c7             	mov    %rax,%rdi
    b37b:	e8 c0 8f ff ff       	call   4340 <_Znwm@plt>
    b380:	90                   	nop
      }
    b381:	c9                   	leave
    b382:	c3                   	ret

000000000000b383 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b383:	55                   	push   %rbp
    b384:	48 89 e5             	mov    %rsp,%rbp
    b387:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b38b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b38f:	5d                   	pop    %rbp
    b390:	c3                   	ret

000000000000b391 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b391:	55                   	push   %rbp
    b392:	48 89 e5             	mov    %rsp,%rbp
    b395:	48 83 ec 10          	sub    $0x10,%rsp
    b399:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b39d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3a1:	48 89 c6             	mov    %rax,%rsi
    b3a4:	bf 08 02 00 00       	mov    $0x208,%edi
    b3a9:	e8 42 9a ff ff       	call   4df0 <_ZnwmPv>
    b3ae:	b9 08 02 00 00       	mov    $0x208,%ecx
    b3b3:	be 00 00 00 00       	mov    $0x0,%esi
    b3b8:	48 89 30             	mov    %rsi,(%rax)
    b3bb:	89 ca                	mov    %ecx,%edx
    b3bd:	48 01 c2             	add    %rax,%rdx
    b3c0:	48 83 c2 08          	add    $0x8,%rdx
    b3c4:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b3c8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b3cc:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b3d0:	48 29 d0             	sub    %rdx,%rax
    b3d3:	01 c1                	add    %eax,%ecx
    b3d5:	83 e1 f8             	and    $0xfffffff8,%ecx
    b3d8:	89 c8                	mov    %ecx,%eax
    b3da:	c1 e8 03             	shr    $0x3,%eax
    b3dd:	89 c1                	mov    %eax,%ecx
    b3df:	48 89 d7             	mov    %rdx,%rdi
    b3e2:	48 89 f0             	mov    %rsi,%rax
    b3e5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b3e8:	90                   	nop
    b3e9:	c9                   	leave
    b3ea:	c3                   	ret

000000000000b3eb <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b3eb:	55                   	push   %rbp
    b3ec:	48 89 e5             	mov    %rsp,%rbp
    b3ef:	48 83 ec 20          	sub    $0x20,%rsp
    b3f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b3fb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b3ff:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b403:	48 89 c7             	mov    %rax,%rdi
    b406:	e8 bf 07 00 00       	call   bbca <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b40b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b40f:	48 89 c7             	mov    %rax,%rdi
    b412:	e8 eb 99 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    b417:	48 89 c1             	mov    %rax,%rcx
    b41a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b41e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b422:	48 89 ce             	mov    %rcx,%rsi
    b425:	48 89 c7             	mov    %rax,%rdi
    b428:	e8 a8 07 00 00       	call   bbd5 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b42d:	c9                   	leave
    b42e:	c3                   	ret
    b42f:	90                   	nop

000000000000b430 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b430:	55                   	push   %rbp
    b431:	48 89 e5             	mov    %rsp,%rbp
    b434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b438:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b43f:	07 7e 00 
      }
    b442:	5d                   	pop    %rbp
    b443:	c3                   	ret

000000000000b444 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b444:	55                   	push   %rbp
    b445:	48 89 e5             	mov    %rsp,%rbp
    b448:	48 83 ec 20          	sub    $0x20,%rsp
    b44c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b450:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b454:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b45c:	48 89 c7             	mov    %rax,%rdi
    b45f:	e8 cc ff ff ff       	call   b430 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b464:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b468:	0f 92 c0             	setb   %al
    b46b:	0f b6 c0             	movzbl %al,%eax
    b46e:	48 85 c0             	test   %rax,%rax
    b471:	0f 95 c0             	setne  %al
    b474:	84 c0                	test   %al,%al
    b476:	74 1a                	je     b492 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b478:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    b47f:	0f fc 00 
    b482:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b486:	73 05                	jae    b48d <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b488:	e8 c3 8d ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b48d:	e8 4e 8c ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b492:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b496:	48 89 d0             	mov    %rdx,%rax
    b499:	48 c1 e0 06          	shl    $0x6,%rax
    b49d:	48 01 d0             	add    %rdx,%rax
    b4a0:	48 c1 e0 02          	shl    $0x2,%rax
    b4a4:	48 89 c7             	mov    %rax,%rdi
    b4a7:	e8 94 8e ff ff       	call   4340 <_Znwm@plt>
    b4ac:	90                   	nop
      }
    b4ad:	c9                   	leave
    b4ae:	c3                   	ret

000000000000b4af <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b4af:	55                   	push   %rbp
    b4b0:	48 89 e5             	mov    %rsp,%rbp
    b4b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b4b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4bb:	5d                   	pop    %rbp
    b4bc:	c3                   	ret

000000000000b4bd <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b4bd:	55                   	push   %rbp
    b4be:	48 89 e5             	mov    %rsp,%rbp
    b4c1:	48 83 ec 10          	sub    $0x10,%rsp
    b4c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b4c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4cd:	48 89 c6             	mov    %rax,%rsi
    b4d0:	bf 04 01 00 00       	mov    $0x104,%edi
    b4d5:	e8 16 99 ff ff       	call   4df0 <_ZnwmPv>
    b4da:	b9 04 01 00 00       	mov    $0x104,%ecx
    b4df:	be 00 00 00 00       	mov    $0x0,%esi
    b4e4:	48 89 30             	mov    %rsi,(%rax)
    b4e7:	89 ca                	mov    %ecx,%edx
    b4e9:	48 01 c2             	add    %rax,%rdx
    b4ec:	48 83 c2 08          	add    $0x8,%rdx
    b4f0:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b4f4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b4f8:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b4fc:	48 29 d0             	sub    %rdx,%rax
    b4ff:	01 c1                	add    %eax,%ecx
    b501:	83 e1 f8             	and    $0xfffffff8,%ecx
    b504:	89 c8                	mov    %ecx,%eax
    b506:	c1 e8 03             	shr    $0x3,%eax
    b509:	89 c1                	mov    %eax,%ecx
    b50b:	48 89 d7             	mov    %rdx,%rdi
    b50e:	48 89 f0             	mov    %rsi,%rax
    b511:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b514:	90                   	nop
    b515:	c9                   	leave
    b516:	c3                   	ret

000000000000b517 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b517:	55                   	push   %rbp
    b518:	48 89 e5             	mov    %rsp,%rbp
    b51b:	48 83 ec 20          	sub    $0x20,%rsp
    b51f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b523:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b527:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b52b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b52f:	48 89 c7             	mov    %rax,%rdi
    b532:	e8 0d 07 00 00       	call   bc44 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b537:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b53b:	48 89 c7             	mov    %rax,%rdi
    b53e:	e8 bf 98 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    b543:	48 89 c1             	mov    %rax,%rcx
    b546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b54a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b54e:	48 89 ce             	mov    %rcx,%rsi
    b551:	48 89 c7             	mov    %rax,%rdi
    b554:	e8 f6 06 00 00       	call   bc4f <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b559:	c9                   	leave
    b55a:	c3                   	ret
    b55b:	90                   	nop

000000000000b55c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b55c:	55                   	push   %rbp
    b55d:	48 89 e5             	mov    %rsp,%rbp
    b560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b564:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b56b:	ff ff 0f 
      }
    b56e:	5d                   	pop    %rbp
    b56f:	c3                   	ret

000000000000b570 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b570:	55                   	push   %rbp
    b571:	48 89 e5             	mov    %rsp,%rbp
    b574:	48 83 ec 20          	sub    $0x20,%rsp
    b578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b57c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b580:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b588:	48 89 c7             	mov    %rax,%rdi
    b58b:	e8 cc ff ff ff       	call   b55c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b590:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b594:	0f 92 c0             	setb   %al
    b597:	0f b6 c0             	movzbl %al,%eax
    b59a:	48 85 c0             	test   %rax,%rax
    b59d:	0f 95 c0             	setne  %al
    b5a0:	84 c0                	test   %al,%al
    b5a2:	74 1a                	je     b5be <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b5a4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b5ab:	ff ff 1f 
    b5ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b5b2:	73 05                	jae    b5b9 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b5b4:	e8 97 8c ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b5b9:	e8 22 8b ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b5be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5c2:	48 c1 e0 03          	shl    $0x3,%rax
    b5c6:	48 89 c7             	mov    %rax,%rdi
    b5c9:	e8 72 8d ff ff       	call   4340 <_Znwm@plt>
    b5ce:	90                   	nop
      }
    b5cf:	c9                   	leave
    b5d0:	c3                   	ret

000000000000b5d1 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b5d1:	55                   	push   %rbp
    b5d2:	48 89 e5             	mov    %rsp,%rbp
    b5d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b5d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5dd:	5d                   	pop    %rbp
    b5de:	c3                   	ret

000000000000b5df <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b5df:	55                   	push   %rbp
    b5e0:	48 89 e5             	mov    %rsp,%rbp
    b5e3:	48 83 ec 10          	sub    $0x10,%rsp
    b5e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b5eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ef:	48 89 c6             	mov    %rax,%rsi
    b5f2:	bf 08 00 00 00       	mov    $0x8,%edi
    b5f7:	e8 f4 97 ff ff       	call   4df0 <_ZnwmPv>
    b5fc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b603:	90                   	nop
    b604:	c9                   	leave
    b605:	c3                   	ret

000000000000b606 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b606:	55                   	push   %rbp
    b607:	48 89 e5             	mov    %rsp,%rbp
    b60a:	48 83 ec 20          	sub    $0x20,%rsp
    b60e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b616:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b61a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b61e:	48 89 c7             	mov    %rax,%rdi
    b621:	e8 98 06 00 00       	call   bcbe <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b626:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b62a:	48 89 c7             	mov    %rax,%rdi
    b62d:	e8 d0 97 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    b632:	48 89 c1             	mov    %rax,%rcx
    b635:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b639:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b63d:	48 89 ce             	mov    %rcx,%rsi
    b640:	48 89 c7             	mov    %rax,%rdi
    b643:	e8 81 06 00 00       	call   bcc9 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b648:	c9                   	leave
    b649:	c3                   	ret

000000000000b64a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b64a:	55                   	push   %rbp
    b64b:	48 89 e5             	mov    %rsp,%rbp
    b64e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b652:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b659:	ff ff 0f 
      }
    b65c:	5d                   	pop    %rbp
    b65d:	c3                   	ret

000000000000b65e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b65e:	55                   	push   %rbp
    b65f:	48 89 e5             	mov    %rsp,%rbp
    b662:	48 83 ec 20          	sub    $0x20,%rsp
    b666:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b66a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b66e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b676:	48 89 c7             	mov    %rax,%rdi
    b679:	e8 cc ff ff ff       	call   b64a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b67e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b682:	0f 92 c0             	setb   %al
    b685:	0f b6 c0             	movzbl %al,%eax
    b688:	48 85 c0             	test   %rax,%rax
    b68b:	0f 95 c0             	setne  %al
    b68e:	84 c0                	test   %al,%al
    b690:	74 1a                	je     b6ac <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b692:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b699:	ff ff 1f 
    b69c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b6a0:	73 05                	jae    b6a7 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b6a2:	e8 a9 8b ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b6a7:	e8 34 8a ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b6ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b6b0:	48 c1 e0 03          	shl    $0x3,%rax
    b6b4:	48 89 c7             	mov    %rax,%rdi
    b6b7:	e8 84 8c ff ff       	call   4340 <_Znwm@plt>
    b6bc:	90                   	nop
      }
    b6bd:	c9                   	leave
    b6be:	c3                   	ret

000000000000b6bf <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b6bf:	55                   	push   %rbp
    b6c0:	48 89 e5             	mov    %rsp,%rbp
    b6c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b6c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6cb:	5d                   	pop    %rbp
    b6cc:	c3                   	ret

000000000000b6cd <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b6cd:	55                   	push   %rbp
    b6ce:	48 89 e5             	mov    %rsp,%rbp
    b6d1:	48 83 ec 10          	sub    $0x10,%rsp
    b6d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b6d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6dd:	48 89 c6             	mov    %rax,%rsi
    b6e0:	bf 08 00 00 00       	mov    $0x8,%edi
    b6e5:	e8 06 97 ff ff       	call   4df0 <_ZnwmPv>
    b6ea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b6f1:	90                   	nop
    b6f2:	c9                   	leave
    b6f3:	c3                   	ret

000000000000b6f4 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b6f4:	55                   	push   %rbp
    b6f5:	48 89 e5             	mov    %rsp,%rbp
    b6f8:	48 83 ec 20          	sub    $0x20,%rsp
    b6fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b700:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b704:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b708:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b70c:	48 89 c7             	mov    %rax,%rdi
    b70f:	e8 12 06 00 00       	call   bd26 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b714:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b718:	48 89 c7             	mov    %rax,%rdi
    b71b:	e8 e2 96 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    b720:	48 89 c1             	mov    %rax,%rcx
    b723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b727:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b72b:	48 89 ce             	mov    %rcx,%rsi
    b72e:	48 89 c7             	mov    %rax,%rdi
    b731:	e8 fb 05 00 00       	call   bd31 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b736:	c9                   	leave
    b737:	c3                   	ret

000000000000b738 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b738:	55                   	push   %rbp
    b739:	48 89 e5             	mov    %rsp,%rbp
    b73c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b740:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    b747:	55 55 05 
      }
    b74a:	5d                   	pop    %rbp
    b74b:	c3                   	ret

000000000000b74c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b74c:	55                   	push   %rbp
    b74d:	48 89 e5             	mov    %rsp,%rbp
    b750:	48 83 ec 20          	sub    $0x20,%rsp
    b754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b75c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b764:	48 89 c7             	mov    %rax,%rdi
    b767:	e8 cc ff ff ff       	call   b738 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b76c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b770:	0f 92 c0             	setb   %al
    b773:	0f b6 c0             	movzbl %al,%eax
    b776:	48 85 c0             	test   %rax,%rax
    b779:	0f 95 c0             	setne  %al
    b77c:	84 c0                	test   %al,%al
    b77e:	74 1a                	je     b79a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b780:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    b787:	aa aa 0a 
    b78a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b78e:	73 05                	jae    b795 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b790:	e8 bb 8a ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b795:	e8 46 89 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b79a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b79e:	48 89 d0             	mov    %rdx,%rax
    b7a1:	48 01 c0             	add    %rax,%rax
    b7a4:	48 01 d0             	add    %rdx,%rax
    b7a7:	48 c1 e0 03          	shl    $0x3,%rax
    b7ab:	48 89 c7             	mov    %rax,%rdi
    b7ae:	e8 8d 8b ff ff       	call   4340 <_Znwm@plt>
    b7b3:	90                   	nop
      }
    b7b4:	c9                   	leave
    b7b5:	c3                   	ret

000000000000b7b6 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b7b6:	55                   	push   %rbp
    b7b7:	48 89 e5             	mov    %rsp,%rbp
    b7ba:	48 83 ec 10          	sub    $0x10,%rsp
    b7be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b7c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7c6:	48 89 c6             	mov    %rax,%rsi
    b7c9:	bf 18 00 00 00       	mov    $0x18,%edi
    b7ce:	e8 1d 96 ff ff       	call   4df0 <_ZnwmPv>
    b7d3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    b7d9:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    b7e0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    b7e7:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    b7ee:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    b7f5:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    b7fc:	90                   	nop
    b7fd:	c9                   	leave
    b7fe:	c3                   	ret

000000000000b7ff <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b7ff:	55                   	push   %rbp
    b800:	48 89 e5             	mov    %rsp,%rbp
    b803:	48 83 ec 20          	sub    $0x20,%rsp
    b807:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b80b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b80f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b813:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b817:	48 89 c7             	mov    %rax,%rdi
    b81a:	e8 6f 05 00 00       	call   bd8e <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b81f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b823:	48 89 c7             	mov    %rax,%rdi
    b826:	e8 d7 95 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    b82b:	48 89 c1             	mov    %rax,%rcx
    b82e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b832:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b836:	48 89 ce             	mov    %rcx,%rsi
    b839:	48 89 c7             	mov    %rax,%rdi
    b83c:	e8 58 05 00 00       	call   bd99 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b841:	c9                   	leave
    b842:	c3                   	ret
    b843:	90                   	nop

000000000000b844 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b844:	55                   	push   %rbp
    b845:	48 89 e5             	mov    %rsp,%rbp
    b848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b84c:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    b853:	49 92 04 
      }
    b856:	5d                   	pop    %rbp
    b857:	c3                   	ret

000000000000b858 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b858:	55                   	push   %rbp
    b859:	48 89 e5             	mov    %rsp,%rbp
    b85c:	48 83 ec 20          	sub    $0x20,%rsp
    b860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b864:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b868:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b86c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b870:	48 89 c7             	mov    %rax,%rdi
    b873:	e8 cc ff ff ff       	call   b844 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b878:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b87c:	0f 92 c0             	setb   %al
    b87f:	0f b6 c0             	movzbl %al,%eax
    b882:	48 85 c0             	test   %rax,%rax
    b885:	0f 95 c0             	setne  %al
    b888:	84 c0                	test   %al,%al
    b88a:	74 1a                	je     b8a6 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b88c:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    b893:	92 24 09 
    b896:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b89a:	73 05                	jae    b8a1 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b89c:	e8 af 89 ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b8a1:	e8 3a 88 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b8a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8aa:	48 89 d0             	mov    %rdx,%rax
    b8ad:	48 c1 e0 03          	shl    $0x3,%rax
    b8b1:	48 29 d0             	sub    %rdx,%rax
    b8b4:	48 c1 e0 02          	shl    $0x2,%rax
    b8b8:	48 89 c7             	mov    %rax,%rdi
    b8bb:	e8 80 8a ff ff       	call   4340 <_Znwm@plt>
    b8c0:	90                   	nop
      }
    b8c1:	c9                   	leave
    b8c2:	c3                   	ret

000000000000b8c3 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b8c3:	55                   	push   %rbp
    b8c4:	48 89 e5             	mov    %rsp,%rbp
    b8c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b8cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8cf:	5d                   	pop    %rbp
    b8d0:	c3                   	ret

000000000000b8d1 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b8d1:	55                   	push   %rbp
    b8d2:	48 89 e5             	mov    %rsp,%rbp
    b8d5:	48 83 ec 10          	sub    $0x10,%rsp
    b8d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b8dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8e1:	48 89 c6             	mov    %rax,%rsi
    b8e4:	bf 1c 00 00 00       	mov    $0x1c,%edi
    b8e9:	e8 02 95 ff ff       	call   4df0 <_ZnwmPv>
    b8ee:	48 89 c7             	mov    %rax,%rdi
    b8f1:	e8 6c 05 00 00       	call   be62 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    b8f6:	90                   	nop
    b8f7:	c9                   	leave
    b8f8:	c3                   	ret
    b8f9:	90                   	nop

000000000000b8fa <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b8fa:	55                   	push   %rbp
    b8fb:	48 89 e5             	mov    %rsp,%rbp
    b8fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b902:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b909:	ff ff 0f 
      }
    b90c:	5d                   	pop    %rbp
    b90d:	c3                   	ret

000000000000b90e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b90e:	55                   	push   %rbp
    b90f:	48 89 e5             	mov    %rsp,%rbp
    b912:	48 83 ec 20          	sub    $0x20,%rsp
    b916:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b91a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b91e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b926:	48 89 c7             	mov    %rax,%rdi
    b929:	e8 cc ff ff ff       	call   b8fa <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b92e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b932:	0f 92 c0             	setb   %al
    b935:	0f b6 c0             	movzbl %al,%eax
    b938:	48 85 c0             	test   %rax,%rax
    b93b:	0f 95 c0             	setne  %al
    b93e:	84 c0                	test   %al,%al
    b940:	74 1a                	je     b95c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b942:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b949:	ff ff 1f 
    b94c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b950:	73 05                	jae    b957 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b952:	e8 f9 88 ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b957:	e8 84 87 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b95c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b960:	48 c1 e0 03          	shl    $0x3,%rax
    b964:	48 89 c7             	mov    %rax,%rdi
    b967:	e8 d4 89 ff ff       	call   4340 <_Znwm@plt>
    b96c:	90                   	nop
      }
    b96d:	c9                   	leave
    b96e:	c3                   	ret

000000000000b96f <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b96f:	55                   	push   %rbp
    b970:	48 89 e5             	mov    %rsp,%rbp
    b973:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b97b:	5d                   	pop    %rbp
    b97c:	c3                   	ret

000000000000b97d <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b97d:	55                   	push   %rbp
    b97e:	48 89 e5             	mov    %rsp,%rbp
    b981:	48 83 ec 10          	sub    $0x10,%rsp
    b985:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b98d:	48 89 c6             	mov    %rax,%rsi
    b990:	bf 08 00 00 00       	mov    $0x8,%edi
    b995:	e8 56 94 ff ff       	call   4df0 <_ZnwmPv>
    b99a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    b9a0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    b9a7:	90                   	nop
    b9a8:	c9                   	leave
    b9a9:	c3                   	ret

000000000000b9aa <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b9aa:	55                   	push   %rbp
    b9ab:	48 89 e5             	mov    %rsp,%rbp
    b9ae:	48 83 ec 20          	sub    $0x20,%rsp
    b9b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b9be:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b9c2:	48 89 c7             	mov    %rax,%rdi
    b9c5:	e8 b3 04 00 00       	call   be7d <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b9ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9ce:	48 89 c7             	mov    %rax,%rdi
    b9d1:	e8 2c 94 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    b9d6:	48 89 c1             	mov    %rax,%rcx
    b9d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b9e1:	48 89 ce             	mov    %rcx,%rsi
    b9e4:	48 89 c7             	mov    %rax,%rdi
    b9e7:	e8 9c 04 00 00       	call   be88 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b9ec:	c9                   	leave
    b9ed:	c3                   	ret

000000000000b9ee <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b9ee:	55                   	push   %rbp
    b9ef:	48 89 e5             	mov    %rsp,%rbp
    b9f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b9f6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b9fd:	ff ff 1f 
      }
    ba00:	5d                   	pop    %rbp
    ba01:	c3                   	ret

000000000000ba02 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba02:	55                   	push   %rbp
    ba03:	48 89 e5             	mov    %rsp,%rbp
    ba06:	48 83 ec 20          	sub    $0x20,%rsp
    ba0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba1a:	48 89 c7             	mov    %rax,%rdi
    ba1d:	e8 cc ff ff ff       	call   b9ee <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    ba22:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba26:	0f 92 c0             	setb   %al
    ba29:	0f b6 c0             	movzbl %al,%eax
    ba2c:	48 85 c0             	test   %rax,%rax
    ba2f:	0f 95 c0             	setne  %al
    ba32:	84 c0                	test   %al,%al
    ba34:	74 1a                	je     ba50 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ba36:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    ba3d:	ff ff 3f 
    ba40:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba44:	73 05                	jae    ba4b <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ba46:	e8 05 88 ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ba4b:	e8 90 86 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ba50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba54:	48 c1 e0 02          	shl    $0x2,%rax
    ba58:	48 89 c7             	mov    %rax,%rdi
    ba5b:	e8 e0 88 ff ff       	call   4340 <_Znwm@plt>
    ba60:	90                   	nop
      }
    ba61:	c9                   	leave
    ba62:	c3                   	ret

000000000000ba63 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ba63:	55                   	push   %rbp
    ba64:	48 89 e5             	mov    %rsp,%rbp
    ba67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ba6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba6f:	5d                   	pop    %rbp
    ba70:	c3                   	ret

000000000000ba71 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ba71:	55                   	push   %rbp
    ba72:	48 89 e5             	mov    %rsp,%rbp
    ba75:	48 83 ec 10          	sub    $0x10,%rsp
    ba79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ba7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba81:	48 89 c6             	mov    %rax,%rsi
    ba84:	bf 04 00 00 00       	mov    $0x4,%edi
    ba89:	e8 62 93 ff ff       	call   4df0 <_ZnwmPv>
    ba8e:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    ba94:	90                   	nop
    ba95:	c9                   	leave
    ba96:	c3                   	ret

000000000000ba97 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ba97:	55                   	push   %rbp
    ba98:	48 89 e5             	mov    %rsp,%rbp
    ba9b:	48 83 ec 20          	sub    $0x20,%rsp
    ba9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baa3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    baa7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    baab:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    baaf:	48 89 c7             	mov    %rax,%rdi
    bab2:	e8 2e 04 00 00       	call   bee5 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bab7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    babb:	48 89 c7             	mov    %rax,%rdi
    babe:	e8 3f 93 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    bac3:	48 89 c1             	mov    %rax,%rcx
    bac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bace:	48 89 ce             	mov    %rcx,%rsi
    bad1:	48 89 c7             	mov    %rax,%rdi
    bad4:	e8 17 04 00 00       	call   bef0 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bad9:	c9                   	leave
    bada:	c3                   	ret
    badb:	90                   	nop

000000000000badc <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    badc:	55                   	push   %rbp
    badd:	48 89 e5             	mov    %rsp,%rbp
    bae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bae4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    baeb:	ff ff 0f 
      }
    baee:	5d                   	pop    %rbp
    baef:	c3                   	ret

000000000000baf0 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    baf0:	55                   	push   %rbp
    baf1:	48 89 e5             	mov    %rsp,%rbp
    baf4:	48 83 ec 20          	sub    $0x20,%rsp
    baf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bafc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bb04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb08:	48 89 c7             	mov    %rax,%rdi
    bb0b:	e8 cc ff ff ff       	call   badc <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    bb10:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb14:	0f 92 c0             	setb   %al
    bb17:	0f b6 c0             	movzbl %al,%eax
    bb1a:	48 85 c0             	test   %rax,%rax
    bb1d:	0f 95 c0             	setne  %al
    bb20:	84 c0                	test   %al,%al
    bb22:	74 1a                	je     bb3e <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bb24:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bb2b:	ff ff 1f 
    bb2e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb32:	73 05                	jae    bb39 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bb34:	e8 17 87 ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bb39:	e8 a2 85 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bb3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb42:	48 c1 e0 03          	shl    $0x3,%rax
    bb46:	48 89 c7             	mov    %rax,%rdi
    bb49:	e8 f2 87 ff ff       	call   4340 <_Znwm@plt>
    bb4e:	90                   	nop
      }
    bb4f:	c9                   	leave
    bb50:	c3                   	ret

000000000000bb51 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bb51:	55                   	push   %rbp
    bb52:	48 89 e5             	mov    %rsp,%rbp
    bb55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bb59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb5d:	5d                   	pop    %rbp
    bb5e:	c3                   	ret

000000000000bb5f <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bb5f:	55                   	push   %rbp
    bb60:	48 89 e5             	mov    %rsp,%rbp
    bb63:	48 83 ec 10          	sub    $0x10,%rsp
    bb67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb6f:	48 89 c6             	mov    %rax,%rsi
    bb72:	bf 08 00 00 00       	mov    $0x8,%edi
    bb77:	e8 74 92 ff ff       	call   4df0 <_ZnwmPv>
    bb7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bb83:	90                   	nop
    bb84:	c9                   	leave
    bb85:	c3                   	ret

000000000000bb86 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bb86:	55                   	push   %rbp
    bb87:	48 89 e5             	mov    %rsp,%rbp
    bb8a:	48 83 ec 20          	sub    $0x20,%rsp
    bb8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bb9a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb9e:	48 89 c7             	mov    %rax,%rdi
    bba1:	e8 a7 03 00 00       	call   bf4d <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bba6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbaa:	48 89 c7             	mov    %rax,%rdi
    bbad:	e8 50 92 ff ff       	call   4e02 <_ZSt17__size_to_integerm>
    bbb2:	48 89 c1             	mov    %rax,%rcx
    bbb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbbd:	48 89 ce             	mov    %rcx,%rsi
    bbc0:	48 89 c7             	mov    %rax,%rdi
    bbc3:	e8 90 03 00 00       	call   bf58 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bbc8:	c9                   	leave
    bbc9:	c3                   	ret

000000000000bbca <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bbca:	55                   	push   %rbp
    bbcb:	48 89 e5             	mov    %rsp,%rbp
    bbce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bbd2:	90                   	nop
    bbd3:	5d                   	pop    %rbp
    bbd4:	c3                   	ret

000000000000bbd5 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bbd5:	55                   	push   %rbp
    bbd6:	48 89 e5             	mov    %rsp,%rbp
    bbd9:	48 83 ec 20          	sub    $0x20,%rsp
    bbdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbe1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbe5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bbe9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bbee:	75 06                	jne    bbf6 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bbf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf4:	eb 4c                	jmp    bc42 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bbf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbfa:	48 89 d0             	mov    %rdx,%rax
    bbfd:	48 c1 e0 06          	shl    $0x6,%rax
    bc01:	48 01 d0             	add    %rdx,%rax
    bc04:	48 c1 e0 03          	shl    $0x3,%rax
    bc08:	48 89 c2             	mov    %rax,%rdx
    bc0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc0f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bc13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc1b:	48 89 ce             	mov    %rcx,%rsi
    bc1e:	48 89 c7             	mov    %rax,%rdi
    bc21:	e8 8f 03 00 00       	call   bfb5 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bc26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc2a:	48 89 d0             	mov    %rdx,%rax
    bc2d:	48 c1 e0 06          	shl    $0x6,%rax
    bc31:	48 01 d0             	add    %rdx,%rax
    bc34:	48 c1 e0 03          	shl    $0x3,%rax
    bc38:	48 89 c2             	mov    %rax,%rdx
    bc3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3f:	48 01 d0             	add    %rdx,%rax
    }
    bc42:	c9                   	leave
    bc43:	c3                   	ret

000000000000bc44 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bc44:	55                   	push   %rbp
    bc45:	48 89 e5             	mov    %rsp,%rbp
    bc48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bc4c:	90                   	nop
    bc4d:	5d                   	pop    %rbp
    bc4e:	c3                   	ret

000000000000bc4f <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bc4f:	55                   	push   %rbp
    bc50:	48 89 e5             	mov    %rsp,%rbp
    bc53:	48 83 ec 20          	sub    $0x20,%rsp
    bc57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc5b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc5f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bc63:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bc68:	75 06                	jne    bc70 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bc6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc6e:	eb 4c                	jmp    bcbc <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bc70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc74:	48 89 d0             	mov    %rdx,%rax
    bc77:	48 c1 e0 06          	shl    $0x6,%rax
    bc7b:	48 01 d0             	add    %rdx,%rax
    bc7e:	48 c1 e0 02          	shl    $0x2,%rax
    bc82:	48 89 c2             	mov    %rax,%rdx
    bc85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc89:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bc8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc95:	48 89 ce             	mov    %rcx,%rsi
    bc98:	48 89 c7             	mov    %rax,%rdi
    bc9b:	e8 43 03 00 00       	call   bfe3 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bca0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bca4:	48 89 d0             	mov    %rdx,%rax
    bca7:	48 c1 e0 06          	shl    $0x6,%rax
    bcab:	48 01 d0             	add    %rdx,%rax
    bcae:	48 c1 e0 02          	shl    $0x2,%rax
    bcb2:	48 89 c2             	mov    %rax,%rdx
    bcb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcb9:	48 01 d0             	add    %rdx,%rax
    }
    bcbc:	c9                   	leave
    bcbd:	c3                   	ret

000000000000bcbe <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bcbe:	55                   	push   %rbp
    bcbf:	48 89 e5             	mov    %rsp,%rbp
    bcc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bcc6:	90                   	nop
    bcc7:	5d                   	pop    %rbp
    bcc8:	c3                   	ret

000000000000bcc9 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bcc9:	55                   	push   %rbp
    bcca:	48 89 e5             	mov    %rsp,%rbp
    bccd:	48 83 ec 20          	sub    $0x20,%rsp
    bcd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcd5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcd9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bcdd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bce2:	75 06                	jne    bcea <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bce8:	eb 3a                	jmp    bd24 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bcea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bcee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bcf5:	00 
    bcf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcfa:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bcfe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd06:	48 89 ce             	mov    %rcx,%rsi
    bd09:	48 89 c7             	mov    %rax,%rdi
    bd0c:	e8 00 03 00 00       	call   c011 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    bd11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd15:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bd1c:	00 
    bd1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd21:	48 01 d0             	add    %rdx,%rax
    }
    bd24:	c9                   	leave
    bd25:	c3                   	ret

000000000000bd26 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bd26:	55                   	push   %rbp
    bd27:	48 89 e5             	mov    %rsp,%rbp
    bd2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bd2e:	90                   	nop
    bd2f:	5d                   	pop    %rbp
    bd30:	c3                   	ret

000000000000bd31 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bd31:	55                   	push   %rbp
    bd32:	48 89 e5             	mov    %rsp,%rbp
    bd35:	48 83 ec 20          	sub    $0x20,%rsp
    bd39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bd45:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bd4a:	75 06                	jne    bd52 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bd4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd50:	eb 3a                	jmp    bd8c <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bd52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd56:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bd5d:	00 
    bd5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd62:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bd66:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd6e:	48 89 ce             	mov    %rcx,%rsi
    bd71:	48 89 c7             	mov    %rax,%rdi
    bd74:	e8 c6 02 00 00       	call   c03f <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    bd79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd7d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bd84:	00 
    bd85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd89:	48 01 d0             	add    %rdx,%rax
    }
    bd8c:	c9                   	leave
    bd8d:	c3                   	ret

000000000000bd8e <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bd8e:	55                   	push   %rbp
    bd8f:	48 89 e5             	mov    %rsp,%rbp
    bd92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bd96:	90                   	nop
    bd97:	5d                   	pop    %rbp
    bd98:	c3                   	ret

000000000000bd99 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bd99:	55                   	push   %rbp
    bd9a:	48 89 e5             	mov    %rsp,%rbp
    bd9d:	48 83 ec 20          	sub    $0x20,%rsp
    bda1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bda5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bda9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bdad:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bdb2:	75 06                	jne    bdba <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bdb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb8:	eb 4a                	jmp    be04 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    bdba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdbe:	48 89 d0             	mov    %rdx,%rax
    bdc1:	48 01 c0             	add    %rax,%rax
    bdc4:	48 01 d0             	add    %rdx,%rax
    bdc7:	48 c1 e0 03          	shl    $0x3,%rax
    bdcb:	48 89 c2             	mov    %rax,%rdx
    bdce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdd2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bdd6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bdda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdde:	48 89 ce             	mov    %rcx,%rsi
    bde1:	48 89 c7             	mov    %rax,%rdi
    bde4:	e8 84 02 00 00       	call   c06d <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bde9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bded:	48 89 d0             	mov    %rdx,%rax
    bdf0:	48 01 c0             	add    %rax,%rax
    bdf3:	48 01 d0             	add    %rdx,%rax
    bdf6:	48 c1 e0 03          	shl    $0x3,%rax
    bdfa:	48 89 c2             	mov    %rax,%rdx
    bdfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be01:	48 01 d0             	add    %rdx,%rax
    }
    be04:	c9                   	leave
    be05:	c3                   	ret

000000000000be06 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    be06:	55                   	push   %rbp
    be07:	48 89 e5             	mov    %rsp,%rbp
    be0a:	48 83 ec 10          	sub    $0x10,%rsp
    be0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be16:	48 89 c7             	mov    %rax,%rdi
    be19:	e8 7e 02 00 00       	call   c09c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    be1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be22:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    be26:	90                   	nop
    be27:	c9                   	leave
    be28:	c3                   	ret
    be29:	90                   	nop

000000000000be2a <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    be2a:	55                   	push   %rbp
    be2b:	48 89 e5             	mov    %rsp,%rbp
    be2e:	48 83 ec 10          	sub    $0x10,%rsp
    be32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be3a:	48 89 c7             	mov    %rax,%rdi
    be3d:	e8 c4 ff ff ff       	call   be06 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    be42:	90                   	nop
    be43:	c9                   	leave
    be44:	c3                   	ret
    be45:	90                   	nop

000000000000be46 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    be46:	55                   	push   %rbp
    be47:	48 89 e5             	mov    %rsp,%rbp
    be4a:	48 83 ec 10          	sub    $0x10,%rsp
    be4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be56:	48 89 c7             	mov    %rax,%rdi
    be59:	e8 cc ff ff ff       	call   be2a <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    be5e:	90                   	nop
    be5f:	c9                   	leave
    be60:	c3                   	ret
    be61:	90                   	nop

000000000000be62 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    be62:	55                   	push   %rbp
    be63:	48 89 e5             	mov    %rsp,%rbp
    be66:	48 83 ec 10          	sub    $0x10,%rsp
    be6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be72:	48 89 c7             	mov    %rax,%rdi
    be75:	e8 cc ff ff ff       	call   be46 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    be7a:	90                   	nop
    be7b:	c9                   	leave
    be7c:	c3                   	ret

000000000000be7d <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    be7d:	55                   	push   %rbp
    be7e:	48 89 e5             	mov    %rsp,%rbp
    be81:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be85:	90                   	nop
    be86:	5d                   	pop    %rbp
    be87:	c3                   	ret

000000000000be88 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be88:	55                   	push   %rbp
    be89:	48 89 e5             	mov    %rsp,%rbp
    be8c:	48 83 ec 20          	sub    $0x20,%rsp
    be90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    be9c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bea1:	75 06                	jne    bea9 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bea7:	eb 3a                	jmp    bee3 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bea9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bead:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    beb4:	00 
    beb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beb9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bebd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec5:	48 89 ce             	mov    %rcx,%rsi
    bec8:	48 89 c7             	mov    %rax,%rdi
    becb:	e8 d7 01 00 00       	call   c0a7 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    bed0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bed4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bedb:	00 
    bedc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee0:	48 01 d0             	add    %rdx,%rax
    }
    bee3:	c9                   	leave
    bee4:	c3                   	ret

000000000000bee5 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bee5:	55                   	push   %rbp
    bee6:	48 89 e5             	mov    %rsp,%rbp
    bee9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    beed:	90                   	nop
    beee:	5d                   	pop    %rbp
    beef:	c3                   	ret

000000000000bef0 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bef0:	55                   	push   %rbp
    bef1:	48 89 e5             	mov    %rsp,%rbp
    bef4:	48 83 ec 20          	sub    $0x20,%rsp
    bef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    befc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf04:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf09:	75 06                	jne    bf11 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf0f:	eb 3a                	jmp    bf4b <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bf11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf15:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    bf1c:	00 
    bf1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf21:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bf25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf2d:	48 89 ce             	mov    %rcx,%rsi
    bf30:	48 89 c7             	mov    %rax,%rdi
    bf33:	e8 9d 01 00 00       	call   c0d5 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    bf38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf3c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    bf43:	00 
    bf44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf48:	48 01 d0             	add    %rdx,%rax
    }
    bf4b:	c9                   	leave
    bf4c:	c3                   	ret

000000000000bf4d <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bf4d:	55                   	push   %rbp
    bf4e:	48 89 e5             	mov    %rsp,%rbp
    bf51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf55:	90                   	nop
    bf56:	5d                   	pop    %rbp
    bf57:	c3                   	ret

000000000000bf58 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf58:	55                   	push   %rbp
    bf59:	48 89 e5             	mov    %rsp,%rbp
    bf5c:	48 83 ec 20          	sub    $0x20,%rsp
    bf60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf6c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf71:	75 06                	jne    bf79 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf77:	eb 3a                	jmp    bfb3 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bf79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf7d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bf84:	00 
    bf85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf89:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bf8d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf95:	48 89 ce             	mov    %rcx,%rsi
    bf98:	48 89 c7             	mov    %rax,%rdi
    bf9b:	e8 63 01 00 00       	call   c103 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    bfa0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfa4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bfab:	00 
    bfac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfb0:	48 01 d0             	add    %rdx,%rax
    }
    bfb3:	c9                   	leave
    bfb4:	c3                   	ret

000000000000bfb5 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    bfb5:	55                   	push   %rbp
    bfb6:	48 89 e5             	mov    %rsp,%rbp
    bfb9:	48 83 ec 20          	sub    $0x20,%rsp
    bfbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfc1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bfc5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    bfc9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfcd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bfd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfd5:	48 89 ce             	mov    %rcx,%rsi
    bfd8:	48 89 c7             	mov    %rax,%rdi
    bfdb:	e8 51 01 00 00       	call   c131 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    bfe0:	90                   	nop
    bfe1:	c9                   	leave
    bfe2:	c3                   	ret

000000000000bfe3 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    bfe3:	55                   	push   %rbp
    bfe4:	48 89 e5             	mov    %rsp,%rbp
    bfe7:	48 83 ec 20          	sub    $0x20,%rsp
    bfeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bff3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    bff7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bffb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bfff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c003:	48 89 ce             	mov    %rcx,%rsi
    c006:	48 89 c7             	mov    %rax,%rdi
    c009:	e8 9b 01 00 00       	call   c1a9 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c00e:	90                   	nop
    c00f:	c9                   	leave
    c010:	c3                   	ret

000000000000c011 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c011:	55                   	push   %rbp
    c012:	48 89 e5             	mov    %rsp,%rbp
    c015:	48 83 ec 20          	sub    $0x20,%rsp
    c019:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c01d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c021:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c025:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c029:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c02d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c031:	48 89 ce             	mov    %rcx,%rsi
    c034:	48 89 c7             	mov    %rax,%rdi
    c037:	e8 e5 01 00 00       	call   c221 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c03c:	90                   	nop
    c03d:	c9                   	leave
    c03e:	c3                   	ret

000000000000c03f <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c03f:	55                   	push   %rbp
    c040:	48 89 e5             	mov    %rsp,%rbp
    c043:	48 83 ec 20          	sub    $0x20,%rsp
    c047:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c04b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c04f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c053:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c057:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c05b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c05f:	48 89 ce             	mov    %rcx,%rsi
    c062:	48 89 c7             	mov    %rax,%rdi
    c065:	e8 f2 01 00 00       	call   c25c <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c06a:	90                   	nop
    c06b:	c9                   	leave
    c06c:	c3                   	ret

000000000000c06d <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c06d:	55                   	push   %rbp
    c06e:	48 89 e5             	mov    %rsp,%rbp
    c071:	48 83 ec 20          	sub    $0x20,%rsp
    c075:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c079:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c07d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c081:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c085:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c08d:	48 89 ce             	mov    %rcx,%rsi
    c090:	48 89 c7             	mov    %rax,%rdi
    c093:	e8 ff 01 00 00       	call   c297 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c098:	90                   	nop
    c099:	c9                   	leave
    c09a:	c3                   	ret
    c09b:	90                   	nop

000000000000c09c <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c09c:	55                   	push   %rbp
    c09d:	48 89 e5             	mov    %rsp,%rbp
    c0a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0a4:	90                   	nop
    c0a5:	5d                   	pop    %rbp
    c0a6:	c3                   	ret

000000000000c0a7 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c0a7:	55                   	push   %rbp
    c0a8:	48 89 e5             	mov    %rsp,%rbp
    c0ab:	48 83 ec 20          	sub    $0x20,%rsp
    c0af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c0bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c0c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c7:	48 89 ce             	mov    %rcx,%rsi
    c0ca:	48 89 c7             	mov    %rax,%rdi
    c0cd:	e8 08 02 00 00       	call   c2da <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c0d2:	90                   	nop
    c0d3:	c9                   	leave
    c0d4:	c3                   	ret

000000000000c0d5 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c0d5:	55                   	push   %rbp
    c0d6:	48 89 e5             	mov    %rsp,%rbp
    c0d9:	48 83 ec 20          	sub    $0x20,%rsp
    c0dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c0e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c0f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0f5:	48 89 ce             	mov    %rcx,%rsi
    c0f8:	48 89 c7             	mov    %rax,%rdi
    c0fb:	e8 0d 02 00 00       	call   c30d <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c100:	90                   	nop
    c101:	c9                   	leave
    c102:	c3                   	ret

000000000000c103 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c103:	55                   	push   %rbp
    c104:	48 89 e5             	mov    %rsp,%rbp
    c107:	48 83 ec 20          	sub    $0x20,%rsp
    c10b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c10f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c113:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c117:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c11b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c11f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c123:	48 89 ce             	mov    %rcx,%rsi
    c126:	48 89 c7             	mov    %rax,%rdi
    c129:	e8 10 02 00 00       	call   c33e <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c12e:	90                   	nop
    c12f:	c9                   	leave
    c130:	c3                   	ret

000000000000c131 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c131:	55                   	push   %rbp
    c132:	48 89 e5             	mov    %rsp,%rbp
    c135:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c139:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c13d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c141:	eb 58                	jmp    c19b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c147:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c14b:	b9 08 02 00 00       	mov    $0x208,%ecx
    c150:	48 8b 32             	mov    (%rdx),%rsi
    c153:	48 89 30             	mov    %rsi,(%rax)
    c156:	89 ce                	mov    %ecx,%esi
    c158:	48 01 c6             	add    %rax,%rsi
    c15b:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c15f:	89 ce                	mov    %ecx,%esi
    c161:	48 01 d6             	add    %rdx,%rsi
    c164:	48 83 c6 08          	add    $0x8,%rsi
    c168:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c16c:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c170:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c174:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c178:	48 29 f8             	sub    %rdi,%rax
    c17b:	48 29 c2             	sub    %rax,%rdx
    c17e:	01 c1                	add    %eax,%ecx
    c180:	83 e1 f8             	and    $0xfffffff8,%ecx
    c183:	89 c8                	mov    %ecx,%eax
    c185:	c1 e8 03             	shr    $0x3,%eax
    c188:	89 c0                	mov    %eax,%eax
    c18a:	48 89 d6             	mov    %rdx,%rsi
    c18d:	48 89 c1             	mov    %rax,%rcx
    c190:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c193:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c19a:	00 
    c19b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c19f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c1a3:	75 9e                	jne    c143 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c1a5:	90                   	nop
    c1a6:	90                   	nop
    c1a7:	5d                   	pop    %rbp
    c1a8:	c3                   	ret

000000000000c1a9 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c1a9:	55                   	push   %rbp
    c1aa:	48 89 e5             	mov    %rsp,%rbp
    c1ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c1b9:	eb 58                	jmp    c213 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c1bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1c3:	b9 04 01 00 00       	mov    $0x104,%ecx
    c1c8:	48 8b 32             	mov    (%rdx),%rsi
    c1cb:	48 89 30             	mov    %rsi,(%rax)
    c1ce:	89 ce                	mov    %ecx,%esi
    c1d0:	48 01 c6             	add    %rax,%rsi
    c1d3:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c1d7:	89 ce                	mov    %ecx,%esi
    c1d9:	48 01 d6             	add    %rdx,%rsi
    c1dc:	48 83 c6 08          	add    $0x8,%rsi
    c1e0:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c1e4:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c1e8:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c1ec:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c1f0:	48 29 f8             	sub    %rdi,%rax
    c1f3:	48 29 c2             	sub    %rax,%rdx
    c1f6:	01 c1                	add    %eax,%ecx
    c1f8:	83 e1 f8             	and    $0xfffffff8,%ecx
    c1fb:	89 c8                	mov    %ecx,%eax
    c1fd:	c1 e8 03             	shr    $0x3,%eax
    c200:	89 c0                	mov    %eax,%eax
    c202:	48 89 d6             	mov    %rdx,%rsi
    c205:	48 89 c1             	mov    %rax,%rcx
    c208:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c20b:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c212:	00 
    c213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c217:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c21b:	75 9e                	jne    c1bb <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c21d:	90                   	nop
    c21e:	90                   	nop
    c21f:	5d                   	pop    %rbp
    c220:	c3                   	ret

000000000000c221 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c221:	55                   	push   %rbp
    c222:	48 89 e5             	mov    %rsp,%rbp
    c225:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c229:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c22d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c231:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c235:	48 8b 00             	mov    (%rax),%rax
    c238:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c23c:	eb 10                	jmp    c24e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c23e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c242:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c246:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c249:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c24e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c252:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c256:	75 e6                	jne    c23e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c258:	90                   	nop
    c259:	90                   	nop
    c25a:	5d                   	pop    %rbp
    c25b:	c3                   	ret

000000000000c25c <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c25c:	55                   	push   %rbp
    c25d:	48 89 e5             	mov    %rsp,%rbp
    c260:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c264:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c268:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c26c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c270:	48 8b 00             	mov    (%rax),%rax
    c273:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c277:	eb 10                	jmp    c289 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c279:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c27d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c281:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c284:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c28d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c291:	75 e6                	jne    c279 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c293:	90                   	nop
    c294:	90                   	nop
    c295:	5d                   	pop    %rbp
    c296:	c3                   	ret

000000000000c297 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c297:	55                   	push   %rbp
    c298:	48 89 e5             	mov    %rsp,%rbp
    c29b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c29f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c2a7:	eb 23                	jmp    c2cc <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c2a9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c2ad:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c2b1:	48 8b 06             	mov    (%rsi),%rax
    c2b4:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c2b8:	48 89 01             	mov    %rax,(%rcx)
    c2bb:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c2bf:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c2c3:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c2c7:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c2cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c2d4:	75 d3                	jne    c2a9 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c2d6:	90                   	nop
    c2d7:	90                   	nop
    c2d8:	5d                   	pop    %rbp
    c2d9:	c3                   	ret

000000000000c2da <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c2da:	55                   	push   %rbp
    c2db:	48 89 e5             	mov    %rsp,%rbp
    c2de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c2ea:	eb 13                	jmp    c2ff <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c2ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2f4:	48 8b 12             	mov    (%rdx),%rdx
    c2f7:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c2fa:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c2ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c303:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c307:	75 e3                	jne    c2ec <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c309:	90                   	nop
    c30a:	90                   	nop
    c30b:	5d                   	pop    %rbp
    c30c:	c3                   	ret

000000000000c30d <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c30d:	55                   	push   %rbp
    c30e:	48 89 e5             	mov    %rsp,%rbp
    c311:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c315:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c319:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c31d:	eb 11                	jmp    c330 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c31f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c323:	8b 10                	mov    (%rax),%edx
    c325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c329:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c32b:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c334:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c338:	75 e5                	jne    c31f <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c33a:	90                   	nop
    c33b:	90                   	nop
    c33c:	5d                   	pop    %rbp
    c33d:	c3                   	ret

000000000000c33e <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c33e:	55                   	push   %rbp
    c33f:	48 89 e5             	mov    %rsp,%rbp
    c342:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c346:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c34a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c34e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c352:	48 8b 00             	mov    (%rax),%rax
    c355:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c359:	eb 10                	jmp    c36b <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c35b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c35f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c363:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c366:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c36b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c36f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c373:	75 e6                	jne    c35b <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c375:	90                   	nop
    c376:	90                   	nop
    c377:	5d                   	pop    %rbp
    c378:	c3                   	ret

000000000000c379 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c379:	55                   	push   %rbp
    c37a:	48 89 e5             	mov    %rsp,%rbp
    c37d:	53                   	push   %rbx
    c37e:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c382:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c386:	be 00 00 00 00       	mov    $0x0,%esi
    c38b:	48 89 c7             	mov    %rax,%rdi
    c38e:	e8 8d 80 ff ff       	call   4420 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c393:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c396:	89 c3                	mov    %eax,%ebx
    c398:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c39c:	48 89 c7             	mov    %rax,%rdi
    c39f:	e8 ea b6 ff ff       	call   7a8e <_ZNSaI17VkLayerPropertiesEC1Ev>
    c3a4:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c3a8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c3ac:	48 89 de             	mov    %rbx,%rsi
    c3af:	48 89 c7             	mov    %rax,%rdi
    c3b2:	e8 0f b7 ff ff       	call   7ac6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c3b7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c3bb:	48 89 c7             	mov    %rax,%rdi
    c3be:	e8 e7 b6 ff ff       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c3c3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c3c7:	48 89 c7             	mov    %rax,%rdi
    c3ca:	e8 b1 b7 ff ff       	call   7b80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c3cf:	48 89 c2             	mov    %rax,%rdx
    c3d2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c3d6:	48 89 d6             	mov    %rdx,%rsi
    c3d9:	48 89 c7             	mov    %rax,%rdi
    c3dc:	e8 3f 80 ff ff       	call   4420 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    c3e1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c3e5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c3e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3ed:	48 89 c7             	mov    %rax,%rdi
    c3f0:	e8 63 04 00 00       	call   c858 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    c3f5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c3f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3fd:	48 89 c7             	mov    %rax,%rdi
    c400:	e8 79 04 00 00       	call   c87e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    c405:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c409:	eb 5b                	jmp    c466 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    c40b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c40f:	48 89 c7             	mov    %rax,%rdi
    c412:	e8 ef 04 00 00       	call   c906 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c417:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    c41b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c41f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c423:	48 89 d6             	mov    %rdx,%rsi
    c426:	48 89 c7             	mov    %rax,%rdi
    c429:	e8 f8 03 00 00       	call   c826 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    c42e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c432:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c436:	48 8b 3d 63 58 01 00 	mov    0x15863(%rip),%rdi        # 21ca0 <_ZN3vkh19validationLayerNameE>
    c43d:	48 8b 35 64 58 01 00 	mov    0x15864(%rip),%rsi        # 21ca8 <_ZN3vkh19validationLayerNameE+0x8>
    c444:	48 89 d1             	mov    %rdx,%rcx
    c447:	48 89 c2             	mov    %rax,%rdx
    c44a:	e8 da 04 00 00       	call   c929 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    c44f:	84 c0                	test   %al,%al
    c451:	74 07                	je     c45a <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    c453:	bb 01 00 00 00       	mov    $0x1,%ebx
    c458:	eb 28                	jmp    c482 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    c45a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c45e:	48 89 c7             	mov    %rax,%rdi
    c461:	e8 7c 04 00 00       	call   c8e2 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c466:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    c46a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c46e:	48 89 d6             	mov    %rdx,%rsi
    c471:	48 89 c7             	mov    %rax,%rdi
    c474:	e8 2e 04 00 00       	call   c8a7 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c479:	84 c0                	test   %al,%al
    c47b:	75 8e                	jne    c40b <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    c47d:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    c482:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c486:	48 89 c7             	mov    %rax,%rdi
    c489:	e8 ae b6 ff ff       	call   7b3c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c48e:	89 d8                	mov    %ebx,%eax
    c490:	eb 34                	jmp    c4c6 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c492:	48 89 c3             	mov    %rax,%rbx
    c495:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c499:	48 89 c7             	mov    %rax,%rdi
    c49c:	e8 09 b6 ff ff       	call   7aaa <_ZNSaI17VkLayerPropertiesED1Ev>
    c4a1:	48 89 d8             	mov    %rbx,%rax
    c4a4:	48 89 c7             	mov    %rax,%rdi
    c4a7:	e8 d4 81 ff ff       	call   4680 <_Unwind_Resume@plt>
}
    c4ac:	48 89 c3             	mov    %rax,%rbx
    c4af:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c4b3:	48 89 c7             	mov    %rax,%rdi
    c4b6:	e8 81 b6 ff ff       	call   7b3c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c4bb:	48 89 d8             	mov    %rbx,%rax
    c4be:	48 89 c7             	mov    %rax,%rdi
    c4c1:	e8 ba 81 ff ff       	call   4680 <_Unwind_Resume@plt>
    c4c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c4ca:	c9                   	leave
    c4cb:	c3                   	ret

000000000000c4cc <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c4cc:	55                   	push   %rbp
    c4cd:	48 89 e5             	mov    %rsp,%rbp
    c4d0:	48 83 ec 20          	sub    $0x20,%rsp
    c4d4:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c4d7:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c4da:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c4de:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c4e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c4e5:	83 f8 01             	cmp    $0x1,%eax
    c4e8:	7e 3c                	jle    c526 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c4ea:	be 0a 00 00 00       	mov    $0xa,%esi
    c4ef:	48 8d 05 ea 5f 01 00 	lea    0x15fea(%rip),%rax        # 224e0 <_ZSt4cerr@GLIBCXX_3.4>
    c4f6:	48 89 c7             	mov    %rax,%rdi
    c4f9:	e8 42 7f ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c4fe:	48 89 c2             	mov    %rax,%rdx
    c501:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c505:	48 8b 40 28          	mov    0x28(%rax),%rax
    c509:	48 89 c6             	mov    %rax,%rsi
    c50c:	48 89 d7             	mov    %rdx,%rdi
    c50f:	e8 1c 7e ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c514:	48 8b 15 7d 5a 01 00 	mov    0x15a7d(%rip),%rdx        # 21f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c51b:	48 89 d6             	mov    %rdx,%rsi
    c51e:	48 89 c7             	mov    %rax,%rdi
    c521:	e8 7a 7e ff ff       	call   43a0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c526:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c52b:	c9                   	leave
    c52c:	c3                   	ret

000000000000c52d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    c52d:	55                   	push   %rbp
    c52e:	48 89 e5             	mov    %rsp,%rbp
    c531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    c535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c539:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c53d:	0f 11 00             	movups %xmm0,(%rax)
    c540:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c544:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    c548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c54c:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    c552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c556:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    c55d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c561:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    c568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c56c:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # c4cc <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c573:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    c577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c57b:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c582:	00 
}
    c583:	90                   	nop
    c584:	5d                   	pop    %rbp
    c585:	c3                   	ret

000000000000c586 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    c586:	55                   	push   %rbp
    c587:	48 89 e5             	mov    %rsp,%rbp
    c58a:	48 83 ec 30          	sub    $0x30,%rsp
    c58e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c592:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c596:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c59a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c59e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5a2:	48 8d 15 07 a1 00 00 	lea    0xa107(%rip),%rdx        # 166b0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    c5a9:	48 89 d6             	mov    %rdx,%rsi
    c5ac:	48 89 c7             	mov    %rax,%rdi
    c5af:	e8 5c 7d ff ff       	call   4310 <vkGetInstanceProcAddr@plt>
    c5b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    c5b8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c5bd:	75 07                	jne    c5c6 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    c5bf:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    c5c4:	eb 1b                	jmp    c5e1 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    c5c6:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c5ca:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c5ce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c5d2:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c5d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5da:	48 89 c7             	mov    %rax,%rdi
    c5dd:	41 ff d0             	call   *%r8
    c5e0:	90                   	nop
}
    c5e1:	c9                   	leave
    c5e2:	c3                   	ret

000000000000c5e3 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    c5e3:	55                   	push   %rbp
    c5e4:	48 89 e5             	mov    %rsp,%rbp
    c5e7:	41 54                	push   %r12
    c5e9:	53                   	push   %rbx
    c5ea:	48 83 ec 50          	sub    $0x50,%rsp
    c5ee:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    c5f2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c5f6:	48 89 c7             	mov    %rax,%rdi
    c5f9:	e8 2f ff ff ff       	call   c52d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    c5fe:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c605:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c606:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    c60a:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    c60e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c612:	48 89 d1             	mov    %rdx,%rcx
    c615:	ba 00 00 00 00       	mov    $0x0,%edx
    c61a:	48 89 c7             	mov    %rax,%rdi
    c61d:	e8 64 ff ff ff       	call   c586 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    c622:	85 c0                	test   %eax,%eax
    c624:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c627:	84 c0                	test   %al,%al
    c629:	74 3b                	je     c666 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    c62b:	bf 10 00 00 00       	mov    $0x10,%edi
    c630:	e8 2b 7b ff ff       	call   4160 <__cxa_allocate_exception@plt>
    c635:	48 89 c3             	mov    %rax,%rbx
    c638:	48 8d 05 91 a0 00 00 	lea    0xa091(%rip),%rax        # 166d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    c63f:	48 89 c6             	mov    %rax,%rsi
    c642:	48 89 df             	mov    %rbx,%rdi
    c645:	e8 b6 7a ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    c64a:	48 8b 05 57 59 01 00 	mov    0x15957(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    c651:	48 89 c2             	mov    %rax,%rdx
    c654:	48 8d 05 e5 56 01 00 	lea    0x156e5(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    c65b:	48 89 c6             	mov    %rax,%rsi
    c65e:	48 89 df             	mov    %rbx,%rdi
    c661:	e8 ba 7f ff ff       	call   4620 <__cxa_throw@plt>
  }
  return debugMessenger;
    c666:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c66a:	eb 16                	jmp    c682 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    c66c:	49 89 c4             	mov    %rax,%r12
    c66f:	48 89 df             	mov    %rbx,%rdi
    c672:	e8 a9 7b ff ff       	call   4220 <__cxa_free_exception@plt>
    c677:	4c 89 e0             	mov    %r12,%rax
    c67a:	48 89 c7             	mov    %rax,%rdi
    c67d:	e8 fe 7f ff ff       	call   4680 <_Unwind_Resume@plt>
}
    c682:	48 83 c4 50          	add    $0x50,%rsp
    c686:	5b                   	pop    %rbx
    c687:	41 5c                	pop    %r12
    c689:	5d                   	pop    %rbp
    c68a:	c3                   	ret

000000000000c68b <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    c68b:	55                   	push   %rbp
    c68c:	48 89 e5             	mov    %rsp,%rbp
    c68f:	48 83 ec 30          	sub    $0x30,%rsp
    c693:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c697:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c69b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c69f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6a3:	48 8d 15 46 a0 00 00 	lea    0xa046(%rip),%rdx        # 166f0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    c6aa:	48 89 d6             	mov    %rdx,%rsi
    c6ad:	48 89 c7             	mov    %rax,%rdi
    c6b0:	e8 5b 7c ff ff       	call   4310 <vkGetInstanceProcAddr@plt>
    c6b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    c6b9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c6be:	74 19                	je     c6d9 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    c6c0:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c6c4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c6c8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c6cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6d0:	48 89 ce             	mov    %rcx,%rsi
    c6d3:	48 89 c7             	mov    %rax,%rdi
    c6d6:	41 ff d0             	call   *%r8
  }
}
    c6d9:	90                   	nop
    c6da:	c9                   	leave
    c6db:	c3                   	ret

000000000000c6dc <_Z41__static_initialization_and_destruction_0ii>:

    c6dc:	55                   	push   %rbp
    c6dd:	48 89 e5             	mov    %rsp,%rbp
    c6e0:	48 83 ec 10          	sub    $0x10,%rsp
    c6e4:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c6e7:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c6ea:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    c6ee:	75 3b                	jne    c72b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c6f0:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    c6f7:	75 32                	jne    c72b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c6f9:	48 8d 05 f2 5e 01 00 	lea    0x15ef2(%rip),%rax        # 225f2 <_ZStL8__ioinit>
    c700:	48 89 c7             	mov    %rax,%rdi
    c703:	e8 88 7e ff ff       	call   4590 <_ZNSt8ios_base4InitC1Ev@plt>
    c708:	48 8d 05 69 5c 01 00 	lea    0x15c69(%rip),%rax        # 22378 <__dso_handle>
    c70f:	48 89 c2             	mov    %rax,%rdx
    c712:	48 8d 05 d9 5e 01 00 	lea    0x15ed9(%rip),%rax        # 225f2 <_ZStL8__ioinit>
    c719:	48 89 c6             	mov    %rax,%rsi
    c71c:	48 8b 05 a5 58 01 00 	mov    0x158a5(%rip),%rax        # 21fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    c723:	48 89 c7             	mov    %rax,%rdi
    c726:	e8 a5 7b ff ff       	call   42d0 <__cxa_atexit@plt>
    c72b:	90                   	nop
    c72c:	c9                   	leave
    c72d:	c3                   	ret

000000000000c72e <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    c72e:	55                   	push   %rbp
    c72f:	48 89 e5             	mov    %rsp,%rbp
    c732:	be ff ff 00 00       	mov    $0xffff,%esi
    c737:	bf 01 00 00 00       	mov    $0x1,%edi
    c73c:	e8 9b ff ff ff       	call   c6dc <_Z41__static_initialization_and_destruction_0ii>
    c741:	5d                   	pop    %rbp
    c742:	c3                   	ret

000000000000c743 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    c743:	55                   	push   %rbp
    c744:	48 89 e5             	mov    %rsp,%rbp
    c747:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c74b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    c74f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c753:	0f b6 00             	movzbl (%rax),%eax
    c756:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    c758:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c75c:	0f b6 00             	movzbl (%rax),%eax
    c75f:	38 c2                	cmp    %al,%dl
    c761:	0f 92 c0             	setb   %al
      }
    c764:	5d                   	pop    %rbp
    c765:	c3                   	ret

000000000000c766 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    c766:	55                   	push   %rbp
    c767:	48 89 e5             	mov    %rsp,%rbp
    c76a:	48 83 ec 30          	sub    $0x30,%rsp
    c76e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c772:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c776:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    c77a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    c77f:	75 0a                	jne    c78b <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    c781:	b8 00 00 00 00       	mov    $0x0,%eax
    c786:	e9 99 00 00 00       	jmp    c824 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    c78b:	e8 7e 82 ff ff       	call   4a0e <_ZSt23__is_constant_evaluatedv>
    c790:	84 c0                	test   %al,%al
    c792:	74 78                	je     c80c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    c794:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c79b:	00 
    c79c:	eb 5d                	jmp    c7fb <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    c79e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c7a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7a6:	48 01 c2             	add    %rax,%rdx
    c7a9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c7ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7b1:	48 01 c8             	add    %rcx,%rax
    c7b4:	48 89 d6             	mov    %rdx,%rsi
    c7b7:	48 89 c7             	mov    %rax,%rdi
    c7ba:	e8 84 ff ff ff       	call   c743 <_ZNSt11char_traitsIcE2ltERKcS2_>
    c7bf:	84 c0                	test   %al,%al
    c7c1:	74 07                	je     c7ca <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    c7c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c7c8:	eb 5a                	jmp    c824 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    c7ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c7ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7d2:	48 01 c2             	add    %rax,%rdx
    c7d5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c7d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7dd:	48 01 c8             	add    %rcx,%rax
    c7e0:	48 89 d6             	mov    %rdx,%rsi
    c7e3:	48 89 c7             	mov    %rax,%rdi
    c7e6:	e8 58 ff ff ff       	call   c743 <_ZNSt11char_traitsIcE2ltERKcS2_>
    c7eb:	84 c0                	test   %al,%al
    c7ed:	74 07                	je     c7f6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    c7ef:	b8 01 00 00 00       	mov    $0x1,%eax
    c7f4:	eb 2e                	jmp    c824 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    c7f6:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    c7fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ff:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c803:	72 99                	jb     c79e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    c805:	b8 00 00 00 00       	mov    $0x0,%eax
    c80a:	eb 18                	jmp    c824 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    c80c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c810:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c818:	48 89 ce             	mov    %rcx,%rsi
    c81b:	48 89 c7             	mov    %rax,%rdi
    c81e:	e8 2d 79 ff ff       	call   4150 <memcmp@plt>
    c823:	90                   	nop
      }
    c824:	c9                   	leave
    c825:	c3                   	ret

000000000000c826 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    c826:	55                   	push   %rbp
    c827:	48 89 e5             	mov    %rsp,%rbp
    c82a:	48 83 ec 10          	sub    $0x10,%rsp
    c82e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c832:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    c836:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c83a:	48 89 c7             	mov    %rax,%rdi
    c83d:	e8 d7 81 ff ff       	call   4a19 <_ZNSt11char_traitsIcE6lengthEPKc>
    c842:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c846:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    c849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c84d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c851:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    c855:	90                   	nop
    c856:	c9                   	leave
    c857:	c3                   	ret

000000000000c858 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c858:	55                   	push   %rbp
    c859:	48 89 e5             	mov    %rsp,%rbp
    c85c:	48 83 ec 20          	sub    $0x20,%rsp
    c860:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c864:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c868:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c86c:	48 89 d6             	mov    %rdx,%rsi
    c86f:	48 89 c7             	mov    %rax,%rdi
    c872:	e8 27 01 00 00       	call   c99e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c87b:	c9                   	leave
    c87c:	c3                   	ret
    c87d:	90                   	nop

000000000000c87e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c87e:	55                   	push   %rbp
    c87f:	48 89 e5             	mov    %rsp,%rbp
    c882:	48 83 ec 20          	sub    $0x20,%rsp
    c886:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c88a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c88e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c892:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c896:	48 89 d6             	mov    %rdx,%rsi
    c899:	48 89 c7             	mov    %rax,%rdi
    c89c:	e8 fd 00 00 00       	call   c99e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c8a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8a5:	c9                   	leave
    c8a6:	c3                   	ret

000000000000c8a7 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c8a7:	55                   	push   %rbp
    c8a8:	48 89 e5             	mov    %rsp,%rbp
    c8ab:	53                   	push   %rbx
    c8ac:	48 83 ec 18          	sub    $0x18,%rsp
    c8b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c8b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c8b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8bc:	48 89 c7             	mov    %rax,%rdi
    c8bf:	e8 f8 00 00 00       	call   c9bc <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c8c4:	48 8b 18             	mov    (%rax),%rbx
    c8c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c8cb:	48 89 c7             	mov    %rax,%rdi
    c8ce:	e8 e9 00 00 00       	call   c9bc <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c8d3:	48 8b 00             	mov    (%rax),%rax
    c8d6:	48 39 c3             	cmp    %rax,%rbx
    c8d9:	0f 95 c0             	setne  %al
    c8dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c8e0:	c9                   	leave
    c8e1:	c3                   	ret

000000000000c8e2 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c8e2:	55                   	push   %rbp
    c8e3:	48 89 e5             	mov    %rsp,%rbp
    c8e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c8ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8ee:	48 8b 00             	mov    (%rax),%rax
    c8f1:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    c8f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8fc:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c903:	5d                   	pop    %rbp
    c904:	c3                   	ret
    c905:	90                   	nop

000000000000c906 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c906:	55                   	push   %rbp
    c907:	48 89 e5             	mov    %rsp,%rbp
    c90a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c90e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c912:	48 8b 00             	mov    (%rax),%rax
    c915:	5d                   	pop    %rbp
    c916:	c3                   	ret
    c917:	90                   	nop

000000000000c918 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    c918:	55                   	push   %rbp
    c919:	48 89 e5             	mov    %rsp,%rbp
    c91c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    c920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c924:	48 8b 00             	mov    (%rax),%rax
    c927:	5d                   	pop    %rbp
    c928:	c3                   	ret

000000000000c929 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    c929:	55                   	push   %rbp
    c92a:	48 89 e5             	mov    %rsp,%rbp
    c92d:	53                   	push   %rbx
    c92e:	48 83 ec 28          	sub    $0x28,%rsp
    c932:	48 89 f0             	mov    %rsi,%rax
    c935:	49 89 f8             	mov    %rdi,%r8
    c938:	4c 89 c6             	mov    %r8,%rsi
    c93b:	4c 89 cf             	mov    %r9,%rdi
    c93e:	48 89 c7             	mov    %rax,%rdi
    c941:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c945:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c949:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    c94d:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    c951:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c955:	48 89 c7             	mov    %rax,%rdi
    c958:	e8 bb ff ff ff       	call   c918 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    c95d:	48 89 c3             	mov    %rax,%rbx
    c960:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c964:	48 89 c7             	mov    %rax,%rdi
    c967:	e8 ac ff ff ff       	call   c918 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    c96c:	48 39 c3             	cmp    %rax,%rbx
    c96f:	75 22                	jne    c993 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    c971:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c975:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c979:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c97d:	48 89 ce             	mov    %rcx,%rsi
    c980:	48 89 c7             	mov    %rax,%rdi
    c983:	e8 42 00 00 00       	call   c9ca <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    c988:	85 c0                	test   %eax,%eax
    c98a:	75 07                	jne    c993 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    c98c:	b8 01 00 00 00       	mov    $0x1,%eax
    c991:	eb 05                	jmp    c998 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    c993:	b8 00 00 00 00       	mov    $0x0,%eax
    c998:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c99c:	c9                   	leave
    c99d:	c3                   	ret

000000000000c99e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c99e:	55                   	push   %rbp
    c99f:	48 89 e5             	mov    %rsp,%rbp
    c9a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c9aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c9ae:	48 8b 10             	mov    (%rax),%rdx
    c9b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9b5:	48 89 10             	mov    %rdx,(%rax)
    c9b8:	90                   	nop
    c9b9:	5d                   	pop    %rbp
    c9ba:	c3                   	ret
    c9bb:	90                   	nop

000000000000c9bc <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c9bc:	55                   	push   %rbp
    c9bd:	48 89 e5             	mov    %rsp,%rbp
    c9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c9c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9c8:	5d                   	pop    %rbp
    c9c9:	c3                   	ret

000000000000c9ca <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    c9ca:	55                   	push   %rbp
    c9cb:	48 89 e5             	mov    %rsp,%rbp
    c9ce:	48 83 ec 30          	sub    $0x30,%rsp
    c9d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9d6:	48 89 d1             	mov    %rdx,%rcx
    c9d9:	48 89 f0             	mov    %rsi,%rax
    c9dc:	48 89 fa             	mov    %rdi,%rdx
    c9df:	48 89 ca             	mov    %rcx,%rdx
    c9e2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c9e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    c9ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9ee:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    c9f2:	48 89 d6             	mov    %rdx,%rsi
    c9f5:	48 89 c7             	mov    %rax,%rdi
    c9f8:	e8 c0 88 ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
    c9fd:	48 8b 00             	mov    (%rax),%rax
    ca00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    ca04:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    ca08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca0c:	48 8b 40 08          	mov    0x8(%rax),%rax
    ca10:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca14:	48 89 ce             	mov    %rcx,%rsi
    ca17:	48 89 c7             	mov    %rax,%rdi
    ca1a:	e8 47 fd ff ff       	call   c766 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    ca1f:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    ca22:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    ca26:	75 19                	jne    ca41 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    ca28:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ca2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca30:	48 8b 00             	mov    (%rax),%rax
    ca33:	48 89 d6             	mov    %rdx,%rsi
    ca36:	48 89 c7             	mov    %rax,%rdi
    ca39:	e8 08 00 00 00       	call   ca46 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    ca3e:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    ca41:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    ca44:	c9                   	leave
    ca45:	c3                   	ret

000000000000ca46 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    ca46:	55                   	push   %rbp
    ca47:	48 89 e5             	mov    %rsp,%rbp
    ca4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca4e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    ca52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca56:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    ca5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    ca5e:	b8 00 00 00 80       	mov    $0x80000000,%eax
    ca63:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    ca67:	7c 07                	jl     ca70 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    ca69:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    ca6e:	eb 1b                	jmp    ca8b <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    ca70:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    ca77:	ff ff ff 
    ca7a:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    ca7e:	7f 07                	jg     ca87 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    ca80:	b8 00 00 00 80       	mov    $0x80000000,%eax
    ca85:	eb 04                	jmp    ca8b <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    ca87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ca8b:	5d                   	pop    %rbp
    ca8c:	c3                   	ret

000000000000ca8d <_Z41__static_initialization_and_destruction_0ii>:
 */
void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator);

} /* namespace vkh */
    ca8d:	55                   	push   %rbp
    ca8e:	48 89 e5             	mov    %rsp,%rbp
    ca91:	48 83 ec 10          	sub    $0x10,%rsp
    ca95:	89 7d fc             	mov    %edi,-0x4(%rbp)
    ca98:	89 75 f8             	mov    %esi,-0x8(%rbp)
    ca9b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    ca9f:	75 3b                	jne    cadc <_Z41__static_initialization_and_destruction_0ii+0x4f>
    caa1:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    caa8:	75 32                	jne    cadc <_Z41__static_initialization_and_destruction_0ii+0x4f>
    caaa:	48 8d 05 42 5b 01 00 	lea    0x15b42(%rip),%rax        # 225f3 <_ZStL8__ioinit>
    cab1:	48 89 c7             	mov    %rax,%rdi
    cab4:	e8 d7 7a ff ff       	call   4590 <_ZNSt8ios_base4InitC1Ev@plt>
    cab9:	48 8d 05 b8 58 01 00 	lea    0x158b8(%rip),%rax        # 22378 <__dso_handle>
    cac0:	48 89 c2             	mov    %rax,%rdx
    cac3:	48 8d 05 29 5b 01 00 	lea    0x15b29(%rip),%rax        # 225f3 <_ZStL8__ioinit>
    caca:	48 89 c6             	mov    %rax,%rsi
    cacd:	48 8b 05 f4 54 01 00 	mov    0x154f4(%rip),%rax        # 21fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cad4:	48 89 c7             	mov    %rax,%rdi
    cad7:	e8 f4 77 ff ff       	call   42d0 <__cxa_atexit@plt>
    cadc:	90                   	nop
    cadd:	c9                   	leave
    cade:	c3                   	ret

000000000000cadf <_GLOBAL__sub_I_vkh.cpp>:
    cadf:	55                   	push   %rbp
    cae0:	48 89 e5             	mov    %rsp,%rbp
    cae3:	be ff ff 00 00       	mov    $0xffff,%esi
    cae8:	bf 01 00 00 00       	mov    $0x1,%edi
    caed:	e8 9b ff ff ff       	call   ca8d <_Z41__static_initialization_and_destruction_0ii>
    caf2:	5d                   	pop    %rbp
    caf3:	c3                   	ret

000000000000caf4 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    caf4:	55                   	push   %rbp
    caf5:	48 89 e5             	mov    %rsp,%rbp
    caf8:	48 83 ec 10          	sub    $0x10,%rsp
    cafc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    cb00:	e8 2b 79 ff ff       	call   4430 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    cb05:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    cb0b:	b9 00 00 00 00       	mov    $0x0,%ecx
    cb10:	48 8d 05 01 a8 00 00 	lea    0xa801(%rip),%rax        # 17318 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cb17:	48 89 c2             	mov    %rax,%rdx
    cb1a:	be 58 02 00 00       	mov    $0x258,%esi
    cb1f:	bf 20 03 00 00       	mov    $0x320,%edi
    cb24:	e8 ec 8a ff ff       	call   5615 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    cb29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb2d:	48 89 02             	mov    %rax,(%rdx)
}
    cb30:	90                   	nop
    cb31:	c9                   	leave
    cb32:	c3                   	ret
    cb33:	90                   	nop

000000000000cb34 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    cb34:	55                   	push   %rbp
    cb35:	48 89 e5             	mov    %rsp,%rbp
    cb38:	53                   	push   %rbx
    cb39:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    cb40:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    cb47:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cb4b:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    cb4f:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    cb53:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    cb57:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    cb5e:	48 8d 05 b3 a7 00 00 	lea    0xa7b3(%rip),%rax        # 17318 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cb65:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    cb69:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    cb70:	48 8d 05 b4 a7 00 00 	lea    0xa7b4(%rip),%rax        # 1732b <_ZN6__pstl9execution2v1L5unseqE+0x14>
    cb77:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    cb7b:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    cb82:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    cb89:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cb8d:	48 89 c7             	mov    %rax,%rdi
    cb90:	e8 17 a1 ff ff       	call   6cac <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    cb95:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cb99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cb9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cba1:	48 89 c7             	mov    %rax,%rdi
    cba4:	e8 af 2a 00 00       	call   f658 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    cba9:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    cbb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbb4:	48 89 c7             	mov    %rax,%rdi
    cbb7:	e8 c2 2a 00 00       	call   f67e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    cbbc:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    cbc3:	eb 3c                	jmp    cc01 <_ZN9VulkanApp14createInstanceEv+0xcd>
    cbc5:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cbcc:	48 89 c7             	mov    %rax,%rdi
    cbcf:	e8 2e 2b 00 00       	call   f702 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    cbd4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    cbd8:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cbdf:	48 8d 50 10          	lea    0x10(%rax),%rdx
    cbe3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cbe7:	48 89 c6             	mov    %rax,%rsi
    cbea:	48 89 d7             	mov    %rdx,%rdi
    cbed:	e8 22 2b 00 00       	call   f714 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    cbf2:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cbf9:	48 89 c7             	mov    %rax,%rdi
    cbfc:	e8 e1 2a 00 00       	call   f6e2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    cc01:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    cc08:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cc0f:	48 89 d6             	mov    %rdx,%rsi
    cc12:	48 89 c7             	mov    %rax,%rdi
    cc15:	e8 8d 2a 00 00       	call   f6a7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cc1a:	84 c0                	test   %al,%al
    cc1c:	75 a7                	jne    cbc5 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    cc1e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cc22:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    cc29:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    cc30:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    cc34:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cc3b:	48 89 c7             	mov    %rax,%rdi
    cc3e:	e8 ea f8 ff ff       	call   c52d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    cc43:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    cc4a:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    cc4d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cc54:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    cc5b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cc5f:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    cc66:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cc6d:	48 83 c0 28          	add    $0x28,%rax
    cc71:	48 89 c7             	mov    %rax,%rdi
    cc74:	e8 3f 2b 00 00       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    cc79:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    cc7f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cc86:	48 83 c0 28          	add    $0x28,%rax
    cc8a:	48 89 c7             	mov    %rax,%rdi
    cc8d:	e8 4a 2b 00 00       	call   f7dc <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    cc92:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    cc99:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cca0:	48 83 c0 10          	add    $0x10,%rax
    cca4:	48 89 c7             	mov    %rax,%rdi
    cca7:	e8 0c 2b 00 00       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    ccac:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    ccb2:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ccb9:	48 83 c0 10          	add    $0x10,%rax
    ccbd:	48 89 c7             	mov    %rax,%rdi
    ccc0:	e8 3b 2b 00 00       	call   f800 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    ccc5:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    cccc:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ccd3:	be 00 00 00 00       	mov    $0x0,%esi
    ccd8:	48 89 c7             	mov    %rax,%rdi
    ccdb:	e8 8b 89 ff ff       	call   566b <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    cce0:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    cce7:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    cceb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ccef:	48 89 c7             	mov    %rax,%rdi
    ccf2:	e8 1d 29 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ccf7:	eb 1a                	jmp    cd13 <_ZN9VulkanApp14createInstanceEv+0x1df>
    ccf9:	48 89 c3             	mov    %rax,%rbx
    ccfc:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cd00:	48 89 c7             	mov    %rax,%rdi
    cd03:	e8 0c 29 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cd08:	48 89 d8             	mov    %rbx,%rax
    cd0b:	48 89 c7             	mov    %rax,%rdi
    cd0e:	e8 6d 79 ff ff       	call   4680 <_Unwind_Resume@plt>
    cd13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cd17:	c9                   	leave
    cd18:	c3                   	ret
    cd19:	90                   	nop

000000000000cd1a <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    cd1a:	55                   	push   %rbp
    cd1b:	48 89 e5             	mov    %rsp,%rbp
    cd1e:	41 54                	push   %r12
    cd20:	53                   	push   %rbx
    cd21:	48 83 ec 10          	sub    $0x10,%rsp
    cd25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    cd29:	e8 4b f6 ff ff       	call   c379 <_ZN3vkh27checkValidationLayerSupportEv>
    cd2e:	0f b6 c0             	movzbl %al,%eax
    cd31:	85 c0                	test   %eax,%eax
    cd33:	0f 94 c0             	sete   %al
    cd36:	84 c0                	test   %al,%al
    cd38:	74 3b                	je     cd75 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    cd3a:	bf 10 00 00 00       	mov    $0x10,%edi
    cd3f:	e8 1c 74 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    cd44:	48 89 c3             	mov    %rax,%rbx
    cd47:	48 8d 05 ea a5 00 00 	lea    0xa5ea(%rip),%rax        # 17338 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    cd4e:	48 89 c6             	mov    %rax,%rsi
    cd51:	48 89 df             	mov    %rbx,%rdi
    cd54:	e8 a7 73 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    cd59:	48 8b 05 48 52 01 00 	mov    0x15248(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    cd60:	48 89 c2             	mov    %rax,%rdx
    cd63:	48 8d 05 d6 4f 01 00 	lea    0x14fd6(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    cd6a:	48 89 c6             	mov    %rax,%rsi
    cd6d:	48 89 df             	mov    %rbx,%rdi
    cd70:	e8 ab 78 ff ff       	call   4620 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    cd75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd79:	48 8b 40 08          	mov    0x8(%rax),%rax
    cd7d:	48 89 c7             	mov    %rax,%rdi
    cd80:	e8 5e f8 ff ff       	call   c5e3 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    cd85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cd89:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    cd8d:	eb 16                	jmp    cda5 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    cd8f:	49 89 c4             	mov    %rax,%r12
    cd92:	48 89 df             	mov    %rbx,%rdi
    cd95:	e8 86 74 ff ff       	call   4220 <__cxa_free_exception@plt>
    cd9a:	4c 89 e0             	mov    %r12,%rax
    cd9d:	48 89 c7             	mov    %rax,%rdi
    cda0:	e8 db 78 ff ff       	call   4680 <_Unwind_Resume@plt>
}
    cda5:	48 83 c4 10          	add    $0x10,%rsp
    cda9:	5b                   	pop    %rbx
    cdaa:	41 5c                	pop    %r12
    cdac:	5d                   	pop    %rbp
    cdad:	c3                   	ret

000000000000cdae <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    cdae:	55                   	push   %rbp
    cdaf:	48 89 e5             	mov    %rsp,%rbp
    cdb2:	48 83 ec 10          	sub    $0x10,%rsp
    cdb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    cdba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdbe:	48 8b 08             	mov    (%rax),%rcx
    cdc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdc5:	48 8b 40 08          	mov    0x8(%rax),%rax
    cdc9:	ba 00 00 00 00       	mov    $0x0,%edx
    cdce:	48 89 ce             	mov    %rcx,%rsi
    cdd1:	48 89 c7             	mov    %rax,%rdi
    cdd4:	e8 bd 89 ff ff       	call   5796 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    cdd9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cddd:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    cde1:	90                   	nop
    cde2:	c9                   	leave
    cde3:	c3                   	ret

000000000000cde4 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    cde4:	55                   	push   %rbp
    cde5:	48 89 e5             	mov    %rsp,%rbp
    cde8:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    cdef:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    cdf6:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    cdfd:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    ce04:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    ce0b:	48 89 d6             	mov    %rdx,%rsi
    ce0e:	48 89 c7             	mov    %rax,%rdi
    ce11:	e8 63 a1 ff ff       	call   6f79 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    ce16:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    ce1c:	83 f8 02             	cmp    $0x2,%eax
    ce1f:	0f 94 c0             	sete   %al
}
    ce22:	c9                   	leave
    ce23:	c3                   	ret

000000000000ce24 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    ce24:	55                   	push   %rbp
    ce25:	48 89 e5             	mov    %rsp,%rbp
    ce28:	53                   	push   %rbx
    ce29:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    ce30:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    ce37:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    ce3e:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    ce45:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ce49:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    ce50:	48 89 d6             	mov    %rdx,%rsi
    ce53:	48 89 c7             	mov    %rax,%rdi
    ce56:	e8 47 a2 ff ff       	call   70a2 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    ce5b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ce5f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    ce66:	48 89 d6             	mov    %rdx,%rsi
    ce69:	48 89 c7             	mov    %rax,%rdi
    ce6c:	e8 65 a3 ff ff       	call   71d6 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    ce71:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ce78:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ce7c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ce83:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    ce8a:	48 89 ce             	mov    %rcx,%rsi
    ce8d:	48 89 c7             	mov    %rax,%rdi
    ce90:	e8 7a a4 ff ff       	call   730f <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    ce95:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ce9c:	00 
    ce9d:	e9 c5 00 00 00       	jmp    cf67 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    cea2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cea6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ceaa:	48 89 d6             	mov    %rdx,%rsi
    cead:	48 89 c7             	mov    %rax,%rdi
    ceb0:	e8 7f b4 ff ff       	call   8334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    ceb5:	48 89 c7             	mov    %rax,%rdi
    ceb8:	e8 95 29 00 00       	call   f852 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    cebd:	84 c0                	test   %al,%al
    cebf:	74 48                	je     cf09 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    cec1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cec5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    cec9:	48 89 d6             	mov    %rdx,%rsi
    cecc:	48 89 c7             	mov    %rax,%rdi
    cecf:	e8 60 b4 ff ff       	call   8334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    ced4:	48 89 c7             	mov    %rax,%rdi
    ced7:	e8 76 29 00 00       	call   f852 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    cedc:	84 c0                	test   %al,%al
    cede:	74 29                	je     cf09 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    cee0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cee4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ceeb:	48 89 d6             	mov    %rdx,%rsi
    ceee:	48 89 c7             	mov    %rax,%rdi
    cef1:	e8 3e b4 ff ff       	call   8334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    cef6:	48 89 c7             	mov    %rax,%rdi
    cef9:	e8 54 29 00 00       	call   f852 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    cefe:	84 c0                	test   %al,%al
    cf00:	74 07                	je     cf09 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    cf02:	b8 01 00 00 00       	mov    $0x1,%eax
    cf07:	eb 05                	jmp    cf0e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    cf09:	b8 00 00 00 00       	mov    $0x0,%eax
    cf0e:	84 c0                	test   %al,%al
    cf10:	74 50                	je     cf62 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    cf12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf16:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    cf19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf1d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cf21:	48 89 d6             	mov    %rdx,%rsi
    cf24:	48 89 c7             	mov    %rax,%rdi
    cf27:	e8 08 b4 ff ff       	call   8334 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    cf2c:	48 89 c7             	mov    %rax,%rdi
    cf2f:	e8 38 29 00 00       	call   f86c <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    cf34:	48 89 c2             	mov    %rax,%rdx
    cf37:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    cf3b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    cf3f:	48 89 ce             	mov    %rcx,%rsi
    cf42:	48 89 c7             	mov    %rax,%rdi
    cf45:	e8 54 29 00 00       	call   f89e <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    cf4a:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    cf4e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    cf55:	48 89 d6             	mov    %rdx,%rsi
    cf58:	48 89 c7             	mov    %rax,%rdi
    cf5b:	e8 94 29 00 00       	call   f8f4 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    cf60:	eb 2f                	jmp    cf91 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    cf62:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    cf67:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cf6b:	48 89 c7             	mov    %rax,%rdi
    cf6e:	e8 b1 28 00 00       	call   f824 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    cf73:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    cf77:	0f 92 c0             	setb   %al
    cf7a:	84 c0                	test   %al,%al
    cf7c:	0f 85 20 ff ff ff    	jne    cea2 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    cf82:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    cf89:	48 89 c7             	mov    %rax,%rdi
    cf8c:	e8 ef 23 00 00       	call   f380 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    cf91:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cf98:	48 89 c7             	mov    %rax,%rdi
    cf9b:	e8 94 b2 ff ff       	call   8234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    cfa0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    cfa4:	48 89 c7             	mov    %rax,%rdi
    cfa7:	e8 88 b2 ff ff       	call   8234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    cfac:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cfb0:	48 89 c7             	mov    %rax,%rdi
    cfb3:	e8 7c b2 ff ff       	call   8234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    cfb8:	eb 3f                	jmp    cff9 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    cfba:	48 89 c3             	mov    %rax,%rbx
    cfbd:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cfc4:	48 89 c7             	mov    %rax,%rdi
    cfc7:	e8 68 b2 ff ff       	call   8234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    cfcc:	eb 03                	jmp    cfd1 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    cfce:	48 89 c3             	mov    %rax,%rbx
    cfd1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    cfd5:	48 89 c7             	mov    %rax,%rdi
    cfd8:	e8 57 b2 ff ff       	call   8234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    cfdd:	eb 03                	jmp    cfe2 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    cfdf:	48 89 c3             	mov    %rax,%rbx
    cfe2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cfe6:	48 89 c7             	mov    %rax,%rdi
    cfe9:	e8 46 b2 ff ff       	call   8234 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    cfee:	48 89 d8             	mov    %rbx,%rax
    cff1:	48 89 c7             	mov    %rax,%rdi
    cff4:	e8 87 76 ff ff       	call   4680 <_Unwind_Resume@plt>
    cff9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d000:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d004:	c9                   	leave
    d005:	c3                   	ret

000000000000d006 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d006:	55                   	push   %rbp
    d007:	48 89 e5             	mov    %rsp,%rbp
    d00a:	41 54                	push   %r12
    d00c:	53                   	push   %rbx
    d00d:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d014:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d01b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d022:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d026:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d02a:	48 89 d6             	mov    %rdx,%rsi
    d02d:	48 89 c7             	mov    %rax,%rdi
    d030:	e8 d5 9d ff ff       	call   6e0a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d035:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d03c:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d03d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d041:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d045:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d049:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d04d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d051:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d055:	48 89 c7             	mov    %rax,%rdi
    d058:	e8 cb 28 00 00       	call   f928 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d05d:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d064:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d068:	48 89 c7             	mov    %rax,%rdi
    d06b:	e8 de 28 00 00       	call   f94e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d070:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d077:	e9 dd 00 00 00       	jmp    d159 <_ZN9VulkanApp12createDeviceEv+0x153>
    d07c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d083:	48 89 c7             	mov    %rax,%rdi
    d086:	e8 47 29 00 00       	call   f9d2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d08b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d08f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d093:	48 8b 10             	mov    (%rax),%rdx
    d096:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d09d:	48 89 d6             	mov    %rdx,%rsi
    d0a0:	48 89 c7             	mov    %rax,%rdi
    d0a3:	e8 3c fd ff ff       	call   cde4 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d0a8:	84 c0                	test   %al,%al
    d0aa:	74 41                	je     d0ed <_ZN9VulkanApp12createDeviceEv+0xe7>
    d0ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0b0:	48 8b 10             	mov    (%rax),%rdx
    d0b3:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d0ba:	48 89 d6             	mov    %rdx,%rsi
    d0bd:	48 89 c7             	mov    %rax,%rdi
    d0c0:	e8 f9 02 00 00       	call   d3be <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d0c5:	84 c0                	test   %al,%al
    d0c7:	74 24                	je     d0ed <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d0c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0cd:	48 8b 10             	mov    (%rax),%rdx
    d0d0:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d0d7:	48 89 d6             	mov    %rdx,%rsi
    d0da:	48 89 c7             	mov    %rax,%rdi
    d0dd:	e8 16 06 00 00       	call   d6f8 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d0e2:	84 c0                	test   %al,%al
    d0e4:	74 07                	je     d0ed <_ZN9VulkanApp12createDeviceEv+0xe7>
    d0e6:	b8 01 00 00 00       	mov    $0x1,%eax
    d0eb:	eb 05                	jmp    d0f2 <_ZN9VulkanApp12createDeviceEv+0xec>
    d0ed:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d0f2:	84 c0                	test   %al,%al
    d0f4:	74 54                	je     d14a <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d0f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0fa:	48 8b 10             	mov    (%rax),%rdx
    d0fd:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d104:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d10b:	48 89 ce             	mov    %rcx,%rsi
    d10e:	48 89 c7             	mov    %rax,%rdi
    d111:	e8 0e fd ff ff       	call   ce24 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d116:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d11d:	48 89 c7             	mov    %rax,%rdi
    d120:	e8 bf 28 00 00       	call   f9e4 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d125:	84 c0                	test   %al,%al
    d127:	74 21                	je     d14a <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d129:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d130:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d134:	48 89 d6             	mov    %rdx,%rsi
    d137:	48 89 c7             	mov    %rax,%rdi
    d13a:	e8 93 22 00 00       	call   f3d2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d13f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d143:	48 8b 00             	mov    (%rax),%rax
    d146:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d14a:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d151:	48 89 c7             	mov    %rax,%rdi
    d154:	e8 59 28 00 00       	call   f9b2 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d159:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d160:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d167:	48 89 d6             	mov    %rdx,%rsi
    d16a:	48 89 c7             	mov    %rax,%rdi
    d16d:	e8 05 28 00 00       	call   f977 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d172:	84 c0                	test   %al,%al
    d174:	0f 85 02 ff ff ff    	jne    d07c <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d17a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d17f:	75 3b                	jne    d1bc <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d181:	bf 10 00 00 00       	mov    $0x10,%edi
    d186:	e8 d5 6f ff ff       	call   4160 <__cxa_allocate_exception@plt>
    d18b:	48 89 c3             	mov    %rax,%rbx
    d18e:	48 8d 05 cb a1 00 00 	lea    0xa1cb(%rip),%rax        # 17360 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d195:	48 89 c6             	mov    %rax,%rsi
    d198:	48 89 df             	mov    %rbx,%rdi
    d19b:	e8 60 6f ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d1a0:	48 8b 05 01 4e 01 00 	mov    0x14e01(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d1a7:	48 89 c2             	mov    %rax,%rdx
    d1aa:	48 8d 05 8f 4b 01 00 	lea    0x14b8f(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d1b1:	48 89 c6             	mov    %rax,%rsi
    d1b4:	48 89 df             	mov    %rbx,%rdi
    d1b7:	e8 64 74 ff ff       	call   4620 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d1bc:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d1c0:	48 89 c7             	mov    %rax,%rdi
    d1c3:	e8 34 22 00 00       	call   f3fc <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d1c8:	8b 00                	mov    (%rax),%eax
    d1ca:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d1cd:	f3 0f 10 05 3b a5 00 	movss  0xa53b(%rip),%xmm0        # 17710 <_ZN6__pstl9execution2v1L5unseqE+0x3f9>
    d1d4:	00 
    d1d5:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d1da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d1de:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d1e5:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d1ec:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d1f1:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d1f8:	00 00 00 
  queueInfo.pNext = nullptr;
    d1fb:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d202:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d206:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d209:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d20f:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d216:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d219:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d21d:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d221:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d228:	b8 00 00 00 00       	mov    $0x0,%eax
    d22d:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d232:	48 89 d7             	mov    %rdx,%rdi
    d235:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d238:	48 89 fa             	mov    %rdi,%rdx
    d23b:	89 02                	mov    %eax,(%rdx)
    d23d:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d241:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d245:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d24c:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d253:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d25a:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d261:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d268:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d269:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d270:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d273:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d27a:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d27e:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d285:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d288:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d28f:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d296:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d29d:	48 05 88 00 00 00    	add    $0x88,%rax
    d2a3:	48 89 c7             	mov    %rax,%rdi
    d2a6:	e8 0d 25 00 00       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d2ab:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d2b1:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d2b8:	48 05 88 00 00 00    	add    $0x88,%rax
    d2be:	48 89 c7             	mov    %rax,%rdi
    d2c1:	e8 3a 25 00 00       	call   f800 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d2c6:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d2cd:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d2d4:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d2db:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d2e2:	48 83 c0 28          	add    $0x28,%rax
    d2e6:	48 89 c7             	mov    %rax,%rdi
    d2e9:	e8 ca 24 00 00       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d2ee:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d2f4:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d2fb:	48 83 c0 28          	add    $0x28,%rax
    d2ff:	48 89 c7             	mov    %rax,%rdi
    d302:	e8 d5 24 00 00       	call   f7dc <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d307:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d30e:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d315:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d319:	ba 00 00 00 00       	mov    $0x0,%edx
    d31e:	48 89 ce             	mov    %rcx,%rsi
    d321:	48 89 c7             	mov    %rax,%rdi
    d324:	e8 d5 83 ff ff       	call   56fe <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d329:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d330:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d334:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d33b:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d33f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d346:	48 8b 40 50          	mov    0x50(%rax),%rax
    d34a:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d34d:	48 89 d1             	mov    %rdx,%rcx
    d350:	ba 00 00 00 00       	mov    $0x0,%edx
    d355:	48 89 c7             	mov    %rax,%rdi
    d358:	e8 93 71 ff ff       	call   44f0 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d35d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d364:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d368:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d36c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d373:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d376:	89 50 68             	mov    %edx,0x68(%rax)
}
    d379:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d37d:	48 89 c7             	mov    %rax,%rdi
    d380:	e8 af ab ff ff       	call   7f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d385:	eb 2a                	jmp    d3b1 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d387:	49 89 c4             	mov    %rax,%r12
    d38a:	48 89 df             	mov    %rbx,%rdi
    d38d:	e8 8e 6e ff ff       	call   4220 <__cxa_free_exception@plt>
    d392:	4c 89 e3             	mov    %r12,%rbx
    d395:	eb 03                	jmp    d39a <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d397:	48 89 c3             	mov    %rax,%rbx
    d39a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d39e:	48 89 c7             	mov    %rax,%rdi
    d3a1:	e8 8e ab ff ff       	call   7f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d3a6:	48 89 d8             	mov    %rbx,%rax
    d3a9:	48 89 c7             	mov    %rax,%rdi
    d3ac:	e8 cf 72 ff ff       	call   4680 <_Unwind_Resume@plt>
    d3b1:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d3b8:	5b                   	pop    %rbx
    d3b9:	41 5c                	pop    %r12
    d3bb:	5d                   	pop    %rbp
    d3bc:	c3                   	ret
    d3bd:	90                   	nop

000000000000d3be <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d3be:	55                   	push   %rbp
    d3bf:	48 89 e5             	mov    %rsp,%rbp
    d3c2:	53                   	push   %rbx
    d3c3:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d3ca:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d3d1:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    d3d8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d3df:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    d3e6:	ba 00 00 00 00       	mov    $0x0,%edx
    d3eb:	48 89 ce             	mov    %rcx,%rsi
    d3ee:	48 89 c7             	mov    %rax,%rdi
    d3f1:	e8 3f 97 ff ff       	call   6b35 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    d3f6:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d3fd:	48 89 c7             	mov    %rax,%rdi
    d400:	e8 73 20 00 00       	call   f478 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    d405:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d40c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d410:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d414:	48 89 c7             	mov    %rax,%rdi
    d417:	e8 de 26 00 00       	call   fafa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d41c:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    d423:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d427:	48 89 c7             	mov    %rax,%rdi
    d42a:	e8 f1 26 00 00       	call   fb20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d42f:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    d436:	e9 8c 00 00 00       	jmp    d4c7 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    d43b:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d442:	48 89 c7             	mov    %rax,%rdi
    d445:	e8 5e 27 00 00       	call   fba8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d44a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    d44e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d455:	48 89 c7             	mov    %rax,%rdi
    d458:	e8 33 72 ff ff       	call   4690 <_ZNSaIcEC1Ev@plt>
    d45d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d461:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    d468:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d46f:	48 89 ce             	mov    %rcx,%rsi
    d472:	48 89 c7             	mov    %rax,%rdi
    d475:	e8 56 76 ff ff       	call   4ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d47a:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    d481:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d488:	48 89 d6             	mov    %rdx,%rsi
    d48b:	48 89 c7             	mov    %rax,%rdi
    d48e:	e8 27 27 00 00       	call   fbba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d493:	8b 10                	mov    (%rax),%edx
    d495:	83 c2 01             	add    $0x1,%edx
    d498:	89 10                	mov    %edx,(%rax)
    d49a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d4a1:	48 89 c7             	mov    %rax,%rdi
    d4a4:	e8 27 6d ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d4a9:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d4b0:	48 89 c7             	mov    %rax,%rdi
    d4b3:	e8 28 6f ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    d4b8:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d4bf:	48 89 c7             	mov    %rax,%rdi
    d4c2:	e8 bd 26 00 00       	call   fb84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d4c7:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    d4ce:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d4d5:	48 89 d6             	mov    %rdx,%rsi
    d4d8:	48 89 c7             	mov    %rax,%rdi
    d4db:	e8 69 26 00 00       	call   fb49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d4e0:	84 c0                	test   %al,%al
    d4e2:	0f 85 53 ff ff ff    	jne    d43b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    d4e8:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    d4ef:	48 05 88 00 00 00    	add    $0x88,%rax
    d4f5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d4f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4fd:	48 89 c7             	mov    %rax,%rdi
    d500:	e8 53 21 00 00       	call   f658 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d505:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    d50c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d510:	48 89 c7             	mov    %rax,%rdi
    d513:	e8 66 21 00 00       	call   f67e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d518:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    d51f:	e9 ed 00 00 00       	jmp    d611 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    d524:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d52b:	48 89 c7             	mov    %rax,%rdi
    d52e:	e8 cf 21 00 00       	call   f702 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d533:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    d537:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d53b:	48 89 c7             	mov    %rax,%rdi
    d53e:	e8 4d 71 ff ff       	call   4690 <_ZNSaIcEC1Ev@plt>
    d543:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d547:	48 8b 08             	mov    (%rax),%rcx
    d54a:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    d54e:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d555:	48 89 ce             	mov    %rcx,%rsi
    d558:	48 89 c7             	mov    %rax,%rdi
    d55b:	e8 70 75 ff ff       	call   4ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d560:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d567:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d56e:	48 89 d6             	mov    %rdx,%rsi
    d571:	48 89 c7             	mov    %rax,%rdi
    d574:	e8 41 26 00 00       	call   fbba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d579:	8b 10                	mov    (%rax),%edx
    d57b:	83 c2 01             	add    $0x1,%edx
    d57e:	89 10                	mov    %edx,(%rax)
    d580:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d587:	48 89 c7             	mov    %rax,%rdi
    d58a:	e8 41 6c ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d58f:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d593:	48 89 c7             	mov    %rax,%rdi
    d596:	e8 45 6e ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    d59b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d59f:	48 89 c7             	mov    %rax,%rdi
    d5a2:	e8 e9 70 ff ff       	call   4690 <_ZNSaIcEC1Ev@plt>
    d5a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d5ab:	48 8b 08             	mov    (%rax),%rcx
    d5ae:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d5b2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d5b6:	48 89 ce             	mov    %rcx,%rsi
    d5b9:	48 89 c7             	mov    %rax,%rdi
    d5bc:	e8 0f 75 ff ff       	call   4ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d5c1:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d5c5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d5cc:	48 89 d6             	mov    %rdx,%rsi
    d5cf:	48 89 c7             	mov    %rax,%rdi
    d5d2:	e8 e3 25 00 00       	call   fbba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d5d7:	8b 00                	mov    (%rax),%eax
    d5d9:	83 f8 01             	cmp    $0x1,%eax
    d5dc:	0f 96 c3             	setbe  %bl
    d5df:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d5e3:	48 89 c7             	mov    %rax,%rdi
    d5e6:	e8 e5 6b ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d5eb:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d5ef:	48 89 c7             	mov    %rax,%rdi
    d5f2:	e8 e9 6d ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    d5f7:	84 db                	test   %bl,%bl
    d5f9:	74 07                	je     d602 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    d5fb:	bb 00 00 00 00       	mov    $0x0,%ebx
    d600:	eb 35                	jmp    d637 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    d602:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d609:	48 89 c7             	mov    %rax,%rdi
    d60c:	e8 d1 20 00 00       	call   f6e2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d611:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    d618:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d61f:	48 89 d6             	mov    %rdx,%rsi
    d622:	48 89 c7             	mov    %rax,%rdi
    d625:	e8 7d 20 00 00       	call   f6a7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d62a:	84 c0                	test   %al,%al
    d62c:	0f 85 f2 fe ff ff    	jne    d524 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    d632:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    d637:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d63e:	48 89 c7             	mov    %rax,%rdi
    d641:	e8 4e 1e 00 00       	call   f494 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d646:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d64d:	48 89 c7             	mov    %rax,%rdi
    d650:	e8 55 a6 ff ff       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d655:	89 d8                	mov    %ebx,%eax
    d657:	e9 96 00 00 00       	jmp    d6f2 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    d65c:	48 89 c3             	mov    %rax,%rbx
    d65f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d666:	48 89 c7             	mov    %rax,%rdi
    d669:	e8 62 6b ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d66e:	eb 03                	jmp    d673 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    d670:	48 89 c3             	mov    %rax,%rbx
    d673:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d67a:	48 89 c7             	mov    %rax,%rdi
    d67d:	e8 5e 6d ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    d682:	eb 45                	jmp    d6c9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    d684:	48 89 c3             	mov    %rax,%rbx
    d687:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d68e:	48 89 c7             	mov    %rax,%rdi
    d691:	e8 3a 6b ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d696:	eb 03                	jmp    d69b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    d698:	48 89 c3             	mov    %rax,%rbx
    d69b:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d69f:	48 89 c7             	mov    %rax,%rdi
    d6a2:	e8 39 6d ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    d6a7:	eb 20                	jmp    d6c9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    d6a9:	48 89 c3             	mov    %rax,%rbx
    d6ac:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d6b0:	48 89 c7             	mov    %rax,%rdi
    d6b3:	e8 18 6b ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d6b8:	eb 03                	jmp    d6bd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    d6ba:	48 89 c3             	mov    %rax,%rbx
    d6bd:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d6c1:	48 89 c7             	mov    %rax,%rdi
    d6c4:	e8 17 6d ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
}
    d6c9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d6d0:	48 89 c7             	mov    %rax,%rdi
    d6d3:	e8 bc 1d 00 00       	call   f494 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d6d8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d6df:	48 89 c7             	mov    %rax,%rdi
    d6e2:	e8 c3 a5 ff ff       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d6e7:	48 89 d8             	mov    %rbx,%rax
    d6ea:	48 89 c7             	mov    %rax,%rdi
    d6ed:	e8 8e 6f ff ff       	call   4680 <_Unwind_Resume@plt>
    d6f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d6f6:	c9                   	leave
    d6f7:	c3                   	ret

000000000000d6f8 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    d6f8:	55                   	push   %rbp
    d6f9:	48 89 e5             	mov    %rsp,%rbp
    d6fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d700:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    d704:	b8 01 00 00 00       	mov    $0x1,%eax
}
    d709:	5d                   	pop    %rbp
    d70a:	c3                   	ret
    d70b:	90                   	nop

000000000000d70c <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    d70c:	55                   	push   %rbp
    d70d:	48 89 e5             	mov    %rsp,%rbp
    d710:	41 54                	push   %r12
    d712:	53                   	push   %rbx
    d713:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    d71a:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    d721:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    d728:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d72f:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d733:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d73a:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d73e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d742:	48 89 ce             	mov    %rcx,%rsi
    d745:	48 89 c7             	mov    %rax,%rdi
    d748:	e8 32 9d ff ff       	call   747f <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    d74d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d754:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d758:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d75f:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d763:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d76a:	48 89 ce             	mov    %rcx,%rsi
    d76d:	48 89 c7             	mov    %rax,%rdi
    d770:	e8 b8 9d ff ff       	call   752d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    d775:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d77c:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d780:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d787:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d78b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d792:	48 89 ce             	mov    %rcx,%rsi
    d795:	48 89 c7             	mov    %rax,%rdi
    d798:	e8 07 9f ff ff       	call   76a4 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    d79d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d7a4:	48 89 c6             	mov    %rax,%rsi
    d7a7:	b8 00 00 00 00       	mov    $0x0,%eax
    d7ac:	ba 0d 00 00 00       	mov    $0xd,%edx
    d7b1:	48 89 f7             	mov    %rsi,%rdi
    d7b4:	48 89 d1             	mov    %rdx,%rcx
    d7b7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    d7ba:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d7c1:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    d7c7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d7ce:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d7d5:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    d7d6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d7dd:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d7e1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d7e8:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    d7ec:	8b 45 80             	mov    -0x80(%rbp),%eax
    d7ef:	83 c0 01             	add    $0x1,%eax
    d7f2:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    d7f5:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d7f8:	85 c0                	test   %eax,%eax
    d7fa:	74 0e                	je     d80a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    d7fc:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    d7ff:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    d802:	73 06                	jae    d80a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    d804:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d807:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    d80a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d811:	8b 55 ec             	mov    -0x14(%rbp),%edx
    d814:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    d817:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d81e:	48 89 c7             	mov    %rax,%rdi
    d821:	e8 98 24 00 00       	call   fcbe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    d826:	84 c0                	test   %al,%al
    d828:	74 3b                	je     d865 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    d82a:	bf 10 00 00 00       	mov    $0x10,%edi
    d82f:	e8 2c 69 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    d834:	48 89 c3             	mov    %rax,%rbx
    d837:	48 8d 05 46 9b 00 00 	lea    0x9b46(%rip),%rax        # 17384 <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    d83e:	48 89 c6             	mov    %rax,%rsi
    d841:	48 89 df             	mov    %rbx,%rdi
    d844:	e8 b7 68 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d849:	48 8b 05 58 47 01 00 	mov    0x14758(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d850:	48 89 c2             	mov    %rax,%rdx
    d853:	48 8d 05 e6 44 01 00 	lea    0x144e6(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d85a:	48 89 c6             	mov    %rax,%rsi
    d85d:	48 89 df             	mov    %rbx,%rdi
    d860:	e8 bb 6d ff ff       	call   4620 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    d865:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d86c:	be 00 00 00 00       	mov    $0x0,%esi
    d871:	48 89 c7             	mov    %rax,%rdi
    d874:	e8 87 24 00 00       	call   fd00 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    d879:	8b 10                	mov    (%rax),%edx
    d87b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d882:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    d885:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d88c:	be 00 00 00 00       	mov    $0x0,%esi
    d891:	48 89 c7             	mov    %rax,%rdi
    d894:	e8 67 24 00 00       	call   fd00 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    d899:	8b 50 04             	mov    0x4(%rax),%edx
    d89c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d8a3:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    d8a6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d8ad:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d8b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8b5:	48 89 c7             	mov    %rax,%rdi
    d8b8:	e8 63 24 00 00       	call   fd20 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    d8bd:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    d8c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8c8:	48 89 c7             	mov    %rax,%rdi
    d8cb:	e8 76 24 00 00       	call   fd46 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    d8d0:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    d8d7:	eb 5b                	jmp    d934 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    d8d9:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    d8e0:	48 89 c7             	mov    %rax,%rdi
    d8e3:	e8 e2 24 00 00       	call   fdca <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    d8e8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    d8ec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d8f0:	8b 00                	mov    (%rax),%eax
    d8f2:	83 f8 2b             	cmp    $0x2b,%eax
    d8f5:	75 2e                	jne    d925 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    d8f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d8fb:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    d8fe:	85 c0                	test   %eax,%eax
    d900:	75 23                	jne    d925 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    d902:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d906:	8b 10                	mov    (%rax),%edx
    d908:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d90f:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    d912:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d916:	8b 50 04             	mov    0x4(%rax),%edx
    d919:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d920:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    d923:	eb 2c                	jmp    d951 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    d925:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    d92c:	48 89 c7             	mov    %rax,%rdi
    d92f:	e8 76 24 00 00       	call   fdaa <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    d934:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    d93b:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    d942:	48 89 d6             	mov    %rdx,%rsi
    d945:	48 89 c7             	mov    %rax,%rdi
    d948:	e8 22 24 00 00       	call   fd6f <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d94d:	84 c0                	test   %al,%al
    d94f:	75 88                	jne    d8d9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    d951:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d958:	8b 50 24             	mov    0x24(%rax),%edx
    d95b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d962:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    d965:	8b 45 88             	mov    -0x78(%rbp),%eax
    d968:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    d96b:	8b 45 8c             	mov    -0x74(%rbp),%eax
    d96e:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    d971:	8b 45 98             	mov    -0x68(%rbp),%eax
    d974:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    d977:	73 06                	jae    d97f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    d979:	8b 45 98             	mov    -0x68(%rbp),%eax
    d97c:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    d97f:	8b 45 9c             	mov    -0x64(%rbp),%eax
    d982:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    d985:	73 06                	jae    d98d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    d987:	8b 45 9c             	mov    -0x64(%rbp),%eax
    d98a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    d98d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d994:	8b 55 e8             	mov    -0x18(%rbp),%edx
    d997:	89 50 2c             	mov    %edx,0x2c(%rax)
    d99a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9a1:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d9a4:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    d9a7:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d9ae:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    d9b5:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    d9b9:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    d9bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9c4:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    d9cb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9d2:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    d9d9:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    d9e0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d9e7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d9eb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d9ef:	48 89 c7             	mov    %rax,%rdi
    d9f2:	e8 e5 23 00 00       	call   fddc <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    d9f7:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    d9fe:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    da02:	48 89 c7             	mov    %rax,%rdi
    da05:	e8 f8 23 00 00       	call   fe02 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    da0a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    da11:	eb 3c                	jmp    da4f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    da13:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    da1a:	48 89 c7             	mov    %rax,%rdi
    da1d:	e8 64 24 00 00       	call   fe86 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    da22:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    da26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    da2a:	8b 00                	mov    (%rax),%eax
    da2c:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    da2f:	75 0f                	jne    da40 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    da31:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da38:	8b 55 cc             	mov    -0x34(%rbp),%edx
    da3b:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    da3e:	eb 2c                	jmp    da6c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    da40:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    da47:	48 89 c7             	mov    %rax,%rdi
    da4a:	e8 17 24 00 00       	call   fe66 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    da4f:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    da56:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    da5d:	48 89 d6             	mov    %rdx,%rsi
    da60:	48 89 c7             	mov    %rax,%rdi
    da63:	e8 c3 23 00 00       	call   fe2b <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    da68:	84 c0                	test   %al,%al
    da6a:	75 a7                	jne    da13 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    da6c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da73:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    da7a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da81:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    da88:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da8f:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    da96:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da9d:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    daa4:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    daa5:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    daa8:	83 e0 01             	and    $0x1,%eax
    daab:	85 c0                	test   %eax,%eax
    daad:	74 1e                	je     dacd <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    daaf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dab6:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    dabd:	8b 45 ac             	mov    -0x54(%rbp),%eax
    dac0:	83 e0 01             	and    $0x1,%eax
    dac3:	85 c0                	test   %eax,%eax
    dac5:	0f 84 9b 00 00 00    	je     db66 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    dacb:	eb 3b                	jmp    db08 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dacd:	bf 10 00 00 00       	mov    $0x10,%edi
    dad2:	e8 89 66 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    dad7:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dada:	48 8d 05 c7 98 00 00 	lea    0x98c7(%rip),%rax        # 173a8 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    dae1:	48 89 c6             	mov    %rax,%rsi
    dae4:	48 89 df             	mov    %rbx,%rdi
    dae7:	e8 14 66 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    daec:	48 8b 05 b5 44 01 00 	mov    0x144b5(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    daf3:	48 89 c2             	mov    %rax,%rdx
    daf6:	48 8d 05 43 42 01 00 	lea    0x14243(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dafd:	48 89 c6             	mov    %rax,%rsi
    db00:	48 89 df             	mov    %rbx,%rdi
    db03:	e8 18 6b ff ff       	call   4620 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    db08:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db0f:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    db16:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db1d:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    db24:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db2b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    db32:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    db33:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db3a:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    db41:	00 

  return swapchainCreateInfo;
    db42:	90                   	nop
}
    db43:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    db4a:	48 89 c7             	mov    %rax,%rdi
    db4d:	e8 f6 aa ff ff       	call   8648 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    db52:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db59:	48 89 c7             	mov    %rax,%rdi
    db5c:	e8 83 a9 ff ff       	call   84e4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    db61:	e9 9c 00 00 00       	jmp    dc02 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    db66:	bf 10 00 00 00       	mov    $0x10,%edi
    db6b:	e8 f0 65 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    db70:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    db73:	48 8d 05 66 98 00 00 	lea    0x9866(%rip),%rax        # 173e0 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    db7a:	48 89 c6             	mov    %rax,%rsi
    db7d:	48 89 df             	mov    %rbx,%rdi
    db80:	e8 7b 65 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    db85:	48 8b 05 1c 44 01 00 	mov    0x1441c(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    db8c:	48 89 c2             	mov    %rax,%rdx
    db8f:	48 8d 05 aa 41 01 00 	lea    0x141aa(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    db96:	48 89 c6             	mov    %rax,%rsi
    db99:	48 89 df             	mov    %rbx,%rdi
    db9c:	e8 7f 6a ff ff       	call   4620 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    dba1:	49 89 c4             	mov    %rax,%r12
    dba4:	48 89 df             	mov    %rbx,%rdi
    dba7:	e8 74 66 ff ff       	call   4220 <__cxa_free_exception@plt>
    dbac:	4c 89 e3             	mov    %r12,%rbx
    dbaf:	eb 23                	jmp    dbd4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dbb1:	49 89 c4             	mov    %rax,%r12
    dbb4:	48 89 df             	mov    %rbx,%rdi
    dbb7:	e8 64 66 ff ff       	call   4220 <__cxa_free_exception@plt>
    dbbc:	4c 89 e3             	mov    %r12,%rbx
    dbbf:	eb 13                	jmp    dbd4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dbc1:	49 89 c4             	mov    %rax,%r12
    dbc4:	48 89 df             	mov    %rbx,%rdi
    dbc7:	e8 54 66 ff ff       	call   4220 <__cxa_free_exception@plt>
    dbcc:	4c 89 e3             	mov    %r12,%rbx
    dbcf:	eb 03                	jmp    dbd4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    dbd1:	48 89 c3             	mov    %rax,%rbx
    dbd4:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dbdb:	48 89 c7             	mov    %rax,%rdi
    dbde:	e8 65 aa ff ff       	call   8648 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    dbe3:	eb 03                	jmp    dbe8 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    dbe5:	48 89 c3             	mov    %rax,%rbx
    dbe8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dbef:	48 89 c7             	mov    %rax,%rdi
    dbf2:	e8 ed a8 ff ff       	call   84e4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    dbf7:	48 89 d8             	mov    %rbx,%rax
    dbfa:	48 89 c7             	mov    %rax,%rdi
    dbfd:	e8 7e 6a ff ff       	call   4680 <_Unwind_Resume@plt>
    dc02:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc09:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    dc10:	5b                   	pop    %rbx
    dc11:	41 5c                	pop    %r12
    dc13:	5d                   	pop    %rbp
    dc14:	c3                   	ret
    dc15:	90                   	nop

000000000000dc16 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    dc16:	55                   	push   %rbp
    dc17:	48 89 e5             	mov    %rsp,%rbp
    dc1a:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    dc1e:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    dc22:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dc26:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    dc2a:	48 89 d6             	mov    %rdx,%rsi
    dc2d:	48 89 c7             	mov    %rax,%rdi
    dc30:	e8 d7 fa ff ff       	call   d70c <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    dc35:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dc39:	48 8b 40 50          	mov    0x50(%rax),%rax
    dc3d:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    dc41:	ba 00 00 00 00       	mov    $0x0,%edx
    dc46:	48 89 ce             	mov    %rcx,%rsi
    dc49:	48 89 c7             	mov    %rax,%rdi
    dc4c:	e8 dd 7b ff ff       	call   582e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    dc51:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    dc55:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    dc59:	90                   	nop
    dc5a:	c9                   	leave
    dc5b:	c3                   	ret

000000000000dc5c <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    dc5c:	55                   	push   %rbp
    dc5d:	48 89 e5             	mov    %rsp,%rbp
    dc60:	53                   	push   %rbx
    dc61:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    dc68:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    dc6f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dc76:	48 8b 50 70          	mov    0x70(%rax),%rdx
    dc7a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dc81:	48 8b 48 50          	mov    0x50(%rax),%rcx
    dc85:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dc89:	48 89 ce             	mov    %rcx,%rsi
    dc8c:	48 89 c7             	mov    %rax,%rdi
    dc8f:	e8 87 9b ff ff       	call   781b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    dc94:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dc9b:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    dca2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dca6:	48 89 c6             	mov    %rax,%rsi
    dca9:	48 89 d7             	mov    %rdx,%rdi
    dcac:	e8 e7 21 00 00       	call   fe98 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    dcb1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dcb5:	48 89 c7             	mov    %rax,%rdi
    dcb8:	e8 ef aa ff ff       	call   87ac <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    dcbd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dcc4:	48 05 b8 00 00 00    	add    $0xb8,%rax
    dcca:	48 89 c7             	mov    %rax,%rdi
    dccd:	e8 fe 21 00 00       	call   fed0 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    dcd2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    dcd6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dcdd:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    dce4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dce8:	48 89 c6             	mov    %rax,%rsi
    dceb:	48 89 d7             	mov    %rdx,%rdi
    dcee:	e8 01 22 00 00       	call   fef4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    dcf3:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    dcfa:	00 
    dcfb:	e9 f1 00 00 00       	jmp    ddf1 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    dd00:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dd04:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    dd0b:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    dd0f:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    dd13:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    dd17:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    dd1b:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    dd22:	00 00 00 
    imageViewInfo.pNext = nullptr;
    dd25:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    dd2c:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    dd30:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dd37:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    dd3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd42:	48 89 c6             	mov    %rax,%rsi
    dd45:	48 89 d7             	mov    %rdx,%rdi
    dd48:	e8 2d 22 00 00       	call   ff7a <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    dd4d:	48 8b 00             	mov    (%rax),%rax
    dd50:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    dd54:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    dd5b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dd62:	8b 40 78             	mov    0x78(%rax),%eax
    dd65:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    dd68:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    dd6f:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    dd76:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    dd7d:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    dd84:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    dd8b:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    dd92:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    dd99:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    dda0:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    dda7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ddae:	48 8b 40 50          	mov    0x50(%rax),%rax
    ddb2:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    ddb9:	ba 00 00 00 00       	mov    $0x0,%edx
    ddbe:	48 89 ce             	mov    %rcx,%rsi
    ddc1:	48 89 c7             	mov    %rax,%rdi
    ddc4:	e8 05 7b ff ff       	call   58ce <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    ddc9:	48 89 c3             	mov    %rax,%rbx
    ddcc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ddd3:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    ddda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ddde:	48 89 c6             	mov    %rax,%rsi
    dde1:	48 89 d7             	mov    %rdx,%rdi
    dde4:	e8 b1 21 00 00       	call   ff9a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    dde9:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    ddec:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    ddf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ddf5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    ddf9:	0f 82 01 ff ff ff    	jb     dd00 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    ddff:	90                   	nop
    de00:	90                   	nop
    de01:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de05:	c9                   	leave
    de06:	c3                   	ret
    de07:	90                   	nop

000000000000de08 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    de08:	55                   	push   %rbp
    de09:	48 89 e5             	mov    %rsp,%rbp
    de0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  //
}
    de10:	90                   	nop
    de11:	5d                   	pop    %rbp
    de12:	c3                   	ret
    de13:	90                   	nop

000000000000de14 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    de14:	55                   	push   %rbp
    de15:	48 89 e5             	mov    %rsp,%rbp
    de18:	48 83 ec 30          	sub    $0x30,%rsp
    de1c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    de20:	66 0f ef c0          	pxor   %xmm0,%xmm0
    de24:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    de28:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    de2d:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    de34:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    de3b:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    de3c:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    de43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de47:	8b 40 68             	mov    0x68(%rax),%eax
    de4a:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    de4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de51:	48 8b 40 50          	mov    0x50(%rax),%rax
    de55:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    de59:	ba 00 00 00 00       	mov    $0x0,%edx
    de5e:	48 89 ce             	mov    %rcx,%rsi
    de61:	48 89 c7             	mov    %rax,%rdi
    de64:	e8 0d 7e ff ff       	call   5c76 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    de69:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    de6d:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)
}
    de74:	90                   	nop
    de75:	c9                   	leave
    de76:	c3                   	ret
    de77:	90                   	nop

000000000000de78 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    de78:	55                   	push   %rbp
    de79:	48 89 e5             	mov    %rsp,%rbp
    de7c:	41 57                	push   %r15
    de7e:	41 56                	push   %r14
    de80:	41 55                	push   %r13
    de82:	41 54                	push   %r12
    de84:	53                   	push   %rbx
    de85:	48 83 ec 38          	sub    $0x38,%rsp
    de89:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    de8d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    de91:	48 8d 58 10          	lea    0x10(%rax),%rbx
    de95:	48 8d 05 75 95 00 00 	lea    0x9575(%rip),%rax        # 17411 <_ZN6__pstl9execution2v1L5unseqE+0xfa>
    de9c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    dea0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dea4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    dea8:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    deaf:	00 
    deb0:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    deb4:	48 89 c7             	mov    %rax,%rdi
    deb7:	e8 ae 9e ff ff       	call   7d6a <_ZNSaIPKcEC1Ev>
    debc:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    dec0:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    dec4:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    dec8:	49 89 f0             	mov    %rsi,%r8
    decb:	49 89 f9             	mov    %rdi,%r9
    dece:	48 89 fa             	mov    %rdi,%rdx
    ded1:	48 89 c1             	mov    %rax,%rcx
    ded4:	4c 89 c6             	mov    %r8,%rsi
    ded7:	48 89 df             	mov    %rbx,%rdi
    deda:	e8 ad 16 00 00       	call   f58c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    dedf:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    dee3:	48 89 c7             	mov    %rax,%rdi
    dee6:	e8 9b 9e ff ff       	call   7d86 <_ZNSaIPKcED1Ev>
    deeb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    deef:	48 8d 58 28          	lea    0x28(%rax),%rbx
    def3:	4c 8d 35 e6 3d 01 00 	lea    0x13de6(%rip),%r14        # 21ce0 <C.73.0>
    defa:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    df00:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    df04:	48 89 c7             	mov    %rax,%rdi
    df07:	e8 5e 9e ff ff       	call   7d6a <_ZNSaIPKcEC1Ev>
    df0c:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    df10:	4d 89 f0             	mov    %r14,%r8
    df13:	4d 89 f9             	mov    %r15,%r9
    df16:	4c 89 f6             	mov    %r14,%rsi
    df19:	4c 89 ff             	mov    %r15,%rdi
    df1c:	48 89 fa             	mov    %rdi,%rdx
    df1f:	48 89 c1             	mov    %rax,%rcx
    df22:	4c 89 c6             	mov    %r8,%rsi
    df25:	48 89 df             	mov    %rbx,%rdi
    df28:	e8 5f 16 00 00       	call   f58c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    df2d:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    df31:	48 89 c7             	mov    %rax,%rdi
    df34:	e8 4d 9e ff ff       	call   7d86 <_ZNSaIPKcED1Ev>
    df39:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    df3d:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    df44:	4c 8d 25 a5 3d 01 00 	lea    0x13da5(%rip),%r12        # 21cf0 <C.74.1>
    df4b:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    df51:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    df55:	48 89 c7             	mov    %rax,%rdi
    df58:	e8 0d 9e ff ff       	call   7d6a <_ZNSaIPKcEC1Ev>
    df5d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    df61:	4d 89 e0             	mov    %r12,%r8
    df64:	4d 89 e9             	mov    %r13,%r9
    df67:	4c 89 e6             	mov    %r12,%rsi
    df6a:	4c 89 ef             	mov    %r13,%rdi
    df6d:	48 89 fa             	mov    %rdi,%rdx
    df70:	48 89 c1             	mov    %rax,%rcx
    df73:	4c 89 c6             	mov    %r8,%rsi
    df76:	48 89 df             	mov    %rbx,%rdi
    df79:	e8 0e 16 00 00       	call   f58c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    df7e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    df82:	48 89 c7             	mov    %rax,%rdi
    df85:	e8 fc 9d ff ff       	call   7d86 <_ZNSaIPKcED1Ev>
    df8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    df8e:	48 05 a0 00 00 00    	add    $0xa0,%rax
    df94:	48 89 c7             	mov    %rax,%rdi
    df97:	e8 4c 15 00 00       	call   f4e8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    df9c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dfa0:	48 05 b8 00 00 00    	add    $0xb8,%rax
    dfa6:	48 89 c7             	mov    %rax,%rdi
    dfa9:	e8 72 15 00 00       	call   f520 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
  createWindow();
    dfae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dfb2:	48 89 c7             	mov    %rax,%rdi
    dfb5:	e8 3a eb ff ff       	call   caf4 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    dfba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dfbe:	48 89 c7             	mov    %rax,%rdi
    dfc1:	e8 6e eb ff ff       	call   cb34 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    dfc6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dfca:	48 89 c7             	mov    %rax,%rdi
    dfcd:	e8 48 ed ff ff       	call   cd1a <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    dfd2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dfd6:	48 89 c7             	mov    %rax,%rdi
    dfd9:	e8 d0 ed ff ff       	call   cdae <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    dfde:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dfe2:	48 89 c7             	mov    %rax,%rdi
    dfe5:	e8 1c f0 ff ff       	call   d006 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    dfea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dfee:	48 89 c7             	mov    %rax,%rdi
    dff1:	e8 20 fc ff ff       	call   dc16 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    dff6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dffa:	48 89 c7             	mov    %rax,%rdi
    dffd:	e8 5a fc ff ff       	call   dc5c <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    e002:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e006:	48 89 c7             	mov    %rax,%rdi
    e009:	e8 fa fd ff ff       	call   de08 <_ZN9VulkanApp22createGraphicsPipelineEv>

  createCommandPool();
    e00e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e012:	48 89 c7             	mov    %rax,%rdi
    e015:	e8 fa fd ff ff       	call   de14 <_ZN9VulkanApp17createCommandPoolEv>
}
    e01a:	e9 a0 00 00 00       	jmp    e0bf <_ZN9VulkanAppC1Ev+0x247>
VulkanApp::VulkanApp() {
    e01f:	48 89 c3             	mov    %rax,%rbx
    e022:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    e026:	48 89 c7             	mov    %rax,%rdi
    e029:	e8 58 9d ff ff       	call   7d86 <_ZNSaIPKcED1Ev>
    e02e:	48 89 d8             	mov    %rbx,%rax
    e031:	48 89 c7             	mov    %rax,%rdi
    e034:	e8 47 66 ff ff       	call   4680 <_Unwind_Resume@plt>
    e039:	48 89 c3             	mov    %rax,%rbx
    e03c:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    e040:	48 89 c7             	mov    %rax,%rdi
    e043:	e8 3e 9d ff ff       	call   7d86 <_ZNSaIPKcED1Ev>
    e048:	eb 5a                	jmp    e0a4 <_ZN9VulkanAppC1Ev+0x22c>
    e04a:	48 89 c3             	mov    %rax,%rbx
    e04d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    e051:	48 89 c7             	mov    %rax,%rdi
    e054:	e8 2d 9d ff ff       	call   7d86 <_ZNSaIPKcED1Ev>
    e059:	eb 39                	jmp    e094 <_ZN9VulkanAppC1Ev+0x21c>
}
    e05b:	48 89 c3             	mov    %rax,%rbx
    e05e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e062:	48 05 b8 00 00 00    	add    $0xb8,%rax
    e068:	48 89 c7             	mov    %rax,%rdi
    e06b:	e8 3c a7 ff ff       	call   87ac <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    e070:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e074:	48 05 a0 00 00 00    	add    $0xa0,%rax
    e07a:	48 89 c7             	mov    %rax,%rdi
    e07d:	e8 ca 1f 00 00       	call   1004c <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    e082:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e086:	48 05 88 00 00 00    	add    $0x88,%rax
    e08c:	48 89 c7             	mov    %rax,%rdi
    e08f:	e8 80 15 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    e094:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e098:	48 83 c0 28          	add    $0x28,%rax
}
    e09c:	48 89 c7             	mov    %rax,%rdi
    e09f:	e8 70 15 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e0a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e0a8:	48 83 c0 10          	add    $0x10,%rax
    e0ac:	48 89 c7             	mov    %rax,%rdi
    e0af:	e8 60 15 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e0b4:	48 89 d8             	mov    %rbx,%rax
    e0b7:	48 89 c7             	mov    %rax,%rdi
    e0ba:	e8 c1 65 ff ff       	call   4680 <_Unwind_Resume@plt>
    e0bf:	48 83 c4 38          	add    $0x38,%rsp
    e0c3:	5b                   	pop    %rbx
    e0c4:	41 5c                	pop    %r12
    e0c6:	41 5d                	pop    %r13
    e0c8:	41 5e                	pop    %r14
    e0ca:	41 5f                	pop    %r15
    e0cc:	5d                   	pop    %rbp
    e0cd:	c3                   	ret

000000000000e0ce <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    e0ce:	55                   	push   %rbp
    e0cf:	48 89 e5             	mov    %rsp,%rbp
    e0d2:	48 83 ec 30          	sub    $0x30,%rsp
    e0d6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    e0da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e0de:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    e0e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e0e9:	48 8b 40 50          	mov    0x50(%rax),%rax
    e0ed:	ba 00 00 00 00       	mov    $0x0,%edx
    e0f2:	48 89 ce             	mov    %rcx,%rsi
    e0f5:	48 89 c7             	mov    %rax,%rdi
    e0f8:	e8 04 87 ff ff       	call   6801 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>

  for (auto &imageView : imageViews) {
    e0fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e101:	48 05 a0 00 00 00    	add    $0xa0,%rax
    e107:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e10b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e10f:	48 89 c7             	mov    %rax,%rdi
    e112:	e8 a1 1f 00 00       	call   100b8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    e117:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e11b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e11f:	48 89 c7             	mov    %rax,%rdi
    e122:	e8 b7 1f 00 00       	call   100de <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    e127:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e12b:	eb 3b                	jmp    e168 <_ZN9VulkanAppD1Ev+0x9a>
    e12d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e131:	48 89 c7             	mov    %rax,%rdi
    e134:	e8 29 20 00 00       	call   10162 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    e139:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkh::destroyImageView(device, imageView);
    e13d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e141:	48 8b 08             	mov    (%rax),%rcx
    e144:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e148:	48 8b 40 50          	mov    0x50(%rax),%rax
    e14c:	ba 00 00 00 00       	mov    $0x0,%edx
    e151:	48 89 ce             	mov    %rcx,%rsi
    e154:	48 89 c7             	mov    %rax,%rdi
    e157:	e8 8c 85 ff ff       	call   66e8 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    e15c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e160:	48 89 c7             	mov    %rax,%rdi
    e163:	e8 da 1f 00 00       	call   10142 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    e168:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    e16c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e170:	48 89 d6             	mov    %rdx,%rsi
    e173:	48 89 c7             	mov    %rax,%rdi
    e176:	e8 8c 1f 00 00       	call   10107 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e17b:	84 c0                	test   %al,%al
    e17d:	75 ae                	jne    e12d <_ZN9VulkanAppD1Ev+0x5f>
  }
  vkh::destroySwapchain(device, swapchain.self);
    e17f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e183:	48 8b 48 70          	mov    0x70(%rax),%rcx
    e187:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e18b:	48 8b 40 50          	mov    0x50(%rax),%rax
    e18f:	ba 00 00 00 00       	mov    $0x0,%edx
    e194:	48 89 ce             	mov    %rcx,%rsi
    e197:	48 89 c7             	mov    %rax,%rdi
    e19a:	e8 1b 85 ff ff       	call   66ba <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    e19f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1a3:	48 8b 40 50          	mov    0x50(%rax),%rax
    e1a7:	be 00 00 00 00       	mov    $0x0,%esi
    e1ac:	48 89 c7             	mov    %rax,%rdi
    e1af:	e8 b2 84 ff ff       	call   6666 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    e1b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1b8:	48 8b 48 40          	mov    0x40(%rax),%rcx
    e1bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1c0:	48 8b 40 08          	mov    0x8(%rax),%rax
    e1c4:	ba 00 00 00 00       	mov    $0x0,%edx
    e1c9:	48 89 ce             	mov    %rcx,%rsi
    e1cc:	48 89 c7             	mov    %rax,%rdi
    e1cf:	e8 b7 e4 ff ff       	call   c68b <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    e1d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1d8:	48 8b 48 48          	mov    0x48(%rax),%rcx
    e1dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1e0:	48 8b 40 08          	mov    0x8(%rax),%rax
    e1e4:	ba 00 00 00 00       	mov    $0x0,%edx
    e1e9:	48 89 ce             	mov    %rcx,%rsi
    e1ec:	48 89 c7             	mov    %rax,%rdi
    e1ef:	e8 98 84 ff ff       	call   668c <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    e1f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1f8:	48 8b 40 08          	mov    0x8(%rax),%rax
    e1fc:	be 00 00 00 00       	mov    $0x0,%esi
    e201:	48 89 c7             	mov    %rax,%rdi
    e204:	e8 37 84 ff ff       	call   6640 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    e209:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e20d:	48 8b 00             	mov    (%rax),%rax
    e210:	48 89 c7             	mov    %rax,%rdi
    e213:	e8 0d 84 ff ff       	call   6625 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    e218:	e8 53 61 ff ff       	call   4370 <glfwTerminate@plt>
}
    e21d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e221:	48 05 b8 00 00 00    	add    $0xb8,%rax
    e227:	48 89 c7             	mov    %rax,%rdi
    e22a:	e8 7d a5 ff ff       	call   87ac <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    e22f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e233:	48 05 a0 00 00 00    	add    $0xa0,%rax
    e239:	48 89 c7             	mov    %rax,%rdi
    e23c:	e8 0b 1e 00 00       	call   1004c <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    e241:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e245:	48 05 88 00 00 00    	add    $0x88,%rax
    e24b:	48 89 c7             	mov    %rax,%rdi
    e24e:	e8 c1 13 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    e253:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e257:	48 83 c0 28          	add    $0x28,%rax
}
    e25b:	48 89 c7             	mov    %rax,%rdi
    e25e:	e8 b1 13 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e263:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e267:	48 83 c0 10          	add    $0x10,%rax
    e26b:	48 89 c7             	mov    %rax,%rdi
    e26e:	e8 a1 13 00 00       	call   f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    e273:	90                   	nop
    e274:	c9                   	leave
    e275:	c3                   	ret

000000000000e276 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    e276:	55                   	push   %rbp
    e277:	48 89 e5             	mov    %rsp,%rbp
    e27a:	53                   	push   %rbx
    e27b:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    e282:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    e289:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e28d:	48 89 c7             	mov    %rax,%rdi
    e290:	e8 df 1e 00 00       	call   10174 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    e295:	f2 0f 10 05 7b 94 00 	movsd  0x947b(%rip),%xmm0        # 17718 <_ZN6__pstl9execution2v1L5unseqE+0x401>
    e29c:	00 
    e29d:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    e2a2:	e9 a1 00 00 00       	jmp    e348 <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    e2a7:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e2ab:	48 89 c7             	mov    %rax,%rdi
    e2ae:	e8 c1 1e 00 00       	call   10174 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    e2b3:	e8 68 60 ff ff       	call   4320 <glfwPollEvents@plt>

    // for (int i = 0; i < 1'000'000; ++i) {
    // }

    double current = static_cast<double>(time_total.current());
    e2b8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e2bc:	48 89 c7             	mov    %rax,%rdi
    e2bf:	e8 78 12 00 00       	call   f53c <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    e2c4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2c8:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    e2cd:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    e2d2:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    e2d7:	66 0f 2f 05 39 94 00 	comisd 0x9439(%rip),%xmm0        # 17718 <_ZN6__pstl9execution2v1L5unseqE+0x401>
    e2de:	00 
    e2df:	72 5b                	jb     e33c <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    e2e1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e2e5:	48 89 c7             	mov    %rax,%rdi
    e2e8:	e8 4f 12 00 00       	call   f53c <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    e2ed:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e2f1:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    e2f6:	f2 0f 10 05 1a 94 00 	movsd  0x941a(%rip),%xmm0        # 17718 <_ZN6__pstl9execution2v1L5unseqE+0x401>
    e2fd:	00 
    e2fe:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    e302:	66 48 0f 7e c0       	movq   %xmm0,%rax
    e307:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e30c:	48 8d 05 ad 40 01 00 	lea    0x140ad(%rip),%rax        # 223c0 <_ZSt4cout@GLIBCXX_3.4>
    e313:	48 89 c7             	mov    %rax,%rdi
    e316:	e8 c5 63 ff ff       	call   46e0 <_ZNSolsEd@plt>
    e31b:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    e31e:	48 8d 05 ff 90 00 00 	lea    0x90ff(%rip),%rax        # 17424 <_ZN6__pstl9execution2v1L5unseqE+0x10d>
    e325:	48 89 c6             	mov    %rax,%rsi
    e328:	48 89 d7             	mov    %rdx,%rdi
    e32b:	e8 00 60 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    e330:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e334:	48 89 c7             	mov    %rax,%rdi
    e337:	e8 48 1f 00 00       	call   10284 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    e33c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e340:	48 89 c7             	mov    %rax,%rdi
    e343:	e8 a2 1e 00 00       	call   101ea <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    e348:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    e34f:	48 8b 00             	mov    (%rax),%rax
    e352:	48 89 c7             	mov    %rax,%rdi
    e355:	e8 76 63 ff ff       	call   46d0 <glfwWindowShouldClose@plt>
    e35a:	85 c0                	test   %eax,%eax
    e35c:	0f 94 c0             	sete   %al
    e35f:	84 c0                	test   %al,%al
    e361:	0f 85 40 ff ff ff    	jne    e2a7 <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    e367:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    e36e:	48 8b 40 50          	mov    0x50(%rax),%rax
    e372:	48 89 c7             	mov    %rax,%rdi
    e375:	e8 26 5d ff ff       	call   40a0 <vkDeviceWaitIdle@plt>
}
    e37a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e37e:	48 89 c7             	mov    %rax,%rdi
    e381:	e8 64 1e 00 00       	call   101ea <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    e386:	eb 2b                	jmp    e3b3 <_ZN9VulkanApp3runEv+0x13d>
  }
    e388:	48 89 c3             	mov    %rax,%rbx
    e38b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e38f:	48 89 c7             	mov    %rax,%rdi
    e392:	e8 53 1e 00 00       	call   101ea <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    e397:	eb 03                	jmp    e39c <_ZN9VulkanApp3runEv+0x126>
}
    e399:	48 89 c3             	mov    %rax,%rbx
    e39c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e3a0:	48 89 c7             	mov    %rax,%rdi
    e3a3:	e8 42 1e 00 00       	call   101ea <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    e3a8:	48 89 d8             	mov    %rbx,%rax
    e3ab:	48 89 c7             	mov    %rax,%rdi
    e3ae:	e8 cd 62 ff ff       	call   4680 <_Unwind_Resume@plt>
    e3b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e3b7:	c9                   	leave
    e3b8:	c3                   	ret
    e3b9:	90                   	nop

000000000000e3ba <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    e3ba:	55                   	push   %rbp
    e3bb:	48 89 e5             	mov    %rsp,%rbp
    e3be:	41 54                	push   %r12
    e3c0:	53                   	push   %rbx
    e3c1:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    e3c8:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    e3cf:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    e3d6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e3dd:	48 89 c7             	mov    %rax,%rdi
    e3e0:	e8 7b 60 ff ff       	call   4460 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    e3e5:	be 10 00 00 00       	mov    $0x10,%esi
    e3ea:	bf 08 00 00 00       	mov    $0x8,%edi
    e3ef:	e8 22 79 ff ff       	call   5d16 <_ZStorSt13_Ios_OpenmodeS_>
    e3f4:	89 c2                	mov    %eax,%edx
    e3f6:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    e3fd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e404:	48 89 ce             	mov    %rcx,%rsi
    e407:	48 89 c7             	mov    %rax,%rdi
    e40a:	e8 11 61 ff ff       	call   4520 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    e40f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e416:	48 89 c7             	mov    %rax,%rdi
    e419:	e8 22 62 ff ff       	call   4640 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    e41e:	83 f0 01             	xor    $0x1,%eax
    e421:	84 c0                	test   %al,%al
    e423:	0f 84 97 00 00 00    	je     e4c0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    e429:	bf 10 00 00 00       	mov    $0x10,%edi
    e42e:	e8 2d 5d ff ff       	call   4160 <__cxa_allocate_exception@plt>
    e433:	48 89 c3             	mov    %rax,%rbx
    e436:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e43d:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    e444:	48 8d 0d df 8f 00 00 	lea    0x8fdf(%rip),%rcx        # 1742a <_ZN6__pstl9execution2v1L5unseqE+0x113>
    e44b:	48 89 ce             	mov    %rcx,%rsi
    e44e:	48 89 c7             	mov    %rax,%rdi
    e451:	e8 16 79 ff ff       	call   5d6c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    e456:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e45d:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    e464:	ba 0a 00 00 00       	mov    $0xa,%edx
    e469:	48 89 ce             	mov    %rcx,%rsi
    e46c:	48 89 c7             	mov    %rax,%rdi
    e46f:	e8 30 1e 00 00       	call   102a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    e474:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e47b:	48 89 c6             	mov    %rax,%rsi
    e47e:	48 89 df             	mov    %rbx,%rdi
    e481:	e8 6a 61 ff ff       	call   45f0 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    e486:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e48d:	48 89 c7             	mov    %rax,%rdi
    e490:	e8 3b 5d ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e495:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e49c:	48 89 c7             	mov    %rax,%rdi
    e49f:	e8 2c 5d ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e4a4:	48 8b 05 fd 3a 01 00 	mov    0x13afd(%rip),%rax        # 21fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e4ab:	48 89 c2             	mov    %rax,%rdx
    e4ae:	48 8d 05 8b 38 01 00 	lea    0x1388b(%rip),%rax        # 21d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e4b5:	48 89 c6             	mov    %rax,%rsi
    e4b8:	48 89 df             	mov    %rbx,%rdi
    e4bb:	e8 60 61 ff ff       	call   4620 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    e4c0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e4c7:	48 83 c0 10          	add    $0x10,%rax
    e4cb:	48 8d 15 68 8f 00 00 	lea    0x8f68(%rip),%rdx        # 1743a <_ZN6__pstl9execution2v1L5unseqE+0x123>
    e4d2:	48 89 d6             	mov    %rdx,%rsi
    e4d5:	48 89 c7             	mov    %rax,%rdi
    e4d8:	e8 53 5e ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    e4dd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e4e4:	48 83 c0 10          	add    $0x10,%rax
    e4e8:	48 8d 15 64 8f 00 00 	lea    0x8f64(%rip),%rdx        # 17453 <_ZN6__pstl9execution2v1L5unseqE+0x13c>
    e4ef:	48 89 d6             	mov    %rdx,%rsi
    e4f2:	48 89 c7             	mov    %rax,%rdi
    e4f5:	e8 36 5e ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    e4fa:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    e501:	be 00 00 00 00       	mov    $0x0,%esi
    e506:	48 89 c7             	mov    %rax,%rdi
    e509:	e8 b6 84 ff ff       	call   69c4 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    e50e:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    e515:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e519:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e51d:	48 89 c7             	mov    %rax,%rdi
    e520:	e8 d5 15 00 00       	call   fafa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    e525:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    e52c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e530:	48 89 c7             	mov    %rax,%rdi
    e533:	e8 e8 15 00 00       	call   fb20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    e538:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    e53f:	eb 64                	jmp    e5a5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    e541:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    e548:	48 89 c7             	mov    %rax,%rdi
    e54b:	e8 58 16 00 00       	call   fba8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    e550:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    e557:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e55e:	48 83 c0 10          	add    $0x10,%rax
    e562:	48 8d 15 fb 8e 00 00 	lea    0x8efb(%rip),%rdx        # 17464 <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    e569:	48 89 d6             	mov    %rdx,%rsi
    e56c:	48 89 c7             	mov    %rax,%rdi
    e56f:	e8 bc 5d ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e574:	48 89 c2             	mov    %rax,%rdx
    e577:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    e57e:	48 89 c6             	mov    %rax,%rsi
    e581:	48 89 d7             	mov    %rdx,%rdi
    e584:	e8 a7 5d ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e589:	be 0a 00 00 00       	mov    $0xa,%esi
    e58e:	48 89 c7             	mov    %rax,%rdi
    e591:	e8 aa 5e ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    e596:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    e59d:	48 89 c7             	mov    %rax,%rdi
    e5a0:	e8 df 15 00 00       	call   fb84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    e5a5:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    e5ac:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    e5b3:	48 89 d6             	mov    %rdx,%rsi
    e5b6:	48 89 c7             	mov    %rax,%rdi
    e5b9:	e8 8b 15 00 00       	call   fb49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e5be:	84 c0                	test   %al,%al
    e5c0:	0f 85 7b ff ff ff    	jne    e541 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    e5c6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e5cd:	48 83 c0 10          	add    $0x10,%rax
    e5d1:	48 8d 15 8f 8e 00 00 	lea    0x8e8f(%rip),%rdx        # 17467 <_ZN6__pstl9execution2v1L5unseqE+0x150>
    e5d8:	48 89 d6             	mov    %rdx,%rsi
    e5db:	48 89 c7             	mov    %rax,%rdi
    e5de:	e8 4d 5d ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    e5e3:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    e5ea:	48 83 c0 10          	add    $0x10,%rax
    e5ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e5f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e5f6:	48 89 c7             	mov    %rax,%rdi
    e5f9:	e8 5a 10 00 00       	call   f658 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    e5fe:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    e605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e609:	48 89 c7             	mov    %rax,%rdi
    e60c:	e8 6d 10 00 00       	call   f67e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    e611:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    e618:	eb 67                	jmp    e681 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    e61a:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    e621:	48 89 c7             	mov    %rax,%rdi
    e624:	e8 d9 10 00 00       	call   f702 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    e629:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    e630:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e637:	48 83 c0 10          	add    $0x10,%rax
    e63b:	48 8d 15 22 8e 00 00 	lea    0x8e22(%rip),%rdx        # 17464 <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    e642:	48 89 d6             	mov    %rdx,%rsi
    e645:	48 89 c7             	mov    %rax,%rdi
    e648:	e8 e3 5c ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e64d:	48 89 c2             	mov    %rax,%rdx
    e650:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    e657:	48 8b 00             	mov    (%rax),%rax
    e65a:	48 89 c6             	mov    %rax,%rsi
    e65d:	48 89 d7             	mov    %rdx,%rdi
    e660:	e8 cb 5c ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e665:	be 0a 00 00 00       	mov    $0xa,%esi
    e66a:	48 89 c7             	mov    %rax,%rdi
    e66d:	e8 ce 5d ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    e672:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    e679:	48 89 c7             	mov    %rax,%rdi
    e67c:	e8 61 10 00 00       	call   f6e2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    e681:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    e688:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    e68f:	48 89 d6             	mov    %rdx,%rsi
    e692:	48 89 c7             	mov    %rax,%rdi
    e695:	e8 0d 10 00 00       	call   f6a7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e69a:	84 c0                	test   %al,%al
    e69c:	0f 85 78 ff ff ff    	jne    e61a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    e6a2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e6a9:	48 83 c0 10          	add    $0x10,%rax
    e6ad:	be 0a 00 00 00       	mov    $0xa,%esi
    e6b2:	48 89 c7             	mov    %rax,%rdi
    e6b5:	e8 86 5d ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    e6ba:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e6c1:	48 83 c0 10          	add    $0x10,%rax
    e6c5:	48 8d 15 ab 8d 00 00 	lea    0x8dab(%rip),%rdx        # 17477 <_ZN6__pstl9execution2v1L5unseqE+0x160>
    e6cc:	48 89 d6             	mov    %rdx,%rsi
    e6cf:	48 89 c7             	mov    %rax,%rdi
    e6d2:	e8 59 5c ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    e6d7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e6de:	48 83 c0 10          	add    $0x10,%rax
    e6e2:	48 8d 15 a3 8d 00 00 	lea    0x8da3(%rip),%rdx        # 1748c <_ZN6__pstl9execution2v1L5unseqE+0x175>
    e6e9:	48 89 d6             	mov    %rdx,%rsi
    e6ec:	48 89 c7             	mov    %rax,%rdi
    e6ef:	e8 3c 5c ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    e6f4:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    e6fb:	48 89 c7             	mov    %rax,%rdi
    e6fe:	e8 5b 86 ff ff       	call   6d5e <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    e703:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    e70a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    e70e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e712:	48 89 c7             	mov    %rax,%rdi
    e715:	e8 3e e1 ff ff       	call   c858 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    e71a:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    e721:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e725:	48 89 c7             	mov    %rax,%rdi
    e728:	e8 51 e1 ff ff       	call   c87e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    e72d:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    e734:	eb 5e                	jmp    e794 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    e736:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    e73d:	48 89 c7             	mov    %rax,%rdi
    e740:	e8 c1 e1 ff ff       	call   c906 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    e745:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    e749:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e750:	48 83 c0 10          	add    $0x10,%rax
    e754:	48 8d 15 09 8d 00 00 	lea    0x8d09(%rip),%rdx        # 17464 <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    e75b:	48 89 d6             	mov    %rdx,%rsi
    e75e:	48 89 c7             	mov    %rax,%rdi
    e761:	e8 ca 5b ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e766:	48 89 c2             	mov    %rax,%rdx
    e769:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e76d:	48 89 c6             	mov    %rax,%rsi
    e770:	48 89 d7             	mov    %rdx,%rdi
    e773:	e8 b8 5b ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e778:	be 0a 00 00 00       	mov    $0xa,%esi
    e77d:	48 89 c7             	mov    %rax,%rdi
    e780:	e8 bb 5c ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    e785:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    e78c:	48 89 c7             	mov    %rax,%rdi
    e78f:	e8 4e e1 ff ff       	call   c8e2 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    e794:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    e79b:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    e7a2:	48 89 d6             	mov    %rdx,%rsi
    e7a5:	48 89 c7             	mov    %rax,%rdi
    e7a8:	e8 fa e0 ff ff       	call   c8a7 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e7ad:	84 c0                	test   %al,%al
    e7af:	75 85                	jne    e736 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    e7b1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e7b8:	48 83 c0 10          	add    $0x10,%rax
    e7bc:	48 8d 15 da 8c 00 00 	lea    0x8cda(%rip),%rdx        # 1749d <_ZN6__pstl9execution2v1L5unseqE+0x186>
    e7c3:	48 89 d6             	mov    %rdx,%rsi
    e7c6:	48 89 c7             	mov    %rax,%rdi
    e7c9:	e8 62 5b ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    e7ce:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    e7d5:	48 83 c0 28          	add    $0x28,%rax
    e7d9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    e7dd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e7e1:	48 89 c7             	mov    %rax,%rdi
    e7e4:	e8 05 1b 00 00       	call   102ee <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    e7e9:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    e7f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e7f4:	48 89 c7             	mov    %rax,%rdi
    e7f7:	e8 18 1b 00 00       	call   10314 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    e7fc:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    e803:	eb 61                	jmp    e866 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    e805:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    e80c:	48 89 c7             	mov    %rax,%rdi
    e80f:	e8 84 1b 00 00       	call   10398 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    e814:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    e818:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e81f:	48 83 c0 10          	add    $0x10,%rax
    e823:	48 8d 15 3a 8c 00 00 	lea    0x8c3a(%rip),%rdx        # 17464 <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    e82a:	48 89 d6             	mov    %rdx,%rsi
    e82d:	48 89 c7             	mov    %rax,%rdi
    e830:	e8 fb 5a ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e835:	48 89 c2             	mov    %rax,%rdx
    e838:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e83c:	48 8b 00             	mov    (%rax),%rax
    e83f:	48 89 c6             	mov    %rax,%rsi
    e842:	48 89 d7             	mov    %rdx,%rdi
    e845:	e8 e6 5a ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    e84a:	be 0a 00 00 00       	mov    $0xa,%esi
    e84f:	48 89 c7             	mov    %rax,%rdi
    e852:	e8 e9 5b ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    e857:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    e85e:	48 89 c7             	mov    %rax,%rdi
    e861:	e8 12 1b 00 00       	call   10378 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    e866:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    e86d:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    e874:	48 89 d6             	mov    %rdx,%rsi
    e877:	48 89 c7             	mov    %rax,%rdi
    e87a:	e8 be 1a 00 00       	call   1033d <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    e87f:	84 c0                	test   %al,%al
    e881:	75 82                	jne    e805 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    e883:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e88a:	48 83 c0 10          	add    $0x10,%rax
    e88e:	be 0a 00 00 00       	mov    $0xa,%esi
    e893:	48 89 c7             	mov    %rax,%rdi
    e896:	e8 a5 5b ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    e89b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    e8a2:	48 83 c0 10          	add    $0x10,%rax
    e8a6:	48 8d 15 00 8c 00 00 	lea    0x8c00(%rip),%rdx        # 174ad <_ZN6__pstl9execution2v1L5unseqE+0x196>
    e8ad:	48 89 d6             	mov    %rdx,%rsi
    e8b0:	48 89 c7             	mov    %rax,%rdi
    e8b3:	e8 78 5a ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    e8b8:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    e8bf:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e8c3:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    e8ca:	48 89 d6             	mov    %rdx,%rsi
    e8cd:	48 89 c7             	mov    %rax,%rdi
    e8d0:	e8 35 85 ff ff       	call   6e0a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    e8d5:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    e8dc:	48 8b 50 58          	mov    0x58(%rax),%rdx
    e8e0:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    e8e7:	48 89 d6             	mov    %rdx,%rsi
    e8ea:	48 89 c7             	mov    %rax,%rdi
    e8ed:	e8 87 86 ff ff       	call   6f79 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    e8f2:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    e8f9:	00 
  size_t selectedDeviceIndex = 0;
    e8fa:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e901:	00 
  for (const auto &physDev : physicalDeviceList) {
    e902:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    e909:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    e90d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e911:	48 89 c7             	mov    %rax,%rdi
    e914:	e8 0f 10 00 00       	call   f928 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    e919:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    e920:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e924:	48 89 c7             	mov    %rax,%rdi
    e927:	e8 22 10 00 00       	call   f94e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    e92c:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    e933:	e9 c7 06 00 00       	jmp    efff <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    e938:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    e93f:	48 89 c7             	mov    %rax,%rdi
    e942:	e8 8b 10 00 00       	call   f9d2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    e947:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    e94b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e952:	48 89 c7             	mov    %rax,%rdi
    e955:	e8 36 5d ff ff       	call   4690 <_ZNSaIcEC1Ev@plt>
    e95a:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    e961:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    e968:	48 8d 0d 54 8b 00 00 	lea    0x8b54(%rip),%rcx        # 174c3 <_ZN6__pstl9execution2v1L5unseqE+0x1ac>
    e96f:	48 89 ce             	mov    %rcx,%rsi
    e972:	48 89 c7             	mov    %rax,%rdi
    e975:	e8 56 61 ff ff       	call   4ad0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e97a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    e981:	48 89 c7             	mov    %rax,%rdi
    e984:	e8 57 5a ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    e989:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    e990:	b8 00 00 00 00       	mov    $0x0,%eax
    e995:	b9 0e 00 00 00       	mov    $0xe,%ecx
    e99a:	48 89 d7             	mov    %rdx,%rdi
    e99d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    e9a0:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    e9a7:	00 00 00 
    vk11Props.pNext = nullptr;
    e9aa:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    e9b1:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    e9b5:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    e9bc:	b8 00 00 00 00       	mov    $0x0,%eax
    e9c1:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    e9c6:	48 89 d7             	mov    %rdx,%rdi
    e9c9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    e9cc:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    e9d3:	00 00 00 
    vk12Props.pNext = &vk11Props;
    e9d6:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    e9dd:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    e9e4:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    e9eb:	b8 00 00 00 00       	mov    $0x0,%eax
    e9f0:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    e9f5:	48 89 d7             	mov    %rdx,%rdi
    e9f8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    e9fb:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    ea02:	00 00 00 
    vk13Props.pNext = &vk12Props;
    ea05:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    ea0c:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    ea13:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ea17:	48 8b 08             	mov    (%rax),%rcx
    ea1a:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    ea21:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    ea28:	48 89 ce             	mov    %rcx,%rsi
    ea2b:	48 89 c7             	mov    %rax,%rdi
    ea2e:	e8 70 85 ff ff       	call   6fa3 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    ea33:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    ea39:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    ea3f:	39 c2                	cmp    %eax,%edx
    ea41:	75 08                	jne    ea4b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    ea43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea47:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    ea4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ea4f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    ea53:	75 19                	jne    ea6e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    ea55:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    ea5c:	48 8d 15 61 8a 00 00 	lea    0x8a61(%rip),%rdx        # 174c4 <_ZN6__pstl9execution2v1L5unseqE+0x1ad>
    ea63:	48 89 d6             	mov    %rdx,%rsi
    ea66:	48 89 c7             	mov    %rax,%rdi
    ea69:	e8 a2 5a ff ff       	call   4510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    ea6e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ea75:	48 83 c0 10          	add    $0x10,%rax
    ea79:	48 8d 15 50 8a 00 00 	lea    0x8a50(%rip),%rdx        # 174d0 <_ZN6__pstl9execution2v1L5unseqE+0x1b9>
    ea80:	48 89 d6             	mov    %rdx,%rsi
    ea83:	48 89 c7             	mov    %rax,%rdi
    ea86:	e8 a5 58 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ea8b:	48 89 c2             	mov    %rax,%rdx
    ea8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea92:	48 89 c6             	mov    %rax,%rsi
    ea95:	48 89 d7             	mov    %rdx,%rdi
    ea98:	e8 f3 55 ff ff       	call   4090 <_ZNSolsEm@plt>
    ea9d:	48 89 c2             	mov    %rax,%rdx
    eaa0:	48 8d 05 2d 8a 00 00 	lea    0x8a2d(%rip),%rax        # 174d4 <_ZN6__pstl9execution2v1L5unseqE+0x1bd>
    eaa7:	48 89 c6             	mov    %rax,%rsi
    eaaa:	48 89 d7             	mov    %rdx,%rdi
    eaad:	e8 7e 58 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    eab2:	48 89 c2             	mov    %rax,%rdx
    eab5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eab9:	48 89 c6             	mov    %rax,%rsi
    eabc:	48 89 d7             	mov    %rdx,%rdi
    eabf:	e8 cc 55 ff ff       	call   4090 <_ZNSolsEm@plt>
    eac4:	48 89 c2             	mov    %rax,%rdx
    eac7:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    eace:	48 89 c6             	mov    %rax,%rsi
    ead1:	48 89 d7             	mov    %rdx,%rdi
    ead4:	e8 07 58 ff ff       	call   42e0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    ead9:	48 89 c2             	mov    %rax,%rdx
    eadc:	48 8d 05 fa 89 00 00 	lea    0x89fa(%rip),%rax        # 174dd <_ZN6__pstl9execution2v1L5unseqE+0x1c6>
    eae3:	48 89 c6             	mov    %rax,%rsi
    eae6:	48 89 d7             	mov    %rdx,%rdi
    eae9:	e8 42 58 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    eaee:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    eaf5:	48 83 c0 10          	add    $0x10,%rax
    eaf9:	48 8d 15 e0 89 00 00 	lea    0x89e0(%rip),%rdx        # 174e0 <_ZN6__pstl9execution2v1L5unseqE+0x1c9>
    eb00:	48 89 d6             	mov    %rdx,%rsi
    eb03:	48 89 c7             	mov    %rax,%rdi
    eb06:	e8 25 58 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    eb0b:	48 89 c2             	mov    %rax,%rdx
    eb0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb12:	48 89 c6             	mov    %rax,%rsi
    eb15:	48 89 d7             	mov    %rdx,%rdi
    eb18:	e8 73 55 ff ff       	call   4090 <_ZNSolsEm@plt>
    eb1d:	48 89 c2             	mov    %rax,%rdx
    eb20:	48 8d 05 be 89 00 00 	lea    0x89be(%rip),%rax        # 174e5 <_ZN6__pstl9execution2v1L5unseqE+0x1ce>
    eb27:	48 89 c6             	mov    %rax,%rsi
    eb2a:	48 89 d7             	mov    %rdx,%rdi
    eb2d:	e8 fe 57 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    eb32:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    eb39:	48 83 c0 10          	add    $0x10,%rax
    eb3d:	48 8d 15 b8 89 00 00 	lea    0x89b8(%rip),%rdx        # 174fc <_ZN6__pstl9execution2v1L5unseqE+0x1e5>
    eb44:	48 89 d6             	mov    %rdx,%rsi
    eb47:	48 89 c7             	mov    %rax,%rdi
    eb4a:	e8 e1 57 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    eb4f:	48 89 c2             	mov    %rax,%rdx
    eb52:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    eb58:	89 c6                	mov    %eax,%esi
    eb5a:	48 89 d7             	mov    %rdx,%rdi
    eb5d:	e8 9e 59 ff ff       	call   4500 <_ZNSolsEj@plt>
    eb62:	be 0a 00 00 00       	mov    $0xa,%esi
    eb67:	48 89 c7             	mov    %rax,%rdi
    eb6a:	e8 d1 58 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    eb6f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    eb76:	48 83 c0 10          	add    $0x10,%rax
    eb7a:	48 8d 15 8a 89 00 00 	lea    0x898a(%rip),%rdx        # 1750b <_ZN6__pstl9execution2v1L5unseqE+0x1f4>
    eb81:	48 89 d6             	mov    %rdx,%rsi
    eb84:	48 89 c7             	mov    %rax,%rdi
    eb87:	e8 a4 57 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    eb8c:	48 89 c2             	mov    %rax,%rdx
    eb8f:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    eb96:	48 83 c0 24          	add    $0x24,%rax
    eb9a:	48 89 c6             	mov    %rax,%rsi
    eb9d:	48 89 d7             	mov    %rdx,%rdi
    eba0:	e8 8b 57 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    eba5:	be 0a 00 00 00       	mov    $0xa,%esi
    ebaa:	48 89 c7             	mov    %rax,%rdi
    ebad:	e8 8e 58 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    ebb2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ebb9:	48 83 c0 10          	add    $0x10,%rax
    ebbd:	48 8d 15 58 89 00 00 	lea    0x8958(%rip),%rdx        # 1751c <_ZN6__pstl9execution2v1L5unseqE+0x205>
    ebc4:	48 89 d6             	mov    %rdx,%rsi
    ebc7:	48 89 c7             	mov    %rax,%rdi
    ebca:	e8 61 57 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    ebcf:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    ebd5:	83 f8 04             	cmp    $0x4,%eax
    ebd8:	0f 84 80 00 00 00    	je     ec5e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    ebde:	83 f8 04             	cmp    $0x4,%eax
    ebe1:	0f 8f 96 00 00 00    	jg     ec7d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    ebe7:	83 f8 03             	cmp    $0x3,%eax
    ebea:	74 53                	je     ec3f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    ebec:	83 f8 03             	cmp    $0x3,%eax
    ebef:	0f 8f 88 00 00 00    	jg     ec7d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    ebf5:	83 f8 01             	cmp    $0x1,%eax
    ebf8:	74 07                	je     ec01 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    ebfa:	83 f8 02             	cmp    $0x2,%eax
    ebfd:	74 21                	je     ec20 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    ebff:	eb 7c                	jmp    ec7d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    ec01:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ec08:	48 83 c0 10          	add    $0x10,%rax
    ec0c:	48 8d 15 1a 89 00 00 	lea    0x891a(%rip),%rdx        # 1752d <_ZN6__pstl9execution2v1L5unseqE+0x216>
    ec13:	48 89 d6             	mov    %rdx,%rsi
    ec16:	48 89 c7             	mov    %rax,%rdi
    ec19:	e8 12 57 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    ec1e:	eb 7b                	jmp    ec9b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    ec20:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ec27:	48 83 c0 10          	add    $0x10,%rax
    ec2b:	48 8d 15 0b 89 00 00 	lea    0x890b(%rip),%rdx        # 1753d <_ZN6__pstl9execution2v1L5unseqE+0x226>
    ec32:	48 89 d6             	mov    %rdx,%rsi
    ec35:	48 89 c7             	mov    %rax,%rdi
    ec38:	e8 f3 56 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    ec3d:	eb 5c                	jmp    ec9b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    ec3f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ec46:	48 83 c0 10          	add    $0x10,%rax
    ec4a:	48 8d 15 fa 88 00 00 	lea    0x88fa(%rip),%rdx        # 1754b <_ZN6__pstl9execution2v1L5unseqE+0x234>
    ec51:	48 89 d6             	mov    %rdx,%rsi
    ec54:	48 89 c7             	mov    %rax,%rdi
    ec57:	e8 d4 56 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    ec5c:	eb 3d                	jmp    ec9b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    ec5e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ec65:	48 83 c0 10          	add    $0x10,%rax
    ec69:	48 8d 15 e8 88 00 00 	lea    0x88e8(%rip),%rdx        # 17558 <_ZN6__pstl9execution2v1L5unseqE+0x241>
    ec70:	48 89 d6             	mov    %rdx,%rsi
    ec73:	48 89 c7             	mov    %rax,%rdi
    ec76:	e8 b5 56 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    ec7b:	eb 1e                	jmp    ec9b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    ec7d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ec84:	48 83 c0 10          	add    $0x10,%rax
    ec88:	48 8d 15 ce 88 00 00 	lea    0x88ce(%rip),%rdx        # 1755d <_ZN6__pstl9execution2v1L5unseqE+0x246>
    ec8f:	48 89 d6             	mov    %rdx,%rsi
    ec92:	48 89 c7             	mov    %rax,%rdi
    ec95:	e8 96 56 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    ec9a:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    ec9b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    eca2:	48 83 c0 10          	add    $0x10,%rax
    eca6:	48 8d 15 b7 88 00 00 	lea    0x88b7(%rip),%rdx        # 17564 <_ZN6__pstl9execution2v1L5unseqE+0x24d>
    ecad:	48 89 d6             	mov    %rdx,%rsi
    ecb0:	48 89 c7             	mov    %rax,%rdi
    ecb3:	e8 78 56 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ecb8:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    ecbe:	89 d6                	mov    %edx,%esi
    ecc0:	48 89 c7             	mov    %rax,%rdi
    ecc3:	e8 88 59 ff ff       	call   4650 <_ZNSolsEi@plt>
    ecc8:	be 0a 00 00 00       	mov    $0xa,%esi
    eccd:	48 89 c7             	mov    %rax,%rdi
    ecd0:	e8 6b 57 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    ecd5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ecdc:	48 83 c0 10          	add    $0x10,%rax
    ece0:	48 8d 15 8c 88 00 00 	lea    0x888c(%rip),%rdx        # 17573 <_ZN6__pstl9execution2v1L5unseqE+0x25c>
    ece7:	48 89 d6             	mov    %rdx,%rsi
    ecea:	48 89 c7             	mov    %rax,%rdi
    eced:	e8 3e 56 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ecf2:	48 89 c2             	mov    %rax,%rdx
    ecf5:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    ecfc:	48 83 c0 14          	add    $0x14,%rax
    ed00:	48 89 c6             	mov    %rax,%rsi
    ed03:	48 89 d7             	mov    %rdx,%rdi
    ed06:	e8 25 56 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ed0b:	be 0a 00 00 00       	mov    $0xa,%esi
    ed10:	48 89 c7             	mov    %rax,%rdi
    ed13:	e8 28 57 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    ed18:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ed1f:	48 83 c0 10          	add    $0x10,%rax
    ed23:	48 8d 15 5a 88 00 00 	lea    0x885a(%rip),%rdx        # 17584 <_ZN6__pstl9execution2v1L5unseqE+0x26d>
    ed2a:	48 89 d6             	mov    %rdx,%rsi
    ed2d:	48 89 c7             	mov    %rax,%rdi
    ed30:	e8 fb 55 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ed35:	48 89 c2             	mov    %rax,%rdx
    ed38:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    ed3f:	48 05 14 01 00 00    	add    $0x114,%rax
    ed45:	48 89 c6             	mov    %rax,%rsi
    ed48:	48 89 d7             	mov    %rdx,%rdi
    ed4b:	e8 e0 55 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ed50:	be 0a 00 00 00       	mov    $0xa,%esi
    ed55:	48 89 c7             	mov    %rax,%rdi
    ed58:	e8 e3 56 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    ed5d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ed64:	48 83 c0 10          	add    $0x10,%rax
    ed68:	48 8d 15 29 88 00 00 	lea    0x8829(%rip),%rdx        # 17598 <_ZN6__pstl9execution2v1L5unseqE+0x281>
    ed6f:	48 89 d6             	mov    %rdx,%rsi
    ed72:	48 89 c7             	mov    %rax,%rdi
    ed75:	e8 b6 55 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ed7a:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    ed7d:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    ed84:	48 89 c6             	mov    %rax,%rsi
    ed87:	48 89 d7             	mov    %rdx,%rdi
    ed8a:	e8 01 53 ff ff       	call   4090 <_ZNSolsEm@plt>
    ed8f:	be 0a 00 00 00       	mov    $0xa,%esi
    ed94:	48 89 c7             	mov    %rax,%rdi
    ed97:	e8 a4 56 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    ed9c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    eda3:	48 83 c0 10          	add    $0x10,%rax
    eda7:	48 8d 15 32 87 00 00 	lea    0x8732(%rip),%rdx        # 174e0 <_ZN6__pstl9execution2v1L5unseqE+0x1c9>
    edae:	48 89 d6             	mov    %rdx,%rsi
    edb1:	48 89 c7             	mov    %rax,%rdi
    edb4:	e8 77 55 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    edb9:	48 89 c2             	mov    %rax,%rdx
    edbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    edc0:	48 89 c6             	mov    %rax,%rsi
    edc3:	48 89 d7             	mov    %rdx,%rdi
    edc6:	e8 c5 52 ff ff       	call   4090 <_ZNSolsEm@plt>
    edcb:	48 89 c2             	mov    %rax,%rdx
    edce:	48 8d 05 eb 87 00 00 	lea    0x87eb(%rip),%rax        # 175c0 <_ZN6__pstl9execution2v1L5unseqE+0x2a9>
    edd5:	48 89 c6             	mov    %rax,%rsi
    edd8:	48 89 d7             	mov    %rdx,%rdi
    eddb:	e8 50 55 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    ede0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ede4:	48 8b 08             	mov    (%rax),%rcx
    ede7:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    edee:	ba 00 00 00 00       	mov    $0x0,%edx
    edf3:	48 89 ce             	mov    %rcx,%rsi
    edf6:	48 89 c7             	mov    %rax,%rdi
    edf9:	e8 37 7d ff ff       	call   6b35 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    edfe:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    ee05:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ee09:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee0d:	48 89 c7             	mov    %rax,%rdi
    ee10:	e8 e5 0c 00 00       	call   fafa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    ee15:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
    ee1c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee20:	48 89 c7             	mov    %rax,%rdi
    ee23:	e8 f8 0c 00 00       	call   fb20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    ee28:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
    ee2f:	eb 5e                	jmp    ee8f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
    ee31:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    ee38:	48 89 c7             	mov    %rax,%rdi
    ee3b:	e8 68 0d 00 00       	call   fba8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    ee40:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
    ee44:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ee4b:	48 83 c0 10          	add    $0x10,%rax
    ee4f:	48 8d 15 8b 87 00 00 	lea    0x878b(%rip),%rdx        # 175e1 <_ZN6__pstl9execution2v1L5unseqE+0x2ca>
    ee56:	48 89 d6             	mov    %rdx,%rsi
    ee59:	48 89 c7             	mov    %rax,%rdi
    ee5c:	e8 cf 54 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ee61:	48 89 c2             	mov    %rax,%rdx
    ee64:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ee68:	48 89 c6             	mov    %rax,%rsi
    ee6b:	48 89 d7             	mov    %rdx,%rdi
    ee6e:	e8 bd 54 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ee73:	be 0a 00 00 00       	mov    $0xa,%esi
    ee78:	48 89 c7             	mov    %rax,%rdi
    ee7b:	e8 c0 55 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
    ee80:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    ee87:	48 89 c7             	mov    %rax,%rdi
    ee8a:	e8 f5 0c 00 00       	call   fb84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    ee8f:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
    ee96:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    ee9d:	48 89 d6             	mov    %rdx,%rsi
    eea0:	48 89 c7             	mov    %rax,%rdi
    eea3:	e8 a1 0c 00 00       	call   fb49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    eea8:	84 c0                	test   %al,%al
    eeaa:	75 85                	jne    ee31 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
    eeac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eeb0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    eeb4:	0f 85 fb 00 00 00    	jne    efb5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
    eeba:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    eec1:	48 83 c0 10          	add    $0x10,%rax
    eec5:	48 8d 15 14 86 00 00 	lea    0x8614(%rip),%rdx        # 174e0 <_ZN6__pstl9execution2v1L5unseqE+0x1c9>
    eecc:	48 89 d6             	mov    %rdx,%rsi
    eecf:	48 89 c7             	mov    %rax,%rdi
    eed2:	e8 59 54 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    eed7:	48 89 c2             	mov    %rax,%rdx
    eeda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eede:	48 89 c6             	mov    %rax,%rsi
    eee1:	48 89 d7             	mov    %rdx,%rdi
    eee4:	e8 a7 51 ff ff       	call   4090 <_ZNSolsEm@plt>
    eee9:	48 89 c2             	mov    %rax,%rdx
    eeec:	48 8d 05 f5 86 00 00 	lea    0x86f5(%rip),%rax        # 175e8 <_ZN6__pstl9execution2v1L5unseqE+0x2d1>
    eef3:	48 89 c6             	mov    %rax,%rsi
    eef6:	48 89 d7             	mov    %rdx,%rdi
    eef9:	e8 32 54 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
    eefe:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    ef05:	48 05 88 00 00 00    	add    $0x88,%rax
    ef0b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ef0f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ef13:	48 89 c7             	mov    %rax,%rdi
    ef16:	e8 3d 07 00 00       	call   f658 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    ef1b:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
    ef22:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ef26:	48 89 c7             	mov    %rax,%rdi
    ef29:	e8 50 07 00 00       	call   f67e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    ef2e:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
    ef35:	eb 61                	jmp    ef98 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
    ef37:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    ef3e:	48 89 c7             	mov    %rax,%rdi
    ef41:	e8 bc 07 00 00       	call   f702 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    ef46:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
    ef4a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ef51:	48 83 c0 10          	add    $0x10,%rax
    ef55:	48 8d 15 85 86 00 00 	lea    0x8685(%rip),%rdx        # 175e1 <_ZN6__pstl9execution2v1L5unseqE+0x2ca>
    ef5c:	48 89 d6             	mov    %rdx,%rsi
    ef5f:	48 89 c7             	mov    %rax,%rdi
    ef62:	e8 c9 53 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ef67:	48 89 c2             	mov    %rax,%rdx
    ef6a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ef6e:	48 8b 00             	mov    (%rax),%rax
    ef71:	48 89 c6             	mov    %rax,%rsi
    ef74:	48 89 d7             	mov    %rdx,%rdi
    ef77:	e8 b4 53 ff ff       	call   4330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ef7c:	be 0a 00 00 00       	mov    $0xa,%esi
    ef81:	48 89 c7             	mov    %rax,%rdi
    ef84:	e8 b7 54 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
    ef89:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    ef90:	48 89 c7             	mov    %rax,%rdi
    ef93:	e8 4a 07 00 00       	call   f6e2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    ef98:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
    ef9f:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    efa6:	48 89 d6             	mov    %rdx,%rsi
    efa9:	48 89 c7             	mov    %rax,%rdi
    efac:	e8 f6 06 00 00       	call   f6a7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    efb1:	84 c0                	test   %al,%al
    efb3:	75 82                	jne    ef37 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
    efb5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    efbc:	48 83 c0 10          	add    $0x10,%rax
    efc0:	be 0a 00 00 00       	mov    $0xa,%esi
    efc5:	48 89 c7             	mov    %rax,%rdi
    efc8:	e8 73 54 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
    efcd:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
    efd2:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    efd9:	48 89 c7             	mov    %rax,%rdi
    efdc:	e8 c9 8c ff ff       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    efe1:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    efe8:	48 89 c7             	mov    %rax,%rdi
    efeb:	e8 e0 51 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
    eff0:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    eff7:	48 89 c7             	mov    %rax,%rdi
    effa:	e8 b3 09 00 00       	call   f9b2 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    efff:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    f006:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    f00d:	48 89 d6             	mov    %rdx,%rsi
    f010:	48 89 c7             	mov    %rax,%rdi
    f013:	e8 5f 09 00 00       	call   f977 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f018:	84 c0                	test   %al,%al
    f01a:	0f 85 18 f9 ff ff    	jne    e938 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
    f020:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f027:	48 83 c0 10          	add    $0x10,%rax
    f02b:	be 0a 00 00 00       	mov    $0xa,%esi
    f030:	48 89 c7             	mov    %rax,%rdi
    f033:	e8 08 54 ff ff       	call   4440 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    f038:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f03f:	48 89 c7             	mov    %rax,%rdi
    f042:	e8 ed 8e ff ff       	call   7f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    f047:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f04e:	48 89 c7             	mov    %rax,%rdi
    f051:	e8 e6 8a ff ff       	call   7b3c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    f056:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f05d:	48 89 c7             	mov    %rax,%rdi
    f060:	e8 45 8c ff ff       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    f065:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f06c:	48 89 c7             	mov    %rax,%rdi
    f06f:	e8 0c 50 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    f074:	e9 cd 00 00 00       	jmp    f146 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    f079:	49 89 c4             	mov    %rax,%r12
    f07c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f083:	48 89 c7             	mov    %rax,%rdi
    f086:	e8 45 51 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f08b:	eb 03                	jmp    f090 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
    f08d:	49 89 c4             	mov    %rax,%r12
    f090:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f097:	48 89 c7             	mov    %rax,%rdi
    f09a:	e8 31 51 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f09f:	eb 03                	jmp    f0a4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
    f0a1:	49 89 c4             	mov    %rax,%r12
    f0a4:	48 89 df             	mov    %rbx,%rdi
    f0a7:	e8 74 51 ff ff       	call   4220 <__cxa_free_exception@plt>
    f0ac:	4c 89 e3             	mov    %r12,%rbx
    f0af:	eb 7b                	jmp    f12c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
    f0b1:	48 89 c3             	mov    %rax,%rbx
    f0b4:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f0bb:	48 89 c7             	mov    %rax,%rdi
    f0be:	e8 1d 53 ff ff       	call   43e0 <_ZNSaIcED1Ev@plt>
    f0c3:	eb 2b                	jmp    f0f0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
    f0c5:	48 89 c3             	mov    %rax,%rbx
    f0c8:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    f0cf:	48 89 c7             	mov    %rax,%rdi
    f0d2:	e8 d3 8b ff ff       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    f0d7:	eb 03                	jmp    f0dc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
    f0d9:	48 89 c3             	mov    %rax,%rbx
    f0dc:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f0e3:	48 89 c7             	mov    %rax,%rdi
    f0e6:	e8 e5 50 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f0eb:	eb 03                	jmp    f0f0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
    f0ed:	48 89 c3             	mov    %rax,%rbx
    f0f0:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f0f7:	48 89 c7             	mov    %rax,%rdi
    f0fa:	e8 35 8e ff ff       	call   7f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    f0ff:	eb 03                	jmp    f104 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
    f101:	48 89 c3             	mov    %rax,%rbx
    f104:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f10b:	48 89 c7             	mov    %rax,%rdi
    f10e:	e8 29 8a ff ff       	call   7b3c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    f113:	eb 03                	jmp    f118 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
    f115:	48 89 c3             	mov    %rax,%rbx
    f118:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f11f:	48 89 c7             	mov    %rax,%rdi
    f122:	e8 83 8b ff ff       	call   7caa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    f127:	eb 03                	jmp    f12c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    f129:	48 89 c3             	mov    %rax,%rbx
    f12c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f133:	48 89 c7             	mov    %rax,%rdi
    f136:	e8 45 4f ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    f13b:	48 89 d8             	mov    %rbx,%rax
    f13e:	48 89 c7             	mov    %rax,%rdi
    f141:	e8 3a 55 ff ff       	call   4680 <_Unwind_Resume@plt>
    f146:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
    f14d:	5b                   	pop    %rbx
    f14e:	41 5c                	pop    %r12
    f150:	5d                   	pop    %rbp
    f151:	c3                   	ret

000000000000f152 <_Z41__static_initialization_and_destruction_0ii>:
    f152:	55                   	push   %rbp
    f153:	48 89 e5             	mov    %rsp,%rbp
    f156:	48 83 ec 10          	sub    $0x10,%rsp
    f15a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f15d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f160:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    f164:	75 3b                	jne    f1a1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f166:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    f16d:	75 32                	jne    f1a1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f16f:	48 8d 05 7e 34 01 00 	lea    0x1347e(%rip),%rax        # 225f4 <_ZStL8__ioinit>
    f176:	48 89 c7             	mov    %rax,%rdi
    f179:	e8 12 54 ff ff       	call   4590 <_ZNSt8ios_base4InitC1Ev@plt>
    f17e:	48 8d 05 f3 31 01 00 	lea    0x131f3(%rip),%rax        # 22378 <__dso_handle>
    f185:	48 89 c2             	mov    %rax,%rdx
    f188:	48 8d 05 65 34 01 00 	lea    0x13465(%rip),%rax        # 225f4 <_ZStL8__ioinit>
    f18f:	48 89 c6             	mov    %rax,%rsi
    f192:	48 8b 05 2f 2e 01 00 	mov    0x12e2f(%rip),%rax        # 21fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    f199:	48 89 c7             	mov    %rax,%rdi
    f19c:	e8 2f 51 ff ff       	call   42d0 <__cxa_atexit@plt>
    f1a1:	90                   	nop
    f1a2:	c9                   	leave
    f1a3:	c3                   	ret

000000000000f1a4 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    f1a4:	55                   	push   %rbp
    f1a5:	48 89 e5             	mov    %rsp,%rbp
    f1a8:	be ff ff 00 00       	mov    $0xffff,%esi
    f1ad:	bf 01 00 00 00       	mov    $0x1,%edi
    f1b2:	e8 9b ff ff ff       	call   f152 <_Z41__static_initialization_and_destruction_0ii>
    f1b7:	5d                   	pop    %rbp
    f1b8:	c3                   	ret
    f1b9:	90                   	nop

000000000000f1ba <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    f1ba:	55                   	push   %rbp
    f1bb:	48 89 e5             	mov    %rsp,%rbp
    f1be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1c2:	48 8d 15 47 2b 01 00 	lea    0x12b47(%rip),%rdx        # 21d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    f1c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1cd:	48 89 10             	mov    %rdx,(%rax)
    f1d0:	90                   	nop
    f1d1:	5d                   	pop    %rbp
    f1d2:	c3                   	ret

000000000000f1d3 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    f1d3:	55                   	push   %rbp
    f1d4:	48 89 e5             	mov    %rsp,%rbp
    f1d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1df:	90                   	nop
    f1e0:	5d                   	pop    %rbp
    f1e1:	c3                   	ret

000000000000f1e2 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    f1e2:	55                   	push   %rbp
    f1e3:	48 89 e5             	mov    %rsp,%rbp
    f1e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    f1ea:	48 8d 05 0f 81 00 00 	lea    0x810f(%rip),%rax        # 17300 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    f1f1:	5d                   	pop    %rbp
    f1f2:	c3                   	ret
    f1f3:	90                   	nop

000000000000f1f4 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    f1f4:	55                   	push   %rbp
    f1f5:	48 89 e5             	mov    %rsp,%rbp
    f1f8:	48 83 ec 10          	sub    $0x10,%rsp
    f1fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f204:	48 89 c7             	mov    %rax,%rdi
    f207:	e8 ae ff ff ff       	call   f1ba <_ZNSt9exceptionC1Ev>
    f20c:	48 8d 15 ad 2a 01 00 	lea    0x12aad(%rip),%rdx        # 21cc0 <_ZTVSt19bad_optional_access+0x10>
    f213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f217:	48 89 10             	mov    %rdx,(%rax)
    f21a:	90                   	nop
    f21b:	c9                   	leave
    f21c:	c3                   	ret

000000000000f21d <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    f21d:	55                   	push   %rbp
    f21e:	48 89 e5             	mov    %rsp,%rbp
    f221:	53                   	push   %rbx
    f222:	48 83 ec 08          	sub    $0x8,%rsp
    f226:	bf 08 00 00 00       	mov    $0x8,%edi
    f22b:	e8 30 4f ff ff       	call   4160 <__cxa_allocate_exception@plt>
    f230:	48 89 c3             	mov    %rax,%rbx
    f233:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    f23a:	48 89 df             	mov    %rbx,%rdi
    f23d:	e8 b2 ff ff ff       	call   f1f4 <_ZNSt19bad_optional_accessC1Ev>
    f242:	48 8d 05 1f 41 00 00 	lea    0x411f(%rip),%rax        # 13368 <_ZNSt19bad_optional_accessD1Ev>
    f249:	48 89 c2             	mov    %rax,%rdx
    f24c:	48 8d 05 05 2b 01 00 	lea    0x12b05(%rip),%rax        # 21d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    f253:	48 89 c6             	mov    %rax,%rsi
    f256:	48 89 df             	mov    %rbx,%rdi
    f259:	e8 c2 53 ff ff       	call   4620 <__cxa_throw@plt>

000000000000f25e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    f25e:	55                   	push   %rbp
    f25f:	48 89 e5             	mov    %rsp,%rbp
    f262:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    f266:	e8 3a 00 00 00       	call   f2a5 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    f26b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f26f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    f273:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f277:	48 89 d6             	mov    %rdx,%rsi
    f27a:	48 89 c7             	mov    %rax,%rdi
    f27d:	e8 06 00 00 00       	call   f288 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    f282:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f286:	c9                   	leave
    f287:	c3                   	ret

000000000000f288 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    f288:	55                   	push   %rbp
    f289:	48 89 e5             	mov    %rsp,%rbp
    f28c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f290:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    f294:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f298:	48 8b 10             	mov    (%rax),%rdx
    f29b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f29f:	48 89 10             	mov    %rdx,(%rax)
    f2a2:	90                   	nop
    f2a3:	5d                   	pop    %rbp
    f2a4:	c3                   	ret

000000000000f2a5 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    f2a5:	55                   	push   %rbp
    f2a6:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    f2a9:	b8 00 00 00 00       	mov    $0x0,%eax
    f2ae:	5d                   	pop    %rbp
    f2af:	c3                   	ret

000000000000f2b0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    f2b0:	55                   	push   %rbp
    f2b1:	48 89 e5             	mov    %rsp,%rbp
    f2b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    f2b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2bc:	48 8b 00             	mov    (%rax),%rax
    f2bf:	5d                   	pop    %rbp
    f2c0:	c3                   	ret
    f2c1:	90                   	nop

000000000000f2c2 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    f2c2:	55                   	push   %rbp
    f2c3:	48 89 e5             	mov    %rsp,%rbp
    f2c6:	48 83 ec 10          	sub    $0x10,%rsp
    f2ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    f2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2d2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    f2d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2dc:	48 89 c7             	mov    %rax,%rdi
    f2df:	e8 04 00 00 00       	call   f2e8 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    f2e4:	90                   	nop
    f2e5:	c9                   	leave
    f2e6:	c3                   	ret
    f2e7:	90                   	nop

000000000000f2e8 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    f2e8:	55                   	push   %rbp
    f2e9:	48 89 e5             	mov    %rsp,%rbp
    f2ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    f2f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2f4:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f2fb:	00 
      _M_header._M_left = &_M_header;
    f2fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f304:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    f308:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f310:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    f314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f318:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    f31f:	00 
    }
    f320:	90                   	nop
    f321:	5d                   	pop    %rbp
    f322:	c3                   	ret
    f323:	90                   	nop

000000000000f324 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    f324:	55                   	push   %rbp
    f325:	48 89 e5             	mov    %rsp,%rbp
    f328:	48 83 ec 10          	sub    $0x10,%rsp
    f32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f334:	48 89 c7             	mov    %rax,%rdi
    f337:	e8 60 00 00 00       	call   f39c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    f33c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f340:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    f344:	90                   	nop
    f345:	c9                   	leave
    f346:	c3                   	ret
    f347:	90                   	nop

000000000000f348 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    f348:	55                   	push   %rbp
    f349:	48 89 e5             	mov    %rsp,%rbp
    f34c:	48 83 ec 10          	sub    $0x10,%rsp
    f350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f358:	48 89 c7             	mov    %rax,%rdi
    f35b:	e8 c4 ff ff ff       	call   f324 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    f360:	90                   	nop
    f361:	c9                   	leave
    f362:	c3                   	ret
    f363:	90                   	nop

000000000000f364 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    f364:	55                   	push   %rbp
    f365:	48 89 e5             	mov    %rsp,%rbp
    f368:	48 83 ec 10          	sub    $0x10,%rsp
    f36c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f374:	48 89 c7             	mov    %rax,%rdi
    f377:	e8 cc ff ff ff       	call   f348 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    f37c:	90                   	nop
    f37d:	c9                   	leave
    f37e:	c3                   	ret
    f37f:	90                   	nop

000000000000f380 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    f380:	55                   	push   %rbp
    f381:	48 89 e5             	mov    %rsp,%rbp
    f384:	48 83 ec 10          	sub    $0x10,%rsp
    f388:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f38c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f390:	48 89 c7             	mov    %rax,%rdi
    f393:	e8 cc ff ff ff       	call   f364 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    f398:	90                   	nop
    f399:	c9                   	leave
    f39a:	c3                   	ret
    f39b:	90                   	nop

000000000000f39c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    f39c:	55                   	push   %rbp
    f39d:	48 89 e5             	mov    %rsp,%rbp
    f3a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3a4:	90                   	nop
    f3a5:	5d                   	pop    %rbp
    f3a6:	c3                   	ret
    f3a7:	90                   	nop

000000000000f3a8 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    f3a8:	55                   	push   %rbp
    f3a9:	48 89 e5             	mov    %rsp,%rbp
    f3ac:	48 83 ec 10          	sub    $0x10,%rsp
    f3b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f3b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f3bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3c0:	48 89 d6             	mov    %rdx,%rsi
    f3c3:	48 89 c7             	mov    %rax,%rdi
    f3c6:	e8 33 06 00 00       	call   f9fe <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    f3cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3cf:	c9                   	leave
    f3d0:	c3                   	ret
    f3d1:	90                   	nop

000000000000f3d2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    f3d2:	55                   	push   %rbp
    f3d3:	48 89 e5             	mov    %rsp,%rbp
    f3d6:	48 83 ec 10          	sub    $0x10,%rsp
    f3da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f3e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f3ea:	48 89 d6             	mov    %rdx,%rsi
    f3ed:	48 89 c7             	mov    %rax,%rdi
    f3f0:	e8 b3 ff ff ff       	call   f3a8 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
    f3f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3f9:	c9                   	leave
    f3fa:	c3                   	ret
    f3fb:	90                   	nop

000000000000f3fc <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    f3fc:	55                   	push   %rbp
    f3fd:	48 89 e5             	mov    %rsp,%rbp
    f400:	48 83 ec 10          	sub    $0x10,%rsp
    f404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    f408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f40c:	48 89 c7             	mov    %rax,%rdi
    f40f:	e8 1a 00 00 00       	call   f42e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    f414:	84 c0                	test   %al,%al
    f416:	74 0e                	je     f426 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
    f418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f41c:	48 89 c7             	mov    %rax,%rdi
    f41f:	e8 04 06 00 00       	call   fa28 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
    f424:	eb 05                	jmp    f42b <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
    f426:	e8 f2 fd ff ff       	call   f21d <_ZSt27__throw_bad_optional_accessv>
      }
    f42b:	c9                   	leave
    f42c:	c3                   	ret
    f42d:	90                   	nop

000000000000f42e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    f42e:	55                   	push   %rbp
    f42f:	48 89 e5             	mov    %rsp,%rbp
    f432:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    f436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f43a:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    f43e:	5d                   	pop    %rbp
    f43f:	c3                   	ret

000000000000f440 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    f440:	55                   	push   %rbp
    f441:	48 89 e5             	mov    %rsp,%rbp
    f444:	48 83 ec 10          	sub    $0x10,%rsp
    f448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f44c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f450:	48 89 c7             	mov    %rax,%rdi
    f453:	e8 4c 06 00 00       	call   faa4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    f458:	90                   	nop
    f459:	c9                   	leave
    f45a:	c3                   	ret
    f45b:	90                   	nop

000000000000f45c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    f45c:	55                   	push   %rbp
    f45d:	48 89 e5             	mov    %rsp,%rbp
    f460:	48 83 ec 10          	sub    $0x10,%rsp
    f464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f46c:	48 89 c7             	mov    %rax,%rdi
    f46f:	e8 f8 05 00 00       	call   fa6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    f474:	90                   	nop
    f475:	c9                   	leave
    f476:	c3                   	ret
    f477:	90                   	nop

000000000000f478 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    f478:	55                   	push   %rbp
    f479:	48 89 e5             	mov    %rsp,%rbp
    f47c:	48 83 ec 10          	sub    $0x10,%rsp
    f480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f488:	48 89 c7             	mov    %rax,%rdi
    f48b:	e8 cc ff ff ff       	call   f45c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    f490:	90                   	nop
    f491:	c9                   	leave
    f492:	c3                   	ret
    f493:	90                   	nop

000000000000f494 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    f494:	55                   	push   %rbp
    f495:	48 89 e5             	mov    %rsp,%rbp
    f498:	48 83 ec 10          	sub    $0x10,%rsp
    f49c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4a4:	48 89 c7             	mov    %rax,%rdi
    f4a7:	e8 14 06 00 00       	call   fac0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    f4ac:	90                   	nop
    f4ad:	c9                   	leave
    f4ae:	c3                   	ret
    f4af:	90                   	nop

000000000000f4b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    f4b0:	55                   	push   %rbp
    f4b1:	48 89 e5             	mov    %rsp,%rbp
    f4b4:	48 83 ec 10          	sub    $0x10,%rsp
    f4b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4c0:	48 89 c7             	mov    %rax,%rdi
    f4c3:	e8 1a 0b 00 00       	call   ffe2 <_ZNSaIP13VkImageView_TED1Ev>
    f4c8:	90                   	nop
    f4c9:	c9                   	leave
    f4ca:	c3                   	ret
    f4cb:	90                   	nop

000000000000f4cc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    f4cc:	55                   	push   %rbp
    f4cd:	48 89 e5             	mov    %rsp,%rbp
    f4d0:	48 83 ec 10          	sub    $0x10,%rsp
    f4d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4dc:	48 89 c7             	mov    %rax,%rdi
    f4df:	e8 d6 0a 00 00       	call   ffba <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
    f4e4:	90                   	nop
    f4e5:	c9                   	leave
    f4e6:	c3                   	ret
    f4e7:	90                   	nop

000000000000f4e8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
    f4e8:	55                   	push   %rbp
    f4e9:	48 89 e5             	mov    %rsp,%rbp
    f4ec:	48 83 ec 10          	sub    $0x10,%rsp
    f4f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4f8:	48 89 c7             	mov    %rax,%rdi
    f4fb:	e8 cc ff ff ff       	call   f4cc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
    f500:	90                   	nop
    f501:	c9                   	leave
    f502:	c3                   	ret
    f503:	90                   	nop

000000000000f504 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    f504:	55                   	push   %rbp
    f505:	48 89 e5             	mov    %rsp,%rbp
    f508:	48 83 ec 10          	sub    $0x10,%rsp
    f50c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f514:	48 89 c7             	mov    %rax,%rdi
    f517:	e8 74 0b 00 00       	call   10090 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    f51c:	90                   	nop
    f51d:	c9                   	leave
    f51e:	c3                   	ret
    f51f:	90                   	nop

000000000000f520 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
    f520:	55                   	push   %rbp
    f521:	48 89 e5             	mov    %rsp,%rbp
    f524:	48 83 ec 10          	sub    $0x10,%rsp
    f528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f52c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f530:	48 89 c7             	mov    %rax,%rdi
    f533:	e8 cc ff ff ff       	call   f504 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    f538:	90                   	nop
    f539:	c9                   	leave
    f53a:	c3                   	ret
    f53b:	90                   	nop

000000000000f53c <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
    f53c:	55                   	push   %rbp
    f53d:	48 89 e5             	mov    %rsp,%rbp
    f540:	53                   	push   %rbx
    f541:	48 83 ec 38          	sub    $0x38,%rsp
    f545:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    f549:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    f54d:	e8 8e 4f ff ff       	call   44e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    f552:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f556:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f55a:	48 89 de             	mov    %rbx,%rsi
    f55d:	48 89 c7             	mov    %rax,%rdi
    f560:	e8 ad 0c 00 00       	call   10212 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    f565:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    f569:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f56d:	48 89 c7             	mov    %rax,%rdi
    f570:	e8 e2 0c 00 00       	call   10257 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    f575:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    f579:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f57d:	48 89 c7             	mov    %rax,%rdi
    f580:	e8 ed 0c 00 00       	call   10272 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
    f585:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f589:	c9                   	leave
    f58a:	c3                   	ret
    f58b:	90                   	nop

000000000000f58c <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    f58c:	55                   	push   %rbp
    f58d:	48 89 e5             	mov    %rsp,%rbp
    f590:	53                   	push   %rbx
    f591:	48 83 ec 38          	sub    $0x38,%rsp
    f595:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f599:	48 89 f0             	mov    %rsi,%rax
    f59c:	48 89 d6             	mov    %rdx,%rsi
    f59f:	48 89 f2             	mov    %rsi,%rdx
    f5a2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f5a6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    f5aa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    f5ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f5b2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f5b6:	48 89 d6             	mov    %rdx,%rsi
    f5b9:	48 89 c7             	mov    %rax,%rdi
    f5bc:	e8 f7 0d 00 00       	call   103b8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    f5c1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f5c5:	48 89 c7             	mov    %rax,%rdi
    f5c8:	e8 23 0e 00 00       	call   103f0 <_ZNKSt16initializer_listIPKcE3endEv>
    f5cd:	48 89 c3             	mov    %rax,%rbx
    f5d0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f5d4:	48 89 c7             	mov    %rax,%rdi
    f5d7:	e8 02 0e 00 00       	call   103de <_ZNKSt16initializer_listIPKcE5beginEv>
    f5dc:	48 89 c1             	mov    %rax,%rcx
    f5df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f5e3:	48 89 da             	mov    %rbx,%rdx
    f5e6:	48 89 ce             	mov    %rcx,%rsi
    f5e9:	48 89 c7             	mov    %rax,%rdi
    f5ec:	e8 65 0e 00 00       	call   10456 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    f5f1:	eb 1a                	jmp    f60d <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    f5f3:	48 89 c3             	mov    %rax,%rbx
    f5f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f5fa:	48 89 c7             	mov    %rax,%rdi
    f5fd:	e8 36 88 ff ff       	call   7e38 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    f602:	48 89 d8             	mov    %rbx,%rax
    f605:	48 89 c7             	mov    %rax,%rdi
    f608:	e8 73 50 ff ff       	call   4680 <_Unwind_Resume@plt>
    f60d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f611:	c9                   	leave
    f612:	c3                   	ret
    f613:	90                   	nop

000000000000f614 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    f614:	55                   	push   %rbp
    f615:	48 89 e5             	mov    %rsp,%rbp
    f618:	48 83 ec 10          	sub    $0x10,%rsp
    f61c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    f620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f624:	48 89 c7             	mov    %rax,%rdi
    f627:	e8 c4 96 ff ff       	call   8cf0 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    f62c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    f62f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f633:	48 8b 48 08          	mov    0x8(%rax),%rcx
    f637:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f63b:	48 8b 00             	mov    (%rax),%rax
    f63e:	48 89 ce             	mov    %rcx,%rsi
    f641:	48 89 c7             	mov    %rax,%rdi
    f644:	e8 bc 0e 00 00       	call   10505 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    f649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f64d:	48 89 c7             	mov    %rax,%rdi
    f650:	e8 e3 87 ff ff       	call   7e38 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    f655:	90                   	nop
    f656:	c9                   	leave
    f657:	c3                   	ret

000000000000f658 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    f658:	55                   	push   %rbp
    f659:	48 89 e5             	mov    %rsp,%rbp
    f65c:	48 83 ec 20          	sub    $0x20,%rsp
    f660:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    f664:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f668:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f66c:	48 89 d6             	mov    %rdx,%rsi
    f66f:	48 89 c7             	mov    %rax,%rdi
    f672:	e8 b9 0e 00 00       	call   10530 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    f677:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f67b:	c9                   	leave
    f67c:	c3                   	ret
    f67d:	90                   	nop

000000000000f67e <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    f67e:	55                   	push   %rbp
    f67f:	48 89 e5             	mov    %rsp,%rbp
    f682:	48 83 ec 20          	sub    $0x20,%rsp
    f686:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    f68a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f68e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f692:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f696:	48 89 d6             	mov    %rdx,%rsi
    f699:	48 89 c7             	mov    %rax,%rdi
    f69c:	e8 8f 0e 00 00       	call   10530 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    f6a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6a5:	c9                   	leave
    f6a6:	c3                   	ret

000000000000f6a7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    f6a7:	55                   	push   %rbp
    f6a8:	48 89 e5             	mov    %rsp,%rbp
    f6ab:	53                   	push   %rbx
    f6ac:	48 83 ec 18          	sub    $0x18,%rsp
    f6b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f6b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    f6b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6bc:	48 89 c7             	mov    %rax,%rdi
    f6bf:	e8 8a 0e 00 00       	call   1054e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    f6c4:	48 8b 18             	mov    (%rax),%rbx
    f6c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f6cb:	48 89 c7             	mov    %rax,%rdi
    f6ce:	e8 7b 0e 00 00       	call   1054e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    f6d3:	48 8b 00             	mov    (%rax),%rax
    f6d6:	48 39 c3             	cmp    %rax,%rbx
    f6d9:	0f 95 c0             	setne  %al
    f6dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f6e0:	c9                   	leave
    f6e1:	c3                   	ret

000000000000f6e2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    f6e2:	55                   	push   %rbp
    f6e3:	48 89 e5             	mov    %rsp,%rbp
    f6e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    f6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6ee:	48 8b 00             	mov    (%rax),%rax
    f6f1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f6f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6f9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    f6fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    f700:	5d                   	pop    %rbp
    f701:	c3                   	ret

000000000000f702 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    f702:	55                   	push   %rbp
    f703:	48 89 e5             	mov    %rsp,%rbp
    f706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    f70a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f70e:	48 8b 00             	mov    (%rax),%rax
    f711:	5d                   	pop    %rbp
    f712:	c3                   	ret
    f713:	90                   	nop

000000000000f714 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    f714:	55                   	push   %rbp
    f715:	48 89 e5             	mov    %rsp,%rbp
    f718:	53                   	push   %rbx
    f719:	48 83 ec 18          	sub    $0x18,%rsp
    f71d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f721:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    f725:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f729:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f72d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f731:	48 8b 40 10          	mov    0x10(%rax),%rax
    f735:	48 39 c2             	cmp    %rax,%rdx
    f738:	74 3c                	je     f776 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    f73a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f73e:	48 89 c7             	mov    %rax,%rdi
    f741:	e8 16 0e 00 00       	call   1055c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    f746:	48 89 c2             	mov    %rax,%rdx
    f749:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f74d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    f751:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f755:	48 89 ce             	mov    %rcx,%rsi
    f758:	48 89 c7             	mov    %rax,%rdi
    f75b:	e8 0a 0e 00 00       	call   1056a <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    f760:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f764:	48 8b 40 08          	mov    0x8(%rax),%rax
    f768:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f76c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f770:	48 89 50 08          	mov    %rdx,0x8(%rax)
    f774:	eb 30                	jmp    f7a6 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    f776:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f77a:	48 89 c7             	mov    %rax,%rdi
    f77d:	e8 da 0d 00 00       	call   1055c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    f782:	48 89 c3             	mov    %rax,%rbx
    f785:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f789:	48 89 c7             	mov    %rax,%rdi
    f78c:	e8 ed fe ff ff       	call   f67e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f791:	48 89 c1             	mov    %rax,%rcx
    f794:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f798:	48 89 da             	mov    %rbx,%rdx
    f79b:	48 89 ce             	mov    %rcx,%rsi
    f79e:	48 89 c7             	mov    %rax,%rdi
    f7a1:	e8 fe 0d 00 00       	call   105a4 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    f7a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7aa:	48 89 c7             	mov    %rax,%rdi
    f7ad:	e8 84 0f 00 00       	call   10736 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    f7b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f7b6:	c9                   	leave
    f7b7:	c3                   	ret

000000000000f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    f7b8:	55                   	push   %rbp
    f7b9:	48 89 e5             	mov    %rsp,%rbp
    f7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    f7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7c4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f7c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7cc:	48 8b 00             	mov    (%rax),%rax
    f7cf:	48 29 c2             	sub    %rax,%rdx
    f7d2:	48 89 d0             	mov    %rdx,%rax
    f7d5:	48 c1 f8 03          	sar    $0x3,%rax
    f7d9:	5d                   	pop    %rbp
    f7da:	c3                   	ret
    f7db:	90                   	nop

000000000000f7dc <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    f7dc:	55                   	push   %rbp
    f7dd:	48 89 e5             	mov    %rsp,%rbp
    f7e0:	48 83 ec 10          	sub    $0x10,%rsp
    f7e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    f7e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7ec:	48 8b 10             	mov    (%rax),%rdx
    f7ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7f3:	48 89 d6             	mov    %rdx,%rsi
    f7f6:	48 89 c7             	mov    %rax,%rdi
    f7f9:	e8 78 0f 00 00       	call   10776 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    f7fe:	c9                   	leave
    f7ff:	c3                   	ret

000000000000f800 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    f800:	55                   	push   %rbp
    f801:	48 89 e5             	mov    %rsp,%rbp
    f804:	48 83 ec 10          	sub    $0x10,%rsp
    f808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    f80c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f810:	48 8b 10             	mov    (%rax),%rdx
    f813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f817:	48 89 d6             	mov    %rdx,%rsi
    f81a:	48 89 c7             	mov    %rax,%rdi
    f81d:	e8 54 0f 00 00       	call   10776 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    f822:	c9                   	leave
    f823:	c3                   	ret

000000000000f824 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    f824:	55                   	push   %rbp
    f825:	48 89 e5             	mov    %rsp,%rbp
    f828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    f82c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f830:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f838:	48 8b 00             	mov    (%rax),%rax
    f83b:	48 29 c2             	sub    %rax,%rdx
    f83e:	48 c1 fa 02          	sar    $0x2,%rdx
    f842:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    f849:	db b6 6d 
    f84c:	48 0f af c2          	imul   %rdx,%rax
    f850:	5d                   	pop    %rbp
    f851:	c3                   	ret

000000000000f852 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
    f852:	55                   	push   %rbp
    f853:	48 89 e5             	mov    %rsp,%rbp
    f856:	48 83 ec 10          	sub    $0x10,%rsp
    f85a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    f85e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f862:	48 89 c7             	mov    %rax,%rdi
    f865:	e8 e2 99 ff ff       	call   924c <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    f86a:	c9                   	leave
    f86b:	c3                   	ret

000000000000f86c <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
    f86c:	55                   	push   %rbp
    f86d:	48 89 e5             	mov    %rsp,%rbp
    f870:	48 83 ec 10          	sub    $0x10,%rsp
    f874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
    f878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f87c:	48 89 c7             	mov    %rax,%rdi
    f87f:	e8 c8 99 ff ff       	call   924c <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    f884:	84 c0                	test   %al,%al
    f886:	74 0e                	je     f896 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
    f888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f88c:	48 89 c7             	mov    %rax,%rdi
    f88f:	e8 ca 99 ff ff       	call   925e <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    f894:	eb 05                	jmp    f89b <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
    f896:	e8 82 f9 ff ff       	call   f21d <_ZSt27__throw_bad_optional_accessv>
      }
    f89b:	c9                   	leave
    f89c:	c3                   	ret
    f89d:	90                   	nop

000000000000f89e <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    f89e:	55                   	push   %rbp
    f89f:	48 89 e5             	mov    %rsp,%rbp
    f8a2:	48 83 ec 20          	sub    $0x20,%rsp
    f8a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f8aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f8ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    f8b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f8b6:	48 89 c7             	mov    %rax,%rdi
    f8b9:	e8 ca 0e 00 00       	call   10788 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
    f8be:	8b 10                	mov    (%rax),%edx
    f8c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f8c4:	89 10                	mov    %edx,(%rax)
    f8c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8ca:	48 89 c7             	mov    %rax,%rdi
    f8cd:	e8 c4 0e 00 00       	call   10796 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
    f8d2:	48 89 c1             	mov    %rax,%rcx
    f8d5:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    f8d9:	48 8b 01             	mov    (%rcx),%rax
    f8dc:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    f8e0:	48 89 46 04          	mov    %rax,0x4(%rsi)
    f8e4:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
    f8e8:	48 8b 41 10          	mov    0x10(%rcx),%rax
    f8ec:	48 89 46 14          	mov    %rax,0x14(%rsi)
    f8f0:	90                   	nop
    f8f1:	c9                   	leave
    f8f2:	c3                   	ret
    f8f3:	90                   	nop

000000000000f8f4 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
    f8f4:	55                   	push   %rbp
    f8f5:	48 89 e5             	mov    %rsp,%rbp
    f8f8:	53                   	push   %rbx
    f8f9:	48 83 ec 18          	sub    $0x18,%rsp
    f8fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f901:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
    f905:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f909:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f90d:	48 89 c7             	mov    %rax,%rdi
    f910:	e8 8f 0e 00 00       	call   107a4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    f915:	48 89 c6             	mov    %rax,%rsi
    f918:	48 89 df             	mov    %rbx,%rdi
    f91b:	e8 b8 0e 00 00       	call   107d8 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
    f920:	90                   	nop
    f921:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f925:	c9                   	leave
    f926:	c3                   	ret
    f927:	90                   	nop

000000000000f928 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    f928:	55                   	push   %rbp
    f929:	48 89 e5             	mov    %rsp,%rbp
    f92c:	48 83 ec 20          	sub    $0x20,%rsp
    f930:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    f934:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f938:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f93c:	48 89 d6             	mov    %rdx,%rsi
    f93f:	48 89 c7             	mov    %rax,%rdi
    f942:	e8 c5 0e 00 00       	call   1080c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    f947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f94b:	c9                   	leave
    f94c:	c3                   	ret
    f94d:	90                   	nop

000000000000f94e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    f94e:	55                   	push   %rbp
    f94f:	48 89 e5             	mov    %rsp,%rbp
    f952:	48 83 ec 20          	sub    $0x20,%rsp
    f956:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    f95a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f95e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f962:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f966:	48 89 d6             	mov    %rdx,%rsi
    f969:	48 89 c7             	mov    %rax,%rdi
    f96c:	e8 9b 0e 00 00       	call   1080c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    f971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f975:	c9                   	leave
    f976:	c3                   	ret

000000000000f977 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    f977:	55                   	push   %rbp
    f978:	48 89 e5             	mov    %rsp,%rbp
    f97b:	53                   	push   %rbx
    f97c:	48 83 ec 18          	sub    $0x18,%rsp
    f980:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f984:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    f988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f98c:	48 89 c7             	mov    %rax,%rdi
    f98f:	e8 96 0e 00 00       	call   1082a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    f994:	48 8b 18             	mov    (%rax),%rbx
    f997:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f99b:	48 89 c7             	mov    %rax,%rdi
    f99e:	e8 87 0e 00 00       	call   1082a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    f9a3:	48 8b 00             	mov    (%rax),%rax
    f9a6:	48 39 c3             	cmp    %rax,%rbx
    f9a9:	0f 95 c0             	setne  %al
    f9ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f9b0:	c9                   	leave
    f9b1:	c3                   	ret

000000000000f9b2 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    f9b2:	55                   	push   %rbp
    f9b3:	48 89 e5             	mov    %rsp,%rbp
    f9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    f9ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9be:	48 8b 00             	mov    (%rax),%rax
    f9c1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9c9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    f9cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    f9d0:	5d                   	pop    %rbp
    f9d1:	c3                   	ret

000000000000f9d2 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    f9d2:	55                   	push   %rbp
    f9d3:	48 89 e5             	mov    %rsp,%rbp
    f9d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    f9da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9de:	48 8b 00             	mov    (%rax),%rax
    f9e1:	5d                   	pop    %rbp
    f9e2:	c3                   	ret
    f9e3:	90                   	nop

000000000000f9e4 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
    f9e4:	55                   	push   %rbp
    f9e5:	48 89 e5             	mov    %rsp,%rbp
    f9e8:	48 83 ec 10          	sub    $0x10,%rsp
    f9ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    f9f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9f4:	48 89 c7             	mov    %rax,%rdi
    f9f7:	e8 32 fa ff ff       	call   f42e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    f9fc:	c9                   	leave
    f9fd:	c3                   	ret

000000000000f9fe <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
    f9fe:	55                   	push   %rbp
    f9ff:	48 89 e5             	mov    %rsp,%rbp
    fa02:	48 83 ec 10          	sub    $0x10,%rsp
    fa06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
    fa0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa16:	48 89 d6             	mov    %rdx,%rsi
    fa19:	48 89 c7             	mov    %rax,%rdi
    fa1c:	e8 17 0e 00 00       	call   10838 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
    fa21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    fa25:	c9                   	leave
    fa26:	c3                   	ret
    fa27:	90                   	nop

000000000000fa28 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    fa28:	55                   	push   %rbp
    fa29:	48 89 e5             	mov    %rsp,%rbp
    fa2c:	48 83 ec 10          	sub    $0x10,%rsp
    fa30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    fa34:	e8 d5 4f ff ff       	call   4a0e <_ZSt23__is_constant_evaluatedv>
    fa39:	84 c0                	test   %al,%al
    fa3b:	74 1a                	je     fa57 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    fa3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa41:	48 89 c7             	mov    %rax,%rdi
    fa44:	e8 e5 f9 ff ff       	call   f42e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    fa49:	83 f0 01             	xor    $0x1,%eax
    fa4c:	84 c0                	test   %al,%al
    fa4e:	74 07                	je     fa57 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    fa50:	b8 01 00 00 00       	mov    $0x1,%eax
    fa55:	eb 05                	jmp    fa5c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
    fa57:	b8 00 00 00 00       	mov    $0x0,%eax
    fa5c:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    fa5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa62:	48 89 c7             	mov    %rax,%rdi
    fa65:	e8 60 0e 00 00       	call   108ca <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
    fa6a:	c9                   	leave
    fa6b:	c3                   	ret

000000000000fa6c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    fa6c:	55                   	push   %rbp
    fa6d:	48 89 e5             	mov    %rsp,%rbp
    fa70:	48 83 ec 10          	sub    $0x10,%rsp
    fa74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    fa78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa7c:	48 89 c7             	mov    %rax,%rdi
    fa7f:	e8 54 0e 00 00       	call   108d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    fa84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa88:	48 89 c7             	mov    %rax,%rdi
    fa8b:	e8 64 0e 00 00       	call   108f4 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    fa90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa94:	48 83 c0 08          	add    $0x8,%rax
    fa98:	48 89 c7             	mov    %rax,%rdi
    fa9b:	e8 22 f8 ff ff       	call   f2c2 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    faa0:	90                   	nop
    faa1:	c9                   	leave
    faa2:	c3                   	ret
    faa3:	90                   	nop

000000000000faa4 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    faa4:	55                   	push   %rbp
    faa5:	48 89 e5             	mov    %rsp,%rbp
    faa8:	48 83 ec 10          	sub    $0x10,%rsp
    faac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fab4:	48 89 c7             	mov    %rax,%rdi
    fab7:	e8 44 0e 00 00       	call   10900 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    fabc:	90                   	nop
    fabd:	c9                   	leave
    fabe:	c3                   	ret
    fabf:	90                   	nop

000000000000fac0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    fac0:	55                   	push   %rbp
    fac1:	48 89 e5             	mov    %rsp,%rbp
    fac4:	48 83 ec 10          	sub    $0x10,%rsp
    fac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    facc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fad0:	48 89 c7             	mov    %rax,%rdi
    fad3:	e8 9a 0e 00 00       	call   10972 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    fad8:	48 89 c2             	mov    %rax,%rdx
    fadb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fadf:	48 89 d6             	mov    %rdx,%rsi
    fae2:	48 89 c7             	mov    %rax,%rdi
    fae5:	e8 22 0e 00 00       	call   1090c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    faea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    faee:	48 89 c7             	mov    %rax,%rdi
    faf1:	e8 4a f9 ff ff       	call   f440 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    faf6:	90                   	nop
    faf7:	c9                   	leave
    faf8:	c3                   	ret
    faf9:	90                   	nop

000000000000fafa <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    fafa:	55                   	push   %rbp
    fafb:	48 89 e5             	mov    %rsp,%rbp
    fafe:	48 83 ec 20          	sub    $0x20,%rsp
    fb02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    fb06:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb0a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fb0e:	48 89 d6             	mov    %rdx,%rsi
    fb11:	48 89 c7             	mov    %rax,%rdi
    fb14:	e8 73 0e 00 00       	call   1098c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    fb19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb1d:	c9                   	leave
    fb1e:	c3                   	ret
    fb1f:	90                   	nop

000000000000fb20 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    fb20:	55                   	push   %rbp
    fb21:	48 89 e5             	mov    %rsp,%rbp
    fb24:	48 83 ec 20          	sub    $0x20,%rsp
    fb28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    fb2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb30:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fb34:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fb38:	48 89 d6             	mov    %rdx,%rsi
    fb3b:	48 89 c7             	mov    %rax,%rdi
    fb3e:	e8 49 0e 00 00       	call   1098c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    fb43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb47:	c9                   	leave
    fb48:	c3                   	ret

000000000000fb49 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    fb49:	55                   	push   %rbp
    fb4a:	48 89 e5             	mov    %rsp,%rbp
    fb4d:	53                   	push   %rbx
    fb4e:	48 83 ec 18          	sub    $0x18,%rsp
    fb52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fb56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    fb5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb5e:	48 89 c7             	mov    %rax,%rdi
    fb61:	e8 44 0e 00 00       	call   109aa <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    fb66:	48 8b 18             	mov    (%rax),%rbx
    fb69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fb6d:	48 89 c7             	mov    %rax,%rdi
    fb70:	e8 35 0e 00 00       	call   109aa <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    fb75:	48 8b 00             	mov    (%rax),%rax
    fb78:	48 39 c3             	cmp    %rax,%rbx
    fb7b:	0f 95 c0             	setne  %al
    fb7e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fb82:	c9                   	leave
    fb83:	c3                   	ret

000000000000fb84 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    fb84:	55                   	push   %rbp
    fb85:	48 89 e5             	mov    %rsp,%rbp
    fb88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    fb8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb90:	48 8b 00             	mov    (%rax),%rax
    fb93:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    fb9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb9e:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    fba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    fba5:	5d                   	pop    %rbp
    fba6:	c3                   	ret
    fba7:	90                   	nop

000000000000fba8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    fba8:	55                   	push   %rbp
    fba9:	48 89 e5             	mov    %rsp,%rbp
    fbac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    fbb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbb4:	48 8b 00             	mov    (%rax),%rax
    fbb7:	5d                   	pop    %rbp
    fbb8:	c3                   	ret
    fbb9:	90                   	nop

000000000000fbba <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    fbba:	55                   	push   %rbp
    fbbb:	48 89 e5             	mov    %rsp,%rbp
    fbbe:	53                   	push   %rbx
    fbbf:	48 83 ec 48          	sub    $0x48,%rsp
    fbc3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    fbc7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    fbcb:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    fbcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbd3:	48 89 d6             	mov    %rdx,%rsi
    fbd6:	48 89 c7             	mov    %rax,%rdi
    fbd9:	e8 da 0d 00 00       	call   109b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    fbde:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    fbe2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbe6:	48 89 c7             	mov    %rax,%rdi
    fbe9:	e8 f0 0d 00 00       	call   109de <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    fbee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fbf2:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    fbf6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fbfa:	48 89 d6             	mov    %rdx,%rsi
    fbfd:	48 89 c7             	mov    %rax,%rdi
    fc00:	e8 f3 0d 00 00       	call   109f8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    fc05:	84 c0                	test   %al,%al
    fc07:	75 32                	jne    fc3b <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    fc09:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fc0d:	48 89 c7             	mov    %rax,%rdi
    fc10:	e8 05 0e 00 00       	call   10a1a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    fc15:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fc19:	48 89 c7             	mov    %rax,%rdi
    fc1c:	e8 15 0e 00 00       	call   10a36 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    fc21:	48 89 c2             	mov    %rax,%rdx
    fc24:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    fc28:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    fc2c:	48 89 ce             	mov    %rcx,%rsi
    fc2f:	48 89 c7             	mov    %rax,%rdi
    fc32:	e8 1d 0e 00 00       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    fc37:	84 c0                	test   %al,%al
    fc39:	74 07                	je     fc42 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    fc3b:	b8 01 00 00 00       	mov    $0x1,%eax
    fc40:	eb 05                	jmp    fc47 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    fc42:	b8 00 00 00 00       	mov    $0x0,%eax
    fc47:	84 c0                	test   %al,%al
    fc49:	74 5d                	je     fca8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    fc4b:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    fc4f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fc53:	48 89 c7             	mov    %rax,%rdi
    fc56:	e8 4e 07 00 00       	call   103a9 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    fc5b:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    fc5e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    fc62:	48 89 d6             	mov    %rdx,%rsi
    fc65:	48 89 c7             	mov    %rax,%rdi
    fc68:	e8 10 0e 00 00       	call   10a7d <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    fc6d:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    fc71:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    fc75:	48 89 d6             	mov    %rdx,%rsi
    fc78:	48 89 c7             	mov    %rax,%rdi
    fc7b:	e8 32 0e 00 00       	call   10ab2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    fc80:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    fc84:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    fc88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc8c:	49 89 c8             	mov    %rcx,%r8
    fc8f:	48 89 d1             	mov    %rdx,%rcx
    fc92:	48 8d 15 87 7a 00 00 	lea    0x7a87(%rip),%rdx        # 17720 <_ZSt19piecewise_construct>
    fc99:	48 89 c6             	mov    %rax,%rsi
    fc9c:	48 89 df             	mov    %rbx,%rdi
    fc9f:	e8 2c 0e 00 00       	call   10ad0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    fca4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    fca8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fcac:	48 89 c7             	mov    %rax,%rdi
    fcaf:	e8 82 0d 00 00       	call   10a36 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    fcb4:	48 83 c0 20          	add    $0x20,%rax
      }
    fcb8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fcbc:	c9                   	leave
    fcbd:	c3                   	ret

000000000000fcbe <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    fcbe:	55                   	push   %rbp
    fcbf:	48 89 e5             	mov    %rsp,%rbp
    fcc2:	48 83 ec 20          	sub    $0x20,%rsp
    fcc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    fcca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcce:	48 89 c7             	mov    %rax,%rdi
    fcd1:	e8 1c 0f 00 00       	call   10bf2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    fcd6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fcda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcde:	48 89 c7             	mov    %rax,%rdi
    fce1:	e8 e6 0e 00 00       	call   10bcc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    fce6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fcea:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    fcee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fcf2:	48 89 d6             	mov    %rdx,%rsi
    fcf5:	48 89 c7             	mov    %rax,%rdi
    fcf8:	e8 1e 0f 00 00       	call   10c1b <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fcfd:	c9                   	leave
    fcfe:	c3                   	ret
    fcff:	90                   	nop

000000000000fd00 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    fd00:	55                   	push   %rbp
    fd01:	48 89 e5             	mov    %rsp,%rbp
    fd04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    fd0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd10:	48 8b 00             	mov    (%rax),%rax
    fd13:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fd17:	48 c1 e2 03          	shl    $0x3,%rdx
    fd1b:	48 01 d0             	add    %rdx,%rax
      }
    fd1e:	5d                   	pop    %rbp
    fd1f:	c3                   	ret

000000000000fd20 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    fd20:	55                   	push   %rbp
    fd21:	48 89 e5             	mov    %rsp,%rbp
    fd24:	48 83 ec 20          	sub    $0x20,%rsp
    fd28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    fd2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fd30:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fd34:	48 89 d6             	mov    %rdx,%rsi
    fd37:	48 89 c7             	mov    %rax,%rdi
    fd3a:	e8 17 0f 00 00       	call   10c56 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    fd3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd43:	c9                   	leave
    fd44:	c3                   	ret
    fd45:	90                   	nop

000000000000fd46 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    fd46:	55                   	push   %rbp
    fd47:	48 89 e5             	mov    %rsp,%rbp
    fd4a:	48 83 ec 20          	sub    $0x20,%rsp
    fd4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    fd52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd56:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fd5a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fd5e:	48 89 d6             	mov    %rdx,%rsi
    fd61:	48 89 c7             	mov    %rax,%rdi
    fd64:	e8 ed 0e 00 00       	call   10c56 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    fd69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd6d:	c9                   	leave
    fd6e:	c3                   	ret

000000000000fd6f <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    fd6f:	55                   	push   %rbp
    fd70:	48 89 e5             	mov    %rsp,%rbp
    fd73:	53                   	push   %rbx
    fd74:	48 83 ec 18          	sub    $0x18,%rsp
    fd78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    fd80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd84:	48 89 c7             	mov    %rax,%rdi
    fd87:	e8 e8 0e 00 00       	call   10c74 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    fd8c:	48 8b 18             	mov    (%rax),%rbx
    fd8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd93:	48 89 c7             	mov    %rax,%rdi
    fd96:	e8 d9 0e 00 00       	call   10c74 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    fd9b:	48 8b 00             	mov    (%rax),%rax
    fd9e:	48 39 c3             	cmp    %rax,%rbx
    fda1:	0f 95 c0             	setne  %al
    fda4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fda8:	c9                   	leave
    fda9:	c3                   	ret

000000000000fdaa <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    fdaa:	55                   	push   %rbp
    fdab:	48 89 e5             	mov    %rsp,%rbp
    fdae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    fdb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdb6:	48 8b 00             	mov    (%rax),%rax
    fdb9:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fdbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdc1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    fdc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    fdc8:	5d                   	pop    %rbp
    fdc9:	c3                   	ret

000000000000fdca <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    fdca:	55                   	push   %rbp
    fdcb:	48 89 e5             	mov    %rsp,%rbp
    fdce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    fdd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdd6:	48 8b 00             	mov    (%rax),%rax
    fdd9:	5d                   	pop    %rbp
    fdda:	c3                   	ret
    fddb:	90                   	nop

000000000000fddc <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    fddc:	55                   	push   %rbp
    fddd:	48 89 e5             	mov    %rsp,%rbp
    fde0:	48 83 ec 20          	sub    $0x20,%rsp
    fde4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    fde8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fdec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fdf0:	48 89 d6             	mov    %rdx,%rsi
    fdf3:	48 89 c7             	mov    %rax,%rdi
    fdf6:	e8 87 0e 00 00       	call   10c82 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    fdfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdff:	c9                   	leave
    fe00:	c3                   	ret
    fe01:	90                   	nop

000000000000fe02 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    fe02:	55                   	push   %rbp
    fe03:	48 89 e5             	mov    %rsp,%rbp
    fe06:	48 83 ec 20          	sub    $0x20,%rsp
    fe0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    fe0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe12:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fe16:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fe1a:	48 89 d6             	mov    %rdx,%rsi
    fe1d:	48 89 c7             	mov    %rax,%rdi
    fe20:	e8 5d 0e 00 00       	call   10c82 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    fe25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe29:	c9                   	leave
    fe2a:	c3                   	ret

000000000000fe2b <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    fe2b:	55                   	push   %rbp
    fe2c:	48 89 e5             	mov    %rsp,%rbp
    fe2f:	53                   	push   %rbx
    fe30:	48 83 ec 18          	sub    $0x18,%rsp
    fe34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fe38:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    fe3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe40:	48 89 c7             	mov    %rax,%rdi
    fe43:	e8 58 0e 00 00       	call   10ca0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    fe48:	48 8b 18             	mov    (%rax),%rbx
    fe4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fe4f:	48 89 c7             	mov    %rax,%rdi
    fe52:	e8 49 0e 00 00       	call   10ca0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    fe57:	48 8b 00             	mov    (%rax),%rax
    fe5a:	48 39 c3             	cmp    %rax,%rbx
    fe5d:	0f 95 c0             	setne  %al
    fe60:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fe64:	c9                   	leave
    fe65:	c3                   	ret

000000000000fe66 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    fe66:	55                   	push   %rbp
    fe67:	48 89 e5             	mov    %rsp,%rbp
    fe6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    fe6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe72:	48 8b 00             	mov    (%rax),%rax
    fe75:	48 8d 50 04          	lea    0x4(%rax),%rdx
    fe79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe7d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    fe80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    fe84:	5d                   	pop    %rbp
    fe85:	c3                   	ret

000000000000fe86 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    fe86:	55                   	push   %rbp
    fe87:	48 89 e5             	mov    %rsp,%rbp
    fe8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    fe8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe92:	48 8b 00             	mov    (%rax),%rax
    fe95:	5d                   	pop    %rbp
    fe96:	c3                   	ret
    fe97:	90                   	nop

000000000000fe98 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
    fe98:	55                   	push   %rbp
    fe99:	48 89 e5             	mov    %rsp,%rbp
    fe9c:	48 83 ec 20          	sub    $0x20,%rsp
    fea0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fea4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
    fea8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
    feac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    feb0:	48 89 c7             	mov    %rax,%rdi
    feb3:	e8 f6 0d 00 00       	call   10cae <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
    feb8:	48 89 c2             	mov    %rax,%rdx
    febb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    febf:	48 89 d6             	mov    %rdx,%rsi
    fec2:	48 89 c7             	mov    %rax,%rdi
    fec5:	e8 f2 0d 00 00       	call   10cbc <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
    feca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    fece:	c9                   	leave
    fecf:	c3                   	ret

000000000000fed0 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    fed0:	55                   	push   %rbp
    fed1:	48 89 e5             	mov    %rsp,%rbp
    fed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    fed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fedc:	48 8b 50 08          	mov    0x8(%rax),%rdx
    fee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fee4:	48 8b 00             	mov    (%rax),%rax
    fee7:	48 29 c2             	sub    %rax,%rdx
    feea:	48 89 d0             	mov    %rdx,%rax
    feed:	48 c1 f8 03          	sar    $0x3,%rax
    fef1:	5d                   	pop    %rbp
    fef2:	c3                   	ret
    fef3:	90                   	nop

000000000000fef4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    fef4:	55                   	push   %rbp
    fef5:	48 89 e5             	mov    %rsp,%rbp
    fef8:	48 83 ec 10          	sub    $0x10,%rsp
    fefc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    ff04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff08:	48 89 c7             	mov    %rax,%rdi
    ff0b:	e8 4e 0e 00 00       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ff10:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ff14:	0f 92 c0             	setb   %al
    ff17:	84 c0                	test   %al,%al
    ff19:	74 24                	je     ff3f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    ff1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff1f:	48 89 c7             	mov    %rax,%rdi
    ff22:	e8 37 0e 00 00       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ff27:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ff2b:	48 29 c2             	sub    %rax,%rdx
    ff2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff32:	48 89 d6             	mov    %rdx,%rsi
    ff35:	48 89 c7             	mov    %rax,%rdi
    ff38:	e8 45 0e 00 00       	call   10d82 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
    ff3d:	eb 38                	jmp    ff77 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    ff3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff43:	48 89 c7             	mov    %rax,%rdi
    ff46:	e8 13 0e 00 00       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    ff4b:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    ff4f:	0f 92 c0             	setb   %al
    ff52:	84 c0                	test   %al,%al
    ff54:	74 21                	je     ff77 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    ff56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff5a:	48 8b 00             	mov    (%rax),%rax
    ff5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ff61:	48 c1 e2 03          	shl    $0x3,%rdx
    ff65:	48 01 c2             	add    %rax,%rdx
    ff68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff6c:	48 89 d6             	mov    %rdx,%rsi
    ff6f:	48 89 c7             	mov    %rax,%rdi
    ff72:	e8 15 10 00 00       	call   10f8c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    ff77:	90                   	nop
    ff78:	c9                   	leave
    ff79:	c3                   	ret

000000000000ff7a <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    ff7a:	55                   	push   %rbp
    ff7b:	48 89 e5             	mov    %rsp,%rbp
    ff7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    ff86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff8a:	48 8b 00             	mov    (%rax),%rax
    ff8d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ff91:	48 c1 e2 03          	shl    $0x3,%rdx
    ff95:	48 01 d0             	add    %rdx,%rax
      }
    ff98:	5d                   	pop    %rbp
    ff99:	c3                   	ret

000000000000ff9a <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    ff9a:	55                   	push   %rbp
    ff9b:	48 89 e5             	mov    %rsp,%rbp
    ff9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffa2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    ffa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffaa:	48 8b 00             	mov    (%rax),%rax
    ffad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ffb1:	48 c1 e2 03          	shl    $0x3,%rdx
    ffb5:	48 01 d0             	add    %rdx,%rax
      }
    ffb8:	5d                   	pop    %rbp
    ffb9:	c3                   	ret

000000000000ffba <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    ffba:	55                   	push   %rbp
    ffbb:	48 89 e5             	mov    %rsp,%rbp
    ffbe:	48 83 ec 10          	sub    $0x10,%rsp
    ffc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    ffc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffca:	48 89 c7             	mov    %rax,%rdi
    ffcd:	e8 1a 10 00 00       	call   10fec <_ZNSaIP13VkImageView_TEC1Ev>
    ffd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffd6:	48 89 c7             	mov    %rax,%rdi
    ffd9:	e8 2a 10 00 00       	call   11008 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    ffde:	90                   	nop
    ffdf:	c9                   	leave
    ffe0:	c3                   	ret
    ffe1:	90                   	nop

000000000000ffe2 <_ZNSaIP13VkImageView_TED1Ev>:
    ffe2:	55                   	push   %rbp
    ffe3:	48 89 e5             	mov    %rsp,%rbp
    ffe6:	48 83 ec 10          	sub    $0x10,%rsp
    ffea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fff2:	48 89 c7             	mov    %rax,%rdi
    fff5:	e8 3c 10 00 00       	call   11036 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
    fffa:	90                   	nop
    fffb:	c9                   	leave
    fffc:	c3                   	ret
    fffd:	90                   	nop

000000000000fffe <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    fffe:	55                   	push   %rbp
    ffff:	48 89 e5             	mov    %rsp,%rbp
   10002:	48 83 ec 10          	sub    $0x10,%rsp
   10006:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1000a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1000e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10016:	48 8b 00             	mov    (%rax),%rax
   10019:	48 29 c2             	sub    %rax,%rdx
   1001c:	48 89 d0             	mov    %rdx,%rax
   1001f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   10023:	48 89 c2             	mov    %rax,%rdx
   10026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1002a:	48 8b 08             	mov    (%rax),%rcx
   1002d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10031:	48 89 ce             	mov    %rcx,%rsi
   10034:	48 89 c7             	mov    %rax,%rdi
   10037:	e8 06 10 00 00       	call   11042 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1003c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10040:	48 89 c7             	mov    %rax,%rdi
   10043:	e8 68 f4 ff ff       	call   f4b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   10048:	90                   	nop
   10049:	c9                   	leave
   1004a:	c3                   	ret
   1004b:	90                   	nop

000000000001004c <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1004c:	55                   	push   %rbp
   1004d:	48 89 e5             	mov    %rsp,%rbp
   10050:	48 83 ec 10          	sub    $0x10,%rsp
   10054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1005c:	48 89 c7             	mov    %rax,%rdi
   1005f:	e8 14 10 00 00       	call   11078 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10064:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1006b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1006f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10073:	48 8b 00             	mov    (%rax),%rax
   10076:	48 89 ce             	mov    %rcx,%rsi
   10079:	48 89 c7             	mov    %rax,%rdi
   1007c:	e8 05 10 00 00       	call   11086 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   10081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10085:	48 89 c7             	mov    %rax,%rdi
   10088:	e8 71 ff ff ff       	call   fffe <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   1008d:	90                   	nop
   1008e:	c9                   	leave
   1008f:	c3                   	ret

0000000000010090 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   10090:	55                   	push   %rbp
   10091:	48 89 e5             	mov    %rsp,%rbp
   10094:	48 83 ec 10          	sub    $0x10,%rsp
   10098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1009c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100a0:	48 89 c7             	mov    %rax,%rdi
   100a3:	e8 56 86 ff ff       	call   86fe <_ZNSaIP9VkImage_TEC1Ev>
   100a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100ac:	48 89 c7             	mov    %rax,%rdi
   100af:	e8 e6 ab ff ff       	call   ac9a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   100b4:	90                   	nop
   100b5:	c9                   	leave
   100b6:	c3                   	ret
   100b7:	90                   	nop

00000000000100b8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   100b8:	55                   	push   %rbp
   100b9:	48 89 e5             	mov    %rsp,%rbp
   100bc:	48 83 ec 20          	sub    $0x20,%rsp
   100c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   100c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   100c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   100cc:	48 89 d6             	mov    %rdx,%rsi
   100cf:	48 89 c7             	mov    %rax,%rdi
   100d2:	e8 d9 0f 00 00       	call   110b0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   100d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100db:	c9                   	leave
   100dc:	c3                   	ret
   100dd:	90                   	nop

00000000000100de <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   100de:	55                   	push   %rbp
   100df:	48 89 e5             	mov    %rsp,%rbp
   100e2:	48 83 ec 20          	sub    $0x20,%rsp
   100e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   100ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100ee:	48 8d 50 08          	lea    0x8(%rax),%rdx
   100f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   100f6:	48 89 d6             	mov    %rdx,%rsi
   100f9:	48 89 c7             	mov    %rax,%rdi
   100fc:	e8 af 0f 00 00       	call   110b0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10105:	c9                   	leave
   10106:	c3                   	ret

0000000000010107 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10107:	55                   	push   %rbp
   10108:	48 89 e5             	mov    %rsp,%rbp
   1010b:	53                   	push   %rbx
   1010c:	48 83 ec 18          	sub    $0x18,%rsp
   10110:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10114:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1011c:	48 89 c7             	mov    %rax,%rdi
   1011f:	e8 aa 0f 00 00       	call   110ce <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10124:	48 8b 18             	mov    (%rax),%rbx
   10127:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1012b:	48 89 c7             	mov    %rax,%rdi
   1012e:	e8 9b 0f 00 00       	call   110ce <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10133:	48 8b 00             	mov    (%rax),%rax
   10136:	48 39 c3             	cmp    %rax,%rbx
   10139:	0f 95 c0             	setne  %al
   1013c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10140:	c9                   	leave
   10141:	c3                   	ret

0000000000010142 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10142:	55                   	push   %rbp
   10143:	48 89 e5             	mov    %rsp,%rbp
   10146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1014a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1014e:	48 8b 00             	mov    (%rax),%rax
   10151:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10159:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1015c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10160:	5d                   	pop    %rbp
   10161:	c3                   	ret

0000000000010162 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10162:	55                   	push   %rbp
   10163:	48 89 e5             	mov    %rsp,%rbp
   10166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1016a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1016e:	48 8b 00             	mov    (%rax),%rax
   10171:	5d                   	pop    %rbp
   10172:	c3                   	ret
   10173:	90                   	nop

0000000000010174 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
   10174:	55                   	push   %rbp
   10175:	48 89 e5             	mov    %rsp,%rbp
   10178:	53                   	push   %rbx
   10179:	48 83 ec 18          	sub    $0x18,%rsp
   1017d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10181:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10185:	48 89 c7             	mov    %rax,%rdi
   10188:	e8 4f 0f 00 00       	call   110dc <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
   1018d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10191:	48 83 c0 08          	add    $0x8,%rax
   10195:	48 89 c7             	mov    %rax,%rdi
   10198:	e8 a3 43 ff ff       	call   4540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
   1019d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   101a1:	48 83 c0 08          	add    $0x8,%rax
   101a5:	48 8d 15 8e 74 00 00 	lea    0x748e(%rip),%rdx        # 1763a <_ZN6__pstl9execution2v1L5unseqE+0x323>
   101ac:	48 89 d6             	mov    %rdx,%rsi
   101af:	48 89 c7             	mov    %rax,%rdi
   101b2:	e8 59 43 ff ff       	call   4510 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
   101b7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   101bb:	e8 20 43 ff ff       	call   44e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   101c0:	48 89 03             	mov    %rax,(%rbx)
  }
   101c3:	eb 1e                	jmp    101e3 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
   101c5:	48 89 c3             	mov    %rax,%rbx
   101c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   101cc:	48 83 c0 08          	add    $0x8,%rax
   101d0:	48 89 c7             	mov    %rax,%rdi
   101d3:	e8 f8 3f ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   101d8:	48 89 d8             	mov    %rbx,%rax
   101db:	48 89 c7             	mov    %rax,%rdi
   101de:	e8 9d 44 ff ff       	call   4680 <_Unwind_Resume@plt>
   101e3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   101e7:	c9                   	leave
   101e8:	c3                   	ret
   101e9:	90                   	nop

00000000000101ea <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
   101ea:	55                   	push   %rbp
   101eb:	48 89 e5             	mov    %rsp,%rbp
   101ee:	48 83 ec 20          	sub    $0x20,%rsp
   101f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
   101f6:	e8 e5 42 ff ff       	call   44e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   101fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
   101ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10203:	48 83 c0 08          	add    $0x8,%rax
   10207:	48 89 c7             	mov    %rax,%rdi
   1020a:	e8 c1 3f ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1020f:	90                   	nop
   10210:	c9                   	leave
   10211:	c3                   	ret

0000000000010212 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   10212:	55                   	push   %rbp
   10213:	48 89 e5             	mov    %rsp,%rbp
   10216:	48 83 ec 20          	sub    $0x20,%rsp
   1021a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1021e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   10222:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10226:	48 89 c7             	mov    %rax,%rdi
   10229:	e8 ce 0e 00 00       	call   110fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   1022e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10236:	48 89 c7             	mov    %rax,%rdi
   10239:	e8 be 0e 00 00       	call   110fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   1023e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10242:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10246:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1024a:	48 89 d6             	mov    %rdx,%rsi
   1024d:	48 89 c7             	mov    %rax,%rdi
   10250:	e8 b8 0e 00 00       	call   1110d <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   10255:	c9                   	leave
   10256:	c3                   	ret

0000000000010257 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   10257:	55                   	push   %rbp
   10258:	48 89 e5             	mov    %rsp,%rbp
   1025b:	48 83 ec 10          	sub    $0x10,%rsp
   1025f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   10263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10267:	48 89 c7             	mov    %rax,%rdi
   1026a:	e8 07 0f 00 00       	call   11176 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   1026f:	c9                   	leave
   10270:	c3                   	ret
   10271:	90                   	nop

0000000000010272 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   10272:	55                   	push   %rbp
   10273:	48 89 e5             	mov    %rsp,%rbp
   10276:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   1027a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1027e:	48 8b 00             	mov    (%rax),%rax
   10281:	5d                   	pop    %rbp
   10282:	c3                   	ret
   10283:	90                   	nop

0000000000010284 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
   10284:	55                   	push   %rbp
   10285:	48 89 e5             	mov    %rsp,%rbp
   10288:	53                   	push   %rbx
   10289:	48 83 ec 18          	sub    $0x18,%rsp
   1028d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10291:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10295:	e8 46 42 ff ff       	call   44e0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   1029a:	48 89 03             	mov    %rax,(%rbx)
   1029d:	90                   	nop
   1029e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   102a2:	c9                   	leave
   102a3:	c3                   	ret

00000000000102a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   102a4:	55                   	push   %rbp
   102a5:	48 89 e5             	mov    %rsp,%rbp
   102a8:	48 83 ec 20          	sub    $0x20,%rsp
   102ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   102b4:	89 d0                	mov    %edx,%eax
   102b6:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   102b9:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   102bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   102c1:	be 01 00 00 00       	mov    $0x1,%esi
   102c6:	48 89 c7             	mov    %rax,%rdi
   102c9:	e8 02 41 ff ff       	call   43d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   102ce:	48 89 c7             	mov    %rax,%rdi
   102d1:	e8 d3 00 00 00       	call   103a9 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   102d6:	48 89 c2             	mov    %rax,%rdx
   102d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102dd:	48 89 d6             	mov    %rdx,%rsi
   102e0:	48 89 c7             	mov    %rax,%rdi
   102e3:	e8 d8 3e ff ff       	call   41c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   102e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102ec:	c9                   	leave
   102ed:	c3                   	ret

00000000000102ee <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   102ee:	55                   	push   %rbp
   102ef:	48 89 e5             	mov    %rsp,%rbp
   102f2:	48 83 ec 20          	sub    $0x20,%rsp
   102f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   102fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   102fe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10302:	48 89 d6             	mov    %rdx,%rsi
   10305:	48 89 c7             	mov    %rax,%rdi
   10308:	e8 c3 0e 00 00       	call   111d0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   1030d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10311:	c9                   	leave
   10312:	c3                   	ret
   10313:	90                   	nop

0000000000010314 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   10314:	55                   	push   %rbp
   10315:	48 89 e5             	mov    %rsp,%rbp
   10318:	48 83 ec 20          	sub    $0x20,%rsp
   1031c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   10320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10324:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10328:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1032c:	48 89 d6             	mov    %rdx,%rsi
   1032f:	48 89 c7             	mov    %rax,%rdi
   10332:	e8 99 0e 00 00       	call   111d0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   10337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1033b:	c9                   	leave
   1033c:	c3                   	ret

000000000001033d <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1033d:	55                   	push   %rbp
   1033e:	48 89 e5             	mov    %rsp,%rbp
   10341:	53                   	push   %rbx
   10342:	48 83 ec 18          	sub    $0x18,%rsp
   10346:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1034a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1034e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10352:	48 89 c7             	mov    %rax,%rdi
   10355:	e8 94 0e 00 00       	call   111ee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1035a:	48 8b 18             	mov    (%rax),%rbx
   1035d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10361:	48 89 c7             	mov    %rax,%rdi
   10364:	e8 85 0e 00 00       	call   111ee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10369:	48 8b 00             	mov    (%rax),%rax
   1036c:	48 39 c3             	cmp    %rax,%rbx
   1036f:	0f 95 c0             	setne  %al
   10372:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10376:	c9                   	leave
   10377:	c3                   	ret

0000000000010378 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10378:	55                   	push   %rbp
   10379:	48 89 e5             	mov    %rsp,%rbp
   1037c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10384:	48 8b 00             	mov    (%rax),%rax
   10387:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1038b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1038f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10396:	5d                   	pop    %rbp
   10397:	c3                   	ret

0000000000010398 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10398:	55                   	push   %rbp
   10399:	48 89 e5             	mov    %rsp,%rbp
   1039c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   103a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103a4:	48 8b 00             	mov    (%rax),%rax
   103a7:	5d                   	pop    %rbp
   103a8:	c3                   	ret

00000000000103a9 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   103a9:	55                   	push   %rbp
   103aa:	48 89 e5             	mov    %rsp,%rbp
   103ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   103b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103b5:	5d                   	pop    %rbp
   103b6:	c3                   	ret
   103b7:	90                   	nop

00000000000103b8 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   103b8:	55                   	push   %rbp
   103b9:	48 89 e5             	mov    %rsp,%rbp
   103bc:	48 83 ec 10          	sub    $0x10,%rsp
   103c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   103c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   103d0:	48 89 d6             	mov    %rdx,%rsi
   103d3:	48 89 c7             	mov    %rax,%rdi
   103d6:	e8 9f 97 ff ff       	call   9b7a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   103db:	90                   	nop
   103dc:	c9                   	leave
   103dd:	c3                   	ret

00000000000103de <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   103de:	55                   	push   %rbp
   103df:	48 89 e5             	mov    %rsp,%rbp
   103e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103ea:	48 8b 00             	mov    (%rax),%rax
   103ed:	5d                   	pop    %rbp
   103ee:	c3                   	ret
   103ef:	90                   	nop

00000000000103f0 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   103f0:	55                   	push   %rbp
   103f1:	48 89 e5             	mov    %rsp,%rbp
   103f4:	53                   	push   %rbx
   103f5:	48 83 ec 18          	sub    $0x18,%rsp
   103f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   103fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10401:	48 89 c7             	mov    %rax,%rdi
   10404:	e8 d5 ff ff ff       	call   103de <_ZNKSt16initializer_listIPKcE5beginEv>
   10409:	48 89 c3             	mov    %rax,%rbx
   1040c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10410:	48 89 c7             	mov    %rax,%rdi
   10413:	e8 e4 0d 00 00       	call   111fc <_ZNKSt16initializer_listIPKcE4sizeEv>
   10418:	48 c1 e0 03          	shl    $0x3,%rax
   1041c:	48 01 d8             	add    %rbx,%rax
   1041f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10423:	c9                   	leave
   10424:	c3                   	ret

0000000000010425 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   10425:	55                   	push   %rbp
   10426:	48 89 e5             	mov    %rsp,%rbp
   10429:	48 83 ec 10          	sub    $0x10,%rsp
   1042d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10431:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   10435:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10439:	48 89 c7             	mov    %rax,%rdi
   1043c:	e8 cd 0d 00 00       	call   1120e <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   10441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10445:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10449:	48 89 d6             	mov    %rdx,%rsi
   1044c:	48 89 c7             	mov    %rax,%rdi
   1044f:	e8 c5 0d 00 00       	call   11219 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   10454:	c9                   	leave
   10455:	c3                   	ret

0000000000010456 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   10456:	55                   	push   %rbp
   10457:	48 89 e5             	mov    %rsp,%rbp
   1045a:	53                   	push   %rbx
   1045b:	48 83 ec 38          	sub    $0x38,%rsp
   1045f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10463:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10467:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1046b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1046f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10473:	48 89 d6             	mov    %rdx,%rsi
   10476:	48 89 c7             	mov    %rax,%rdi
   10479:	e8 a7 ff ff ff       	call   10425 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   1047e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   10482:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   10486:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1048a:	48 89 c7             	mov    %rax,%rdi
   1048d:	e8 5e 88 ff ff       	call   8cf0 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10492:	48 89 c2             	mov    %rax,%rdx
   10495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10499:	48 89 d6             	mov    %rdx,%rsi
   1049c:	48 89 c7             	mov    %rax,%rdi
   1049f:	e8 4d 87 ff ff       	call   8bf1 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   104a4:	48 89 c6             	mov    %rax,%rsi
   104a7:	48 89 df             	mov    %rbx,%rdi
   104aa:	e8 57 a2 ff ff       	call   a706 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   104af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   104b3:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   104b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   104ba:	48 8b 00             	mov    (%rax),%rax
   104bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   104c1:	48 c1 e2 03          	shl    $0x3,%rdx
   104c5:	48 01 c2             	add    %rax,%rdx
   104c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   104cc:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   104d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   104d4:	48 89 c7             	mov    %rax,%rdi
   104d7:	e8 14 88 ff ff       	call   8cf0 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   104dc:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   104df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   104e3:	48 8b 10             	mov    (%rax),%rdx
   104e6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   104ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   104ee:	48 89 c7             	mov    %rax,%rdi
   104f1:	e8 3d 0d 00 00       	call   11233 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   104f6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   104fa:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   104fe:	90                   	nop
   104ff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10503:	c9                   	leave
   10504:	c3                   	ret

0000000000010505 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   10505:	55                   	push   %rbp
   10506:	48 89 e5             	mov    %rsp,%rbp
   10509:	48 83 ec 20          	sub    $0x20,%rsp
   1050d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10511:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10515:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   10519:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1051d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10521:	48 89 d6             	mov    %rdx,%rsi
   10524:	48 89 c7             	mov    %rax,%rdi
   10527:	e8 38 0d 00 00       	call   11264 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   1052c:	90                   	nop
   1052d:	c9                   	leave
   1052e:	c3                   	ret
   1052f:	90                   	nop

0000000000010530 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   10530:	55                   	push   %rbp
   10531:	48 89 e5             	mov    %rsp,%rbp
   10534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1053c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10540:	48 8b 10             	mov    (%rax),%rdx
   10543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10547:	48 89 10             	mov    %rdx,(%rax)
   1054a:	90                   	nop
   1054b:	5d                   	pop    %rbp
   1054c:	c3                   	ret
   1054d:	90                   	nop

000000000001054e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1054e:	55                   	push   %rbp
   1054f:	48 89 e5             	mov    %rsp,%rbp
   10552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   10556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1055a:	5d                   	pop    %rbp
   1055b:	c3                   	ret

000000000001055c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1055c:	55                   	push   %rbp
   1055d:	48 89 e5             	mov    %rsp,%rbp
   10560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10568:	5d                   	pop    %rbp
   10569:	c3                   	ret

000000000001056a <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1056a:	55                   	push   %rbp
   1056b:	48 89 e5             	mov    %rsp,%rbp
   1056e:	48 83 ec 20          	sub    $0x20,%rsp
   10572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10576:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1057a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1057e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10582:	48 89 c7             	mov    %rax,%rdi
   10585:	e8 d2 ff ff ff       	call   1055c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1058a:	48 89 c2             	mov    %rax,%rdx
   1058d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10595:	48 89 ce             	mov    %rcx,%rsi
   10598:	48 89 c7             	mov    %rax,%rdi
   1059b:	e8 ea 0c 00 00       	call   1128a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   105a0:	90                   	nop
   105a1:	c9                   	leave
   105a2:	c3                   	ret
   105a3:	90                   	nop

00000000000105a4 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   105a4:	55                   	push   %rbp
   105a5:	48 89 e5             	mov    %rsp,%rbp
   105a8:	53                   	push   %rbx
   105a9:	48 83 ec 68          	sub    $0x68,%rsp
   105ad:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   105b1:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   105b5:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   105b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105bd:	48 8d 15 7a 70 00 00 	lea    0x707a(%rip),%rdx        # 1763e <_ZN6__pstl9execution2v1L5unseqE+0x327>
   105c4:	be 01 00 00 00       	mov    $0x1,%esi
   105c9:	48 89 c7             	mov    %rax,%rdi
   105cc:	e8 fb 0c 00 00       	call   112cc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   105d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   105d5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105d9:	48 8b 00             	mov    (%rax),%rax
   105dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   105e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105e4:	48 8b 40 08          	mov    0x8(%rax),%rax
   105e8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   105ec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105f0:	48 89 c7             	mov    %rax,%rdi
   105f3:	e8 60 f0 ff ff       	call   f658 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   105f8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   105fc:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   10600:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10604:	48 89 d6             	mov    %rdx,%rsi
   10607:	48 89 c7             	mov    %rax,%rdi
   1060a:	e8 85 0d 00 00       	call   11394 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   1060f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   10613:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10617:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1061b:	48 89 d6             	mov    %rdx,%rsi
   1061e:	48 89 c7             	mov    %rax,%rdi
   10621:	e8 e0 a0 ff ff       	call   a706 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   10626:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   1062a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1062e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   10632:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10636:	48 89 c7             	mov    %rax,%rdi
   10639:	e8 1e ff ff ff       	call   1055c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1063e:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   10641:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10645:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1064c:	00 
	  _Alloc_traits::construct(this->_M_impl,
   1064d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10651:	48 01 c1             	add    %rax,%rcx
   10654:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10658:	48 89 ce             	mov    %rcx,%rsi
   1065b:	48 89 c7             	mov    %rax,%rdi
   1065e:	e8 07 ff ff ff       	call   1056a <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   10663:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1066a:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   1066b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1066f:	48 89 c7             	mov    %rax,%rdi
   10672:	e8 79 86 ff ff       	call   8cf0 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10677:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   1067a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1067e:	48 89 c7             	mov    %rax,%rdi
   10681:	e8 c8 fe ff ff       	call   1054e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10686:	48 8b 30             	mov    (%rax),%rsi
   10689:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1068d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10691:	48 89 d9             	mov    %rbx,%rcx
   10694:	48 89 c7             	mov    %rax,%rdi
   10697:	e8 3a 0d 00 00       	call   113d6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1069c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   106a0:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   106a5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106a9:	48 89 c7             	mov    %rax,%rdi
   106ac:	e8 3f 86 ff ff       	call   8cf0 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   106b1:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   106b4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   106b8:	48 89 c7             	mov    %rax,%rdi
   106bb:	e8 8e fe ff ff       	call   1054e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   106c0:	48 8b 00             	mov    (%rax),%rax
   106c3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   106c7:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   106cb:	48 89 d9             	mov    %rbx,%rcx
   106ce:	48 89 c7             	mov    %rax,%rdi
   106d1:	e8 00 0d 00 00       	call   113d6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   106d6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   106da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   106de:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   106e2:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   106e6:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   106ea:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   106ee:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   106f2:	48 89 ce             	mov    %rcx,%rsi
   106f5:	48 89 c7             	mov    %rax,%rdi
   106f8:	e8 27 86 ff ff       	call   8d24 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   106fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10701:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10705:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   10708:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1070c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10710:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   10714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10718:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1071f:	00 
   10720:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10724:	48 01 c2             	add    %rax,%rdx
   10727:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1072b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1072f:	90                   	nop
   10730:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10734:	c9                   	leave
   10735:	c3                   	ret

0000000000010736 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   10736:	55                   	push   %rbp
   10737:	48 89 e5             	mov    %rsp,%rbp
   1073a:	48 83 ec 20          	sub    $0x20,%rsp
   1073e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   10742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10746:	48 89 c7             	mov    %rax,%rdi
   10749:	e8 30 ef ff ff       	call   f67e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1074e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10752:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10756:	be 01 00 00 00       	mov    $0x1,%esi
   1075b:	48 89 c7             	mov    %rax,%rdi
   1075e:	e8 a5 0c 00 00       	call   11408 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   10763:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10767:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1076b:	48 89 c7             	mov    %rax,%rdi
   1076e:	e8 8f ef ff ff       	call   f702 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   10773:	c9                   	leave
   10774:	c3                   	ret
   10775:	90                   	nop

0000000000010776 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   10776:	55                   	push   %rbp
   10777:	48 89 e5             	mov    %rsp,%rbp
   1077a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1077e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10782:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10786:	5d                   	pop    %rbp
   10787:	c3                   	ret

0000000000010788 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10788:	55                   	push   %rbp
   10789:	48 89 e5             	mov    %rsp,%rbp
   1078c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10794:	5d                   	pop    %rbp
   10795:	c3                   	ret

0000000000010796 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10796:	55                   	push   %rbp
   10797:	48 89 e5             	mov    %rsp,%rbp
   1079a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1079e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107a2:	5d                   	pop    %rbp
   107a3:	c3                   	ret

00000000000107a4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   107a4:	55                   	push   %rbp
   107a5:	48 89 e5             	mov    %rsp,%rbp
   107a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   107ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107b0:	5d                   	pop    %rbp
   107b1:	c3                   	ret

00000000000107b2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   107b2:	55                   	push   %rbp
   107b3:	48 89 e5             	mov    %rsp,%rbp
   107b6:	48 83 ec 20          	sub    $0x20,%rsp
   107ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107be:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   107c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   107ca:	48 89 d6             	mov    %rdx,%rsi
   107cd:	48 89 c7             	mov    %rax,%rdi
   107d0:	e8 75 0c 00 00       	call   1144a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   107d5:	90                   	nop
   107d6:	c9                   	leave
   107d7:	c3                   	ret

00000000000107d8 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   107d8:	55                   	push   %rbp
   107d9:	48 89 e5             	mov    %rsp,%rbp
   107dc:	53                   	push   %rbx
   107dd:	48 83 ec 18          	sub    $0x18,%rsp
   107e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   107e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   107e9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   107ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   107f1:	48 89 c7             	mov    %rax,%rdi
   107f4:	e8 ab ff ff ff       	call   107a4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   107f9:	48 89 c6             	mov    %rax,%rsi
   107fc:	48 89 df             	mov    %rbx,%rdi
   107ff:	e8 ae ff ff ff       	call   107b2 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   10804:	90                   	nop
   10805:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10809:	c9                   	leave
   1080a:	c3                   	ret
   1080b:	90                   	nop

000000000001080c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1080c:	55                   	push   %rbp
   1080d:	48 89 e5             	mov    %rsp,%rbp
   10810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10814:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   10818:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1081c:	48 8b 10             	mov    (%rax),%rdx
   1081f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10823:	48 89 10             	mov    %rdx,(%rax)
   10826:	90                   	nop
   10827:	5d                   	pop    %rbp
   10828:	c3                   	ret
   10829:	90                   	nop

000000000001082a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1082a:	55                   	push   %rbp
   1082b:	48 89 e5             	mov    %rsp,%rbp
   1082e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   10832:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10836:	5d                   	pop    %rbp
   10837:	c3                   	ret

0000000000010838 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   10838:	55                   	push   %rbp
   10839:	48 89 e5             	mov    %rsp,%rbp
   1083c:	53                   	push   %rbx
   1083d:	48 83 ec 18          	sub    $0x18,%rsp
   10841:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10845:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   10849:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1084d:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   10851:	84 c0                	test   %al,%al
   10853:	74 35                	je     1088a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   10855:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10859:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1085d:	84 c0                	test   %al,%al
   1085f:	74 29                	je     1088a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   10861:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10865:	48 89 c7             	mov    %rax,%rdi
   10868:	e8 19 0c 00 00       	call   11486 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   1086d:	48 89 c3             	mov    %rax,%rbx
   10870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10874:	48 89 c7             	mov    %rax,%rdi
   10877:	e8 4e 00 00 00       	call   108ca <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   1087c:	48 89 de             	mov    %rbx,%rsi
   1087f:	48 89 c7             	mov    %rax,%rdi
   10882:	e8 0d 0c 00 00       	call   11494 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   10887:	90                   	nop
      }
   10888:	eb 38                	jmp    108c2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   1088a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1088e:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   10892:	84 c0                	test   %al,%al
   10894:	74 20                	je     108b6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   10896:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1089a:	48 89 c7             	mov    %rax,%rdi
   1089d:	e8 e4 0b 00 00       	call   11486 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   108a2:	48 89 c2             	mov    %rax,%rdx
   108a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108a9:	48 89 d6             	mov    %rdx,%rsi
   108ac:	48 89 c7             	mov    %rax,%rdi
   108af:	e8 1e 0c 00 00       	call   114d2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   108b4:	eb 0c                	jmp    108c2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   108b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108ba:	48 89 c7             	mov    %rax,%rdi
   108bd:	e8 56 0c 00 00       	call   11518 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   108c2:	90                   	nop
   108c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   108c7:	c9                   	leave
   108c8:	c3                   	ret
   108c9:	90                   	nop

00000000000108ca <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   108ca:	55                   	push   %rbp
   108cb:	48 89 e5             	mov    %rsp,%rbp
   108ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   108d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108d6:	5d                   	pop    %rbp
   108d7:	c3                   	ret

00000000000108d8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   108d8:	55                   	push   %rbp
   108d9:	48 89 e5             	mov    %rsp,%rbp
   108dc:	48 83 ec 10          	sub    $0x10,%rsp
   108e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   108e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108e8:	48 89 c7             	mov    %rax,%rdi
   108eb:	e8 50 0c 00 00       	call   11540 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   108f0:	90                   	nop
   108f1:	c9                   	leave
   108f2:	c3                   	ret
   108f3:	90                   	nop

00000000000108f4 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   108f4:	55                   	push   %rbp
   108f5:	48 89 e5             	mov    %rsp,%rbp
   108f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   108fc:	90                   	nop
   108fd:	5d                   	pop    %rbp
   108fe:	c3                   	ret
   108ff:	90                   	nop

0000000000010900 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   10900:	55                   	push   %rbp
   10901:	48 89 e5             	mov    %rsp,%rbp
   10904:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10908:	90                   	nop
   10909:	5d                   	pop    %rbp
   1090a:	c3                   	ret
   1090b:	90                   	nop

000000000001090c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1090c:	55                   	push   %rbp
   1090d:	48 89 e5             	mov    %rsp,%rbp
   10910:	48 83 ec 20          	sub    $0x20,%rsp
   10914:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10918:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1091c:	eb 49                	jmp    10967 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1091e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10922:	48 89 c7             	mov    %rax,%rdi
   10925:	e8 21 0c 00 00       	call   1154b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1092a:	48 89 c2             	mov    %rax,%rdx
   1092d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10931:	48 89 d6             	mov    %rdx,%rsi
   10934:	48 89 c7             	mov    %rax,%rdi
   10937:	e8 d0 ff ff ff       	call   1090c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   1093c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10940:	48 89 c7             	mov    %rax,%rdi
   10943:	e8 15 0c 00 00       	call   1155d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   10948:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   1094c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10950:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10954:	48 89 d6             	mov    %rdx,%rsi
   10957:	48 89 c7             	mov    %rax,%rdi
   1095a:	e8 11 0c 00 00       	call   11570 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   1095f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10963:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   10967:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1096c:	75 b0                	jne    1091e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   1096e:	90                   	nop
   1096f:	90                   	nop
   10970:	c9                   	leave
   10971:	c3                   	ret

0000000000010972 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   10972:	55                   	push   %rbp
   10973:	48 89 e5             	mov    %rsp,%rbp
   10976:	48 83 ec 10          	sub    $0x10,%rsp
   1097a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   1097e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10982:	48 89 c7             	mov    %rax,%rdi
   10985:	e8 20 0c 00 00       	call   115aa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   1098a:	c9                   	leave
   1098b:	c3                   	ret

000000000001098c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1098c:	55                   	push   %rbp
   1098d:	48 89 e5             	mov    %rsp,%rbp
   10990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10994:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   10998:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1099c:	48 8b 10             	mov    (%rax),%rdx
   1099f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109a3:	48 89 10             	mov    %rdx,(%rax)
   109a6:	90                   	nop
   109a7:	5d                   	pop    %rbp
   109a8:	c3                   	ret
   109a9:	90                   	nop

00000000000109aa <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   109aa:	55                   	push   %rbp
   109ab:	48 89 e5             	mov    %rsp,%rbp
   109ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   109b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109b6:	5d                   	pop    %rbp
   109b7:	c3                   	ret

00000000000109b8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   109b8:	55                   	push   %rbp
   109b9:	48 89 e5             	mov    %rsp,%rbp
   109bc:	48 83 ec 10          	sub    $0x10,%rsp
   109c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   109c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   109d0:	48 89 d6             	mov    %rdx,%rsi
   109d3:	48 89 c7             	mov    %rax,%rdi
   109d6:	e8 e1 0b 00 00       	call   115bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   109db:	c9                   	leave
   109dc:	c3                   	ret
   109dd:	90                   	nop

00000000000109de <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   109de:	55                   	push   %rbp
   109df:	48 89 e5             	mov    %rsp,%rbp
   109e2:	48 83 ec 10          	sub    $0x10,%rsp
   109e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   109ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109ee:	48 89 c7             	mov    %rax,%rdi
   109f1:	e8 12 0c 00 00       	call   11608 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   109f6:	c9                   	leave
   109f7:	c3                   	ret

00000000000109f8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   109f8:	55                   	push   %rbp
   109f9:	48 89 e5             	mov    %rsp,%rbp
   109fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   10a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a08:	48 8b 10             	mov    (%rax),%rdx
   10a0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a0f:	48 8b 00             	mov    (%rax),%rax
   10a12:	48 39 c2             	cmp    %rax,%rdx
   10a15:	0f 94 c0             	sete   %al
   10a18:	5d                   	pop    %rbp
   10a19:	c3                   	ret

0000000000010a1a <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   10a1a:	55                   	push   %rbp
   10a1b:	48 89 e5             	mov    %rsp,%rbp
   10a1e:	48 83 ec 10          	sub    $0x10,%rsp
   10a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   10a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a2a:	48 89 c7             	mov    %rax,%rdi
   10a2d:	e8 00 0c 00 00       	call   11632 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   10a32:	90                   	nop
   10a33:	c9                   	leave
   10a34:	c3                   	ret
   10a35:	90                   	nop

0000000000010a36 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10a36:	55                   	push   %rbp
   10a37:	48 89 e5             	mov    %rsp,%rbp
   10a3a:	48 83 ec 10          	sub    $0x10,%rsp
   10a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   10a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a46:	48 8b 00             	mov    (%rax),%rax
   10a49:	48 89 c7             	mov    %rax,%rdi
   10a4c:	e8 ed 0b 00 00       	call   1163e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   10a51:	c9                   	leave
   10a52:	c3                   	ret
   10a53:	90                   	nop

0000000000010a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   10a54:	55                   	push   %rbp
   10a55:	48 89 e5             	mov    %rsp,%rbp
   10a58:	48 83 ec 20          	sub    $0x20,%rsp
   10a5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10a64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   10a68:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10a6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a70:	48 89 d6             	mov    %rdx,%rsi
   10a73:	48 89 c7             	mov    %rax,%rdi
   10a76:	e8 e1 0b 00 00       	call   1165c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   10a7b:	c9                   	leave
   10a7c:	c3                   	ret

0000000000010a7d <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   10a7d:	55                   	push   %rbp
   10a7e:	48 89 e5             	mov    %rsp,%rbp
   10a81:	48 83 ec 10          	sub    $0x10,%rsp
   10a85:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a89:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   10a8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a91:	48 89 c7             	mov    %rax,%rdi
   10a94:	e8 eb 0b 00 00       	call   11684 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   10a99:	48 89 c2             	mov    %rax,%rdx
   10a9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aa0:	48 89 d6             	mov    %rdx,%rsi
   10aa3:	48 89 c7             	mov    %rax,%rdi
   10aa6:	e8 e7 0b 00 00       	call   11692 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   10aab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aaf:	c9                   	leave
   10ab0:	c3                   	ret
   10ab1:	90                   	nop

0000000000010ab2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   10ab2:	55                   	push   %rbp
   10ab3:	48 89 e5             	mov    %rsp,%rbp
   10ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10aba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   10abe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ac2:	48 8b 10             	mov    (%rax),%rdx
   10ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ac9:	48 89 10             	mov    %rdx,(%rax)
   10acc:	90                   	nop
   10acd:	5d                   	pop    %rbp
   10ace:	c3                   	ret
   10acf:	90                   	nop

0000000000010ad0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   10ad0:	55                   	push   %rbp
   10ad1:	48 89 e5             	mov    %rsp,%rbp
   10ad4:	41 54                	push   %r12
   10ad6:	53                   	push   %rbx
   10ad7:	48 83 ec 60          	sub    $0x60,%rsp
   10adb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10adf:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   10ae3:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   10ae7:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   10aeb:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   10aef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10af3:	48 89 c7             	mov    %rax,%rdi
   10af6:	e8 e6 0b 00 00       	call   116e1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   10afb:	49 89 c4             	mov    %rax,%r12
   10afe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10b02:	48 89 c7             	mov    %rax,%rdi
   10b05:	e8 c9 0b 00 00       	call   116d3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   10b0a:	48 89 c3             	mov    %rax,%rbx
   10b0d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10b11:	48 89 c7             	mov    %rax,%rdi
   10b14:	e8 ac 0b 00 00       	call   116c5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   10b19:	48 89 c2             	mov    %rax,%rdx
   10b1c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   10b20:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10b24:	4d 89 e0             	mov    %r12,%r8
   10b27:	48 89 d9             	mov    %rbx,%rcx
   10b2a:	48 89 c7             	mov    %rax,%rdi
   10b2d:	e8 be 0b 00 00       	call   116f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   10b32:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10b36:	48 89 c7             	mov    %rax,%rdi
   10b39:	e8 b2 10 00 00       	call   11bf0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   10b3e:	48 89 c2             	mov    %rax,%rdx
   10b41:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   10b45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b49:	48 89 ce             	mov    %rcx,%rsi
   10b4c:	48 89 c7             	mov    %rax,%rdi
   10b4f:	e8 4e 0c 00 00       	call   117a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   10b54:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10b58:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   10b5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b60:	48 85 c0             	test   %rax,%rax
   10b63:	74 1c                	je     10b81 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   10b65:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10b69:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10b6d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10b71:	48 89 ce             	mov    %rcx,%rsi
   10b74:	48 89 c7             	mov    %rax,%rdi
   10b77:	e8 92 10 00 00       	call   11c0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   10b7c:	48 89 c3             	mov    %rax,%rbx
   10b7f:	eb 17                	jmp    10b98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   10b81:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10b85:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10b89:	48 89 d6             	mov    %rdx,%rsi
   10b8c:	48 89 c7             	mov    %rax,%rdi
   10b8f:	e8 d0 10 00 00       	call   11c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   10b94:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   10b98:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10b9c:	48 89 c7             	mov    %rax,%rdi
   10b9f:	e8 c8 0b 00 00       	call   1176c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   10ba4:	48 89 d8             	mov    %rbx,%rax
   10ba7:	eb 1a                	jmp    10bc3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   10ba9:	48 89 c3             	mov    %rax,%rbx
   10bac:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10bb0:	48 89 c7             	mov    %rax,%rdi
   10bb3:	e8 b4 0b 00 00       	call   1176c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   10bb8:	48 89 d8             	mov    %rbx,%rax
   10bbb:	48 89 c7             	mov    %rax,%rdi
   10bbe:	e8 bd 3a ff ff       	call   4680 <_Unwind_Resume@plt>
   10bc3:	48 83 c4 60          	add    $0x60,%rsp
   10bc7:	5b                   	pop    %rbx
   10bc8:	41 5c                	pop    %r12
   10bca:	5d                   	pop    %rbp
   10bcb:	c3                   	ret

0000000000010bcc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   10bcc:	55                   	push   %rbp
   10bcd:	48 89 e5             	mov    %rsp,%rbp
   10bd0:	48 83 ec 20          	sub    $0x20,%rsp
   10bd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   10bd8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10bdc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10be0:	48 89 d6             	mov    %rdx,%rsi
   10be3:	48 89 c7             	mov    %rax,%rdi
   10be6:	e8 93 10 00 00       	call   11c7e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   10beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bef:	c9                   	leave
   10bf0:	c3                   	ret
   10bf1:	90                   	nop

0000000000010bf2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   10bf2:	55                   	push   %rbp
   10bf3:	48 89 e5             	mov    %rsp,%rbp
   10bf6:	48 83 ec 20          	sub    $0x20,%rsp
   10bfa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   10bfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c02:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10c06:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c0a:	48 89 d6             	mov    %rdx,%rsi
   10c0d:	48 89 c7             	mov    %rax,%rdi
   10c10:	e8 69 10 00 00       	call   11c7e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   10c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c19:	c9                   	leave
   10c1a:	c3                   	ret

0000000000010c1b <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   10c1b:	55                   	push   %rbp
   10c1c:	48 89 e5             	mov    %rsp,%rbp
   10c1f:	53                   	push   %rbx
   10c20:	48 83 ec 18          	sub    $0x18,%rsp
   10c24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c28:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   10c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c30:	48 89 c7             	mov    %rax,%rdi
   10c33:	e8 64 10 00 00       	call   11c9c <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10c38:	48 8b 18             	mov    (%rax),%rbx
   10c3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c3f:	48 89 c7             	mov    %rax,%rdi
   10c42:	e8 55 10 00 00       	call   11c9c <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10c47:	48 8b 00             	mov    (%rax),%rax
   10c4a:	48 39 c3             	cmp    %rax,%rbx
   10c4d:	0f 94 c0             	sete   %al
   10c50:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10c54:	c9                   	leave
   10c55:	c3                   	ret

0000000000010c56 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   10c56:	55                   	push   %rbp
   10c57:	48 89 e5             	mov    %rsp,%rbp
   10c5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   10c62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c66:	48 8b 10             	mov    (%rax),%rdx
   10c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c6d:	48 89 10             	mov    %rdx,(%rax)
   10c70:	90                   	nop
   10c71:	5d                   	pop    %rbp
   10c72:	c3                   	ret
   10c73:	90                   	nop

0000000000010c74 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   10c74:	55                   	push   %rbp
   10c75:	48 89 e5             	mov    %rsp,%rbp
   10c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   10c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c80:	5d                   	pop    %rbp
   10c81:	c3                   	ret

0000000000010c82 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   10c82:	55                   	push   %rbp
   10c83:	48 89 e5             	mov    %rsp,%rbp
   10c86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   10c8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c92:	48 8b 10             	mov    (%rax),%rdx
   10c95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c99:	48 89 10             	mov    %rdx,(%rax)
   10c9c:	90                   	nop
   10c9d:	5d                   	pop    %rbp
   10c9e:	c3                   	ret
   10c9f:	90                   	nop

0000000000010ca0 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   10ca0:	55                   	push   %rbp
   10ca1:	48 89 e5             	mov    %rsp,%rbp
   10ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   10ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cac:	5d                   	pop    %rbp
   10cad:	c3                   	ret

0000000000010cae <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   10cae:	55                   	push   %rbp
   10caf:	48 89 e5             	mov    %rsp,%rbp
   10cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   10cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cba:	5d                   	pop    %rbp
   10cbb:	c3                   	ret

0000000000010cbc <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   10cbc:	55                   	push   %rbp
   10cbd:	48 89 e5             	mov    %rsp,%rbp
   10cc0:	53                   	push   %rbx
   10cc1:	48 83 ec 38          	sub    $0x38,%rsp
   10cc5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10cc9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   10ccd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10cd1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   10cd5:	48 89 d6             	mov    %rdx,%rsi
   10cd8:	48 89 c7             	mov    %rax,%rdi
   10cdb:	e8 ca 0f 00 00       	call   11caa <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   10ce0:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   10ce4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10ce8:	48 89 d6             	mov    %rdx,%rsi
   10ceb:	48 89 c7             	mov    %rax,%rdi
   10cee:	e8 eb 0f 00 00       	call   11cde <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   10cf3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   10cf7:	48 89 c7             	mov    %rax,%rdi
   10cfa:	e8 1b 7a ff ff       	call   871a <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   10cff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d03:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10d07:	48 89 d6             	mov    %rdx,%rsi
   10d0a:	48 89 c7             	mov    %rax,%rdi
   10d0d:	e8 f2 0f 00 00       	call   11d04 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   10d12:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10d16:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10d1a:	48 89 d6             	mov    %rdx,%rsi
   10d1d:	48 89 c7             	mov    %rax,%rdi
   10d20:	e8 df 0f 00 00       	call   11d04 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   10d25:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10d29:	48 89 c7             	mov    %rax,%rdi
   10d2c:	e8 9d 8a ff ff       	call   97ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10d31:	48 89 c3             	mov    %rax,%rbx
   10d34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d38:	48 89 c7             	mov    %rax,%rdi
   10d3b:	e8 8e 8a ff ff       	call   97ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10d40:	48 89 de             	mov    %rbx,%rsi
   10d43:	48 89 c7             	mov    %rax,%rdi
   10d46:	e8 11 10 00 00       	call   11d5c <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   10d4b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10d4f:	48 89 c7             	mov    %rax,%rdi
   10d52:	e8 55 7a ff ff       	call   87ac <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   10d57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10d5b:	c9                   	leave
   10d5c:	c3                   	ret
   10d5d:	90                   	nop

0000000000010d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10d5e:	55                   	push   %rbp
   10d5f:	48 89 e5             	mov    %rsp,%rbp
   10d62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10d66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d6a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d72:	48 8b 00             	mov    (%rax),%rax
   10d75:	48 29 c2             	sub    %rax,%rdx
   10d78:	48 89 d0             	mov    %rdx,%rax
   10d7b:	48 c1 f8 03          	sar    $0x3,%rax
   10d7f:	5d                   	pop    %rbp
   10d80:	c3                   	ret
   10d81:	90                   	nop

0000000000010d82 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   10d82:	55                   	push   %rbp
   10d83:	48 89 e5             	mov    %rsp,%rbp
   10d86:	53                   	push   %rbx
   10d87:	48 83 ec 38          	sub    $0x38,%rsp
   10d8b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10d8f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   10d93:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   10d98:	0f 84 e7 01 00 00    	je     10f85 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   10d9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10da2:	48 89 c7             	mov    %rax,%rdi
   10da5:	e8 b4 ff ff ff       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10daa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10dae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10db2:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   10db6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10dba:	48 8b 40 08          	mov    0x8(%rax),%rax
   10dbe:	48 29 c2             	sub    %rax,%rdx
   10dc1:	48 89 d0             	mov    %rdx,%rax
   10dc4:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10dc8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   10dcc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10dd0:	48 89 c7             	mov    %rax,%rdi
   10dd3:	e8 a4 0f 00 00       	call   11d7c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   10dd8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10ddc:	72 16                	jb     10df4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   10dde:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10de2:	48 89 c7             	mov    %rax,%rdi
   10de5:	e8 92 0f 00 00       	call   11d7c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   10dea:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10dee:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10df2:	73 07                	jae    10dfb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   10df4:	b8 01 00 00 00       	mov    $0x1,%eax
   10df9:	eb 05                	jmp    10e00 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   10dfb:	b8 00 00 00 00       	mov    $0x0,%eax
   10e00:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   10e02:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10e06:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   10e0a:	72 33                	jb     10e3f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   10e0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e10:	48 89 c7             	mov    %rax,%rdi
   10e13:	e8 60 02 00 00       	call   11078 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10e18:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   10e1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e1f:	48 8b 40 08          	mov    0x8(%rax),%rax
   10e23:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10e27:	48 89 ce             	mov    %rcx,%rsi
   10e2a:	48 89 c7             	mov    %rax,%rdi
   10e2d:	e8 6c 0f 00 00       	call   11d9e <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10e32:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10e36:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   10e3a:	e9 46 01 00 00       	jmp    10f85 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10e3f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10e43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e47:	48 8d 15 0a 68 00 00 	lea    0x680a(%rip),%rdx        # 17658 <_ZN6__pstl9execution2v1L5unseqE+0x341>
   10e4e:	48 89 ce             	mov    %rcx,%rsi
   10e51:	48 89 c7             	mov    %rax,%rdi
   10e54:	e8 6f 0f 00 00       	call   11dc8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   10e59:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   10e5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e61:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10e65:	48 89 d6             	mov    %rdx,%rsi
   10e68:	48 89 c7             	mov    %rax,%rdi
   10e6b:	e8 20 10 00 00       	call   11e90 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   10e70:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   10e74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e78:	48 89 c7             	mov    %rax,%rdi
   10e7b:	e8 f8 01 00 00       	call   11078 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10e80:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10e83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e87:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10e8e:	00 
   10e8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10e93:	48 01 c1             	add    %rax,%rcx
   10e96:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10e9a:	48 89 c6             	mov    %rax,%rsi
   10e9d:	48 89 cf             	mov    %rcx,%rdi
   10ea0:	e8 f9 0e 00 00       	call   11d9e <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   10ea5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ea9:	48 89 c7             	mov    %rax,%rdi
   10eac:	e8 c7 01 00 00       	call   11078 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10eb1:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   10eb4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10eb8:	48 8b 70 08          	mov    0x8(%rax),%rsi
   10ebc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ec0:	48 8b 00             	mov    (%rax),%rax
   10ec3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10ec7:	48 89 c7             	mov    %rax,%rdi
   10eca:	e8 f4 0f 00 00       	call   11ec3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   10ecf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   10ed3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10ed7:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   10edb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10edf:	48 8b 12             	mov    (%rdx),%rdx
   10ee2:	48 29 d1             	sub    %rdx,%rcx
   10ee5:	48 c1 f9 03          	sar    $0x3,%rcx
   10ee9:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   10eec:	48 89 d6             	mov    %rdx,%rsi
   10eef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10ef3:	48 8b 0a             	mov    (%rdx),%rcx
   10ef6:	48 89 f2             	mov    %rsi,%rdx
   10ef9:	48 89 ce             	mov    %rcx,%rsi
   10efc:	48 89 c7             	mov    %rax,%rdi
   10eff:	e8 3e 01 00 00       	call   11042 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   10f04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f08:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10f0c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   10f0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10f13:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10f17:	48 01 d0             	add    %rdx,%rax
   10f1a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10f21:	00 
   10f22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10f26:	48 01 c2             	add    %rax,%rdx
   10f29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f2d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   10f31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f35:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10f3c:	00 
   10f3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10f41:	48 01 c2             	add    %rax,%rdx
   10f44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f48:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10f4c:	eb 37                	jmp    10f85 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10f4e:	48 89 c7             	mov    %rax,%rdi
   10f51:	e8 ca 31 ff ff       	call   4120 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   10f56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f5a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10f5e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10f62:	48 89 ce             	mov    %rcx,%rsi
   10f65:	48 89 c7             	mov    %rax,%rdi
   10f68:	e8 d5 00 00 00       	call   11042 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   10f6d:	e8 fe 35 ff ff       	call   4570 <__cxa_rethrow@plt>
		  __catch(...)
   10f72:	48 89 c3             	mov    %rax,%rbx
   10f75:	e8 96 36 ff ff       	call   4610 <__cxa_end_catch@plt>
   10f7a:	48 89 d8             	mov    %rbx,%rax
   10f7d:	48 89 c7             	mov    %rax,%rdi
   10f80:	e8 fb 36 ff ff       	call   4680 <_Unwind_Resume@plt>
    }
   10f85:	90                   	nop
   10f86:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10f8a:	c9                   	leave
   10f8b:	c3                   	ret

0000000000010f8c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   10f8c:	55                   	push   %rbp
   10f8d:	48 89 e5             	mov    %rsp,%rbp
   10f90:	48 83 ec 20          	sub    $0x20,%rsp
   10f94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10f98:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   10f9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fa0:	48 8b 40 08          	mov    0x8(%rax),%rax
   10fa4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10fa8:	48 c1 f8 03          	sar    $0x3,%rax
   10fac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10fb0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10fb5:	74 32                	je     10fe9 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   10fb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fbb:	48 89 c7             	mov    %rax,%rdi
   10fbe:	e8 b5 00 00 00       	call   11078 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10fc3:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   10fc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fca:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10fce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10fd2:	48 89 ce             	mov    %rcx,%rsi
   10fd5:	48 89 c7             	mov    %rax,%rdi
   10fd8:	e8 a9 00 00 00       	call   11086 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   10fdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fe1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10fe5:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   10fe9:	90                   	nop
   10fea:	c9                   	leave
   10feb:	c3                   	ret

0000000000010fec <_ZNSaIP13VkImageView_TEC1Ev>:
   10fec:	55                   	push   %rbp
   10fed:	48 89 e5             	mov    %rsp,%rbp
   10ff0:	48 83 ec 10          	sub    $0x10,%rsp
   10ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ffc:	48 89 c7             	mov    %rax,%rdi
   10fff:	e8 f2 0e 00 00       	call   11ef6 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   11004:	90                   	nop
   11005:	c9                   	leave
   11006:	c3                   	ret
   11007:	90                   	nop

0000000000011008 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   11008:	55                   	push   %rbp
   11009:	48 89 e5             	mov    %rsp,%rbp
   1100c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   11010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11014:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1101b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1101f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   11026:	00 
   11027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1102b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   11032:	00 
	{ }
   11033:	90                   	nop
   11034:	5d                   	pop    %rbp
   11035:	c3                   	ret

0000000000011036 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
   11036:	55                   	push   %rbp
   11037:	48 89 e5             	mov    %rsp,%rbp
   1103a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1103e:	90                   	nop
   1103f:	5d                   	pop    %rbp
   11040:	c3                   	ret
   11041:	90                   	nop

0000000000011042 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   11042:	55                   	push   %rbp
   11043:	48 89 e5             	mov    %rsp,%rbp
   11046:	48 83 ec 20          	sub    $0x20,%rsp
   1104a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1104e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11052:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   11056:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1105b:	74 17                	je     11074 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1105d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11061:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11065:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11069:	48 89 ce             	mov    %rcx,%rsi
   1106c:	48 89 c7             	mov    %rax,%rdi
   1106f:	e8 8d 0e 00 00       	call   11f01 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   11074:	90                   	nop
   11075:	c9                   	leave
   11076:	c3                   	ret
   11077:	90                   	nop

0000000000011078 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   11078:	55                   	push   %rbp
   11079:	48 89 e5             	mov    %rsp,%rbp
   1107c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   11080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11084:	5d                   	pop    %rbp
   11085:	c3                   	ret

0000000000011086 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   11086:	55                   	push   %rbp
   11087:	48 89 e5             	mov    %rsp,%rbp
   1108a:	48 83 ec 20          	sub    $0x20,%rsp
   1108e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11092:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11096:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1109a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1109e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110a2:	48 89 d6             	mov    %rdx,%rsi
   110a5:	48 89 c7             	mov    %rax,%rdi
   110a8:	e8 82 0e 00 00       	call   11f2f <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   110ad:	90                   	nop
   110ae:	c9                   	leave
   110af:	c3                   	ret

00000000000110b0 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   110b0:	55                   	push   %rbp
   110b1:	48 89 e5             	mov    %rsp,%rbp
   110b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   110bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   110c0:	48 8b 10             	mov    (%rax),%rdx
   110c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110c7:	48 89 10             	mov    %rdx,(%rax)
   110ca:	90                   	nop
   110cb:	5d                   	pop    %rbp
   110cc:	c3                   	ret
   110cd:	90                   	nop

00000000000110ce <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   110ce:	55                   	push   %rbp
   110cf:	48 89 e5             	mov    %rsp,%rbp
   110d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   110d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110da:	5d                   	pop    %rbp
   110db:	c3                   	ret

00000000000110dc <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   110dc:	55                   	push   %rbp
   110dd:	48 89 e5             	mov    %rsp,%rbp
   110e0:	53                   	push   %rbx
   110e1:	48 83 ec 18          	sub    $0x18,%rsp
   110e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   110e9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   110ed:	e8 6c e1 ff ff       	call   f25e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   110f2:	48 89 03             	mov    %rax,(%rbx)
	{ }
   110f5:	90                   	nop
   110f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   110fa:	c9                   	leave
   110fb:	c3                   	ret

00000000000110fc <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   110fc:	55                   	push   %rbp
   110fd:	48 89 e5             	mov    %rsp,%rbp
   11100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   11104:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11108:	48 8b 00             	mov    (%rax),%rax
   1110b:	5d                   	pop    %rbp
   1110c:	c3                   	ret

000000000001110d <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   1110d:	55                   	push   %rbp
   1110e:	48 89 e5             	mov    %rsp,%rbp
   11111:	53                   	push   %rbx
   11112:	48 83 ec 38          	sub    $0x38,%rsp
   11116:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1111a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   1111e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11122:	48 8b 00             	mov    (%rax),%rax
   11125:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11129:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1112d:	48 89 c7             	mov    %rax,%rdi
   11130:	e8 7b e1 ff ff       	call   f2b0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   11135:	48 89 c3             	mov    %rax,%rbx
   11138:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1113c:	48 8b 00             	mov    (%rax),%rax
   1113f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11143:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   11147:	48 89 c7             	mov    %rax,%rdi
   1114a:	e8 61 e1 ff ff       	call   f2b0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1114f:	48 29 c3             	sub    %rax,%rbx
   11152:	48 89 da             	mov    %rbx,%rdx
   11155:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11159:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   1115d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11161:	48 89 d6             	mov    %rdx,%rsi
   11164:	48 89 c7             	mov    %rax,%rdi
   11167:	e8 1c e1 ff ff       	call   f288 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   1116c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   11170:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11174:	c9                   	leave
   11175:	c3                   	ret

0000000000011176 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   11176:	55                   	push   %rbp
   11177:	48 89 e5             	mov    %rsp,%rbp
   1117a:	48 83 ec 20          	sub    $0x20,%rsp
   1117e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   11182:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11186:	48 89 c7             	mov    %rax,%rdi
   11189:	e8 22 e1 ff ff       	call   f2b0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1118e:	48 89 c1             	mov    %rax,%rcx
   11191:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   11198:	9b c4 20 
   1119b:	48 89 c8             	mov    %rcx,%rax
   1119e:	48 f7 ea             	imul   %rdx
   111a1:	48 89 d0             	mov    %rdx,%rax
   111a4:	48 c1 f8 07          	sar    $0x7,%rax
   111a8:	48 c1 f9 3f          	sar    $0x3f,%rcx
   111ac:	48 89 ca             	mov    %rcx,%rdx
   111af:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   111b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   111b6:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   111ba:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   111be:	48 89 d6             	mov    %rdx,%rsi
   111c1:	48 89 c7             	mov    %rax,%rdi
   111c4:	e8 8d 0d 00 00       	call   11f56 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   111c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   111cd:	c9                   	leave
   111ce:	c3                   	ret
   111cf:	90                   	nop

00000000000111d0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   111d0:	55                   	push   %rbp
   111d1:	48 89 e5             	mov    %rsp,%rbp
   111d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   111dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   111e0:	48 8b 10             	mov    (%rax),%rdx
   111e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111e7:	48 89 10             	mov    %rdx,(%rax)
   111ea:	90                   	nop
   111eb:	5d                   	pop    %rbp
   111ec:	c3                   	ret
   111ed:	90                   	nop

00000000000111ee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   111ee:	55                   	push   %rbp
   111ef:	48 89 e5             	mov    %rsp,%rbp
   111f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   111f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111fa:	5d                   	pop    %rbp
   111fb:	c3                   	ret

00000000000111fc <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   111fc:	55                   	push   %rbp
   111fd:	48 89 e5             	mov    %rsp,%rbp
   11200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11208:	48 8b 40 08          	mov    0x8(%rax),%rax
   1120c:	5d                   	pop    %rbp
   1120d:	c3                   	ret

000000000001120e <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1120e:	55                   	push   %rbp
   1120f:	48 89 e5             	mov    %rsp,%rbp
   11212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   11216:	90                   	nop
   11217:	5d                   	pop    %rbp
   11218:	c3                   	ret

0000000000011219 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   11219:	55                   	push   %rbp
   1121a:	48 89 e5             	mov    %rsp,%rbp
   1121d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11221:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   11225:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11229:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1122d:	48 c1 f8 03          	sar    $0x3,%rax
    }
   11231:	5d                   	pop    %rbp
   11232:	c3                   	ret

0000000000011233 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   11233:	55                   	push   %rbp
   11234:	48 89 e5             	mov    %rsp,%rbp
   11237:	48 83 ec 20          	sub    $0x20,%rsp
   1123b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1123f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11243:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   11247:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1124b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1124f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11257:	48 89 ce             	mov    %rcx,%rsi
   1125a:	48 89 c7             	mov    %rax,%rdi
   1125d:	e8 3c 0d 00 00       	call   11f9e <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   11262:	c9                   	leave
   11263:	c3                   	ret

0000000000011264 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11264:	55                   	push   %rbp
   11265:	48 89 e5             	mov    %rsp,%rbp
   11268:	48 83 ec 10          	sub    $0x10,%rsp
   1126c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11270:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11274:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1127c:	48 89 d6             	mov    %rdx,%rsi
   1127f:	48 89 c7             	mov    %rax,%rdi
   11282:	e8 4c 0d 00 00       	call   11fd3 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   11287:	90                   	nop
   11288:	c9                   	leave
   11289:	c3                   	ret

000000000001128a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1128a:	55                   	push   %rbp
   1128b:	48 89 e5             	mov    %rsp,%rbp
   1128e:	53                   	push   %rbx
   1128f:	48 83 ec 28          	sub    $0x28,%rsp
   11293:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11297:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1129b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1129f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   112a3:	48 89 c6             	mov    %rax,%rsi
   112a6:	bf 08 00 00 00       	mov    $0x8,%edi
   112ab:	e8 40 3b ff ff       	call   4df0 <_ZnwmPv>
   112b0:	48 89 c3             	mov    %rax,%rbx
   112b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112b7:	48 89 c7             	mov    %rax,%rdi
   112ba:	e8 9d f2 ff ff       	call   1055c <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   112bf:	48 8b 00             	mov    (%rax),%rax
   112c2:	48 89 03             	mov    %rax,(%rbx)
   112c5:	90                   	nop
   112c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   112ca:	c9                   	leave
   112cb:	c3                   	ret

00000000000112cc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   112cc:	55                   	push   %rbp
   112cd:	48 89 e5             	mov    %rsp,%rbp
   112d0:	53                   	push   %rbx
   112d1:	48 83 ec 38          	sub    $0x38,%rsp
   112d5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   112d9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   112dd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   112e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112e5:	48 89 c7             	mov    %rax,%rdi
   112e8:	e8 f5 0c 00 00       	call   11fe2 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   112ed:	48 89 c3             	mov    %rax,%rbx
   112f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112f4:	48 89 c7             	mov    %rax,%rdi
   112f7:	e8 bc e4 ff ff       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   112fc:	48 29 c3             	sub    %rax,%rbx
   112ff:	48 89 da             	mov    %rbx,%rdx
   11302:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11306:	48 39 c2             	cmp    %rax,%rdx
   11309:	0f 92 c0             	setb   %al
   1130c:	84 c0                	test   %al,%al
   1130e:	74 0c                	je     1131c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   11310:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11314:	48 89 c7             	mov    %rax,%rdi
   11317:	e8 54 2e ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1131c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11320:	48 89 c7             	mov    %rax,%rdi
   11323:	e8 90 e4 ff ff       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   11328:	48 89 c3             	mov    %rax,%rbx
   1132b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1132f:	48 89 c7             	mov    %rax,%rdi
   11332:	e8 81 e4 ff ff       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   11337:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1133b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1133f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11343:	48 89 d6             	mov    %rdx,%rsi
   11346:	48 89 c7             	mov    %rax,%rdi
   11349:	e8 25 0c 00 00       	call   11f73 <_ZSt3maxImERKT_S2_S2_>
   1134e:	48 8b 00             	mov    (%rax),%rax
   11351:	48 01 d8             	add    %rbx,%rax
   11354:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   11358:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1135c:	48 89 c7             	mov    %rax,%rdi
   1135f:	e8 54 e4 ff ff       	call   f7b8 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   11364:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   11368:	72 12                	jb     1137c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   1136a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1136e:	48 89 c7             	mov    %rax,%rdi
   11371:	e8 6c 0c 00 00       	call   11fe2 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   11376:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1137a:	73 0e                	jae    1138a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   1137c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11380:	48 89 c7             	mov    %rax,%rdi
   11383:	e8 5a 0c 00 00       	call   11fe2 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   11388:	eb 04                	jmp    1138e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   1138a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1138e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11392:	c9                   	leave
   11393:	c3                   	ret

0000000000011394 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   11394:	55                   	push   %rbp
   11395:	48 89 e5             	mov    %rsp,%rbp
   11398:	53                   	push   %rbx
   11399:	48 83 ec 18          	sub    $0x18,%rsp
   1139d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   113a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113a9:	48 89 c7             	mov    %rax,%rdi
   113ac:	e8 9d f1 ff ff       	call   1054e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   113b1:	48 8b 18             	mov    (%rax),%rbx
   113b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   113b8:	48 89 c7             	mov    %rax,%rdi
   113bb:	e8 8e f1 ff ff       	call   1054e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   113c0:	48 8b 00             	mov    (%rax),%rax
   113c3:	48 89 da             	mov    %rbx,%rdx
   113c6:	48 29 c2             	sub    %rax,%rdx
   113c9:	48 89 d0             	mov    %rdx,%rax
   113cc:	48 c1 f8 03          	sar    $0x3,%rax
   113d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   113d4:	c9                   	leave
   113d5:	c3                   	ret

00000000000113d6 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   113d6:	55                   	push   %rbp
   113d7:	48 89 e5             	mov    %rsp,%rbp
   113da:	48 83 ec 20          	sub    $0x20,%rsp
   113de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   113e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   113e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   113ea:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   113ee:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   113f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   113f6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   113fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113fe:	48 89 c7             	mov    %rax,%rdi
   11401:	e8 fe 0b 00 00       	call   12004 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   11406:	c9                   	leave
   11407:	c3                   	ret

0000000000011408 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   11408:	55                   	push   %rbp
   11409:	48 89 e5             	mov    %rsp,%rbp
   1140c:	48 83 ec 20          	sub    $0x20,%rsp
   11410:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11414:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   11418:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1141c:	48 8b 00             	mov    (%rax),%rax
   1141f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11423:	48 c1 e2 03          	shl    $0x3,%rdx
   11427:	48 f7 da             	neg    %rdx
   1142a:	48 01 d0             	add    %rdx,%rax
   1142d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11431:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   11435:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   11439:	48 89 d6             	mov    %rdx,%rsi
   1143c:	48 89 c7             	mov    %rax,%rdi
   1143f:	e8 ec f0 ff ff       	call   10530 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11444:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11448:	c9                   	leave
   11449:	c3                   	ret

000000000001144a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   1144a:	55                   	push   %rbp
   1144b:	48 89 e5             	mov    %rsp,%rbp
   1144e:	53                   	push   %rbx
   1144f:	48 83 ec 28          	sub    $0x28,%rsp
   11453:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11457:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   1145b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1145f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11463:	48 89 c7             	mov    %rax,%rdi
   11466:	e8 39 f3 ff ff       	call   107a4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1146b:	48 89 c6             	mov    %rax,%rsi
   1146e:	48 89 df             	mov    %rbx,%rdi
   11471:	e8 f2 0b 00 00       	call   12068 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   11476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1147a:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   1147e:	90                   	nop
   1147f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11483:	c9                   	leave
   11484:	c3                   	ret
   11485:	90                   	nop

0000000000011486 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   11486:	55                   	push   %rbp
   11487:	48 89 e5             	mov    %rsp,%rbp
   1148a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1148e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11492:	5d                   	pop    %rbp
   11493:	c3                   	ret

0000000000011494 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   11494:	55                   	push   %rbp
   11495:	48 89 e5             	mov    %rsp,%rbp
   11498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1149c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   114a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   114a4:	8b 10                	mov    (%rax),%edx
   114a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114aa:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   114ac:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   114b0:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   114b4:	48 8b 46 04          	mov    0x4(%rsi),%rax
   114b8:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   114bc:	48 89 41 04          	mov    %rax,0x4(%rcx)
   114c0:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   114c4:	48 8b 46 14          	mov    0x14(%rsi),%rax
   114c8:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   114cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   114d0:	5d                   	pop    %rbp
   114d1:	c3                   	ret

00000000000114d2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   114d2:	55                   	push   %rbp
   114d3:	48 89 e5             	mov    %rsp,%rbp
   114d6:	53                   	push   %rbx
   114d7:	48 83 ec 18          	sub    $0x18,%rsp
   114db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   114df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   114e3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   114e7:	48 89 c7             	mov    %rax,%rdi
   114ea:	e8 cb 0b 00 00       	call   120ba <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   114ef:	48 89 c3             	mov    %rax,%rbx
   114f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114f6:	48 89 c7             	mov    %rax,%rdi
   114f9:	e8 ae 0b 00 00       	call   120ac <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   114fe:	48 89 de             	mov    %rbx,%rsi
   11501:	48 89 c7             	mov    %rax,%rdi
   11504:	e8 bf 0b 00 00       	call   120c8 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   11509:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1150d:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   11511:	90                   	nop
   11512:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11516:	c9                   	leave
   11517:	c3                   	ret

0000000000011518 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   11518:	55                   	push   %rbp
   11519:	48 89 e5             	mov    %rsp,%rbp
   1151c:	48 83 ec 10          	sub    $0x10,%rsp
   11520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   11524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11528:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1152c:	84 c0                	test   %al,%al
   1152e:	74 0c                	je     1153c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   11530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11534:	48 89 c7             	mov    %rax,%rdi
   11537:	e8 e6 0b 00 00       	call   12122 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   1153c:	90                   	nop
   1153d:	c9                   	leave
   1153e:	c3                   	ret
   1153f:	90                   	nop

0000000000011540 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   11540:	55                   	push   %rbp
   11541:	48 89 e5             	mov    %rsp,%rbp
   11544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11548:	90                   	nop
   11549:	5d                   	pop    %rbp
   1154a:	c3                   	ret

000000000001154b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1154b:	55                   	push   %rbp
   1154c:	48 89 e5             	mov    %rsp,%rbp
   1154f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   11553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11557:	48 8b 40 18          	mov    0x18(%rax),%rax
   1155b:	5d                   	pop    %rbp
   1155c:	c3                   	ret

000000000001155d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   1155d:	55                   	push   %rbp
   1155e:	48 89 e5             	mov    %rsp,%rbp
   11561:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   11565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11569:	48 8b 40 10          	mov    0x10(%rax),%rax
   1156d:	5d                   	pop    %rbp
   1156e:	c3                   	ret
   1156f:	90                   	nop

0000000000011570 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   11570:	55                   	push   %rbp
   11571:	48 89 e5             	mov    %rsp,%rbp
   11574:	48 83 ec 10          	sub    $0x10,%rsp
   11578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1157c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   11580:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11588:	48 89 d6             	mov    %rdx,%rsi
   1158b:	48 89 c7             	mov    %rax,%rdi
   1158e:	e8 a3 0b 00 00       	call   12136 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   11593:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1159b:	48 89 d6             	mov    %rdx,%rsi
   1159e:	48 89 c7             	mov    %rax,%rdi
   115a1:	e8 ce 0b 00 00       	call   12174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   115a6:	90                   	nop
   115a7:	c9                   	leave
   115a8:	c3                   	ret
   115a9:	90                   	nop

00000000000115aa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   115aa:	55                   	push   %rbp
   115ab:	48 89 e5             	mov    %rsp,%rbp
   115ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   115b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115b6:	48 8b 40 10          	mov    0x10(%rax),%rax
   115ba:	5d                   	pop    %rbp
   115bb:	c3                   	ret

00000000000115bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   115bc:	55                   	push   %rbp
   115bd:	48 89 e5             	mov    %rsp,%rbp
   115c0:	53                   	push   %rbx
   115c1:	48 83 ec 18          	sub    $0x18,%rsp
   115c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   115c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   115cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115d1:	48 89 c7             	mov    %rax,%rdi
   115d4:	e8 d1 0b 00 00       	call   121aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   115d9:	48 89 c3             	mov    %rax,%rbx
   115dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115e0:	48 89 c7             	mov    %rax,%rdi
   115e3:	e8 8a f3 ff ff       	call   10972 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   115e8:	48 89 c6             	mov    %rax,%rsi
   115eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   115ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115f3:	48 89 d1             	mov    %rdx,%rcx
   115f6:	48 89 da             	mov    %rbx,%rdx
   115f9:	48 89 c7             	mov    %rax,%rdi
   115fc:	e8 bb 0b 00 00       	call   121bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   11601:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11605:	c9                   	leave
   11606:	c3                   	ret
   11607:	90                   	nop

0000000000011608 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11608:	55                   	push   %rbp
   11609:	48 89 e5             	mov    %rsp,%rbp
   1160c:	48 83 ec 20          	sub    $0x20,%rsp
   11610:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   11614:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11618:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1161c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11620:	48 89 d6             	mov    %rdx,%rsi
   11623:	48 89 c7             	mov    %rax,%rdi
   11626:	e8 39 06 00 00       	call   11c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1162b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1162f:	c9                   	leave
   11630:	c3                   	ret
   11631:	90                   	nop

0000000000011632 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   11632:	55                   	push   %rbp
   11633:	48 89 e5             	mov    %rsp,%rbp
   11636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   1163a:	90                   	nop
   1163b:	5d                   	pop    %rbp
   1163c:	c3                   	ret
   1163d:	90                   	nop

000000000001163e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   1163e:	55                   	push   %rbp
   1163f:	48 89 e5             	mov    %rsp,%rbp
   11642:	48 83 ec 10          	sub    $0x10,%rsp
   11646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   1164a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1164e:	48 83 c0 20          	add    $0x20,%rax
   11652:	48 89 c7             	mov    %rax,%rdi
   11655:	e8 f8 0b 00 00       	call   12252 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   1165a:	c9                   	leave
   1165b:	c3                   	ret

000000000001165c <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   1165c:	55                   	push   %rbp
   1165d:	48 89 e5             	mov    %rsp,%rbp
   11660:	48 83 ec 10          	sub    $0x10,%rsp
   11664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11668:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   1166c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11670:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11674:	48 89 d6             	mov    %rdx,%rsi
   11677:	48 89 c7             	mov    %rax,%rdi
   1167a:	e8 b1 29 ff ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   1167f:	c1 e8 1f             	shr    $0x1f,%eax
   11682:	c9                   	leave
   11683:	c3                   	ret

0000000000011684 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11684:	55                   	push   %rbp
   11685:	48 89 e5             	mov    %rsp,%rbp
   11688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1168c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11690:	5d                   	pop    %rbp
   11691:	c3                   	ret

0000000000011692 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   11692:	55                   	push   %rbp
   11693:	48 89 e5             	mov    %rsp,%rbp
   11696:	53                   	push   %rbx
   11697:	48 83 ec 18          	sub    $0x18,%rsp
   1169b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1169f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   116a3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   116a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   116ab:	48 89 c7             	mov    %rax,%rdi
   116ae:	e8 d1 ff ff ff       	call   11684 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   116b3:	48 89 c6             	mov    %rax,%rsi
   116b6:	48 89 df             	mov    %rbx,%rdi
   116b9:	e8 ae 0b 00 00       	call   1226c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   116be:	90                   	nop
   116bf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   116c3:	c9                   	leave
   116c4:	c3                   	ret

00000000000116c5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   116c5:	55                   	push   %rbp
   116c6:	48 89 e5             	mov    %rsp,%rbp
   116c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   116cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116d1:	5d                   	pop    %rbp
   116d2:	c3                   	ret

00000000000116d3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   116d3:	55                   	push   %rbp
   116d4:	48 89 e5             	mov    %rsp,%rbp
   116d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   116db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116df:	5d                   	pop    %rbp
   116e0:	c3                   	ret

00000000000116e1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   116e1:	55                   	push   %rbp
   116e2:	48 89 e5             	mov    %rsp,%rbp
   116e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   116e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116ed:	5d                   	pop    %rbp
   116ee:	c3                   	ret
   116ef:	90                   	nop

00000000000116f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   116f0:	55                   	push   %rbp
   116f1:	48 89 e5             	mov    %rsp,%rbp
   116f4:	41 54                	push   %r12
   116f6:	53                   	push   %rbx
   116f7:	48 83 ec 30          	sub    $0x30,%rsp
   116fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   116ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11703:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11707:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1170b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   1170f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11713:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11717:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   1171a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1171e:	48 89 c7             	mov    %rax,%rdi
   11721:	e8 bb ff ff ff       	call   116e1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   11726:	49 89 c4             	mov    %rax,%r12
   11729:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1172d:	48 89 c7             	mov    %rax,%rdi
   11730:	e8 9e ff ff ff       	call   116d3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   11735:	48 89 c3             	mov    %rax,%rbx
   11738:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1173c:	48 89 c7             	mov    %rax,%rdi
   1173f:	e8 81 ff ff ff       	call   116c5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   11744:	48 89 c6             	mov    %rax,%rsi
   11747:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1174b:	4c 89 e1             	mov    %r12,%rcx
   1174e:	48 89 da             	mov    %rbx,%rdx
   11751:	48 89 c7             	mov    %rax,%rdi
   11754:	e8 47 0b 00 00       	call   122a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   11759:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1175d:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   11761:	90                   	nop
   11762:	48 83 c4 30          	add    $0x30,%rsp
   11766:	5b                   	pop    %rbx
   11767:	41 5c                	pop    %r12
   11769:	5d                   	pop    %rbp
   1176a:	c3                   	ret
   1176b:	90                   	nop

000000000001176c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   1176c:	55                   	push   %rbp
   1176d:	48 89 e5             	mov    %rsp,%rbp
   11770:	48 83 ec 10          	sub    $0x10,%rsp
   11774:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   11778:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1177c:	48 8b 40 08          	mov    0x8(%rax),%rax
   11780:	48 85 c0             	test   %rax,%rax
   11783:	74 1a                	je     1179f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   11785:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11789:	48 8b 00             	mov    (%rax),%rax
   1178c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11790:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   11794:	48 89 d6             	mov    %rdx,%rsi
   11797:	48 89 c7             	mov    %rax,%rdi
   1179a:	e8 d1 fd ff ff       	call   11570 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   1179f:	90                   	nop
   117a0:	c9                   	leave
   117a1:	c3                   	ret

00000000000117a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   117a2:	55                   	push   %rbp
   117a3:	48 89 e5             	mov    %rsp,%rbp
   117a6:	53                   	push   %rbx
   117a7:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   117ae:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   117b5:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   117bc:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   117c3:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   117ca:	48 89 c7             	mov    %rax,%rdi
   117cd:	e8 4a 0b 00 00       	call   1231c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   117d2:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   117d9:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   117e0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   117e7:	48 89 c7             	mov    %rax,%rdi
   117ea:	e8 bb 09 00 00       	call   121aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   117ef:	48 39 c3             	cmp    %rax,%rbx
   117f2:	0f 94 c0             	sete   %al
   117f5:	84 c0                	test   %al,%al
   117f7:	0f 84 c8 00 00 00    	je     118c5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   117fd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11804:	48 89 c7             	mov    %rax,%rdi
   11807:	e8 38 0b 00 00       	call   12344 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   1180c:	48 85 c0             	test   %rax,%rax
   1180f:	74 44                	je     11855 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   11811:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   11818:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1181f:	48 89 c7             	mov    %rax,%rdi
   11822:	e8 2f 0b 00 00       	call   12356 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   11827:	48 8b 00             	mov    (%rax),%rax
   1182a:	48 89 c7             	mov    %rax,%rdi
   1182d:	e8 36 0b 00 00       	call   12368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   11832:	48 89 c1             	mov    %rax,%rcx
   11835:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1183c:	48 89 c2             	mov    %rax,%rdx
   1183f:	48 89 ce             	mov    %rcx,%rsi
   11842:	48 89 df             	mov    %rbx,%rdi
   11845:	e8 0a f2 ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1184a:	84 c0                	test   %al,%al
   1184c:	74 07                	je     11855 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   1184e:	b8 01 00 00 00       	mov    $0x1,%eax
   11853:	eb 05                	jmp    1185a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   11855:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   1185a:	84 c0                	test   %al,%al
   1185c:	74 49                	je     118a7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   1185e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11865:	48 89 c7             	mov    %rax,%rdi
   11868:	e8 e9 0a 00 00       	call   12356 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1186d:	48 89 c2             	mov    %rax,%rdx
   11870:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   11877:	00 00 00 00 
   1187b:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   11882:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   11889:	48 89 ce             	mov    %rcx,%rsi
   1188c:	48 89 c7             	mov    %rax,%rdi
   1188f:	e8 ee 0a 00 00       	call   12382 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   11894:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   1189b:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   118a2:	e9 43 03 00 00       	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   118a7:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   118ae:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   118b5:	48 89 d6             	mov    %rdx,%rsi
   118b8:	48 89 c7             	mov    %rax,%rdi
   118bb:	e8 f2 0a 00 00       	call   123b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   118c0:	e9 25 03 00 00       	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   118c5:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   118cc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   118d3:	48 89 c7             	mov    %rax,%rdi
   118d6:	e8 8d 0a 00 00       	call   12368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   118db:	48 89 c2             	mov    %rax,%rdx
   118de:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   118e5:	48 89 c6             	mov    %rax,%rsi
   118e8:	48 89 df             	mov    %rbx,%rdi
   118eb:	e8 64 f1 ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   118f0:	84 c0                	test   %al,%al
   118f2:	0f 84 66 01 00 00    	je     11a5e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   118f8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   118ff:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   11906:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1190d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11914:	48 89 c7             	mov    %rax,%rdi
   11917:	e8 0c 0c 00 00       	call   12528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1191c:	48 8b 00             	mov    (%rax),%rax
   1191f:	48 39 c3             	cmp    %rax,%rbx
   11922:	0f 94 c0             	sete   %al
   11925:	84 c0                	test   %al,%al
   11927:	74 4c                	je     11975 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   11929:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11930:	48 89 c7             	mov    %rax,%rdi
   11933:	e8 f0 0b 00 00       	call   12528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   11938:	48 89 c3             	mov    %rax,%rbx
   1193b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11942:	48 89 c7             	mov    %rax,%rdi
   11945:	e8 de 0b 00 00       	call   12528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   1194a:	48 89 c1             	mov    %rax,%rcx
   1194d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   11954:	48 89 da             	mov    %rbx,%rdx
   11957:	48 89 ce             	mov    %rcx,%rsi
   1195a:	48 89 c7             	mov    %rax,%rdi
   1195d:	e8 d8 0b 00 00       	call   1253a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   11962:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   11969:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   11970:	e9 75 02 00 00       	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   11975:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1197c:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   11983:	48 89 c7             	mov    %rax,%rdi
   11986:	e8 f3 0b 00 00       	call   1257e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   1198b:	48 8b 00             	mov    (%rax),%rax
   1198e:	48 89 c7             	mov    %rax,%rdi
   11991:	e8 d2 09 00 00       	call   12368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   11996:	48 89 c1             	mov    %rax,%rcx
   11999:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   119a0:	48 89 c2             	mov    %rax,%rdx
   119a3:	48 89 ce             	mov    %rcx,%rsi
   119a6:	48 89 df             	mov    %rbx,%rdi
   119a9:	e8 a6 f0 ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   119ae:	84 c0                	test   %al,%al
   119b0:	0f 84 8a 00 00 00    	je     11a40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   119b6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   119bd:	48 89 c7             	mov    %rax,%rdi
   119c0:	e8 86 fb ff ff       	call   1154b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   119c5:	48 85 c0             	test   %rax,%rax
   119c8:	0f 94 c0             	sete   %al
   119cb:	84 c0                	test   %al,%al
   119cd:	74 3e                	je     11a0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   119cf:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   119d6:	00 00 00 00 
   119da:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   119e1:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   119e8:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   119ef:	48 89 ce             	mov    %rcx,%rsi
   119f2:	48 89 c7             	mov    %rax,%rdi
   119f5:	e8 88 09 00 00       	call   12382 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   119fa:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   11a01:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   11a08:	e9 dd 01 00 00       	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   11a0d:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   11a14:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   11a1b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   11a22:	48 89 ce             	mov    %rcx,%rsi
   11a25:	48 89 c7             	mov    %rax,%rdi
   11a28:	e8 0d 0b 00 00       	call   1253a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   11a2d:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11a34:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   11a3b:	e9 aa 01 00 00       	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   11a40:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   11a47:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11a4e:	48 89 d6             	mov    %rdx,%rsi
   11a51:	48 89 c7             	mov    %rax,%rdi
   11a54:	e8 59 09 00 00       	call   123b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   11a59:	e9 8c 01 00 00       	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   11a5e:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   11a65:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   11a6c:	48 89 c7             	mov    %rax,%rdi
   11a6f:	e8 f4 08 00 00       	call   12368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   11a74:	48 89 c1             	mov    %rax,%rcx
   11a77:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   11a7e:	48 89 c2             	mov    %rax,%rdx
   11a81:	48 89 ce             	mov    %rcx,%rsi
   11a84:	48 89 df             	mov    %rbx,%rdi
   11a87:	e8 c8 ef ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   11a8c:	84 c0                	test   %al,%al
   11a8e:	0f 84 2c 01 00 00    	je     11bc0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   11a94:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   11a9b:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   11aa2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   11aa9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11ab0:	48 89 c7             	mov    %rax,%rdi
   11ab3:	e8 9e 08 00 00       	call   12356 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   11ab8:	48 8b 00             	mov    (%rax),%rax
   11abb:	48 39 c3             	cmp    %rax,%rbx
   11abe:	0f 94 c0             	sete   %al
   11ac1:	84 c0                	test   %al,%al
   11ac3:	74 3a                	je     11aff <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   11ac5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11acc:	48 89 c7             	mov    %rax,%rdi
   11acf:	e8 82 08 00 00       	call   12356 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   11ad4:	48 89 c2             	mov    %rax,%rdx
   11ad7:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   11ade:	00 
   11adf:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   11ae3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   11ae7:	48 89 ce             	mov    %rcx,%rsi
   11aea:	48 89 c7             	mov    %rax,%rdi
   11aed:	e8 90 08 00 00       	call   12382 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   11af2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11af6:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   11afa:	e9 eb 00 00 00       	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   11aff:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   11b06:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   11b0d:	48 89 c7             	mov    %rax,%rdi
   11b10:	e8 91 0a 00 00       	call   125a6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   11b15:	48 8b 00             	mov    (%rax),%rax
   11b18:	48 89 c7             	mov    %rax,%rdi
   11b1b:	e8 48 08 00 00       	call   12368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   11b20:	48 89 c2             	mov    %rax,%rdx
   11b23:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   11b2a:	48 89 c6             	mov    %rax,%rsi
   11b2d:	48 89 df             	mov    %rbx,%rdi
   11b30:	e8 1f ef ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   11b35:	84 c0                	test   %al,%al
   11b37:	74 6c                	je     11ba5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   11b39:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   11b40:	48 89 c7             	mov    %rax,%rdi
   11b43:	e8 03 fa ff ff       	call   1154b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   11b48:	48 85 c0             	test   %rax,%rax
   11b4b:	0f 94 c0             	sete   %al
   11b4e:	84 c0                	test   %al,%al
   11b50:	74 2c                	je     11b7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   11b52:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   11b59:	00 
   11b5a:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   11b61:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   11b65:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11b69:	48 89 ce             	mov    %rcx,%rsi
   11b6c:	48 89 c7             	mov    %rax,%rdi
   11b6f:	e8 0e 08 00 00       	call   12382 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   11b74:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11b78:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   11b7c:	eb 6c                	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   11b7e:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   11b85:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   11b8c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11b90:	48 89 ce             	mov    %rcx,%rsi
   11b93:	48 89 c7             	mov    %rax,%rdi
   11b96:	e8 9f 09 00 00       	call   1253a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   11b9b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11b9f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11ba3:	eb 45                	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   11ba5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   11bac:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11bb3:	48 89 d6             	mov    %rdx,%rsi
   11bb6:	48 89 c7             	mov    %rax,%rdi
   11bb9:	e8 f4 07 00 00       	call   123b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   11bbe:	eb 2a                	jmp    11bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   11bc0:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   11bc7:	00 
   11bc8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   11bcc:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   11bd3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11bd7:	48 89 ce             	mov    %rcx,%rsi
   11bda:	48 89 c7             	mov    %rax,%rdi
   11bdd:	e8 a0 07 00 00       	call   12382 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   11be2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11be6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   11bea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11bee:	c9                   	leave
   11bef:	c3                   	ret

0000000000011bf0 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   11bf0:	55                   	push   %rbp
   11bf1:	48 89 e5             	mov    %rsp,%rbp
   11bf4:	48 83 ec 10          	sub    $0x10,%rsp
   11bf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   11bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c00:	48 8b 40 08          	mov    0x8(%rax),%rax
   11c04:	48 89 c7             	mov    %rax,%rdi
   11c07:	e8 c2 09 00 00       	call   125ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   11c0c:	c9                   	leave
   11c0d:	c3                   	ret

0000000000011c0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   11c0e:	55                   	push   %rbp
   11c0f:	48 89 e5             	mov    %rsp,%rbp
   11c12:	48 83 ec 30          	sub    $0x30,%rsp
   11c16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11c1a:	48 89 d1             	mov    %rdx,%rcx
   11c1d:	48 89 f0             	mov    %rsi,%rax
   11c20:	48 89 fa             	mov    %rdi,%rdx
   11c23:	48 89 ca             	mov    %rcx,%rdx
   11c26:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   11c2a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   11c2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c32:	48 8b 00             	mov    (%rax),%rax
   11c35:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11c39:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   11c3d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11c41:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   11c45:	48 89 c7             	mov    %rax,%rdi
   11c48:	e8 ad 09 00 00       	call   125fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   11c4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   11c51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c55:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   11c5c:	00 
	  return __it;
   11c5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   11c61:	c9                   	leave
   11c62:	c3                   	ret
   11c63:	90                   	nop

0000000000011c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   11c64:	55                   	push   %rbp
   11c65:	48 89 e5             	mov    %rsp,%rbp
   11c68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   11c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c78:	48 89 10             	mov    %rdx,(%rax)
   11c7b:	90                   	nop
   11c7c:	5d                   	pop    %rbp
   11c7d:	c3                   	ret

0000000000011c7e <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11c7e:	55                   	push   %rbp
   11c7f:	48 89 e5             	mov    %rsp,%rbp
   11c82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11c8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c8e:	48 8b 10             	mov    (%rax),%rdx
   11c91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c95:	48 89 10             	mov    %rdx,(%rax)
   11c98:	90                   	nop
   11c99:	5d                   	pop    %rbp
   11c9a:	c3                   	ret
   11c9b:	90                   	nop

0000000000011c9c <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11c9c:	55                   	push   %rbp
   11c9d:	48 89 e5             	mov    %rsp,%rbp
   11ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11ca4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ca8:	5d                   	pop    %rbp
   11ca9:	c3                   	ret

0000000000011caa <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   11caa:	55                   	push   %rbp
   11cab:	48 89 e5             	mov    %rsp,%rbp
   11cae:	48 83 ec 10          	sub    $0x10,%rsp
   11cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   11cba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11cbe:	48 89 c7             	mov    %rax,%rdi
   11cc1:	e8 f8 09 00 00       	call   126be <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11cc6:	48 89 c2             	mov    %rax,%rdx
   11cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ccd:	48 89 d6             	mov    %rdx,%rsi
   11cd0:	48 89 c7             	mov    %rax,%rdi
   11cd3:	e8 40 7b ff ff       	call   9818 <_ZNSaIP9VkImage_TEC1ERKS1_>
   11cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cdc:	c9                   	leave
   11cdd:	c3                   	ret

0000000000011cde <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   11cde:	55                   	push   %rbp
   11cdf:	48 89 e5             	mov    %rsp,%rbp
   11ce2:	48 83 ec 10          	sub    $0x10,%rsp
   11ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   11cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cf2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11cf6:	48 89 d6             	mov    %rdx,%rsi
   11cf9:	48 89 c7             	mov    %rax,%rdi
   11cfc:	e8 cb 09 00 00       	call   126cc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   11d01:	90                   	nop
   11d02:	c9                   	leave
   11d03:	c3                   	ret

0000000000011d04 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   11d04:	55                   	push   %rbp
   11d05:	48 89 e5             	mov    %rsp,%rbp
   11d08:	48 83 ec 30          	sub    $0x30,%rsp
   11d0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11d10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   11d14:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11d18:	48 89 c7             	mov    %rax,%rdi
   11d1b:	e8 7a 8f ff ff       	call   ac9a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   11d20:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11d24:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11d28:	48 89 d6             	mov    %rdx,%rsi
   11d2b:	48 89 c7             	mov    %rax,%rdi
   11d2e:	e8 bf 09 00 00       	call   126f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   11d33:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11d37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d3b:	48 89 d6             	mov    %rdx,%rsi
   11d3e:	48 89 c7             	mov    %rax,%rdi
   11d41:	e8 ac 09 00 00       	call   126f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   11d46:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   11d4a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11d4e:	48 89 d6             	mov    %rdx,%rsi
   11d51:	48 89 c7             	mov    %rax,%rdi
   11d54:	e8 99 09 00 00       	call   126f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   11d59:	90                   	nop
   11d5a:	c9                   	leave
   11d5b:	c3                   	ret

0000000000011d5c <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   11d5c:	55                   	push   %rbp
   11d5d:	48 89 e5             	mov    %rsp,%rbp
   11d60:	48 83 ec 10          	sub    $0x10,%rsp
   11d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   11d6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11d70:	48 89 c7             	mov    %rax,%rdi
   11d73:	e8 b7 09 00 00       	call   1272f <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   11d78:	90                   	nop
   11d79:	c9                   	leave
   11d7a:	c3                   	ret
   11d7b:	90                   	nop

0000000000011d7c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   11d7c:	55                   	push   %rbp
   11d7d:	48 89 e5             	mov    %rsp,%rbp
   11d80:	48 83 ec 10          	sub    $0x10,%rsp
   11d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   11d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d8c:	48 89 c7             	mov    %rax,%rdi
   11d8f:	e8 ec 09 00 00       	call   12780 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11d94:	48 89 c7             	mov    %rax,%rdi
   11d97:	e8 a1 09 00 00       	call   1273d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   11d9c:	c9                   	leave
   11d9d:	c3                   	ret

0000000000011d9e <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   11d9e:	55                   	push   %rbp
   11d9f:	48 89 e5             	mov    %rsp,%rbp
   11da2:	48 83 ec 20          	sub    $0x20,%rsp
   11da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11daa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11dae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   11db2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11db6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dba:	48 89 d6             	mov    %rdx,%rsi
   11dbd:	48 89 c7             	mov    %rax,%rdi
   11dc0:	e8 c9 09 00 00       	call   1278e <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   11dc5:	c9                   	leave
   11dc6:	c3                   	ret
   11dc7:	90                   	nop

0000000000011dc8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   11dc8:	55                   	push   %rbp
   11dc9:	48 89 e5             	mov    %rsp,%rbp
   11dcc:	53                   	push   %rbx
   11dcd:	48 83 ec 38          	sub    $0x38,%rsp
   11dd1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11dd5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11dd9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   11ddd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11de1:	48 89 c7             	mov    %rax,%rdi
   11de4:	e8 93 ff ff ff       	call   11d7c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11de9:	48 89 c3             	mov    %rax,%rbx
   11dec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11df0:	48 89 c7             	mov    %rax,%rdi
   11df3:	e8 66 ef ff ff       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11df8:	48 29 c3             	sub    %rax,%rbx
   11dfb:	48 89 da             	mov    %rbx,%rdx
   11dfe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11e02:	48 39 c2             	cmp    %rax,%rdx
   11e05:	0f 92 c0             	setb   %al
   11e08:	84 c0                	test   %al,%al
   11e0a:	74 0c                	je     11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   11e0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e10:	48 89 c7             	mov    %rax,%rdi
   11e13:	e8 58 23 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   11e18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11e1c:	48 89 c7             	mov    %rax,%rdi
   11e1f:	e8 3a ef ff ff       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11e24:	48 89 c3             	mov    %rax,%rbx
   11e27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11e2b:	48 89 c7             	mov    %rax,%rdi
   11e2e:	e8 2b ef ff ff       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11e33:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11e37:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   11e3b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   11e3f:	48 89 d6             	mov    %rdx,%rsi
   11e42:	48 89 c7             	mov    %rax,%rdi
   11e45:	e8 29 01 00 00       	call   11f73 <_ZSt3maxImERKT_S2_S2_>
   11e4a:	48 8b 00             	mov    (%rax),%rax
   11e4d:	48 01 d8             	add    %rbx,%rax
   11e50:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   11e54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11e58:	48 89 c7             	mov    %rax,%rdi
   11e5b:	e8 fe ee ff ff       	call   10d5e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11e60:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   11e64:	72 12                	jb     11e78 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   11e66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11e6a:	48 89 c7             	mov    %rax,%rdi
   11e6d:	e8 0a ff ff ff       	call   11d7c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11e72:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11e76:	73 0e                	jae    11e86 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   11e78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11e7c:	48 89 c7             	mov    %rax,%rdi
   11e7f:	e8 f8 fe ff ff       	call   11d7c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11e84:	eb 04                	jmp    11e8a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   11e86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   11e8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11e8e:	c9                   	leave
   11e8f:	c3                   	ret

0000000000011e90 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   11e90:	55                   	push   %rbp
   11e91:	48 89 e5             	mov    %rsp,%rbp
   11e94:	48 83 ec 10          	sub    $0x10,%rsp
   11e98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   11ea0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11ea5:	74 15                	je     11ebc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   11ea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11eab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11eaf:	48 89 d6             	mov    %rdx,%rsi
   11eb2:	48 89 c7             	mov    %rax,%rdi
   11eb5:	e8 fd 08 00 00       	call   127b7 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   11eba:	eb 05                	jmp    11ec1 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   11ebc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   11ec1:	c9                   	leave
   11ec2:	c3                   	ret

0000000000011ec3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   11ec3:	55                   	push   %rbp
   11ec4:	48 89 e5             	mov    %rsp,%rbp
   11ec7:	48 83 ec 20          	sub    $0x20,%rsp
   11ecb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ecf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11ed3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   11ed7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   11edb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   11edf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11ee3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   11ee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11eeb:	48 89 c7             	mov    %rax,%rdi
   11eee:	e8 ee 08 00 00       	call   127e1 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   11ef3:	c9                   	leave
   11ef4:	c3                   	ret
   11ef5:	90                   	nop

0000000000011ef6 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
   11ef6:	55                   	push   %rbp
   11ef7:	48 89 e5             	mov    %rsp,%rbp
   11efa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11efe:	90                   	nop
   11eff:	5d                   	pop    %rbp
   11f00:	c3                   	ret

0000000000011f01 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   11f01:	55                   	push   %rbp
   11f02:	48 89 e5             	mov    %rsp,%rbp
   11f05:	48 83 ec 20          	sub    $0x20,%rsp
   11f09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11f11:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   11f15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11f19:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11f1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f21:	48 89 ce             	mov    %rcx,%rsi
   11f24:	48 89 c7             	mov    %rax,%rdi
   11f27:	e8 18 09 00 00       	call   12844 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   11f2c:	90                   	nop
   11f2d:	c9                   	leave
   11f2e:	c3                   	ret

0000000000011f2f <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11f2f:	55                   	push   %rbp
   11f30:	48 89 e5             	mov    %rsp,%rbp
   11f33:	48 83 ec 10          	sub    $0x10,%rsp
   11f37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11f3f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11f43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f47:	48 89 d6             	mov    %rdx,%rsi
   11f4a:	48 89 c7             	mov    %rax,%rdi
   11f4d:	e8 23 09 00 00       	call   12875 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   11f52:	90                   	nop
   11f53:	c9                   	leave
   11f54:	c3                   	ret
   11f55:	90                   	nop

0000000000011f56 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   11f56:	55                   	push   %rbp
   11f57:	48 89 e5             	mov    %rsp,%rbp
   11f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   11f62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11f66:	48 8b 10             	mov    (%rax),%rdx
   11f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f6d:	48 89 10             	mov    %rdx,(%rax)
   11f70:	90                   	nop
   11f71:	5d                   	pop    %rbp
   11f72:	c3                   	ret

0000000000011f73 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   11f73:	55                   	push   %rbp
   11f74:	48 89 e5             	mov    %rsp,%rbp
   11f77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f7b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   11f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f83:	48 8b 10             	mov    (%rax),%rdx
   11f86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11f8a:	48 8b 00             	mov    (%rax),%rax
   11f8d:	48 39 c2             	cmp    %rax,%rdx
   11f90:	73 06                	jae    11f98 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   11f92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11f96:	eb 04                	jmp    11f9c <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   11f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   11f9c:	5d                   	pop    %rbp
   11f9d:	c3                   	ret

0000000000011f9e <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   11f9e:	55                   	push   %rbp
   11f9f:	48 89 e5             	mov    %rsp,%rbp
   11fa2:	48 83 ec 30          	sub    $0x30,%rsp
   11fa6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11faa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11fae:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   11fb2:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   11fb6:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   11fba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11fbe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   11fc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fc6:	48 89 ce             	mov    %rcx,%rsi
   11fc9:	48 89 c7             	mov    %rax,%rdi
   11fcc:	e8 b3 08 00 00       	call   12884 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   11fd1:	c9                   	leave
   11fd2:	c3                   	ret

0000000000011fd3 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   11fd3:	55                   	push   %rbp
   11fd4:	48 89 e5             	mov    %rsp,%rbp
   11fd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11fdb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11fdf:	90                   	nop
   11fe0:	5d                   	pop    %rbp
   11fe1:	c3                   	ret

0000000000011fe2 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   11fe2:	55                   	push   %rbp
   11fe3:	48 89 e5             	mov    %rsp,%rbp
   11fe6:	48 83 ec 10          	sub    $0x10,%rsp
   11fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   11fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ff2:	48 89 c7             	mov    %rax,%rdi
   11ff5:	e8 b8 08 00 00       	call   128b2 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11ffa:	48 89 c7             	mov    %rax,%rdi
   11ffd:	e8 35 7b ff ff       	call   9b37 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   12002:	c9                   	leave
   12003:	c3                   	ret

0000000000012004 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   12004:	55                   	push   %rbp
   12005:	48 89 e5             	mov    %rsp,%rbp
   12008:	41 54                	push   %r12
   1200a:	53                   	push   %rbx
   1200b:	48 83 ec 20          	sub    $0x20,%rsp
   1200f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12013:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12017:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1201b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   1201f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12023:	48 89 c7             	mov    %rax,%rdi
   12026:	e8 95 08 00 00       	call   128c0 <_ZSt12__niter_baseIPPKcET_S3_>
   1202b:	49 89 c4             	mov    %rax,%r12
   1202e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12032:	48 89 c7             	mov    %rax,%rdi
   12035:	e8 86 08 00 00       	call   128c0 <_ZSt12__niter_baseIPPKcET_S3_>
   1203a:	48 89 c3             	mov    %rax,%rbx
   1203d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12041:	48 89 c7             	mov    %rax,%rdi
   12044:	e8 77 08 00 00       	call   128c0 <_ZSt12__niter_baseIPPKcET_S3_>
   12049:	48 89 c7             	mov    %rax,%rdi
   1204c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12050:	48 89 c1             	mov    %rax,%rcx
   12053:	4c 89 e2             	mov    %r12,%rdx
   12056:	48 89 de             	mov    %rbx,%rsi
   12059:	e8 70 08 00 00       	call   128ce <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   1205e:	48 83 c4 20          	add    $0x20,%rsp
   12062:	5b                   	pop    %rbx
   12063:	41 5c                	pop    %r12
   12065:	5d                   	pop    %rbp
   12066:	c3                   	ret
   12067:	90                   	nop

0000000000012068 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   12068:	55                   	push   %rbp
   12069:	48 89 e5             	mov    %rsp,%rbp
   1206c:	48 83 ec 10          	sub    $0x10,%rsp
   12070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12074:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   12078:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1207c:	48 89 c7             	mov    %rax,%rdi
   1207f:	e8 20 e7 ff ff       	call   107a4 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12084:	48 89 c1             	mov    %rax,%rcx
   12087:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1208b:	48 8b 01             	mov    (%rcx),%rax
   1208e:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   12092:	48 89 06             	mov    %rax,(%rsi)
   12095:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   12099:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   1209d:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   120a1:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   120a5:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   120a9:	90                   	nop
   120aa:	c9                   	leave
   120ab:	c3                   	ret

00000000000120ac <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   120ac:	55                   	push   %rbp
   120ad:	48 89 e5             	mov    %rsp,%rbp
   120b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   120b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120b8:	5d                   	pop    %rbp
   120b9:	c3                   	ret

00000000000120ba <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   120ba:	55                   	push   %rbp
   120bb:	48 89 e5             	mov    %rsp,%rbp
   120be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   120c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120c6:	5d                   	pop    %rbp
   120c7:	c3                   	ret

00000000000120c8 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   120c8:	55                   	push   %rbp
   120c9:	48 89 e5             	mov    %rsp,%rbp
   120cc:	53                   	push   %rbx
   120cd:	48 83 ec 18          	sub    $0x18,%rsp
   120d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   120d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   120d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120dd:	48 89 c6             	mov    %rax,%rsi
   120e0:	bf 1c 00 00 00       	mov    $0x1c,%edi
   120e5:	e8 06 2d ff ff       	call   4df0 <_ZnwmPv>
   120ea:	48 89 c3             	mov    %rax,%rbx
   120ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   120f1:	48 89 c7             	mov    %rax,%rdi
   120f4:	e8 c1 ff ff ff       	call   120ba <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   120f9:	48 89 c1             	mov    %rax,%rcx
   120fc:	48 8b 01             	mov    (%rcx),%rax
   120ff:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   12103:	48 89 03             	mov    %rax,(%rbx)
   12106:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1210a:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   1210e:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   12112:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   12116:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   1211a:	90                   	nop
   1211b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1211f:	c9                   	leave
   12120:	c3                   	ret
   12121:	90                   	nop

0000000000012122 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   12122:	55                   	push   %rbp
   12123:	48 89 e5             	mov    %rsp,%rbp
   12126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   1212a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1212e:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   12132:	90                   	nop
   12133:	5d                   	pop    %rbp
   12134:	c3                   	ret
   12135:	90                   	nop

0000000000012136 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12136:	55                   	push   %rbp
   12137:	48 89 e5             	mov    %rsp,%rbp
   1213a:	53                   	push   %rbx
   1213b:	48 83 ec 18          	sub    $0x18,%rsp
   1213f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12143:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   12147:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1214b:	48 89 c7             	mov    %rax,%rdi
   1214e:	e8 eb f4 ff ff       	call   1163e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   12153:	48 89 c3             	mov    %rax,%rbx
   12156:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1215a:	48 89 c7             	mov    %rax,%rdi
   1215d:	e8 d0 07 00 00       	call   12932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   12162:	48 89 de             	mov    %rbx,%rsi
   12165:	48 89 c7             	mov    %rax,%rdi
   12168:	e8 d3 07 00 00       	call   12940 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   1216d:	90                   	nop
   1216e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12172:	c9                   	leave
   12173:	c3                   	ret

0000000000012174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12174:	55                   	push   %rbp
   12175:	48 89 e5             	mov    %rsp,%rbp
   12178:	48 83 ec 10          	sub    $0x10,%rsp
   1217c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12180:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   12184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12188:	48 89 c7             	mov    %rax,%rdi
   1218b:	e8 a2 07 00 00       	call   12932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   12190:	48 89 c1             	mov    %rax,%rcx
   12193:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12197:	ba 01 00 00 00       	mov    $0x1,%edx
   1219c:	48 89 c6             	mov    %rax,%rsi
   1219f:	48 89 cf             	mov    %rcx,%rdi
   121a2:	e8 bf 07 00 00       	call   12966 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   121a7:	90                   	nop
   121a8:	c9                   	leave
   121a9:	c3                   	ret

00000000000121aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   121aa:	55                   	push   %rbp
   121ab:	48 89 e5             	mov    %rsp,%rbp
   121ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   121b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b6:	48 83 c0 08          	add    $0x8,%rax
   121ba:	5d                   	pop    %rbp
   121bb:	c3                   	ret

00000000000121bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   121bc:	55                   	push   %rbp
   121bd:	48 89 e5             	mov    %rsp,%rbp
   121c0:	53                   	push   %rbx
   121c1:	48 83 ec 38          	sub    $0x38,%rsp
   121c5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   121c9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   121cd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   121d1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   121d5:	eb 56                	jmp    1222d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   121d7:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   121db:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   121df:	48 89 c7             	mov    %rax,%rdi
   121e2:	e8 e7 03 00 00       	call   125ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   121e7:	48 89 c1             	mov    %rax,%rcx
   121ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   121ee:	48 89 c2             	mov    %rax,%rdx
   121f1:	48 89 ce             	mov    %rcx,%rsi
   121f4:	48 89 df             	mov    %rbx,%rdi
   121f7:	e8 58 e8 ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   121fc:	83 f0 01             	xor    $0x1,%eax
   121ff:	84 c0                	test   %al,%al
   12201:	74 1a                	je     1221d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   12203:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12207:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1220b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1220f:	48 89 c7             	mov    %rax,%rdi
   12212:	e8 46 f3 ff ff       	call   1155d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   12217:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1221b:	eb 10                	jmp    1222d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   1221d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12221:	48 89 c7             	mov    %rax,%rdi
   12224:	e8 22 f3 ff ff       	call   1154b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12229:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   1222d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   12232:	75 a3                	jne    121d7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   12234:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12238:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1223c:	48 89 d6             	mov    %rdx,%rsi
   1223f:	48 89 c7             	mov    %rax,%rdi
   12242:	e8 1d fa ff ff       	call   11c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   12247:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1224b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1224f:	c9                   	leave
   12250:	c3                   	ret
   12251:	90                   	nop

0000000000012252 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   12252:	55                   	push   %rbp
   12253:	48 89 e5             	mov    %rsp,%rbp
   12256:	48 83 ec 10          	sub    $0x10,%rsp
   1225a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   1225e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12262:	48 89 c7             	mov    %rax,%rdi
   12265:	e8 2a 07 00 00       	call   12994 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1226a:	c9                   	leave
   1226b:	c3                   	ret

000000000001226c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   1226c:	55                   	push   %rbp
   1226d:	48 89 e5             	mov    %rsp,%rbp
   12270:	53                   	push   %rbx
   12271:	48 83 ec 18          	sub    $0x18,%rsp
   12275:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12279:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   1227d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12281:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12285:	48 89 c7             	mov    %rax,%rdi
   12288:	e8 f7 f3 ff ff       	call   11684 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1228d:	48 89 c6             	mov    %rax,%rsi
   12290:	48 89 df             	mov    %rbx,%rdi
   12293:	e8 0a 07 00 00       	call   129a2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   12298:	90                   	nop
   12299:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1229d:	c9                   	leave
   1229e:	c3                   	ret
   1229f:	90                   	nop

00000000000122a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   122a0:	55                   	push   %rbp
   122a1:	48 89 e5             	mov    %rsp,%rbp
   122a4:	41 54                	push   %r12
   122a6:	53                   	push   %rbx
   122a7:	48 83 ec 30          	sub    $0x30,%rsp
   122ab:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   122af:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   122b3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   122b7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   122bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122bf:	48 89 c7             	mov    %rax,%rdi
   122c2:	e8 01 07 00 00       	call   129c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   122c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   122cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   122cf:	48 89 c7             	mov    %rax,%rdi
   122d2:	e8 0a f4 ff ff       	call   116e1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   122d7:	49 89 c4             	mov    %rax,%r12
   122da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   122de:	48 89 c7             	mov    %rax,%rdi
   122e1:	e8 ed f3 ff ff       	call   116d3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   122e6:	48 89 c3             	mov    %rax,%rbx
   122e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   122ed:	48 89 c7             	mov    %rax,%rdi
   122f0:	e8 d0 f3 ff ff       	call   116c5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   122f5:	48 89 c2             	mov    %rax,%rdx
   122f8:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   122fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12300:	4d 89 e0             	mov    %r12,%r8
   12303:	48 89 d9             	mov    %rbx,%rcx
   12306:	48 89 c7             	mov    %rax,%rdi
   12309:	e8 e2 06 00 00       	call   129f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   1230e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   12312:	48 83 c4 30          	add    $0x30,%rsp
   12316:	5b                   	pop    %rbx
   12317:	41 5c                	pop    %r12
   12319:	5d                   	pop    %rbp
   1231a:	c3                   	ret
   1231b:	90                   	nop

000000000001231c <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   1231c:	55                   	push   %rbp
   1231d:	48 89 e5             	mov    %rsp,%rbp
   12320:	48 83 ec 20          	sub    $0x20,%rsp
   12324:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   12328:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1232c:	48 8b 10             	mov    (%rax),%rdx
   1232f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12333:	48 89 d6             	mov    %rdx,%rsi
   12336:	48 89 c7             	mov    %rax,%rdi
   12339:	e8 26 f9 ff ff       	call   11c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   1233e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12342:	c9                   	leave
   12343:	c3                   	ret

0000000000012344 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12344:	55                   	push   %rbp
   12345:	48 89 e5             	mov    %rsp,%rbp
   12348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1234c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12350:	48 8b 40 28          	mov    0x28(%rax),%rax
   12354:	5d                   	pop    %rbp
   12355:	c3                   	ret

0000000000012356 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   12356:	55                   	push   %rbp
   12357:	48 89 e5             	mov    %rsp,%rbp
   1235a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   1235e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12362:	48 83 c0 20          	add    $0x20,%rax
   12366:	5d                   	pop    %rbp
   12367:	c3                   	ret

0000000000012368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   12368:	55                   	push   %rbp
   12369:	48 89 e5             	mov    %rsp,%rbp
   1236c:	48 83 ec 10          	sub    $0x10,%rsp
   12370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   12374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12378:	48 89 c7             	mov    %rax,%rdi
   1237b:	e8 4e 02 00 00       	call   125ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   12380:	c9                   	leave
   12381:	c3                   	ret

0000000000012382 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   12382:	55                   	push   %rbp
   12383:	48 89 e5             	mov    %rsp,%rbp
   12386:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1238a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1238e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   12392:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12396:	48 8b 10             	mov    (%rax),%rdx
   12399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1239d:	48 89 10             	mov    %rdx,(%rax)
   123a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123a4:	48 8b 10             	mov    (%rax),%rdx
   123a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
   123af:	90                   	nop
   123b0:	5d                   	pop    %rbp
   123b1:	c3                   	ret

00000000000123b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   123b2:	55                   	push   %rbp
   123b3:	48 89 e5             	mov    %rsp,%rbp
   123b6:	53                   	push   %rbx
   123b7:	48 83 ec 78          	sub    $0x78,%rsp
   123bb:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   123bf:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   123c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   123c7:	48 89 c7             	mov    %rax,%rdi
   123ca:	e8 a3 e5 ff ff       	call   10972 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   123cf:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   123d3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   123d7:	48 89 c7             	mov    %rax,%rdi
   123da:	e8 cb fd ff ff       	call   121aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   123df:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   123e3:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   123e7:	eb 51                	jmp    1243a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   123e9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   123ed:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   123f1:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   123f5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   123f9:	48 89 c7             	mov    %rax,%rdi
   123fc:	e8 cd 01 00 00       	call   125ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   12401:	48 89 c2             	mov    %rax,%rdx
   12404:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   12408:	48 89 c6             	mov    %rax,%rsi
   1240b:	48 89 df             	mov    %rbx,%rdi
   1240e:	e8 41 e6 ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12413:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   12416:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   1241a:	74 0e                	je     1242a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   1241c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12420:	48 89 c7             	mov    %rax,%rdi
   12423:	e8 35 f1 ff ff       	call   1155d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   12428:	eb 0c                	jmp    12436 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   1242a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1242e:	48 89 c7             	mov    %rax,%rdi
   12431:	e8 15 f1 ff ff       	call   1154b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12436:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   1243a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1243e:	48 85 c0             	test   %rax,%rax
   12441:	75 a6                	jne    123e9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   12443:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12447:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1244b:	48 89 d6             	mov    %rdx,%rsi
   1244e:	48 89 c7             	mov    %rax,%rdi
   12451:	e8 0e f8 ff ff       	call   11c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   12456:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   1245a:	74 54                	je     124b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   1245c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   12460:	48 89 c7             	mov    %rax,%rdi
   12463:	e8 5a 06 00 00       	call   12ac2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   12468:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1246c:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   12470:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   12474:	48 89 d6             	mov    %rdx,%rsi
   12477:	48 89 c7             	mov    %rax,%rdi
   1247a:	e8 79 e5 ff ff       	call   109f8 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   1247f:	84 c0                	test   %al,%al
   12481:	74 21                	je     124a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   12483:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   12487:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1248b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1248f:	48 89 ce             	mov    %rcx,%rsi
   12492:	48 89 c7             	mov    %rax,%rdi
   12495:	e8 52 06 00 00       	call   12aec <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   1249a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1249e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   124a2:	eb 7d                	jmp    12521 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   124a4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   124a8:	48 89 c7             	mov    %rax,%rdi
   124ab:	e8 ce 00 00 00       	call   1257e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   124b0:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   124b4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   124b8:	48 89 c7             	mov    %rax,%rdi
   124bb:	e8 a8 fe ff ff       	call   12368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   124c0:	48 89 c1             	mov    %rax,%rcx
   124c3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   124c7:	48 89 c2             	mov    %rax,%rdx
   124ca:	48 89 ce             	mov    %rcx,%rsi
   124cd:	48 89 df             	mov    %rbx,%rdi
   124d0:	e8 7f e5 ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   124d5:	84 c0                	test   %al,%al
   124d7:	74 21                	je     124fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   124d9:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   124dd:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   124e1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   124e5:	48 89 ce             	mov    %rcx,%rsi
   124e8:	48 89 c7             	mov    %rax,%rdi
   124eb:	e8 fc 05 00 00       	call   12aec <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   124f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   124f4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   124f8:	eb 27                	jmp    12521 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   124fa:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   12501:	00 
   12502:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   12506:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   1250a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1250e:	48 89 ce             	mov    %rcx,%rsi
   12511:	48 89 c7             	mov    %rax,%rdi
   12514:	e8 69 fe ff ff       	call   12382 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12519:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1251d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   12521:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12525:	c9                   	leave
   12526:	c3                   	ret
   12527:	90                   	nop

0000000000012528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   12528:	55                   	push   %rbp
   12529:	48 89 e5             	mov    %rsp,%rbp
   1252c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   12530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12534:	48 83 c0 18          	add    $0x18,%rax
   12538:	5d                   	pop    %rbp
   12539:	c3                   	ret

000000000001253a <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1253a:	55                   	push   %rbp
   1253b:	48 89 e5             	mov    %rsp,%rbp
   1253e:	48 83 ec 20          	sub    $0x20,%rsp
   12542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12546:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1254a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   1254e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12552:	48 89 c7             	mov    %rax,%rdi
   12555:	e8 d6 05 00 00       	call   12b30 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   1255a:	48 8b 10             	mov    (%rax),%rdx
   1255d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12561:	48 89 10             	mov    %rdx,(%rax)
   12564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12568:	48 89 c7             	mov    %rax,%rdi
   1256b:	e8 c0 05 00 00       	call   12b30 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   12570:	48 8b 10             	mov    (%rax),%rdx
   12573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12577:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1257b:	90                   	nop
   1257c:	c9                   	leave
   1257d:	c3                   	ret

000000000001257e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   1257e:	55                   	push   %rbp
   1257f:	48 89 e5             	mov    %rsp,%rbp
   12582:	48 83 ec 10          	sub    $0x10,%rsp
   12586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   1258a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1258e:	48 8b 00             	mov    (%rax),%rax
   12591:	48 89 c7             	mov    %rax,%rdi
   12594:	e8 f7 1d ff ff       	call   4390 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   12599:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1259d:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   125a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   125a4:	c9                   	leave
   125a5:	c3                   	ret

00000000000125a6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   125a6:	55                   	push   %rbp
   125a7:	48 89 e5             	mov    %rsp,%rbp
   125aa:	48 83 ec 10          	sub    $0x10,%rsp
   125ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   125b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125b6:	48 8b 00             	mov    (%rax),%rax
   125b9:	48 89 c7             	mov    %rax,%rdi
   125bc:	e8 2f 1c ff ff       	call   41f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   125c1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   125c5:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   125c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   125cc:	c9                   	leave
   125cd:	c3                   	ret

00000000000125ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   125ce:	55                   	push   %rbp
   125cf:	48 89 e5             	mov    %rsp,%rbp
   125d2:	48 83 ec 20          	sub    $0x20,%rsp
   125d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   125da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   125de:	48 89 c7             	mov    %rax,%rdi
   125e1:	e8 58 05 00 00       	call   12b3e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   125e6:	48 89 c2             	mov    %rax,%rdx
   125e9:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   125ed:	48 89 d6             	mov    %rdx,%rsi
   125f0:	48 89 c7             	mov    %rax,%rdi
   125f3:	e8 64 05 00 00       	call   12b5c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   125f8:	c9                   	leave
   125f9:	c3                   	ret

00000000000125fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   125fa:	55                   	push   %rbp
   125fb:	48 89 e5             	mov    %rsp,%rbp
   125fe:	41 54                	push   %r12
   12600:	53                   	push   %rbx
   12601:	48 83 ec 30          	sub    $0x30,%rsp
   12605:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12609:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1260d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12611:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   12615:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1261a:	75 43                	jne    1265f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   1261c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12620:	48 89 c7             	mov    %rax,%rdi
   12623:	e8 82 fb ff ff       	call   121aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12628:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   1262c:	74 31                	je     1265f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   1262e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   12632:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12636:	48 89 c7             	mov    %rax,%rdi
   12639:	e8 2a fd ff ff       	call   12368 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1263e:	49 89 c4             	mov    %rax,%r12
   12641:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12645:	48 89 c7             	mov    %rax,%rdi
   12648:	e8 81 ff ff ff       	call   125ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1264d:	4c 89 e2             	mov    %r12,%rdx
   12650:	48 89 c6             	mov    %rax,%rsi
   12653:	48 89 df             	mov    %rbx,%rdi
   12656:	e8 f9 e3 ff ff       	call   10a54 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1265b:	84 c0                	test   %al,%al
   1265d:	74 07                	je     12666 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   1265f:	b8 01 00 00 00       	mov    $0x1,%eax
   12664:	eb 05                	jmp    1266b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   12666:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   1266b:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   1266e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12672:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   12676:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   1267a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1267e:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   12682:	89 c7                	mov    %eax,%edi
   12684:	e8 c7 19 ff ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   12689:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1268d:	48 8b 40 28          	mov    0x28(%rax),%rax
   12691:	48 8d 50 01          	lea    0x1(%rax),%rdx
   12695:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12699:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   1269d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   126a1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   126a5:	48 89 d6             	mov    %rdx,%rsi
   126a8:	48 89 c7             	mov    %rax,%rdi
   126ab:	e8 b4 f5 ff ff       	call   11c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   126b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   126b4:	48 83 c4 30          	add    $0x30,%rsp
   126b8:	5b                   	pop    %rbx
   126b9:	41 5c                	pop    %r12
   126bb:	5d                   	pop    %rbp
   126bc:	c3                   	ret
   126bd:	90                   	nop

00000000000126be <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   126be:	55                   	push   %rbp
   126bf:	48 89 e5             	mov    %rsp,%rbp
   126c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   126c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126ca:	5d                   	pop    %rbp
   126cb:	c3                   	ret

00000000000126cc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   126cc:	55                   	push   %rbp
   126cd:	48 89 e5             	mov    %rsp,%rbp
   126d0:	48 83 ec 10          	sub    $0x10,%rsp
   126d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   126dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126e4:	48 89 d6             	mov    %rdx,%rsi
   126e7:	48 89 c7             	mov    %rax,%rdi
   126ea:	e8 dd 7c ff ff       	call   a3cc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   126ef:	90                   	nop
   126f0:	c9                   	leave
   126f1:	c3                   	ret

00000000000126f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   126f2:	55                   	push   %rbp
   126f3:	48 89 e5             	mov    %rsp,%rbp
   126f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   126fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12702:	48 8b 10             	mov    (%rax),%rdx
   12705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12709:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   1270c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12710:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12718:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1271c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12720:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12728:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1272c:	90                   	nop
   1272d:	5d                   	pop    %rbp
   1272e:	c3                   	ret

000000000001272f <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1272f:	55                   	push   %rbp
   12730:	48 89 e5             	mov    %rsp,%rbp
   12733:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   12737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1273b:	5d                   	pop    %rbp
   1273c:	c3                   	ret

000000000001273d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1273d:	55                   	push   %rbp
   1273e:	48 89 e5             	mov    %rsp,%rbp
   12741:	48 83 ec 20          	sub    $0x20,%rsp
   12745:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   12749:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   12750:	ff ff 0f 
   12753:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   12757:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1275b:	48 89 c7             	mov    %rax,%rdi
   1275e:	e8 0b 04 00 00       	call   12b6e <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   12763:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   12767:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1276b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1276f:	48 89 d6             	mov    %rdx,%rsi
   12772:	48 89 c7             	mov    %rax,%rdi
   12775:	e8 43 2b ff ff       	call   52bd <_ZSt3minImERKT_S2_S2_>
   1277a:	48 8b 00             	mov    (%rax),%rax
      }
   1277d:	c9                   	leave
   1277e:	c3                   	ret
   1277f:	90                   	nop

0000000000012780 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   12780:	55                   	push   %rbp
   12781:	48 89 e5             	mov    %rsp,%rbp
   12784:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1278c:	5d                   	pop    %rbp
   1278d:	c3                   	ret

000000000001278e <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1278e:	55                   	push   %rbp
   1278f:	48 89 e5             	mov    %rsp,%rbp
   12792:	48 83 ec 20          	sub    $0x20,%rsp
   12796:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1279a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1279e:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   127a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   127a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127aa:	48 89 d6             	mov    %rdx,%rsi
   127ad:	48 89 c7             	mov    %rax,%rdi
   127b0:	e8 d3 03 00 00       	call   12b88 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   127b5:	c9                   	leave
   127b6:	c3                   	ret

00000000000127b7 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   127b7:	55                   	push   %rbp
   127b8:	48 89 e5             	mov    %rsp,%rbp
   127bb:	48 83 ec 10          	sub    $0x10,%rsp
   127bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   127c7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   127cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127cf:	ba 00 00 00 00       	mov    $0x0,%edx
   127d4:	48 89 ce             	mov    %rcx,%rsi
   127d7:	48 89 c7             	mov    %rax,%rdi
   127da:	e8 07 04 00 00       	call   12be6 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   127df:	c9                   	leave
   127e0:	c3                   	ret

00000000000127e1 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   127e1:	55                   	push   %rbp
   127e2:	48 89 e5             	mov    %rsp,%rbp
   127e5:	41 54                	push   %r12
   127e7:	53                   	push   %rbx
   127e8:	48 83 ec 20          	sub    $0x20,%rsp
   127ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   127f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   127f4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   127f8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   127fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12800:	48 89 c7             	mov    %rax,%rdi
   12803:	e8 3f 04 00 00       	call   12c47 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   12808:	49 89 c4             	mov    %rax,%r12
   1280b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1280f:	48 89 c7             	mov    %rax,%rdi
   12812:	e8 30 04 00 00       	call   12c47 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   12817:	48 89 c3             	mov    %rax,%rbx
   1281a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1281e:	48 89 c7             	mov    %rax,%rdi
   12821:	e8 21 04 00 00       	call   12c47 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   12826:	48 89 c7             	mov    %rax,%rdi
   12829:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1282d:	48 89 c1             	mov    %rax,%rcx
   12830:	4c 89 e2             	mov    %r12,%rdx
   12833:	48 89 de             	mov    %rbx,%rsi
   12836:	e8 1a 04 00 00       	call   12c55 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1283b:	48 83 c4 20          	add    $0x20,%rsp
   1283f:	5b                   	pop    %rbx
   12840:	41 5c                	pop    %r12
   12842:	5d                   	pop    %rbp
   12843:	c3                   	ret

0000000000012844 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   12844:	55                   	push   %rbp
   12845:	48 89 e5             	mov    %rsp,%rbp
   12848:	48 83 ec 20          	sub    $0x20,%rsp
   1284c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12854:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   12858:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1285c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12863:	00 
   12864:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12868:	48 89 d6             	mov    %rdx,%rsi
   1286b:	48 89 c7             	mov    %rax,%rdi
   1286e:	e8 dd 1a ff ff       	call   4350 <_ZdlPvm@plt>
      }
   12873:	c9                   	leave
   12874:	c3                   	ret

0000000000012875 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   12875:	55                   	push   %rbp
   12876:	48 89 e5             	mov    %rsp,%rbp
   12879:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1287d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12881:	90                   	nop
   12882:	5d                   	pop    %rbp
   12883:	c3                   	ret

0000000000012884 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   12884:	55                   	push   %rbp
   12885:	48 89 e5             	mov    %rsp,%rbp
   12888:	48 83 ec 20          	sub    $0x20,%rsp
   1288c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12890:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12894:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   12898:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1289c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   128a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128a4:	48 89 ce             	mov    %rcx,%rsi
   128a7:	48 89 c7             	mov    %rax,%rdi
   128aa:	e8 09 04 00 00       	call   12cb8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   128af:	c9                   	leave
   128b0:	c3                   	ret
   128b1:	90                   	nop

00000000000128b2 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   128b2:	55                   	push   %rbp
   128b3:	48 89 e5             	mov    %rsp,%rbp
   128b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   128ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128be:	5d                   	pop    %rbp
   128bf:	c3                   	ret

00000000000128c0 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   128c0:	55                   	push   %rbp
   128c1:	48 89 e5             	mov    %rsp,%rbp
   128c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   128c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128cc:	5d                   	pop    %rbp
   128cd:	c3                   	ret

00000000000128ce <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   128ce:	55                   	push   %rbp
   128cf:	48 89 e5             	mov    %rsp,%rbp
   128d2:	48 83 ec 30          	sub    $0x30,%rsp
   128d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   128da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   128de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   128e2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   128e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   128ea:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   128ee:	48 c1 f8 03          	sar    $0x3,%rax
   128f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   128f6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   128fb:	7e 1f                	jle    1291c <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   128fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12901:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12908:	00 
   12909:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1290d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12911:	48 89 ce             	mov    %rcx,%rsi
   12914:	48 89 c7             	mov    %rax,%rdi
   12917:	e8 e4 1c ff ff       	call   4600 <memmove@plt>
      return __result + __count;
   1291c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12920:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12927:	00 
   12928:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1292c:	48 01 d0             	add    %rdx,%rax
    }
   1292f:	c9                   	leave
   12930:	c3                   	ret
   12931:	90                   	nop

0000000000012932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   12932:	55                   	push   %rbp
   12933:	48 89 e5             	mov    %rsp,%rbp
   12936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1293a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1293e:	5d                   	pop    %rbp
   1293f:	c3                   	ret

0000000000012940 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   12940:	55                   	push   %rbp
   12941:	48 89 e5             	mov    %rsp,%rbp
   12944:	48 83 ec 10          	sub    $0x10,%rsp
   12948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1294c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   12950:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12958:	48 89 d6             	mov    %rdx,%rsi
   1295b:	48 89 c7             	mov    %rax,%rdi
   1295e:	e8 bd 03 00 00       	call   12d20 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   12963:	90                   	nop
   12964:	c9                   	leave
   12965:	c3                   	ret

0000000000012966 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   12966:	55                   	push   %rbp
   12967:	48 89 e5             	mov    %rsp,%rbp
   1296a:	48 83 ec 20          	sub    $0x20,%rsp
   1296e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12972:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12976:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1297a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1297e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12986:	48 89 ce             	mov    %rcx,%rsi
   12989:	48 89 c7             	mov    %rax,%rdi
   1298c:	e8 af 03 00 00       	call   12d40 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   12991:	90                   	nop
   12992:	c9                   	leave
   12993:	c3                   	ret

0000000000012994 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   12994:	55                   	push   %rbp
   12995:	48 89 e5             	mov    %rsp,%rbp
   12998:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   1299c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129a0:	5d                   	pop    %rbp
   129a1:	c3                   	ret

00000000000129a2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   129a2:	55                   	push   %rbp
   129a3:	48 89 e5             	mov    %rsp,%rbp
   129a6:	48 83 ec 10          	sub    $0x10,%rsp
   129aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   129b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   129b6:	48 89 c7             	mov    %rax,%rdi
   129b9:	e8 c6 ec ff ff       	call   11684 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   129be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   129c2:	48 89 02             	mov    %rax,(%rdx)
   129c5:	90                   	nop
   129c6:	c9                   	leave
   129c7:	c3                   	ret

00000000000129c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   129c8:	55                   	push   %rbp
   129c9:	48 89 e5             	mov    %rsp,%rbp
   129cc:	48 83 ec 10          	sub    $0x10,%rsp
   129d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   129d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129d8:	48 89 c7             	mov    %rax,%rdi
   129db:	e8 52 ff ff ff       	call   12932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   129e0:	be 01 00 00 00       	mov    $0x1,%esi
   129e5:	48 89 c7             	mov    %rax,%rdi
   129e8:	e8 8d 03 00 00       	call   12d7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   129ed:	c9                   	leave
   129ee:	c3                   	ret
   129ef:	90                   	nop

00000000000129f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   129f0:	55                   	push   %rbp
   129f1:	48 89 e5             	mov    %rsp,%rbp
   129f4:	41 56                	push   %r14
   129f6:	41 55                	push   %r13
   129f8:	41 54                	push   %r12
   129fa:	53                   	push   %rbx
   129fb:	48 83 ec 30          	sub    $0x30,%rsp
   129ff:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12a03:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12a07:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12a0b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   12a0f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   12a13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12a17:	48 89 c6             	mov    %rax,%rsi
   12a1a:	bf 48 00 00 00       	mov    $0x48,%edi
   12a1f:	e8 cc 23 ff ff       	call   4df0 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   12a24:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12a28:	48 89 c7             	mov    %rax,%rdi
   12a2b:	e8 b1 ec ff ff       	call   116e1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12a30:	49 89 c6             	mov    %rax,%r14
   12a33:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   12a37:	48 89 c7             	mov    %rax,%rdi
   12a3a:	e8 94 ec ff ff       	call   116d3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12a3f:	49 89 c5             	mov    %rax,%r13
   12a42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a46:	48 89 c7             	mov    %rax,%rdi
   12a49:	e8 77 ec ff ff       	call   116c5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12a4e:	49 89 c4             	mov    %rax,%r12
   12a51:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12a55:	48 89 c7             	mov    %rax,%rdi
   12a58:	e8 e1 eb ff ff       	call   1163e <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   12a5d:	48 89 c3             	mov    %rax,%rbx
   12a60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a64:	48 89 c7             	mov    %rax,%rdi
   12a67:	e8 c6 fe ff ff       	call   12932 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   12a6c:	4d 89 f0             	mov    %r14,%r8
   12a6f:	4c 89 e9             	mov    %r13,%rcx
   12a72:	4c 89 e2             	mov    %r12,%rdx
   12a75:	48 89 de             	mov    %rbx,%rsi
   12a78:	48 89 c7             	mov    %rax,%rdi
   12a7b:	e8 24 03 00 00       	call   12da4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   12a80:	eb 33                	jmp    12ab5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   12a82:	48 89 c7             	mov    %rax,%rdi
   12a85:	e8 96 16 ff ff       	call   4120 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   12a8a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12a8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a92:	48 89 d6             	mov    %rdx,%rsi
   12a95:	48 89 c7             	mov    %rax,%rdi
   12a98:	e8 d7 f6 ff ff       	call   12174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   12a9d:	e8 ce 1a ff ff       	call   4570 <__cxa_rethrow@plt>
	  __catch(...)
   12aa2:	48 89 c3             	mov    %rax,%rbx
   12aa5:	e8 66 1b ff ff       	call   4610 <__cxa_end_catch@plt>
   12aaa:	48 89 d8             	mov    %rbx,%rax
   12aad:	48 89 c7             	mov    %rax,%rdi
   12ab0:	e8 cb 1b ff ff       	call   4680 <_Unwind_Resume@plt>
	}
   12ab5:	48 83 c4 30          	add    $0x30,%rsp
   12ab9:	5b                   	pop    %rbx
   12aba:	41 5c                	pop    %r12
   12abc:	41 5d                	pop    %r13
   12abe:	41 5e                	pop    %r14
   12ac0:	5d                   	pop    %rbp
   12ac1:	c3                   	ret

0000000000012ac2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12ac2:	55                   	push   %rbp
   12ac3:	48 89 e5             	mov    %rsp,%rbp
   12ac6:	48 83 ec 20          	sub    $0x20,%rsp
   12aca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   12ace:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ad2:	48 8b 50 18          	mov    0x18(%rax),%rdx
   12ad6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12ada:	48 89 d6             	mov    %rdx,%rsi
   12add:	48 89 c7             	mov    %rax,%rdi
   12ae0:	e8 7f f1 ff ff       	call   11c64 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   12ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ae9:	c9                   	leave
   12aea:	c3                   	ret
   12aeb:	90                   	nop

0000000000012aec <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   12aec:	55                   	push   %rbp
   12aed:	48 89 e5             	mov    %rsp,%rbp
   12af0:	48 83 ec 20          	sub    $0x20,%rsp
   12af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12af8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12afc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   12b00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b04:	48 89 c7             	mov    %rax,%rdi
   12b07:	e8 04 03 00 00       	call   12e10 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   12b0c:	48 8b 10             	mov    (%rax),%rdx
   12b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b13:	48 89 10             	mov    %rdx,(%rax)
   12b16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b1a:	48 89 c7             	mov    %rax,%rdi
   12b1d:	e8 0e 00 00 00       	call   12b30 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   12b22:	48 8b 10             	mov    (%rax),%rdx
   12b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b29:	48 89 50 08          	mov    %rdx,0x8(%rax)
   12b2d:	90                   	nop
   12b2e:	c9                   	leave
   12b2f:	c3                   	ret

0000000000012b30 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12b30:	55                   	push   %rbp
   12b31:	48 89 e5             	mov    %rsp,%rbp
   12b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b3c:	5d                   	pop    %rbp
   12b3d:	c3                   	ret

0000000000012b3e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   12b3e:	55                   	push   %rbp
   12b3f:	48 89 e5             	mov    %rsp,%rbp
   12b42:	48 83 ec 10          	sub    $0x10,%rsp
   12b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   12b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b4e:	48 83 c0 20          	add    $0x20,%rax
   12b52:	48 89 c7             	mov    %rax,%rdi
   12b55:	e8 c4 02 00 00       	call   12e1e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   12b5a:	c9                   	leave
   12b5b:	c3                   	ret

0000000000012b5c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   12b5c:	55                   	push   %rbp
   12b5d:	48 89 e5             	mov    %rsp,%rbp
   12b60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   12b68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b6c:	5d                   	pop    %rbp
   12b6d:	c3                   	ret

0000000000012b6e <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   12b6e:	55                   	push   %rbp
   12b6f:	48 89 e5             	mov    %rsp,%rbp
   12b72:	48 83 ec 10          	sub    $0x10,%rsp
   12b76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   12b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b7e:	48 89 c7             	mov    %rax,%rdi
   12b81:	e8 b2 02 00 00       	call   12e38 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   12b86:	c9                   	leave
   12b87:	c3                   	ret

0000000000012b88 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   12b88:	55                   	push   %rbp
   12b89:	48 89 e5             	mov    %rsp,%rbp
   12b8c:	48 83 ec 20          	sub    $0x20,%rsp
   12b90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b94:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   12b98:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   12b9d:	74 40                	je     12bdf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   12b9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ba3:	48 89 c7             	mov    %rax,%rdi
   12ba6:	e8 a7 02 00 00       	call   12e52 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   12bab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   12baf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bb3:	48 89 c7             	mov    %rax,%rdi
   12bb6:	e8 a5 02 00 00       	call   12e60 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   12bbb:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   12bc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12bc4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   12bc8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12bcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bd0:	48 89 ce             	mov    %rcx,%rsi
   12bd3:	48 89 c7             	mov    %rax,%rdi
   12bd6:	e8 ac 02 00 00       	call   12e87 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   12bdb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   12bdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   12be3:	c9                   	leave
   12be4:	c3                   	ret
   12be5:	90                   	nop

0000000000012be6 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   12be6:	55                   	push   %rbp
   12be7:	48 89 e5             	mov    %rsp,%rbp
   12bea:	48 83 ec 20          	sub    $0x20,%rsp
   12bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12bf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12bf6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   12bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bfe:	48 89 c7             	mov    %rax,%rdi
   12c01:	e8 c6 02 00 00       	call   12ecc <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   12c06:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12c0a:	0f 92 c0             	setb   %al
   12c0d:	0f b6 c0             	movzbl %al,%eax
   12c10:	48 85 c0             	test   %rax,%rax
   12c13:	0f 95 c0             	setne  %al
   12c16:	84 c0                	test   %al,%al
   12c18:	74 1a                	je     12c34 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   12c1a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   12c21:	ff ff 1f 
   12c24:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12c28:	73 05                	jae    12c2f <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   12c2a:	e8 21 16 ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   12c2f:	e8 ac 14 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   12c34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c38:	48 c1 e0 03          	shl    $0x3,%rax
   12c3c:	48 89 c7             	mov    %rax,%rdi
   12c3f:	e8 fc 16 ff ff       	call   4340 <_Znwm@plt>
   12c44:	90                   	nop
      }
   12c45:	c9                   	leave
   12c46:	c3                   	ret

0000000000012c47 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   12c47:	55                   	push   %rbp
   12c48:	48 89 e5             	mov    %rsp,%rbp
   12c4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   12c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c53:	5d                   	pop    %rbp
   12c54:	c3                   	ret

0000000000012c55 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   12c55:	55                   	push   %rbp
   12c56:	48 89 e5             	mov    %rsp,%rbp
   12c59:	48 83 ec 30          	sub    $0x30,%rsp
   12c5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12c61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12c65:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12c69:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   12c6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c71:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   12c75:	48 c1 f8 03          	sar    $0x3,%rax
   12c79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   12c7d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12c82:	7e 1f                	jle    12ca3 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   12c84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c88:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12c8f:	00 
   12c90:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12c94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c98:	48 89 ce             	mov    %rcx,%rsi
   12c9b:	48 89 c7             	mov    %rax,%rdi
   12c9e:	e8 5d 19 ff ff       	call   4600 <memmove@plt>
      return __result + __count;
   12ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ca7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12cae:	00 
   12caf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cb3:	48 01 d0             	add    %rdx,%rax
    }
   12cb6:	c9                   	leave
   12cb7:	c3                   	ret

0000000000012cb8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   12cb8:	55                   	push   %rbp
   12cb9:	48 89 e5             	mov    %rsp,%rbp
   12cbc:	53                   	push   %rbx
   12cbd:	48 83 ec 28          	sub    $0x28,%rsp
   12cc1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12cc5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12cc9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   12ccd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12cd1:	48 89 c7             	mov    %rax,%rdi
   12cd4:	e8 07 02 00 00       	call   12ee0 <_ZSt12__miter_baseIPKPKcET_S4_>
   12cd9:	48 89 c3             	mov    %rax,%rbx
   12cdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ce0:	48 89 c7             	mov    %rax,%rdi
   12ce3:	e8 f8 01 00 00       	call   12ee0 <_ZSt12__miter_baseIPKPKcET_S4_>
   12ce8:	48 89 c1             	mov    %rax,%rcx
   12ceb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cef:	48 89 c2             	mov    %rax,%rdx
   12cf2:	48 89 de             	mov    %rbx,%rsi
   12cf5:	48 89 cf             	mov    %rcx,%rdi
   12cf8:	e8 f1 01 00 00       	call   12eee <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   12cfd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12d01:	c9                   	leave
   12d02:	c3                   	ret
   12d03:	90                   	nop

0000000000012d04 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   12d04:	55                   	push   %rbp
   12d05:	48 89 e5             	mov    %rsp,%rbp
   12d08:	48 83 ec 10          	sub    $0x10,%rsp
   12d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d14:	48 89 c7             	mov    %rax,%rdi
   12d17:	e8 b4 14 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   12d1c:	90                   	nop
   12d1d:	c9                   	leave
   12d1e:	c3                   	ret
   12d1f:	90                   	nop

0000000000012d20 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   12d20:	55                   	push   %rbp
   12d21:	48 89 e5             	mov    %rsp,%rbp
   12d24:	48 83 ec 10          	sub    $0x10,%rsp
   12d28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   12d30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12d34:	48 89 c7             	mov    %rax,%rdi
   12d37:	e8 c8 ff ff ff       	call   12d04 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   12d3c:	90                   	nop
   12d3d:	c9                   	leave
   12d3e:	c3                   	ret
   12d3f:	90                   	nop

0000000000012d40 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   12d40:	55                   	push   %rbp
   12d41:	48 89 e5             	mov    %rsp,%rbp
   12d44:	48 83 ec 20          	sub    $0x20,%rsp
   12d48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12d50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   12d54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d58:	48 89 d0             	mov    %rdx,%rax
   12d5b:	48 c1 e0 03          	shl    $0x3,%rax
   12d5f:	48 01 d0             	add    %rdx,%rax
   12d62:	48 c1 e0 03          	shl    $0x3,%rax
   12d66:	48 89 c2             	mov    %rax,%rdx
   12d69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12d6d:	48 89 d6             	mov    %rdx,%rsi
   12d70:	48 89 c7             	mov    %rax,%rdi
   12d73:	e8 d8 15 ff ff       	call   4350 <_ZdlPvm@plt>
      }
   12d78:	c9                   	leave
   12d79:	c3                   	ret

0000000000012d7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   12d7a:	55                   	push   %rbp
   12d7b:	48 89 e5             	mov    %rsp,%rbp
   12d7e:	48 83 ec 10          	sub    $0x10,%rsp
   12d82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   12d8a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d92:	ba 00 00 00 00       	mov    $0x0,%edx
   12d97:	48 89 ce             	mov    %rcx,%rsi
   12d9a:	48 89 c7             	mov    %rax,%rdi
   12d9d:	e8 b6 01 00 00       	call   12f58 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   12da2:	c9                   	leave
   12da3:	c3                   	ret

0000000000012da4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   12da4:	55                   	push   %rbp
   12da5:	48 89 e5             	mov    %rsp,%rbp
   12da8:	41 54                	push   %r12
   12daa:	53                   	push   %rbx
   12dab:	48 83 ec 30          	sub    $0x30,%rsp
   12daf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12db3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12db7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12dbb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   12dbf:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   12dc3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12dc7:	48 89 c7             	mov    %rax,%rdi
   12dca:	e8 12 e9 ff ff       	call   116e1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12dcf:	49 89 c4             	mov    %rax,%r12
   12dd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12dd6:	48 89 c7             	mov    %rax,%rdi
   12dd9:	e8 f5 e8 ff ff       	call   116d3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12dde:	48 89 c3             	mov    %rax,%rbx
   12de1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12de5:	48 89 c7             	mov    %rax,%rdi
   12de8:	e8 d8 e8 ff ff       	call   116c5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12ded:	48 89 c2             	mov    %rax,%rdx
   12df0:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   12df4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12df8:	4d 89 e0             	mov    %r12,%r8
   12dfb:	48 89 d9             	mov    %rbx,%rcx
   12dfe:	48 89 c7             	mov    %rax,%rdi
   12e01:	e8 e4 01 00 00       	call   12fea <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   12e06:	90                   	nop
   12e07:	48 83 c4 30          	add    $0x30,%rsp
   12e0b:	5b                   	pop    %rbx
   12e0c:	41 5c                	pop    %r12
   12e0e:	5d                   	pop    %rbp
   12e0f:	c3                   	ret

0000000000012e10 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12e10:	55                   	push   %rbp
   12e11:	48 89 e5             	mov    %rsp,%rbp
   12e14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12e18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e1c:	5d                   	pop    %rbp
   12e1d:	c3                   	ret

0000000000012e1e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   12e1e:	55                   	push   %rbp
   12e1f:	48 89 e5             	mov    %rsp,%rbp
   12e22:	48 83 ec 10          	sub    $0x10,%rsp
   12e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   12e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e2e:	48 89 c7             	mov    %rax,%rdi
   12e31:	e8 64 02 00 00       	call   1309a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   12e36:	c9                   	leave
   12e37:	c3                   	ret

0000000000012e38 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   12e38:	55                   	push   %rbp
   12e39:	48 89 e5             	mov    %rsp,%rbp
   12e3c:	48 83 ec 10          	sub    $0x10,%rsp
   12e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   12e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e48:	48 89 c7             	mov    %rax,%rdi
   12e4b:	e8 7c 00 00 00       	call   12ecc <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   12e50:	c9                   	leave
   12e51:	c3                   	ret

0000000000012e52 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   12e52:	55                   	push   %rbp
   12e53:	48 89 e5             	mov    %rsp,%rbp
   12e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   12e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e5e:	5d                   	pop    %rbp
   12e5f:	c3                   	ret

0000000000012e60 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   12e60:	55                   	push   %rbp
   12e61:	48 89 e5             	mov    %rsp,%rbp
   12e64:	48 83 ec 10          	sub    $0x10,%rsp
   12e68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   12e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e70:	48 89 c6             	mov    %rax,%rsi
   12e73:	bf 08 00 00 00       	mov    $0x8,%edi
   12e78:	e8 73 1f ff ff       	call   4df0 <_ZnwmPv>
   12e7d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   12e84:	90                   	nop
   12e85:	c9                   	leave
   12e86:	c3                   	ret

0000000000012e87 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   12e87:	55                   	push   %rbp
   12e88:	48 89 e5             	mov    %rsp,%rbp
   12e8b:	48 83 ec 20          	sub    $0x20,%rsp
   12e8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12e97:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   12e9b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12e9f:	48 89 c7             	mov    %rax,%rdi
   12ea2:	e8 01 02 00 00       	call   130a8 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   12ea7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12eab:	48 89 c7             	mov    %rax,%rdi
   12eae:	e8 4f 1f ff ff       	call   4e02 <_ZSt17__size_to_integerm>
   12eb3:	48 89 c1             	mov    %rax,%rcx
   12eb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12ebe:	48 89 ce             	mov    %rcx,%rsi
   12ec1:	48 89 c7             	mov    %rax,%rdi
   12ec4:	e8 ea 01 00 00       	call   130b3 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   12ec9:	c9                   	leave
   12eca:	c3                   	ret
   12ecb:	90                   	nop

0000000000012ecc <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   12ecc:	55                   	push   %rbp
   12ecd:	48 89 e5             	mov    %rsp,%rbp
   12ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   12ed4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   12edb:	ff ff 0f 
      }
   12ede:	5d                   	pop    %rbp
   12edf:	c3                   	ret

0000000000012ee0 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   12ee0:	55                   	push   %rbp
   12ee1:	48 89 e5             	mov    %rsp,%rbp
   12ee4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   12ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eec:	5d                   	pop    %rbp
   12eed:	c3                   	ret

0000000000012eee <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   12eee:	55                   	push   %rbp
   12eef:	48 89 e5             	mov    %rsp,%rbp
   12ef2:	41 54                	push   %r12
   12ef4:	53                   	push   %rbx
   12ef5:	48 83 ec 20          	sub    $0x20,%rsp
   12ef9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12efd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12f01:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   12f05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12f09:	48 89 c7             	mov    %rax,%rdi
   12f0c:	e8 af f9 ff ff       	call   128c0 <_ZSt12__niter_baseIPPKcET_S3_>
   12f11:	49 89 c4             	mov    %rax,%r12
   12f14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12f18:	48 89 c7             	mov    %rax,%rdi
   12f1b:	e8 f0 01 00 00       	call   13110 <_ZSt12__niter_baseIPKPKcET_S4_>
   12f20:	48 89 c3             	mov    %rax,%rbx
   12f23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f27:	48 89 c7             	mov    %rax,%rdi
   12f2a:	e8 e1 01 00 00       	call   13110 <_ZSt12__niter_baseIPKPKcET_S4_>
   12f2f:	4c 89 e2             	mov    %r12,%rdx
   12f32:	48 89 de             	mov    %rbx,%rsi
   12f35:	48 89 c7             	mov    %rax,%rdi
   12f38:	e8 e1 01 00 00       	call   1311e <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   12f3d:	48 89 c2             	mov    %rax,%rdx
   12f40:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   12f44:	48 89 d6             	mov    %rdx,%rsi
   12f47:	48 89 c7             	mov    %rax,%rdi
   12f4a:	e8 fc 01 00 00       	call   1314b <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   12f4f:	48 83 c4 20          	add    $0x20,%rsp
   12f53:	5b                   	pop    %rbx
   12f54:	41 5c                	pop    %r12
   12f56:	5d                   	pop    %rbp
   12f57:	c3                   	ret

0000000000012f58 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   12f58:	55                   	push   %rbp
   12f59:	48 89 e5             	mov    %rsp,%rbp
   12f5c:	48 83 ec 20          	sub    $0x20,%rsp
   12f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12f68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   12f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f70:	48 89 c7             	mov    %rax,%rdi
   12f73:	e8 e6 01 00 00       	call   1315e <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   12f78:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12f7c:	0f 92 c0             	setb   %al
   12f7f:	0f b6 c0             	movzbl %al,%eax
   12f82:	48 85 c0             	test   %rax,%rax
   12f85:	0f 95 c0             	setne  %al
   12f88:	84 c0                	test   %al,%al
   12f8a:	74 1a                	je     12fa6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   12f8c:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   12f93:	38 8e 03 
   12f96:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12f9a:	73 05                	jae    12fa1 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   12f9c:	e8 af 12 ff ff       	call   4250 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   12fa1:	e8 3a 11 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   12fa6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12faa:	48 89 d0             	mov    %rdx,%rax
   12fad:	48 c1 e0 03          	shl    $0x3,%rax
   12fb1:	48 01 d0             	add    %rdx,%rax
   12fb4:	48 c1 e0 03          	shl    $0x3,%rax
   12fb8:	48 89 c7             	mov    %rax,%rdi
   12fbb:	e8 80 13 ff ff       	call   4340 <_Znwm@plt>
   12fc0:	90                   	nop
      }
   12fc1:	c9                   	leave
   12fc2:	c3                   	ret
   12fc3:	90                   	nop

0000000000012fc4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   12fc4:	55                   	push   %rbp
   12fc5:	48 89 e5             	mov    %rsp,%rbp
   12fc8:	48 83 ec 10          	sub    $0x10,%rsp
   12fcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12fd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fd8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12fdc:	48 89 d6             	mov    %rdx,%rsi
   12fdf:	48 89 c7             	mov    %rax,%rdi
   12fe2:	e8 8b 01 00 00       	call   13172 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   12fe7:	90                   	nop
   12fe8:	c9                   	leave
   12fe9:	c3                   	ret

0000000000012fea <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   12fea:	55                   	push   %rbp
   12feb:	48 89 e5             	mov    %rsp,%rbp
   12fee:	41 56                	push   %r14
   12ff0:	41 55                	push   %r13
   12ff2:	41 54                	push   %r12
   12ff4:	53                   	push   %rbx
   12ff5:	48 83 ec 40          	sub    $0x40,%rsp
   12ff9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12ffd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   13001:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   13005:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   13009:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1300d:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   13011:	48 89 de             	mov    %rbx,%rsi
   13014:	bf 28 00 00 00       	mov    $0x28,%edi
   13019:	e8 d2 1d ff ff       	call   4df0 <_ZnwmPv>
   1301e:	49 89 c4             	mov    %rax,%r12
   13021:	41 be 01 00 00 00    	mov    $0x1,%r14d
   13027:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1302b:	48 89 c7             	mov    %rax,%rdi
   1302e:	e8 ae e6 ff ff       	call   116e1 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   13033:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13037:	48 89 c7             	mov    %rax,%rdi
   1303a:	e8 94 e6 ff ff       	call   116d3 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1303f:	48 89 c2             	mov    %rax,%rdx
   13042:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   13046:	48 89 d6             	mov    %rdx,%rsi
   13049:	48 89 c7             	mov    %rax,%rdi
   1304c:	e8 73 ff ff ff       	call   12fc4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   13051:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   13055:	48 89 c7             	mov    %rax,%rdi
   13058:	e8 68 e6 ff ff       	call   116c5 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1305d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   13061:	48 89 c6             	mov    %rax,%rsi
   13064:	4c 89 e7             	mov    %r12,%rdi
   13067:	e8 24 01 00 00       	call   13190 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   1306c:	eb 1e                	jmp    1308c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   1306e:	49 89 c5             	mov    %rax,%r13
   13071:	45 84 f6             	test   %r14b,%r14b
   13074:	74 0b                	je     13081 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   13076:	48 89 de             	mov    %rbx,%rsi
   13079:	4c 89 e7             	mov    %r12,%rdi
   1307c:	e8 52 c1 ff ff       	call   f1d3 <_ZdlPvS_>
   13081:	4c 89 e8             	mov    %r13,%rax
   13084:	48 89 c7             	mov    %rax,%rdi
   13087:	e8 f4 15 ff ff       	call   4680 <_Unwind_Resume@plt>
   1308c:	48 83 c4 40          	add    $0x40,%rsp
   13090:	5b                   	pop    %rbx
   13091:	41 5c                	pop    %r12
   13093:	41 5d                	pop    %r13
   13095:	41 5e                	pop    %r14
   13097:	5d                   	pop    %rbp
   13098:	c3                   	ret
   13099:	90                   	nop

000000000001309a <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   1309a:	55                   	push   %rbp
   1309b:	48 89 e5             	mov    %rsp,%rbp
   1309e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   130a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130a6:	5d                   	pop    %rbp
   130a7:	c3                   	ret

00000000000130a8 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   130a8:	55                   	push   %rbp
   130a9:	48 89 e5             	mov    %rsp,%rbp
   130ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   130b0:	90                   	nop
   130b1:	5d                   	pop    %rbp
   130b2:	c3                   	ret

00000000000130b3 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   130b3:	55                   	push   %rbp
   130b4:	48 89 e5             	mov    %rsp,%rbp
   130b7:	48 83 ec 20          	sub    $0x20,%rsp
   130bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   130c3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   130c7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   130cc:	75 06                	jne    130d4 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   130ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130d2:	eb 3a                	jmp    1310e <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   130d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130d8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   130df:	00 
   130e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130e4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   130e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   130ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130f0:	48 89 ce             	mov    %rcx,%rsi
   130f3:	48 89 c7             	mov    %rax,%rdi
   130f6:	e8 bf 00 00 00       	call   131ba <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   130fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130ff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13106:	00 
   13107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1310b:	48 01 d0             	add    %rdx,%rax
    }
   1310e:	c9                   	leave
   1310f:	c3                   	ret

0000000000013110 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   13110:	55                   	push   %rbp
   13111:	48 89 e5             	mov    %rsp,%rbp
   13114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   13118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1311c:	5d                   	pop    %rbp
   1311d:	c3                   	ret

000000000001311e <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1311e:	55                   	push   %rbp
   1311f:	48 89 e5             	mov    %rsp,%rbp
   13122:	48 83 ec 20          	sub    $0x20,%rsp
   13126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1312a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1312e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   13132:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13136:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1313a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1313e:	48 89 ce             	mov    %rcx,%rsi
   13141:	48 89 c7             	mov    %rax,%rdi
   13144:	e8 9f 00 00 00       	call   131e8 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   13149:	c9                   	leave
   1314a:	c3                   	ret

000000000001314b <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1314b:	55                   	push   %rbp
   1314c:	48 89 e5             	mov    %rsp,%rbp
   1314f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13153:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   13157:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1315b:	5d                   	pop    %rbp
   1315c:	c3                   	ret
   1315d:	90                   	nop

000000000001315e <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1315e:	55                   	push   %rbp
   1315f:	48 89 e5             	mov    %rsp,%rbp
   13162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   13166:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1316d:	1c c7 01 
      }
   13170:	5d                   	pop    %rbp
   13171:	c3                   	ret

0000000000013172 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   13172:	55                   	push   %rbp
   13173:	48 89 e5             	mov    %rsp,%rbp
   13176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1317a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1317e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13182:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13186:	48 8b 12             	mov    (%rdx),%rdx
   13189:	48 89 10             	mov    %rdx,(%rax)
      { }
   1318c:	90                   	nop
   1318d:	5d                   	pop    %rbp
   1318e:	c3                   	ret
   1318f:	90                   	nop

0000000000013190 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   13190:	55                   	push   %rbp
   13191:	48 89 e5             	mov    %rsp,%rbp
   13194:	48 83 ec 20          	sub    $0x20,%rsp
   13198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1319c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   131a0:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   131a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   131a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131ac:	48 89 ce             	mov    %rcx,%rsi
   131af:	48 89 c7             	mov    %rax,%rdi
   131b2:	e8 5f 00 00 00       	call   13216 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   131b7:	90                   	nop
   131b8:	c9                   	leave
   131b9:	c3                   	ret

00000000000131ba <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   131ba:	55                   	push   %rbp
   131bb:	48 89 e5             	mov    %rsp,%rbp
   131be:	48 83 ec 20          	sub    $0x20,%rsp
   131c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   131ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   131d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131da:	48 89 ce             	mov    %rcx,%rsi
   131dd:	48 89 c7             	mov    %rax,%rdi
   131e0:	e8 7b 00 00 00       	call   13260 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   131e5:	90                   	nop
   131e6:	c9                   	leave
   131e7:	c3                   	ret

00000000000131e8 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   131e8:	55                   	push   %rbp
   131e9:	48 89 e5             	mov    %rsp,%rbp
   131ec:	48 83 ec 20          	sub    $0x20,%rsp
   131f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   131fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13200:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13208:	48 89 ce             	mov    %rcx,%rsi
   1320b:	48 89 c7             	mov    %rax,%rdi
   1320e:	e8 88 00 00 00       	call   1329b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   13213:	c9                   	leave
   13214:	c3                   	ret
   13215:	90                   	nop

0000000000013216 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   13216:	55                   	push   %rbp
   13217:	48 89 e5             	mov    %rsp,%rbp
   1321a:	53                   	push   %rbx
   1321b:	48 83 ec 28          	sub    $0x28,%rsp
   1321f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13223:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13227:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1322b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1322f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13233:	48 89 c7             	mov    %rax,%rdi
   13236:	e8 bf 00 00 00       	call   132fa <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1323b:	48 89 c7             	mov    %rax,%rdi
   1323e:	e8 d1 00 00 00       	call   13314 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   13243:	48 89 c6             	mov    %rax,%rsi
   13246:	48 89 df             	mov    %rbx,%rdi
   13249:	e8 72 0f ff ff       	call   41c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1324e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13252:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   13259:	90                   	nop
   1325a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1325e:	c9                   	leave
   1325f:	c3                   	ret

0000000000013260 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   13260:	55                   	push   %rbp
   13261:	48 89 e5             	mov    %rsp,%rbp
   13264:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13268:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1326c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   13270:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13274:	48 8b 00             	mov    (%rax),%rax
   13277:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1327b:	eb 10                	jmp    1328d <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1327d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13281:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13285:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   13288:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1328d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13291:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   13295:	75 e6                	jne    1327d <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   13297:	90                   	nop
   13298:	90                   	nop
   13299:	5d                   	pop    %rbp
   1329a:	c3                   	ret

000000000001329b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1329b:	55                   	push   %rbp
   1329c:	48 89 e5             	mov    %rsp,%rbp
   1329f:	48 83 ec 30          	sub    $0x30,%rsp
   132a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   132a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   132ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   132af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   132b3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   132b7:	48 c1 f8 03          	sar    $0x3,%rax
   132bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   132bf:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   132c4:	74 1f                	je     132e5 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   132c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132ca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   132d1:	00 
   132d2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   132d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132da:	48 89 ce             	mov    %rcx,%rsi
   132dd:	48 89 c7             	mov    %rax,%rdi
   132e0:	e8 1b 13 ff ff       	call   4600 <memmove@plt>
	  return __result + _Num;
   132e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132e9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   132f0:	00 
   132f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132f5:	48 01 d0             	add    %rdx,%rax
	}
   132f8:	c9                   	leave
   132f9:	c3                   	ret

00000000000132fa <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   132fa:	55                   	push   %rbp
   132fb:	48 89 e5             	mov    %rsp,%rbp
   132fe:	48 83 ec 10          	sub    $0x10,%rsp
   13302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   13306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1330a:	48 89 c7             	mov    %rax,%rdi
   1330d:	e8 10 00 00 00       	call   13322 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   13312:	c9                   	leave
   13313:	c3                   	ret

0000000000013314 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13314:	55                   	push   %rbp
   13315:	48 89 e5             	mov    %rsp,%rbp
   13318:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1331c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13320:	5d                   	pop    %rbp
   13321:	c3                   	ret

0000000000013322 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   13322:	55                   	push   %rbp
   13323:	48 89 e5             	mov    %rsp,%rbp
   13326:	48 83 ec 10          	sub    $0x10,%rsp
   1332a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   1332e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13332:	48 89 c7             	mov    %rax,%rdi
   13335:	e8 02 00 00 00       	call   1333c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   1333a:	c9                   	leave
   1333b:	c3                   	ret

000000000001333c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   1333c:	55                   	push   %rbp
   1333d:	48 89 e5             	mov    %rsp,%rbp
   13340:	48 83 ec 10          	sub    $0x10,%rsp
   13344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1334c:	48 89 c7             	mov    %rax,%rdi
   1334f:	e8 02 00 00 00       	call   13356 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   13354:	c9                   	leave
   13355:	c3                   	ret

0000000000013356 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   13356:	55                   	push   %rbp
   13357:	48 89 e5             	mov    %rsp,%rbp
   1335a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1335e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13362:	48 8b 00             	mov    (%rax),%rax
   13365:	5d                   	pop    %rbp
   13366:	c3                   	ret
   13367:	90                   	nop

0000000000013368 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   13368:	55                   	push   %rbp
   13369:	48 89 e5             	mov    %rsp,%rbp
   1336c:	48 83 ec 10          	sub    $0x10,%rsp
   13370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13374:	48 8d 15 45 e9 00 00 	lea    0xe945(%rip),%rdx        # 21cc0 <_ZTVSt19bad_optional_access+0x10>
   1337b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1337f:	48 89 10             	mov    %rdx,(%rax)
   13382:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13386:	48 89 c7             	mov    %rax,%rdi
   13389:	e8 32 13 ff ff       	call   46c0 <_ZNSt9exceptionD2Ev@plt>
   1338e:	90                   	nop
   1338f:	c9                   	leave
   13390:	c3                   	ret
   13391:	90                   	nop

0000000000013392 <_ZNSt19bad_optional_accessD0Ev>:
   13392:	55                   	push   %rbp
   13393:	48 89 e5             	mov    %rsp,%rbp
   13396:	48 83 ec 10          	sub    $0x10,%rsp
   1339a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1339e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133a2:	48 89 c7             	mov    %rax,%rdi
   133a5:	e8 be ff ff ff       	call   13368 <_ZNSt19bad_optional_accessD1Ev>
   133aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133ae:	be 08 00 00 00       	mov    $0x8,%esi
   133b3:	48 89 c7             	mov    %rax,%rdi
   133b6:	e8 95 0f ff ff       	call   4350 <_ZdlPvm@plt>
   133bb:	c9                   	leave
   133bc:	c3                   	ret

Disassembly of section .fini:

00000000000133c0 <_fini>:
   133c0:	48 83 ec 08          	sub    $0x8,%rsp
   133c4:	48 83 c4 08          	add    $0x8,%rsp
   133c8:	c3                   	ret
