
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    $0x8,%rsp
    2004:	48 8b 05 ad 0f 01 00 	mov    0x10fad(%rip),%rax        # 12fb8 <__gmon_start__@Base>
    200b:	48 85 c0             	test   %rax,%rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   *%rax
    2012:	48 83 c4 08          	add    $0x8,%rsp
    2016:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <vkDeviceWaitIdle@plt-0x10>:
    2020:	ff 35 ca 0f 01 00    	push   0x10fca(%rip)        # 12ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 cc 0f 01 00    	jmp    *0x10fcc(%rip)        # 12ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <vkDeviceWaitIdle@plt>:
    2030:	ff 25 ca 0f 01 00    	jmp    *0x10fca(%rip)        # 13000 <vkDeviceWaitIdle@Base>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <glfwDestroyWindow@plt>:
    2040:	ff 25 c2 0f 01 00    	jmp    *0x10fc2(%rip)        # 13008 <glfwDestroyWindow@Base>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <_ZSt17__throw_bad_allocv@plt>:
    2050:	ff 25 ba 0f 01 00    	jmp    *0x10fba(%rip)        # 13010 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <_ZNSt13runtime_errorC1EPKc@plt>:
    2060:	ff 25 b2 0f 01 00    	jmp    *0x10fb2(%rip)        # 13018 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <vkGetPhysicalDeviceProperties@plt>:
    2070:	ff 25 aa 0f 01 00    	jmp    *0x10faa(%rip)        # 13020 <vkGetPhysicalDeviceProperties@Base>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <__cxa_begin_catch@plt>:
    2080:	ff 25 a2 0f 01 00    	jmp    *0x10fa2(%rip)        # 13028 <__cxa_begin_catch@CXXABI_1.3>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <strlen@plt>:
    2090:	ff 25 9a 0f 01 00    	jmp    *0x10f9a(%rip)        # 13030 <strlen@GLIBC_2.2.5>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <memcmp@plt>:
    20a0:	ff 25 92 0f 01 00    	jmp    *0x10f92(%rip)        # 13038 <memcmp@GLIBC_2.2.5>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <__cxa_allocate_exception@plt>:
    20b0:	ff 25 8a 0f 01 00    	jmp    *0x10f8a(%rip)        # 13040 <__cxa_allocate_exception@CXXABI_1.3>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <_ZSt20__throw_length_errorPKc@plt>:
    20c0:	ff 25 82 0f 01 00    	jmp    *0x10f82(%rip)        # 13048 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <vkEnumeratePhysicalDevices@plt>:
    20d0:	ff 25 7a 0f 01 00    	jmp    *0x10f7a(%rip)        # 13050 <vkEnumeratePhysicalDevices@Base>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    20e0:	ff 25 72 0f 01 00    	jmp    *0x10f72(%rip)        # 13058 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <__cxa_free_exception@plt>:
    20f0:	ff 25 6a 0f 01 00    	jmp    *0x10f6a(%rip)        # 13060 <__cxa_free_exception@CXXABI_1.3>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    2100:	ff 25 62 0f 01 00    	jmp    *0x10f62(%rip)        # 13068 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <glfwGetRequiredInstanceExtensions@plt>:
    2110:	ff 25 5a 0f 01 00    	jmp    *0x10f5a(%rip)        # 13070 <glfwGetRequiredInstanceExtensions@Base>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    2120:	ff 25 52 0f 01 00    	jmp    *0x10f52(%rip)        # 13078 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <vkDestroyDevice@plt>:
    2130:	ff 25 4a 0f 01 00    	jmp    *0x10f4a(%rip)        # 13080 <vkDestroyDevice@Base>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <vkEnumerateInstanceExtensionProperties@plt>:
    2140:	ff 25 42 0f 01 00    	jmp    *0x10f42(%rip)        # 13088 <vkEnumerateInstanceExtensionProperties@Base>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <glfwWindowHint@plt>:
    2150:	ff 25 3a 0f 01 00    	jmp    *0x10f3a(%rip)        # 13090 <glfwWindowHint@Base>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <__cxa_atexit@plt>:
    2160:	ff 25 32 0f 01 00    	jmp    *0x10f32(%rip)        # 13098 <__cxa_atexit@GLIBC_2.2.5>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <vkGetPhysicalDeviceProperties2@plt>:
    2170:	ff 25 2a 0f 01 00    	jmp    *0x10f2a(%rip)        # 130a0 <vkGetPhysicalDeviceProperties2@Base>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <vkGetInstanceProcAddr@plt>:
    2180:	ff 25 22 0f 01 00    	jmp    *0x10f22(%rip)        # 130a8 <vkGetInstanceProcAddr@Base>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <glfwPollEvents@plt>:
    2190:	ff 25 1a 0f 01 00    	jmp    *0x10f1a(%rip)        # 130b0 <glfwPollEvents@Base>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    21a0:	ff 25 12 0f 01 00    	jmp    *0x10f12(%rip)        # 130b8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <_Znwm@plt>:
    21b0:	ff 25 0a 0f 01 00    	jmp    *0x10f0a(%rip)        # 130c0 <_Znwm@GLIBCXX_3.4>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <_ZdlPvm@plt>:
    21c0:	ff 25 02 0f 01 00    	jmp    *0x10f02(%rip)        # 130c8 <_ZdlPvm@CXXABI_1.3.9>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <vkDestroyInstance@plt>:
    21d0:	ff 25 fa 0e 01 00    	jmp    *0x10efa(%rip)        # 130d0 <vkDestroyInstance@Base>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <glfwTerminate@plt>:
    21e0:	ff 25 f2 0e 01 00    	jmp    *0x10ef2(%rip)        # 130d8 <glfwTerminate@Base>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <_ZNSolsEPFRSoS_E@plt>:
    21f0:	ff 25 ea 0e 01 00    	jmp    *0x10eea(%rip)        # 130e0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002200 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    2200:	ff 25 e2 0e 01 00    	jmp    *0x10ee2(%rip)        # 130e8 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    2206:	68 1d 00 00 00       	push   $0x1d
    220b:	e9 10 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002210 <vkEnumerateInstanceLayerProperties@plt>:
    2210:	ff 25 da 0e 01 00    	jmp    *0x10eda(%rip)        # 130f0 <vkEnumerateInstanceLayerProperties@Base>
    2216:	68 1e 00 00 00       	push   $0x1e
    221b:	e9 00 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002220 <glfwInit@plt>:
    2220:	ff 25 d2 0e 01 00    	jmp    *0x10ed2(%rip)        # 130f8 <glfwInit@Base>
    2226:	68 1f 00 00 00       	push   $0x1f
    222b:	e9 f0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    2230:	ff 25 ca 0e 01 00    	jmp    *0x10eca(%rip)        # 13100 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    2236:	68 20 00 00 00       	push   $0x20
    223b:	e9 e0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002240 <vkCreateInstance@plt>:
    2240:	ff 25 c2 0e 01 00    	jmp    *0x10ec2(%rip)        # 13108 <vkCreateInstance@Base>
    2246:	68 21 00 00 00       	push   $0x21
    224b:	e9 d0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002250 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    2250:	ff 25 ba 0e 01 00    	jmp    *0x10eba(%rip)        # 13110 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    2256:	68 22 00 00 00       	push   $0x22
    225b:	e9 c0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002260 <vkGetDeviceQueue@plt>:
    2260:	ff 25 b2 0e 01 00    	jmp    *0x10eb2(%rip)        # 13118 <vkGetDeviceQueue@Base>
    2266:	68 23 00 00 00       	push   $0x23
    226b:	e9 b0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    2270:	ff 25 aa 0e 01 00    	jmp    *0x10eaa(%rip)        # 13120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    2276:	68 24 00 00 00       	push   $0x24
    227b:	e9 a0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002280 <vkEnumerateDeviceExtensionProperties@plt>:
    2280:	ff 25 a2 0e 01 00    	jmp    *0x10ea2(%rip)        # 13128 <vkEnumerateDeviceExtensionProperties@Base>
    2286:	68 25 00 00 00       	push   $0x25
    228b:	e9 90 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    2290:	ff 25 9a 0e 01 00    	jmp    *0x10e9a(%rip)        # 13130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    2296:	68 26 00 00 00       	push   $0x26
    229b:	e9 80 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022a0 <vkCreateDevice@plt>:
    22a0:	ff 25 92 0e 01 00    	jmp    *0x10e92(%rip)        # 13138 <vkCreateDevice@Base>
    22a6:	68 27 00 00 00       	push   $0x27
    22ab:	e9 70 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022b0 <_ZNSt8ios_base4InitC1Ev@plt>:
    22b0:	ff 25 8a 0e 01 00    	jmp    *0x10e8a(%rip)        # 13140 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    22b6:	68 28 00 00 00       	push   $0x28
    22bb:	e9 60 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022c0 <glfwCreateWindowSurface@plt>:
    22c0:	ff 25 82 0e 01 00    	jmp    *0x10e82(%rip)        # 13148 <glfwCreateWindowSurface@Base>
    22c6:	68 29 00 00 00       	push   $0x29
    22cb:	e9 50 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022d0 <glfwCreateWindow@plt>:
    22d0:	ff 25 7a 0e 01 00    	jmp    *0x10e7a(%rip)        # 13150 <glfwCreateWindow@Base>
    22d6:	68 2a 00 00 00       	push   $0x2a
    22db:	e9 40 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022e0 <memmove@plt>:
    22e0:	ff 25 72 0e 01 00    	jmp    *0x10e72(%rip)        # 13158 <memmove@GLIBC_2.2.5>
    22e6:	68 2b 00 00 00       	push   $0x2b
    22eb:	e9 30 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022f0 <__cxa_end_catch@plt>:
    22f0:	ff 25 6a 0e 01 00    	jmp    *0x10e6a(%rip)        # 13160 <__cxa_end_catch@CXXABI_1.3>
    22f6:	68 2c 00 00 00       	push   $0x2c
    22fb:	e9 20 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002300 <__cxa_throw@plt>:
    2300:	ff 25 62 0e 01 00    	jmp    *0x10e62(%rip)        # 13168 <__cxa_throw@CXXABI_1.3>
    2306:	68 2d 00 00 00       	push   $0x2d
    230b:	e9 10 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002310 <vkDestroySurfaceKHR@plt>:
    2310:	ff 25 5a 0e 01 00    	jmp    *0x10e5a(%rip)        # 13170 <vkDestroySurfaceKHR@Base>
    2316:	68 2e 00 00 00       	push   $0x2e
    231b:	e9 00 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002320 <_Unwind_Resume@plt>:
    2320:	ff 25 52 0e 01 00    	jmp    *0x10e52(%rip)        # 13178 <_Unwind_Resume@GCC_3.0>
    2326:	68 2f 00 00 00       	push   $0x2f
    232b:	e9 f0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002330 <_ZNSt9exceptionD2Ev@plt>:
    2330:	ff 25 4a 0e 01 00    	jmp    *0x10e4a(%rip)        # 13180 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    2336:	68 30 00 00 00       	push   $0x30
    233b:	e9 e0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002340 <glfwWindowShouldClose@plt>:
    2340:	ff 25 42 0e 01 00    	jmp    *0x10e42(%rip)        # 13188 <glfwWindowShouldClose@Base>
    2346:	68 31 00 00 00       	push   $0x31
    234b:	e9 d0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002350 <_ZNSolsEd@plt>:
    2350:	ff 25 3a 0e 01 00    	jmp    *0x10e3a(%rip)        # 13190 <_ZNSolsEd@GLIBCXX_3.4>
    2356:	68 32 00 00 00       	push   $0x32
    235b:	e9 c0 fc ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

0000000000002360 <__cxa_finalize@plt>:
    2360:	ff 25 2a 0c 01 00    	jmp    *0x10c2a(%rip)        # 12f90 <__cxa_finalize@GLIBC_2.2.5>
    2366:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002370 <_start>:
    2370:	31 ed                	xor    %ebp,%ebp
    2372:	49 89 d1             	mov    %rdx,%r9
    2375:	5e                   	pop    %rsi
    2376:	48 89 e2             	mov    %rsp,%rdx
    2379:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    237d:	50                   	push   %rax
    237e:	54                   	push   %rsp
    237f:	45 31 c0             	xor    %r8d,%r8d
    2382:	31 c9                	xor    %ecx,%ecx
    2384:	48 8d 3d 24 01 00 00 	lea    0x124(%rip),%rdi        # 24af <main>
    238b:	ff 15 0f 0c 01 00    	call   *0x10c0f(%rip)        # 12fa0 <__libc_start_main@GLIBC_2.34>
    2391:	f4                   	hlt
    2392:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2399:	00 00 00 
    239c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000023a0 <deregister_tm_clones>:
    23a0:	48 8d 3d 11 0e 01 00 	lea    0x10e11(%rip),%rdi        # 131b8 <__TMC_END__>
    23a7:	48 8d 05 0a 0e 01 00 	lea    0x10e0a(%rip),%rax        # 131b8 <__TMC_END__>
    23ae:	48 39 f8             	cmp    %rdi,%rax
    23b1:	74 15                	je     23c8 <deregister_tm_clones+0x28>
    23b3:	48 8b 05 f6 0b 01 00 	mov    0x10bf6(%rip),%rax        # 12fb0 <_ITM_deregisterTMCloneTable@Base>
    23ba:	48 85 c0             	test   %rax,%rax
    23bd:	74 09                	je     23c8 <deregister_tm_clones+0x28>
    23bf:	ff e0                	jmp    *%rax
    23c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    23c8:	c3                   	ret
    23c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000023d0 <register_tm_clones>:
    23d0:	48 8d 3d e1 0d 01 00 	lea    0x10de1(%rip),%rdi        # 131b8 <__TMC_END__>
    23d7:	48 8d 35 da 0d 01 00 	lea    0x10dda(%rip),%rsi        # 131b8 <__TMC_END__>
    23de:	48 29 fe             	sub    %rdi,%rsi
    23e1:	48 89 f0             	mov    %rsi,%rax
    23e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    23e8:	48 c1 f8 03          	sar    $0x3,%rax
    23ec:	48 01 c6             	add    %rax,%rsi
    23ef:	48 d1 fe             	sar    %rsi
    23f2:	74 14                	je     2408 <register_tm_clones+0x38>
    23f4:	48 8b 05 c5 0b 01 00 	mov    0x10bc5(%rip),%rax        # 12fc0 <_ITM_registerTMCloneTable@Base>
    23fb:	48 85 c0             	test   %rax,%rax
    23fe:	74 08                	je     2408 <register_tm_clones+0x38>
    2400:	ff e0                	jmp    *%rax
    2402:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2408:	c3                   	ret
    2409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002410 <__do_global_dtors_aux>:
    2410:	f3 0f 1e fa          	endbr64
    2414:	80 3d d5 0f 01 00 00 	cmpb   $0x0,0x10fd5(%rip)        # 133f0 <completed.0>
    241b:	75 2b                	jne    2448 <__do_global_dtors_aux+0x38>
    241d:	55                   	push   %rbp
    241e:	48 83 3d 6a 0b 01 00 	cmpq   $0x0,0x10b6a(%rip)        # 12f90 <__cxa_finalize@GLIBC_2.2.5>
    2425:	00 
    2426:	48 89 e5             	mov    %rsp,%rbp
    2429:	74 0c                	je     2437 <__do_global_dtors_aux+0x27>
    242b:	48 8b 3d 6e 0d 01 00 	mov    0x10d6e(%rip),%rdi        # 131a0 <__dso_handle>
    2432:	e8 29 ff ff ff       	call   2360 <__cxa_finalize@plt>
    2437:	e8 64 ff ff ff       	call   23a0 <deregister_tm_clones>
    243c:	c6 05 ad 0f 01 00 01 	movb   $0x1,0x10fad(%rip)        # 133f0 <completed.0>
    2443:	5d                   	pop    %rbp
    2444:	c3                   	ret
    2445:	0f 1f 00             	nopl   (%rax)
    2448:	c3                   	ret
    2449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002450 <frame_dummy>:
    2450:	f3 0f 1e fa          	endbr64
    2454:	e9 77 ff ff ff       	jmp    23d0 <register_tm_clones>

0000000000002459 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    2459:	55                   	push   %rbp
    245a:	48 89 e5             	mov    %rsp,%rbp
    245d:	53                   	push   %rbx
    245e:	48 83 ec 58          	sub    $0x58,%rsp
  VulkanApp app;
    2462:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2466:	48 89 c7             	mov    %rax,%rdi
    2469:	e8 08 5a 00 00       	call   7e76 <_ZN9VulkanAppC1Ev>
  app.run();
    246e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2472:	48 89 c7             	mov    %rax,%rdi
    2475:	e8 9e 5b 00 00       	call   8018 <_ZN9VulkanApp3runEv>
  return EXIT_SUCCESS;
    247a:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    247f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2483:	48 89 c7             	mov    %rax,%rdi
    2486:	e8 d7 5a 00 00       	call   7f62 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    248b:	89 d8                	mov    %ebx,%eax
    248d:	eb 1a                	jmp    24a9 <_Z14protected_mainv+0x50>
}
    248f:	48 89 c3             	mov    %rax,%rbx
    2492:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    2496:	48 89 c7             	mov    %rax,%rdi
    2499:	e8 c4 5a 00 00       	call   7f62 <_ZN9VulkanAppD1Ev>
    249e:	48 89 d8             	mov    %rbx,%rax
    24a1:	48 89 c7             	mov    %rax,%rdi
    24a4:	e8 77 fe ff ff       	call   2320 <_Unwind_Resume@plt>
    24a9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    24ad:	c9                   	leave
    24ae:	c3                   	ret

00000000000024af <main>:

int main() {
    24af:	55                   	push   %rbp
    24b0:	48 89 e5             	mov    %rsp,%rbp
    24b3:	53                   	push   %rbx
    24b4:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    24b8:	e8 9c ff ff ff       	call   2459 <_Z14protected_mainv>
    24bd:	e9 aa 00 00 00       	jmp    256c <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    24c2:	b8 01 00 00 00       	mov    $0x1,%eax
    24c7:	e9 a0 00 00 00       	jmp    256c <main+0xbd>
  } catch (const std::exception &e) {
    24cc:	48 83 fa 01          	cmp    $0x1,%rdx
    24d0:	75 49                	jne    251b <main+0x6c>
    24d2:	48 89 c7             	mov    %rax,%rdi
    24d5:	e8 a6 fb ff ff       	call   2080 <__cxa_begin_catch@plt>
    24da:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    24de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24e2:	48 8b 00             	mov    (%rax),%rax
    24e5:	48 83 c0 10          	add    $0x10,%rax
    24e9:	48 8b 10             	mov    (%rax),%rdx
    24ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24f0:	48 89 c7             	mov    %rax,%rdi
    24f3:	ff d2                	call   *%rdx
    24f5:	48 89 c6             	mov    %rax,%rsi
    24f8:	48 8d 05 e1 0d 01 00 	lea    0x10de1(%rip),%rax        # 132e0 <_ZSt4cerr@GLIBCXX_3.4>
    24ff:	48 89 c7             	mov    %rax,%rdi
    2502:	e8 99 fc ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    2507:	be 0a 00 00 00       	mov    $0xa,%esi
    250c:	48 89 c7             	mov    %rax,%rdi
    250f:	e8 1c fd ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    2514:	e8 d7 fd ff ff       	call   22f0 <__cxa_end_catch@plt>
    2519:	eb a7                	jmp    24c2 <main+0x13>
    251b:	48 89 c7             	mov    %rax,%rdi
    251e:	e8 5d fb ff ff       	call   2080 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    2523:	48 8d 05 be 80 00 00 	lea    0x80be(%rip),%rax        # a5e8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    252a:	48 89 c6             	mov    %rax,%rsi
    252d:	48 8d 05 ac 0d 01 00 	lea    0x10dac(%rip),%rax        # 132e0 <_ZSt4cerr@GLIBCXX_3.4>
    2534:	48 89 c7             	mov    %rax,%rdi
    2537:	e8 64 fc ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    253c:	e8 af fd ff ff       	call   22f0 <__cxa_end_catch@plt>
    2541:	e9 7c ff ff ff       	jmp    24c2 <main+0x13>
  } catch (...) {
    2546:	48 89 c3             	mov    %rax,%rbx
    2549:	e8 a2 fd ff ff       	call   22f0 <__cxa_end_catch@plt>
    254e:	48 89 d8             	mov    %rbx,%rax
    2551:	48 89 c7             	mov    %rax,%rdi
    2554:	e8 c7 fd ff ff       	call   2320 <_Unwind_Resume@plt>
  }
    2559:	48 89 c3             	mov    %rax,%rbx
    255c:	e8 8f fd ff ff       	call   22f0 <__cxa_end_catch@plt>
    2561:	48 89 d8             	mov    %rbx,%rax
    2564:	48 89 c7             	mov    %rax,%rdi
    2567:	e8 b4 fd ff ff       	call   2320 <_Unwind_Resume@plt>
    256c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2570:	c9                   	leave
    2571:	c3                   	ret

0000000000002572 <_Z41__static_initialization_and_destruction_0ii>:
    2572:	55                   	push   %rbp
    2573:	48 89 e5             	mov    %rsp,%rbp
    2576:	48 83 ec 10          	sub    $0x10,%rsp
    257a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    257d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2580:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    2584:	75 3b                	jne    25c1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    2586:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    258d:	75 32                	jne    25c1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    258f:	48 8d 05 5b 0e 01 00 	lea    0x10e5b(%rip),%rax        # 133f1 <_ZStL8__ioinit>
    2596:	48 89 c7             	mov    %rax,%rdi
    2599:	e8 12 fd ff ff       	call   22b0 <_ZNSt8ios_base4InitC1Ev@plt>
    259e:	48 8d 05 fb 0b 01 00 	lea    0x10bfb(%rip),%rax        # 131a0 <__dso_handle>
    25a5:	48 89 c2             	mov    %rax,%rdx
    25a8:	48 8d 05 42 0e 01 00 	lea    0x10e42(%rip),%rax        # 133f1 <_ZStL8__ioinit>
    25af:	48 89 c6             	mov    %rax,%rsi
    25b2:	48 8b 05 0f 0a 01 00 	mov    0x10a0f(%rip),%rax        # 12fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    25b9:	48 89 c7             	mov    %rax,%rdi
    25bc:	e8 9f fb ff ff       	call   2160 <__cxa_atexit@plt>
    25c1:	90                   	nop
    25c2:	c9                   	leave
    25c3:	c3                   	ret

00000000000025c4 <_GLOBAL__sub_I__Z14protected_mainv>:
    25c4:	55                   	push   %rbp
    25c5:	48 89 e5             	mov    %rsp,%rbp
    25c8:	be ff ff 00 00       	mov    $0xffff,%esi
    25cd:	bf 01 00 00 00       	mov    $0x1,%edi
    25d2:	e8 9b ff ff ff       	call   2572 <_Z41__static_initialization_and_destruction_0ii>
    25d7:	5d                   	pop    %rbp
    25d8:	c3                   	ret

00000000000025d9 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    25d9:	55                   	push   %rbp
    25da:	48 89 e5             	mov    %rsp,%rbp
    25dd:	48 83 ec 20          	sub    $0x20,%rsp
    25e1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    25e4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    25e7:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    25eb:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    25ef:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    25f3:	be 00 00 00 00       	mov    $0x0,%esi
    25f8:	bf 01 20 02 00       	mov    $0x22001,%edi
    25fd:	e8 4e fb ff ff       	call   2150 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    2602:	be 00 00 00 00       	mov    $0x0,%esi
    2607:	bf 03 00 02 00       	mov    $0x20003,%edi
    260c:	e8 3f fb ff ff       	call   2150 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    2611:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2615:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2619:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    261d:	8b 75 f8             	mov    -0x8(%rbp),%esi
    2620:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2623:	49 89 f8             	mov    %rdi,%r8
    2626:	89 c7                	mov    %eax,%edi
    2628:	e8 a3 fc ff ff       	call   22d0 <glfwCreateWindow@plt>
}
    262d:	c9                   	leave
    262e:	c3                   	ret

000000000000262f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    262f:	55                   	push   %rbp
    2630:	48 89 e5             	mov    %rsp,%rbp
    2633:	41 54                	push   %r12
    2635:	53                   	push   %rbx
    2636:	48 83 ec 20          	sub    $0x20,%rsp
    263a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    263e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    2642:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2646:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    264a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    264e:	48 89 ce             	mov    %rcx,%rsi
    2651:	48 89 c7             	mov    %rax,%rdi
    2654:	e8 e7 fb ff ff       	call   2240 <vkCreateInstance@plt>
    2659:	85 c0                	test   %eax,%eax
    265b:	0f 95 c0             	setne  %al
    265e:	84 c0                	test   %al,%al
    2660:	74 3b                	je     269d <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    2662:	bf 10 00 00 00       	mov    $0x10,%edi
    2667:	e8 44 fa ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    266c:	48 89 c3             	mov    %rax,%rbx
    266f:	48 8d 05 62 85 00 00 	lea    0x8562(%rip),%rax        # abd8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2676:	48 89 c6             	mov    %rax,%rsi
    2679:	48 89 df             	mov    %rbx,%rdi
    267c:	e8 df f9 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2681:	48 8b 05 20 09 01 00 	mov    0x10920(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2688:	48 89 c2             	mov    %rax,%rdx
    268b:	48 8d 05 ae 06 01 00 	lea    0x106ae(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2692:	48 89 c6             	mov    %rax,%rsi
    2695:	48 89 df             	mov    %rbx,%rdi
    2698:	e8 63 fc ff ff       	call   2300 <__cxa_throw@plt>
  }
  return instance;
    269d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    26a1:	eb 16                	jmp    26b9 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    26a3:	49 89 c4             	mov    %rax,%r12
    26a6:	48 89 df             	mov    %rbx,%rdi
    26a9:	e8 42 fa ff ff       	call   20f0 <__cxa_free_exception@plt>
    26ae:	4c 89 e0             	mov    %r12,%rax
    26b1:	48 89 c7             	mov    %rax,%rdi
    26b4:	e8 67 fc ff ff       	call   2320 <_Unwind_Resume@plt>
}
    26b9:	48 83 c4 20          	add    $0x20,%rsp
    26bd:	5b                   	pop    %rbx
    26be:	41 5c                	pop    %r12
    26c0:	5d                   	pop    %rbp
    26c1:	c3                   	ret

00000000000026c2 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    26c2:	55                   	push   %rbp
    26c3:	48 89 e5             	mov    %rsp,%rbp
    26c6:	41 54                	push   %r12
    26c8:	53                   	push   %rbx
    26c9:	48 83 ec 30          	sub    $0x30,%rsp
    26cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    26d1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    26d5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    26d9:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    26dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    26e1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    26e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    26e9:	48 89 c7             	mov    %rax,%rdi
    26ec:	e8 af fb ff ff       	call   22a0 <vkCreateDevice@plt>
    26f1:	85 c0                	test   %eax,%eax
    26f3:	0f 95 c0             	setne  %al
    26f6:	84 c0                	test   %al,%al
    26f8:	74 3b                	je     2735 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    26fa:	bf 10 00 00 00       	mov    $0x10,%edi
    26ff:	e8 ac f9 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2704:	48 89 c3             	mov    %rax,%rbx
    2707:	48 8d 05 ea 84 00 00 	lea    0x84ea(%rip),%rax        # abf8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    270e:	48 89 c6             	mov    %rax,%rsi
    2711:	48 89 df             	mov    %rbx,%rdi
    2714:	e8 47 f9 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2719:	48 8b 05 88 08 01 00 	mov    0x10888(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2720:	48 89 c2             	mov    %rax,%rdx
    2723:	48 8d 05 16 06 01 00 	lea    0x10616(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    272a:	48 89 c6             	mov    %rax,%rsi
    272d:	48 89 df             	mov    %rbx,%rdi
    2730:	e8 cb fb ff ff       	call   2300 <__cxa_throw@plt>
  }
  return device;
    2735:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2739:	eb 16                	jmp    2751 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    273b:	49 89 c4             	mov    %rax,%r12
    273e:	48 89 df             	mov    %rbx,%rdi
    2741:	e8 aa f9 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2746:	4c 89 e0             	mov    %r12,%rax
    2749:	48 89 c7             	mov    %rax,%rdi
    274c:	e8 cf fb ff ff       	call   2320 <_Unwind_Resume@plt>
}
    2751:	48 83 c4 30          	add    $0x30,%rsp
    2755:	5b                   	pop    %rbx
    2756:	41 5c                	pop    %r12
    2758:	5d                   	pop    %rbp
    2759:	c3                   	ret

000000000000275a <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    275a:	55                   	push   %rbp
    275b:	48 89 e5             	mov    %rsp,%rbp
    275e:	41 54                	push   %r12
    2760:	53                   	push   %rbx
    2761:	48 83 ec 30          	sub    $0x30,%rsp
    2765:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2769:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    276d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    2771:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2775:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    2779:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    277d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2781:	48 89 c7             	mov    %rax,%rdi
    2784:	e8 37 fb ff ff       	call   22c0 <glfwCreateWindowSurface@plt>
    2789:	85 c0                	test   %eax,%eax
    278b:	0f 95 c0             	setne  %al
    278e:	84 c0                	test   %al,%al
    2790:	74 3b                	je     27cd <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    2792:	bf 10 00 00 00       	mov    $0x10,%edi
    2797:	e8 14 f9 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    279c:	48 89 c3             	mov    %rax,%rbx
    279f:	48 8d 05 7a 84 00 00 	lea    0x847a(%rip),%rax        # ac20 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    27a6:	48 89 c6             	mov    %rax,%rsi
    27a9:	48 89 df             	mov    %rbx,%rdi
    27ac:	e8 af f8 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    27b1:	48 8b 05 f0 07 01 00 	mov    0x107f0(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    27b8:	48 89 c2             	mov    %rax,%rdx
    27bb:	48 8d 05 7e 05 01 00 	lea    0x1057e(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    27c2:	48 89 c6             	mov    %rax,%rsi
    27c5:	48 89 df             	mov    %rbx,%rdi
    27c8:	e8 33 fb ff ff       	call   2300 <__cxa_throw@plt>
  }
  return surface;
    27cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    27d1:	eb 16                	jmp    27e9 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    27d3:	49 89 c4             	mov    %rax,%r12
    27d6:	48 89 df             	mov    %rbx,%rdi
    27d9:	e8 12 f9 ff ff       	call   20f0 <__cxa_free_exception@plt>
    27de:	4c 89 e0             	mov    %r12,%rax
    27e1:	48 89 c7             	mov    %rax,%rdi
    27e4:	e8 37 fb ff ff       	call   2320 <_Unwind_Resume@plt>
}
    27e9:	48 83 c4 30          	add    $0x30,%rsp
    27ed:	5b                   	pop    %rbx
    27ee:	41 5c                	pop    %r12
    27f0:	5d                   	pop    %rbp
    27f1:	c3                   	ret

00000000000027f2 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    27f2:	55                   	push   %rbp
    27f3:	48 89 e5             	mov    %rsp,%rbp
    27f6:	48 83 ec 10          	sub    $0x10,%rsp
    27fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    27fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2802:	48 89 c7             	mov    %rax,%rdi
    2805:	e8 36 f8 ff ff       	call   2040 <glfwDestroyWindow@plt>
    280a:	90                   	nop
    280b:	c9                   	leave
    280c:	c3                   	ret

000000000000280d <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    280d:	55                   	push   %rbp
    280e:	48 89 e5             	mov    %rsp,%rbp
    2811:	48 83 ec 10          	sub    $0x10,%rsp
    2815:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2819:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    281d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2821:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2825:	48 89 d6             	mov    %rdx,%rsi
    2828:	48 89 c7             	mov    %rax,%rdi
    282b:	e8 a0 f9 ff ff       	call   21d0 <vkDestroyInstance@plt>
}
    2830:	90                   	nop
    2831:	c9                   	leave
    2832:	c3                   	ret

0000000000002833 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    2833:	55                   	push   %rbp
    2834:	48 89 e5             	mov    %rsp,%rbp
    2837:	48 83 ec 10          	sub    $0x10,%rsp
    283b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    283f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    2843:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    284b:	48 89 d6             	mov    %rdx,%rsi
    284e:	48 89 c7             	mov    %rax,%rdi
    2851:	e8 da f8 ff ff       	call   2130 <vkDestroyDevice@plt>
}
    2856:	90                   	nop
    2857:	c9                   	leave
    2858:	c3                   	ret

0000000000002859 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    2859:	55                   	push   %rbp
    285a:	48 89 e5             	mov    %rsp,%rbp
    285d:	48 83 ec 20          	sub    $0x20,%rsp
    2861:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2865:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2869:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    286d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2871:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2879:	48 89 ce             	mov    %rcx,%rsi
    287c:	48 89 c7             	mov    %rax,%rdi
    287f:	e8 8c fa ff ff       	call   2310 <vkDestroySurfaceKHR@plt>
}
    2884:	90                   	nop
    2885:	c9                   	leave
    2886:	c3                   	ret

0000000000002887 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    2887:	55                   	push   %rbp
    2888:	48 89 e5             	mov    %rsp,%rbp
    288b:	41 54                	push   %r12
    288d:	53                   	push   %rbx
    288e:	48 83 ec 20          	sub    $0x20,%rsp
    2892:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2896:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    289a:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    289e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    28a2:	ba 00 00 00 00       	mov    $0x0,%edx
    28a7:	48 89 ce             	mov    %rcx,%rsi
    28aa:	48 89 c7             	mov    %rax,%rdi
    28ad:	e8 8e f8 ff ff       	call   2140 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    28b2:	85 c0                	test   %eax,%eax
    28b4:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    28b7:	84 c0                	test   %al,%al
    28b9:	74 3b                	je     28f6 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    28bb:	bf 10 00 00 00       	mov    $0x10,%edi
    28c0:	e8 eb f7 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    28c5:	48 89 c3             	mov    %rax,%rbx
    28c8:	48 8d 05 29 8f 00 00 	lea    0x8f29(%rip),%rax        # b7f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    28cf:	48 89 c6             	mov    %rax,%rsi
    28d2:	48 89 df             	mov    %rbx,%rdi
    28d5:	e8 86 f7 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    28da:	48 8b 05 c7 06 01 00 	mov    0x106c7(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    28e1:	48 89 c2             	mov    %rax,%rdx
    28e4:	48 8d 05 55 04 01 00 	lea    0x10455(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    28eb:	48 89 c6             	mov    %rax,%rsi
    28ee:	48 89 df             	mov    %rbx,%rdi
    28f1:	e8 0a fa ff ff       	call   2300 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    28f6:	8b 45 e8             	mov    -0x18(%rbp),%eax
    28f9:	89 c3                	mov    %eax,%ebx
    28fb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    28ff:	48 89 c7             	mov    %rax,%rdi
    2902:	e8 59 0b 00 00       	call   3460 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2907:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    290b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    290f:	48 89 de             	mov    %rbx,%rsi
    2912:	48 89 c7             	mov    %rax,%rdi
    2915:	e8 7e 0b 00 00       	call   3498 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    291a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    291e:	48 89 c7             	mov    %rax,%rdi
    2921:	e8 56 0b 00 00       	call   347c <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2926:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    292a:	48 89 c7             	mov    %rax,%rdi
    292d:	e8 20 0c 00 00       	call   3552 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2932:	48 89 c2             	mov    %rax,%rdx
    2935:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2939:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    293d:	48 89 ce             	mov    %rcx,%rsi
    2940:	48 89 c7             	mov    %rax,%rdi
    2943:	e8 f8 f7 ff ff       	call   2140 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    2948:	85 c0                	test   %eax,%eax
    294a:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    294d:	84 c0                	test   %al,%al
    294f:	0f 84 95 00 00 00    	je     29ea <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    2955:	bf 10 00 00 00       	mov    $0x10,%edi
    295a:	e8 51 f7 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    295f:	48 89 c3             	mov    %rax,%rbx
    2962:	48 8d 05 8f 8e 00 00 	lea    0x8e8f(%rip),%rax        # b7f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2969:	48 89 c6             	mov    %rax,%rsi
    296c:	48 89 df             	mov    %rbx,%rdi
    296f:	e8 ec f6 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2974:	48 8b 05 2d 06 01 00 	mov    0x1062d(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    297b:	48 89 c2             	mov    %rax,%rdx
    297e:	48 8d 05 bb 03 01 00 	lea    0x103bb(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2985:	48 89 c6             	mov    %rax,%rsi
    2988:	48 89 df             	mov    %rbx,%rdi
    298b:	e8 70 f9 ff ff       	call   2300 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    2990:	49 89 c4             	mov    %rax,%r12
    2993:	48 89 df             	mov    %rbx,%rdi
    2996:	e8 55 f7 ff ff       	call   20f0 <__cxa_free_exception@plt>
    299b:	4c 89 e0             	mov    %r12,%rax
    299e:	48 89 c7             	mov    %rax,%rdi
    29a1:	e8 7a f9 ff ff       	call   2320 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    29a6:	48 89 c3             	mov    %rax,%rbx
    29a9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    29ad:	48 89 c7             	mov    %rax,%rdi
    29b0:	e8 c7 0a 00 00       	call   347c <_ZNSaI21VkExtensionPropertiesED1Ev>
    29b5:	48 89 d8             	mov    %rbx,%rax
    29b8:	48 89 c7             	mov    %rax,%rdi
    29bb:	e8 60 f9 ff ff       	call   2320 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    29c0:	49 89 c4             	mov    %rax,%r12
    29c3:	48 89 df             	mov    %rbx,%rdi
    29c6:	e8 25 f7 ff ff       	call   20f0 <__cxa_free_exception@plt>
    29cb:	4c 89 e3             	mov    %r12,%rbx
    29ce:	eb 03                	jmp    29d3 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    29d0:	48 89 c3             	mov    %rax,%rbx
    29d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29d7:	48 89 c7             	mov    %rax,%rdi
    29da:	e8 2f 0b 00 00       	call   350e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    29df:	48 89 d8             	mov    %rbx,%rax
    29e2:	48 89 c7             	mov    %rax,%rdi
    29e5:	e8 36 f9 ff ff       	call   2320 <_Unwind_Resume@plt>
  return instanceExtensions;
    29ea:	90                   	nop
}
    29eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29ef:	48 83 c4 20          	add    $0x20,%rsp
    29f3:	5b                   	pop    %rbx
    29f4:	41 5c                	pop    %r12
    29f6:	5d                   	pop    %rbp
    29f7:	c3                   	ret

00000000000029f8 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    29f8:	55                   	push   %rbp
    29f9:	48 89 e5             	mov    %rsp,%rbp
    29fc:	41 54                	push   %r12
    29fe:	53                   	push   %rbx
    29ff:	48 83 ec 30          	sub    $0x30,%rsp
    2a03:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2a07:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2a0b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    2a0f:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2a13:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2a17:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2a1b:	b9 00 00 00 00       	mov    $0x0,%ecx
    2a20:	48 89 c7             	mov    %rax,%rdi
    2a23:	e8 58 f8 ff ff       	call   2280 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    2a28:	85 c0                	test   %eax,%eax
    2a2a:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    2a2d:	84 c0                	test   %al,%al
    2a2f:	74 3b                	je     2a6c <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    2a31:	bf 10 00 00 00       	mov    $0x10,%edi
    2a36:	e8 75 f6 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2a3b:	48 89 c3             	mov    %rax,%rbx
    2a3e:	48 8d 05 db 8d 00 00 	lea    0x8ddb(%rip),%rax        # b820 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    2a45:	48 89 c6             	mov    %rax,%rsi
    2a48:	48 89 df             	mov    %rbx,%rdi
    2a4b:	e8 10 f6 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2a50:	48 8b 05 51 05 01 00 	mov    0x10551(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2a57:	48 89 c2             	mov    %rax,%rdx
    2a5a:	48 8d 05 df 02 01 00 	lea    0x102df(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2a61:	48 89 c6             	mov    %rax,%rsi
    2a64:	48 89 df             	mov    %rbx,%rdi
    2a67:	e8 94 f8 ff ff       	call   2300 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2a6c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2a6f:	89 c3                	mov    %eax,%ebx
    2a71:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2a75:	48 89 c7             	mov    %rax,%rdi
    2a78:	e8 e3 09 00 00       	call   3460 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2a7d:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2a81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a85:	48 89 de             	mov    %rbx,%rsi
    2a88:	48 89 c7             	mov    %rax,%rdi
    2a8b:	e8 08 0a 00 00       	call   3498 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    2a90:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2a94:	48 89 c7             	mov    %rax,%rdi
    2a97:	e8 e0 09 00 00       	call   347c <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    2a9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2aa0:	48 89 c7             	mov    %rax,%rdi
    2aa3:	e8 aa 0a 00 00       	call   3552 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2aa8:	48 89 c1             	mov    %rax,%rcx
    2aab:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2aaf:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2ab3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2ab7:	48 89 c7             	mov    %rax,%rdi
    2aba:	e8 c1 f7 ff ff       	call   2280 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    2abf:	85 c0                	test   %eax,%eax
    2ac1:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    2ac4:	84 c0                	test   %al,%al
    2ac6:	0f 84 95 00 00 00    	je     2b61 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    2acc:	bf 10 00 00 00       	mov    $0x10,%edi
    2ad1:	e8 da f5 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2ad6:	48 89 c3             	mov    %rax,%rbx
    2ad9:	48 8d 05 40 8d 00 00 	lea    0x8d40(%rip),%rax        # b820 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    2ae0:	48 89 c6             	mov    %rax,%rsi
    2ae3:	48 89 df             	mov    %rbx,%rdi
    2ae6:	e8 75 f5 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2aeb:	48 8b 05 b6 04 01 00 	mov    0x104b6(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2af2:	48 89 c2             	mov    %rax,%rdx
    2af5:	48 8d 05 44 02 01 00 	lea    0x10244(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2afc:	48 89 c6             	mov    %rax,%rsi
    2aff:	48 89 df             	mov    %rbx,%rdi
    2b02:	e8 f9 f7 ff ff       	call   2300 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2b07:	49 89 c4             	mov    %rax,%r12
    2b0a:	48 89 df             	mov    %rbx,%rdi
    2b0d:	e8 de f5 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2b12:	4c 89 e0             	mov    %r12,%rax
    2b15:	48 89 c7             	mov    %rax,%rdi
    2b18:	e8 03 f8 ff ff       	call   2320 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2b1d:	48 89 c3             	mov    %rax,%rbx
    2b20:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b24:	48 89 c7             	mov    %rax,%rdi
    2b27:	e8 50 09 00 00       	call   347c <_ZNSaI21VkExtensionPropertiesED1Ev>
    2b2c:	48 89 d8             	mov    %rbx,%rax
    2b2f:	48 89 c7             	mov    %rax,%rdi
    2b32:	e8 e9 f7 ff ff       	call   2320 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2b37:	49 89 c4             	mov    %rax,%r12
    2b3a:	48 89 df             	mov    %rbx,%rdi
    2b3d:	e8 ae f5 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2b42:	4c 89 e3             	mov    %r12,%rbx
    2b45:	eb 03                	jmp    2b4a <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    2b47:	48 89 c3             	mov    %rax,%rbx
    2b4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b4e:	48 89 c7             	mov    %rax,%rdi
    2b51:	e8 b8 09 00 00       	call   350e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2b56:	48 89 d8             	mov    %rbx,%rax
    2b59:	48 89 c7             	mov    %rax,%rdi
    2b5c:	e8 bf f7 ff ff       	call   2320 <_Unwind_Resume@plt>
  return deviceExtensions;
    2b61:	90                   	nop
}
    2b62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b66:	48 83 c4 30          	add    $0x30,%rsp
    2b6a:	5b                   	pop    %rbx
    2b6b:	41 5c                	pop    %r12
    2b6d:	5d                   	pop    %rbp
    2b6e:	c3                   	ret

0000000000002b6f <_ZN3vkh36getRequiredInstanceExtensionNameListEb>:

std::vector<const char *>
getRequiredInstanceExtensionNameList(bool enableValidationLayers) {
    2b6f:	55                   	push   %rbp
    2b70:	48 89 e5             	mov    %rsp,%rbp
    2b73:	53                   	push   %rbx
    2b74:	48 83 ec 38          	sub    $0x38,%rsp
    2b78:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2b7c:	89 f0                	mov    %esi,%eax
    2b7e:	88 45 c4             	mov    %al,-0x3c(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    2b81:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2b85:	48 89 c7             	mov    %rax,%rdi
    2b88:	e8 83 f5 ff ff       	call   2110 <glfwGetRequiredInstanceExtensions@plt>
    2b8d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2b91:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2b94:	89 c3                	mov    %eax,%ebx
    2b96:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2b9a:	48 89 c7             	mov    %rax,%rdi
    2b9d:	e8 2c 0a 00 00       	call   35ce <_ZNSaIPKcEC1Ev>
    2ba2:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    2ba6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2baa:	48 89 de             	mov    %rbx,%rsi
    2bad:	48 89 c7             	mov    %rax,%rdi
    2bb0:	e8 51 0a 00 00       	call   3606 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    2bb5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2bb9:	48 89 c7             	mov    %rax,%rdi
    2bbc:	e8 29 0a 00 00       	call   35ea <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2bc1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2bc8:	eb 2e                	jmp    2bf8 <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x89>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    2bca:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2bcd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2bd4:	00 
    2bd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2bd9:	48 01 d0             	add    %rdx,%rax
    2bdc:	48 8b 18             	mov    (%rax),%rbx
    2bdf:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2be2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2be6:	48 89 d6             	mov    %rdx,%rsi
    2be9:	48 89 c7             	mov    %rax,%rdi
    2bec:	e8 cf 0a 00 00       	call   36c0 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    2bf1:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2bf4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2bf8:	8b 45 d0             	mov    -0x30(%rbp),%eax
    2bfb:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    2bfe:	72 ca                	jb     2bca <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0x5b>
  }
  if (enableValidationLayers) {
    2c00:	80 7d c4 00          	cmpb   $0x0,-0x3c(%rbp)
    2c04:	74 54                	je     2c5a <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
    requiredInstanceExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    2c06:	48 8d 05 38 8c 00 00 	lea    0x8c38(%rip),%rax        # b845 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x55>
    2c0d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2c11:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    2c15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c19:	48 89 d6             	mov    %rdx,%rsi
    2c1c:	48 89 c7             	mov    %rax,%rdi
    2c1f:	e8 bc 0a 00 00       	call   36e0 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>
  }
  return requiredInstanceExtensions;
    2c24:	eb 34                	jmp    2c5a <_ZN3vkh36getRequiredInstanceExtensionNameListEb+0xeb>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    2c26:	48 89 c3             	mov    %rax,%rbx
    2c29:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2c2d:	48 89 c7             	mov    %rax,%rdi
    2c30:	e8 b5 09 00 00       	call   35ea <_ZNSaIPKcED1Ev>
    2c35:	48 89 d8             	mov    %rbx,%rax
    2c38:	48 89 c7             	mov    %rax,%rdi
    2c3b:	e8 e0 f6 ff ff       	call   2320 <_Unwind_Resume@plt>
}
    2c40:	48 89 c3             	mov    %rax,%rbx
    2c43:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c47:	48 89 c7             	mov    %rax,%rdi
    2c4a:	e8 2d 0a 00 00       	call   367c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    2c4f:	48 89 d8             	mov    %rbx,%rax
    2c52:	48 89 c7             	mov    %rax,%rdi
    2c55:	e8 c6 f6 ff ff       	call   2320 <_Unwind_Resume@plt>
  return requiredInstanceExtensions;
    2c5a:	90                   	nop
}
    2c5b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c5f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2c63:	c9                   	leave
    2c64:	c3                   	ret

0000000000002c65 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    2c65:	55                   	push   %rbp
    2c66:	48 89 e5             	mov    %rsp,%rbp
    2c69:	53                   	push   %rbx
    2c6a:	48 83 ec 28          	sub    $0x28,%rsp
    2c6e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    2c72:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2c76:	be 00 00 00 00       	mov    $0x0,%esi
    2c7b:	48 89 c7             	mov    %rax,%rdi
    2c7e:	e8 8d f5 ff ff       	call   2210 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2c83:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2c86:	89 c3                	mov    %eax,%ebx
    2c88:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2c8c:	48 89 c7             	mov    %rax,%rdi
    2c8f:	e8 cc 0a 00 00       	call   3760 <_ZNSaI17VkLayerPropertiesEC1Ev>
    2c94:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2c98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c9c:	48 89 de             	mov    %rbx,%rsi
    2c9f:	48 89 c7             	mov    %rax,%rdi
    2ca2:	e8 f1 0a 00 00       	call   3798 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    2ca7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2cab:	48 89 c7             	mov    %rax,%rdi
    2cae:	e8 c9 0a 00 00       	call   377c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    2cb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cb7:	48 89 c7             	mov    %rax,%rdi
    2cba:	e8 93 0b 00 00       	call   3852 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    2cbf:	48 89 c2             	mov    %rax,%rdx
    2cc2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2cc6:	48 89 d6             	mov    %rdx,%rsi
    2cc9:	48 89 c7             	mov    %rax,%rdi
    2ccc:	e8 3f f5 ff ff       	call   2210 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    2cd1:	eb 34                	jmp    2d07 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    2cd3:	48 89 c3             	mov    %rax,%rbx
    2cd6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2cda:	48 89 c7             	mov    %rax,%rdi
    2cdd:	e8 9a 0a 00 00       	call   377c <_ZNSaI17VkLayerPropertiesED1Ev>
    2ce2:	48 89 d8             	mov    %rbx,%rax
    2ce5:	48 89 c7             	mov    %rax,%rdi
    2ce8:	e8 33 f6 ff ff       	call   2320 <_Unwind_Resume@plt>
}
    2ced:	48 89 c3             	mov    %rax,%rbx
    2cf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cf4:	48 89 c7             	mov    %rax,%rdi
    2cf7:	e8 12 0b 00 00       	call   380e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    2cfc:	48 89 d8             	mov    %rbx,%rax
    2cff:	48 89 c7             	mov    %rax,%rdi
    2d02:	e8 19 f6 ff ff       	call   2320 <_Unwind_Resume@plt>
    2d07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d0b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2d0f:	c9                   	leave
    2d10:	c3                   	ret

0000000000002d11 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    2d11:	55                   	push   %rbp
    2d12:	48 89 e5             	mov    %rsp,%rbp
    2d15:	41 54                	push   %r12
    2d17:	53                   	push   %rbx
    2d18:	48 83 ec 20          	sub    $0x20,%rsp
    2d1c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2d20:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    2d24:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2d28:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2d2c:	ba 00 00 00 00       	mov    $0x0,%edx
    2d31:	48 89 ce             	mov    %rcx,%rsi
    2d34:	48 89 c7             	mov    %rax,%rdi
    2d37:	e8 94 f3 ff ff       	call   20d0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    2d3c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2d3f:	85 c0                	test   %eax,%eax
    2d41:	75 3b                	jne    2d7e <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    2d43:	bf 10 00 00 00       	mov    $0x10,%edi
    2d48:	e8 63 f3 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2d4d:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    2d50:	48 8d 05 01 8b 00 00 	lea    0x8b01(%rip),%rax        # b858 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    2d57:	48 89 c6             	mov    %rax,%rsi
    2d5a:	48 89 df             	mov    %rbx,%rdi
    2d5d:	e8 fe f2 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    2d62:	48 8b 05 3f 02 01 00 	mov    0x1023f(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2d69:	48 89 c2             	mov    %rax,%rdx
    2d6c:	48 8d 05 cd ff 00 00 	lea    0xffcd(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2d73:	48 89 c6             	mov    %rax,%rsi
    2d76:	48 89 df             	mov    %rbx,%rdi
    2d79:	e8 82 f5 ff ff       	call   2300 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2d7e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2d81:	89 c3                	mov    %eax,%ebx
    2d83:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2d87:	48 89 c7             	mov    %rax,%rdi
    2d8a:	e8 3f 0b 00 00       	call   38ce <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    2d8f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2d93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2d97:	48 89 de             	mov    %rbx,%rsi
    2d9a:	48 89 c7             	mov    %rax,%rdi
    2d9d:	e8 64 0b 00 00       	call   3906 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    2da2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2da6:	48 89 c7             	mov    %rax,%rdi
    2da9:	e8 3c 0b 00 00       	call   38ea <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2dae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2db2:	48 89 c7             	mov    %rax,%rdi
    2db5:	e8 06 0c 00 00       	call   39c0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    2dba:	48 89 c2             	mov    %rax,%rdx
    2dbd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2dc1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2dc5:	48 89 ce             	mov    %rcx,%rsi
    2dc8:	48 89 c7             	mov    %rax,%rdi
    2dcb:	e8 00 f3 ff ff       	call   20d0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    2dd0:	85 c0                	test   %eax,%eax
    2dd2:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2dd5:	84 c0                	test   %al,%al
    2dd7:	0f 84 95 00 00 00    	je     2e72 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    2ddd:	bf 10 00 00 00       	mov    $0x10,%edi
    2de2:	e8 c9 f2 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    2de7:	48 89 c3             	mov    %rax,%rbx
    2dea:	48 8d 05 9f 8a 00 00 	lea    0x8a9f(%rip),%rax        # b890 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xa0>
    2df1:	48 89 c6             	mov    %rax,%rsi
    2df4:	48 89 df             	mov    %rbx,%rdi
    2df7:	e8 64 f2 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    2dfc:	48 8b 05 a5 01 01 00 	mov    0x101a5(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2e03:	48 89 c2             	mov    %rax,%rdx
    2e06:	48 8d 05 33 ff 00 00 	lea    0xff33(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2e0d:	48 89 c6             	mov    %rax,%rsi
    2e10:	48 89 df             	mov    %rbx,%rdi
    2e13:	e8 e8 f4 ff ff       	call   2300 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    2e18:	49 89 c4             	mov    %rax,%r12
    2e1b:	48 89 df             	mov    %rbx,%rdi
    2e1e:	e8 cd f2 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2e23:	4c 89 e0             	mov    %r12,%rax
    2e26:	48 89 c7             	mov    %rax,%rdi
    2e29:	e8 f2 f4 ff ff       	call   2320 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2e2e:	48 89 c3             	mov    %rax,%rbx
    2e31:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2e35:	48 89 c7             	mov    %rax,%rdi
    2e38:	e8 ad 0a 00 00       	call   38ea <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2e3d:	48 89 d8             	mov    %rbx,%rax
    2e40:	48 89 c7             	mov    %rax,%rdi
    2e43:	e8 d8 f4 ff ff       	call   2320 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    2e48:	49 89 c4             	mov    %rax,%r12
    2e4b:	48 89 df             	mov    %rbx,%rdi
    2e4e:	e8 9d f2 ff ff       	call   20f0 <__cxa_free_exception@plt>
    2e53:	4c 89 e3             	mov    %r12,%rbx
    2e56:	eb 03                	jmp    2e5b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    2e58:	48 89 c3             	mov    %rax,%rbx
    2e5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e5f:	48 89 c7             	mov    %rax,%rdi
    2e62:	e8 15 0b 00 00       	call   397c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    2e67:	48 89 d8             	mov    %rbx,%rax
    2e6a:	48 89 c7             	mov    %rax,%rdi
    2e6d:	e8 ae f4 ff ff       	call   2320 <_Unwind_Resume@plt>
  return physicalDevices;
    2e72:	90                   	nop
}
    2e73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e77:	48 83 c4 20          	add    $0x20,%rsp
    2e7b:	5b                   	pop    %rbx
    2e7c:	41 5c                	pop    %r12
    2e7e:	5d                   	pop    %rbp
    2e7f:	c3                   	ret

0000000000002e80 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    2e80:	55                   	push   %rbp
    2e81:	48 89 e5             	mov    %rsp,%rbp
    2e84:	48 83 ec 10          	sub    $0x10,%rsp
    2e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2e8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    2e90:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2e94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e98:	48 89 d6             	mov    %rdx,%rsi
    2e9b:	48 89 c7             	mov    %rax,%rdi
    2e9e:	e8 cd f1 ff ff       	call   2070 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    2ea3:	90                   	nop
}
    2ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ea8:	c9                   	leave
    2ea9:	c3                   	ret

0000000000002eaa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    2eaa:	55                   	push   %rbp
    2eab:	48 89 e5             	mov    %rsp,%rbp
    2eae:	48 83 ec 20          	sub    $0x20,%rsp
    2eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2eb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2eba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    2ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ec2:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    2ec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ecc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2ed0:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    2ed4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2ed8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2edc:	48 89 d6             	mov    %rdx,%rsi
    2edf:	48 89 c7             	mov    %rax,%rdi
    2ee2:	e8 89 f2 ff ff       	call   2170 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    2ee7:	90                   	nop
}
    2ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2eec:	c9                   	leave
    2eed:	c3                   	ret

0000000000002eee <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    2eee:	55                   	push   %rbp
    2eef:	48 89 e5             	mov    %rsp,%rbp
    2ef2:	53                   	push   %rbx
    2ef3:	48 83 ec 28          	sub    $0x28,%rsp
    2ef7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2efb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    2eff:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2f03:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2f07:	ba 00 00 00 00       	mov    $0x0,%edx
    2f0c:	48 89 ce             	mov    %rcx,%rsi
    2f0f:	48 89 c7             	mov    %rax,%rdi
    2f12:	e8 e9 f1 ff ff       	call   2100 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    2f17:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2f1a:	89 c3                	mov    %eax,%ebx
    2f1c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2f20:	48 89 c7             	mov    %rax,%rdi
    2f23:	e8 0a 0b 00 00       	call   3a32 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    2f28:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2f2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f30:	48 89 de             	mov    %rbx,%rsi
    2f33:	48 89 c7             	mov    %rax,%rdi
    2f36:	e8 2f 0b 00 00       	call   3a6a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    2f3b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2f3f:	48 89 c7             	mov    %rax,%rdi
    2f42:	e8 07 0b 00 00       	call   3a4e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    2f47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f4b:	48 89 c7             	mov    %rax,%rdi
    2f4e:	e8 d1 0b 00 00       	call   3b24 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    2f53:	48 89 c2             	mov    %rax,%rdx
    2f56:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2f5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2f5e:	48 89 ce             	mov    %rcx,%rsi
    2f61:	48 89 c7             	mov    %rax,%rdi
    2f64:	e8 97 f1 ff ff       	call   2100 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    2f69:	eb 34                	jmp    2f9f <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    2f6b:	48 89 c3             	mov    %rax,%rbx
    2f6e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2f72:	48 89 c7             	mov    %rax,%rdi
    2f75:	e8 d4 0a 00 00       	call   3a4e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    2f7a:	48 89 d8             	mov    %rbx,%rax
    2f7d:	48 89 c7             	mov    %rax,%rdi
    2f80:	e8 9b f3 ff ff       	call   2320 <_Unwind_Resume@plt>
}
    2f85:	48 89 c3             	mov    %rax,%rbx
    2f88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f8c:	48 89 c7             	mov    %rax,%rdi
    2f8f:	e8 4c 0b 00 00       	call   3ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    2f94:	48 89 d8             	mov    %rbx,%rax
    2f97:	48 89 c7             	mov    %rax,%rdi
    2f9a:	e8 81 f3 ff ff       	call   2320 <_Unwind_Resume@plt>
    2f9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2fa3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2fa7:	c9                   	leave
    2fa8:	c3                   	ret

0000000000002fa9 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    2fa9:	55                   	push   %rbp
    2faa:	48 89 e5             	mov    %rsp,%rbp
    2fad:	53                   	push   %rbx
    2fae:	48 83 ec 68          	sub    $0x68,%rsp
    2fb2:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    2fb6:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    2fba:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    2fbe:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    2fc2:	48 89 d6             	mov    %rdx,%rsi
    2fc5:	48 89 c7             	mov    %rax,%rdi
    2fc8:	e8 21 ff ff ff       	call   2eee <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    2fcd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    2fd1:	48 89 c7             	mov    %rax,%rdi
    2fd4:	e8 c7 0b 00 00       	call   3ba0 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    2fd9:	48 89 c3             	mov    %rax,%rbx
    2fdc:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2fe0:	48 89 c7             	mov    %rax,%rdi
    2fe3:	e8 e6 0b 00 00       	call   3bce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    2fe8:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    2fec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    2ff0:	48 89 de             	mov    %rbx,%rsi
    2ff3:	48 89 c7             	mov    %rax,%rdi
    2ff6:	e8 0b 0c 00 00       	call   3c06 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    2ffb:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    2fff:	48 89 c7             	mov    %rax,%rdi
    3002:	e8 e3 0b 00 00       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    3007:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    300e:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    300f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3013:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3017:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    301b:	48 89 c7             	mov    %rax,%rdi
    301e:	e8 9d 0c 00 00       	call   3cc0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    3023:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3027:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    302b:	48 89 c7             	mov    %rax,%rdi
    302e:	e8 b3 0c 00 00       	call   3ce6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    3033:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3037:	eb 4e                	jmp    3087 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    3039:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    303d:	48 89 c7             	mov    %rax,%rdi
    3040:	e8 25 0d 00 00       	call   3d6a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    3045:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    3049:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    304d:	8b 00                	mov    (%rax),%eax
    304f:	83 e0 01             	and    $0x1,%eax
    3052:	85 c0                	test   %eax,%eax
    3054:	74 25                	je     307b <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    3056:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    305a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    305e:	48 89 d6             	mov    %rdx,%rsi
    3061:	48 89 c7             	mov    %rax,%rdi
    3064:	e8 13 0d 00 00       	call   3d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    3069:	48 89 c2             	mov    %rax,%rdx
    306c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3070:	48 89 c6             	mov    %rax,%rsi
    3073:	48 89 d7             	mov    %rdx,%rdi
    3076:	e8 2b 0d 00 00       	call   3da6 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    307b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    307f:	48 89 c7             	mov    %rax,%rdi
    3082:	e8 c3 0c 00 00       	call   3d4a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    3087:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    308b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    308f:	48 89 d6             	mov    %rdx,%rsi
    3092:	48 89 c7             	mov    %rax,%rdi
    3095:	e8 75 0c 00 00       	call   3d0f <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    309a:	84 c0                	test   %al,%al
    309c:	75 9b                	jne    3039 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    309e:	90                   	nop
}
    309f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    30a3:	48 89 c7             	mov    %rax,%rdi
    30a6:	e8 35 0a 00 00       	call   3ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    30ab:	eb 26                	jmp    30d3 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    30ad:	48 89 c3             	mov    %rax,%rbx
    30b0:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    30b4:	48 89 c7             	mov    %rax,%rdi
    30b7:	e8 2e 0b 00 00       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    30bc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    30c0:	48 89 c7             	mov    %rax,%rdi
    30c3:	e8 18 0a 00 00       	call   3ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    30c8:	48 89 d8             	mov    %rbx,%rax
    30cb:	48 89 c7             	mov    %rax,%rdi
    30ce:	e8 4d f2 ff ff       	call   2320 <_Unwind_Resume@plt>
    30d3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    30d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    30db:	c9                   	leave
    30dc:	c3                   	ret

00000000000030dd <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    30dd:	55                   	push   %rbp
    30de:	48 89 e5             	mov    %rsp,%rbp
    30e1:	53                   	push   %rbx
    30e2:	48 83 ec 68          	sub    $0x68,%rsp
    30e6:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    30ea:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    30ee:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    30f2:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    30f6:	48 89 d6             	mov    %rdx,%rsi
    30f9:	48 89 c7             	mov    %rax,%rdi
    30fc:	e8 ed fd ff ff       	call   2eee <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    3101:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3105:	48 89 c7             	mov    %rax,%rdi
    3108:	e8 93 0a 00 00       	call   3ba0 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    310d:	48 89 c3             	mov    %rax,%rbx
    3110:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3114:	48 89 c7             	mov    %rax,%rdi
    3117:	e8 b2 0a 00 00       	call   3bce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    311c:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    3120:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3124:	48 89 de             	mov    %rbx,%rsi
    3127:	48 89 c7             	mov    %rax,%rdi
    312a:	e8 d7 0a 00 00       	call   3c06 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    312f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3133:	48 89 c7             	mov    %rax,%rdi
    3136:	e8 af 0a 00 00       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    313b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3142:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    3143:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3147:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    314b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    314f:	48 89 c7             	mov    %rax,%rdi
    3152:	e8 69 0b 00 00       	call   3cc0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    3157:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    315b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    315f:	48 89 c7             	mov    %rax,%rdi
    3162:	e8 7f 0b 00 00       	call   3ce6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    3167:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    316b:	eb 53                	jmp    31c0 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    316d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    3171:	48 89 c7             	mov    %rax,%rdi
    3174:	e8 f1 0b 00 00       	call   3d6a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    3179:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    317d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3181:	8b 00                	mov    (%rax),%eax
    3183:	83 e0 02             	and    $0x2,%eax
    3186:	85 c0                	test   %eax,%eax
    3188:	74 25                	je     31af <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    318a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    318e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3192:	48 89 d6             	mov    %rdx,%rsi
    3195:	48 89 c7             	mov    %rax,%rdi
    3198:	e8 df 0b 00 00       	call   3d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    319d:	48 89 c2             	mov    %rax,%rdx
    31a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    31a4:	48 89 c6             	mov    %rax,%rsi
    31a7:	48 89 d7             	mov    %rdx,%rdi
    31aa:	e8 f7 0b 00 00       	call   3da6 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    31af:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    31b4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    31b8:	48 89 c7             	mov    %rax,%rdi
    31bb:	e8 8a 0b 00 00       	call   3d4a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    31c0:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    31c4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    31c8:	48 89 d6             	mov    %rdx,%rsi
    31cb:	48 89 c7             	mov    %rax,%rdi
    31ce:	e8 3c 0b 00 00       	call   3d0f <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    31d3:	84 c0                	test   %al,%al
    31d5:	75 96                	jne    316d <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    31d7:	90                   	nop
}
    31d8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    31dc:	48 89 c7             	mov    %rax,%rdi
    31df:	e8 fc 08 00 00       	call   3ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    31e4:	eb 26                	jmp    320c <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    31e6:	48 89 c3             	mov    %rax,%rbx
    31e9:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    31ed:	48 89 c7             	mov    %rax,%rdi
    31f0:	e8 f5 09 00 00       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    31f5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    31f9:	48 89 c7             	mov    %rax,%rdi
    31fc:	e8 df 08 00 00       	call   3ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    3201:	48 89 d8             	mov    %rbx,%rax
    3204:	48 89 c7             	mov    %rax,%rdi
    3207:	e8 14 f1 ff ff       	call   2320 <_Unwind_Resume@plt>
    320c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    3210:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3214:	c9                   	leave
    3215:	c3                   	ret

0000000000003216 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    3216:	55                   	push   %rbp
    3217:	48 89 e5             	mov    %rsp,%rbp
    321a:	53                   	push   %rbx
    321b:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    3222:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    3226:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    322a:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    3231:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3235:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    3239:	48 89 d6             	mov    %rdx,%rsi
    323c:	48 89 c7             	mov    %rax,%rdi
    323f:	e8 aa fc ff ff       	call   2eee <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    3244:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3248:	48 89 c7             	mov    %rax,%rdi
    324b:	e8 50 09 00 00       	call   3ba0 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    3250:	48 89 c3             	mov    %rax,%rbx
    3253:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3257:	48 89 c7             	mov    %rax,%rdi
    325a:	e8 6f 09 00 00       	call   3bce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    325f:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    3263:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3267:	48 89 de             	mov    %rbx,%rsi
    326a:	48 89 c7             	mov    %rax,%rdi
    326d:	e8 94 09 00 00       	call   3c06 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    3272:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3276:	48 89 c7             	mov    %rax,%rdi
    3279:	e8 6c 09 00 00       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    327e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3285:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    3286:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    328a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    328e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3292:	48 89 c7             	mov    %rax,%rdi
    3295:	e8 26 0a 00 00       	call   3cc0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    329a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    329e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    32a2:	48 89 c7             	mov    %rax,%rdi
    32a5:	e8 3c 0a 00 00       	call   3ce6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    32aa:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    32ae:	eb 71                	jmp    3321 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x10b>
    32b0:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    32b4:	48 89 c7             	mov    %rax,%rdi
    32b7:	e8 ae 0a 00 00       	call   3d6a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    32bc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    32c0:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    32c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32cb:	89 c6                	mov    %eax,%esi
    32cd:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    32d1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    32d8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    32dc:	48 89 c7             	mov    %rax,%rdi
    32df:	e8 1c ef ff ff       	call   2200 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    32e4:	8b 45 9c             	mov    -0x64(%rbp),%eax
    32e7:	85 c0                	test   %eax,%eax
    32e9:	74 25                	je     3310 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xfa>
      presentQueueFamilies[index] = queueFamilyProp;
    32eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    32ef:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    32f3:	48 89 d6             	mov    %rdx,%rsi
    32f6:	48 89 c7             	mov    %rax,%rdi
    32f9:	e8 7e 0a 00 00       	call   3d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    32fe:	48 89 c2             	mov    %rax,%rdx
    3301:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3305:	48 89 c6             	mov    %rax,%rsi
    3308:	48 89 d7             	mov    %rdx,%rdi
    330b:	e8 96 0a 00 00       	call   3da6 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    3310:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    3315:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    3319:	48 89 c7             	mov    %rax,%rdi
    331c:	e8 29 0a 00 00       	call   3d4a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    3321:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    3325:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    3329:	48 89 d6             	mov    %rdx,%rsi
    332c:	48 89 c7             	mov    %rax,%rdi
    332f:	e8 db 09 00 00       	call   3d0f <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    3334:	84 c0                	test   %al,%al
    3336:	0f 85 74 ff ff ff    	jne    32b0 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x9a>
  }
  return presentQueueFamilies;
    333c:	90                   	nop
}
    333d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3341:	48 89 c7             	mov    %rax,%rdi
    3344:	e8 97 07 00 00       	call   3ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    3349:	eb 37                	jmp    3382 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16c>
      queueFamilyProps.size()};
    334b:	48 89 c3             	mov    %rax,%rbx
    334e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3352:	48 89 c7             	mov    %rax,%rdi
    3355:	e8 90 08 00 00       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    335a:	eb 0f                	jmp    336b <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x155>
}
    335c:	48 89 c3             	mov    %rax,%rbx
    335f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3363:	48 89 c7             	mov    %rax,%rdi
    3366:	e8 11 09 00 00       	call   3c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    336b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    336f:	48 89 c7             	mov    %rax,%rdi
    3372:	e8 69 07 00 00       	call   3ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    3377:	48 89 d8             	mov    %rbx,%rax
    337a:	48 89 c7             	mov    %rax,%rdi
    337d:	e8 9e ef ff ff       	call   2320 <_Unwind_Resume@plt>
    3382:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3386:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    338a:	c9                   	leave
    338b:	c3                   	ret

000000000000338c <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    338c:	55                   	push   %rbp
    338d:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    3390:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    3395:	5d                   	pop    %rbp
    3396:	c3                   	ret

0000000000003397 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    3397:	55                   	push   %rbp
    3398:	48 89 e5             	mov    %rsp,%rbp
    339b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    339f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    33a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    33a7:	5d                   	pop    %rbp
    33a8:	c3                   	ret

00000000000033a9 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    33a9:	55                   	push   %rbp
    33aa:	48 89 e5             	mov    %rsp,%rbp
    33ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33b5:	5d                   	pop    %rbp
    33b6:	c3                   	ret
    33b7:	90                   	nop

00000000000033b8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    33b8:	55                   	push   %rbp
    33b9:	48 89 e5             	mov    %rsp,%rbp
    33bc:	48 83 ec 10          	sub    $0x10,%rsp
    33c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33c8:	48 89 c7             	mov    %rax,%rdi
    33cb:	e8 ac 00 00 00       	call   347c <_ZNSaI21VkExtensionPropertiesED1Ev>
    33d0:	90                   	nop
    33d1:	c9                   	leave
    33d2:	c3                   	ret
    33d3:	90                   	nop

00000000000033d4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    33d4:	55                   	push   %rbp
    33d5:	48 89 e5             	mov    %rsp,%rbp
    33d8:	48 83 ec 10          	sub    $0x10,%rsp
    33dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33e4:	48 89 c7             	mov    %rax,%rdi
    33e7:	e8 fe 01 00 00       	call   35ea <_ZNSaIPKcED1Ev>
    33ec:	90                   	nop
    33ed:	c9                   	leave
    33ee:	c3                   	ret
    33ef:	90                   	nop

00000000000033f0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
    33f0:	55                   	push   %rbp
    33f1:	48 89 e5             	mov    %rsp,%rbp
    33f4:	48 83 ec 10          	sub    $0x10,%rsp
    33f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3400:	48 89 c7             	mov    %rax,%rdi
    3403:	e8 74 03 00 00       	call   377c <_ZNSaI17VkLayerPropertiesED1Ev>
    3408:	90                   	nop
    3409:	c9                   	leave
    340a:	c3                   	ret
    340b:	90                   	nop

000000000000340c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    340c:	55                   	push   %rbp
    340d:	48 89 e5             	mov    %rsp,%rbp
    3410:	48 83 ec 10          	sub    $0x10,%rsp
    3414:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    341c:	48 89 c7             	mov    %rax,%rdi
    341f:	e8 c6 04 00 00       	call   38ea <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    3424:	90                   	nop
    3425:	c9                   	leave
    3426:	c3                   	ret
    3427:	90                   	nop

0000000000003428 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    3428:	55                   	push   %rbp
    3429:	48 89 e5             	mov    %rsp,%rbp
    342c:	48 83 ec 10          	sub    $0x10,%rsp
    3430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3438:	48 89 c7             	mov    %rax,%rdi
    343b:	e8 0e 06 00 00       	call   3a4e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    3440:	90                   	nop
    3441:	c9                   	leave
    3442:	c3                   	ret
    3443:	90                   	nop

0000000000003444 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    3444:	55                   	push   %rbp
    3445:	48 89 e5             	mov    %rsp,%rbp
    3448:	48 83 ec 10          	sub    $0x10,%rsp
    344c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3454:	48 89 c7             	mov    %rax,%rdi
    3457:	e8 8e 07 00 00       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    345c:	90                   	nop
    345d:	c9                   	leave
    345e:	c3                   	ret
    345f:	90                   	nop

0000000000003460 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    3460:	55                   	push   %rbp
    3461:	48 89 e5             	mov    %rsp,%rbp
    3464:	48 83 ec 10          	sub    $0x10,%rsp
    3468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    346c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3470:	48 89 c7             	mov    %rax,%rdi
    3473:	e8 06 0a 00 00       	call   3e7e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    3478:	90                   	nop
    3479:	c9                   	leave
    347a:	c3                   	ret
    347b:	90                   	nop

000000000000347c <_ZNSaI21VkExtensionPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    347c:	55                   	push   %rbp
    347d:	48 89 e5             	mov    %rsp,%rbp
    3480:	48 83 ec 10          	sub    $0x10,%rsp
    3484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    348c:	48 89 c7             	mov    %rax,%rdi
    348f:	e8 f6 09 00 00       	call   3e8a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    3494:	90                   	nop
    3495:	c9                   	leave
    3496:	c3                   	ret
    3497:	90                   	nop

0000000000003498 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3498:	55                   	push   %rbp
    3499:	48 89 e5             	mov    %rsp,%rbp
    349c:	53                   	push   %rbx
    349d:	48 83 ec 28          	sub    $0x28,%rsp
    34a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    34a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    34a9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    34ad:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    34b1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    34b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    34b9:	48 89 d6             	mov    %rdx,%rsi
    34bc:	48 89 c7             	mov    %rax,%rdi
    34bf:	e8 d1 09 00 00       	call   3e95 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    34c4:	48 89 c1             	mov    %rax,%rcx
    34c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    34cb:	48 89 c2             	mov    %rax,%rdx
    34ce:	48 89 ce             	mov    %rcx,%rsi
    34d1:	48 89 df             	mov    %rbx,%rdi
    34d4:	e8 1d 0a 00 00       	call   3ef6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    34d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    34dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    34e1:	48 89 d6             	mov    %rdx,%rsi
    34e4:	48 89 c7             	mov    %rax,%rdi
    34e7:	e8 68 0a 00 00       	call   3f54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    34ec:	eb 1a                	jmp    3508 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    34ee:	48 89 c3             	mov    %rax,%rbx
    34f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    34f5:	48 89 c7             	mov    %rax,%rdi
    34f8:	e8 79 00 00 00       	call   3576 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    34fd:	48 89 d8             	mov    %rbx,%rax
    3500:	48 89 c7             	mov    %rax,%rdi
    3503:	e8 18 ee ff ff       	call   2320 <_Unwind_Resume@plt>
    3508:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    350c:	c9                   	leave
    350d:	c3                   	ret

000000000000350e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    350e:	55                   	push   %rbp
    350f:	48 89 e5             	mov    %rsp,%rbp
    3512:	48 83 ec 10          	sub    $0x10,%rsp
    3516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    351a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    351e:	48 89 c7             	mov    %rax,%rdi
    3521:	e8 6e 0a 00 00       	call   3f94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3526:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    352d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3535:	48 8b 00             	mov    (%rax),%rax
    3538:	48 89 ce             	mov    %rcx,%rsi
    353b:	48 89 c7             	mov    %rax,%rdi
    353e:	e8 5f 0a 00 00       	call   3fa2 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    3543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3547:	48 89 c7             	mov    %rax,%rdi
    354a:	e8 27 00 00 00       	call   3576 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    354f:	90                   	nop
    3550:	c9                   	leave
    3551:	c3                   	ret

0000000000003552 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    3552:	55                   	push   %rbp
    3553:	48 89 e5             	mov    %rsp,%rbp
    3556:	48 83 ec 10          	sub    $0x10,%rsp
    355a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    355e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3562:	48 8b 10             	mov    (%rax),%rdx
    3565:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3569:	48 89 d6             	mov    %rdx,%rsi
    356c:	48 89 c7             	mov    %rax,%rdi
    356f:	e8 58 0a 00 00       	call   3fcc <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3574:	c9                   	leave
    3575:	c3                   	ret

0000000000003576 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3576:	55                   	push   %rbp
    3577:	48 89 e5             	mov    %rsp,%rbp
    357a:	48 83 ec 10          	sub    $0x10,%rsp
    357e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3586:	48 8b 50 10          	mov    0x10(%rax),%rdx
    358a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    358e:	48 8b 00             	mov    (%rax),%rax
    3591:	48 29 c2             	sub    %rax,%rdx
    3594:	48 c1 fa 02          	sar    $0x2,%rdx
    3598:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    359f:	fc c0 0f 
    35a2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    35a6:	48 89 c2             	mov    %rax,%rdx
    35a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35ad:	48 8b 08             	mov    (%rax),%rcx
    35b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35b4:	48 89 ce             	mov    %rcx,%rsi
    35b7:	48 89 c7             	mov    %rax,%rdi
    35ba:	e8 45 0a 00 00       	call   4004 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    35bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35c3:	48 89 c7             	mov    %rax,%rdi
    35c6:	e8 ed fd ff ff       	call   33b8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    35cb:	90                   	nop
    35cc:	c9                   	leave
    35cd:	c3                   	ret

00000000000035ce <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    35ce:	55                   	push   %rbp
    35cf:	48 89 e5             	mov    %rsp,%rbp
    35d2:	48 83 ec 10          	sub    $0x10,%rsp
    35d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    35da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35de:	48 89 c7             	mov    %rax,%rdi
    35e1:	e8 54 0a 00 00       	call   403a <_ZNSt15__new_allocatorIPKcEC1Ev>
    35e6:	90                   	nop
    35e7:	c9                   	leave
    35e8:	c3                   	ret
    35e9:	90                   	nop

00000000000035ea <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    35ea:	55                   	push   %rbp
    35eb:	48 89 e5             	mov    %rsp,%rbp
    35ee:	48 83 ec 10          	sub    $0x10,%rsp
    35f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    35f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35fa:	48 89 c7             	mov    %rax,%rdi
    35fd:	e8 44 0a 00 00       	call   4046 <_ZNSt15__new_allocatorIPKcED1Ev>
    3602:	90                   	nop
    3603:	c9                   	leave
    3604:	c3                   	ret
    3605:	90                   	nop

0000000000003606 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3606:	55                   	push   %rbp
    3607:	48 89 e5             	mov    %rsp,%rbp
    360a:	53                   	push   %rbx
    360b:	48 83 ec 28          	sub    $0x28,%rsp
    360f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3613:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3617:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    361b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    361f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3623:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3627:	48 89 d6             	mov    %rdx,%rsi
    362a:	48 89 c7             	mov    %rax,%rdi
    362d:	e8 1f 0a 00 00       	call   4051 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    3632:	48 89 c1             	mov    %rax,%rcx
    3635:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3639:	48 89 c2             	mov    %rax,%rdx
    363c:	48 89 ce             	mov    %rcx,%rsi
    363f:	48 89 df             	mov    %rbx,%rdi
    3642:	e8 6b 0a 00 00       	call   40b2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    3647:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    364b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    364f:	48 89 d6             	mov    %rdx,%rsi
    3652:	48 89 c7             	mov    %rax,%rdi
    3655:	e8 b6 0a 00 00       	call   4110 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    365a:	eb 1a                	jmp    3676 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    365c:	48 89 c3             	mov    %rax,%rbx
    365f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3663:	48 89 c7             	mov    %rax,%rdi
    3666:	e8 a7 00 00 00       	call   3712 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    366b:	48 89 d8             	mov    %rbx,%rax
    366e:	48 89 c7             	mov    %rax,%rdi
    3671:	e8 aa ec ff ff       	call   2320 <_Unwind_Resume@plt>
    3676:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    367a:	c9                   	leave
    367b:	c3                   	ret

000000000000367c <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    367c:	55                   	push   %rbp
    367d:	48 89 e5             	mov    %rsp,%rbp
    3680:	48 83 ec 10          	sub    $0x10,%rsp
    3684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    368c:	48 89 c7             	mov    %rax,%rdi
    368f:	e8 bc 0a 00 00       	call   4150 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3694:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    369b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    369f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36a3:	48 8b 00             	mov    (%rax),%rax
    36a6:	48 89 ce             	mov    %rcx,%rsi
    36a9:	48 89 c7             	mov    %rax,%rdi
    36ac:	e8 ad 0a 00 00       	call   415e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    36b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36b5:	48 89 c7             	mov    %rax,%rdi
    36b8:	e8 55 00 00 00       	call   3712 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    36bd:	90                   	nop
    36be:	c9                   	leave
    36bf:	c3                   	ret

00000000000036c0 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    36c0:	55                   	push   %rbp
    36c1:	48 89 e5             	mov    %rsp,%rbp
    36c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    36cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36d0:	48 8b 00             	mov    (%rax),%rax
    36d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    36d7:	48 c1 e2 03          	shl    $0x3,%rdx
    36db:	48 01 d0             	add    %rdx,%rax
      }
    36de:	5d                   	pop    %rbp
    36df:	c3                   	ret

00000000000036e0 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      }

#if __cplusplus >= 201103L
      _GLIBCXX20_CONSTEXPR
      void
      push_back(value_type&& __x)
    36e0:	55                   	push   %rbp
    36e1:	48 89 e5             	mov    %rsp,%rbp
    36e4:	48 83 ec 10          	sub    $0x10,%rsp
    36e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    36f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    36f4:	48 89 c7             	mov    %rax,%rdi
    36f7:	e8 8c 0a 00 00       	call   4188 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    36fc:	48 89 c2             	mov    %rax,%rdx
    36ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3703:	48 89 d6             	mov    %rdx,%rsi
    3706:	48 89 c7             	mov    %rax,%rdi
    3709:	e8 88 0a 00 00       	call   4196 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    370e:	90                   	nop
    370f:	c9                   	leave
    3710:	c3                   	ret
    3711:	90                   	nop

0000000000003712 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3712:	55                   	push   %rbp
    3713:	48 89 e5             	mov    %rsp,%rbp
    3716:	48 83 ec 10          	sub    $0x10,%rsp
    371a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    371e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3722:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    372a:	48 8b 00             	mov    (%rax),%rax
    372d:	48 29 c2             	sub    %rax,%rdx
    3730:	48 89 d0             	mov    %rdx,%rax
    3733:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3737:	48 89 c2             	mov    %rax,%rdx
    373a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    373e:	48 8b 08             	mov    (%rax),%rcx
    3741:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3745:	48 89 ce             	mov    %rcx,%rsi
    3748:	48 89 c7             	mov    %rax,%rdi
    374b:	e8 10 0b 00 00       	call   4260 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    3750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3754:	48 89 c7             	mov    %rax,%rdi
    3757:	e8 78 fc ff ff       	call   33d4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    375c:	90                   	nop
    375d:	c9                   	leave
    375e:	c3                   	ret
    375f:	90                   	nop

0000000000003760 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3760:	55                   	push   %rbp
    3761:	48 89 e5             	mov    %rsp,%rbp
    3764:	48 83 ec 10          	sub    $0x10,%rsp
    3768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    376c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3770:	48 89 c7             	mov    %rax,%rdi
    3773:	e8 1e 0b 00 00       	call   4296 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    3778:	90                   	nop
    3779:	c9                   	leave
    377a:	c3                   	ret
    377b:	90                   	nop

000000000000377c <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    377c:	55                   	push   %rbp
    377d:	48 89 e5             	mov    %rsp,%rbp
    3780:	48 83 ec 10          	sub    $0x10,%rsp
    3784:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    378c:	48 89 c7             	mov    %rax,%rdi
    378f:	e8 0e 0b 00 00       	call   42a2 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    3794:	90                   	nop
    3795:	c9                   	leave
    3796:	c3                   	ret
    3797:	90                   	nop

0000000000003798 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3798:	55                   	push   %rbp
    3799:	48 89 e5             	mov    %rsp,%rbp
    379c:	53                   	push   %rbx
    379d:	48 83 ec 28          	sub    $0x28,%rsp
    37a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    37a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    37a9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    37ad:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    37b1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    37b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    37b9:	48 89 d6             	mov    %rdx,%rsi
    37bc:	48 89 c7             	mov    %rax,%rdi
    37bf:	e8 e9 0a 00 00       	call   42ad <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    37c4:	48 89 c1             	mov    %rax,%rcx
    37c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    37cb:	48 89 c2             	mov    %rax,%rdx
    37ce:	48 89 ce             	mov    %rcx,%rsi
    37d1:	48 89 df             	mov    %rbx,%rdi
    37d4:	e8 35 0b 00 00       	call   430e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    37d9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    37dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37e1:	48 89 d6             	mov    %rdx,%rsi
    37e4:	48 89 c7             	mov    %rax,%rdi
    37e7:	e8 80 0b 00 00       	call   436c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    37ec:	eb 1a                	jmp    3808 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    37ee:	48 89 c3             	mov    %rax,%rbx
    37f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37f5:	48 89 c7             	mov    %rax,%rdi
    37f8:	e8 79 00 00 00       	call   3876 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    37fd:	48 89 d8             	mov    %rbx,%rax
    3800:	48 89 c7             	mov    %rax,%rdi
    3803:	e8 18 eb ff ff       	call   2320 <_Unwind_Resume@plt>
    3808:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    380c:	c9                   	leave
    380d:	c3                   	ret

000000000000380e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    380e:	55                   	push   %rbp
    380f:	48 89 e5             	mov    %rsp,%rbp
    3812:	48 83 ec 10          	sub    $0x10,%rsp
    3816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    381a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    381e:	48 89 c7             	mov    %rax,%rdi
    3821:	e8 86 0b 00 00       	call   43ac <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3826:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    382d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3835:	48 8b 00             	mov    (%rax),%rax
    3838:	48 89 ce             	mov    %rcx,%rsi
    383b:	48 89 c7             	mov    %rax,%rdi
    383e:	e8 77 0b 00 00       	call   43ba <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    3843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3847:	48 89 c7             	mov    %rax,%rdi
    384a:	e8 27 00 00 00       	call   3876 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    384f:	90                   	nop
    3850:	c9                   	leave
    3851:	c3                   	ret

0000000000003852 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    3852:	55                   	push   %rbp
    3853:	48 89 e5             	mov    %rsp,%rbp
    3856:	48 83 ec 10          	sub    $0x10,%rsp
    385a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    385e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3862:	48 8b 10             	mov    (%rax),%rdx
    3865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3869:	48 89 d6             	mov    %rdx,%rsi
    386c:	48 89 c7             	mov    %rax,%rdi
    386f:	e8 70 0b 00 00       	call   43e4 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3874:	c9                   	leave
    3875:	c3                   	ret

0000000000003876 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3876:	55                   	push   %rbp
    3877:	48 89 e5             	mov    %rsp,%rbp
    387a:	48 83 ec 10          	sub    $0x10,%rsp
    387e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3886:	48 8b 50 10          	mov    0x10(%rax),%rdx
    388a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    388e:	48 8b 00             	mov    (%rax),%rax
    3891:	48 29 c2             	sub    %rax,%rdx
    3894:	48 c1 fa 03          	sar    $0x3,%rdx
    3898:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    389f:	fc c0 0f 
    38a2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    38a6:	48 89 c2             	mov    %rax,%rdx
    38a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38ad:	48 8b 08             	mov    (%rax),%rcx
    38b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38b4:	48 89 ce             	mov    %rcx,%rsi
    38b7:	48 89 c7             	mov    %rax,%rdi
    38ba:	e8 5d 0b 00 00       	call   441c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    38bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38c3:	48 89 c7             	mov    %rax,%rdi
    38c6:	e8 25 fb ff ff       	call   33f0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    38cb:	90                   	nop
    38cc:	c9                   	leave
    38cd:	c3                   	ret

00000000000038ce <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    38ce:	55                   	push   %rbp
    38cf:	48 89 e5             	mov    %rsp,%rbp
    38d2:	48 83 ec 10          	sub    $0x10,%rsp
    38d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38de:	48 89 c7             	mov    %rax,%rdi
    38e1:	e8 6c 0b 00 00       	call   4452 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    38e6:	90                   	nop
    38e7:	c9                   	leave
    38e8:	c3                   	ret
    38e9:	90                   	nop

00000000000038ea <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    38ea:	55                   	push   %rbp
    38eb:	48 89 e5             	mov    %rsp,%rbp
    38ee:	48 83 ec 10          	sub    $0x10,%rsp
    38f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38fa:	48 89 c7             	mov    %rax,%rdi
    38fd:	e8 5c 0b 00 00       	call   445e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    3902:	90                   	nop
    3903:	c9                   	leave
    3904:	c3                   	ret
    3905:	90                   	nop

0000000000003906 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3906:	55                   	push   %rbp
    3907:	48 89 e5             	mov    %rsp,%rbp
    390a:	53                   	push   %rbx
    390b:	48 83 ec 28          	sub    $0x28,%rsp
    390f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3913:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3917:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    391b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    391f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3923:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3927:	48 89 d6             	mov    %rdx,%rsi
    392a:	48 89 c7             	mov    %rax,%rdi
    392d:	e8 37 0b 00 00       	call   4469 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    3932:	48 89 c1             	mov    %rax,%rcx
    3935:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3939:	48 89 c2             	mov    %rax,%rdx
    393c:	48 89 ce             	mov    %rcx,%rsi
    393f:	48 89 df             	mov    %rbx,%rdi
    3942:	e8 83 0b 00 00       	call   44ca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    3947:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    394b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    394f:	48 89 d6             	mov    %rdx,%rsi
    3952:	48 89 c7             	mov    %rax,%rdi
    3955:	e8 ce 0b 00 00       	call   4528 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    395a:	eb 1a                	jmp    3976 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    395c:	48 89 c3             	mov    %rax,%rbx
    395f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3963:	48 89 c7             	mov    %rax,%rdi
    3966:	e8 79 00 00 00       	call   39e4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    396b:	48 89 d8             	mov    %rbx,%rax
    396e:	48 89 c7             	mov    %rax,%rdi
    3971:	e8 aa e9 ff ff       	call   2320 <_Unwind_Resume@plt>
    3976:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    397a:	c9                   	leave
    397b:	c3                   	ret

000000000000397c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    397c:	55                   	push   %rbp
    397d:	48 89 e5             	mov    %rsp,%rbp
    3980:	48 83 ec 10          	sub    $0x10,%rsp
    3984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    398c:	48 89 c7             	mov    %rax,%rdi
    398f:	e8 d4 0b 00 00       	call   4568 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3994:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    399b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    399f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39a3:	48 8b 00             	mov    (%rax),%rax
    39a6:	48 89 ce             	mov    %rcx,%rsi
    39a9:	48 89 c7             	mov    %rax,%rdi
    39ac:	e8 c5 0b 00 00       	call   4576 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    39b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39b5:	48 89 c7             	mov    %rax,%rdi
    39b8:	e8 27 00 00 00       	call   39e4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    39bd:	90                   	nop
    39be:	c9                   	leave
    39bf:	c3                   	ret

00000000000039c0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    39c0:	55                   	push   %rbp
    39c1:	48 89 e5             	mov    %rsp,%rbp
    39c4:	48 83 ec 10          	sub    $0x10,%rsp
    39c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    39cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39d0:	48 8b 10             	mov    (%rax),%rdx
    39d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39d7:	48 89 d6             	mov    %rdx,%rsi
    39da:	48 89 c7             	mov    %rax,%rdi
    39dd:	e8 be 0b 00 00       	call   45a0 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    39e2:	c9                   	leave
    39e3:	c3                   	ret

00000000000039e4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    39e4:	55                   	push   %rbp
    39e5:	48 89 e5             	mov    %rsp,%rbp
    39e8:	48 83 ec 10          	sub    $0x10,%rsp
    39ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    39f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39f4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    39f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39fc:	48 8b 00             	mov    (%rax),%rax
    39ff:	48 29 c2             	sub    %rax,%rdx
    3a02:	48 89 d0             	mov    %rdx,%rax
    3a05:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3a09:	48 89 c2             	mov    %rax,%rdx
    3a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a10:	48 8b 08             	mov    (%rax),%rcx
    3a13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a17:	48 89 ce             	mov    %rcx,%rsi
    3a1a:	48 89 c7             	mov    %rax,%rdi
    3a1d:	e8 b6 0b 00 00       	call   45d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    3a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a26:	48 89 c7             	mov    %rax,%rdi
    3a29:	e8 de f9 ff ff       	call   340c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    3a2e:	90                   	nop
    3a2f:	c9                   	leave
    3a30:	c3                   	ret
    3a31:	90                   	nop

0000000000003a32 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3a32:	55                   	push   %rbp
    3a33:	48 89 e5             	mov    %rsp,%rbp
    3a36:	48 83 ec 10          	sub    $0x10,%rsp
    3a3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a42:	48 89 c7             	mov    %rax,%rdi
    3a45:	e8 c4 0b 00 00       	call   460e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    3a4a:	90                   	nop
    3a4b:	c9                   	leave
    3a4c:	c3                   	ret
    3a4d:	90                   	nop

0000000000003a4e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    3a4e:	55                   	push   %rbp
    3a4f:	48 89 e5             	mov    %rsp,%rbp
    3a52:	48 83 ec 10          	sub    $0x10,%rsp
    3a56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a5e:	48 89 c7             	mov    %rax,%rdi
    3a61:	e8 b4 0b 00 00       	call   461a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    3a66:	90                   	nop
    3a67:	c9                   	leave
    3a68:	c3                   	ret
    3a69:	90                   	nop

0000000000003a6a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3a6a:	55                   	push   %rbp
    3a6b:	48 89 e5             	mov    %rsp,%rbp
    3a6e:	53                   	push   %rbx
    3a6f:	48 83 ec 28          	sub    $0x28,%rsp
    3a73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3a77:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3a7b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3a7f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3a83:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3a87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3a8b:	48 89 d6             	mov    %rdx,%rsi
    3a8e:	48 89 c7             	mov    %rax,%rdi
    3a91:	e8 8f 0b 00 00       	call   4625 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    3a96:	48 89 c1             	mov    %rax,%rcx
    3a99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a9d:	48 89 c2             	mov    %rax,%rdx
    3aa0:	48 89 ce             	mov    %rcx,%rsi
    3aa3:	48 89 df             	mov    %rbx,%rdi
    3aa6:	e8 db 0b 00 00       	call   4686 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    3aab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3aaf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ab3:	48 89 d6             	mov    %rdx,%rsi
    3ab6:	48 89 c7             	mov    %rax,%rdi
    3ab9:	e8 26 0c 00 00       	call   46e4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    3abe:	eb 1a                	jmp    3ada <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    3ac0:	48 89 c3             	mov    %rax,%rbx
    3ac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ac7:	48 89 c7             	mov    %rax,%rdi
    3aca:	e8 79 00 00 00       	call   3b48 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    3acf:	48 89 d8             	mov    %rbx,%rax
    3ad2:	48 89 c7             	mov    %rax,%rdi
    3ad5:	e8 46 e8 ff ff       	call   2320 <_Unwind_Resume@plt>
    3ada:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3ade:	c9                   	leave
    3adf:	c3                   	ret

0000000000003ae0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3ae0:	55                   	push   %rbp
    3ae1:	48 89 e5             	mov    %rsp,%rbp
    3ae4:	48 83 ec 10          	sub    $0x10,%rsp
    3ae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3aec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3af0:	48 89 c7             	mov    %rax,%rdi
    3af3:	e8 2c 0c 00 00       	call   4724 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3af8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aff:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3b03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b07:	48 8b 00             	mov    (%rax),%rax
    3b0a:	48 89 ce             	mov    %rcx,%rsi
    3b0d:	48 89 c7             	mov    %rax,%rdi
    3b10:	e8 1d 0c 00 00       	call   4732 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    3b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b19:	48 89 c7             	mov    %rax,%rdi
    3b1c:	e8 27 00 00 00       	call   3b48 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    3b21:	90                   	nop
    3b22:	c9                   	leave
    3b23:	c3                   	ret

0000000000003b24 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    3b24:	55                   	push   %rbp
    3b25:	48 89 e5             	mov    %rsp,%rbp
    3b28:	48 83 ec 10          	sub    $0x10,%rsp
    3b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    3b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b34:	48 8b 10             	mov    (%rax),%rdx
    3b37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b3b:	48 89 d6             	mov    %rdx,%rsi
    3b3e:	48 89 c7             	mov    %rax,%rdi
    3b41:	e8 16 0c 00 00       	call   475c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    3b46:	c9                   	leave
    3b47:	c3                   	ret

0000000000003b48 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3b48:	55                   	push   %rbp
    3b49:	48 89 e5             	mov    %rsp,%rbp
    3b4c:	48 83 ec 10          	sub    $0x10,%rsp
    3b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b58:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b60:	48 8b 00             	mov    (%rax),%rax
    3b63:	48 29 c2             	sub    %rax,%rdx
    3b66:	48 c1 fa 03          	sar    $0x3,%rdx
    3b6a:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    3b71:	aa aa aa 
    3b74:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    3b78:	48 89 c2             	mov    %rax,%rdx
    3b7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b7f:	48 8b 08             	mov    (%rax),%rcx
    3b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b86:	48 89 ce             	mov    %rcx,%rsi
    3b89:	48 89 c7             	mov    %rax,%rdi
    3b8c:	e8 03 0c 00 00       	call   4794 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    3b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b95:	48 89 c7             	mov    %rax,%rdi
    3b98:	e8 8b f8 ff ff       	call   3428 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    3b9d:	90                   	nop
    3b9e:	c9                   	leave
    3b9f:	c3                   	ret

0000000000003ba0 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    3ba0:	55                   	push   %rbp
    3ba1:	48 89 e5             	mov    %rsp,%rbp
    3ba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    3ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bac:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3bb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bb4:	48 8b 00             	mov    (%rax),%rax
    3bb7:	48 29 c2             	sub    %rax,%rdx
    3bba:	48 c1 fa 03          	sar    $0x3,%rdx
    3bbe:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    3bc5:	aa aa aa 
    3bc8:	48 0f af c2          	imul   %rdx,%rax
    3bcc:	5d                   	pop    %rbp
    3bcd:	c3                   	ret

0000000000003bce <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3bce:	55                   	push   %rbp
    3bcf:	48 89 e5             	mov    %rsp,%rbp
    3bd2:	48 83 ec 10          	sub    $0x10,%rsp
    3bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bde:	48 89 c7             	mov    %rax,%rdi
    3be1:	e8 e4 0b 00 00       	call   47ca <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    3be6:	90                   	nop
    3be7:	c9                   	leave
    3be8:	c3                   	ret
    3be9:	90                   	nop

0000000000003bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    3bea:	55                   	push   %rbp
    3beb:	48 89 e5             	mov    %rsp,%rbp
    3bee:	48 83 ec 10          	sub    $0x10,%rsp
    3bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bfa:	48 89 c7             	mov    %rax,%rdi
    3bfd:	e8 d4 0b 00 00       	call   47d6 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    3c02:	90                   	nop
    3c03:	c9                   	leave
    3c04:	c3                   	ret
    3c05:	90                   	nop

0000000000003c06 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3c06:	55                   	push   %rbp
    3c07:	48 89 e5             	mov    %rsp,%rbp
    3c0a:	53                   	push   %rbx
    3c0b:	48 83 ec 28          	sub    $0x28,%rsp
    3c0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3c13:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3c17:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3c1b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3c1f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3c23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3c27:	48 89 d6             	mov    %rdx,%rsi
    3c2a:	48 89 c7             	mov    %rax,%rdi
    3c2d:	e8 af 0b 00 00       	call   47e1 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    3c32:	48 89 c1             	mov    %rax,%rcx
    3c35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c39:	48 89 c2             	mov    %rax,%rdx
    3c3c:	48 89 ce             	mov    %rcx,%rsi
    3c3f:	48 89 df             	mov    %rbx,%rdi
    3c42:	e8 fb 0b 00 00       	call   4842 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    3c47:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3c4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c4f:	48 89 d6             	mov    %rdx,%rsi
    3c52:	48 89 c7             	mov    %rax,%rdi
    3c55:	e8 46 0c 00 00       	call   48a0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    3c5a:	eb 1a                	jmp    3c76 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    3c5c:	48 89 c3             	mov    %rax,%rbx
    3c5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c63:	48 89 c7             	mov    %rax,%rdi
    3c66:	e8 bb 01 00 00       	call   3e26 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    3c6b:	48 89 d8             	mov    %rbx,%rax
    3c6e:	48 89 c7             	mov    %rax,%rdi
    3c71:	e8 aa e6 ff ff       	call   2320 <_Unwind_Resume@plt>
    3c76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3c7a:	c9                   	leave
    3c7b:	c3                   	ret

0000000000003c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3c7c:	55                   	push   %rbp
    3c7d:	48 89 e5             	mov    %rsp,%rbp
    3c80:	48 83 ec 10          	sub    $0x10,%rsp
    3c84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c8c:	48 89 c7             	mov    %rax,%rdi
    3c8f:	e8 4c 0c 00 00       	call   48e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    3c94:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c9b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3c9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ca3:	48 8b 00             	mov    (%rax),%rax
    3ca6:	48 89 ce             	mov    %rcx,%rsi
    3ca9:	48 89 c7             	mov    %rax,%rdi
    3cac:	e8 3d 0c 00 00       	call   48ee <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    3cb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cb5:	48 89 c7             	mov    %rax,%rdi
    3cb8:	e8 69 01 00 00       	call   3e26 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    3cbd:	90                   	nop
    3cbe:	c9                   	leave
    3cbf:	c3                   	ret

0000000000003cc0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    3cc0:	55                   	push   %rbp
    3cc1:	48 89 e5             	mov    %rsp,%rbp
    3cc4:	48 83 ec 20          	sub    $0x20,%rsp
    3cc8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    3ccc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3cd0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3cd4:	48 89 d6             	mov    %rdx,%rsi
    3cd7:	48 89 c7             	mov    %rax,%rdi
    3cda:	e8 39 0c 00 00       	call   4918 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    3cdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ce3:	c9                   	leave
    3ce4:	c3                   	ret
    3ce5:	90                   	nop

0000000000003ce6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    3ce6:	55                   	push   %rbp
    3ce7:	48 89 e5             	mov    %rsp,%rbp
    3cea:	48 83 ec 20          	sub    $0x20,%rsp
    3cee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    3cf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3cf6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    3cfa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3cfe:	48 89 d6             	mov    %rdx,%rsi
    3d01:	48 89 c7             	mov    %rax,%rdi
    3d04:	e8 0f 0c 00 00       	call   4918 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    3d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d0d:	c9                   	leave
    3d0e:	c3                   	ret

0000000000003d0f <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    3d0f:	55                   	push   %rbp
    3d10:	48 89 e5             	mov    %rsp,%rbp
    3d13:	53                   	push   %rbx
    3d14:	48 83 ec 18          	sub    $0x18,%rsp
    3d18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3d1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    3d20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d24:	48 89 c7             	mov    %rax,%rdi
    3d27:	e8 0a 0c 00 00       	call   4936 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    3d2c:	48 8b 18             	mov    (%rax),%rbx
    3d2f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3d33:	48 89 c7             	mov    %rax,%rdi
    3d36:	e8 fb 0b 00 00       	call   4936 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    3d3b:	48 8b 00             	mov    (%rax),%rax
    3d3e:	48 39 c3             	cmp    %rax,%rbx
    3d41:	0f 95 c0             	setne  %al
    3d44:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3d48:	c9                   	leave
    3d49:	c3                   	ret

0000000000003d4a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    3d4a:	55                   	push   %rbp
    3d4b:	48 89 e5             	mov    %rsp,%rbp
    3d4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    3d52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d56:	48 8b 00             	mov    (%rax),%rax
    3d59:	48 8d 50 18          	lea    0x18(%rax),%rdx
    3d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d61:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    3d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    3d68:	5d                   	pop    %rbp
    3d69:	c3                   	ret

0000000000003d6a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    3d6a:	55                   	push   %rbp
    3d6b:	48 89 e5             	mov    %rsp,%rbp
    3d6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    3d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d76:	48 8b 00             	mov    (%rax),%rax
    3d79:	5d                   	pop    %rbp
    3d7a:	c3                   	ret
    3d7b:	90                   	nop

0000000000003d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    3d7c:	55                   	push   %rbp
    3d7d:	48 89 e5             	mov    %rsp,%rbp
    3d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    3d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d8c:	48 8b 08             	mov    (%rax),%rcx
    3d8f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d93:	48 89 d0             	mov    %rdx,%rax
    3d96:	48 c1 e0 03          	shl    $0x3,%rax
    3d9a:	48 29 d0             	sub    %rdx,%rax
    3d9d:	48 c1 e0 02          	shl    $0x2,%rax
    3da1:	48 01 c8             	add    %rcx,%rax
      }
    3da4:	5d                   	pop    %rbp
    3da5:	c3                   	ret

0000000000003da6 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    3da6:	55                   	push   %rbp
    3da7:	48 89 e5             	mov    %rsp,%rbp
    3daa:	53                   	push   %rbx
    3dab:	48 83 ec 18          	sub    $0x18,%rsp
    3daf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3db3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    3db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3dbb:	48 89 c7             	mov    %rax,%rdi
    3dbe:	e8 81 0b 00 00       	call   4944 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    3dc3:	84 c0                	test   %al,%al
    3dc5:	74 36                	je     3dfd <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    3dc7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3dcb:	48 89 c7             	mov    %rax,%rdi
    3dce:	e8 c7 0b 00 00       	call   499a <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    3dd3:	48 89 c3             	mov    %rax,%rbx
    3dd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3dda:	48 89 c7             	mov    %rax,%rdi
    3ddd:	e8 74 0b 00 00       	call   4956 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    3de2:	48 89 c1             	mov    %rax,%rcx
    3de5:	48 8b 03             	mov    (%rbx),%rax
    3de8:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    3dec:	48 89 01             	mov    %rax,(%rcx)
    3def:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    3df3:	48 8b 43 10          	mov    0x10(%rbx),%rax
    3df7:	48 89 41 10          	mov    %rax,0x10(%rcx)
    3dfb:	eb 1e                	jmp    3e1b <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    3dfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e01:	48 89 c7             	mov    %rax,%rdi
    3e04:	e8 91 0b 00 00       	call   499a <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    3e09:	48 89 c2             	mov    %rax,%rdx
    3e0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e10:	48 89 d6             	mov    %rdx,%rsi
    3e13:	48 89 c7             	mov    %rax,%rdi
    3e16:	e8 8d 0b 00 00       	call   49a8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    3e1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    3e1f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3e23:	c9                   	leave
    3e24:	c3                   	ret
    3e25:	90                   	nop

0000000000003e26 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3e26:	55                   	push   %rbp
    3e27:	48 89 e5             	mov    %rsp,%rbp
    3e2a:	48 83 ec 10          	sub    $0x10,%rsp
    3e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e36:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3e3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e3e:	48 8b 00             	mov    (%rax),%rax
    3e41:	48 29 c2             	sub    %rax,%rdx
    3e44:	48 c1 fa 02          	sar    $0x2,%rdx
    3e48:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    3e4f:	db b6 6d 
    3e52:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    3e56:	48 89 c2             	mov    %rax,%rdx
    3e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e5d:	48 8b 08             	mov    (%rax),%rcx
    3e60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e64:	48 89 ce             	mov    %rcx,%rsi
    3e67:	48 89 c7             	mov    %rax,%rdi
    3e6a:	e8 93 0b 00 00       	call   4a02 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    3e6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e73:	48 89 c7             	mov    %rax,%rdi
    3e76:	e8 c9 f5 ff ff       	call   3444 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    3e7b:	90                   	nop
    3e7c:	c9                   	leave
    3e7d:	c3                   	ret

0000000000003e7e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3e7e:	55                   	push   %rbp
    3e7f:	48 89 e5             	mov    %rsp,%rbp
    3e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e86:	90                   	nop
    3e87:	5d                   	pop    %rbp
    3e88:	c3                   	ret
    3e89:	90                   	nop

0000000000003e8a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3e8a:	55                   	push   %rbp
    3e8b:	48 89 e5             	mov    %rsp,%rbp
    3e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e92:	90                   	nop
    3e93:	5d                   	pop    %rbp
    3e94:	c3                   	ret

0000000000003e95 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3e95:	55                   	push   %rbp
    3e96:	48 89 e5             	mov    %rsp,%rbp
    3e99:	53                   	push   %rbx
    3e9a:	48 83 ec 28          	sub    $0x28,%rsp
    3e9e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3ea2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3ea6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3eaa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3eae:	48 89 d6             	mov    %rdx,%rsi
    3eb1:	48 89 c7             	mov    %rax,%rdi
    3eb4:	e8 25 01 00 00       	call   3fde <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    3eb9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ebd:	48 89 c7             	mov    %rax,%rdi
    3ec0:	e8 72 0b 00 00       	call   4a37 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3ec5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3ec9:	0f 92 c3             	setb   %bl
    3ecc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ed0:	48 89 c7             	mov    %rax,%rdi
    3ed3:	e8 a4 f5 ff ff       	call   347c <_ZNSaI21VkExtensionPropertiesED1Ev>
    3ed8:	84 db                	test   %bl,%bl
    3eda:	74 0f                	je     3eeb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3edc:	48 8d 05 d5 79 00 00 	lea    0x79d5(%rip),%rax        # b8b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    3ee3:	48 89 c7             	mov    %rax,%rdi
    3ee6:	e8 d5 e1 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    3eeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3eef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3ef3:	c9                   	leave
    3ef4:	c3                   	ret
    3ef5:	90                   	nop

0000000000003ef6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3ef6:	55                   	push   %rbp
    3ef7:	48 89 e5             	mov    %rsp,%rbp
    3efa:	53                   	push   %rbx
    3efb:	48 83 ec 28          	sub    $0x28,%rsp
    3eff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3f03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3f07:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3f0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3f13:	48 89 d6             	mov    %rdx,%rsi
    3f16:	48 89 c7             	mov    %rax,%rdi
    3f19:	e8 5c 0b 00 00       	call   4a7a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    3f1e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3f22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f26:	48 89 d6             	mov    %rdx,%rsi
    3f29:	48 89 c7             	mov    %rax,%rdi
    3f2c:	e8 7b 0b 00 00       	call   4aac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    3f31:	eb 1a                	jmp    3f4d <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    3f33:	48 89 c3             	mov    %rax,%rbx
    3f36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f3a:	48 89 c7             	mov    %rax,%rdi
    3f3d:	e8 76 f4 ff ff       	call   33b8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    3f42:	48 89 d8             	mov    %rbx,%rax
    3f45:	48 89 c7             	mov    %rax,%rdi
    3f48:	e8 d3 e3 ff ff       	call   2320 <_Unwind_Resume@plt>
    3f4d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3f51:	c9                   	leave
    3f52:	c3                   	ret
    3f53:	90                   	nop

0000000000003f54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3f54:	55                   	push   %rbp
    3f55:	48 89 e5             	mov    %rsp,%rbp
    3f58:	48 83 ec 10          	sub    $0x10,%rsp
    3f5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f68:	48 89 c7             	mov    %rax,%rdi
    3f6b:	e8 24 00 00 00       	call   3f94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    3f70:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f77:	48 8b 00             	mov    (%rax),%rax
    3f7a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3f7e:	48 89 ce             	mov    %rcx,%rsi
    3f81:	48 89 c7             	mov    %rax,%rdi
    3f84:	e8 84 0b 00 00       	call   4b0d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3f89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3f8d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3f91:	90                   	nop
    3f92:	c9                   	leave
    3f93:	c3                   	ret

0000000000003f94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3f94:	55                   	push   %rbp
    3f95:	48 89 e5             	mov    %rsp,%rbp
    3f98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fa0:	5d                   	pop    %rbp
    3fa1:	c3                   	ret

0000000000003fa2 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3fa2:	55                   	push   %rbp
    3fa3:	48 89 e5             	mov    %rsp,%rbp
    3fa6:	48 83 ec 20          	sub    $0x20,%rsp
    3faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3fb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    3fb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fbe:	48 89 d6             	mov    %rdx,%rsi
    3fc1:	48 89 c7             	mov    %rax,%rdi
    3fc4:	e8 6d 0b 00 00       	call   4b36 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    3fc9:	90                   	nop
    3fca:	c9                   	leave
    3fcb:	c3                   	ret

0000000000003fcc <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3fcc:	55                   	push   %rbp
    3fcd:	48 89 e5             	mov    %rsp,%rbp
    3fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3fd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3fdc:	5d                   	pop    %rbp
    3fdd:	c3                   	ret

0000000000003fde <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    3fde:	55                   	push   %rbp
    3fdf:	48 89 e5             	mov    %rsp,%rbp
    3fe2:	48 83 ec 10          	sub    $0x10,%rsp
    3fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3fee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ff6:	48 89 d6             	mov    %rdx,%rsi
    3ff9:	48 89 c7             	mov    %rax,%rdi
    3ffc:	e8 5b 0b 00 00       	call   4b5c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    4001:	90                   	nop
    4002:	c9                   	leave
    4003:	c3                   	ret

0000000000004004 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    4004:	55                   	push   %rbp
    4005:	48 89 e5             	mov    %rsp,%rbp
    4008:	48 83 ec 20          	sub    $0x20,%rsp
    400c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4010:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4014:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    4018:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    401d:	74 17                	je     4036 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    401f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4023:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4027:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    402b:	48 89 ce             	mov    %rcx,%rsi
    402e:	48 89 c7             	mov    %rax,%rdi
    4031:	e8 35 0b 00 00       	call   4b6b <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    4036:	90                   	nop
    4037:	c9                   	leave
    4038:	c3                   	ret
    4039:	90                   	nop

000000000000403a <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    403a:	55                   	push   %rbp
    403b:	48 89 e5             	mov    %rsp,%rbp
    403e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4042:	90                   	nop
    4043:	5d                   	pop    %rbp
    4044:	c3                   	ret
    4045:	90                   	nop

0000000000004046 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4046:	55                   	push   %rbp
    4047:	48 89 e5             	mov    %rsp,%rbp
    404a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    404e:	90                   	nop
    404f:	5d                   	pop    %rbp
    4050:	c3                   	ret

0000000000004051 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4051:	55                   	push   %rbp
    4052:	48 89 e5             	mov    %rsp,%rbp
    4055:	53                   	push   %rbx
    4056:	48 83 ec 28          	sub    $0x28,%rsp
    405a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    405e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    4062:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4066:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    406a:	48 89 d6             	mov    %rdx,%rsi
    406d:	48 89 c7             	mov    %rax,%rdi
    4070:	e8 c5 01 00 00       	call   423a <_ZNSaIPKcEC1ERKS1_>
    4075:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4079:	48 89 c7             	mov    %rax,%rdi
    407c:	e8 18 0b 00 00       	call   4b99 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    4081:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    4085:	0f 92 c3             	setb   %bl
    4088:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    408c:	48 89 c7             	mov    %rax,%rdi
    408f:	e8 56 f5 ff ff       	call   35ea <_ZNSaIPKcED1Ev>
    4094:	84 db                	test   %bl,%bl
    4096:	74 0f                	je     40a7 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    4098:	48 8d 05 19 78 00 00 	lea    0x7819(%rip),%rax        # b8b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    409f:	48 89 c7             	mov    %rax,%rdi
    40a2:	e8 19 e0 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    40a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    40ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    40af:	c9                   	leave
    40b0:	c3                   	ret
    40b1:	90                   	nop

00000000000040b2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    40b2:	55                   	push   %rbp
    40b3:	48 89 e5             	mov    %rsp,%rbp
    40b6:	53                   	push   %rbx
    40b7:	48 83 ec 28          	sub    $0x28,%rsp
    40bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    40bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    40c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    40c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40cb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    40cf:	48 89 d6             	mov    %rdx,%rsi
    40d2:	48 89 c7             	mov    %rax,%rdi
    40d5:	e8 02 0b 00 00       	call   4bdc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    40da:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    40de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40e2:	48 89 d6             	mov    %rdx,%rsi
    40e5:	48 89 c7             	mov    %rax,%rdi
    40e8:	e8 21 0b 00 00       	call   4c0e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    40ed:	eb 1a                	jmp    4109 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    40ef:	48 89 c3             	mov    %rax,%rbx
    40f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40f6:	48 89 c7             	mov    %rax,%rdi
    40f9:	e8 d6 f2 ff ff       	call   33d4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    40fe:	48 89 d8             	mov    %rbx,%rax
    4101:	48 89 c7             	mov    %rax,%rdi
    4104:	e8 17 e2 ff ff       	call   2320 <_Unwind_Resume@plt>
    4109:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    410d:	c9                   	leave
    410e:	c3                   	ret
    410f:	90                   	nop

0000000000004110 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    4110:	55                   	push   %rbp
    4111:	48 89 e5             	mov    %rsp,%rbp
    4114:	48 83 ec 10          	sub    $0x10,%rsp
    4118:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    411c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    4120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4124:	48 89 c7             	mov    %rax,%rdi
    4127:	e8 24 00 00 00       	call   4150 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    412c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    412f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4133:	48 8b 00             	mov    (%rax),%rax
    4136:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    413a:	48 89 ce             	mov    %rcx,%rsi
    413d:	48 89 c7             	mov    %rax,%rdi
    4140:	e8 1f 0b 00 00       	call   4c64 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    4145:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4149:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    414d:	90                   	nop
    414e:	c9                   	leave
    414f:	c3                   	ret

0000000000004150 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    4150:	55                   	push   %rbp
    4151:	48 89 e5             	mov    %rsp,%rbp
    4154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    4158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    415c:	5d                   	pop    %rbp
    415d:	c3                   	ret

000000000000415e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    415e:	55                   	push   %rbp
    415f:	48 89 e5             	mov    %rsp,%rbp
    4162:	48 83 ec 20          	sub    $0x20,%rsp
    4166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    416a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    416e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    4172:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    417a:	48 89 d6             	mov    %rdx,%rsi
    417d:	48 89 c7             	mov    %rax,%rdi
    4180:	e8 08 0b 00 00       	call   4c8d <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    4185:	90                   	nop
    4186:	c9                   	leave
    4187:	c3                   	ret

0000000000004188 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    4188:	55                   	push   %rbp
    4189:	48 89 e5             	mov    %rsp,%rbp
    418c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    4190:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4194:	5d                   	pop    %rbp
    4195:	c3                   	ret

0000000000004196 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    4196:	55                   	push   %rbp
    4197:	48 89 e5             	mov    %rsp,%rbp
    419a:	53                   	push   %rbx
    419b:	48 83 ec 18          	sub    $0x18,%rsp
    419f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    41a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    41a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41ab:	48 8b 50 08          	mov    0x8(%rax),%rdx
    41af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41b3:	48 8b 40 10          	mov    0x10(%rax),%rax
    41b7:	48 39 c2             	cmp    %rax,%rdx
    41ba:	74 3c                	je     41f8 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    41bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    41c0:	48 89 c7             	mov    %rax,%rdi
    41c3:	e8 eb 0a 00 00       	call   4cb3 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    41c8:	48 89 c2             	mov    %rax,%rdx
    41cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41cf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    41d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41d7:	48 89 ce             	mov    %rcx,%rsi
    41da:	48 89 c7             	mov    %rax,%rdi
    41dd:	e8 df 0a 00 00       	call   4cc1 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    41e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41e6:	48 8b 40 08          	mov    0x8(%rax),%rax
    41ea:	48 8d 50 08          	lea    0x8(%rax),%rdx
    41ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41f2:	48 89 50 08          	mov    %rdx,0x8(%rax)
    41f6:	eb 30                	jmp    4228 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    41f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    41fc:	48 89 c7             	mov    %rax,%rdi
    41ff:	e8 af 0a 00 00       	call   4cb3 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4204:	48 89 c3             	mov    %rax,%rbx
    4207:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    420b:	48 89 c7             	mov    %rax,%rdi
    420e:	e8 e7 0a 00 00       	call   4cfa <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    4213:	48 89 c1             	mov    %rax,%rcx
    4216:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    421a:	48 89 da             	mov    %rbx,%rdx
    421d:	48 89 ce             	mov    %rcx,%rsi
    4220:	48 89 c7             	mov    %rax,%rdi
    4223:	e8 fc 0a 00 00       	call   4d24 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    4228:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    422c:	48 89 c7             	mov    %rax,%rdi
    422f:	e8 82 0c 00 00       	call   4eb6 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    4234:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4238:	c9                   	leave
    4239:	c3                   	ret

000000000000423a <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    423a:	55                   	push   %rbp
    423b:	48 89 e5             	mov    %rsp,%rbp
    423e:	48 83 ec 10          	sub    $0x10,%rsp
    4242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4246:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    424a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    424e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4252:	48 89 d6             	mov    %rdx,%rsi
    4255:	48 89 c7             	mov    %rax,%rdi
    4258:	e8 99 0c 00 00       	call   4ef6 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    425d:	90                   	nop
    425e:	c9                   	leave
    425f:	c3                   	ret

0000000000004260 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    4260:	55                   	push   %rbp
    4261:	48 89 e5             	mov    %rsp,%rbp
    4264:	48 83 ec 20          	sub    $0x20,%rsp
    4268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    426c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4270:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    4274:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4279:	74 17                	je     4292 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    427b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    427f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4283:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4287:	48 89 ce             	mov    %rcx,%rsi
    428a:	48 89 c7             	mov    %rax,%rdi
    428d:	e8 73 0c 00 00       	call   4f05 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    4292:	90                   	nop
    4293:	c9                   	leave
    4294:	c3                   	ret
    4295:	90                   	nop

0000000000004296 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4296:	55                   	push   %rbp
    4297:	48 89 e5             	mov    %rsp,%rbp
    429a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    429e:	90                   	nop
    429f:	5d                   	pop    %rbp
    42a0:	c3                   	ret
    42a1:	90                   	nop

00000000000042a2 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    42a2:	55                   	push   %rbp
    42a3:	48 89 e5             	mov    %rsp,%rbp
    42a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42aa:	90                   	nop
    42ab:	5d                   	pop    %rbp
    42ac:	c3                   	ret

00000000000042ad <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    42ad:	55                   	push   %rbp
    42ae:	48 89 e5             	mov    %rsp,%rbp
    42b1:	53                   	push   %rbx
    42b2:	48 83 ec 28          	sub    $0x28,%rsp
    42b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    42ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    42be:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    42c2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    42c6:	48 89 d6             	mov    %rdx,%rsi
    42c9:	48 89 c7             	mov    %rax,%rdi
    42cc:	e8 25 01 00 00       	call   43f6 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    42d1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    42d5:	48 89 c7             	mov    %rax,%rdi
    42d8:	e8 56 0c 00 00       	call   4f33 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    42dd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    42e1:	0f 92 c3             	setb   %bl
    42e4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    42e8:	48 89 c7             	mov    %rax,%rdi
    42eb:	e8 8c f4 ff ff       	call   377c <_ZNSaI17VkLayerPropertiesED1Ev>
    42f0:	84 db                	test   %bl,%bl
    42f2:	74 0f                	je     4303 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    42f4:	48 8d 05 bd 75 00 00 	lea    0x75bd(%rip),%rax        # b8b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    42fb:	48 89 c7             	mov    %rax,%rdi
    42fe:	e8 bd dd ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    4303:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    4307:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    430b:	c9                   	leave
    430c:	c3                   	ret
    430d:	90                   	nop

000000000000430e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    430e:	55                   	push   %rbp
    430f:	48 89 e5             	mov    %rsp,%rbp
    4312:	53                   	push   %rbx
    4313:	48 83 ec 28          	sub    $0x28,%rsp
    4317:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    431b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    431f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    4323:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4327:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    432b:	48 89 d6             	mov    %rdx,%rsi
    432e:	48 89 c7             	mov    %rax,%rdi
    4331:	e8 40 0c 00 00       	call   4f76 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    4336:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    433a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    433e:	48 89 d6             	mov    %rdx,%rsi
    4341:	48 89 c7             	mov    %rax,%rdi
    4344:	e8 5f 0c 00 00       	call   4fa8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    4349:	eb 1a                	jmp    4365 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    434b:	48 89 c3             	mov    %rax,%rbx
    434e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4352:	48 89 c7             	mov    %rax,%rdi
    4355:	e8 96 f0 ff ff       	call   33f0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    435a:	48 89 d8             	mov    %rbx,%rax
    435d:	48 89 c7             	mov    %rax,%rdi
    4360:	e8 bb df ff ff       	call   2320 <_Unwind_Resume@plt>
    4365:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4369:	c9                   	leave
    436a:	c3                   	ret
    436b:	90                   	nop

000000000000436c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    436c:	55                   	push   %rbp
    436d:	48 89 e5             	mov    %rsp,%rbp
    4370:	48 83 ec 10          	sub    $0x10,%rsp
    4374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4378:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    437c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4380:	48 89 c7             	mov    %rax,%rdi
    4383:	e8 24 00 00 00       	call   43ac <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4388:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    438b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    438f:	48 8b 00             	mov    (%rax),%rax
    4392:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4396:	48 89 ce             	mov    %rcx,%rsi
    4399:	48 89 c7             	mov    %rax,%rdi
    439c:	e8 68 0c 00 00       	call   5009 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    43a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    43a5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    43a9:	90                   	nop
    43aa:	c9                   	leave
    43ab:	c3                   	ret

00000000000043ac <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    43ac:	55                   	push   %rbp
    43ad:	48 89 e5             	mov    %rsp,%rbp
    43b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    43b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43b8:	5d                   	pop    %rbp
    43b9:	c3                   	ret

00000000000043ba <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    43ba:	55                   	push   %rbp
    43bb:	48 89 e5             	mov    %rsp,%rbp
    43be:	48 83 ec 20          	sub    $0x20,%rsp
    43c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    43ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    43d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43d6:	48 89 d6             	mov    %rdx,%rsi
    43d9:	48 89 c7             	mov    %rax,%rdi
    43dc:	e8 51 0c 00 00       	call   5032 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    43e1:	90                   	nop
    43e2:	c9                   	leave
    43e3:	c3                   	ret

00000000000043e4 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    43e4:	55                   	push   %rbp
    43e5:	48 89 e5             	mov    %rsp,%rbp
    43e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    43f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    43f4:	5d                   	pop    %rbp
    43f5:	c3                   	ret

00000000000043f6 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    43f6:	55                   	push   %rbp
    43f7:	48 89 e5             	mov    %rsp,%rbp
    43fa:	48 83 ec 10          	sub    $0x10,%rsp
    43fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4402:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    4406:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    440a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    440e:	48 89 d6             	mov    %rdx,%rsi
    4411:	48 89 c7             	mov    %rax,%rdi
    4414:	e8 3f 0c 00 00       	call   5058 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    4419:	90                   	nop
    441a:	c9                   	leave
    441b:	c3                   	ret

000000000000441c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    441c:	55                   	push   %rbp
    441d:	48 89 e5             	mov    %rsp,%rbp
    4420:	48 83 ec 20          	sub    $0x20,%rsp
    4424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4428:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    442c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    4430:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4435:	74 17                	je     444e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    4437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    443b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    443f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4443:	48 89 ce             	mov    %rcx,%rsi
    4446:	48 89 c7             	mov    %rax,%rdi
    4449:	e8 19 0c 00 00       	call   5067 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    444e:	90                   	nop
    444f:	c9                   	leave
    4450:	c3                   	ret
    4451:	90                   	nop

0000000000004452 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4452:	55                   	push   %rbp
    4453:	48 89 e5             	mov    %rsp,%rbp
    4456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    445a:	90                   	nop
    445b:	5d                   	pop    %rbp
    445c:	c3                   	ret
    445d:	90                   	nop

000000000000445e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    445e:	55                   	push   %rbp
    445f:	48 89 e5             	mov    %rsp,%rbp
    4462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4466:	90                   	nop
    4467:	5d                   	pop    %rbp
    4468:	c3                   	ret

0000000000004469 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4469:	55                   	push   %rbp
    446a:	48 89 e5             	mov    %rsp,%rbp
    446d:	53                   	push   %rbx
    446e:	48 83 ec 28          	sub    $0x28,%rsp
    4472:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4476:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    447a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    447e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4482:	48 89 d6             	mov    %rdx,%rsi
    4485:	48 89 c7             	mov    %rax,%rdi
    4488:	e8 25 01 00 00       	call   45b2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    448d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4491:	48 89 c7             	mov    %rax,%rdi
    4494:	e8 fc 0b 00 00       	call   5095 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    4499:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    449d:	0f 92 c3             	setb   %bl
    44a0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    44a4:	48 89 c7             	mov    %rax,%rdi
    44a7:	e8 3e f4 ff ff       	call   38ea <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    44ac:	84 db                	test   %bl,%bl
    44ae:	74 0f                	je     44bf <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    44b0:	48 8d 05 01 74 00 00 	lea    0x7401(%rip),%rax        # b8b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    44b7:	48 89 c7             	mov    %rax,%rdi
    44ba:	e8 01 dc ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    44bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    44c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    44c7:	c9                   	leave
    44c8:	c3                   	ret
    44c9:	90                   	nop

00000000000044ca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    44ca:	55                   	push   %rbp
    44cb:	48 89 e5             	mov    %rsp,%rbp
    44ce:	53                   	push   %rbx
    44cf:	48 83 ec 28          	sub    $0x28,%rsp
    44d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    44d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    44db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    44df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44e3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    44e7:	48 89 d6             	mov    %rdx,%rsi
    44ea:	48 89 c7             	mov    %rax,%rdi
    44ed:	e8 e6 0b 00 00       	call   50d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    44f2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    44f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44fa:	48 89 d6             	mov    %rdx,%rsi
    44fd:	48 89 c7             	mov    %rax,%rdi
    4500:	e8 05 0c 00 00       	call   510a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    4505:	eb 1a                	jmp    4521 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    4507:	48 89 c3             	mov    %rax,%rbx
    450a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    450e:	48 89 c7             	mov    %rax,%rdi
    4511:	e8 f6 ee ff ff       	call   340c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    4516:	48 89 d8             	mov    %rbx,%rax
    4519:	48 89 c7             	mov    %rax,%rdi
    451c:	e8 ff dd ff ff       	call   2320 <_Unwind_Resume@plt>
    4521:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4525:	c9                   	leave
    4526:	c3                   	ret
    4527:	90                   	nop

0000000000004528 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    4528:	55                   	push   %rbp
    4529:	48 89 e5             	mov    %rsp,%rbp
    452c:	48 83 ec 10          	sub    $0x10,%rsp
    4530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4534:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    4538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    453c:	48 89 c7             	mov    %rax,%rdi
    453f:	e8 24 00 00 00       	call   4568 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4544:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    4547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    454b:	48 8b 00             	mov    (%rax),%rax
    454e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4552:	48 89 ce             	mov    %rcx,%rsi
    4555:	48 89 c7             	mov    %rax,%rdi
    4558:	e8 03 0c 00 00       	call   5160 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    455d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4561:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    4565:	90                   	nop
    4566:	c9                   	leave
    4567:	c3                   	ret

0000000000004568 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    4568:	55                   	push   %rbp
    4569:	48 89 e5             	mov    %rsp,%rbp
    456c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    4570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4574:	5d                   	pop    %rbp
    4575:	c3                   	ret

0000000000004576 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    4576:	55                   	push   %rbp
    4577:	48 89 e5             	mov    %rsp,%rbp
    457a:	48 83 ec 20          	sub    $0x20,%rsp
    457e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4582:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4586:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    458a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    458e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4592:	48 89 d6             	mov    %rdx,%rsi
    4595:	48 89 c7             	mov    %rax,%rdi
    4598:	e8 ec 0b 00 00       	call   5189 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    459d:	90                   	nop
    459e:	c9                   	leave
    459f:	c3                   	ret

00000000000045a0 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    45a0:	55                   	push   %rbp
    45a1:	48 89 e5             	mov    %rsp,%rbp
    45a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    45ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    45b0:	5d                   	pop    %rbp
    45b1:	c3                   	ret

00000000000045b2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    45b2:	55                   	push   %rbp
    45b3:	48 89 e5             	mov    %rsp,%rbp
    45b6:	48 83 ec 10          	sub    $0x10,%rsp
    45ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    45c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45ca:	48 89 d6             	mov    %rdx,%rsi
    45cd:	48 89 c7             	mov    %rax,%rdi
    45d0:	e8 db 0b 00 00       	call   51b0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    45d5:	90                   	nop
    45d6:	c9                   	leave
    45d7:	c3                   	ret

00000000000045d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    45d8:	55                   	push   %rbp
    45d9:	48 89 e5             	mov    %rsp,%rbp
    45dc:	48 83 ec 20          	sub    $0x20,%rsp
    45e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    45ec:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    45f1:	74 17                	je     460a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    45f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    45fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    45ff:	48 89 ce             	mov    %rcx,%rsi
    4602:	48 89 c7             	mov    %rax,%rdi
    4605:	e8 b5 0b 00 00       	call   51bf <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    460a:	90                   	nop
    460b:	c9                   	leave
    460c:	c3                   	ret
    460d:	90                   	nop

000000000000460e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    460e:	55                   	push   %rbp
    460f:	48 89 e5             	mov    %rsp,%rbp
    4612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4616:	90                   	nop
    4617:	5d                   	pop    %rbp
    4618:	c3                   	ret
    4619:	90                   	nop

000000000000461a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    461a:	55                   	push   %rbp
    461b:	48 89 e5             	mov    %rsp,%rbp
    461e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4622:	90                   	nop
    4623:	5d                   	pop    %rbp
    4624:	c3                   	ret

0000000000004625 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4625:	55                   	push   %rbp
    4626:	48 89 e5             	mov    %rsp,%rbp
    4629:	53                   	push   %rbx
    462a:	48 83 ec 28          	sub    $0x28,%rsp
    462e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4632:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    4636:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    463a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    463e:	48 89 d6             	mov    %rdx,%rsi
    4641:	48 89 c7             	mov    %rax,%rdi
    4644:	e8 25 01 00 00       	call   476e <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    4649:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    464d:	48 89 c7             	mov    %rax,%rdi
    4650:	e8 98 0b 00 00       	call   51ed <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    4655:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    4659:	0f 92 c3             	setb   %bl
    465c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4660:	48 89 c7             	mov    %rax,%rdi
    4663:	e8 e6 f3 ff ff       	call   3a4e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    4668:	84 db                	test   %bl,%bl
    466a:	74 0f                	je     467b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    466c:	48 8d 05 45 72 00 00 	lea    0x7245(%rip),%rax        # b8b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    4673:	48 89 c7             	mov    %rax,%rdi
    4676:	e8 45 da ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    467b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    467f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4683:	c9                   	leave
    4684:	c3                   	ret
    4685:	90                   	nop

0000000000004686 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    4686:	55                   	push   %rbp
    4687:	48 89 e5             	mov    %rsp,%rbp
    468a:	53                   	push   %rbx
    468b:	48 83 ec 28          	sub    $0x28,%rsp
    468f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4693:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4697:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    469b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    469f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    46a3:	48 89 d6             	mov    %rdx,%rsi
    46a6:	48 89 c7             	mov    %rax,%rdi
    46a9:	e8 82 0b 00 00       	call   5230 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    46ae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    46b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46b6:	48 89 d6             	mov    %rdx,%rsi
    46b9:	48 89 c7             	mov    %rax,%rdi
    46bc:	e8 a1 0b 00 00       	call   5262 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    46c1:	eb 1a                	jmp    46dd <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    46c3:	48 89 c3             	mov    %rax,%rbx
    46c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46ca:	48 89 c7             	mov    %rax,%rdi
    46cd:	e8 56 ed ff ff       	call   3428 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    46d2:	48 89 d8             	mov    %rbx,%rax
    46d5:	48 89 c7             	mov    %rax,%rdi
    46d8:	e8 43 dc ff ff       	call   2320 <_Unwind_Resume@plt>
    46dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    46e1:	c9                   	leave
    46e2:	c3                   	ret
    46e3:	90                   	nop

00000000000046e4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    46e4:	55                   	push   %rbp
    46e5:	48 89 e5             	mov    %rsp,%rbp
    46e8:	48 83 ec 10          	sub    $0x10,%rsp
    46ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    46f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46f8:	48 89 c7             	mov    %rax,%rdi
    46fb:	e8 24 00 00 00       	call   4724 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4700:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    4703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4707:	48 8b 00             	mov    (%rax),%rax
    470a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    470e:	48 89 ce             	mov    %rcx,%rsi
    4711:	48 89 c7             	mov    %rax,%rdi
    4714:	e8 a9 0b 00 00       	call   52c2 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    4719:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    471d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    4721:	90                   	nop
    4722:	c9                   	leave
    4723:	c3                   	ret

0000000000004724 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    4724:	55                   	push   %rbp
    4725:	48 89 e5             	mov    %rsp,%rbp
    4728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    472c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4730:	5d                   	pop    %rbp
    4731:	c3                   	ret

0000000000004732 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    4732:	55                   	push   %rbp
    4733:	48 89 e5             	mov    %rsp,%rbp
    4736:	48 83 ec 20          	sub    $0x20,%rsp
    473a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    473e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4742:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    4746:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    474a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    474e:	48 89 d6             	mov    %rdx,%rsi
    4751:	48 89 c7             	mov    %rax,%rdi
    4754:	e8 92 0b 00 00       	call   52eb <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    4759:	90                   	nop
    475a:	c9                   	leave
    475b:	c3                   	ret

000000000000475c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    475c:	55                   	push   %rbp
    475d:	48 89 e5             	mov    %rsp,%rbp
    4760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4764:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    4768:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    476c:	5d                   	pop    %rbp
    476d:	c3                   	ret

000000000000476e <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    476e:	55                   	push   %rbp
    476f:	48 89 e5             	mov    %rsp,%rbp
    4772:	48 83 ec 10          	sub    $0x10,%rsp
    4776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    477a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    477e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4786:	48 89 d6             	mov    %rdx,%rsi
    4789:	48 89 c7             	mov    %rax,%rdi
    478c:	e8 81 0b 00 00       	call   5312 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    4791:	90                   	nop
    4792:	c9                   	leave
    4793:	c3                   	ret

0000000000004794 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    4794:	55                   	push   %rbp
    4795:	48 89 e5             	mov    %rsp,%rbp
    4798:	48 83 ec 20          	sub    $0x20,%rsp
    479c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    47a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    47a8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    47ad:	74 17                	je     47c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    47af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    47b7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    47bb:	48 89 ce             	mov    %rcx,%rsi
    47be:	48 89 c7             	mov    %rax,%rdi
    47c1:	e8 5b 0b 00 00       	call   5321 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    47c6:	90                   	nop
    47c7:	c9                   	leave
    47c8:	c3                   	ret
    47c9:	90                   	nop

00000000000047ca <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    47ca:	55                   	push   %rbp
    47cb:	48 89 e5             	mov    %rsp,%rbp
    47ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47d2:	90                   	nop
    47d3:	5d                   	pop    %rbp
    47d4:	c3                   	ret
    47d5:	90                   	nop

00000000000047d6 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    47d6:	55                   	push   %rbp
    47d7:	48 89 e5             	mov    %rsp,%rbp
    47da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47de:	90                   	nop
    47df:	5d                   	pop    %rbp
    47e0:	c3                   	ret

00000000000047e1 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    47e1:	55                   	push   %rbp
    47e2:	48 89 e5             	mov    %rsp,%rbp
    47e5:	53                   	push   %rbx
    47e6:	48 83 ec 28          	sub    $0x28,%rsp
    47ea:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    47ee:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    47f2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    47f6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    47fa:	48 89 d6             	mov    %rdx,%rsi
    47fd:	48 89 c7             	mov    %rax,%rdi
    4800:	e8 d7 01 00 00       	call   49dc <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    4805:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4809:	48 89 c7             	mov    %rax,%rdi
    480c:	e8 3e 0b 00 00       	call   534f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    4811:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    4815:	0f 92 c3             	setb   %bl
    4818:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    481c:	48 89 c7             	mov    %rax,%rdi
    481f:	e8 c6 f3 ff ff       	call   3bea <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    4824:	84 db                	test   %bl,%bl
    4826:	74 0f                	je     4837 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    4828:	48 8d 05 89 70 00 00 	lea    0x7089(%rip),%rax        # b8b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xc8>
    482f:	48 89 c7             	mov    %rax,%rdi
    4832:	e8 89 d8 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    4837:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    483b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    483f:	c9                   	leave
    4840:	c3                   	ret
    4841:	90                   	nop

0000000000004842 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    4842:	55                   	push   %rbp
    4843:	48 89 e5             	mov    %rsp,%rbp
    4846:	53                   	push   %rbx
    4847:	48 83 ec 28          	sub    $0x28,%rsp
    484b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    484f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4853:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    4857:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    485b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    485f:	48 89 d6             	mov    %rdx,%rsi
    4862:	48 89 c7             	mov    %rax,%rdi
    4865:	e8 28 0b 00 00       	call   5392 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    486a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    486e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4872:	48 89 d6             	mov    %rdx,%rsi
    4875:	48 89 c7             	mov    %rax,%rdi
    4878:	e8 47 0b 00 00       	call   53c4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    487d:	eb 1a                	jmp    4899 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    487f:	48 89 c3             	mov    %rax,%rbx
    4882:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4886:	48 89 c7             	mov    %rax,%rdi
    4889:	e8 b6 eb ff ff       	call   3444 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    488e:	48 89 d8             	mov    %rbx,%rax
    4891:	48 89 c7             	mov    %rax,%rdi
    4894:	e8 87 da ff ff       	call   2320 <_Unwind_Resume@plt>
    4899:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    489d:	c9                   	leave
    489e:	c3                   	ret
    489f:	90                   	nop

00000000000048a0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    48a0:	55                   	push   %rbp
    48a1:	48 89 e5             	mov    %rsp,%rbp
    48a4:	48 83 ec 10          	sub    $0x10,%rsp
    48a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    48b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48b4:	48 89 c7             	mov    %rax,%rdi
    48b7:	e8 24 00 00 00       	call   48e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    48bc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    48bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48c3:	48 8b 00             	mov    (%rax),%rax
    48c6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    48ca:	48 89 ce             	mov    %rcx,%rsi
    48cd:	48 89 c7             	mov    %rax,%rdi
    48d0:	e8 50 0b 00 00       	call   5425 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    48d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    48d9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    48dd:	90                   	nop
    48de:	c9                   	leave
    48df:	c3                   	ret

00000000000048e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    48e0:	55                   	push   %rbp
    48e1:	48 89 e5             	mov    %rsp,%rbp
    48e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    48e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    48ec:	5d                   	pop    %rbp
    48ed:	c3                   	ret

00000000000048ee <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    48ee:	55                   	push   %rbp
    48ef:	48 89 e5             	mov    %rsp,%rbp
    48f2:	48 83 ec 20          	sub    $0x20,%rsp
    48f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    48fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    4902:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    490a:	48 89 d6             	mov    %rdx,%rsi
    490d:	48 89 c7             	mov    %rax,%rdi
    4910:	e8 39 0b 00 00       	call   544e <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    4915:	90                   	nop
    4916:	c9                   	leave
    4917:	c3                   	ret

0000000000004918 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    4918:	55                   	push   %rbp
    4919:	48 89 e5             	mov    %rsp,%rbp
    491c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4920:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    4924:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4928:	48 8b 10             	mov    (%rax),%rdx
    492b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    492f:	48 89 10             	mov    %rdx,(%rax)
    4932:	90                   	nop
    4933:	5d                   	pop    %rbp
    4934:	c3                   	ret
    4935:	90                   	nop

0000000000004936 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    4936:	55                   	push   %rbp
    4937:	48 89 e5             	mov    %rsp,%rbp
    493a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    493e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4942:	5d                   	pop    %rbp
    4943:	c3                   	ret

0000000000004944 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    4944:	55                   	push   %rbp
    4945:	48 89 e5             	mov    %rsp,%rbp
    4948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    494c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4950:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    4954:	5d                   	pop    %rbp
    4955:	c3                   	ret

0000000000004956 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    4956:	55                   	push   %rbp
    4957:	48 89 e5             	mov    %rsp,%rbp
    495a:	48 83 ec 10          	sub    $0x10,%rsp
    495e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    4962:	e8 25 ea ff ff       	call   338c <_ZSt23__is_constant_evaluatedv>
    4967:	84 c0                	test   %al,%al
    4969:	74 1a                	je     4985 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    496b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    496f:	48 89 c7             	mov    %rax,%rdi
    4972:	e8 cd ff ff ff       	call   4944 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    4977:	83 f0 01             	xor    $0x1,%eax
    497a:	84 c0                	test   %al,%al
    497c:	74 07                	je     4985 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    497e:	b8 01 00 00 00       	mov    $0x1,%eax
    4983:	eb 05                	jmp    498a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    4985:	b8 00 00 00 00       	mov    $0x0,%eax
    498a:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    498c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4990:	48 89 c7             	mov    %rax,%rdi
    4993:	e8 dc 0a 00 00       	call   5474 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    4998:	c9                   	leave
    4999:	c3                   	ret

000000000000499a <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    499a:	55                   	push   %rbp
    499b:	48 89 e5             	mov    %rsp,%rbp
    499e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    49a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49a6:	5d                   	pop    %rbp
    49a7:	c3                   	ret

00000000000049a8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    49a8:	55                   	push   %rbp
    49a9:	48 89 e5             	mov    %rsp,%rbp
    49ac:	53                   	push   %rbx
    49ad:	48 83 ec 18          	sub    $0x18,%rsp
    49b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    49b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    49b9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    49bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    49c1:	48 89 c7             	mov    %rax,%rdi
    49c4:	e8 d1 ff ff ff       	call   499a <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    49c9:	48 89 c6             	mov    %rax,%rsi
    49cc:	48 89 df             	mov    %rbx,%rdi
    49cf:	e8 ae 0a 00 00       	call   5482 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    49d4:	90                   	nop
    49d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49d9:	c9                   	leave
    49da:	c3                   	ret
    49db:	90                   	nop

00000000000049dc <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    49dc:	55                   	push   %rbp
    49dd:	48 89 e5             	mov    %rsp,%rbp
    49e0:	48 83 ec 10          	sub    $0x10,%rsp
    49e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    49ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    49f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49f4:	48 89 d6             	mov    %rdx,%rsi
    49f7:	48 89 c7             	mov    %rax,%rdi
    49fa:	e8 c9 0a 00 00       	call   54c8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    49ff:	90                   	nop
    4a00:	c9                   	leave
    4a01:	c3                   	ret

0000000000004a02 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    4a02:	55                   	push   %rbp
    4a03:	48 89 e5             	mov    %rsp,%rbp
    4a06:	48 83 ec 20          	sub    $0x20,%rsp
    4a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4a12:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    4a16:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4a1b:	74 17                	je     4a34 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    4a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a25:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4a29:	48 89 ce             	mov    %rcx,%rsi
    4a2c:	48 89 c7             	mov    %rax,%rdi
    4a2f:	e8 a3 0a 00 00       	call   54d7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    4a34:	90                   	nop
    4a35:	c9                   	leave
    4a36:	c3                   	ret

0000000000004a37 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4a37:	55                   	push   %rbp
    4a38:	48 89 e5             	mov    %rsp,%rbp
    4a3b:	48 83 ec 20          	sub    $0x20,%rsp
    4a3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4a43:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    4a4a:	07 7e 00 
    4a4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4a51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a55:	48 89 c7             	mov    %rax,%rdi
    4a58:	e8 a8 0a 00 00       	call   5505 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    4a5d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4a61:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4a65:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4a69:	48 89 d6             	mov    %rdx,%rsi
    4a6c:	48 89 c7             	mov    %rax,%rdi
    4a6f:	e8 ab 0a 00 00       	call   551f <_ZSt3minImERKT_S2_S2_>
    4a74:	48 8b 00             	mov    (%rax),%rax
      }
    4a77:	c9                   	leave
    4a78:	c3                   	ret
    4a79:	90                   	nop

0000000000004a7a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    4a7a:	55                   	push   %rbp
    4a7b:	48 89 e5             	mov    %rsp,%rbp
    4a7e:	48 83 ec 10          	sub    $0x10,%rsp
    4a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    4a8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a92:	48 89 d6             	mov    %rdx,%rsi
    4a95:	48 89 c7             	mov    %rax,%rdi
    4a98:	e8 41 f5 ff ff       	call   3fde <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    4a9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa1:	48 89 c7             	mov    %rax,%rdi
    4aa4:	e8 a1 0a 00 00       	call   554a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    4aa9:	90                   	nop
    4aaa:	c9                   	leave
    4aab:	c3                   	ret

0000000000004aac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    4aac:	55                   	push   %rbp
    4aad:	48 89 e5             	mov    %rsp,%rbp
    4ab0:	48 83 ec 10          	sub    $0x10,%rsp
    4ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ab8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4abc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ac4:	48 89 d6             	mov    %rdx,%rsi
    4ac7:	48 89 c7             	mov    %rax,%rdi
    4aca:	e8 a9 0a 00 00       	call   5578 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    4acf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4ad3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4ad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ada:	48 8b 10             	mov    (%rax),%rdx
    4add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ae1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ae9:	48 8b 08             	mov    (%rax),%rcx
    4aec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4af0:	48 89 d0             	mov    %rdx,%rax
    4af3:	48 c1 e0 06          	shl    $0x6,%rax
    4af7:	48 01 d0             	add    %rdx,%rax
    4afa:	48 c1 e0 02          	shl    $0x2,%rax
    4afe:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b06:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4b0a:	90                   	nop
    4b0b:	c9                   	leave
    4b0c:	c3                   	ret

0000000000004b0d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4b0d:	55                   	push   %rbp
    4b0e:	48 89 e5             	mov    %rsp,%rbp
    4b11:	48 83 ec 20          	sub    $0x20,%rsp
    4b15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4b1d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    4b21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b29:	48 89 d6             	mov    %rdx,%rsi
    4b2c:	48 89 c7             	mov    %rax,%rdi
    4b2f:	e8 77 0a 00 00       	call   55ab <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    4b34:	c9                   	leave
    4b35:	c3                   	ret

0000000000004b36 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    4b36:	55                   	push   %rbp
    4b37:	48 89 e5             	mov    %rsp,%rbp
    4b3a:	48 83 ec 10          	sub    $0x10,%rsp
    4b3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    4b46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b4e:	48 89 d6             	mov    %rdx,%rsi
    4b51:	48 89 c7             	mov    %rax,%rdi
    4b54:	e8 7b 0a 00 00       	call   55d4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    4b59:	90                   	nop
    4b5a:	c9                   	leave
    4b5b:	c3                   	ret

0000000000004b5c <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    4b5c:	55                   	push   %rbp
    4b5d:	48 89 e5             	mov    %rsp,%rbp
    4b60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4b68:	90                   	nop
    4b69:	5d                   	pop    %rbp
    4b6a:	c3                   	ret

0000000000004b6b <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4b6b:	55                   	push   %rbp
    4b6c:	48 89 e5             	mov    %rsp,%rbp
    4b6f:	48 83 ec 20          	sub    $0x20,%rsp
    4b73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4b7b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4b7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b83:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b8b:	48 89 ce             	mov    %rcx,%rsi
    4b8e:	48 89 c7             	mov    %rax,%rdi
    4b91:	e8 4e 0a 00 00       	call   55e4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    4b96:	90                   	nop
    4b97:	c9                   	leave
    4b98:	c3                   	ret

0000000000004b99 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4b99:	55                   	push   %rbp
    4b9a:	48 89 e5             	mov    %rsp,%rbp
    4b9d:	48 83 ec 20          	sub    $0x20,%rsp
    4ba1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4ba5:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    4bac:	ff ff 0f 
    4baf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4bb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4bb7:	48 89 c7             	mov    %rax,%rdi
    4bba:	e8 5f 0a 00 00       	call   561e <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    4bbf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4bc3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4bc7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4bcb:	48 89 d6             	mov    %rdx,%rsi
    4bce:	48 89 c7             	mov    %rax,%rdi
    4bd1:	e8 49 09 00 00       	call   551f <_ZSt3minImERKT_S2_S2_>
    4bd6:	48 8b 00             	mov    (%rax),%rax
      }
    4bd9:	c9                   	leave
    4bda:	c3                   	ret
    4bdb:	90                   	nop

0000000000004bdc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    4bdc:	55                   	push   %rbp
    4bdd:	48 89 e5             	mov    %rsp,%rbp
    4be0:	48 83 ec 10          	sub    $0x10,%rsp
    4be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4be8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    4bec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bf4:	48 89 d6             	mov    %rdx,%rsi
    4bf7:	48 89 c7             	mov    %rax,%rdi
    4bfa:	e8 3b f6 ff ff       	call   423a <_ZNSaIPKcEC1ERKS1_>
    4bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c03:	48 89 c7             	mov    %rax,%rdi
    4c06:	e8 2d 0a 00 00       	call   5638 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    4c0b:	90                   	nop
    4c0c:	c9                   	leave
    4c0d:	c3                   	ret

0000000000004c0e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    4c0e:	55                   	push   %rbp
    4c0f:	48 89 e5             	mov    %rsp,%rbp
    4c12:	48 83 ec 10          	sub    $0x10,%rsp
    4c16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4c1e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c26:	48 89 d6             	mov    %rdx,%rsi
    4c29:	48 89 c7             	mov    %rax,%rdi
    4c2c:	e8 35 0a 00 00       	call   5666 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    4c31:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4c35:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4c38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c3c:	48 8b 10             	mov    (%rax),%rdx
    4c3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c43:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c4b:	48 8b 00             	mov    (%rax),%rax
    4c4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c52:	48 c1 e2 03          	shl    $0x3,%rdx
    4c56:	48 01 c2             	add    %rax,%rdx
    4c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c5d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4c61:	90                   	nop
    4c62:	c9                   	leave
    4c63:	c3                   	ret

0000000000004c64 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4c64:	55                   	push   %rbp
    4c65:	48 89 e5             	mov    %rsp,%rbp
    4c68:	48 83 ec 20          	sub    $0x20,%rsp
    4c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4c74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    4c78:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c80:	48 89 d6             	mov    %rdx,%rsi
    4c83:	48 89 c7             	mov    %rax,%rdi
    4c86:	e8 0e 0a 00 00       	call   5699 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    4c8b:	c9                   	leave
    4c8c:	c3                   	ret

0000000000004c8d <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    4c8d:	55                   	push   %rbp
    4c8e:	48 89 e5             	mov    %rsp,%rbp
    4c91:	48 83 ec 10          	sub    $0x10,%rsp
    4c95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    4c9d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4ca1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ca5:	48 89 d6             	mov    %rdx,%rsi
    4ca8:	48 89 c7             	mov    %rax,%rdi
    4cab:	e8 12 0a 00 00       	call   56c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    4cb0:	90                   	nop
    4cb1:	c9                   	leave
    4cb2:	c3                   	ret

0000000000004cb3 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    4cb3:	55                   	push   %rbp
    4cb4:	48 89 e5             	mov    %rsp,%rbp
    4cb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    4cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cbf:	5d                   	pop    %rbp
    4cc0:	c3                   	ret

0000000000004cc1 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    4cc1:	55                   	push   %rbp
    4cc2:	48 89 e5             	mov    %rsp,%rbp
    4cc5:	48 83 ec 20          	sub    $0x20,%rsp
    4cc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ccd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4cd1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    4cd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cd9:	48 89 c7             	mov    %rax,%rdi
    4cdc:	e8 d2 ff ff ff       	call   4cb3 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4ce1:	48 89 c2             	mov    %rax,%rdx
    4ce4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cec:	48 89 ce             	mov    %rcx,%rsi
    4cef:	48 89 c7             	mov    %rax,%rdi
    4cf2:	e8 db 09 00 00       	call   56d2 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    4cf7:	90                   	nop
    4cf8:	c9                   	leave
    4cf9:	c3                   	ret

0000000000004cfa <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    4cfa:	55                   	push   %rbp
    4cfb:	48 89 e5             	mov    %rsp,%rbp
    4cfe:	48 83 ec 20          	sub    $0x20,%rsp
    4d02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    4d06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d0a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4d0e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4d12:	48 89 d6             	mov    %rdx,%rsi
    4d15:	48 89 c7             	mov    %rax,%rdi
    4d18:	e8 f7 09 00 00       	call   5714 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d21:	c9                   	leave
    4d22:	c3                   	ret
    4d23:	90                   	nop

0000000000004d24 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    4d24:	55                   	push   %rbp
    4d25:	48 89 e5             	mov    %rsp,%rbp
    4d28:	53                   	push   %rbx
    4d29:	48 83 ec 68          	sub    $0x68,%rsp
    4d2d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    4d31:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    4d35:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    4d39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4d3d:	48 8d 15 a5 6b 00 00 	lea    0x6ba5(%rip),%rdx        # b8e9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xf9>
    4d44:	be 01 00 00 00       	mov    $0x1,%esi
    4d49:	48 89 c7             	mov    %rax,%rdi
    4d4c:	e8 e1 09 00 00       	call   5732 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    4d51:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    4d55:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4d59:	48 8b 00             	mov    (%rax),%rax
    4d5c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    4d60:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4d64:	48 8b 40 08          	mov    0x8(%rax),%rax
    4d68:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    4d6c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4d70:	48 89 c7             	mov    %rax,%rdi
    4d73:	e8 82 0a 00 00       	call   57fa <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    4d78:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4d7c:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    4d80:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4d84:	48 89 d6             	mov    %rdx,%rsi
    4d87:	48 89 c7             	mov    %rax,%rdi
    4d8a:	e8 90 0a 00 00       	call   581f <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    4d8f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    4d93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4d97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4d9b:	48 89 d6             	mov    %rdx,%rsi
    4d9e:	48 89 c7             	mov    %rax,%rdi
    4da1:	e8 c0 08 00 00       	call   5666 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    4da6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    4daa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4dae:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    4db2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4db6:	48 89 c7             	mov    %rax,%rdi
    4db9:	e8 f5 fe ff ff       	call   4cb3 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    4dbe:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    4dc1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4dc5:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    4dcc:	00 
	  _Alloc_traits::construct(this->_M_impl,
    4dcd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4dd1:	48 01 c1             	add    %rax,%rcx
    4dd4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4dd8:	48 89 ce             	mov    %rcx,%rsi
    4ddb:	48 89 c7             	mov    %rax,%rdi
    4dde:	e8 de fe ff ff       	call   4cc1 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    4de3:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    4dea:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    4deb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4def:	48 89 c7             	mov    %rax,%rdi
    4df2:	e8 59 f3 ff ff       	call   4150 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4df7:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    4dfa:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4dfe:	48 89 c7             	mov    %rax,%rdi
    4e01:	e8 8e 0a 00 00       	call   5894 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4e06:	48 8b 30             	mov    (%rax),%rsi
    4e09:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4e0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e11:	48 89 d9             	mov    %rbx,%rcx
    4e14:	48 89 c7             	mov    %rax,%rdi
    4e17:	e8 45 0a 00 00       	call   5861 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    4e1c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    4e20:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    4e25:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4e29:	48 89 c7             	mov    %rax,%rdi
    4e2c:	e8 1f f3 ff ff       	call   4150 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4e31:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    4e34:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4e38:	48 89 c7             	mov    %rax,%rdi
    4e3b:	e8 54 0a 00 00       	call   5894 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    4e40:	48 8b 00             	mov    (%rax),%rax
    4e43:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    4e47:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    4e4b:	48 89 d9             	mov    %rbx,%rcx
    4e4e:	48 89 c7             	mov    %rax,%rdi
    4e51:	e8 0b 0a 00 00       	call   5861 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    4e56:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    4e5a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    4e5e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4e62:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    4e66:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    4e6a:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    4e6e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4e72:	48 89 ce             	mov    %rcx,%rsi
    4e75:	48 89 c7             	mov    %rax,%rdi
    4e78:	e8 e3 f3 ff ff       	call   4260 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    4e7d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4e81:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4e85:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    4e88:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4e8c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    4e90:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    4e94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e98:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4e9f:	00 
    4ea0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4ea4:	48 01 c2             	add    %rax,%rdx
    4ea7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4eab:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    4eaf:	90                   	nop
    4eb0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4eb4:	c9                   	leave
    4eb5:	c3                   	ret

0000000000004eb6 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    4eb6:	55                   	push   %rbp
    4eb7:	48 89 e5             	mov    %rsp,%rbp
    4eba:	48 83 ec 20          	sub    $0x20,%rsp
    4ebe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    4ec2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ec6:	48 89 c7             	mov    %rax,%rdi
    4ec9:	e8 2c fe ff ff       	call   4cfa <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    4ece:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4ed2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4ed6:	be 01 00 00 00       	mov    $0x1,%esi
    4edb:	48 89 c7             	mov    %rax,%rdi
    4ede:	e8 bf 09 00 00       	call   58a2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    4ee3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4ee7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    4eeb:	48 89 c7             	mov    %rax,%rdi
    4eee:	e8 f1 09 00 00       	call   58e4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    4ef3:	c9                   	leave
    4ef4:	c3                   	ret
    4ef5:	90                   	nop

0000000000004ef6 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    4ef6:	55                   	push   %rbp
    4ef7:	48 89 e5             	mov    %rsp,%rbp
    4efa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4efe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4f02:	90                   	nop
    4f03:	5d                   	pop    %rbp
    4f04:	c3                   	ret

0000000000004f05 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4f05:	55                   	push   %rbp
    4f06:	48 89 e5             	mov    %rsp,%rbp
    4f09:	48 83 ec 20          	sub    $0x20,%rsp
    4f0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f11:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4f15:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4f19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4f1d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f25:	48 89 ce             	mov    %rcx,%rsi
    4f28:	48 89 c7             	mov    %rax,%rdi
    4f2b:	e8 c6 09 00 00       	call   58f6 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    4f30:	90                   	nop
    4f31:	c9                   	leave
    4f32:	c3                   	ret

0000000000004f33 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    4f33:	55                   	push   %rbp
    4f34:	48 89 e5             	mov    %rsp,%rbp
    4f37:	48 83 ec 20          	sub    $0x20,%rsp
    4f3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    4f3f:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    4f46:	03 3f 00 
    4f49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    4f4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f51:	48 89 c7             	mov    %rax,%rdi
    4f54:	e8 ce 09 00 00       	call   5927 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    4f59:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4f5d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4f61:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4f65:	48 89 d6             	mov    %rdx,%rsi
    4f68:	48 89 c7             	mov    %rax,%rdi
    4f6b:	e8 af 05 00 00       	call   551f <_ZSt3minImERKT_S2_S2_>
    4f70:	48 8b 00             	mov    (%rax),%rax
      }
    4f73:	c9                   	leave
    4f74:	c3                   	ret
    4f75:	90                   	nop

0000000000004f76 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    4f76:	55                   	push   %rbp
    4f77:	48 89 e5             	mov    %rsp,%rbp
    4f7a:	48 83 ec 10          	sub    $0x10,%rsp
    4f7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    4f86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f8e:	48 89 d6             	mov    %rdx,%rsi
    4f91:	48 89 c7             	mov    %rax,%rdi
    4f94:	e8 5d f4 ff ff       	call   43f6 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    4f99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f9d:	48 89 c7             	mov    %rax,%rdi
    4fa0:	e8 9d 09 00 00       	call   5942 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    4fa5:	90                   	nop
    4fa6:	c9                   	leave
    4fa7:	c3                   	ret

0000000000004fa8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    4fa8:	55                   	push   %rbp
    4fa9:	48 89 e5             	mov    %rsp,%rbp
    4fac:	48 83 ec 10          	sub    $0x10,%rsp
    4fb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4fb8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4fbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc0:	48 89 d6             	mov    %rdx,%rsi
    4fc3:	48 89 c7             	mov    %rax,%rdi
    4fc6:	e8 a5 09 00 00       	call   5970 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    4fcb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4fcf:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    4fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fd6:	48 8b 10             	mov    (%rax),%rdx
    4fd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fdd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4fe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fe5:	48 8b 08             	mov    (%rax),%rcx
    4fe8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4fec:	48 89 d0             	mov    %rdx,%rax
    4fef:	48 c1 e0 06          	shl    $0x6,%rax
    4ff3:	48 01 d0             	add    %rdx,%rax
    4ff6:	48 c1 e0 03          	shl    $0x3,%rax
    4ffa:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5002:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5006:	90                   	nop
    5007:	c9                   	leave
    5008:	c3                   	ret

0000000000005009 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5009:	55                   	push   %rbp
    500a:	48 89 e5             	mov    %rsp,%rbp
    500d:	48 83 ec 20          	sub    $0x20,%rsp
    5011:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5015:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5019:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    501d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5025:	48 89 d6             	mov    %rdx,%rsi
    5028:	48 89 c7             	mov    %rax,%rdi
    502b:	e8 73 09 00 00       	call   59a3 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    5030:	c9                   	leave
    5031:	c3                   	ret

0000000000005032 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5032:	55                   	push   %rbp
    5033:	48 89 e5             	mov    %rsp,%rbp
    5036:	48 83 ec 10          	sub    $0x10,%rsp
    503a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    503e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    5042:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    504a:	48 89 d6             	mov    %rdx,%rsi
    504d:	48 89 c7             	mov    %rax,%rdi
    5050:	e8 77 09 00 00       	call   59cc <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    5055:	90                   	nop
    5056:	c9                   	leave
    5057:	c3                   	ret

0000000000005058 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
    5058:	55                   	push   %rbp
    5059:	48 89 e5             	mov    %rsp,%rbp
    505c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5060:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5064:	90                   	nop
    5065:	5d                   	pop    %rbp
    5066:	c3                   	ret

0000000000005067 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5067:	55                   	push   %rbp
    5068:	48 89 e5             	mov    %rsp,%rbp
    506b:	48 83 ec 20          	sub    $0x20,%rsp
    506f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5073:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5077:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    507b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    507f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5087:	48 89 ce             	mov    %rcx,%rsi
    508a:	48 89 c7             	mov    %rax,%rdi
    508d:	e8 4a 09 00 00       	call   59dc <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    5092:	90                   	nop
    5093:	c9                   	leave
    5094:	c3                   	ret

0000000000005095 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5095:	55                   	push   %rbp
    5096:	48 89 e5             	mov    %rsp,%rbp
    5099:	48 83 ec 20          	sub    $0x20,%rsp
    509d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    50a1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    50a8:	ff ff 0f 
    50ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    50af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50b3:	48 89 c7             	mov    %rax,%rdi
    50b6:	e8 5b 09 00 00       	call   5a16 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    50bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    50bf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    50c3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    50c7:	48 89 d6             	mov    %rdx,%rsi
    50ca:	48 89 c7             	mov    %rax,%rdi
    50cd:	e8 4d 04 00 00       	call   551f <_ZSt3minImERKT_S2_S2_>
    50d2:	48 8b 00             	mov    (%rax),%rax
      }
    50d5:	c9                   	leave
    50d6:	c3                   	ret
    50d7:	90                   	nop

00000000000050d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    50d8:	55                   	push   %rbp
    50d9:	48 89 e5             	mov    %rsp,%rbp
    50dc:	48 83 ec 10          	sub    $0x10,%rsp
    50e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    50e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    50ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f0:	48 89 d6             	mov    %rdx,%rsi
    50f3:	48 89 c7             	mov    %rax,%rdi
    50f6:	e8 b7 f4 ff ff       	call   45b2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    50fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ff:	48 89 c7             	mov    %rax,%rdi
    5102:	e8 29 09 00 00       	call   5a30 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5107:	90                   	nop
    5108:	c9                   	leave
    5109:	c3                   	ret

000000000000510a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    510a:	55                   	push   %rbp
    510b:	48 89 e5             	mov    %rsp,%rbp
    510e:	48 83 ec 10          	sub    $0x10,%rsp
    5112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5116:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    511a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    511e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5122:	48 89 d6             	mov    %rdx,%rsi
    5125:	48 89 c7             	mov    %rax,%rdi
    5128:	e8 31 09 00 00       	call   5a5e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    512d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5131:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    5134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5138:	48 8b 10             	mov    (%rax),%rdx
    513b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    513f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5147:	48 8b 00             	mov    (%rax),%rax
    514a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    514e:	48 c1 e2 03          	shl    $0x3,%rdx
    5152:	48 01 c2             	add    %rax,%rdx
    5155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5159:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    515d:	90                   	nop
    515e:	c9                   	leave
    515f:	c3                   	ret

0000000000005160 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5160:	55                   	push   %rbp
    5161:	48 89 e5             	mov    %rsp,%rbp
    5164:	48 83 ec 20          	sub    $0x20,%rsp
    5168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    516c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5170:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    5174:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    517c:	48 89 d6             	mov    %rdx,%rsi
    517f:	48 89 c7             	mov    %rax,%rdi
    5182:	e8 0a 09 00 00       	call   5a91 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    5187:	c9                   	leave
    5188:	c3                   	ret

0000000000005189 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5189:	55                   	push   %rbp
    518a:	48 89 e5             	mov    %rsp,%rbp
    518d:	48 83 ec 10          	sub    $0x10,%rsp
    5191:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5195:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    5199:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    519d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a1:	48 89 d6             	mov    %rdx,%rsi
    51a4:	48 89 c7             	mov    %rax,%rdi
    51a7:	e8 0e 09 00 00       	call   5aba <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    51ac:	90                   	nop
    51ad:	c9                   	leave
    51ae:	c3                   	ret
    51af:	90                   	nop

00000000000051b0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    51b0:	55                   	push   %rbp
    51b1:	48 89 e5             	mov    %rsp,%rbp
    51b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    51bc:	90                   	nop
    51bd:	5d                   	pop    %rbp
    51be:	c3                   	ret

00000000000051bf <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    51bf:	55                   	push   %rbp
    51c0:	48 89 e5             	mov    %rsp,%rbp
    51c3:	48 83 ec 20          	sub    $0x20,%rsp
    51c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    51cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    51d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    51d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    51db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51df:	48 89 ce             	mov    %rcx,%rsi
    51e2:	48 89 c7             	mov    %rax,%rdi
    51e5:	e8 e0 08 00 00       	call   5aca <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    51ea:	90                   	nop
    51eb:	c9                   	leave
    51ec:	c3                   	ret

00000000000051ed <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    51ed:	55                   	push   %rbp
    51ee:	48 89 e5             	mov    %rsp,%rbp
    51f1:	48 83 ec 20          	sub    $0x20,%rsp
    51f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    51f9:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    5200:	55 55 05 
    5203:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5207:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    520b:	48 89 c7             	mov    %rax,%rdi
    520e:	e8 e8 08 00 00       	call   5afb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    5213:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5217:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    521b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    521f:	48 89 d6             	mov    %rdx,%rsi
    5222:	48 89 c7             	mov    %rax,%rdi
    5225:	e8 f5 02 00 00       	call   551f <_ZSt3minImERKT_S2_S2_>
    522a:	48 8b 00             	mov    (%rax),%rax
      }
    522d:	c9                   	leave
    522e:	c3                   	ret
    522f:	90                   	nop

0000000000005230 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5230:	55                   	push   %rbp
    5231:	48 89 e5             	mov    %rsp,%rbp
    5234:	48 83 ec 10          	sub    $0x10,%rsp
    5238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    523c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5240:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5248:	48 89 d6             	mov    %rdx,%rsi
    524b:	48 89 c7             	mov    %rax,%rdi
    524e:	e8 1b f5 ff ff       	call   476e <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    5253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5257:	48 89 c7             	mov    %rax,%rdi
    525a:	e8 b7 08 00 00       	call   5b16 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    525f:	90                   	nop
    5260:	c9                   	leave
    5261:	c3                   	ret

0000000000005262 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5262:	55                   	push   %rbp
    5263:	48 89 e5             	mov    %rsp,%rbp
    5266:	48 83 ec 10          	sub    $0x10,%rsp
    526a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    526e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5272:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    527a:	48 89 d6             	mov    %rdx,%rsi
    527d:	48 89 c7             	mov    %rax,%rdi
    5280:	e8 bf 08 00 00       	call   5b44 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    5285:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5289:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    528c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5290:	48 8b 10             	mov    (%rax),%rdx
    5293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5297:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    529b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    529f:	48 8b 08             	mov    (%rax),%rcx
    52a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52a6:	48 89 d0             	mov    %rdx,%rax
    52a9:	48 01 c0             	add    %rax,%rax
    52ac:	48 01 d0             	add    %rdx,%rax
    52af:	48 c1 e0 03          	shl    $0x3,%rax
    52b3:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    52b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    52bf:	90                   	nop
    52c0:	c9                   	leave
    52c1:	c3                   	ret

00000000000052c2 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    52c2:	55                   	push   %rbp
    52c3:	48 89 e5             	mov    %rsp,%rbp
    52c6:	48 83 ec 20          	sub    $0x20,%rsp
    52ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    52d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52de:	48 89 d6             	mov    %rdx,%rsi
    52e1:	48 89 c7             	mov    %rax,%rdi
    52e4:	e8 8e 08 00 00       	call   5b77 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    52e9:	c9                   	leave
    52ea:	c3                   	ret

00000000000052eb <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    52eb:	55                   	push   %rbp
    52ec:	48 89 e5             	mov    %rsp,%rbp
    52ef:	48 83 ec 10          	sub    $0x10,%rsp
    52f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    52fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5303:	48 89 d6             	mov    %rdx,%rsi
    5306:	48 89 c7             	mov    %rax,%rdi
    5309:	e8 92 08 00 00       	call   5ba0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    530e:	90                   	nop
    530f:	c9                   	leave
    5310:	c3                   	ret
    5311:	90                   	nop

0000000000005312 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    5312:	55                   	push   %rbp
    5313:	48 89 e5             	mov    %rsp,%rbp
    5316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    531a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    531e:	90                   	nop
    531f:	5d                   	pop    %rbp
    5320:	c3                   	ret

0000000000005321 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5321:	55                   	push   %rbp
    5322:	48 89 e5             	mov    %rsp,%rbp
    5325:	48 83 ec 20          	sub    $0x20,%rsp
    5329:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    532d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5331:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5335:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5339:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    533d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5341:	48 89 ce             	mov    %rcx,%rsi
    5344:	48 89 c7             	mov    %rax,%rdi
    5347:	e8 64 08 00 00       	call   5bb0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    534c:	90                   	nop
    534d:	c9                   	leave
    534e:	c3                   	ret

000000000000534f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    534f:	55                   	push   %rbp
    5350:	48 89 e5             	mov    %rsp,%rbp
    5353:	48 83 ec 20          	sub    $0x20,%rsp
    5357:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    535b:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    5362:	49 92 04 
    5365:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    536d:	48 89 c7             	mov    %rax,%rdi
    5370:	e8 74 08 00 00       	call   5be9 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    5375:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5379:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    537d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5381:	48 89 d6             	mov    %rdx,%rsi
    5384:	48 89 c7             	mov    %rax,%rdi
    5387:	e8 93 01 00 00       	call   551f <_ZSt3minImERKT_S2_S2_>
    538c:	48 8b 00             	mov    (%rax),%rax
      }
    538f:	c9                   	leave
    5390:	c3                   	ret
    5391:	90                   	nop

0000000000005392 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5392:	55                   	push   %rbp
    5393:	48 89 e5             	mov    %rsp,%rbp
    5396:	48 83 ec 10          	sub    $0x10,%rsp
    539a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    539e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    53a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53aa:	48 89 d6             	mov    %rdx,%rsi
    53ad:	48 89 c7             	mov    %rax,%rdi
    53b0:	e8 27 f6 ff ff       	call   49dc <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    53b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b9:	48 89 c7             	mov    %rax,%rdi
    53bc:	e8 43 08 00 00       	call   5c04 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    53c1:	90                   	nop
    53c2:	c9                   	leave
    53c3:	c3                   	ret

00000000000053c4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    53c4:	55                   	push   %rbp
    53c5:	48 89 e5             	mov    %rsp,%rbp
    53c8:	48 83 ec 10          	sub    $0x10,%rsp
    53cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    53d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53dc:	48 89 d6             	mov    %rdx,%rsi
    53df:	48 89 c7             	mov    %rax,%rdi
    53e2:	e8 4b 08 00 00       	call   5c32 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    53e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    53eb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    53ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f2:	48 8b 10             	mov    (%rax),%rdx
    53f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    53fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5401:	48 8b 08             	mov    (%rax),%rcx
    5404:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5408:	48 89 d0             	mov    %rdx,%rax
    540b:	48 c1 e0 03          	shl    $0x3,%rax
    540f:	48 29 d0             	sub    %rdx,%rax
    5412:	48 c1 e0 02          	shl    $0x2,%rax
    5416:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    541a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    541e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5422:	90                   	nop
    5423:	c9                   	leave
    5424:	c3                   	ret

0000000000005425 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5425:	55                   	push   %rbp
    5426:	48 89 e5             	mov    %rsp,%rbp
    5429:	48 83 ec 20          	sub    $0x20,%rsp
    542d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5431:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5435:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    5439:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    543d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5441:	48 89 d6             	mov    %rdx,%rsi
    5444:	48 89 c7             	mov    %rax,%rdi
    5447:	e8 19 08 00 00       	call   5c65 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    544c:	c9                   	leave
    544d:	c3                   	ret

000000000000544e <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    544e:	55                   	push   %rbp
    544f:	48 89 e5             	mov    %rsp,%rbp
    5452:	48 83 ec 10          	sub    $0x10,%rsp
    5456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    545a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    545e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5466:	48 89 d6             	mov    %rdx,%rsi
    5469:	48 89 c7             	mov    %rax,%rdi
    546c:	e8 1d 08 00 00       	call   5c8e <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    5471:	90                   	nop
    5472:	c9                   	leave
    5473:	c3                   	ret

0000000000005474 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    5474:	55                   	push   %rbp
    5475:	48 89 e5             	mov    %rsp,%rbp
    5478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    547c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5480:	5d                   	pop    %rbp
    5481:	c3                   	ret

0000000000005482 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    5482:	55                   	push   %rbp
    5483:	48 89 e5             	mov    %rsp,%rbp
    5486:	53                   	push   %rbx
    5487:	48 83 ec 18          	sub    $0x18,%rsp
    548b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    548f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    5493:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5497:	48 89 c7             	mov    %rax,%rdi
    549a:	e8 fb f4 ff ff       	call   499a <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    549f:	48 89 c3             	mov    %rax,%rbx
    54a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54a6:	48 89 c7             	mov    %rax,%rdi
    54a9:	e8 ef 07 00 00       	call   5c9d <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    54ae:	48 89 de             	mov    %rbx,%rsi
    54b1:	48 89 c7             	mov    %rax,%rdi
    54b4:	e8 f2 07 00 00       	call   5cab <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    54b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54bd:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    54c1:	90                   	nop
    54c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    54c6:	c9                   	leave
    54c7:	c3                   	ret

00000000000054c8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    54c8:	55                   	push   %rbp
    54c9:	48 89 e5             	mov    %rsp,%rbp
    54cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54d4:	90                   	nop
    54d5:	5d                   	pop    %rbp
    54d6:	c3                   	ret

00000000000054d7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    54d7:	55                   	push   %rbp
    54d8:	48 89 e5             	mov    %rsp,%rbp
    54db:	48 83 ec 20          	sub    $0x20,%rsp
    54df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    54eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    54ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    54f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f7:	48 89 ce             	mov    %rcx,%rsi
    54fa:	48 89 c7             	mov    %rax,%rdi
    54fd:	e8 fa 07 00 00       	call   5cfc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    5502:	90                   	nop
    5503:	c9                   	leave
    5504:	c3                   	ret

0000000000005505 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5505:	55                   	push   %rbp
    5506:	48 89 e5             	mov    %rsp,%rbp
    5509:	48 83 ec 10          	sub    $0x10,%rsp
    550d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5515:	48 89 c7             	mov    %rax,%rdi
    5518:	e8 19 08 00 00       	call   5d36 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    551d:	c9                   	leave
    551e:	c3                   	ret

000000000000551f <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    551f:	55                   	push   %rbp
    5520:	48 89 e5             	mov    %rsp,%rbp
    5523:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5527:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    552b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    552f:	48 8b 10             	mov    (%rax),%rdx
    5532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5536:	48 8b 00             	mov    (%rax),%rax
    5539:	48 39 c2             	cmp    %rax,%rdx
    553c:	73 06                	jae    5544 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    553e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5542:	eb 04                	jmp    5548 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5548:	5d                   	pop    %rbp
    5549:	c3                   	ret

000000000000554a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    554a:	55                   	push   %rbp
    554b:	48 89 e5             	mov    %rsp,%rbp
    554e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5556:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    555d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5561:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5568:	00 
    5569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    556d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5574:	00 
	{ }
    5575:	90                   	nop
    5576:	5d                   	pop    %rbp
    5577:	c3                   	ret

0000000000005578 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5578:	55                   	push   %rbp
    5579:	48 89 e5             	mov    %rsp,%rbp
    557c:	48 83 ec 10          	sub    $0x10,%rsp
    5580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5584:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5588:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    558d:	74 15                	je     55a4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    558f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5593:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5597:	48 89 d6             	mov    %rdx,%rsi
    559a:	48 89 c7             	mov    %rax,%rdi
    559d:	e8 ae 07 00 00       	call   5d50 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    55a2:	eb 05                	jmp    55a9 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    55a4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    55a9:	c9                   	leave
    55aa:	c3                   	ret

00000000000055ab <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    55ab:	55                   	push   %rbp
    55ac:	48 89 e5             	mov    %rsp,%rbp
    55af:	48 83 ec 20          	sub    $0x20,%rsp
    55b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    55b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    55bb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    55bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    55c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55c7:	48 89 d6             	mov    %rdx,%rsi
    55ca:	48 89 c7             	mov    %rax,%rdi
    55cd:	e8 a8 07 00 00       	call   5d7a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    55d2:	c9                   	leave
    55d3:	c3                   	ret

00000000000055d4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    55d4:	55                   	push   %rbp
    55d5:	48 89 e5             	mov    %rsp,%rbp
    55d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55e0:	90                   	nop
    55e1:	5d                   	pop    %rbp
    55e2:	c3                   	ret
    55e3:	90                   	nop

00000000000055e4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    55e4:	55                   	push   %rbp
    55e5:	48 89 e5             	mov    %rsp,%rbp
    55e8:	48 83 ec 20          	sub    $0x20,%rsp
    55ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    55f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55fc:	48 89 d0             	mov    %rdx,%rax
    55ff:	48 c1 e0 06          	shl    $0x6,%rax
    5603:	48 01 d0             	add    %rdx,%rax
    5606:	48 c1 e0 02          	shl    $0x2,%rax
    560a:	48 89 c2             	mov    %rax,%rdx
    560d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5611:	48 89 d6             	mov    %rdx,%rsi
    5614:	48 89 c7             	mov    %rax,%rdi
    5617:	e8 a4 cb ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    561c:	c9                   	leave
    561d:	c3                   	ret

000000000000561e <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    561e:	55                   	push   %rbp
    561f:	48 89 e5             	mov    %rsp,%rbp
    5622:	48 83 ec 10          	sub    $0x10,%rsp
    5626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    562a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    562e:	48 89 c7             	mov    %rax,%rdi
    5631:	e8 a4 07 00 00       	call   5dda <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    5636:	c9                   	leave
    5637:	c3                   	ret

0000000000005638 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5638:	55                   	push   %rbp
    5639:	48 89 e5             	mov    %rsp,%rbp
    563c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5644:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    564b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    564f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5656:	00 
    5657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    565b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5662:	00 
	{ }
    5663:	90                   	nop
    5664:	5d                   	pop    %rbp
    5665:	c3                   	ret

0000000000005666 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5666:	55                   	push   %rbp
    5667:	48 89 e5             	mov    %rsp,%rbp
    566a:	48 83 ec 10          	sub    $0x10,%rsp
    566e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5676:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    567b:	74 15                	je     5692 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    567d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5681:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5685:	48 89 d6             	mov    %rdx,%rsi
    5688:	48 89 c7             	mov    %rax,%rdi
    568b:	e8 64 07 00 00       	call   5df4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    5690:	eb 05                	jmp    5697 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    5692:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5697:	c9                   	leave
    5698:	c3                   	ret

0000000000005699 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5699:	55                   	push   %rbp
    569a:	48 89 e5             	mov    %rsp,%rbp
    569d:	48 83 ec 20          	sub    $0x20,%rsp
    56a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    56a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    56a9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    56ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    56b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56b5:	48 89 d6             	mov    %rdx,%rsi
    56b8:	48 89 c7             	mov    %rax,%rdi
    56bb:	e8 5e 07 00 00       	call   5e1e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    56c0:	c9                   	leave
    56c1:	c3                   	ret

00000000000056c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    56c2:	55                   	push   %rbp
    56c3:	48 89 e5             	mov    %rsp,%rbp
    56c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    56ce:	90                   	nop
    56cf:	5d                   	pop    %rbp
    56d0:	c3                   	ret
    56d1:	90                   	nop

00000000000056d2 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    56d2:	55                   	push   %rbp
    56d3:	48 89 e5             	mov    %rsp,%rbp
    56d6:	53                   	push   %rbx
    56d7:	48 83 ec 28          	sub    $0x28,%rsp
    56db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    56df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    56e3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    56e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    56eb:	48 89 c6             	mov    %rax,%rsi
    56ee:	bf 08 00 00 00       	mov    $0x8,%edi
    56f3:	e8 9f dc ff ff       	call   3397 <_ZnwmPv>
    56f8:	48 89 c3             	mov    %rax,%rbx
    56fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56ff:	48 89 c7             	mov    %rax,%rdi
    5702:	e8 ac f5 ff ff       	call   4cb3 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    5707:	48 8b 00             	mov    (%rax),%rax
    570a:	48 89 03             	mov    %rax,(%rbx)
    570d:	90                   	nop
    570e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5712:	c9                   	leave
    5713:	c3                   	ret

0000000000005714 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5714:	55                   	push   %rbp
    5715:	48 89 e5             	mov    %rsp,%rbp
    5718:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    571c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5720:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5724:	48 8b 10             	mov    (%rax),%rdx
    5727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    572b:	48 89 10             	mov    %rdx,(%rax)
    572e:	90                   	nop
    572f:	5d                   	pop    %rbp
    5730:	c3                   	ret
    5731:	90                   	nop

0000000000005732 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    5732:	55                   	push   %rbp
    5733:	48 89 e5             	mov    %rsp,%rbp
    5736:	53                   	push   %rbx
    5737:	48 83 ec 38          	sub    $0x38,%rsp
    573b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    573f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5743:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    5747:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    574b:	48 89 c7             	mov    %rax,%rdi
    574e:	e8 29 07 00 00       	call   5e7c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    5753:	48 89 c3             	mov    %rax,%rbx
    5756:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    575a:	48 89 c7             	mov    %rax,%rdi
    575d:	e8 3c 07 00 00       	call   5e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    5762:	48 29 c3             	sub    %rax,%rbx
    5765:	48 89 da             	mov    %rbx,%rdx
    5768:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    576c:	48 39 c2             	cmp    %rax,%rdx
    576f:	0f 92 c0             	setb   %al
    5772:	84 c0                	test   %al,%al
    5774:	74 0c                	je     5782 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    5776:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    577a:	48 89 c7             	mov    %rax,%rdi
    577d:	e8 3e c9 ff ff       	call   20c0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    5782:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5786:	48 89 c7             	mov    %rax,%rdi
    5789:	e8 10 07 00 00       	call   5e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    578e:	48 89 c3             	mov    %rax,%rbx
    5791:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5795:	48 89 c7             	mov    %rax,%rdi
    5798:	e8 01 07 00 00       	call   5e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    579d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    57a1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    57a5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    57a9:	48 89 d6             	mov    %rdx,%rsi
    57ac:	48 89 c7             	mov    %rax,%rdi
    57af:	e8 0d 07 00 00       	call   5ec1 <_ZSt3maxImERKT_S2_S2_>
    57b4:	48 8b 00             	mov    (%rax),%rax
    57b7:	48 01 d8             	add    %rbx,%rax
    57ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    57be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57c2:	48 89 c7             	mov    %rax,%rdi
    57c5:	e8 d4 06 00 00       	call   5e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    57ca:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    57ce:	72 12                	jb     57e2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    57d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57d4:	48 89 c7             	mov    %rax,%rdi
    57d7:	e8 a0 06 00 00       	call   5e7c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    57dc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    57e0:	73 0e                	jae    57f0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    57e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57e6:	48 89 c7             	mov    %rax,%rdi
    57e9:	e8 8e 06 00 00       	call   5e7c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    57ee:	eb 04                	jmp    57f4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    57f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    57f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    57f8:	c9                   	leave
    57f9:	c3                   	ret

00000000000057fa <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    57fa:	55                   	push   %rbp
    57fb:	48 89 e5             	mov    %rsp,%rbp
    57fe:	48 83 ec 20          	sub    $0x20,%rsp
    5802:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    5806:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    580a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    580e:	48 89 d6             	mov    %rdx,%rsi
    5811:	48 89 c7             	mov    %rax,%rdi
    5814:	e8 fb fe ff ff       	call   5714 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    5819:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    581d:	c9                   	leave
    581e:	c3                   	ret

000000000000581f <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    581f:	55                   	push   %rbp
    5820:	48 89 e5             	mov    %rsp,%rbp
    5823:	53                   	push   %rbx
    5824:	48 83 ec 18          	sub    $0x18,%rsp
    5828:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    582c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    5830:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5834:	48 89 c7             	mov    %rax,%rdi
    5837:	e8 58 00 00 00       	call   5894 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    583c:	48 8b 18             	mov    (%rax),%rbx
    583f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5843:	48 89 c7             	mov    %rax,%rdi
    5846:	e8 49 00 00 00       	call   5894 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    584b:	48 8b 00             	mov    (%rax),%rax
    584e:	48 89 da             	mov    %rbx,%rdx
    5851:	48 29 c2             	sub    %rax,%rdx
    5854:	48 89 d0             	mov    %rdx,%rax
    5857:	48 c1 f8 03          	sar    $0x3,%rax
    585b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    585f:	c9                   	leave
    5860:	c3                   	ret

0000000000005861 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    5861:	55                   	push   %rbp
    5862:	48 89 e5             	mov    %rsp,%rbp
    5865:	48 83 ec 20          	sub    $0x20,%rsp
    5869:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    586d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5871:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5875:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    5879:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    587d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5881:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    5885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5889:	48 89 c7             	mov    %rax,%rdi
    588c:	e8 5b 06 00 00       	call   5eec <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    5891:	c9                   	leave
    5892:	c3                   	ret
    5893:	90                   	nop

0000000000005894 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5894:	55                   	push   %rbp
    5895:	48 89 e5             	mov    %rsp,%rbp
    5898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    589c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58a0:	5d                   	pop    %rbp
    58a1:	c3                   	ret

00000000000058a2 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    58a2:	55                   	push   %rbp
    58a3:	48 89 e5             	mov    %rsp,%rbp
    58a6:	48 83 ec 20          	sub    $0x20,%rsp
    58aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    58ae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    58b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58b6:	48 8b 00             	mov    (%rax),%rax
    58b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    58bd:	48 c1 e2 03          	shl    $0x3,%rdx
    58c1:	48 f7 da             	neg    %rdx
    58c4:	48 01 d0             	add    %rdx,%rax
    58c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    58cb:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    58cf:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    58d3:	48 89 d6             	mov    %rdx,%rsi
    58d6:	48 89 c7             	mov    %rax,%rdi
    58d9:	e8 36 fe ff ff       	call   5714 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    58de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    58e2:	c9                   	leave
    58e3:	c3                   	ret

00000000000058e4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    58e4:	55                   	push   %rbp
    58e5:	48 89 e5             	mov    %rsp,%rbp
    58e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    58ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58f0:	48 8b 00             	mov    (%rax),%rax
    58f3:	5d                   	pop    %rbp
    58f4:	c3                   	ret
    58f5:	90                   	nop

00000000000058f6 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    58f6:	55                   	push   %rbp
    58f7:	48 89 e5             	mov    %rsp,%rbp
    58fa:	48 83 ec 20          	sub    $0x20,%rsp
    58fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5902:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5906:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    590a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    590e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5915:	00 
    5916:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    591a:	48 89 d6             	mov    %rdx,%rsi
    591d:	48 89 c7             	mov    %rax,%rdi
    5920:	e8 9b c8 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    5925:	c9                   	leave
    5926:	c3                   	ret

0000000000005927 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5927:	55                   	push   %rbp
    5928:	48 89 e5             	mov    %rsp,%rbp
    592b:	48 83 ec 10          	sub    $0x10,%rsp
    592f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5937:	48 89 c7             	mov    %rax,%rdi
    593a:	e8 11 06 00 00       	call   5f50 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    593f:	c9                   	leave
    5940:	c3                   	ret
    5941:	90                   	nop

0000000000005942 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5942:	55                   	push   %rbp
    5943:	48 89 e5             	mov    %rsp,%rbp
    5946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    594a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    594e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5959:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5960:	00 
    5961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5965:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    596c:	00 
	{ }
    596d:	90                   	nop
    596e:	5d                   	pop    %rbp
    596f:	c3                   	ret

0000000000005970 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5970:	55                   	push   %rbp
    5971:	48 89 e5             	mov    %rsp,%rbp
    5974:	48 83 ec 10          	sub    $0x10,%rsp
    5978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    597c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5980:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5985:	74 15                	je     599c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    5987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    598b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    598f:	48 89 d6             	mov    %rdx,%rsi
    5992:	48 89 c7             	mov    %rax,%rdi
    5995:	e8 d0 05 00 00       	call   5f6a <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    599a:	eb 05                	jmp    59a1 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    599c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    59a1:	c9                   	leave
    59a2:	c3                   	ret

00000000000059a3 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    59a3:	55                   	push   %rbp
    59a4:	48 89 e5             	mov    %rsp,%rbp
    59a7:	48 83 ec 20          	sub    $0x20,%rsp
    59ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    59af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    59b3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    59b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    59bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59bf:	48 89 d6             	mov    %rdx,%rsi
    59c2:	48 89 c7             	mov    %rax,%rdi
    59c5:	e8 ca 05 00 00       	call   5f94 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    59ca:	c9                   	leave
    59cb:	c3                   	ret

00000000000059cc <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    59cc:	55                   	push   %rbp
    59cd:	48 89 e5             	mov    %rsp,%rbp
    59d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59d8:	90                   	nop
    59d9:	5d                   	pop    %rbp
    59da:	c3                   	ret
    59db:	90                   	nop

00000000000059dc <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    59dc:	55                   	push   %rbp
    59dd:	48 89 e5             	mov    %rsp,%rbp
    59e0:	48 83 ec 20          	sub    $0x20,%rsp
    59e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    59f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    59f4:	48 89 d0             	mov    %rdx,%rax
    59f7:	48 c1 e0 06          	shl    $0x6,%rax
    59fb:	48 01 d0             	add    %rdx,%rax
    59fe:	48 c1 e0 03          	shl    $0x3,%rax
    5a02:	48 89 c2             	mov    %rax,%rdx
    5a05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a09:	48 89 d6             	mov    %rdx,%rsi
    5a0c:	48 89 c7             	mov    %rax,%rdi
    5a0f:	e8 ac c7 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    5a14:	c9                   	leave
    5a15:	c3                   	ret

0000000000005a16 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5a16:	55                   	push   %rbp
    5a17:	48 89 e5             	mov    %rsp,%rbp
    5a1a:	48 83 ec 10          	sub    $0x10,%rsp
    5a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a26:	48 89 c7             	mov    %rax,%rdi
    5a29:	e8 c6 05 00 00       	call   5ff4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    5a2e:	c9                   	leave
    5a2f:	c3                   	ret

0000000000005a30 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5a30:	55                   	push   %rbp
    5a31:	48 89 e5             	mov    %rsp,%rbp
    5a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a3c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5a43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a47:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5a4e:	00 
    5a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a53:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5a5a:	00 
	{ }
    5a5b:	90                   	nop
    5a5c:	5d                   	pop    %rbp
    5a5d:	c3                   	ret

0000000000005a5e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5a5e:	55                   	push   %rbp
    5a5f:	48 89 e5             	mov    %rsp,%rbp
    5a62:	48 83 ec 10          	sub    $0x10,%rsp
    5a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5a6e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5a73:	74 15                	je     5a8a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    5a75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a7d:	48 89 d6             	mov    %rdx,%rsi
    5a80:	48 89 c7             	mov    %rax,%rdi
    5a83:	e8 86 05 00 00       	call   600e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    5a88:	eb 05                	jmp    5a8f <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    5a8a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5a8f:	c9                   	leave
    5a90:	c3                   	ret

0000000000005a91 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5a91:	55                   	push   %rbp
    5a92:	48 89 e5             	mov    %rsp,%rbp
    5a95:	48 83 ec 20          	sub    $0x20,%rsp
    5a99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5a9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    5aa1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    5aa5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5aa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5aad:	48 89 d6             	mov    %rdx,%rsi
    5ab0:	48 89 c7             	mov    %rax,%rdi
    5ab3:	e8 80 05 00 00       	call   6038 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    5ab8:	c9                   	leave
    5ab9:	c3                   	ret

0000000000005aba <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    5aba:	55                   	push   %rbp
    5abb:	48 89 e5             	mov    %rsp,%rbp
    5abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ac6:	90                   	nop
    5ac7:	5d                   	pop    %rbp
    5ac8:	c3                   	ret
    5ac9:	90                   	nop

0000000000005aca <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5aca:	55                   	push   %rbp
    5acb:	48 89 e5             	mov    %rsp,%rbp
    5ace:	48 83 ec 20          	sub    $0x20,%rsp
    5ad2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ad6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ada:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5ade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ae2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5ae9:	00 
    5aea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5aee:	48 89 d6             	mov    %rdx,%rsi
    5af1:	48 89 c7             	mov    %rax,%rdi
    5af4:	e8 c7 c6 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    5af9:	c9                   	leave
    5afa:	c3                   	ret

0000000000005afb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5afb:	55                   	push   %rbp
    5afc:	48 89 e5             	mov    %rsp,%rbp
    5aff:	48 83 ec 10          	sub    $0x10,%rsp
    5b03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b0b:	48 89 c7             	mov    %rax,%rdi
    5b0e:	e8 83 05 00 00       	call   6096 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    5b13:	c9                   	leave
    5b14:	c3                   	ret
    5b15:	90                   	nop

0000000000005b16 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5b16:	55                   	push   %rbp
    5b17:	48 89 e5             	mov    %rsp,%rbp
    5b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b22:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b2d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5b34:	00 
    5b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b39:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5b40:	00 
	{ }
    5b41:	90                   	nop
    5b42:	5d                   	pop    %rbp
    5b43:	c3                   	ret

0000000000005b44 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5b44:	55                   	push   %rbp
    5b45:	48 89 e5             	mov    %rsp,%rbp
    5b48:	48 83 ec 10          	sub    $0x10,%rsp
    5b4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5b54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5b59:	74 15                	je     5b70 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    5b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b63:	48 89 d6             	mov    %rdx,%rsi
    5b66:	48 89 c7             	mov    %rax,%rdi
    5b69:	e8 42 05 00 00       	call   60b0 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    5b6e:	eb 05                	jmp    5b75 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    5b70:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5b75:	c9                   	leave
    5b76:	c3                   	ret

0000000000005b77 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5b77:	55                   	push   %rbp
    5b78:	48 89 e5             	mov    %rsp,%rbp
    5b7b:	48 83 ec 20          	sub    $0x20,%rsp
    5b7f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b83:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    5b87:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    5b8b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b93:	48 89 d6             	mov    %rdx,%rsi
    5b96:	48 89 c7             	mov    %rax,%rdi
    5b99:	e8 3c 05 00 00       	call   60da <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    5b9e:	c9                   	leave
    5b9f:	c3                   	ret

0000000000005ba0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    5ba0:	55                   	push   %rbp
    5ba1:	48 89 e5             	mov    %rsp,%rbp
    5ba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ba8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bac:	90                   	nop
    5bad:	5d                   	pop    %rbp
    5bae:	c3                   	ret
    5baf:	90                   	nop

0000000000005bb0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5bb0:	55                   	push   %rbp
    5bb1:	48 89 e5             	mov    %rsp,%rbp
    5bb4:	48 83 ec 20          	sub    $0x20,%rsp
    5bb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5bc4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5bc8:	48 89 d0             	mov    %rdx,%rax
    5bcb:	48 01 c0             	add    %rax,%rax
    5bce:	48 01 d0             	add    %rdx,%rax
    5bd1:	48 c1 e0 03          	shl    $0x3,%rax
    5bd5:	48 89 c2             	mov    %rax,%rdx
    5bd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bdc:	48 89 d6             	mov    %rdx,%rsi
    5bdf:	48 89 c7             	mov    %rax,%rdi
    5be2:	e8 d9 c5 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    5be7:	c9                   	leave
    5be8:	c3                   	ret

0000000000005be9 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5be9:	55                   	push   %rbp
    5bea:	48 89 e5             	mov    %rsp,%rbp
    5bed:	48 83 ec 10          	sub    $0x10,%rsp
    5bf1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    5bf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bf9:	48 89 c7             	mov    %rax,%rdi
    5bfc:	e8 37 05 00 00       	call   6138 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    5c01:	c9                   	leave
    5c02:	c3                   	ret
    5c03:	90                   	nop

0000000000005c04 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5c04:	55                   	push   %rbp
    5c05:	48 89 e5             	mov    %rsp,%rbp
    5c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c10:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5c17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c1b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5c22:	00 
    5c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c27:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5c2e:	00 
	{ }
    5c2f:	90                   	nop
    5c30:	5d                   	pop    %rbp
    5c31:	c3                   	ret

0000000000005c32 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5c32:	55                   	push   %rbp
    5c33:	48 89 e5             	mov    %rsp,%rbp
    5c36:	48 83 ec 10          	sub    $0x10,%rsp
    5c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5c42:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5c47:	74 15                	je     5c5e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    5c49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c51:	48 89 d6             	mov    %rdx,%rsi
    5c54:	48 89 c7             	mov    %rax,%rdi
    5c57:	e8 f6 04 00 00       	call   6152 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    5c5c:	eb 05                	jmp    5c63 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    5c5e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5c63:	c9                   	leave
    5c64:	c3                   	ret

0000000000005c65 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5c65:	55                   	push   %rbp
    5c66:	48 89 e5             	mov    %rsp,%rbp
    5c69:	48 83 ec 20          	sub    $0x20,%rsp
    5c6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    5c75:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    5c79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5c7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c81:	48 89 d6             	mov    %rdx,%rsi
    5c84:	48 89 c7             	mov    %rax,%rdi
    5c87:	e8 f0 04 00 00       	call   617c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    5c8c:	c9                   	leave
    5c8d:	c3                   	ret

0000000000005c8e <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    5c8e:	55                   	push   %rbp
    5c8f:	48 89 e5             	mov    %rsp,%rbp
    5c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5c9a:	90                   	nop
    5c9b:	5d                   	pop    %rbp
    5c9c:	c3                   	ret

0000000000005c9d <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5c9d:	55                   	push   %rbp
    5c9e:	48 89 e5             	mov    %rsp,%rbp
    5ca1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ca9:	5d                   	pop    %rbp
    5caa:	c3                   	ret

0000000000005cab <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5cab:	55                   	push   %rbp
    5cac:	48 89 e5             	mov    %rsp,%rbp
    5caf:	53                   	push   %rbx
    5cb0:	48 83 ec 18          	sub    $0x18,%rsp
    5cb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5cb8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5cbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cc0:	48 89 c6             	mov    %rax,%rsi
    5cc3:	bf 18 00 00 00       	mov    $0x18,%edi
    5cc8:	e8 ca d6 ff ff       	call   3397 <_ZnwmPv>
    5ccd:	48 89 c3             	mov    %rax,%rbx
    5cd0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5cd4:	48 89 c7             	mov    %rax,%rdi
    5cd7:	e8 be ec ff ff       	call   499a <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    5cdc:	48 89 c1             	mov    %rax,%rcx
    5cdf:	48 8b 01             	mov    (%rcx),%rax
    5ce2:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    5ce6:	48 89 03             	mov    %rax,(%rbx)
    5ce9:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    5ced:	48 8b 41 10          	mov    0x10(%rcx),%rax
    5cf1:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    5cf5:	90                   	nop
    5cf6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5cfa:	c9                   	leave
    5cfb:	c3                   	ret

0000000000005cfc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    5cfc:	55                   	push   %rbp
    5cfd:	48 89 e5             	mov    %rsp,%rbp
    5d00:	48 83 ec 20          	sub    $0x20,%rsp
    5d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d0c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5d10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d14:	48 89 d0             	mov    %rdx,%rax
    5d17:	48 c1 e0 03          	shl    $0x3,%rax
    5d1b:	48 29 d0             	sub    %rdx,%rax
    5d1e:	48 c1 e0 02          	shl    $0x2,%rax
    5d22:	48 89 c2             	mov    %rax,%rdx
    5d25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d29:	48 89 d6             	mov    %rdx,%rsi
    5d2c:	48 89 c7             	mov    %rax,%rdi
    5d2f:	e8 8c c4 ff ff       	call   21c0 <_ZdlPvm@plt>
      }
    5d34:	c9                   	leave
    5d35:	c3                   	ret

0000000000005d36 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5d36:	55                   	push   %rbp
    5d37:	48 89 e5             	mov    %rsp,%rbp
    5d3a:	48 83 ec 10          	sub    $0x10,%rsp
    5d3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d46:	48 89 c7             	mov    %rax,%rdi
    5d49:	e8 74 04 00 00       	call   61c2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    5d4e:	c9                   	leave
    5d4f:	c3                   	ret

0000000000005d50 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    5d50:	55                   	push   %rbp
    5d51:	48 89 e5             	mov    %rsp,%rbp
    5d54:	48 83 ec 10          	sub    $0x10,%rsp
    5d58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5d60:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d68:	ba 00 00 00 00       	mov    $0x0,%edx
    5d6d:	48 89 ce             	mov    %rcx,%rsi
    5d70:	48 89 c7             	mov    %rax,%rdi
    5d73:	e8 5e 04 00 00       	call   61d6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    5d78:	c9                   	leave
    5d79:	c3                   	ret

0000000000005d7a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5d7a:	55                   	push   %rbp
    5d7b:	48 89 e5             	mov    %rsp,%rbp
    5d7e:	48 83 ec 20          	sub    $0x20,%rsp
    5d82:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5d86:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5d8a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5d8f:	74 43                	je     5dd4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    5d91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d95:	48 89 c7             	mov    %rax,%rdi
    5d98:	e8 a4 04 00 00       	call   6241 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    5d9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5da1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da5:	48 89 c7             	mov    %rax,%rdi
    5da8:	e8 a2 04 00 00       	call   624f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    5dad:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    5db4:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    5db5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5db9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5dbd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5dc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dc5:	48 89 ce             	mov    %rcx,%rsi
    5dc8:	48 89 c7             	mov    %rax,%rdi
    5dcb:	e8 d9 04 00 00       	call   62a9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    5dd0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5dd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5dd8:	c9                   	leave
    5dd9:	c3                   	ret

0000000000005dda <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5dda:	55                   	push   %rbp
    5ddb:	48 89 e5             	mov    %rsp,%rbp
    5dde:	48 83 ec 10          	sub    $0x10,%rsp
    5de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dea:	48 89 c7             	mov    %rax,%rdi
    5ded:	e8 fc 04 00 00       	call   62ee <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    5df2:	c9                   	leave
    5df3:	c3                   	ret

0000000000005df4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    5df4:	55                   	push   %rbp
    5df5:	48 89 e5             	mov    %rsp,%rbp
    5df8:	48 83 ec 10          	sub    $0x10,%rsp
    5dfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5e04:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e0c:	ba 00 00 00 00       	mov    $0x0,%edx
    5e11:	48 89 ce             	mov    %rcx,%rsi
    5e14:	48 89 c7             	mov    %rax,%rdi
    5e17:	e8 e6 04 00 00       	call   6302 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    5e1c:	c9                   	leave
    5e1d:	c3                   	ret

0000000000005e1e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5e1e:	55                   	push   %rbp
    5e1f:	48 89 e5             	mov    %rsp,%rbp
    5e22:	48 83 ec 20          	sub    $0x20,%rsp
    5e26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5e2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5e2e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5e33:	74 40                	je     5e75 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    5e35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e39:	48 89 c7             	mov    %rax,%rdi
    5e3c:	e8 22 05 00 00       	call   6363 <_ZSt11__addressofIPKcEPT_RS2_>
    5e41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5e45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e49:	48 89 c7             	mov    %rax,%rdi
    5e4c:	e8 20 05 00 00       	call   6371 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    5e51:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5e56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5e5a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5e5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e66:	48 89 ce             	mov    %rcx,%rsi
    5e69:	48 89 c7             	mov    %rax,%rdi
    5e6c:	e8 27 05 00 00       	call   6398 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    5e71:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5e79:	c9                   	leave
    5e7a:	c3                   	ret
    5e7b:	90                   	nop

0000000000005e7c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    5e7c:	55                   	push   %rbp
    5e7d:	48 89 e5             	mov    %rsp,%rbp
    5e80:	48 83 ec 10          	sub    $0x10,%rsp
    5e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    5e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e8c:	48 89 c7             	mov    %rax,%rdi
    5e8f:	e8 48 05 00 00       	call   63dc <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5e94:	48 89 c7             	mov    %rax,%rdi
    5e97:	e8 fd ec ff ff       	call   4b99 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    5e9c:	c9                   	leave
    5e9d:	c3                   	ret

0000000000005e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5e9e:	55                   	push   %rbp
    5e9f:	48 89 e5             	mov    %rsp,%rbp
    5ea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5ea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eaa:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb2:	48 8b 00             	mov    (%rax),%rax
    5eb5:	48 29 c2             	sub    %rax,%rdx
    5eb8:	48 89 d0             	mov    %rdx,%rax
    5ebb:	48 c1 f8 03          	sar    $0x3,%rax
    5ebf:	5d                   	pop    %rbp
    5ec0:	c3                   	ret

0000000000005ec1 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    5ec1:	55                   	push   %rbp
    5ec2:	48 89 e5             	mov    %rsp,%rbp
    5ec5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ec9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    5ecd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed1:	48 8b 10             	mov    (%rax),%rdx
    5ed4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ed8:	48 8b 00             	mov    (%rax),%rax
    5edb:	48 39 c2             	cmp    %rax,%rdx
    5ede:	73 06                	jae    5ee6 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    5ee0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ee4:	eb 04                	jmp    5eea <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    5ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5eea:	5d                   	pop    %rbp
    5eeb:	c3                   	ret

0000000000005eec <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    5eec:	55                   	push   %rbp
    5eed:	48 89 e5             	mov    %rsp,%rbp
    5ef0:	41 54                	push   %r12
    5ef2:	53                   	push   %rbx
    5ef3:	48 83 ec 20          	sub    $0x20,%rsp
    5ef7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5efb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5eff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    5f03:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    5f07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f0b:	48 89 c7             	mov    %rax,%rdi
    5f0e:	e8 d7 04 00 00       	call   63ea <_ZSt12__niter_baseIPPKcET_S3_>
    5f13:	49 89 c4             	mov    %rax,%r12
    5f16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f1a:	48 89 c7             	mov    %rax,%rdi
    5f1d:	e8 c8 04 00 00       	call   63ea <_ZSt12__niter_baseIPPKcET_S3_>
    5f22:	48 89 c3             	mov    %rax,%rbx
    5f25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f29:	48 89 c7             	mov    %rax,%rdi
    5f2c:	e8 b9 04 00 00       	call   63ea <_ZSt12__niter_baseIPPKcET_S3_>
    5f31:	48 89 c7             	mov    %rax,%rdi
    5f34:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5f38:	48 89 c1             	mov    %rax,%rcx
    5f3b:	4c 89 e2             	mov    %r12,%rdx
    5f3e:	48 89 de             	mov    %rbx,%rsi
    5f41:	e8 b2 04 00 00       	call   63f8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    5f46:	48 83 c4 20          	add    $0x20,%rsp
    5f4a:	5b                   	pop    %rbx
    5f4b:	41 5c                	pop    %r12
    5f4d:	5d                   	pop    %rbp
    5f4e:	c3                   	ret
    5f4f:	90                   	nop

0000000000005f50 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5f50:	55                   	push   %rbp
    5f51:	48 89 e5             	mov    %rsp,%rbp
    5f54:	48 83 ec 10          	sub    $0x10,%rsp
    5f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f60:	48 89 c7             	mov    %rax,%rdi
    5f63:	e8 f4 04 00 00       	call   645c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    5f68:	c9                   	leave
    5f69:	c3                   	ret

0000000000005f6a <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    5f6a:	55                   	push   %rbp
    5f6b:	48 89 e5             	mov    %rsp,%rbp
    5f6e:	48 83 ec 10          	sub    $0x10,%rsp
    5f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5f7a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f82:	ba 00 00 00 00       	mov    $0x0,%edx
    5f87:	48 89 ce             	mov    %rcx,%rsi
    5f8a:	48 89 c7             	mov    %rax,%rdi
    5f8d:	e8 de 04 00 00       	call   6470 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    5f92:	c9                   	leave
    5f93:	c3                   	ret

0000000000005f94 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5f94:	55                   	push   %rbp
    5f95:	48 89 e5             	mov    %rsp,%rbp
    5f98:	48 83 ec 20          	sub    $0x20,%rsp
    5f9c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5fa0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5fa4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5fa9:	74 43                	je     5fee <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    5fab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5faf:	48 89 c7             	mov    %rax,%rdi
    5fb2:	e8 24 05 00 00       	call   64db <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    5fb7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5fbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fbf:	48 89 c7             	mov    %rax,%rdi
    5fc2:	e8 22 05 00 00       	call   64e9 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    5fc7:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    5fce:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    5fcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5fd3:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5fd7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5fdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fdf:	48 89 ce             	mov    %rcx,%rsi
    5fe2:	48 89 c7             	mov    %rax,%rdi
    5fe5:	e8 59 05 00 00       	call   6543 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    5fea:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5fee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5ff2:	c9                   	leave
    5ff3:	c3                   	ret

0000000000005ff4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5ff4:	55                   	push   %rbp
    5ff5:	48 89 e5             	mov    %rsp,%rbp
    5ff8:	48 83 ec 10          	sub    $0x10,%rsp
    5ffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6004:	48 89 c7             	mov    %rax,%rdi
    6007:	e8 7c 05 00 00       	call   6588 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    600c:	c9                   	leave
    600d:	c3                   	ret

000000000000600e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    600e:	55                   	push   %rbp
    600f:	48 89 e5             	mov    %rsp,%rbp
    6012:	48 83 ec 10          	sub    $0x10,%rsp
    6016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    601a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    601e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6026:	ba 00 00 00 00       	mov    $0x0,%edx
    602b:	48 89 ce             	mov    %rcx,%rsi
    602e:	48 89 c7             	mov    %rax,%rdi
    6031:	e8 66 05 00 00       	call   659c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    6036:	c9                   	leave
    6037:	c3                   	ret

0000000000006038 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    6038:	55                   	push   %rbp
    6039:	48 89 e5             	mov    %rsp,%rbp
    603c:	48 83 ec 20          	sub    $0x20,%rsp
    6040:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6044:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    6048:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    604d:	74 40                	je     608f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    604f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6053:	48 89 c7             	mov    %rax,%rdi
    6056:	e8 a2 05 00 00       	call   65fd <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    605b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    605f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6063:	48 89 c7             	mov    %rax,%rdi
    6066:	e8 a0 05 00 00       	call   660b <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    606b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6070:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6074:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    6078:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    607c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6080:	48 89 ce             	mov    %rcx,%rsi
    6083:	48 89 c7             	mov    %rax,%rdi
    6086:	e8 a7 05 00 00       	call   6632 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    608b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    608f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6093:	c9                   	leave
    6094:	c3                   	ret
    6095:	90                   	nop

0000000000006096 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6096:	55                   	push   %rbp
    6097:	48 89 e5             	mov    %rsp,%rbp
    609a:	48 83 ec 10          	sub    $0x10,%rsp
    609e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    60a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60a6:	48 89 c7             	mov    %rax,%rdi
    60a9:	e8 c8 05 00 00       	call   6676 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    60ae:	c9                   	leave
    60af:	c3                   	ret

00000000000060b0 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    60b0:	55                   	push   %rbp
    60b1:	48 89 e5             	mov    %rsp,%rbp
    60b4:	48 83 ec 10          	sub    $0x10,%rsp
    60b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    60c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c8:	ba 00 00 00 00       	mov    $0x0,%edx
    60cd:	48 89 ce             	mov    %rcx,%rsi
    60d0:	48 89 c7             	mov    %rax,%rdi
    60d3:	e8 b2 05 00 00       	call   668a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    60d8:	c9                   	leave
    60d9:	c3                   	ret

00000000000060da <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    60da:	55                   	push   %rbp
    60db:	48 89 e5             	mov    %rsp,%rbp
    60de:	48 83 ec 20          	sub    $0x20,%rsp
    60e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    60e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    60ea:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    60ef:	74 40                	je     6131 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    60f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60f5:	48 89 c7             	mov    %rax,%rdi
    60f8:	e8 a0 fb ff ff       	call   5c9d <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    60fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    6101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6105:	48 89 c7             	mov    %rax,%rdi
    6108:	e8 e7 05 00 00       	call   66f4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    610d:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6112:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6116:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    611a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    611e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6122:	48 89 ce             	mov    %rcx,%rsi
    6125:	48 89 c7             	mov    %rax,%rdi
    6128:	e8 10 06 00 00       	call   673d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    612d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6131:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6135:	c9                   	leave
    6136:	c3                   	ret
    6137:	90                   	nop

0000000000006138 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6138:	55                   	push   %rbp
    6139:	48 89 e5             	mov    %rsp,%rbp
    613c:	48 83 ec 10          	sub    $0x10,%rsp
    6140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6148:	48 89 c7             	mov    %rax,%rdi
    614b:	e8 32 06 00 00       	call   6782 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    6150:	c9                   	leave
    6151:	c3                   	ret

0000000000006152 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    6152:	55                   	push   %rbp
    6153:	48 89 e5             	mov    %rsp,%rbp
    6156:	48 83 ec 10          	sub    $0x10,%rsp
    615a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    615e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6162:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    616a:	ba 00 00 00 00       	mov    $0x0,%edx
    616f:	48 89 ce             	mov    %rcx,%rsi
    6172:	48 89 c7             	mov    %rax,%rdi
    6175:	e8 1c 06 00 00       	call   6796 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    617a:	c9                   	leave
    617b:	c3                   	ret

000000000000617c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    617c:	55                   	push   %rbp
    617d:	48 89 e5             	mov    %rsp,%rbp
    6180:	48 83 ec 20          	sub    $0x20,%rsp
    6184:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6188:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    618c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6190:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    6194:	eb 1e                	jmp    61b4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    6196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    619a:	48 89 c7             	mov    %rax,%rdi
    619d:	e8 5f 06 00 00       	call   6801 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    61a2:	48 89 c7             	mov    %rax,%rdi
    61a5:	e8 65 06 00 00       	call   680f <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    61aa:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    61af:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    61b4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    61b9:	75 db                	jne    6196 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    61bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    61bf:	c9                   	leave
    61c0:	c3                   	ret
    61c1:	90                   	nop

00000000000061c2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    61c2:	55                   	push   %rbp
    61c3:	48 89 e5             	mov    %rsp,%rbp
    61c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    61ca:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    61d1:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    61d4:	5d                   	pop    %rbp
    61d5:	c3                   	ret

00000000000061d6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    61d6:	55                   	push   %rbp
    61d7:	48 89 e5             	mov    %rsp,%rbp
    61da:	48 83 ec 20          	sub    $0x20,%rsp
    61de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    61e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    61ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ee:	48 89 c7             	mov    %rax,%rdi
    61f1:	e8 cc ff ff ff       	call   61c2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    61f6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    61fa:	0f 92 c0             	setb   %al
    61fd:	0f b6 c0             	movzbl %al,%eax
    6200:	48 85 c0             	test   %rax,%rax
    6203:	0f 95 c0             	setne  %al
    6206:	84 c0                	test   %al,%al
    6208:	74 1a                	je     6224 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    620a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    6211:	0f fc 00 
    6214:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6218:	73 05                	jae    621f <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    621a:	e8 01 bf ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    621f:	e8 2c be ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6224:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6228:	48 89 d0             	mov    %rdx,%rax
    622b:	48 c1 e0 06          	shl    $0x6,%rax
    622f:	48 01 d0             	add    %rdx,%rax
    6232:	48 c1 e0 02          	shl    $0x2,%rax
    6236:	48 89 c7             	mov    %rax,%rdi
    6239:	e8 72 bf ff ff       	call   21b0 <_Znwm@plt>
    623e:	90                   	nop
      }
    623f:	c9                   	leave
    6240:	c3                   	ret

0000000000006241 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6241:	55                   	push   %rbp
    6242:	48 89 e5             	mov    %rsp,%rbp
    6245:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    624d:	5d                   	pop    %rbp
    624e:	c3                   	ret

000000000000624f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    624f:	55                   	push   %rbp
    6250:	48 89 e5             	mov    %rsp,%rbp
    6253:	48 83 ec 10          	sub    $0x10,%rsp
    6257:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    625b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625f:	48 89 c6             	mov    %rax,%rsi
    6262:	bf 04 01 00 00       	mov    $0x104,%edi
    6267:	e8 2b d1 ff ff       	call   3397 <_ZnwmPv>
    626c:	b9 04 01 00 00       	mov    $0x104,%ecx
    6271:	be 00 00 00 00       	mov    $0x0,%esi
    6276:	48 89 30             	mov    %rsi,(%rax)
    6279:	89 ca                	mov    %ecx,%edx
    627b:	48 01 c2             	add    %rax,%rdx
    627e:	48 83 c2 08          	add    $0x8,%rdx
    6282:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6286:	48 8d 50 08          	lea    0x8(%rax),%rdx
    628a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    628e:	48 29 d0             	sub    %rdx,%rax
    6291:	01 c1                	add    %eax,%ecx
    6293:	83 e1 f8             	and    $0xfffffff8,%ecx
    6296:	89 c8                	mov    %ecx,%eax
    6298:	c1 e8 03             	shr    $0x3,%eax
    629b:	89 c1                	mov    %eax,%ecx
    629d:	48 89 d7             	mov    %rdx,%rdi
    62a0:	48 89 f0             	mov    %rsi,%rax
    62a3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    62a6:	90                   	nop
    62a7:	c9                   	leave
    62a8:	c3                   	ret

00000000000062a9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    62a9:	55                   	push   %rbp
    62aa:	48 89 e5             	mov    %rsp,%rbp
    62ad:	48 83 ec 20          	sub    $0x20,%rsp
    62b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    62bd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    62c1:	48 89 c7             	mov    %rax,%rdi
    62c4:	e8 6e 05 00 00       	call   6837 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    62c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62cd:	48 89 c7             	mov    %rax,%rdi
    62d0:	e8 d4 d0 ff ff       	call   33a9 <_ZSt17__size_to_integerm>
    62d5:	48 89 c1             	mov    %rax,%rcx
    62d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62e0:	48 89 ce             	mov    %rcx,%rsi
    62e3:	48 89 c7             	mov    %rax,%rdi
    62e6:	e8 57 05 00 00       	call   6842 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    62eb:	c9                   	leave
    62ec:	c3                   	ret
    62ed:	90                   	nop

00000000000062ee <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    62ee:	55                   	push   %rbp
    62ef:	48 89 e5             	mov    %rsp,%rbp
    62f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    62f6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    62fd:	ff ff 0f 
      }
    6300:	5d                   	pop    %rbp
    6301:	c3                   	ret

0000000000006302 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6302:	55                   	push   %rbp
    6303:	48 89 e5             	mov    %rsp,%rbp
    6306:	48 83 ec 20          	sub    $0x20,%rsp
    630a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    630e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6312:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    631a:	48 89 c7             	mov    %rax,%rdi
    631d:	e8 cc ff ff ff       	call   62ee <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    6322:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6326:	0f 92 c0             	setb   %al
    6329:	0f b6 c0             	movzbl %al,%eax
    632c:	48 85 c0             	test   %rax,%rax
    632f:	0f 95 c0             	setne  %al
    6332:	84 c0                	test   %al,%al
    6334:	74 1a                	je     6350 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    6336:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    633d:	ff ff 1f 
    6340:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6344:	73 05                	jae    634b <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6346:	e8 d5 bd ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    634b:	e8 00 bd ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6350:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6354:	48 c1 e0 03          	shl    $0x3,%rax
    6358:	48 89 c7             	mov    %rax,%rdi
    635b:	e8 50 be ff ff       	call   21b0 <_Znwm@plt>
    6360:	90                   	nop
      }
    6361:	c9                   	leave
    6362:	c3                   	ret

0000000000006363 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6363:	55                   	push   %rbp
    6364:	48 89 e5             	mov    %rsp,%rbp
    6367:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    636b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636f:	5d                   	pop    %rbp
    6370:	c3                   	ret

0000000000006371 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6371:	55                   	push   %rbp
    6372:	48 89 e5             	mov    %rsp,%rbp
    6375:	48 83 ec 10          	sub    $0x10,%rsp
    6379:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    637d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6381:	48 89 c6             	mov    %rax,%rsi
    6384:	bf 08 00 00 00       	mov    $0x8,%edi
    6389:	e8 09 d0 ff ff       	call   3397 <_ZnwmPv>
    638e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    6395:	90                   	nop
    6396:	c9                   	leave
    6397:	c3                   	ret

0000000000006398 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6398:	55                   	push   %rbp
    6399:	48 89 e5             	mov    %rsp,%rbp
    639c:	48 83 ec 20          	sub    $0x20,%rsp
    63a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    63ac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    63b0:	48 89 c7             	mov    %rax,%rdi
    63b3:	e8 f9 04 00 00       	call   68b1 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    63b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63bc:	48 89 c7             	mov    %rax,%rdi
    63bf:	e8 e5 cf ff ff       	call   33a9 <_ZSt17__size_to_integerm>
    63c4:	48 89 c1             	mov    %rax,%rcx
    63c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63cf:	48 89 ce             	mov    %rcx,%rsi
    63d2:	48 89 c7             	mov    %rax,%rdi
    63d5:	e8 e2 04 00 00       	call   68bc <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    63da:	c9                   	leave
    63db:	c3                   	ret

00000000000063dc <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    63dc:	55                   	push   %rbp
    63dd:	48 89 e5             	mov    %rsp,%rbp
    63e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    63e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63e8:	5d                   	pop    %rbp
    63e9:	c3                   	ret

00000000000063ea <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    63ea:	55                   	push   %rbp
    63eb:	48 89 e5             	mov    %rsp,%rbp
    63ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    63f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63f6:	5d                   	pop    %rbp
    63f7:	c3                   	ret

00000000000063f8 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    63f8:	55                   	push   %rbp
    63f9:	48 89 e5             	mov    %rsp,%rbp
    63fc:	48 83 ec 30          	sub    $0x30,%rsp
    6400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6404:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6408:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    640c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    6410:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6414:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6418:	48 c1 f8 03          	sar    $0x3,%rax
    641c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    6420:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6425:	7e 1f                	jle    6446 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    6427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    642b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6432:	00 
    6433:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6437:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    643b:	48 89 ce             	mov    %rcx,%rsi
    643e:	48 89 c7             	mov    %rax,%rdi
    6441:	e8 9a be ff ff       	call   22e0 <memmove@plt>
      return __result + __count;
    6446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    644a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6451:	00 
    6452:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6456:	48 01 d0             	add    %rdx,%rax
    }
    6459:	c9                   	leave
    645a:	c3                   	ret
    645b:	90                   	nop

000000000000645c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    645c:	55                   	push   %rbp
    645d:	48 89 e5             	mov    %rsp,%rbp
    6460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6464:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    646b:	03 3f 00 
      }
    646e:	5d                   	pop    %rbp
    646f:	c3                   	ret

0000000000006470 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6470:	55                   	push   %rbp
    6471:	48 89 e5             	mov    %rsp,%rbp
    6474:	48 83 ec 20          	sub    $0x20,%rsp
    6478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    647c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6480:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6488:	48 89 c7             	mov    %rax,%rdi
    648b:	e8 cc ff ff ff       	call   645c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    6490:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6494:	0f 92 c0             	setb   %al
    6497:	0f b6 c0             	movzbl %al,%eax
    649a:	48 85 c0             	test   %rax,%rax
    649d:	0f 95 c0             	setne  %al
    64a0:	84 c0                	test   %al,%al
    64a2:	74 1a                	je     64be <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    64a4:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    64ab:	07 7e 00 
    64ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    64b2:	73 05                	jae    64b9 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    64b4:	e8 67 bc ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    64b9:	e8 92 bb ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    64be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64c2:	48 89 d0             	mov    %rdx,%rax
    64c5:	48 c1 e0 06          	shl    $0x6,%rax
    64c9:	48 01 d0             	add    %rdx,%rax
    64cc:	48 c1 e0 03          	shl    $0x3,%rax
    64d0:	48 89 c7             	mov    %rax,%rdi
    64d3:	e8 d8 bc ff ff       	call   21b0 <_Znwm@plt>
    64d8:	90                   	nop
      }
    64d9:	c9                   	leave
    64da:	c3                   	ret

00000000000064db <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    64db:	55                   	push   %rbp
    64dc:	48 89 e5             	mov    %rsp,%rbp
    64df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    64e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e7:	5d                   	pop    %rbp
    64e8:	c3                   	ret

00000000000064e9 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    64e9:	55                   	push   %rbp
    64ea:	48 89 e5             	mov    %rsp,%rbp
    64ed:	48 83 ec 10          	sub    $0x10,%rsp
    64f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    64f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f9:	48 89 c6             	mov    %rax,%rsi
    64fc:	bf 08 02 00 00       	mov    $0x208,%edi
    6501:	e8 91 ce ff ff       	call   3397 <_ZnwmPv>
    6506:	b9 08 02 00 00       	mov    $0x208,%ecx
    650b:	be 00 00 00 00       	mov    $0x0,%esi
    6510:	48 89 30             	mov    %rsi,(%rax)
    6513:	89 ca                	mov    %ecx,%edx
    6515:	48 01 c2             	add    %rax,%rdx
    6518:	48 83 c2 08          	add    $0x8,%rdx
    651c:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    6520:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6524:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    6528:	48 29 d0             	sub    %rdx,%rax
    652b:	01 c1                	add    %eax,%ecx
    652d:	83 e1 f8             	and    $0xfffffff8,%ecx
    6530:	89 c8                	mov    %ecx,%eax
    6532:	c1 e8 03             	shr    $0x3,%eax
    6535:	89 c1                	mov    %eax,%ecx
    6537:	48 89 d7             	mov    %rdx,%rdi
    653a:	48 89 f0             	mov    %rsi,%rax
    653d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    6540:	90                   	nop
    6541:	c9                   	leave
    6542:	c3                   	ret

0000000000006543 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6543:	55                   	push   %rbp
    6544:	48 89 e5             	mov    %rsp,%rbp
    6547:	48 83 ec 20          	sub    $0x20,%rsp
    654b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    654f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6553:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    6557:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    655b:	48 89 c7             	mov    %rax,%rdi
    655e:	e8 b6 03 00 00       	call   6919 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6563:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6567:	48 89 c7             	mov    %rax,%rdi
    656a:	e8 3a ce ff ff       	call   33a9 <_ZSt17__size_to_integerm>
    656f:	48 89 c1             	mov    %rax,%rcx
    6572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6576:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    657a:	48 89 ce             	mov    %rcx,%rsi
    657d:	48 89 c7             	mov    %rax,%rdi
    6580:	e8 9f 03 00 00       	call   6924 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    6585:	c9                   	leave
    6586:	c3                   	ret
    6587:	90                   	nop

0000000000006588 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6588:	55                   	push   %rbp
    6589:	48 89 e5             	mov    %rsp,%rbp
    658c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6590:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6597:	ff ff 0f 
      }
    659a:	5d                   	pop    %rbp
    659b:	c3                   	ret

000000000000659c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    659c:	55                   	push   %rbp
    659d:	48 89 e5             	mov    %rsp,%rbp
    65a0:	48 83 ec 20          	sub    $0x20,%rsp
    65a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    65b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b4:	48 89 c7             	mov    %rax,%rdi
    65b7:	e8 cc ff ff ff       	call   6588 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    65bc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    65c0:	0f 92 c0             	setb   %al
    65c3:	0f b6 c0             	movzbl %al,%eax
    65c6:	48 85 c0             	test   %rax,%rax
    65c9:	0f 95 c0             	setne  %al
    65cc:	84 c0                	test   %al,%al
    65ce:	74 1a                	je     65ea <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    65d0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    65d7:	ff ff 1f 
    65da:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    65de:	73 05                	jae    65e5 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    65e0:	e8 3b bb ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    65e5:	e8 66 ba ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    65ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    65ee:	48 c1 e0 03          	shl    $0x3,%rax
    65f2:	48 89 c7             	mov    %rax,%rdi
    65f5:	e8 b6 bb ff ff       	call   21b0 <_Znwm@plt>
    65fa:	90                   	nop
      }
    65fb:	c9                   	leave
    65fc:	c3                   	ret

00000000000065fd <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    65fd:	55                   	push   %rbp
    65fe:	48 89 e5             	mov    %rsp,%rbp
    6601:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6609:	5d                   	pop    %rbp
    660a:	c3                   	ret

000000000000660b <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    660b:	55                   	push   %rbp
    660c:	48 89 e5             	mov    %rsp,%rbp
    660f:	48 83 ec 10          	sub    $0x10,%rsp
    6613:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    661b:	48 89 c6             	mov    %rax,%rsi
    661e:	bf 08 00 00 00       	mov    $0x8,%edi
    6623:	e8 6f cd ff ff       	call   3397 <_ZnwmPv>
    6628:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    662f:	90                   	nop
    6630:	c9                   	leave
    6631:	c3                   	ret

0000000000006632 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6632:	55                   	push   %rbp
    6633:	48 89 e5             	mov    %rsp,%rbp
    6636:	48 83 ec 20          	sub    $0x20,%rsp
    663a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    663e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6642:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    6646:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    664a:	48 89 c7             	mov    %rax,%rdi
    664d:	e8 41 03 00 00       	call   6993 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6652:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6656:	48 89 c7             	mov    %rax,%rdi
    6659:	e8 4b cd ff ff       	call   33a9 <_ZSt17__size_to_integerm>
    665e:	48 89 c1             	mov    %rax,%rcx
    6661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6665:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6669:	48 89 ce             	mov    %rcx,%rsi
    666c:	48 89 c7             	mov    %rax,%rdi
    666f:	e8 2a 03 00 00       	call   699e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    6674:	c9                   	leave
    6675:	c3                   	ret

0000000000006676 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6676:	55                   	push   %rbp
    6677:	48 89 e5             	mov    %rsp,%rbp
    667a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    667e:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    6685:	55 55 05 
      }
    6688:	5d                   	pop    %rbp
    6689:	c3                   	ret

000000000000668a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    668a:	55                   	push   %rbp
    668b:	48 89 e5             	mov    %rsp,%rbp
    668e:	48 83 ec 20          	sub    $0x20,%rsp
    6692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6696:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    669a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    669e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a2:	48 89 c7             	mov    %rax,%rdi
    66a5:	e8 cc ff ff ff       	call   6676 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    66aa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    66ae:	0f 92 c0             	setb   %al
    66b1:	0f b6 c0             	movzbl %al,%eax
    66b4:	48 85 c0             	test   %rax,%rax
    66b7:	0f 95 c0             	setne  %al
    66ba:	84 c0                	test   %al,%al
    66bc:	74 1a                	je     66d8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    66be:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    66c5:	aa aa 0a 
    66c8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    66cc:	73 05                	jae    66d3 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    66ce:	e8 4d ba ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    66d3:	e8 78 b9 ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    66d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66dc:	48 89 d0             	mov    %rdx,%rax
    66df:	48 01 c0             	add    %rax,%rax
    66e2:	48 01 d0             	add    %rdx,%rax
    66e5:	48 c1 e0 03          	shl    $0x3,%rax
    66e9:	48 89 c7             	mov    %rax,%rdi
    66ec:	e8 bf ba ff ff       	call   21b0 <_Znwm@plt>
    66f1:	90                   	nop
      }
    66f2:	c9                   	leave
    66f3:	c3                   	ret

00000000000066f4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    66f4:	55                   	push   %rbp
    66f5:	48 89 e5             	mov    %rsp,%rbp
    66f8:	48 83 ec 10          	sub    $0x10,%rsp
    66fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6704:	48 89 c6             	mov    %rax,%rsi
    6707:	bf 18 00 00 00       	mov    $0x18,%edi
    670c:	e8 86 cc ff ff       	call   3397 <_ZnwmPv>
    6711:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    6717:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    671e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    6725:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    672c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    6733:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    673a:	90                   	nop
    673b:	c9                   	leave
    673c:	c3                   	ret

000000000000673d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    673d:	55                   	push   %rbp
    673e:	48 89 e5             	mov    %rsp,%rbp
    6741:	48 83 ec 20          	sub    $0x20,%rsp
    6745:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6749:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    674d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    6751:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6755:	48 89 c7             	mov    %rax,%rdi
    6758:	e8 9e 02 00 00       	call   69fb <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    675d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6761:	48 89 c7             	mov    %rax,%rdi
    6764:	e8 40 cc ff ff       	call   33a9 <_ZSt17__size_to_integerm>
    6769:	48 89 c1             	mov    %rax,%rcx
    676c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6770:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6774:	48 89 ce             	mov    %rcx,%rsi
    6777:	48 89 c7             	mov    %rax,%rdi
    677a:	e8 87 02 00 00       	call   6a06 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    677f:	c9                   	leave
    6780:	c3                   	ret
    6781:	90                   	nop

0000000000006782 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6782:	55                   	push   %rbp
    6783:	48 89 e5             	mov    %rsp,%rbp
    6786:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    678a:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    6791:	49 92 04 
      }
    6794:	5d                   	pop    %rbp
    6795:	c3                   	ret

0000000000006796 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6796:	55                   	push   %rbp
    6797:	48 89 e5             	mov    %rsp,%rbp
    679a:	48 83 ec 20          	sub    $0x20,%rsp
    679e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    67aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ae:	48 89 c7             	mov    %rax,%rdi
    67b1:	e8 cc ff ff ff       	call   6782 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    67b6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    67ba:	0f 92 c0             	setb   %al
    67bd:	0f b6 c0             	movzbl %al,%eax
    67c0:	48 85 c0             	test   %rax,%rax
    67c3:	0f 95 c0             	setne  %al
    67c6:	84 c0                	test   %al,%al
    67c8:	74 1a                	je     67e4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    67ca:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    67d1:	92 24 09 
    67d4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    67d8:	73 05                	jae    67df <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    67da:	e8 41 b9 ff ff       	call   2120 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    67df:	e8 6c b8 ff ff       	call   2050 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    67e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67e8:	48 89 d0             	mov    %rdx,%rax
    67eb:	48 c1 e0 03          	shl    $0x3,%rax
    67ef:	48 29 d0             	sub    %rdx,%rax
    67f2:	48 c1 e0 02          	shl    $0x2,%rax
    67f6:	48 89 c7             	mov    %rax,%rdi
    67f9:	e8 b2 b9 ff ff       	call   21b0 <_Znwm@plt>
    67fe:	90                   	nop
      }
    67ff:	c9                   	leave
    6800:	c3                   	ret

0000000000006801 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6801:	55                   	push   %rbp
    6802:	48 89 e5             	mov    %rsp,%rbp
    6805:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6809:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    680d:	5d                   	pop    %rbp
    680e:	c3                   	ret

000000000000680f <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    680f:	55                   	push   %rbp
    6810:	48 89 e5             	mov    %rsp,%rbp
    6813:	48 83 ec 10          	sub    $0x10,%rsp
    6817:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    681b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    681f:	48 89 c6             	mov    %rax,%rsi
    6822:	bf 1c 00 00 00       	mov    $0x1c,%edi
    6827:	e8 6b cb ff ff       	call   3397 <_ZnwmPv>
    682c:	48 89 c7             	mov    %rax,%rdi
    682f:	e8 9c 02 00 00       	call   6ad0 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    6834:	90                   	nop
    6835:	c9                   	leave
    6836:	c3                   	ret

0000000000006837 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    6837:	55                   	push   %rbp
    6838:	48 89 e5             	mov    %rsp,%rbp
    683b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    683f:	90                   	nop
    6840:	5d                   	pop    %rbp
    6841:	c3                   	ret

0000000000006842 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6842:	55                   	push   %rbp
    6843:	48 89 e5             	mov    %rsp,%rbp
    6846:	48 83 ec 20          	sub    $0x20,%rsp
    684a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    684e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6852:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6856:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    685b:	75 06                	jne    6863 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    685d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6861:	eb 4c                	jmp    68af <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    6863:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6867:	48 89 d0             	mov    %rdx,%rax
    686a:	48 c1 e0 06          	shl    $0x6,%rax
    686e:	48 01 d0             	add    %rdx,%rax
    6871:	48 c1 e0 02          	shl    $0x2,%rax
    6875:	48 89 c2             	mov    %rax,%rdx
    6878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    687c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6880:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6888:	48 89 ce             	mov    %rcx,%rsi
    688b:	48 89 c7             	mov    %rax,%rdi
    688e:	e8 58 02 00 00       	call   6aeb <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    6893:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6897:	48 89 d0             	mov    %rdx,%rax
    689a:	48 c1 e0 06          	shl    $0x6,%rax
    689e:	48 01 d0             	add    %rdx,%rax
    68a1:	48 c1 e0 02          	shl    $0x2,%rax
    68a5:	48 89 c2             	mov    %rax,%rdx
    68a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ac:	48 01 d0             	add    %rdx,%rax
    }
    68af:	c9                   	leave
    68b0:	c3                   	ret

00000000000068b1 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    68b1:	55                   	push   %rbp
    68b2:	48 89 e5             	mov    %rsp,%rbp
    68b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    68b9:	90                   	nop
    68ba:	5d                   	pop    %rbp
    68bb:	c3                   	ret

00000000000068bc <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    68bc:	55                   	push   %rbp
    68bd:	48 89 e5             	mov    %rsp,%rbp
    68c0:	48 83 ec 20          	sub    $0x20,%rsp
    68c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    68d0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    68d5:	75 06                	jne    68dd <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    68d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68db:	eb 3a                	jmp    6917 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    68dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    68e1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    68e8:	00 
    68e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ed:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    68f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68f9:	48 89 ce             	mov    %rcx,%rsi
    68fc:	48 89 c7             	mov    %rax,%rdi
    68ff:	e8 15 02 00 00       	call   6b19 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    6904:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6908:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    690f:	00 
    6910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6914:	48 01 d0             	add    %rdx,%rax
    }
    6917:	c9                   	leave
    6918:	c3                   	ret

0000000000006919 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    6919:	55                   	push   %rbp
    691a:	48 89 e5             	mov    %rsp,%rbp
    691d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6921:	90                   	nop
    6922:	5d                   	pop    %rbp
    6923:	c3                   	ret

0000000000006924 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6924:	55                   	push   %rbp
    6925:	48 89 e5             	mov    %rsp,%rbp
    6928:	48 83 ec 20          	sub    $0x20,%rsp
    692c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6930:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6934:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6938:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    693d:	75 06                	jne    6945 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    693f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6943:	eb 4c                	jmp    6991 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    6945:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6949:	48 89 d0             	mov    %rdx,%rax
    694c:	48 c1 e0 06          	shl    $0x6,%rax
    6950:	48 01 d0             	add    %rdx,%rax
    6953:	48 c1 e0 03          	shl    $0x3,%rax
    6957:	48 89 c2             	mov    %rax,%rdx
    695a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    695e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6962:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696a:	48 89 ce             	mov    %rcx,%rsi
    696d:	48 89 c7             	mov    %rax,%rdi
    6970:	e8 d2 01 00 00       	call   6b47 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    6975:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6979:	48 89 d0             	mov    %rdx,%rax
    697c:	48 c1 e0 06          	shl    $0x6,%rax
    6980:	48 01 d0             	add    %rdx,%rax
    6983:	48 c1 e0 03          	shl    $0x3,%rax
    6987:	48 89 c2             	mov    %rax,%rdx
    698a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    698e:	48 01 d0             	add    %rdx,%rax
    }
    6991:	c9                   	leave
    6992:	c3                   	ret

0000000000006993 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    6993:	55                   	push   %rbp
    6994:	48 89 e5             	mov    %rsp,%rbp
    6997:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    699b:	90                   	nop
    699c:	5d                   	pop    %rbp
    699d:	c3                   	ret

000000000000699e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    699e:	55                   	push   %rbp
    699f:	48 89 e5             	mov    %rsp,%rbp
    69a2:	48 83 ec 20          	sub    $0x20,%rsp
    69a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    69b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    69b7:	75 06                	jne    69bf <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    69b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69bd:	eb 3a                	jmp    69f9 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    69bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    69c3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    69ca:	00 
    69cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69cf:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    69d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69db:	48 89 ce             	mov    %rcx,%rsi
    69de:	48 89 c7             	mov    %rax,%rdi
    69e1:	e8 8f 01 00 00       	call   6b75 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    69e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    69ea:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    69f1:	00 
    69f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69f6:	48 01 d0             	add    %rdx,%rax
    }
    69f9:	c9                   	leave
    69fa:	c3                   	ret

00000000000069fb <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    69fb:	55                   	push   %rbp
    69fc:	48 89 e5             	mov    %rsp,%rbp
    69ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6a03:	90                   	nop
    6a04:	5d                   	pop    %rbp
    6a05:	c3                   	ret

0000000000006a06 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6a06:	55                   	push   %rbp
    6a07:	48 89 e5             	mov    %rsp,%rbp
    6a0a:	48 83 ec 20          	sub    $0x20,%rsp
    6a0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a16:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6a1a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6a1f:	75 06                	jne    6a27 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    6a21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a25:	eb 4a                	jmp    6a71 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    6a27:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a2b:	48 89 d0             	mov    %rdx,%rax
    6a2e:	48 01 c0             	add    %rax,%rax
    6a31:	48 01 d0             	add    %rdx,%rax
    6a34:	48 c1 e0 03          	shl    $0x3,%rax
    6a38:	48 89 c2             	mov    %rax,%rdx
    6a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a3f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6a43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a4b:	48 89 ce             	mov    %rcx,%rsi
    6a4e:	48 89 c7             	mov    %rax,%rdi
    6a51:	e8 4d 01 00 00       	call   6ba3 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    6a56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a5a:	48 89 d0             	mov    %rdx,%rax
    6a5d:	48 01 c0             	add    %rax,%rax
    6a60:	48 01 d0             	add    %rdx,%rax
    6a63:	48 c1 e0 03          	shl    $0x3,%rax
    6a67:	48 89 c2             	mov    %rax,%rdx
    6a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a6e:	48 01 d0             	add    %rdx,%rax
    }
    6a71:	c9                   	leave
    6a72:	c3                   	ret
    6a73:	90                   	nop

0000000000006a74 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    6a74:	55                   	push   %rbp
    6a75:	48 89 e5             	mov    %rsp,%rbp
    6a78:	48 83 ec 10          	sub    $0x10,%rsp
    6a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a84:	48 89 c7             	mov    %rax,%rdi
    6a87:	e8 46 01 00 00       	call   6bd2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    6a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a90:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    6a94:	90                   	nop
    6a95:	c9                   	leave
    6a96:	c3                   	ret
    6a97:	90                   	nop

0000000000006a98 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    6a98:	55                   	push   %rbp
    6a99:	48 89 e5             	mov    %rsp,%rbp
    6a9c:	48 83 ec 10          	sub    $0x10,%rsp
    6aa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aa8:	48 89 c7             	mov    %rax,%rdi
    6aab:	e8 c4 ff ff ff       	call   6a74 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    6ab0:	90                   	nop
    6ab1:	c9                   	leave
    6ab2:	c3                   	ret
    6ab3:	90                   	nop

0000000000006ab4 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    6ab4:	55                   	push   %rbp
    6ab5:	48 89 e5             	mov    %rsp,%rbp
    6ab8:	48 83 ec 10          	sub    $0x10,%rsp
    6abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ac4:	48 89 c7             	mov    %rax,%rdi
    6ac7:	e8 cc ff ff ff       	call   6a98 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    6acc:	90                   	nop
    6acd:	c9                   	leave
    6ace:	c3                   	ret
    6acf:	90                   	nop

0000000000006ad0 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    6ad0:	55                   	push   %rbp
    6ad1:	48 89 e5             	mov    %rsp,%rbp
    6ad4:	48 83 ec 10          	sub    $0x10,%rsp
    6ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ae0:	48 89 c7             	mov    %rax,%rdi
    6ae3:	e8 cc ff ff ff       	call   6ab4 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    6ae8:	90                   	nop
    6ae9:	c9                   	leave
    6aea:	c3                   	ret

0000000000006aeb <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6aeb:	55                   	push   %rbp
    6aec:	48 89 e5             	mov    %rsp,%rbp
    6aef:	48 83 ec 20          	sub    $0x20,%rsp
    6af3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6af7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6afb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6aff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b03:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b0b:	48 89 ce             	mov    %rcx,%rsi
    6b0e:	48 89 c7             	mov    %rax,%rdi
    6b11:	e8 c7 00 00 00       	call   6bdd <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    6b16:	90                   	nop
    6b17:	c9                   	leave
    6b18:	c3                   	ret

0000000000006b19 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6b19:	55                   	push   %rbp
    6b1a:	48 89 e5             	mov    %rsp,%rbp
    6b1d:	48 83 ec 20          	sub    $0x20,%rsp
    6b21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b25:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b29:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6b2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b39:	48 89 ce             	mov    %rcx,%rsi
    6b3c:	48 89 c7             	mov    %rax,%rdi
    6b3f:	e8 11 01 00 00       	call   6c55 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    6b44:	90                   	nop
    6b45:	c9                   	leave
    6b46:	c3                   	ret

0000000000006b47 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6b47:	55                   	push   %rbp
    6b48:	48 89 e5             	mov    %rsp,%rbp
    6b4b:	48 83 ec 20          	sub    $0x20,%rsp
    6b4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b57:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6b5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b5f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b67:	48 89 ce             	mov    %rcx,%rsi
    6b6a:	48 89 c7             	mov    %rax,%rdi
    6b6d:	e8 1e 01 00 00       	call   6c90 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    6b72:	90                   	nop
    6b73:	c9                   	leave
    6b74:	c3                   	ret

0000000000006b75 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6b75:	55                   	push   %rbp
    6b76:	48 89 e5             	mov    %rsp,%rbp
    6b79:	48 83 ec 20          	sub    $0x20,%rsp
    6b7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b85:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6b89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b8d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b95:	48 89 ce             	mov    %rcx,%rsi
    6b98:	48 89 c7             	mov    %rax,%rdi
    6b9b:	e8 68 01 00 00       	call   6d08 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    6ba0:	90                   	nop
    6ba1:	c9                   	leave
    6ba2:	c3                   	ret

0000000000006ba3 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6ba3:	55                   	push   %rbp
    6ba4:	48 89 e5             	mov    %rsp,%rbp
    6ba7:	48 83 ec 20          	sub    $0x20,%rsp
    6bab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6baf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bb3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6bb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6bbb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6bbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bc3:	48 89 ce             	mov    %rcx,%rsi
    6bc6:	48 89 c7             	mov    %rax,%rdi
    6bc9:	e8 75 01 00 00       	call   6d43 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    6bce:	90                   	nop
    6bcf:	c9                   	leave
    6bd0:	c3                   	ret
    6bd1:	90                   	nop

0000000000006bd2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    6bd2:	55                   	push   %rbp
    6bd3:	48 89 e5             	mov    %rsp,%rbp
    6bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bda:	90                   	nop
    6bdb:	5d                   	pop    %rbp
    6bdc:	c3                   	ret

0000000000006bdd <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6bdd:	55                   	push   %rbp
    6bde:	48 89 e5             	mov    %rsp,%rbp
    6be1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6be5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6be9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    6bed:	eb 58                	jmp    6c47 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    6bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6bf7:	b9 04 01 00 00       	mov    $0x104,%ecx
    6bfc:	48 8b 32             	mov    (%rdx),%rsi
    6bff:	48 89 30             	mov    %rsi,(%rax)
    6c02:	89 ce                	mov    %ecx,%esi
    6c04:	48 01 c6             	add    %rax,%rsi
    6c07:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    6c0b:	89 ce                	mov    %ecx,%esi
    6c0d:	48 01 d6             	add    %rdx,%rsi
    6c10:	48 83 c6 08          	add    $0x8,%rsi
    6c14:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    6c18:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    6c1c:	48 8d 78 08          	lea    0x8(%rax),%rdi
    6c20:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    6c24:	48 29 f8             	sub    %rdi,%rax
    6c27:	48 29 c2             	sub    %rax,%rdx
    6c2a:	01 c1                	add    %eax,%ecx
    6c2c:	83 e1 f8             	and    $0xfffffff8,%ecx
    6c2f:	89 c8                	mov    %ecx,%eax
    6c31:	c1 e8 03             	shr    $0x3,%eax
    6c34:	89 c0                	mov    %eax,%eax
    6c36:	48 89 d6             	mov    %rdx,%rsi
    6c39:	48 89 c1             	mov    %rax,%rcx
    6c3c:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    6c3f:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    6c46:	00 
    6c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c4b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6c4f:	75 9e                	jne    6bef <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    6c51:	90                   	nop
    6c52:	90                   	nop
    6c53:	5d                   	pop    %rbp
    6c54:	c3                   	ret

0000000000006c55 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6c55:	55                   	push   %rbp
    6c56:	48 89 e5             	mov    %rsp,%rbp
    6c59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6c61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    6c65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c69:	48 8b 00             	mov    (%rax),%rax
    6c6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    6c70:	eb 10                	jmp    6c82 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    6c72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c76:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c7a:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    6c7d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    6c82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c86:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    6c8a:	75 e6                	jne    6c72 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    6c8c:	90                   	nop
    6c8d:	90                   	nop
    6c8e:	5d                   	pop    %rbp
    6c8f:	c3                   	ret

0000000000006c90 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6c90:	55                   	push   %rbp
    6c91:	48 89 e5             	mov    %rsp,%rbp
    6c94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    6ca0:	eb 58                	jmp    6cfa <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    6ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ca6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6caa:	b9 08 02 00 00       	mov    $0x208,%ecx
    6caf:	48 8b 32             	mov    (%rdx),%rsi
    6cb2:	48 89 30             	mov    %rsi,(%rax)
    6cb5:	89 ce                	mov    %ecx,%esi
    6cb7:	48 01 c6             	add    %rax,%rsi
    6cba:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    6cbe:	89 ce                	mov    %ecx,%esi
    6cc0:	48 01 d6             	add    %rdx,%rsi
    6cc3:	48 83 c6 08          	add    $0x8,%rsi
    6cc7:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    6ccb:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    6ccf:	48 8d 78 08          	lea    0x8(%rax),%rdi
    6cd3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    6cd7:	48 29 f8             	sub    %rdi,%rax
    6cda:	48 29 c2             	sub    %rax,%rdx
    6cdd:	01 c1                	add    %eax,%ecx
    6cdf:	83 e1 f8             	and    $0xfffffff8,%ecx
    6ce2:	89 c8                	mov    %ecx,%eax
    6ce4:	c1 e8 03             	shr    $0x3,%eax
    6ce7:	89 c0                	mov    %eax,%eax
    6ce9:	48 89 d6             	mov    %rdx,%rsi
    6cec:	48 89 c1             	mov    %rax,%rcx
    6cef:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    6cf2:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    6cf9:	00 
    6cfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cfe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6d02:	75 9e                	jne    6ca2 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    6d04:	90                   	nop
    6d05:	90                   	nop
    6d06:	5d                   	pop    %rbp
    6d07:	c3                   	ret

0000000000006d08 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6d08:	55                   	push   %rbp
    6d09:	48 89 e5             	mov    %rsp,%rbp
    6d0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6d10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6d14:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    6d18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d1c:	48 8b 00             	mov    (%rax),%rax
    6d1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    6d23:	eb 10                	jmp    6d35 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    6d25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6d2d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    6d30:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    6d35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d39:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    6d3d:	75 e6                	jne    6d25 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    6d3f:	90                   	nop
    6d40:	90                   	nop
    6d41:	5d                   	pop    %rbp
    6d42:	c3                   	ret

0000000000006d43 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6d43:	55                   	push   %rbp
    6d44:	48 89 e5             	mov    %rsp,%rbp
    6d47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d4f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    6d53:	eb 23                	jmp    6d78 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    6d55:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    6d59:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    6d5d:	48 8b 06             	mov    (%rsi),%rax
    6d60:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    6d64:	48 89 01             	mov    %rax,(%rcx)
    6d67:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    6d6b:	48 8b 46 10          	mov    0x10(%rsi),%rax
    6d6f:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    6d73:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    6d78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d7c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6d80:	75 d3                	jne    6d55 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    6d82:	90                   	nop
    6d83:	90                   	nop
    6d84:	5d                   	pop    %rbp
    6d85:	c3                   	ret

0000000000006d86 <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    6d86:	55                   	push   %rbp
    6d87:	48 89 e5             	mov    %rsp,%rbp
    6d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    6d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d96:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6d9a:	0f 11 00             	movups %xmm0,(%rax)
    6d9d:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    6da1:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    6da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6da9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    6daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6db3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6db7:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    6dbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dbf:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    6dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dca:	48 8d 15 17 51 00 00 	lea    0x5117(%rip),%rdx        # bee8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    6dd1:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    6dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dd9:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    6de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6de4:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    6deb:	90                   	nop
}
    6dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6df0:	5d                   	pop    %rbp
    6df1:	c3                   	ret

0000000000006df2 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledExtensionCount,
    const char *const *ppEnabledExtensionNames, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    6df2:	55                   	push   %rbp
    6df3:	48 89 e5             	mov    %rsp,%rbp
    6df6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6dfe:	89 55 ec             	mov    %edx,-0x14(%rbp)
    6e01:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    6e05:	44 89 45 e8          	mov    %r8d,-0x18(%rbp)
    6e09:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkInstanceCreateInfo createInfo{};
    6e0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e11:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6e15:	0f 11 00             	movups %xmm0,(%rax)
    6e18:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    6e1c:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    6e20:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    6e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e28:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    6e2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e32:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    6e36:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    6e3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e42:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    6e46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e4a:	8b 55 e8             	mov    -0x18(%rbp),%edx
    6e4d:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    6e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e54:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6e58:	48 89 50 28          	mov    %rdx,0x28(%rax)
  createInfo.enabledExtensionCount = enabledExtensionCount;
    6e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e60:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6e63:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = ppEnabledExtensionNames;
    6e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e6a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6e6e:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    6e72:	90                   	nop
}
    6e73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e77:	5d                   	pop    %rbp
    6e78:	c3                   	ret

0000000000006e79 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfoPK24VkPhysicalDeviceFeaturesjPKPKcPKv>:
makeDeviceCreateInfo(uint32_t queueCreateInfoCount,
                     const VkDeviceQueueCreateInfo *pQueueCreateInfos,
                     const VkPhysicalDeviceFeatures *pEnabledFeatures,
                     uint32_t enabledLayerCount,
                     const char *const *ppEnabledLayerNames,
                     const void *pNext) {
    6e79:	55                   	push   %rbp
    6e7a:	48 89 e5             	mov    %rsp,%rbp
    6e7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e81:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6e84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6e88:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    6e8c:	44 89 45 f0          	mov    %r8d,-0x10(%rbp)
    6e90:	4c 89 4d d8          	mov    %r9,-0x28(%rbp)
  VkDeviceCreateInfo deviceCreateInfo{};
    6e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e98:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6e9c:	0f 11 00             	movups %xmm0,(%rax)
    6e9f:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    6ea3:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    6ea7:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    6eab:	66 0f d6 40 40       	movq   %xmm0,0x40(%rax)
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    6eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb4:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
  deviceCreateInfo.pNext = pNext;
    6eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ebe:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    6ec2:	48 89 50 08          	mov    %rdx,0x8(%rax)
  deviceCreateInfo.queueCreateInfoCount = queueCreateInfoCount;
    6ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eca:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6ecd:	89 50 14             	mov    %edx,0x14(%rax)
  deviceCreateInfo.pQueueCreateInfos = pQueueCreateInfos;
    6ed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ed4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ed8:	48 89 50 18          	mov    %rdx,0x18(%rax)
  deviceCreateInfo.pEnabledFeatures = pEnabledFeatures;
    6edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6ee4:	48 89 50 40          	mov    %rdx,0x40(%rax)
  deviceCreateInfo.enabledLayerCount = enabledLayerCount;
    6ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eec:	8b 55 f0             	mov    -0x10(%rbp),%edx
    6eef:	89 50 20             	mov    %edx,0x20(%rax)
  deviceCreateInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    6ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ef6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6efa:	48 89 50 28          	mov    %rdx,0x28(%rax)
  return deviceCreateInfo;
    6efe:	90                   	nop
}
    6eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f03:	5d                   	pop    %rbp
    6f04:	c3                   	ret

0000000000006f05 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>:

VkDeviceQueueCreateInfo makeDeviceQueueCreateInfo(uint32_t queueFamilyIndex,
                                                  uint32_t queueCount,
                                                  const float *pQueuePriorities,
                                                  const void *pNext) {
    6f05:	55                   	push   %rbp
    6f06:	48 89 e5             	mov    %rsp,%rbp
    6f09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f0d:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6f10:	89 55 f0             	mov    %edx,-0x10(%rbp)
    6f13:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    6f17:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo{};
    6f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f1f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6f23:	0f 11 00             	movups %xmm0,(%rax)
    6f26:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    6f2a:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
  queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    6f2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f33:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
  queueCreateInfo.pNext = pNext;
    6f39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f3d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6f41:	48 89 50 08          	mov    %rdx,0x8(%rax)
  queueCreateInfo.queueFamilyIndex = queueFamilyIndex;
    6f45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f49:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6f4c:	89 50 14             	mov    %edx,0x14(%rax)
  queueCreateInfo.queueCount = queueCount;
    6f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f53:	8b 55 f0             	mov    -0x10(%rbp),%edx
    6f56:	89 50 18             	mov    %edx,0x18(%rax)
  queueCreateInfo.pQueuePriorities = pQueuePriorities;
    6f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f61:	48 89 50 20          	mov    %rdx,0x20(%rax)
  return queueCreateInfo;
    6f65:	90                   	nop
}
    6f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f6a:	5d                   	pop    %rbp
    6f6b:	c3                   	ret

0000000000006f6c <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    6f6c:	55                   	push   %rbp
    6f6d:	48 89 e5             	mov    %rsp,%rbp
    6f70:	53                   	push   %rbx
    6f71:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6f75:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    6f79:	be 00 00 00 00       	mov    $0x0,%esi
    6f7e:	48 89 c7             	mov    %rax,%rdi
    6f81:	e8 8a b2 ff ff       	call   2210 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6f86:	8b 45 c8             	mov    -0x38(%rbp),%eax
    6f89:	89 c3                	mov    %eax,%ebx
    6f8b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f8f:	48 89 c7             	mov    %rax,%rdi
    6f92:	e8 c9 c7 ff ff       	call   3760 <_ZNSaI17VkLayerPropertiesEC1Ev>
    6f97:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    6f9b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6f9f:	48 89 de             	mov    %rbx,%rsi
    6fa2:	48 89 c7             	mov    %rax,%rdi
    6fa5:	e8 ee c7 ff ff       	call   3798 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6faa:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6fae:	48 89 c7             	mov    %rax,%rdi
    6fb1:	e8 c6 c7 ff ff       	call   377c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6fb6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6fba:	48 89 c7             	mov    %rax,%rdi
    6fbd:	e8 90 c8 ff ff       	call   3852 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6fc2:	48 89 c2             	mov    %rax,%rdx
    6fc5:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    6fc9:	48 89 d6             	mov    %rdx,%rsi
    6fcc:	48 89 c7             	mov    %rax,%rdi
    6fcf:	e8 3c b2 ff ff       	call   2210 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    6fd4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6fd8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6fdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6fe0:	48 89 c7             	mov    %rax,%rdi
    6fe3:	e8 fe 04 00 00       	call   74e6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    6fe8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6fec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ff0:	48 89 c7             	mov    %rax,%rdi
    6ff3:	e8 14 05 00 00       	call   750c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    6ff8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6ffc:	eb 5b                	jmp    7059 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    6ffe:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7002:	48 89 c7             	mov    %rax,%rdi
    7005:	e8 8a 05 00 00       	call   7594 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    700a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    700e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7012:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7016:	48 89 d6             	mov    %rdx,%rsi
    7019:	48 89 c7             	mov    %rax,%rdi
    701c:	e8 2b 04 00 00       	call   744c <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    7021:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7025:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7029:	48 8b 3d 90 bc 00 00 	mov    0xbc90(%rip),%rdi        # 12cc0 <_ZN3vkh19validationLayerNameE>
    7030:	48 8b 35 91 bc 00 00 	mov    0xbc91(%rip),%rsi        # 12cc8 <_ZN3vkh19validationLayerNameE+0x8>
    7037:	48 89 d1             	mov    %rdx,%rcx
    703a:	48 89 c2             	mov    %rax,%rdx
    703d:	e8 75 05 00 00       	call   75b7 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    7042:	84 c0                	test   %al,%al
    7044:	74 07                	je     704d <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    7046:	bb 01 00 00 00       	mov    $0x1,%ebx
    704b:	eb 28                	jmp    7075 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    704d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7051:	48 89 c7             	mov    %rax,%rdi
    7054:	e8 17 05 00 00       	call   7570 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7059:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    705d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7061:	48 89 d6             	mov    %rdx,%rsi
    7064:	48 89 c7             	mov    %rax,%rdi
    7067:	e8 c9 04 00 00       	call   7535 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    706c:	84 c0                	test   %al,%al
    706e:	75 8e                	jne    6ffe <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    7070:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    7075:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7079:	48 89 c7             	mov    %rax,%rdi
    707c:	e8 8d c7 ff ff       	call   380e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7081:	89 d8                	mov    %ebx,%eax
    7083:	eb 34                	jmp    70b9 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    7085:	48 89 c3             	mov    %rax,%rbx
    7088:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    708c:	48 89 c7             	mov    %rax,%rdi
    708f:	e8 e8 c6 ff ff       	call   377c <_ZNSaI17VkLayerPropertiesED1Ev>
    7094:	48 89 d8             	mov    %rbx,%rax
    7097:	48 89 c7             	mov    %rax,%rdi
    709a:	e8 81 b2 ff ff       	call   2320 <_Unwind_Resume@plt>
}
    709f:	48 89 c3             	mov    %rax,%rbx
    70a2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    70a6:	48 89 c7             	mov    %rax,%rdi
    70a9:	e8 60 c7 ff ff       	call   380e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    70ae:	48 89 d8             	mov    %rbx,%rax
    70b1:	48 89 c7             	mov    %rax,%rdi
    70b4:	e8 67 b2 ff ff       	call   2320 <_Unwind_Resume@plt>
    70b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    70bd:	c9                   	leave
    70be:	c3                   	ret

00000000000070bf <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    70bf:	55                   	push   %rbp
    70c0:	48 89 e5             	mov    %rsp,%rbp
    70c3:	48 83 ec 20          	sub    $0x20,%rsp
    70c7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    70ca:	89 75 f8             	mov    %esi,-0x8(%rbp)
    70cd:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    70d1:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    70d5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    70d8:	83 f8 01             	cmp    $0x1,%eax
    70db:	7e 3c                	jle    7119 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    70dd:	be 0a 00 00 00       	mov    $0xa,%esi
    70e2:	48 8d 05 f7 c1 00 00 	lea    0xc1f7(%rip),%rax        # 132e0 <_ZSt4cerr@GLIBCXX_3.4>
    70e9:	48 89 c7             	mov    %rax,%rdi
    70ec:	e8 3f b1 ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    70f1:	48 89 c2             	mov    %rax,%rdx
    70f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    70f8:	48 8b 40 28          	mov    0x28(%rax),%rax
    70fc:	48 89 c6             	mov    %rax,%rsi
    70ff:	48 89 d7             	mov    %rdx,%rdi
    7102:	e8 99 b0 ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7107:	48 8b 15 8a be 00 00 	mov    0xbe8a(%rip),%rdx        # 12f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    710e:	48 89 d6             	mov    %rdx,%rsi
    7111:	48 89 c7             	mov    %rax,%rdi
    7114:	e8 d7 b0 ff ff       	call   21f0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    7119:	b8 00 00 00 00       	mov    $0x0,%eax
}
    711e:	c9                   	leave
    711f:	c3                   	ret

0000000000007120 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    7120:	55                   	push   %rbp
    7121:	48 89 e5             	mov    %rsp,%rbp
    7124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    7128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    712c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7130:	0f 11 00             	movups %xmm0,(%rax)
    7133:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7137:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    713b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    713f:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    7145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7149:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    7150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7154:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    715b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    715f:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # 70bf <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    7166:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    716a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    716e:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    7175:	00 
}
    7176:	90                   	nop
    7177:	5d                   	pop    %rbp
    7178:	c3                   	ret

0000000000007179 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    7179:	55                   	push   %rbp
    717a:	48 89 e5             	mov    %rsp,%rbp
    717d:	48 83 ec 30          	sub    $0x30,%rsp
    7181:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7185:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7189:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    718d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    7191:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7195:	48 8d 15 54 53 00 00 	lea    0x5354(%rip),%rdx        # c4f0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    719c:	48 89 d6             	mov    %rdx,%rsi
    719f:	48 89 c7             	mov    %rax,%rdi
    71a2:	e8 d9 af ff ff       	call   2180 <vkGetInstanceProcAddr@plt>
    71a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    71ab:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    71b0:	75 07                	jne    71b9 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    71b2:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    71b7:	eb 1b                	jmp    71d4 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    71b9:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    71bd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    71c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    71c5:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    71c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71cd:	48 89 c7             	mov    %rax,%rdi
    71d0:	41 ff d0             	call   *%r8
    71d3:	90                   	nop
}
    71d4:	c9                   	leave
    71d5:	c3                   	ret

00000000000071d6 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    71d6:	55                   	push   %rbp
    71d7:	48 89 e5             	mov    %rsp,%rbp
    71da:	41 54                	push   %r12
    71dc:	53                   	push   %rbx
    71dd:	48 83 ec 50          	sub    $0x50,%rsp
    71e1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    71e5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    71e9:	48 89 c7             	mov    %rax,%rdi
    71ec:	e8 2f ff ff ff       	call   7120 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    71f1:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    71f8:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    71f9:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    71fd:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7201:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7205:	48 89 d1             	mov    %rdx,%rcx
    7208:	ba 00 00 00 00       	mov    $0x0,%edx
    720d:	48 89 c7             	mov    %rax,%rdi
    7210:	e8 64 ff ff ff       	call   7179 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    7215:	85 c0                	test   %eax,%eax
    7217:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    721a:	84 c0                	test   %al,%al
    721c:	74 3b                	je     7259 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    721e:	bf 10 00 00 00       	mov    $0x10,%edi
    7223:	e8 88 ae ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    7228:	48 89 c3             	mov    %rax,%rbx
    722b:	48 8d 05 de 52 00 00 	lea    0x52de(%rip),%rax        # c510 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    7232:	48 89 c6             	mov    %rax,%rsi
    7235:	48 89 df             	mov    %rbx,%rdi
    7238:	e8 23 ae ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    723d:	48 8b 05 64 bd 00 00 	mov    0xbd64(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7244:	48 89 c2             	mov    %rax,%rdx
    7247:	48 8d 05 f2 ba 00 00 	lea    0xbaf2(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    724e:	48 89 c6             	mov    %rax,%rsi
    7251:	48 89 df             	mov    %rbx,%rdi
    7254:	e8 a7 b0 ff ff       	call   2300 <__cxa_throw@plt>
  }
  return debugMessenger;
    7259:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    725d:	eb 16                	jmp    7275 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    725f:	49 89 c4             	mov    %rax,%r12
    7262:	48 89 df             	mov    %rbx,%rdi
    7265:	e8 86 ae ff ff       	call   20f0 <__cxa_free_exception@plt>
    726a:	4c 89 e0             	mov    %r12,%rax
    726d:	48 89 c7             	mov    %rax,%rdi
    7270:	e8 ab b0 ff ff       	call   2320 <_Unwind_Resume@plt>
}
    7275:	48 83 c4 50          	add    $0x50,%rsp
    7279:	5b                   	pop    %rbx
    727a:	41 5c                	pop    %r12
    727c:	5d                   	pop    %rbp
    727d:	c3                   	ret

000000000000727e <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    727e:	55                   	push   %rbp
    727f:	48 89 e5             	mov    %rsp,%rbp
    7282:	48 83 ec 30          	sub    $0x30,%rsp
    7286:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    728a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    728e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    7292:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7296:	48 8d 15 93 52 00 00 	lea    0x5293(%rip),%rdx        # c530 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    729d:	48 89 d6             	mov    %rdx,%rsi
    72a0:	48 89 c7             	mov    %rax,%rdi
    72a3:	e8 d8 ae ff ff       	call   2180 <vkGetInstanceProcAddr@plt>
    72a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    72ac:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    72b1:	74 19                	je     72cc <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    72b3:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    72b7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    72bb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    72bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72c3:	48 89 ce             	mov    %rcx,%rsi
    72c6:	48 89 c7             	mov    %rax,%rdi
    72c9:	41 ff d0             	call   *%r8
  }
}
    72cc:	90                   	nop
    72cd:	c9                   	leave
    72ce:	c3                   	ret

00000000000072cf <_Z41__static_initialization_and_destruction_0ii>:

    72cf:	55                   	push   %rbp
    72d0:	48 89 e5             	mov    %rsp,%rbp
    72d3:	48 83 ec 10          	sub    $0x10,%rsp
    72d7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    72da:	89 75 f8             	mov    %esi,-0x8(%rbp)
    72dd:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    72e1:	75 3b                	jne    731e <_Z41__static_initialization_and_destruction_0ii+0x4f>
    72e3:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    72ea:	75 32                	jne    731e <_Z41__static_initialization_and_destruction_0ii+0x4f>
    72ec:	48 8d 05 ff c0 00 00 	lea    0xc0ff(%rip),%rax        # 133f2 <_ZStL8__ioinit>
    72f3:	48 89 c7             	mov    %rax,%rdi
    72f6:	e8 b5 af ff ff       	call   22b0 <_ZNSt8ios_base4InitC1Ev@plt>
    72fb:	48 8d 05 9e be 00 00 	lea    0xbe9e(%rip),%rax        # 131a0 <__dso_handle>
    7302:	48 89 c2             	mov    %rax,%rdx
    7305:	48 8d 05 e6 c0 00 00 	lea    0xc0e6(%rip),%rax        # 133f2 <_ZStL8__ioinit>
    730c:	48 89 c6             	mov    %rax,%rsi
    730f:	48 8b 05 b2 bc 00 00 	mov    0xbcb2(%rip),%rax        # 12fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    7316:	48 89 c7             	mov    %rax,%rdi
    7319:	e8 42 ae ff ff       	call   2160 <__cxa_atexit@plt>
    731e:	90                   	nop
    731f:	c9                   	leave
    7320:	c3                   	ret

0000000000007321 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    7321:	55                   	push   %rbp
    7322:	48 89 e5             	mov    %rsp,%rbp
    7325:	be ff ff 00 00       	mov    $0xffff,%esi
    732a:	bf 01 00 00 00       	mov    $0x1,%edi
    732f:	e8 9b ff ff ff       	call   72cf <_Z41__static_initialization_and_destruction_0ii>
    7334:	5d                   	pop    %rbp
    7335:	c3                   	ret

0000000000007336 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      static _GLIBCXX_CONSTEXPR bool
      eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
      { return __c1 == __c2; }

      static _GLIBCXX_CONSTEXPR bool
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    7336:	55                   	push   %rbp
    7337:	48 89 e5             	mov    %rsp,%rbp
    733a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    733e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	// LWG 467.
	return (static_cast<unsigned char>(__c1)
    7342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7346:	0f b6 00             	movzbl (%rax),%eax
    7349:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    734b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    734f:	0f b6 00             	movzbl (%rax),%eax
    7352:	38 c2                	cmp    %al,%dl
    7354:	0f 92 c0             	setb   %al
      }
    7357:	5d                   	pop    %rbp
    7358:	c3                   	ret

0000000000007359 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:

      static _GLIBCXX17_CONSTEXPR int
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    7359:	55                   	push   %rbp
    735a:	48 89 e5             	mov    %rsp,%rbp
    735d:	48 83 ec 30          	sub    $0x30,%rsp
    7361:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7365:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7369:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      {
	if (__n == 0)
    736d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    7372:	75 0a                	jne    737e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    7374:	b8 00 00 00 00       	mov    $0x0,%eax
    7379:	e9 99 00 00 00       	jmp    7417 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    737e:	e8 09 c0 ff ff       	call   338c <_ZSt23__is_constant_evaluatedv>
    7383:	84 c0                	test   %al,%al
    7385:	74 78                	je     73ff <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	  {
	    for (size_t __i = 0; __i < __n; ++__i)
    7387:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    738e:	00 
    738f:	eb 5d                	jmp    73ee <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    7391:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7399:	48 01 c2             	add    %rax,%rdx
    739c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    73a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73a4:	48 01 c8             	add    %rcx,%rax
    73a7:	48 89 d6             	mov    %rdx,%rsi
    73aa:	48 89 c7             	mov    %rax,%rdi
    73ad:	e8 84 ff ff ff       	call   7336 <_ZNSt11char_traitsIcE2ltERKcS2_>
    73b2:	84 c0                	test   %al,%al
    73b4:	74 07                	je     73bd <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    73b6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    73bb:	eb 5a                	jmp    7417 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    73bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    73c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73c5:	48 01 c2             	add    %rax,%rdx
    73c8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    73cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73d0:	48 01 c8             	add    %rcx,%rax
    73d3:	48 89 d6             	mov    %rdx,%rsi
    73d6:	48 89 c7             	mov    %rax,%rdi
    73d9:	e8 58 ff ff ff       	call   7336 <_ZNSt11char_traitsIcE2ltERKcS2_>
    73de:	84 c0                	test   %al,%al
    73e0:	74 07                	je     73e9 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    73e2:	b8 01 00 00 00       	mov    $0x1,%eax
    73e7:	eb 2e                	jmp    7417 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    73e9:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    73ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73f2:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    73f6:	72 99                	jb     7391 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    73f8:	b8 00 00 00 00       	mov    $0x0,%eax
    73fd:	eb 18                	jmp    7417 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	  }
#endif
	return __builtin_memcmp(__s1, __s2, __n);
    73ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7403:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    740b:	48 89 ce             	mov    %rcx,%rsi
    740e:	48 89 c7             	mov    %rax,%rdi
    7411:	e8 8a ac ff ff       	call   20a0 <memcmp@plt>
    7416:	90                   	nop
      }
    7417:	c9                   	leave
    7418:	c3                   	ret

0000000000007419 <_ZNSt11char_traitsIcE6lengthEPKc>:

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    7419:	55                   	push   %rbp
    741a:	48 89 e5             	mov    %rsp,%rbp
    741d:	48 83 ec 10          	sub    $0x10,%rsp
    7421:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    7425:	e8 62 bf ff ff       	call   338c <_ZSt23__is_constant_evaluatedv>
    742a:	84 c0                	test   %al,%al
    742c:	74 0e                	je     743c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    742e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7432:	48 89 c7             	mov    %rax,%rdi
    7435:	e8 44 00 00 00       	call   747e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    743a:	eb 0d                	jmp    7449 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    743c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7440:	48 89 c7             	mov    %rax,%rdi
    7443:	e8 48 ac ff ff       	call   2090 <strlen@plt>
    7448:	90                   	nop
      }
    7449:	c9                   	leave
    744a:	c3                   	ret
    744b:	90                   	nop

000000000000744c <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    744c:	55                   	push   %rbp
    744d:	48 89 e5             	mov    %rsp,%rbp
    7450:	48 83 ec 10          	sub    $0x10,%rsp
    7454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7458:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    745c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7460:	48 89 c7             	mov    %rax,%rdi
    7463:	e8 b1 ff ff ff       	call   7419 <_ZNSt11char_traitsIcE6lengthEPKc>
    7468:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    746c:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    746f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7473:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7477:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    747b:	90                   	nop
    747c:	c9                   	leave
    747d:	c3                   	ret

000000000000747e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    747e:	55                   	push   %rbp
    747f:	48 89 e5             	mov    %rsp,%rbp
    7482:	48 83 ec 20          	sub    $0x20,%rsp
    7486:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    748a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    7491:	00 
      while (!eq(__p[__i], char_type()))
    7492:	eb 05                	jmp    7499 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    7494:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    7499:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    749d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    74a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74a5:	48 01 c2             	add    %rax,%rdx
    74a8:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    74ac:	48 89 c6             	mov    %rax,%rsi
    74af:	48 89 d7             	mov    %rdx,%rdi
    74b2:	e8 0d 00 00 00       	call   74c4 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    74b7:	83 f0 01             	xor    $0x1,%eax
    74ba:	84 c0                	test   %al,%al
    74bc:	75 d6                	jne    7494 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    74be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    74c2:	c9                   	leave
    74c3:	c3                   	ret

00000000000074c4 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    74c4:	55                   	push   %rbp
    74c5:	48 89 e5             	mov    %rsp,%rbp
    74c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    74d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74d4:	0f b6 10             	movzbl (%rax),%edx
    74d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    74db:	0f b6 00             	movzbl (%rax),%eax
    74de:	38 c2                	cmp    %al,%dl
    74e0:	0f 94 c0             	sete   %al
    74e3:	5d                   	pop    %rbp
    74e4:	c3                   	ret
    74e5:	90                   	nop

00000000000074e6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    74e6:	55                   	push   %rbp
    74e7:	48 89 e5             	mov    %rsp,%rbp
    74ea:	48 83 ec 20          	sub    $0x20,%rsp
    74ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    74f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    74f6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    74fa:	48 89 d6             	mov    %rdx,%rsi
    74fd:	48 89 c7             	mov    %rax,%rdi
    7500:	e8 27 01 00 00       	call   762c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    7505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7509:	c9                   	leave
    750a:	c3                   	ret
    750b:	90                   	nop

000000000000750c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    750c:	55                   	push   %rbp
    750d:	48 89 e5             	mov    %rsp,%rbp
    7510:	48 83 ec 20          	sub    $0x20,%rsp
    7514:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    7518:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    751c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7520:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7524:	48 89 d6             	mov    %rdx,%rsi
    7527:	48 89 c7             	mov    %rax,%rdi
    752a:	e8 fd 00 00 00       	call   762c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    752f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7533:	c9                   	leave
    7534:	c3                   	ret

0000000000007535 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    7535:	55                   	push   %rbp
    7536:	48 89 e5             	mov    %rsp,%rbp
    7539:	53                   	push   %rbx
    753a:	48 83 ec 18          	sub    $0x18,%rsp
    753e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7542:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    7546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    754a:	48 89 c7             	mov    %rax,%rdi
    754d:	e8 f8 00 00 00       	call   764a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    7552:	48 8b 18             	mov    (%rax),%rbx
    7555:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7559:	48 89 c7             	mov    %rax,%rdi
    755c:	e8 e9 00 00 00       	call   764a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    7561:	48 8b 00             	mov    (%rax),%rax
    7564:	48 39 c3             	cmp    %rax,%rbx
    7567:	0f 95 c0             	setne  %al
    756a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    756e:	c9                   	leave
    756f:	c3                   	ret

0000000000007570 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    7570:	55                   	push   %rbp
    7571:	48 89 e5             	mov    %rsp,%rbp
    7574:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    7578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    757c:	48 8b 00             	mov    (%rax),%rax
    757f:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    7586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    758a:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    758d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7591:	5d                   	pop    %rbp
    7592:	c3                   	ret
    7593:	90                   	nop

0000000000007594 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    7594:	55                   	push   %rbp
    7595:	48 89 e5             	mov    %rsp,%rbp
    7598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    759c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75a0:	48 8b 00             	mov    (%rax),%rax
    75a3:	5d                   	pop    %rbp
    75a4:	c3                   	ret
    75a5:	90                   	nop

00000000000075a6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    75a6:	55                   	push   %rbp
    75a7:	48 89 e5             	mov    %rsp,%rbp
    75aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    75ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75b2:	48 8b 00             	mov    (%rax),%rax
    75b5:	5d                   	pop    %rbp
    75b6:	c3                   	ret

00000000000075b7 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    75b7:	55                   	push   %rbp
    75b8:	48 89 e5             	mov    %rsp,%rbp
    75bb:	53                   	push   %rbx
    75bc:	48 83 ec 28          	sub    $0x28,%rsp
    75c0:	48 89 f0             	mov    %rsi,%rax
    75c3:	49 89 f8             	mov    %rdi,%r8
    75c6:	4c 89 c6             	mov    %r8,%rsi
    75c9:	4c 89 cf             	mov    %r9,%rdi
    75cc:	48 89 c7             	mov    %rax,%rdi
    75cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    75d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75d7:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    75db:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    75df:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    75e3:	48 89 c7             	mov    %rax,%rdi
    75e6:	e8 bb ff ff ff       	call   75a6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    75eb:	48 89 c3             	mov    %rax,%rbx
    75ee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    75f2:	48 89 c7             	mov    %rax,%rdi
    75f5:	e8 ac ff ff ff       	call   75a6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    75fa:	48 39 c3             	cmp    %rax,%rbx
    75fd:	75 22                	jne    7621 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    75ff:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    7603:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7607:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    760b:	48 89 ce             	mov    %rcx,%rsi
    760e:	48 89 c7             	mov    %rax,%rdi
    7611:	e8 42 00 00 00       	call   7658 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    7616:	85 c0                	test   %eax,%eax
    7618:	75 07                	jne    7621 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    761a:	b8 01 00 00 00       	mov    $0x1,%eax
    761f:	eb 05                	jmp    7626 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    7621:	b8 00 00 00 00       	mov    $0x0,%eax
    7626:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    762a:	c9                   	leave
    762b:	c3                   	ret

000000000000762c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    762c:	55                   	push   %rbp
    762d:	48 89 e5             	mov    %rsp,%rbp
    7630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7634:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    7638:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    763c:	48 8b 10             	mov    (%rax),%rdx
    763f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7643:	48 89 10             	mov    %rdx,(%rax)
    7646:	90                   	nop
    7647:	5d                   	pop    %rbp
    7648:	c3                   	ret
    7649:	90                   	nop

000000000000764a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    764a:	55                   	push   %rbp
    764b:	48 89 e5             	mov    %rsp,%rbp
    764e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    7652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7656:	5d                   	pop    %rbp
    7657:	c3                   	ret

0000000000007658 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    7658:	55                   	push   %rbp
    7659:	48 89 e5             	mov    %rsp,%rbp
    765c:	48 83 ec 30          	sub    $0x30,%rsp
    7660:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7664:	48 89 d1             	mov    %rdx,%rcx
    7667:	48 89 f0             	mov    %rsi,%rax
    766a:	48 89 fa             	mov    %rdi,%rdx
    766d:	48 89 ca             	mov    %rcx,%rdx
    7670:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7674:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    7678:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    767c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    7680:	48 89 d6             	mov    %rdx,%rsi
    7683:	48 89 c7             	mov    %rax,%rdi
    7686:	e8 94 de ff ff       	call   551f <_ZSt3minImERKT_S2_S2_>
    768b:	48 8b 00             	mov    (%rax),%rax
    768e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    7692:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7696:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    769a:	48 8b 40 08          	mov    0x8(%rax),%rax
    769e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    76a2:	48 89 ce             	mov    %rcx,%rsi
    76a5:	48 89 c7             	mov    %rax,%rdi
    76a8:	e8 ac fc ff ff       	call   7359 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    76ad:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    76b0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    76b4:	75 19                	jne    76cf <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    76b6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    76ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76be:	48 8b 00             	mov    (%rax),%rax
    76c1:	48 89 d6             	mov    %rdx,%rsi
    76c4:	48 89 c7             	mov    %rax,%rdi
    76c7:	e8 08 00 00 00       	call   76d4 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    76cc:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    76cf:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    76d2:	c9                   	leave
    76d3:	c3                   	ret

00000000000076d4 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    76d4:	55                   	push   %rbp
    76d5:	48 89 e5             	mov    %rsp,%rbp
    76d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    76e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76e4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    76e8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    76ec:	b8 00 00 00 80       	mov    $0x80000000,%eax
    76f1:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    76f5:	7c 07                	jl     76fe <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    76f7:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    76fc:	eb 1b                	jmp    7719 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    76fe:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    7705:	ff ff ff 
    7708:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    770c:	7f 07                	jg     7715 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    770e:	b8 00 00 00 80       	mov    $0x80000000,%eax
    7713:	eb 04                	jmp    7719 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    7715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7719:	5d                   	pop    %rbp
    771a:	c3                   	ret
    771b:	90                   	nop

000000000000771c <_ZN9VulkanApp12createWindowEv>:
#include "vkh.hpp"

void VulkanApp::createWindow() {
    771c:	55                   	push   %rbp
    771d:	48 89 e5             	mov    %rsp,%rbp
    7720:	48 83 ec 10          	sub    $0x10,%rsp
    7724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    7728:	e8 f3 aa ff ff       	call   2220 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    772d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    7733:	b9 00 00 00 00       	mov    $0x0,%ecx
    7738:	48 8d 05 3d 54 00 00 	lea    0x543d(%rip),%rax        # cb7c <_ZN6__pstl9execution2v1L5unseqE+0x1>
    773f:	48 89 c2             	mov    %rax,%rdx
    7742:	be 58 02 00 00       	mov    $0x258,%esi
    7747:	bf 20 03 00 00       	mov    $0x320,%edi
    774c:	e8 88 ae ff ff       	call   25d9 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    7751:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7755:	48 89 02             	mov    %rax,(%rdx)
}
    7758:	90                   	nop
    7759:	c9                   	leave
    775a:	c3                   	ret
    775b:	90                   	nop

000000000000775c <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    775c:	55                   	push   %rbp
    775d:	48 89 e5             	mov    %rsp,%rbp
    7760:	41 55                	push   %r13
    7762:	41 54                	push   %r12
    7764:	53                   	push   %rbx
    7765:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    776c:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
  auto appInfo = vkh::makeApplicationInfo();
    7773:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7777:	48 8d 15 fe 53 00 00 	lea    0x53fe(%rip),%rdx        # cb7c <_ZN6__pstl9execution2v1L5unseqE+0x1>
    777e:	48 89 d6             	mov    %rdx,%rsi
    7781:	48 89 c7             	mov    %rax,%rdi
    7784:	e8 fd f5 ff ff       	call   6d86 <_ZN3vkh19makeApplicationInfoEPKc>
  auto extensions = vkh::getRequiredInstanceExtensionNameList(true);
    7789:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    778d:	be 01 00 00 00       	mov    $0x1,%esi
    7792:	48 89 c7             	mov    %rax,%rdi
    7795:	e8 d5 b3 ff ff       	call   2b6f <_ZN3vkh36getRequiredInstanceExtensionNameListEb>
  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    779a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    779e:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    77a5:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    77ac:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    77b3:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    77ba:	48 89 c7             	mov    %rax,%rdi
    77bd:	e8 5e f9 ff ff       	call   7120 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  auto createInfo = vkh::makeInstanceCreateInfo(
    77c2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    77c9:	48 83 c0 10          	add    $0x10,%rax
    77cd:	48 89 c7             	mov    %rax,%rdi
    77d0:	e8 97 0c 00 00       	call   846c <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    77d5:	49 89 c4             	mov    %rax,%r12
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
      static_cast<uint32_t>(layers.size()), layers.data(),
    77d8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    77df:	48 83 c0 10          	add    $0x10,%rax
    77e3:	48 89 c7             	mov    %rax,%rdi
    77e6:	e8 b3 e6 ff ff       	call   5e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    77eb:	41 89 c5             	mov    %eax,%r13d
      &appInfo, static_cast<uint32_t>(extensions.size()), extensions.data(),
    77ee:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    77f2:	48 89 c7             	mov    %rax,%rdi
    77f5:	e8 4e 0c 00 00       	call   8448 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    77fa:	48 89 c3             	mov    %rax,%rbx
    77fd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7801:	48 89 c7             	mov    %rax,%rdi
    7804:	e8 95 e6 ff ff       	call   5e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto createInfo = vkh::makeInstanceCreateInfo(
    7809:	89 c7                	mov    %eax,%edi
    780b:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    7812:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    7816:	48 83 ec 08          	sub    $0x8,%rsp
    781a:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    7821:	52                   	push   %rdx
    7822:	4d 89 e1             	mov    %r12,%r9
    7825:	45 89 e8             	mov    %r13d,%r8d
    7828:	48 89 d9             	mov    %rbx,%rcx
    782b:	89 fa                	mov    %edi,%edx
    782d:	48 89 c7             	mov    %rax,%rdi
    7830:	e8 bd f5 ff ff       	call   6df2 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcjS6_PKv>
    7835:	48 83 c4 10          	add    $0x10,%rsp
      (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo);
  instance = vkh::createInstance(&createInfo);
    7839:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    7840:	be 00 00 00 00       	mov    $0x0,%esi
    7845:	48 89 c7             	mov    %rax,%rdi
    7848:	e8 e2 ad ff ff       	call   262f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    784d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    7854:	48 89 42 08          	mov    %rax,0x8(%rdx)

  for (const auto &ext : extensions) {
    7858:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    785c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7864:	48 89 c7             	mov    %rax,%rdi
    7867:	e8 8e df ff ff       	call   57fa <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    786c:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
    7873:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7877:	48 89 c7             	mov    %rax,%rdi
    787a:	e8 7b d4 ff ff       	call   4cfa <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    787f:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    7886:	eb 48                	jmp    78d0 <_ZN9VulkanApp14createInstanceEv+0x174>
    7888:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    788f:	48 89 c7             	mov    %rax,%rdi
    7892:	e8 4d e0 ff ff       	call   58e4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    7897:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    std::cout << ext << '\n';
    789b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    789f:	48 8b 00             	mov    (%rax),%rax
    78a2:	48 89 c6             	mov    %rax,%rsi
    78a5:	48 8d 05 14 b9 00 00 	lea    0xb914(%rip),%rax        # 131c0 <_ZSt4cout@GLIBCXX_3.4>
    78ac:	48 89 c7             	mov    %rax,%rdi
    78af:	e8 ec a8 ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    78b4:	be 0a 00 00 00       	mov    $0xa,%esi
    78b9:	48 89 c7             	mov    %rax,%rdi
    78bc:	e8 6f a9 ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &ext : extensions) {
    78c1:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    78c8:	48 89 c7             	mov    %rax,%rdi
    78cb:	e8 fc 0b 00 00       	call   84cc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    78d0:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    78d7:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    78de:	48 89 d6             	mov    %rdx,%rsi
    78e1:	48 89 c7             	mov    %rax,%rdi
    78e4:	e8 a7 0b 00 00       	call   8490 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    78e9:	84 c0                	test   %al,%al
    78eb:	75 9b                	jne    7888 <_ZN9VulkanApp14createInstanceEv+0x12c>
  }
}
    78ed:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    78f1:	48 89 c7             	mov    %rax,%rdi
    78f4:	e8 83 bd ff ff       	call   367c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    78f9:	eb 1a                	jmp    7915 <_ZN9VulkanApp14createInstanceEv+0x1b9>
    78fb:	48 89 c3             	mov    %rax,%rbx
    78fe:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7902:	48 89 c7             	mov    %rax,%rdi
    7905:	e8 72 bd ff ff       	call   367c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    790a:	48 89 d8             	mov    %rbx,%rax
    790d:	48 89 c7             	mov    %rax,%rdi
    7910:	e8 0b aa ff ff       	call   2320 <_Unwind_Resume@plt>
    7915:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    7919:	5b                   	pop    %rbx
    791a:	41 5c                	pop    %r12
    791c:	41 5d                	pop    %r13
    791e:	5d                   	pop    %rbp
    791f:	c3                   	ret

0000000000007920 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    7920:	55                   	push   %rbp
    7921:	48 89 e5             	mov    %rsp,%rbp
    7924:	48 83 ec 10          	sub    $0x10,%rsp
    7928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  debugMessenger = vkh::createDebugMessenger(instance);
    792c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7930:	48 8b 40 08          	mov    0x8(%rax),%rax
    7934:	48 89 c7             	mov    %rax,%rdi
    7937:	e8 9a f8 ff ff       	call   71d6 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    793c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7940:	48 89 42 28          	mov    %rax,0x28(%rdx)
}
    7944:	90                   	nop
    7945:	c9                   	leave
    7946:	c3                   	ret
    7947:	90                   	nop

0000000000007948 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physicalDevice) {
    7948:	55                   	push   %rbp
    7949:	48 89 e5             	mov    %rsp,%rbp
    794c:	53                   	push   %rbx
    794d:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    7954:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    795b:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    7962:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies =
      vkh::getGraphicsQueueFamilyPropertyList(physicalDevice);
    7969:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    796d:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    7974:	48 89 d6             	mov    %rdx,%rsi
    7977:	48 89 c7             	mov    %rax,%rdi
    797a:	e8 2a b6 ff ff       	call   2fa9 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physicalDevice);
    797f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7983:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    798a:	48 89 d6             	mov    %rdx,%rsi
    798d:	48 89 c7             	mov    %rax,%rdi
    7990:	e8 48 b7 ff ff       	call   30dd <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physicalDevice, surface);
    7995:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    799c:	48 8b 50 30          	mov    0x30(%rax),%rdx
    79a0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    79a7:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    79ae:	48 89 ce             	mov    %rcx,%rsi
    79b1:	48 89 c7             	mov    %rax,%rdi
    79b4:	e8 5d b8 ff ff       	call   3216 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  presentation commands */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    79b9:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    79c0:	00 
    79c1:	e9 c5 00 00 00       	jmp    7a8b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    79c6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79ca:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    79ce:	48 89 d6             	mov    %rdx,%rsi
    79d1:	48 89 c7             	mov    %rax,%rdi
    79d4:	e8 a3 c3 ff ff       	call   3d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    79d9:	48 89 c7             	mov    %rax,%rdi
    79dc:	e8 39 0b 00 00       	call   851a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    79e1:	84 c0                	test   %al,%al
    79e3:	74 48                	je     7a2d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    79e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79e9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    79ed:	48 89 d6             	mov    %rdx,%rsi
    79f0:	48 89 c7             	mov    %rax,%rdi
    79f3:	e8 84 c3 ff ff       	call   3d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    79f8:	48 89 c7             	mov    %rax,%rdi
    79fb:	e8 1a 0b 00 00       	call   851a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    7a00:	84 c0                	test   %al,%al
    7a02:	74 29                	je     7a2d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    7a04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7a08:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7a0f:	48 89 d6             	mov    %rdx,%rsi
    7a12:	48 89 c7             	mov    %rax,%rdi
    7a15:	e8 62 c3 ff ff       	call   3d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7a1a:	48 89 c7             	mov    %rax,%rdi
    7a1d:	e8 f8 0a 00 00       	call   851a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    7a22:	84 c0                	test   %al,%al
    7a24:	74 07                	je     7a2d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    7a26:	b8 01 00 00 00       	mov    $0x1,%eax
    7a2b:	eb 05                	jmp    7a32 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    7a2d:	b8 00 00 00 00       	mov    $0x0,%eax
    7a32:	84 c0                	test   %al,%al
    7a34:	74 50                	je     7a86 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    7a36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a3a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    7a3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7a41:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7a45:	48 89 d6             	mov    %rdx,%rsi
    7a48:	48 89 c7             	mov    %rax,%rdi
    7a4b:	e8 2c c3 ff ff       	call   3d7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7a50:	48 89 c7             	mov    %rax,%rdi
    7a53:	e8 dc 0a 00 00       	call   8534 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    7a58:	48 89 c2             	mov    %rax,%rdx
    7a5b:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    7a5f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7a63:	48 89 ce             	mov    %rcx,%rsi
    7a66:	48 89 c7             	mov    %rax,%rdi
    7a69:	e8 f8 0a 00 00       	call   8566 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    7a6e:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    7a72:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7a79:	48 89 d6             	mov    %rdx,%rsi
    7a7c:	48 89 c7             	mov    %rax,%rdi
    7a7f:	e8 38 0b 00 00       	call   85bc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    7a84:	eb 2f                	jmp    7ab5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    7a86:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    7a8b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7a8f:	48 89 c7             	mov    %rax,%rdi
    7a92:	e8 55 0a 00 00       	call   84ec <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    7a97:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    7a9b:	0f 92 c0             	setb   %al
    7a9e:	84 c0                	test   %al,%al
    7aa0:	0f 85 20 ff ff ff    	jne    79c6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    7aa6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7aad:	48 89 c7             	mov    %rax,%rdi
    7ab0:	e8 4b 08 00 00       	call   8300 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    7ab5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7abc:	48 89 c7             	mov    %rax,%rdi
    7abf:	e8 b8 c1 ff ff       	call   3c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7ac4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7ac8:	48 89 c7             	mov    %rax,%rdi
    7acb:	e8 ac c1 ff ff       	call   3c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7ad0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7ad4:	48 89 c7             	mov    %rax,%rdi
    7ad7:	e8 a0 c1 ff ff       	call   3c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7adc:	eb 3f                	jmp    7b1d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    7ade:	48 89 c3             	mov    %rax,%rbx
    7ae1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7ae8:	48 89 c7             	mov    %rax,%rdi
    7aeb:	e8 8c c1 ff ff       	call   3c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7af0:	eb 03                	jmp    7af5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    7af2:	48 89 c3             	mov    %rax,%rbx
    7af5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7af9:	48 89 c7             	mov    %rax,%rdi
    7afc:	e8 7b c1 ff ff       	call   3c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7b01:	eb 03                	jmp    7b06 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    7b03:	48 89 c3             	mov    %rax,%rbx
    7b06:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7b0a:	48 89 c7             	mov    %rax,%rdi
    7b0d:	e8 6a c1 ff ff       	call   3c7c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7b12:	48 89 d8             	mov    %rbx,%rax
    7b15:	48 89 c7             	mov    %rax,%rdi
    7b18:	e8 03 a8 ff ff       	call   2320 <_Unwind_Resume@plt>
    7b1d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7b24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7b28:	c9                   	leave
    7b29:	c3                   	ret

0000000000007b2a <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    7b2a:	55                   	push   %rbp
    7b2b:	48 89 e5             	mov    %rsp,%rbp
    7b2e:	41 54                	push   %r12
    7b30:	53                   	push   %rbx
    7b31:	48 81 ec 70 05 00 00 	sub    $0x570,%rsp
    7b38:	48 89 bd b8 fa ff ff 	mov    %rdi,-0x548(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    7b3f:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
    7b46:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7b4a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7b4e:	48 89 d6             	mov    %rdx,%rsi
    7b51:	48 89 c7             	mov    %rax,%rdi
    7b54:	e8 b8 b1 ff ff       	call   2d11 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    7b59:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7b60:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    7b61:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7b65:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    7b69:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physicalDevice : physicalDeviceList) {
    7b6d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7b71:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7b75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b79:	48 89 c7             	mov    %rax,%rdi
    7b7c:	e8 6f 0a 00 00       	call   85f0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    7b81:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    7b88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b8c:	48 89 c7             	mov    %rax,%rdi
    7b8f:	e8 82 0a 00 00       	call   8616 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    7b94:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    7b9b:	e9 9a 00 00 00       	jmp    7c3a <_ZN9VulkanApp12createDeviceEv+0x110>
    7ba0:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    7ba7:	48 89 c7             	mov    %rax,%rdi
    7baa:	e8 eb 0a 00 00       	call   869a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    7baf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    auto physDevPropList = vkh::getPhysicalDevicePropertyList(physicalDevice);
    7bb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7bb7:	48 8b 10             	mov    (%rax),%rdx
    7bba:	48 8d 85 e0 fa ff ff 	lea    -0x520(%rbp),%rax
    7bc1:	48 89 d6             	mov    %rdx,%rsi
    7bc4:	48 89 c7             	mov    %rax,%rdi
    7bc7:	e8 b4 b2 ff ff       	call   2e80 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
    /* Only selected a discrete GPU that has a queue family supporting
    graphics, computing, and presentation commands */
    if (physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU) {
    7bcc:	8b 85 f0 fa ff ff    	mov    -0x510(%rbp),%eax
    7bd2:	83 f8 02             	cmp    $0x2,%eax
    7bd5:	75 54                	jne    7c2b <_ZN9VulkanApp12createDeviceEv+0x101>
      if (auto returnedQueueFamily = selectQueueFamily(physicalDevice);
    7bd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7bdb:	48 8b 10             	mov    (%rax),%rdx
    7bde:	48 8d 85 c0 fa ff ff 	lea    -0x540(%rbp),%rax
    7be5:	48 8b 8d b8 fa ff ff 	mov    -0x548(%rbp),%rcx
    7bec:	48 89 ce             	mov    %rcx,%rsi
    7bef:	48 89 c7             	mov    %rax,%rdi
    7bf2:	e8 51 fd ff ff       	call   7948 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    7bf7:	48 8d 85 c0 fa ff ff 	lea    -0x540(%rbp),%rax
    7bfe:	48 89 c7             	mov    %rax,%rdi
    7c01:	e8 a6 0a 00 00       	call   86ac <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physicalDevice);
    7c06:	84 c0                	test   %al,%al
    7c08:	74 21                	je     7c2b <_ZN9VulkanApp12createDeviceEv+0x101>
        selectedQueueFamily = returnedQueueFamily;
    7c0a:	48 8d 95 c0 fa ff ff 	lea    -0x540(%rbp),%rdx
    7c11:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7c15:	48 89 d6             	mov    %rdx,%rsi
    7c18:	48 89 c7             	mov    %rax,%rdi
    7c1b:	e8 32 07 00 00       	call   8352 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physicalDevice;
    7c20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c24:	48 8b 00             	mov    (%rax),%rax
    7c27:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physicalDevice : physicalDeviceList) {
    7c2b:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    7c32:	48 89 c7             	mov    %rax,%rdi
    7c35:	e8 40 0a 00 00       	call   867a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    7c3a:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    7c41:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    7c48:	48 89 d6             	mov    %rdx,%rsi
    7c4b:	48 89 c7             	mov    %rax,%rdi
    7c4e:	e8 ec 09 00 00       	call   863f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    7c53:	84 c0                	test   %al,%al
    7c55:	0f 85 45 ff ff ff    	jne    7ba0 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    7c5b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    7c60:	75 3b                	jne    7c9d <_ZN9VulkanApp12createDeviceEv+0x173>
    throw std::runtime_error("Failed to select a physical device.");
    7c62:	bf 10 00 00 00       	mov    $0x10,%edi
    7c67:	e8 44 a4 ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    7c6c:	48 89 c3             	mov    %rax,%rbx
    7c6f:	48 8d 05 1a 4f 00 00 	lea    0x4f1a(%rip),%rax        # cb90 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    7c76:	48 89 c6             	mov    %rax,%rsi
    7c79:	48 89 df             	mov    %rbx,%rdi
    7c7c:	e8 df a3 ff ff       	call   2060 <_ZNSt13runtime_errorC1EPKc@plt>
    7c81:	48 8b 05 20 b3 00 00 	mov    0xb320(%rip),%rax        # 12fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7c88:	48 89 c2             	mov    %rax,%rdx
    7c8b:	48 8d 05 ae b0 00 00 	lea    0xb0ae(%rip),%rax        # 12d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c92:	48 89 c6             	mov    %rax,%rsi
    7c95:	48 89 df             	mov    %rbx,%rdi
    7c98:	e8 63 a6 ff ff       	call   2300 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    7c9d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7ca1:	48 89 c7             	mov    %rax,%rdi
    7ca4:	e8 d3 06 00 00       	call   837c <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    7ca9:	8b 00                	mov    (%rax),%eax
    7cab:	89 45 dc             	mov    %eax,-0x24(%rbp)
  VkDeviceQueueCreateInfo queueCreateInfo;
  const float queuePriority = 1.0f;
    7cae:	f3 0f 10 05 5e 4f 00 	movss  0x4f5e(%rip),%xmm0        # cc14 <_ZN6__pstl9execution2v1L5unseqE+0x99>
    7cb5:	00 
    7cb6:	f3 0f 11 85 5c ff ff 	movss  %xmm0,-0xa4(%rbp)
    7cbd:	ff 
  queueCreateInfo = vkh::makeDeviceQueueCreateInfo(
      selectedQueueFamily.value().first, 1, &queuePriority);
    7cbe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7cc2:	48 89 c7             	mov    %rax,%rdi
    7cc5:	e8 b2 06 00 00       	call   837c <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
  queueCreateInfo = vkh::makeDeviceQueueCreateInfo(
    7cca:	8b 30                	mov    (%rax),%esi
    7ccc:	48 8d 85 80 fa ff ff 	lea    -0x580(%rbp),%rax
    7cd3:	48 8d 95 5c ff ff ff 	lea    -0xa4(%rbp),%rdx
    7cda:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    7ce0:	48 89 d1             	mov    %rdx,%rcx
    7ce3:	ba 01 00 00 00       	mov    $0x1,%edx
    7ce8:	48 89 c7             	mov    %rax,%rdi
    7ceb:	e8 15 f2 ff ff       	call   6f05 <_ZN3vkh25makeDeviceQueueCreateInfoEjjPKfPKv>
    7cf0:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
    7cf7:	48 8b 95 88 fa ff ff 	mov    -0x578(%rbp),%rdx
    7cfe:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    7d05:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    7d0c:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
    7d13:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
    7d1a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    7d21:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    7d28:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
    7d2f:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    7d33:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    7d3a:	b8 00 00 00 00       	mov    $0x0,%eax
    7d3f:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    7d44:	48 89 d7             	mov    %rdx,%rdi
    7d47:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    7d4a:	48 89 fa             	mov    %rdi,%rdx
    7d4d:	89 02                	mov    %eax,(%rdx)
    7d4f:	48 83 c2 04          	add    $0x4,%rdx
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    7d53:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
    7d5a:	48 83 c0 10          	add    $0x10,%rax
    7d5e:	48 89 c7             	mov    %rax,%rdi
    7d61:	e8 06 07 00 00       	call   846c <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    7d66:	48 89 c3             	mov    %rax,%rbx
      1, &queueCreateInfo, &deviceFeatures,
      static_cast<uint32_t>(layers.size()), layers.data());
    7d69:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
    7d70:	48 83 c0 10          	add    $0x10,%rax
    7d74:	48 89 c7             	mov    %rax,%rdi
    7d77:	e8 22 e1 ff ff       	call   5e9e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  auto deviceCreateInfo = vkh::makeDeviceCreateInfo(
    7d7c:	89 c6                	mov    %eax,%esi
    7d7e:	48 8d 85 30 fe ff ff 	lea    -0x1d0(%rbp),%rax
    7d85:	48 8d 8d 80 fe ff ff 	lea    -0x180(%rbp),%rcx
    7d8c:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    7d93:	48 83 ec 08          	sub    $0x8,%rsp
    7d97:	6a 00                	push   $0x0
    7d99:	49 89 d9             	mov    %rbx,%r9
    7d9c:	41 89 f0             	mov    %esi,%r8d
    7d9f:	be 01 00 00 00       	mov    $0x1,%esi
    7da4:	48 89 c7             	mov    %rax,%rdi
    7da7:	e8 cd f0 ff ff       	call   6e79 <_ZN3vkh20makeDeviceCreateInfoEjPK23VkDeviceQueueCreateInfoPK24VkPhysicalDeviceFeaturesjPKPKcPKv>
    7dac:	48 83 c4 10          	add    $0x10,%rsp
  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    7db0:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    7db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dbb:	ba 00 00 00 00       	mov    $0x0,%edx
    7dc0:	48 89 ce             	mov    %rcx,%rsi
    7dc3:	48 89 c7             	mov    %rax,%rdi
    7dc6:	e8 f7 a8 ff ff       	call   26c2 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    7dcb:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
    7dd2:	48 89 42 38          	mov    %rax,0x38(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    7dd6:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
    7ddd:	48 8d 50 40          	lea    0x40(%rax),%rdx
    7de1:	48 8b 85 b8 fa ff ff 	mov    -0x548(%rbp),%rax
    7de8:	48 8b 40 38          	mov    0x38(%rax),%rax
    7dec:	8b 75 dc             	mov    -0x24(%rbp),%esi
    7def:	48 89 d1             	mov    %rdx,%rcx
    7df2:	ba 00 00 00 00       	mov    $0x0,%edx
    7df7:	48 89 c7             	mov    %rax,%rdi
    7dfa:	e8 61 a4 ff ff       	call   2260 <vkGetDeviceQueue@plt>
}
    7dff:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7e03:	48 89 c7             	mov    %rax,%rdi
    7e06:	e8 71 bb ff ff       	call   397c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7e0b:	eb 2a                	jmp    7e37 <_ZN9VulkanApp12createDeviceEv+0x30d>
    throw std::runtime_error("Failed to select a physical device.");
    7e0d:	49 89 c4             	mov    %rax,%r12
    7e10:	48 89 df             	mov    %rbx,%rdi
    7e13:	e8 d8 a2 ff ff       	call   20f0 <__cxa_free_exception@plt>
    7e18:	4c 89 e3             	mov    %r12,%rbx
    7e1b:	eb 03                	jmp    7e20 <_ZN9VulkanApp12createDeviceEv+0x2f6>
}
    7e1d:	48 89 c3             	mov    %rax,%rbx
    7e20:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7e24:	48 89 c7             	mov    %rax,%rdi
    7e27:	e8 50 bb ff ff       	call   397c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7e2c:	48 89 d8             	mov    %rbx,%rax
    7e2f:	48 89 c7             	mov    %rax,%rdi
    7e32:	e8 e9 a4 ff ff       	call   2320 <_Unwind_Resume@plt>
    7e37:	48 8d 65 f0          	lea    -0x10(%rbp),%rsp
    7e3b:	5b                   	pop    %rbx
    7e3c:	41 5c                	pop    %r12
    7e3e:	5d                   	pop    %rbp
    7e3f:	c3                   	ret

0000000000007e40 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    7e40:	55                   	push   %rbp
    7e41:	48 89 e5             	mov    %rsp,%rbp
    7e44:	48 83 ec 10          	sub    $0x10,%rsp
    7e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    7e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e50:	48 8b 08             	mov    (%rax),%rcx
    7e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e57:	48 8b 40 08          	mov    0x8(%rax),%rax
    7e5b:	ba 00 00 00 00       	mov    $0x0,%edx
    7e60:	48 89 ce             	mov    %rcx,%rsi
    7e63:	48 89 c7             	mov    %rax,%rdi
    7e66:	e8 ef a8 ff ff       	call   275a <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    7e6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7e6f:	48 89 42 30          	mov    %rax,0x30(%rdx)
}
    7e73:	90                   	nop
    7e74:	c9                   	leave
    7e75:	c3                   	ret

0000000000007e76 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    7e76:	55                   	push   %rbp
    7e77:	48 89 e5             	mov    %rsp,%rbp
    7e7a:	41 55                	push   %r13
    7e7c:	41 54                	push   %r12
    7e7e:	53                   	push   %rbx
    7e7f:	48 83 ec 28          	sub    $0x28,%rsp
    7e83:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7e87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e8b:	48 8d 58 10          	lea    0x10(%rax),%rbx
    7e8f:	48 8d 05 1e 4d 00 00 	lea    0x4d1e(%rip),%rax        # cbb4 <_ZN6__pstl9execution2v1L5unseqE+0x39>
    7e96:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    7e9a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7e9e:	49 89 c4             	mov    %rax,%r12
    7ea1:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    7ea7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7eab:	48 89 c7             	mov    %rax,%rdi
    7eae:	e8 1b b7 ff ff       	call   35ce <_ZNSaIPKcEC1Ev>
    7eb3:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7eb7:	4d 89 e0             	mov    %r12,%r8
    7eba:	4d 89 e9             	mov    %r13,%r9
    7ebd:	4c 89 e6             	mov    %r12,%rsi
    7ec0:	4c 89 ef             	mov    %r13,%rdi
    7ec3:	48 89 fa             	mov    %rdi,%rdx
    7ec6:	48 89 c1             	mov    %rax,%rcx
    7ec9:	4c 89 c6             	mov    %r8,%rsi
    7ecc:	48 89 df             	mov    %rbx,%rdi
    7ecf:	e8 ec 04 00 00       	call   83c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    7ed4:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7ed8:	48 89 c7             	mov    %rax,%rdi
    7edb:	e8 0a b7 ff ff       	call   35ea <_ZNSaIPKcED1Ev>
  createWindow();
    7ee0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ee4:	48 89 c7             	mov    %rax,%rdi
    7ee7:	e8 30 f8 ff ff       	call   771c <_ZN9VulkanApp12createWindowEv>
  createInstance();
    7eec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ef0:	48 89 c7             	mov    %rax,%rdi
    7ef3:	e8 64 f8 ff ff       	call   775c <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    7ef8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7efc:	48 89 c7             	mov    %rax,%rdi
    7eff:	e8 1c fa ff ff       	call   7920 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    7f04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f08:	48 89 c7             	mov    %rax,%rdi
    7f0b:	e8 30 ff ff ff       	call   7e40 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    7f10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f14:	48 89 c7             	mov    %rax,%rdi
    7f17:	e8 0e fc ff ff       	call   7b2a <_ZN9VulkanApp12createDeviceEv>
}
    7f1c:	eb 38                	jmp    7f56 <_ZN9VulkanAppC1Ev+0xe0>
VulkanApp::VulkanApp() {
    7f1e:	48 89 c3             	mov    %rax,%rbx
    7f21:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7f25:	48 89 c7             	mov    %rax,%rdi
    7f28:	e8 bd b6 ff ff       	call   35ea <_ZNSaIPKcED1Ev>
    7f2d:	48 89 d8             	mov    %rbx,%rax
    7f30:	48 89 c7             	mov    %rax,%rdi
    7f33:	e8 e8 a3 ff ff       	call   2320 <_Unwind_Resume@plt>
    7f38:	48 89 c3             	mov    %rax,%rbx
    7f3b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f3f:	48 83 c0 10          	add    $0x10,%rax
}
    7f43:	48 89 c7             	mov    %rax,%rdi
    7f46:	e8 31 b7 ff ff       	call   367c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    7f4b:	48 89 d8             	mov    %rbx,%rax
    7f4e:	48 89 c7             	mov    %rax,%rdi
    7f51:	e8 ca a3 ff ff       	call   2320 <_Unwind_Resume@plt>
    7f56:	48 83 c4 28          	add    $0x28,%rsp
    7f5a:	5b                   	pop    %rbx
    7f5b:	41 5c                	pop    %r12
    7f5d:	41 5d                	pop    %r13
    7f5f:	5d                   	pop    %rbp
    7f60:	c3                   	ret
    7f61:	90                   	nop

0000000000007f62 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    7f62:	55                   	push   %rbp
    7f63:	48 89 e5             	mov    %rsp,%rbp
    7f66:	48 83 ec 10          	sub    $0x10,%rsp
    7f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  vkh::destroyDevice(device);
    7f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f72:	48 8b 40 38          	mov    0x38(%rax),%rax
    7f76:	be 00 00 00 00       	mov    $0x0,%esi
    7f7b:	48 89 c7             	mov    %rax,%rdi
    7f7e:	e8 b0 a8 ff ff       	call   2833 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    7f83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f87:	48 8b 48 28          	mov    0x28(%rax),%rcx
    7f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f8f:	48 8b 40 08          	mov    0x8(%rax),%rax
    7f93:	ba 00 00 00 00       	mov    $0x0,%edx
    7f98:	48 89 ce             	mov    %rcx,%rsi
    7f9b:	48 89 c7             	mov    %rax,%rdi
    7f9e:	e8 db f2 ff ff       	call   727e <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    7fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa7:	48 8b 48 30          	mov    0x30(%rax),%rcx
    7fab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7faf:	48 8b 40 08          	mov    0x8(%rax),%rax
    7fb3:	ba 00 00 00 00       	mov    $0x0,%edx
    7fb8:	48 89 ce             	mov    %rcx,%rsi
    7fbb:	48 89 c7             	mov    %rax,%rdi
    7fbe:	e8 96 a8 ff ff       	call   2859 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    7fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc7:	48 8b 40 08          	mov    0x8(%rax),%rax
    7fcb:	be 00 00 00 00       	mov    $0x0,%esi
    7fd0:	48 89 c7             	mov    %rax,%rdi
    7fd3:	e8 35 a8 ff ff       	call   280d <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  glfwDestroyWindow(window);
    7fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fdc:	48 8b 00             	mov    (%rax),%rax
    7fdf:	48 89 c7             	mov    %rax,%rdi
    7fe2:	e8 59 a0 ff ff       	call   2040 <glfwDestroyWindow@plt>
  glfwTerminate();
    7fe7:	e8 f4 a1 ff ff       	call   21e0 <glfwTerminate@plt>
  std::cout << "aa\n";
    7fec:	48 8d 05 dd 4b 00 00 	lea    0x4bdd(%rip),%rax        # cbd0 <_ZN6__pstl9execution2v1L5unseqE+0x55>
    7ff3:	48 89 c6             	mov    %rax,%rsi
    7ff6:	48 8d 05 c3 b1 00 00 	lea    0xb1c3(%rip),%rax        # 131c0 <_ZSt4cout@GLIBCXX_3.4>
    7ffd:	48 89 c7             	mov    %rax,%rdi
    8000:	e8 9b a1 ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
VulkanApp::~VulkanApp() {
    8005:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8009:	48 83 c0 10          	add    $0x10,%rax
}
    800d:	48 89 c7             	mov    %rax,%rdi
    8010:	e8 67 b6 ff ff       	call   367c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8015:	90                   	nop
    8016:	c9                   	leave
    8017:	c3                   	ret

0000000000008018 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    8018:	55                   	push   %rbp
    8019:	48 89 e5             	mov    %rsp,%rbp
    801c:	53                   	push   %rbx
    801d:	48 83 ec 78          	sub    $0x78,%rsp
    8021:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  vkh::Timer time_total;
    8025:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8029:	48 89 c7             	mov    %rax,%rdi
    802c:	e8 03 07 00 00       	call   8734 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    8031:	f2 0f 10 05 df 4b 00 	movsd  0x4bdf(%rip),%xmm0        # cc18 <_ZN6__pstl9execution2v1L5unseqE+0x9d>
    8038:	00 
    8039:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    803e:	e9 94 00 00 00       	jmp    80d7 <_ZN9VulkanApp3runEv+0xbf>
    vkh::Timer time_circle;
    8043:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8047:	48 89 c7             	mov    %rax,%rdi
    804a:	e8 e5 06 00 00       	call   8734 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>

    glfwPollEvents();
    804f:	e8 3c a1 ff ff       	call   2190 <glfwPollEvents@plt>

    if (time_total.current() >= sec_to_mics) {
    8054:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8058:	48 89 c7             	mov    %rax,%rdi
    805b:	e8 72 07 00 00       	call   87d2 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    8060:	66 48 0f 7e c0       	movq   %xmm0,%rax
    8065:	66 48 0f 6e d0       	movq   %rax,%xmm2
    806a:	66 0f 2f 15 a6 4b 00 	comisd 0x4ba6(%rip),%xmm2        # cc18 <_ZN6__pstl9execution2v1L5unseqE+0x9d>
    8071:	00 
    8072:	0f 93 c0             	setae  %al
    8075:	84 c0                	test   %al,%al
    8077:	74 52                	je     80cb <_ZN9VulkanApp3runEv+0xb3>
      std::cout << sec_to_mics / time_circle.current() << " FPS\n";
    8079:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    807d:	48 89 c7             	mov    %rax,%rdi
    8080:	e8 4d 07 00 00       	call   87d2 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    8085:	f2 0f 10 0d 8b 4b 00 	movsd  0x4b8b(%rip),%xmm1        # cc18 <_ZN6__pstl9execution2v1L5unseqE+0x9d>
    808c:	00 
    808d:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    8091:	66 48 0f 7e c8       	movq   %xmm1,%rax
    8096:	66 48 0f 6e c0       	movq   %rax,%xmm0
    809b:	48 8d 05 1e b1 00 00 	lea    0xb11e(%rip),%rax        # 131c0 <_ZSt4cout@GLIBCXX_3.4>
    80a2:	48 89 c7             	mov    %rax,%rdi
    80a5:	e8 a6 a2 ff ff       	call   2350 <_ZNSolsEd@plt>
    80aa:	48 89 c2             	mov    %rax,%rdx
    80ad:	48 8d 05 20 4b 00 00 	lea    0x4b20(%rip),%rax        # cbd4 <_ZN6__pstl9execution2v1L5unseqE+0x59>
    80b4:	48 89 c6             	mov    %rax,%rsi
    80b7:	48 89 d7             	mov    %rdx,%rdi
    80ba:	e8 e1 a0 ff ff       	call   21a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    80bf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    80c3:	48 89 c7             	mov    %rax,%rdi
    80c6:	e8 69 07 00 00       	call   8834 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    80cb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    80cf:	48 89 c7             	mov    %rax,%rdi
    80d2:	e8 d3 06 00 00       	call   87aa <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    80d7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    80db:	48 8b 00             	mov    (%rax),%rax
    80de:	48 89 c7             	mov    %rax,%rdi
    80e1:	e8 5a a2 ff ff       	call   2340 <glfwWindowShouldClose@plt>
    80e6:	85 c0                	test   %eax,%eax
    80e8:	0f 94 c0             	sete   %al
    80eb:	84 c0                	test   %al,%al
    80ed:	0f 85 50 ff ff ff    	jne    8043 <_ZN9VulkanApp3runEv+0x2b>

  vkDeviceWaitIdle(device);
    80f3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    80f7:	48 8b 40 38          	mov    0x38(%rax),%rax
    80fb:	48 89 c7             	mov    %rax,%rdi
    80fe:	e8 2d 9f ff ff       	call   2030 <vkDeviceWaitIdle@plt>
    8103:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8107:	48 89 c7             	mov    %rax,%rdi
    810a:	e8 9b 06 00 00       	call   87aa <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    810f:	eb 2b                	jmp    813c <_ZN9VulkanApp3runEv+0x124>
  }
    8111:	48 89 c3             	mov    %rax,%rbx
    8114:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8118:	48 89 c7             	mov    %rax,%rdi
    811b:	e8 8a 06 00 00       	call   87aa <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    8120:	eb 03                	jmp    8125 <_ZN9VulkanApp3runEv+0x10d>
    8122:	48 89 c3             	mov    %rax,%rbx
    8125:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8129:	48 89 c7             	mov    %rax,%rdi
    812c:	e8 79 06 00 00       	call   87aa <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    8131:	48 89 d8             	mov    %rbx,%rax
    8134:	48 89 c7             	mov    %rax,%rdi
    8137:	e8 e4 a1 ff ff       	call   2320 <_Unwind_Resume@plt>
    813c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8140:	c9                   	leave
    8141:	c3                   	ret

0000000000008142 <_Z41__static_initialization_and_destruction_0ii>:
    8142:	55                   	push   %rbp
    8143:	48 89 e5             	mov    %rsp,%rbp
    8146:	48 83 ec 10          	sub    $0x10,%rsp
    814a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    814d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8150:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    8154:	75 3b                	jne    8191 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    8156:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    815d:	75 32                	jne    8191 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    815f:	48 8d 05 8d b2 00 00 	lea    0xb28d(%rip),%rax        # 133f3 <_ZStL8__ioinit>
    8166:	48 89 c7             	mov    %rax,%rdi
    8169:	e8 42 a1 ff ff       	call   22b0 <_ZNSt8ios_base4InitC1Ev@plt>
    816e:	48 8d 05 2b b0 00 00 	lea    0xb02b(%rip),%rax        # 131a0 <__dso_handle>
    8175:	48 89 c2             	mov    %rax,%rdx
    8178:	48 8d 05 74 b2 00 00 	lea    0xb274(%rip),%rax        # 133f3 <_ZStL8__ioinit>
    817f:	48 89 c6             	mov    %rax,%rsi
    8182:	48 8b 05 3f ae 00 00 	mov    0xae3f(%rip),%rax        # 12fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    8189:	48 89 c7             	mov    %rax,%rdi
    818c:	e8 cf 9f ff ff       	call   2160 <__cxa_atexit@plt>
    8191:	90                   	nop
    8192:	c9                   	leave
    8193:	c3                   	ret

0000000000008194 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    8194:	55                   	push   %rbp
    8195:	48 89 e5             	mov    %rsp,%rbp
    8198:	be ff ff 00 00       	mov    $0xffff,%esi
    819d:	bf 01 00 00 00       	mov    $0x1,%edi
    81a2:	e8 9b ff ff ff       	call   8142 <_Z41__static_initialization_and_destruction_0ii>
    81a7:	5d                   	pop    %rbp
    81a8:	c3                   	ret
    81a9:	90                   	nop

00000000000081aa <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    81aa:	55                   	push   %rbp
    81ab:	48 89 e5             	mov    %rsp,%rbp
    81ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81b2:	48 8d 15 57 ab 00 00 	lea    0xab57(%rip),%rdx        # 12d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    81b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81bd:	48 89 10             	mov    %rdx,(%rax)
    81c0:	90                   	nop
    81c1:	5d                   	pop    %rbp
    81c2:	c3                   	ret
    81c3:	90                   	nop

00000000000081c4 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    81c4:	55                   	push   %rbp
    81c5:	48 89 e5             	mov    %rsp,%rbp
    81c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    81cc:	48 8d 05 8d 49 00 00 	lea    0x498d(%rip),%rax        # cb60 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    81d3:	5d                   	pop    %rbp
    81d4:	c3                   	ret
    81d5:	90                   	nop

00000000000081d6 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    81d6:	55                   	push   %rbp
    81d7:	48 89 e5             	mov    %rsp,%rbp
    81da:	48 83 ec 10          	sub    $0x10,%rsp
    81de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81e6:	48 89 c7             	mov    %rax,%rdi
    81e9:	e8 bc ff ff ff       	call   81aa <_ZNSt9exceptionC1Ev>
    81ee:	48 8d 15 eb aa 00 00 	lea    0xaaeb(%rip),%rdx        # 12ce0 <_ZTVSt19bad_optional_access+0x10>
    81f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81f9:	48 89 10             	mov    %rdx,(%rax)
    81fc:	90                   	nop
    81fd:	c9                   	leave
    81fe:	c3                   	ret

00000000000081ff <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    81ff:	55                   	push   %rbp
    8200:	48 89 e5             	mov    %rsp,%rbp
    8203:	53                   	push   %rbx
    8204:	48 83 ec 08          	sub    $0x8,%rsp
    8208:	bf 08 00 00 00       	mov    $0x8,%edi
    820d:	e8 9e 9e ff ff       	call   20b0 <__cxa_allocate_exception@plt>
    8212:	48 89 c3             	mov    %rax,%rbx
    8215:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    821c:	48 89 df             	mov    %rbx,%rdi
    821f:	e8 b2 ff ff ff       	call   81d6 <_ZNSt19bad_optional_accessC1Ev>
    8224:	48 8d 05 85 0e 00 00 	lea    0xe85(%rip),%rax        # 90b0 <_ZNSt19bad_optional_accessD1Ev>
    822b:	48 89 c2             	mov    %rax,%rdx
    822e:	48 8d 05 23 ab 00 00 	lea    0xab23(%rip),%rax        # 12d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    8235:	48 89 c6             	mov    %rax,%rsi
    8238:	48 89 df             	mov    %rbx,%rdi
    823b:	e8 c0 a0 ff ff       	call   2300 <__cxa_throw@plt>

0000000000008240 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    8240:	55                   	push   %rbp
    8241:	48 89 e5             	mov    %rsp,%rbp
    8244:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    8248:	e8 3a 00 00 00       	call   8287 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    824d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8251:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    8255:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    8259:	48 89 d6             	mov    %rdx,%rsi
    825c:	48 89 c7             	mov    %rax,%rdi
    825f:	e8 06 00 00 00       	call   826a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    8264:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8268:	c9                   	leave
    8269:	c3                   	ret

000000000000826a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    826a:	55                   	push   %rbp
    826b:	48 89 e5             	mov    %rsp,%rbp
    826e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8272:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    8276:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    827a:	48 8b 10             	mov    (%rax),%rdx
    827d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8281:	48 89 10             	mov    %rdx,(%rax)
    8284:	90                   	nop
    8285:	5d                   	pop    %rbp
    8286:	c3                   	ret

0000000000008287 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    8287:	55                   	push   %rbp
    8288:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    828b:	b8 00 00 00 00       	mov    $0x0,%eax
    8290:	5d                   	pop    %rbp
    8291:	c3                   	ret

0000000000008292 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    8292:	55                   	push   %rbp
    8293:	48 89 e5             	mov    %rsp,%rbp
    8296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    829a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    829e:	48 8b 00             	mov    (%rax),%rax
    82a1:	5d                   	pop    %rbp
    82a2:	c3                   	ret
    82a3:	90                   	nop

00000000000082a4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    82a4:	55                   	push   %rbp
    82a5:	48 89 e5             	mov    %rsp,%rbp
    82a8:	48 83 ec 10          	sub    $0x10,%rsp
    82ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82b4:	48 89 c7             	mov    %rax,%rdi
    82b7:	e8 60 00 00 00       	call   831c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    82bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c0:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    82c4:	90                   	nop
    82c5:	c9                   	leave
    82c6:	c3                   	ret
    82c7:	90                   	nop

00000000000082c8 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    82c8:	55                   	push   %rbp
    82c9:	48 89 e5             	mov    %rsp,%rbp
    82cc:	48 83 ec 10          	sub    $0x10,%rsp
    82d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82d8:	48 89 c7             	mov    %rax,%rdi
    82db:	e8 c4 ff ff ff       	call   82a4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    82e0:	90                   	nop
    82e1:	c9                   	leave
    82e2:	c3                   	ret
    82e3:	90                   	nop

00000000000082e4 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    82e4:	55                   	push   %rbp
    82e5:	48 89 e5             	mov    %rsp,%rbp
    82e8:	48 83 ec 10          	sub    $0x10,%rsp
    82ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f4:	48 89 c7             	mov    %rax,%rdi
    82f7:	e8 cc ff ff ff       	call   82c8 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    82fc:	90                   	nop
    82fd:	c9                   	leave
    82fe:	c3                   	ret
    82ff:	90                   	nop

0000000000008300 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    8300:	55                   	push   %rbp
    8301:	48 89 e5             	mov    %rsp,%rbp
    8304:	48 83 ec 10          	sub    $0x10,%rsp
    8308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    830c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8310:	48 89 c7             	mov    %rax,%rdi
    8313:	e8 cc ff ff ff       	call   82e4 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    8318:	90                   	nop
    8319:	c9                   	leave
    831a:	c3                   	ret
    831b:	90                   	nop

000000000000831c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    831c:	55                   	push   %rbp
    831d:	48 89 e5             	mov    %rsp,%rbp
    8320:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8324:	90                   	nop
    8325:	5d                   	pop    %rbp
    8326:	c3                   	ret
    8327:	90                   	nop

0000000000008328 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    8328:	55                   	push   %rbp
    8329:	48 89 e5             	mov    %rsp,%rbp
    832c:	48 83 ec 10          	sub    $0x10,%rsp
    8330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8334:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8338:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    833c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8340:	48 89 d6             	mov    %rdx,%rsi
    8343:	48 89 c7             	mov    %rax,%rdi
    8346:	e8 7b 03 00 00       	call   86c6 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    834b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    834f:	c9                   	leave
    8350:	c3                   	ret
    8351:	90                   	nop

0000000000008352 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    8352:	55                   	push   %rbp
    8353:	48 89 e5             	mov    %rsp,%rbp
    8356:	48 83 ec 10          	sub    $0x10,%rsp
    835a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    835e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8366:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    836a:	48 89 d6             	mov    %rdx,%rsi
    836d:	48 89 c7             	mov    %rax,%rdi
    8370:	e8 b3 ff ff ff       	call   8328 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
    8375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8379:	c9                   	leave
    837a:	c3                   	ret
    837b:	90                   	nop

000000000000837c <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    837c:	55                   	push   %rbp
    837d:	48 89 e5             	mov    %rsp,%rbp
    8380:	48 83 ec 10          	sub    $0x10,%rsp
    8384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    8388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    838c:	48 89 c7             	mov    %rax,%rdi
    838f:	e8 1a 00 00 00       	call   83ae <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    8394:	84 c0                	test   %al,%al
    8396:	74 0e                	je     83a6 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
    8398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    839c:	48 89 c7             	mov    %rax,%rdi
    839f:	e8 4c 03 00 00       	call   86f0 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
    83a4:	eb 05                	jmp    83ab <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
    83a6:	e8 54 fe ff ff       	call   81ff <_ZSt27__throw_bad_optional_accessv>
      }
    83ab:	c9                   	leave
    83ac:	c3                   	ret
    83ad:	90                   	nop

00000000000083ae <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    83ae:	55                   	push   %rbp
    83af:	48 89 e5             	mov    %rsp,%rbp
    83b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    83b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83ba:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    83be:	5d                   	pop    %rbp
    83bf:	c3                   	ret

00000000000083c0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    83c0:	55                   	push   %rbp
    83c1:	48 89 e5             	mov    %rsp,%rbp
    83c4:	53                   	push   %rbx
    83c5:	48 83 ec 38          	sub    $0x38,%rsp
    83c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    83cd:	48 89 f0             	mov    %rsi,%rax
    83d0:	48 89 d6             	mov    %rdx,%rsi
    83d3:	48 89 f2             	mov    %rsi,%rdx
    83d6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    83da:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    83de:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    83e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83e6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    83ea:	48 89 d6             	mov    %rdx,%rsi
    83ed:	48 89 c7             	mov    %rax,%rdi
    83f0:	e8 5f 04 00 00       	call   8854 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    83f5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    83f9:	48 89 c7             	mov    %rax,%rdi
    83fc:	e8 8b 04 00 00       	call   888c <_ZNKSt16initializer_listIPKcE3endEv>
    8401:	48 89 c3             	mov    %rax,%rbx
    8404:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8408:	48 89 c7             	mov    %rax,%rdi
    840b:	e8 6a 04 00 00       	call   887a <_ZNKSt16initializer_listIPKcE5beginEv>
    8410:	48 89 c1             	mov    %rax,%rcx
    8413:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8417:	48 89 da             	mov    %rbx,%rdx
    841a:	48 89 ce             	mov    %rcx,%rsi
    841d:	48 89 c7             	mov    %rax,%rdi
    8420:	e8 cd 04 00 00       	call   88f2 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    8425:	eb 1a                	jmp    8441 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    8427:	48 89 c3             	mov    %rax,%rbx
    842a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    842e:	48 89 c7             	mov    %rax,%rdi
    8431:	e8 dc b2 ff ff       	call   3712 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    8436:	48 89 d8             	mov    %rbx,%rax
    8439:	48 89 c7             	mov    %rax,%rdi
    843c:	e8 df 9e ff ff       	call   2320 <_Unwind_Resume@plt>
    8441:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8445:	c9                   	leave
    8446:	c3                   	ret
    8447:	90                   	nop

0000000000008448 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8448:	55                   	push   %rbp
    8449:	48 89 e5             	mov    %rsp,%rbp
    844c:	48 83 ec 10          	sub    $0x10,%rsp
    8450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8458:	48 8b 10             	mov    (%rax),%rdx
    845b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    845f:	48 89 d6             	mov    %rdx,%rsi
    8462:	48 89 c7             	mov    %rax,%rdi
    8465:	e8 38 05 00 00       	call   89a2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    846a:	c9                   	leave
    846b:	c3                   	ret

000000000000846c <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    846c:	55                   	push   %rbp
    846d:	48 89 e5             	mov    %rsp,%rbp
    8470:	48 83 ec 10          	sub    $0x10,%rsp
    8474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    847c:	48 8b 10             	mov    (%rax),%rdx
    847f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8483:	48 89 d6             	mov    %rdx,%rsi
    8486:	48 89 c7             	mov    %rax,%rdi
    8489:	e8 14 05 00 00       	call   89a2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    848e:	c9                   	leave
    848f:	c3                   	ret

0000000000008490 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8490:	55                   	push   %rbp
    8491:	48 89 e5             	mov    %rsp,%rbp
    8494:	53                   	push   %rbx
    8495:	48 83 ec 18          	sub    $0x18,%rsp
    8499:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    849d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    84a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84a5:	48 89 c7             	mov    %rax,%rdi
    84a8:	e8 e7 d3 ff ff       	call   5894 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    84ad:	48 8b 18             	mov    (%rax),%rbx
    84b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84b4:	48 89 c7             	mov    %rax,%rdi
    84b7:	e8 d8 d3 ff ff       	call   5894 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    84bc:	48 8b 00             	mov    (%rax),%rax
    84bf:	48 39 c3             	cmp    %rax,%rbx
    84c2:	0f 95 c0             	setne  %al
    84c5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84c9:	c9                   	leave
    84ca:	c3                   	ret
    84cb:	90                   	nop

00000000000084cc <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    84cc:	55                   	push   %rbp
    84cd:	48 89 e5             	mov    %rsp,%rbp
    84d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    84d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d8:	48 8b 00             	mov    (%rax),%rax
    84db:	48 8d 50 08          	lea    0x8(%rax),%rdx
    84df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    84e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    84ea:	5d                   	pop    %rbp
    84eb:	c3                   	ret

00000000000084ec <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    84ec:	55                   	push   %rbp
    84ed:	48 89 e5             	mov    %rsp,%rbp
    84f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    84f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84f8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    84fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8500:	48 8b 00             	mov    (%rax),%rax
    8503:	48 29 c2             	sub    %rax,%rdx
    8506:	48 c1 fa 02          	sar    $0x2,%rdx
    850a:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    8511:	db b6 6d 
    8514:	48 0f af c2          	imul   %rdx,%rax
    8518:	5d                   	pop    %rbp
    8519:	c3                   	ret

000000000000851a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
    851a:	55                   	push   %rbp
    851b:	48 89 e5             	mov    %rsp,%rbp
    851e:	48 83 ec 10          	sub    $0x10,%rsp
    8522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    8526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852a:	48 89 c7             	mov    %rax,%rdi
    852d:	e8 12 c4 ff ff       	call   4944 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    8532:	c9                   	leave
    8533:	c3                   	ret

0000000000008534 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
    8534:	55                   	push   %rbp
    8535:	48 89 e5             	mov    %rsp,%rbp
    8538:	48 83 ec 10          	sub    $0x10,%rsp
    853c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
    8540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8544:	48 89 c7             	mov    %rax,%rdi
    8547:	e8 f8 c3 ff ff       	call   4944 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    854c:	84 c0                	test   %al,%al
    854e:	74 0e                	je     855e <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
    8550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8554:	48 89 c7             	mov    %rax,%rdi
    8557:	e8 fa c3 ff ff       	call   4956 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    855c:	eb 05                	jmp    8563 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
    855e:	e8 9c fc ff ff       	call   81ff <_ZSt27__throw_bad_optional_accessv>
      }
    8563:	c9                   	leave
    8564:	c3                   	ret
    8565:	90                   	nop

0000000000008566 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    8566:	55                   	push   %rbp
    8567:	48 89 e5             	mov    %rsp,%rbp
    856a:	48 83 ec 20          	sub    $0x20,%rsp
    856e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8576:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    857a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    857e:	48 89 c7             	mov    %rax,%rdi
    8581:	e8 2e 04 00 00       	call   89b4 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
    8586:	8b 10                	mov    (%rax),%edx
    8588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    858c:	89 10                	mov    %edx,(%rax)
    858e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8592:	48 89 c7             	mov    %rax,%rdi
    8595:	e8 28 04 00 00       	call   89c2 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
    859a:	48 89 c1             	mov    %rax,%rcx
    859d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    85a1:	48 8b 01             	mov    (%rcx),%rax
    85a4:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    85a8:	48 89 46 04          	mov    %rax,0x4(%rsi)
    85ac:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
    85b0:	48 8b 41 10          	mov    0x10(%rcx),%rax
    85b4:	48 89 46 14          	mov    %rax,0x14(%rsi)
    85b8:	90                   	nop
    85b9:	c9                   	leave
    85ba:	c3                   	ret
    85bb:	90                   	nop

00000000000085bc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
    85bc:	55                   	push   %rbp
    85bd:	48 89 e5             	mov    %rsp,%rbp
    85c0:	53                   	push   %rbx
    85c1:	48 83 ec 18          	sub    $0x18,%rsp
    85c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
    85cd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    85d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85d5:	48 89 c7             	mov    %rax,%rdi
    85d8:	e8 f3 03 00 00       	call   89d0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    85dd:	48 89 c6             	mov    %rax,%rsi
    85e0:	48 89 df             	mov    %rbx,%rdi
    85e3:	e8 1c 04 00 00       	call   8a04 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
    85e8:	90                   	nop
    85e9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85ed:	c9                   	leave
    85ee:	c3                   	ret
    85ef:	90                   	nop

00000000000085f0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    85f0:	55                   	push   %rbp
    85f1:	48 89 e5             	mov    %rsp,%rbp
    85f4:	48 83 ec 20          	sub    $0x20,%rsp
    85f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    85fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8600:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8604:	48 89 d6             	mov    %rdx,%rsi
    8607:	48 89 c7             	mov    %rax,%rdi
    860a:	e8 29 04 00 00       	call   8a38 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    860f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8613:	c9                   	leave
    8614:	c3                   	ret
    8615:	90                   	nop

0000000000008616 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8616:	55                   	push   %rbp
    8617:	48 89 e5             	mov    %rsp,%rbp
    861a:	48 83 ec 20          	sub    $0x20,%rsp
    861e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8622:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8626:	48 8d 50 08          	lea    0x8(%rax),%rdx
    862a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    862e:	48 89 d6             	mov    %rdx,%rsi
    8631:	48 89 c7             	mov    %rax,%rdi
    8634:	e8 ff 03 00 00       	call   8a38 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    8639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    863d:	c9                   	leave
    863e:	c3                   	ret

000000000000863f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    863f:	55                   	push   %rbp
    8640:	48 89 e5             	mov    %rsp,%rbp
    8643:	53                   	push   %rbx
    8644:	48 83 ec 18          	sub    $0x18,%rsp
    8648:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    864c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8654:	48 89 c7             	mov    %rax,%rdi
    8657:	e8 fa 03 00 00       	call   8a56 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    865c:	48 8b 18             	mov    (%rax),%rbx
    865f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8663:	48 89 c7             	mov    %rax,%rdi
    8666:	e8 eb 03 00 00       	call   8a56 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    866b:	48 8b 00             	mov    (%rax),%rax
    866e:	48 39 c3             	cmp    %rax,%rbx
    8671:	0f 95 c0             	setne  %al
    8674:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8678:	c9                   	leave
    8679:	c3                   	ret

000000000000867a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    867a:	55                   	push   %rbp
    867b:	48 89 e5             	mov    %rsp,%rbp
    867e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8686:	48 8b 00             	mov    (%rax),%rax
    8689:	48 8d 50 08          	lea    0x8(%rax),%rdx
    868d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8691:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8698:	5d                   	pop    %rbp
    8699:	c3                   	ret

000000000000869a <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    869a:	55                   	push   %rbp
    869b:	48 89 e5             	mov    %rsp,%rbp
    869e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    86a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86a6:	48 8b 00             	mov    (%rax),%rax
    86a9:	5d                   	pop    %rbp
    86aa:	c3                   	ret
    86ab:	90                   	nop

00000000000086ac <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
    86ac:	55                   	push   %rbp
    86ad:	48 89 e5             	mov    %rsp,%rbp
    86b0:	48 83 ec 10          	sub    $0x10,%rsp
    86b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    86b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86bc:	48 89 c7             	mov    %rax,%rdi
    86bf:	e8 ea fc ff ff       	call   83ae <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    86c4:	c9                   	leave
    86c5:	c3                   	ret

00000000000086c6 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
    86c6:	55                   	push   %rbp
    86c7:	48 89 e5             	mov    %rsp,%rbp
    86ca:	48 83 ec 10          	sub    $0x10,%rsp
    86ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
    86d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    86de:	48 89 d6             	mov    %rdx,%rsi
    86e1:	48 89 c7             	mov    %rax,%rdi
    86e4:	e8 7b 03 00 00       	call   8a64 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
    86e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    86ed:	c9                   	leave
    86ee:	c3                   	ret
    86ef:	90                   	nop

00000000000086f0 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    86f0:	55                   	push   %rbp
    86f1:	48 89 e5             	mov    %rsp,%rbp
    86f4:	48 83 ec 10          	sub    $0x10,%rsp
    86f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    86fc:	e8 8b ac ff ff       	call   338c <_ZSt23__is_constant_evaluatedv>
    8701:	84 c0                	test   %al,%al
    8703:	74 1a                	je     871f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    8705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8709:	48 89 c7             	mov    %rax,%rdi
    870c:	e8 9d fc ff ff       	call   83ae <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    8711:	83 f0 01             	xor    $0x1,%eax
    8714:	84 c0                	test   %al,%al
    8716:	74 07                	je     871f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    8718:	b8 01 00 00 00       	mov    $0x1,%eax
    871d:	eb 05                	jmp    8724 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
    871f:	b8 00 00 00 00       	mov    $0x0,%eax
    8724:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    8726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    872a:	48 89 c7             	mov    %rax,%rdi
    872d:	e8 c4 03 00 00       	call   8af6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
    8732:	c9                   	leave
    8733:	c3                   	ret

0000000000008734 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
private:
  std::chrono::steady_clock::time_point start;
  std::string time_unit;

public:
  Timer() {
    8734:	55                   	push   %rbp
    8735:	48 89 e5             	mov    %rsp,%rbp
    8738:	53                   	push   %rbx
    8739:	48 83 ec 18          	sub    $0x18,%rsp
    873d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8741:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8745:	48 89 c7             	mov    %rax,%rdi
    8748:	e8 b7 03 00 00       	call   8b04 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    874d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8751:	48 83 c0 08          	add    $0x8,%rax
    8755:	48 89 c7             	mov    %rax,%rdi
    8758:	e8 33 9b ff ff       	call   2290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
    if (std::is_same_v<DurationType, mic>)
      this->time_unit = "μs";
    875d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8761:	48 83 c0 08          	add    $0x8,%rax
    8765:	48 8d 15 6e 44 00 00 	lea    0x446e(%rip),%rdx        # cbda <_ZN6__pstl9execution2v1L5unseqE+0x5f>
    876c:	48 89 d6             	mov    %rdx,%rsi
    876f:	48 89 c7             	mov    %rax,%rdi
    8772:	e8 f9 9a ff ff       	call   2270 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    else if (std::is_same_v<DurationType, hr>)
      this->time_unit = "hrs";
    else
      static_assert("Unkown time unit.");

    this->start = std::chrono::steady_clock::now();
    8777:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    877b:	e8 d0 9a ff ff       	call   2250 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    8780:	48 89 03             	mov    %rax,(%rbx)
  }
    8783:	eb 1e                	jmp    87a3 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    8785:	48 89 c3             	mov    %rax,%rbx
    8788:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    878c:	48 83 c0 08          	add    $0x8,%rax
    8790:	48 89 c7             	mov    %rax,%rdi
    8793:	e8 48 99 ff ff       	call   20e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    8798:	48 89 d8             	mov    %rbx,%rax
    879b:	48 89 c7             	mov    %rax,%rdi
    879e:	e8 7d 9b ff ff       	call   2320 <_Unwind_Resume@plt>
    87a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87a7:	c9                   	leave
    87a8:	c3                   	ret
    87a9:	90                   	nop

00000000000087aa <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:

  ~Timer() {
    87aa:	55                   	push   %rbp
    87ab:	48 89 e5             	mov    %rsp,%rbp
    87ae:	48 83 ec 20          	sub    $0x20,%rsp
    87b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
    87b6:	e8 95 9a ff ff       	call   2250 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    87bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (when_destroyed == announce)
      std::cout
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }
    87bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87c3:	48 83 c0 08          	add    $0x8,%rax
    87c7:	48 89 c7             	mov    %rax,%rdi
    87ca:	e8 11 99 ff ff       	call   20e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    87cf:	90                   	nop
    87d0:	c9                   	leave
    87d1:	c3                   	ret

00000000000087d2 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:

  double current() const {
    87d2:	55                   	push   %rbp
    87d3:	48 89 e5             	mov    %rsp,%rbp
    87d6:	53                   	push   %rbx
    87d7:	48 83 ec 38          	sub    $0x38,%rsp
    87db:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    87df:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    87e3:	e8 68 9a ff ff       	call   2250 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    87e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    87ec:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    87f0:	48 89 de             	mov    %rbx,%rsi
    87f3:	48 89 c7             	mov    %rax,%rdi
    87f6:	e8 29 03 00 00       	call   8b24 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    87fb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    87ff:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8803:	48 89 c7             	mov    %rax,%rdi
    8806:	e8 5e 03 00 00       	call   8b69 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    880b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    880f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    8813:	48 89 c7             	mov    %rax,%rdi
    8816:	e8 69 03 00 00       	call   8b84 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
    881b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    881f:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    8824:	66 48 0f 7e c0       	movq   %xmm0,%rax
  }
    8829:	66 48 0f 6e c0       	movq   %rax,%xmm0
    882e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8832:	c9                   	leave
    8833:	c3                   	ret

0000000000008834 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
    8834:	55                   	push   %rbp
    8835:	48 89 e5             	mov    %rsp,%rbp
    8838:	53                   	push   %rbx
    8839:	48 83 ec 18          	sub    $0x18,%rsp
    883d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8841:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8845:	e8 06 9a ff ff       	call   2250 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    884a:	48 89 03             	mov    %rax,(%rbx)
    884d:	90                   	nop
    884e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8852:	c9                   	leave
    8853:	c3                   	ret

0000000000008854 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    8854:	55                   	push   %rbp
    8855:	48 89 e5             	mov    %rsp,%rbp
    8858:	48 83 ec 10          	sub    $0x10,%rsp
    885c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8860:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    8864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8868:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    886c:	48 89 d6             	mov    %rdx,%rsi
    886f:	48 89 c7             	mov    %rax,%rdi
    8872:	e8 65 c3 ff ff       	call   4bdc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    8877:	90                   	nop
    8878:	c9                   	leave
    8879:	c3                   	ret

000000000000887a <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    887a:	55                   	push   %rbp
    887b:	48 89 e5             	mov    %rsp,%rbp
    887e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8886:	48 8b 00             	mov    (%rax),%rax
    8889:	5d                   	pop    %rbp
    888a:	c3                   	ret
    888b:	90                   	nop

000000000000888c <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    888c:	55                   	push   %rbp
    888d:	48 89 e5             	mov    %rsp,%rbp
    8890:	53                   	push   %rbx
    8891:	48 83 ec 18          	sub    $0x18,%rsp
    8895:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8899:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    889d:	48 89 c7             	mov    %rax,%rdi
    88a0:	e8 d5 ff ff ff       	call   887a <_ZNKSt16initializer_listIPKcE5beginEv>
    88a5:	48 89 c3             	mov    %rax,%rbx
    88a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88ac:	48 89 c7             	mov    %rax,%rdi
    88af:	e8 e2 02 00 00       	call   8b96 <_ZNKSt16initializer_listIPKcE4sizeEv>
    88b4:	48 c1 e0 03          	shl    $0x3,%rax
    88b8:	48 01 d8             	add    %rbx,%rax
    88bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88bf:	c9                   	leave
    88c0:	c3                   	ret

00000000000088c1 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    88c1:	55                   	push   %rbp
    88c2:	48 89 e5             	mov    %rsp,%rbp
    88c5:	48 83 ec 10          	sub    $0x10,%rsp
    88c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    88d1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    88d5:	48 89 c7             	mov    %rax,%rdi
    88d8:	e8 cb 02 00 00       	call   8ba8 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    88dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    88e5:	48 89 d6             	mov    %rdx,%rsi
    88e8:	48 89 c7             	mov    %rax,%rdi
    88eb:	e8 c3 02 00 00       	call   8bb3 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    88f0:	c9                   	leave
    88f1:	c3                   	ret

00000000000088f2 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    88f2:	55                   	push   %rbp
    88f3:	48 89 e5             	mov    %rsp,%rbp
    88f6:	53                   	push   %rbx
    88f7:	48 83 ec 38          	sub    $0x38,%rsp
    88fb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    88ff:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8903:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    8907:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    890b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    890f:	48 89 d6             	mov    %rdx,%rsi
    8912:	48 89 c7             	mov    %rax,%rdi
    8915:	e8 a7 ff ff ff       	call   88c1 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    891a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    891e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8922:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8926:	48 89 c7             	mov    %rax,%rdi
    8929:	e8 22 b8 ff ff       	call   4150 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    892e:	48 89 c2             	mov    %rax,%rdx
    8931:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8935:	48 89 d6             	mov    %rdx,%rsi
    8938:	48 89 c7             	mov    %rax,%rdi
    893b:	e8 11 b7 ff ff       	call   4051 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    8940:	48 89 c6             	mov    %rax,%rsi
    8943:	48 89 df             	mov    %rbx,%rdi
    8946:	e8 1b cd ff ff       	call   5666 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    894b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    894f:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    8952:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8956:	48 8b 00             	mov    (%rax),%rax
    8959:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    895d:	48 c1 e2 03          	shl    $0x3,%rdx
    8961:	48 01 c2             	add    %rax,%rdx
    8964:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8968:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    896c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8970:	48 89 c7             	mov    %rax,%rdi
    8973:	e8 d8 b7 ff ff       	call   4150 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    8978:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    897b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    897f:	48 8b 10             	mov    (%rax),%rdx
    8982:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    8986:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    898a:	48 89 c7             	mov    %rax,%rdi
    898d:	e8 3b 02 00 00       	call   8bcd <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    8992:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8996:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    899a:	90                   	nop
    899b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    899f:	c9                   	leave
    89a0:	c3                   	ret
    89a1:	90                   	nop

00000000000089a2 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    89a2:	55                   	push   %rbp
    89a3:	48 89 e5             	mov    %rsp,%rbp
    89a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    89ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89b2:	5d                   	pop    %rbp
    89b3:	c3                   	ret

00000000000089b4 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    89b4:	55                   	push   %rbp
    89b5:	48 89 e5             	mov    %rsp,%rbp
    89b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    89bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c0:	5d                   	pop    %rbp
    89c1:	c3                   	ret

00000000000089c2 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    89c2:	55                   	push   %rbp
    89c3:	48 89 e5             	mov    %rsp,%rbp
    89c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    89ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ce:	5d                   	pop    %rbp
    89cf:	c3                   	ret

00000000000089d0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    89d0:	55                   	push   %rbp
    89d1:	48 89 e5             	mov    %rsp,%rbp
    89d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    89d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89dc:	5d                   	pop    %rbp
    89dd:	c3                   	ret

00000000000089de <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
    89de:	55                   	push   %rbp
    89df:	48 89 e5             	mov    %rsp,%rbp
    89e2:	48 83 ec 20          	sub    $0x20,%rsp
    89e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89ea:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    89ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    89f6:	48 89 d6             	mov    %rdx,%rsi
    89f9:	48 89 c7             	mov    %rax,%rdi
    89fc:	e8 fd 01 00 00       	call   8bfe <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
    8a01:	90                   	nop
    8a02:	c9                   	leave
    8a03:	c3                   	ret

0000000000008a04 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
    8a04:	55                   	push   %rbp
    8a05:	48 89 e5             	mov    %rsp,%rbp
    8a08:	53                   	push   %rbx
    8a09:	48 83 ec 18          	sub    $0x18,%rsp
    8a0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a11:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
    8a15:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8a19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a1d:	48 89 c7             	mov    %rax,%rdi
    8a20:	e8 ab ff ff ff       	call   89d0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    8a25:	48 89 c6             	mov    %rax,%rsi
    8a28:	48 89 df             	mov    %rbx,%rdi
    8a2b:	e8 ae ff ff ff       	call   89de <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
    8a30:	90                   	nop
    8a31:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a35:	c9                   	leave
    8a36:	c3                   	ret
    8a37:	90                   	nop

0000000000008a38 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    8a38:	55                   	push   %rbp
    8a39:	48 89 e5             	mov    %rsp,%rbp
    8a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    8a44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a48:	48 8b 10             	mov    (%rax),%rdx
    8a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a4f:	48 89 10             	mov    %rdx,(%rax)
    8a52:	90                   	nop
    8a53:	5d                   	pop    %rbp
    8a54:	c3                   	ret
    8a55:	90                   	nop

0000000000008a56 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    8a56:	55                   	push   %rbp
    8a57:	48 89 e5             	mov    %rsp,%rbp
    8a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    8a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a62:	5d                   	pop    %rbp
    8a63:	c3                   	ret

0000000000008a64 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
    8a64:	55                   	push   %rbp
    8a65:	48 89 e5             	mov    %rsp,%rbp
    8a68:	53                   	push   %rbx
    8a69:	48 83 ec 18          	sub    $0x18,%rsp
    8a6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
    8a75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a79:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    8a7d:	84 c0                	test   %al,%al
    8a7f:	74 35                	je     8ab6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
    8a81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a85:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    8a89:	84 c0                	test   %al,%al
    8a8b:	74 29                	je     8ab6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
    8a8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a91:	48 89 c7             	mov    %rax,%rdi
    8a94:	e8 a1 01 00 00       	call   8c3a <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    8a99:	48 89 c3             	mov    %rax,%rbx
    8a9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8aa0:	48 89 c7             	mov    %rax,%rdi
    8aa3:	e8 4e 00 00 00       	call   8af6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    8aa8:	48 89 de             	mov    %rbx,%rsi
    8aab:	48 89 c7             	mov    %rax,%rdi
    8aae:	e8 95 01 00 00       	call   8c48 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
    8ab3:	90                   	nop
      }
    8ab4:	eb 38                	jmp    8aee <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
    8ab6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8aba:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    8abe:	84 c0                	test   %al,%al
    8ac0:	74 20                	je     8ae2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
    8ac2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ac6:	48 89 c7             	mov    %rax,%rdi
    8ac9:	e8 6c 01 00 00       	call   8c3a <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    8ace:	48 89 c2             	mov    %rax,%rdx
    8ad1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ad5:	48 89 d6             	mov    %rdx,%rsi
    8ad8:	48 89 c7             	mov    %rax,%rdi
    8adb:	e8 a6 01 00 00       	call   8c86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
    8ae0:	eb 0c                	jmp    8aee <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
    8ae2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ae6:	48 89 c7             	mov    %rax,%rdi
    8ae9:	e8 de 01 00 00       	call   8ccc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
    8aee:	90                   	nop
    8aef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8af3:	c9                   	leave
    8af4:	c3                   	ret
    8af5:	90                   	nop

0000000000008af6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
    8af6:	55                   	push   %rbp
    8af7:	48 89 e5             	mov    %rsp,%rbp
    8afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    8afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b02:	5d                   	pop    %rbp
    8b03:	c3                   	ret

0000000000008b04 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	typedef _Clock						clock;
	typedef _Dur						duration;
	typedef typename duration::rep				rep;
	typedef typename duration::period			period;

	constexpr time_point() : __d(duration::zero())
    8b04:	55                   	push   %rbp
    8b05:	48 89 e5             	mov    %rsp,%rbp
    8b08:	53                   	push   %rbx
    8b09:	48 83 ec 18          	sub    $0x18,%rsp
    8b0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8b11:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8b15:	e8 26 f7 ff ff       	call   8240 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
    8b1a:	48 89 03             	mov    %rax,(%rbx)
	{ }
    8b1d:	90                   	nop
    8b1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b22:	c9                   	leave
    8b23:	c3                   	ret

0000000000008b24 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    8b24:	55                   	push   %rbp
    8b25:	48 89 e5             	mov    %rsp,%rbp
    8b28:	48 83 ec 20          	sub    $0x20,%rsp
    8b2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8b30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    8b34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8b38:	48 89 c7             	mov    %rax,%rdi
    8b3b:	e8 b4 01 00 00       	call   8cf4 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    8b40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8b44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b48:	48 89 c7             	mov    %rax,%rdi
    8b4b:	e8 a4 01 00 00       	call   8cf4 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    8b50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8b54:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    8b58:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8b5c:	48 89 d6             	mov    %rdx,%rsi
    8b5f:	48 89 c7             	mov    %rax,%rdi
    8b62:	e8 9e 01 00 00       	call   8d05 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    8b67:	c9                   	leave
    8b68:	c3                   	ret

0000000000008b69 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    8b69:	55                   	push   %rbp
    8b6a:	48 89 e5             	mov    %rsp,%rbp
    8b6d:	48 83 ec 10          	sub    $0x10,%rsp
    8b71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    8b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b79:	48 89 c7             	mov    %rax,%rdi
    8b7c:	e8 ed 01 00 00       	call   8d6e <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    8b81:	c9                   	leave
    8b82:	c3                   	ret
    8b83:	90                   	nop

0000000000008b84 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    8b84:	55                   	push   %rbp
    8b85:	48 89 e5             	mov    %rsp,%rbp
    8b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    8b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b90:	48 8b 00             	mov    (%rax),%rax
    8b93:	5d                   	pop    %rbp
    8b94:	c3                   	ret
    8b95:	90                   	nop

0000000000008b96 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    8b96:	55                   	push   %rbp
    8b97:	48 89 e5             	mov    %rsp,%rbp
    8b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba2:	48 8b 40 08          	mov    0x8(%rax),%rax
    8ba6:	5d                   	pop    %rbp
    8ba7:	c3                   	ret

0000000000008ba8 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    8ba8:	55                   	push   %rbp
    8ba9:	48 89 e5             	mov    %rsp,%rbp
    8bac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8bb0:	90                   	nop
    8bb1:	5d                   	pop    %rbp
    8bb2:	c3                   	ret

0000000000008bb3 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    8bb3:	55                   	push   %rbp
    8bb4:	48 89 e5             	mov    %rsp,%rbp
    8bb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bbb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    8bbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bc3:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    8bc7:	48 c1 f8 03          	sar    $0x3,%rax
    }
    8bcb:	5d                   	pop    %rbp
    8bcc:	c3                   	ret

0000000000008bcd <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    8bcd:	55                   	push   %rbp
    8bce:	48 89 e5             	mov    %rsp,%rbp
    8bd1:	48 83 ec 20          	sub    $0x20,%rsp
    8bd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8bdd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    8be1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    8be5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8be9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf1:	48 89 ce             	mov    %rcx,%rsi
    8bf4:	48 89 c7             	mov    %rax,%rdi
    8bf7:	e8 cb 01 00 00       	call   8dc7 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    8bfc:	c9                   	leave
    8bfd:	c3                   	ret

0000000000008bfe <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
    8bfe:	55                   	push   %rbp
    8bff:	48 89 e5             	mov    %rsp,%rbp
    8c02:	53                   	push   %rbx
    8c03:	48 83 ec 28          	sub    $0x28,%rsp
    8c07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c0b:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
    8c0f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8c13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c17:	48 89 c7             	mov    %rax,%rdi
    8c1a:	e8 b1 fd ff ff       	call   89d0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    8c1f:	48 89 c6             	mov    %rax,%rsi
    8c22:	48 89 df             	mov    %rbx,%rdi
    8c25:	e8 d2 01 00 00       	call   8dfc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
    8c2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c2e:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
    8c32:	90                   	nop
    8c33:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c37:	c9                   	leave
    8c38:	c3                   	ret
    8c39:	90                   	nop

0000000000008c3a <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
    8c3a:	55                   	push   %rbp
    8c3b:	48 89 e5             	mov    %rsp,%rbp
    8c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    8c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c46:	5d                   	pop    %rbp
    8c47:	c3                   	ret

0000000000008c48 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
    8c48:	55                   	push   %rbp
    8c49:	48 89 e5             	mov    %rsp,%rbp
    8c4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
    8c54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c58:	8b 10                	mov    (%rax),%edx
    8c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c5e:	89 10                	mov    %edx,(%rax)
	second = __p.second;
    8c60:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8c64:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    8c68:	48 8b 46 04          	mov    0x4(%rsi),%rax
    8c6c:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
    8c70:	48 89 41 04          	mov    %rax,0x4(%rcx)
    8c74:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
    8c78:	48 8b 46 14          	mov    0x14(%rsi),%rax
    8c7c:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
    8c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8c84:	5d                   	pop    %rbp
    8c85:	c3                   	ret

0000000000008c86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    8c86:	55                   	push   %rbp
    8c87:	48 89 e5             	mov    %rsp,%rbp
    8c8a:	53                   	push   %rbx
    8c8b:	48 83 ec 18          	sub    $0x18,%rsp
    8c8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    8c97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c9b:	48 89 c7             	mov    %rax,%rdi
    8c9e:	e8 ab 01 00 00       	call   8e4e <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    8ca3:	48 89 c3             	mov    %rax,%rbx
    8ca6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8caa:	48 89 c7             	mov    %rax,%rdi
    8cad:	e8 8e 01 00 00       	call   8e40 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
    8cb2:	48 89 de             	mov    %rbx,%rsi
    8cb5:	48 89 c7             	mov    %rax,%rdi
    8cb8:	e8 9f 01 00 00       	call   8e5c <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    8cbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8cc1:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
    8cc5:	90                   	nop
    8cc6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cca:	c9                   	leave
    8ccb:	c3                   	ret

0000000000008ccc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
    8ccc:	55                   	push   %rbp
    8ccd:	48 89 e5             	mov    %rsp,%rbp
    8cd0:	48 83 ec 10          	sub    $0x10,%rsp
    8cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
    8cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cdc:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    8ce0:	84 c0                	test   %al,%al
    8ce2:	74 0c                	je     8cf0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
    8ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce8:	48 89 c7             	mov    %rax,%rdi
    8ceb:	e8 c6 01 00 00       	call   8eb6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
    8cf0:	90                   	nop
    8cf1:	c9                   	leave
    8cf2:	c3                   	ret
    8cf3:	90                   	nop

0000000000008cf4 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    8cf4:	55                   	push   %rbp
    8cf5:	48 89 e5             	mov    %rsp,%rbp
    8cf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    8cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d00:	48 8b 00             	mov    (%rax),%rax
    8d03:	5d                   	pop    %rbp
    8d04:	c3                   	ret

0000000000008d05 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    8d05:	55                   	push   %rbp
    8d06:	48 89 e5             	mov    %rsp,%rbp
    8d09:	53                   	push   %rbx
    8d0a:	48 83 ec 38          	sub    $0x38,%rsp
    8d0e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8d12:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    8d16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8d1a:	48 8b 00             	mov    (%rax),%rax
    8d1d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    8d21:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8d25:	48 89 c7             	mov    %rax,%rdi
    8d28:	e8 65 f5 ff ff       	call   8292 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    8d2d:	48 89 c3             	mov    %rax,%rbx
    8d30:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8d34:	48 8b 00             	mov    (%rax),%rax
    8d37:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8d3b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8d3f:	48 89 c7             	mov    %rax,%rdi
    8d42:	e8 4b f5 ff ff       	call   8292 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    8d47:	48 29 c3             	sub    %rax,%rbx
    8d4a:	48 89 da             	mov    %rbx,%rdx
    8d4d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8d51:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    8d55:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8d59:	48 89 d6             	mov    %rdx,%rsi
    8d5c:	48 89 c7             	mov    %rax,%rdi
    8d5f:	e8 06 f5 ff ff       	call   826a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    8d64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    8d68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d6c:	c9                   	leave
    8d6d:	c3                   	ret

0000000000008d6e <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    8d6e:	55                   	push   %rbp
    8d6f:	48 89 e5             	mov    %rsp,%rbp
    8d72:	48 83 ec 20          	sub    $0x20,%rsp
    8d76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    8d7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d7e:	48 89 c7             	mov    %rax,%rdi
    8d81:	e8 0c f5 ff ff       	call   8292 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    8d86:	48 89 c1             	mov    %rax,%rcx
    8d89:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    8d90:	9b c4 20 
    8d93:	48 89 c8             	mov    %rcx,%rax
    8d96:	48 f7 ea             	imul   %rdx
    8d99:	48 89 d0             	mov    %rdx,%rax
    8d9c:	48 c1 f8 07          	sar    $0x7,%rax
    8da0:	48 c1 f9 3f          	sar    $0x3f,%rcx
    8da4:	48 89 ca             	mov    %rcx,%rdx
    8da7:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    8daa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8dae:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    8db2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    8db6:	48 89 d6             	mov    %rdx,%rsi
    8db9:	48 89 c7             	mov    %rax,%rdi
    8dbc:	e8 09 01 00 00       	call   8eca <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    8dc1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    8dc5:	c9                   	leave
    8dc6:	c3                   	ret

0000000000008dc7 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    8dc7:	55                   	push   %rbp
    8dc8:	48 89 e5             	mov    %rsp,%rbp
    8dcb:	48 83 ec 30          	sub    $0x30,%rsp
    8dcf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8dd3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8dd7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    8ddb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    8ddf:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    8de3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8de7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    8deb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8def:	48 89 ce             	mov    %rcx,%rsi
    8df2:	48 89 c7             	mov    %rax,%rdi
    8df5:	e8 ed 00 00 00       	call   8ee7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    8dfa:	c9                   	leave
    8dfb:	c3                   	ret

0000000000008dfc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
    8dfc:	55                   	push   %rbp
    8dfd:	48 89 e5             	mov    %rsp,%rbp
    8e00:	48 83 ec 10          	sub    $0x10,%rsp
    8e04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
    8e0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e10:	48 89 c7             	mov    %rax,%rdi
    8e13:	e8 b8 fb ff ff       	call   89d0 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    8e18:	48 89 c1             	mov    %rax,%rcx
    8e1b:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    8e1f:	48 8b 01             	mov    (%rcx),%rax
    8e22:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    8e26:	48 89 06             	mov    %rax,(%rsi)
    8e29:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    8e2d:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    8e31:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    8e35:	48 89 46 0c          	mov    %rax,0xc(%rsi)
    8e39:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
    8e3d:	90                   	nop
    8e3e:	c9                   	leave
    8e3f:	c3                   	ret

0000000000008e40 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8e40:	55                   	push   %rbp
    8e41:	48 89 e5             	mov    %rsp,%rbp
    8e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e4c:	5d                   	pop    %rbp
    8e4d:	c3                   	ret

0000000000008e4e <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8e4e:	55                   	push   %rbp
    8e4f:	48 89 e5             	mov    %rsp,%rbp
    8e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e5a:	5d                   	pop    %rbp
    8e5b:	c3                   	ret

0000000000008e5c <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8e5c:	55                   	push   %rbp
    8e5d:	48 89 e5             	mov    %rsp,%rbp
    8e60:	53                   	push   %rbx
    8e61:	48 83 ec 18          	sub    $0x18,%rsp
    8e65:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e69:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8e6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e71:	48 89 c6             	mov    %rax,%rsi
    8e74:	bf 1c 00 00 00       	mov    $0x1c,%edi
    8e79:	e8 19 a5 ff ff       	call   3397 <_ZnwmPv>
    8e7e:	48 89 c3             	mov    %rax,%rbx
    8e81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e85:	48 89 c7             	mov    %rax,%rdi
    8e88:	e8 c1 ff ff ff       	call   8e4e <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    8e8d:	48 89 c1             	mov    %rax,%rcx
    8e90:	48 8b 01             	mov    (%rcx),%rax
    8e93:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    8e97:	48 89 03             	mov    %rax,(%rbx)
    8e9a:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    8e9e:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    8ea2:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    8ea6:	48 89 43 0c          	mov    %rax,0xc(%rbx)
    8eaa:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
    8eae:	90                   	nop
    8eaf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8eb3:	c9                   	leave
    8eb4:	c3                   	ret
    8eb5:	90                   	nop

0000000000008eb6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
    8eb6:	55                   	push   %rbp
    8eb7:	48 89 e5             	mov    %rsp,%rbp
    8eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
    8ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ec2:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
    8ec6:	90                   	nop
    8ec7:	5d                   	pop    %rbp
    8ec8:	c3                   	ret
    8ec9:	90                   	nop

0000000000008eca <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    8eca:	55                   	push   %rbp
    8ecb:	48 89 e5             	mov    %rsp,%rbp
    8ece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ed2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    8ed6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8eda:	48 8b 10             	mov    (%rax),%rdx
    8edd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ee1:	48 89 10             	mov    %rdx,(%rax)
    8ee4:	90                   	nop
    8ee5:	5d                   	pop    %rbp
    8ee6:	c3                   	ret

0000000000008ee7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    8ee7:	55                   	push   %rbp
    8ee8:	48 89 e5             	mov    %rsp,%rbp
    8eeb:	48 83 ec 20          	sub    $0x20,%rsp
    8eef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ef3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ef7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    8efb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8eff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f07:	48 89 ce             	mov    %rcx,%rsi
    8f0a:	48 89 c7             	mov    %rax,%rdi
    8f0d:	e8 02 00 00 00       	call   8f14 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    8f12:	c9                   	leave
    8f13:	c3                   	ret

0000000000008f14 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    8f14:	55                   	push   %rbp
    8f15:	48 89 e5             	mov    %rsp,%rbp
    8f18:	53                   	push   %rbx
    8f19:	48 83 ec 28          	sub    $0x28,%rsp
    8f1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    8f29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8f2d:	48 89 c7             	mov    %rax,%rdi
    8f30:	e8 2a 00 00 00       	call   8f5f <_ZSt12__miter_baseIPKPKcET_S4_>
    8f35:	48 89 c3             	mov    %rax,%rbx
    8f38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f3c:	48 89 c7             	mov    %rax,%rdi
    8f3f:	e8 1b 00 00 00       	call   8f5f <_ZSt12__miter_baseIPKPKcET_S4_>
    8f44:	48 89 c1             	mov    %rax,%rcx
    8f47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f4b:	48 89 c2             	mov    %rax,%rdx
    8f4e:	48 89 de             	mov    %rbx,%rsi
    8f51:	48 89 cf             	mov    %rcx,%rdi
    8f54:	e8 14 00 00 00       	call   8f6d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    8f59:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f5d:	c9                   	leave
    8f5e:	c3                   	ret

0000000000008f5f <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    8f5f:	55                   	push   %rbp
    8f60:	48 89 e5             	mov    %rsp,%rbp
    8f63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    8f67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f6b:	5d                   	pop    %rbp
    8f6c:	c3                   	ret

0000000000008f6d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    8f6d:	55                   	push   %rbp
    8f6e:	48 89 e5             	mov    %rsp,%rbp
    8f71:	41 54                	push   %r12
    8f73:	53                   	push   %rbx
    8f74:	48 83 ec 20          	sub    $0x20,%rsp
    8f78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f80:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    8f84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f88:	48 89 c7             	mov    %rax,%rdi
    8f8b:	e8 5a d4 ff ff       	call   63ea <_ZSt12__niter_baseIPPKcET_S3_>
    8f90:	49 89 c4             	mov    %rax,%r12
    8f93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8f97:	48 89 c7             	mov    %rax,%rdi
    8f9a:	e8 38 00 00 00       	call   8fd7 <_ZSt12__niter_baseIPKPKcET_S4_>
    8f9f:	48 89 c3             	mov    %rax,%rbx
    8fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fa6:	48 89 c7             	mov    %rax,%rdi
    8fa9:	e8 29 00 00 00       	call   8fd7 <_ZSt12__niter_baseIPKPKcET_S4_>
    8fae:	4c 89 e2             	mov    %r12,%rdx
    8fb1:	48 89 de             	mov    %rbx,%rsi
    8fb4:	48 89 c7             	mov    %rax,%rdi
    8fb7:	e8 29 00 00 00       	call   8fe5 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    8fbc:	48 89 c2             	mov    %rax,%rdx
    8fbf:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    8fc3:	48 89 d6             	mov    %rdx,%rsi
    8fc6:	48 89 c7             	mov    %rax,%rdi
    8fc9:	e8 44 00 00 00       	call   9012 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    8fce:	48 83 c4 20          	add    $0x20,%rsp
    8fd2:	5b                   	pop    %rbx
    8fd3:	41 5c                	pop    %r12
    8fd5:	5d                   	pop    %rbp
    8fd6:	c3                   	ret

0000000000008fd7 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    8fd7:	55                   	push   %rbp
    8fd8:	48 89 e5             	mov    %rsp,%rbp
    8fdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    8fdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fe3:	5d                   	pop    %rbp
    8fe4:	c3                   	ret

0000000000008fe5 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    8fe5:	55                   	push   %rbp
    8fe6:	48 89 e5             	mov    %rsp,%rbp
    8fe9:	48 83 ec 20          	sub    $0x20,%rsp
    8fed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ff1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ff5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    8ff9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ffd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9005:	48 89 ce             	mov    %rcx,%rsi
    9008:	48 89 c7             	mov    %rax,%rdi
    900b:	e8 14 00 00 00       	call   9024 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    9010:	c9                   	leave
    9011:	c3                   	ret

0000000000009012 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    9012:	55                   	push   %rbp
    9013:	48 89 e5             	mov    %rsp,%rbp
    9016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    901a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    901e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9022:	5d                   	pop    %rbp
    9023:	c3                   	ret

0000000000009024 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    9024:	55                   	push   %rbp
    9025:	48 89 e5             	mov    %rsp,%rbp
    9028:	48 83 ec 20          	sub    $0x20,%rsp
    902c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9030:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9034:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    9038:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    903c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9044:	48 89 ce             	mov    %rcx,%rsi
    9047:	48 89 c7             	mov    %rax,%rdi
    904a:	e8 02 00 00 00       	call   9051 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    904f:	c9                   	leave
    9050:	c3                   	ret

0000000000009051 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    9051:	55                   	push   %rbp
    9052:	48 89 e5             	mov    %rsp,%rbp
    9055:	48 83 ec 30          	sub    $0x30,%rsp
    9059:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    905d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9061:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    9065:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9069:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    906d:	48 c1 f8 03          	sar    $0x3,%rax
    9071:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    9075:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    907a:	74 1f                	je     909b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    907c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9080:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9087:	00 
    9088:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    908c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9090:	48 89 ce             	mov    %rcx,%rsi
    9093:	48 89 c7             	mov    %rax,%rdi
    9096:	e8 45 92 ff ff       	call   22e0 <memmove@plt>
	  return __result + _Num;
    909b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    90a6:	00 
    90a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    90ab:	48 01 d0             	add    %rdx,%rax
	}
    90ae:	c9                   	leave
    90af:	c3                   	ret

00000000000090b0 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
    90b0:	55                   	push   %rbp
    90b1:	48 89 e5             	mov    %rsp,%rbp
    90b4:	48 83 ec 10          	sub    $0x10,%rsp
    90b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90bc:	48 8d 15 1d 9c 00 00 	lea    0x9c1d(%rip),%rdx        # 12ce0 <_ZTVSt19bad_optional_access+0x10>
    90c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90c7:	48 89 10             	mov    %rdx,(%rax)
    90ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ce:	48 89 c7             	mov    %rax,%rdi
    90d1:	e8 5a 92 ff ff       	call   2330 <_ZNSt9exceptionD2Ev@plt>
    90d6:	90                   	nop
    90d7:	c9                   	leave
    90d8:	c3                   	ret
    90d9:	90                   	nop

00000000000090da <_ZNSt19bad_optional_accessD0Ev>:
    90da:	55                   	push   %rbp
    90db:	48 89 e5             	mov    %rsp,%rbp
    90de:	48 83 ec 10          	sub    $0x10,%rsp
    90e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ea:	48 89 c7             	mov    %rax,%rdi
    90ed:	e8 be ff ff ff       	call   90b0 <_ZNSt19bad_optional_accessD1Ev>
    90f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90f6:	be 08 00 00 00       	mov    $0x8,%esi
    90fb:	48 89 c7             	mov    %rax,%rdi
    90fe:	e8 bd 90 ff ff       	call   21c0 <_ZdlPvm@plt>
    9103:	c9                   	leave
    9104:	c3                   	ret

Disassembly of section .fini:

0000000000009108 <_fini>:
    9108:	48 83 ec 08          	sub    $0x8,%rsp
    910c:	48 83 c4 08          	add    $0x8,%rsp
    9110:	c3                   	ret
