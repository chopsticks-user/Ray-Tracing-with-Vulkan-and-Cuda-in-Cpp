
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad 0f 01 00 	mov    0x10fad(%rip),%rax        # 13fb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca 0f 01 00    	push   0x10fca(%rip)        # 13ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc 0f 01 00    	jmp    *0x10fcc(%rip)        # 13ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca 0f 01 00    	jmp    *0x10fca(%rip)        # 14000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 0f 01 00    	jmp    *0x10fc2(%rip)        # 14008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba 0f 01 00    	jmp    *0x10fba(%rip)        # 14010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <glfwDestroyWindow@plt>:
    3060:	ff 25 b2 0f 01 00    	jmp    *0x10fb2(%rip)        # 14018 <glfwDestroyWindow@Base>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZSt17__throw_bad_allocv@plt>:
    3070:	ff 25 aa 0f 01 00    	jmp    *0x10faa(%rip)        # 14020 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <_ZNSt13runtime_errorC1EPKc@plt>:
    3080:	ff 25 a2 0f 01 00    	jmp    *0x10fa2(%rip)        # 14028 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <vkGetPhysicalDeviceProperties@plt>:
    3090:	ff 25 9a 0f 01 00    	jmp    *0x10f9a(%rip)        # 14030 <vkGetPhysicalDeviceProperties@Base>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <__cxa_begin_catch@plt>:
    30a0:	ff 25 92 0f 01 00    	jmp    *0x10f92(%rip)        # 14038 <__cxa_begin_catch@CXXABI_1.3>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    30b0:	ff 25 8a 0f 01 00    	jmp    *0x10f8a(%rip)        # 14040 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <strlen@plt>:
    30c0:	ff 25 82 0f 01 00    	jmp    *0x10f82(%rip)        # 14048 <strlen@GLIBC_2.2.5>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <__cxa_allocate_exception@plt>:
    30d0:	ff 25 7a 0f 01 00    	jmp    *0x10f7a(%rip)        # 14050 <__cxa_allocate_exception@CXXABI_1.3>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZSt20__throw_length_errorPKc@plt>:
    30e0:	ff 25 72 0f 01 00    	jmp    *0x10f72(%rip)        # 14058 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <vkEnumeratePhysicalDevices@plt>:
    30f0:	ff 25 6a 0f 01 00    	jmp    *0x10f6a(%rip)        # 14060 <vkEnumeratePhysicalDevices@Base>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3100:	ff 25 62 0f 01 00    	jmp    *0x10f62(%rip)        # 14068 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3110:	ff 25 5a 0f 01 00    	jmp    *0x10f5a(%rip)        # 14070 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3120:	ff 25 52 0f 01 00    	jmp    *0x10f52(%rip)        # 14078 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3130:	ff 25 4a 0f 01 00    	jmp    *0x10f4a(%rip)        # 14080 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <_ZSt19__throw_logic_errorPKc@plt>:
    3140:	ff 25 42 0f 01 00    	jmp    *0x10f42(%rip)        # 14088 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <__cxa_free_exception@plt>:
    3150:	ff 25 3a 0f 01 00    	jmp    *0x10f3a(%rip)        # 14090 <__cxa_free_exception@CXXABI_1.3>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    3160:	ff 25 32 0f 01 00    	jmp    *0x10f32(%rip)        # 14098 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <vkGetPhysicalDeviceFeatures@plt>:
    3170:	ff 25 2a 0f 01 00    	jmp    *0x10f2a(%rip)        # 140a0 <vkGetPhysicalDeviceFeatures@Base>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <glfwGetRequiredInstanceExtensions@plt>:
    3180:	ff 25 22 0f 01 00    	jmp    *0x10f22(%rip)        # 140a8 <glfwGetRequiredInstanceExtensions@Base>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3190:	ff 25 1a 0f 01 00    	jmp    *0x10f1a(%rip)        # 140b0 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    31a0:	ff 25 12 0f 01 00    	jmp    *0x10f12(%rip)        # 140b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <vkDestroyDevice@plt>:
    31b0:	ff 25 0a 0f 01 00    	jmp    *0x10f0a(%rip)        # 140c0 <vkDestroyDevice@Base>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    31c0:	ff 25 02 0f 01 00    	jmp    *0x10f02(%rip)        # 140c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <glfwWindowHint@plt>:
    31d0:	ff 25 fa 0e 01 00    	jmp    *0x10efa(%rip)        # 140d0 <glfwWindowHint@Base>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <__cxa_atexit@plt>:
    31e0:	ff 25 f2 0e 01 00    	jmp    *0x10ef2(%rip)        # 140d8 <__cxa_atexit@GLIBC_2.2.5>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkGetInstanceProcAddr@plt>:
    31f0:	ff 25 ea 0e 01 00    	jmp    *0x10eea(%rip)        # 140e0 <vkGetInstanceProcAddr@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <glfwPollEvents@plt>:
    3200:	ff 25 e2 0e 01 00    	jmp    *0x10ee2(%rip)        # 140e8 <glfwPollEvents@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    3210:	ff 25 da 0e 01 00    	jmp    *0x10eda(%rip)        # 140f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_Znwm@plt>:
    3220:	ff 25 d2 0e 01 00    	jmp    *0x10ed2(%rip)        # 140f8 <_Znwm@GLIBCXX_3.4>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <_ZdlPvm@plt>:
    3230:	ff 25 ca 0e 01 00    	jmp    *0x10eca(%rip)        # 14100 <_ZdlPvm@CXXABI_1.3.9>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <vkDestroyInstance@plt>:
    3240:	ff 25 c2 0e 01 00    	jmp    *0x10ec2(%rip)        # 14108 <vkDestroyInstance@Base>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <glfwTerminate@plt>:
    3250:	ff 25 ba 0e 01 00    	jmp    *0x10eba(%rip)        # 14110 <glfwTerminate@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3260:	ff 25 b2 0e 01 00    	jmp    *0x10eb2(%rip)        # 14118 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <_ZNSolsEPFRSoS_E@plt>:
    3270:	ff 25 aa 0e 01 00    	jmp    *0x10eaa(%rip)        # 14120 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3280:	ff 25 a2 0e 01 00    	jmp    *0x10ea2(%rip)        # 14128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3290:	ff 25 9a 0e 01 00    	jmp    *0x10e9a(%rip)        # 14130 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <_ZNSaIcED1Ev@plt>:
    32a0:	ff 25 92 0e 01 00    	jmp    *0x10e92(%rip)        # 14138 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    32b0:	ff 25 8a 0e 01 00    	jmp    *0x10e8a(%rip)        # 14140 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    32c0:	ff 25 82 0e 01 00    	jmp    *0x10e82(%rip)        # 14148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <glfwInit@plt>:
    32d0:	ff 25 7a 0e 01 00    	jmp    *0x10e7a(%rip)        # 14150 <glfwInit@Base>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    32e0:	ff 25 72 0e 01 00    	jmp    *0x10e72(%rip)        # 14158 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <vkCreateInstance@plt>:
    32f0:	ff 25 6a 0e 01 00    	jmp    *0x10e6a(%rip)        # 14160 <vkCreateInstance@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    3300:	ff 25 62 0e 01 00    	jmp    *0x10e62(%rip)        # 14168 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <vkEnumerateInstanceVersion@plt>:
    3310:	ff 25 5a 0e 01 00    	jmp    *0x10e5a(%rip)        # 14170 <vkEnumerateInstanceVersion@Base>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <vkGetDeviceQueue@plt>:
    3320:	ff 25 52 0e 01 00    	jmp    *0x10e52(%rip)        # 14178 <vkGetDeviceQueue@Base>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <vkEnumerateDeviceExtensionProperties@plt>:
    3330:	ff 25 4a 0e 01 00    	jmp    *0x10e4a(%rip)        # 14180 <vkEnumerateDeviceExtensionProperties@Base>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <__cxa_rethrow@plt>:
    3340:	ff 25 42 0e 01 00    	jmp    *0x10e42(%rip)        # 14188 <__cxa_rethrow@CXXABI_1.3>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <vkCreateDevice@plt>:
    3350:	ff 25 3a 0e 01 00    	jmp    *0x10e3a(%rip)        # 14190 <vkCreateDevice@Base>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSt8ios_base4InitC1Ev@plt>:
    3360:	ff 25 32 0e 01 00    	jmp    *0x10e32(%rip)        # 14198 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <glfwCreateWindowSurface@plt>:
    3370:	ff 25 2a 0e 01 00    	jmp    *0x10e2a(%rip)        # 141a0 <glfwCreateWindowSurface@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <glfwCreateWindow@plt>:
    3380:	ff 25 22 0e 01 00    	jmp    *0x10e22(%rip)        # 141a8 <glfwCreateWindow@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <memmove@plt>:
    3390:	ff 25 1a 0e 01 00    	jmp    *0x10e1a(%rip)        # 141b0 <memmove@GLIBC_2.2.5>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <__cxa_end_catch@plt>:
    33a0:	ff 25 12 0e 01 00    	jmp    *0x10e12(%rip)        # 141b8 <__cxa_end_catch@CXXABI_1.3>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <__cxa_throw@plt>:
    33b0:	ff 25 0a 0e 01 00    	jmp    *0x10e0a(%rip)        # 141c0 <__cxa_throw@CXXABI_1.3>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <vkDestroySurfaceKHR@plt>:
    33c0:	ff 25 02 0e 01 00    	jmp    *0x10e02(%rip)        # 141c8 <vkDestroySurfaceKHR@Base>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <_Unwind_Resume@plt>:
    33d0:	ff 25 fa 0d 01 00    	jmp    *0x10dfa(%rip)        # 141d0 <_Unwind_Resume@GCC_3.0>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <_ZNSaIcEC1Ev@plt>:
    33e0:	ff 25 f2 0d 01 00    	jmp    *0x10df2(%rip)        # 141d8 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    33f0:	ff 25 ea 0d 01 00    	jmp    *0x10dea(%rip)        # 141e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <glfwWindowShouldClose@plt>:
    3400:	ff 25 e2 0d 01 00    	jmp    *0x10de2(%rip)        # 141e8 <glfwWindowShouldClose@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3410:	ff 25 da 0d 01 00    	jmp    *0x10dda(%rip)        # 141f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003420 <__cxa_finalize@plt>:
    3420:	ff 25 6a 0b 01 00    	jmp    *0x10b6a(%rip)        # 13f90 <__cxa_finalize@GLIBC_2.2.5>
    3426:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003430 <_start>:
    3430:	31 ed                	xor    %ebp,%ebp
    3432:	49 89 d1             	mov    %rdx,%r9
    3435:	5e                   	pop    %rsi
    3436:	48 89 e2             	mov    %rsp,%rdx
    3439:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    343d:	50                   	push   %rax
    343e:	54                   	push   %rsp
    343f:	45 31 c0             	xor    %r8d,%r8d
    3442:	31 c9                	xor    %ecx,%ecx
    3444:	48 8d 3d 66 01 00 00 	lea    0x166(%rip),%rdi        # 35b1 <main>
    344b:	ff 15 4f 0b 01 00    	call   *0x10b4f(%rip)        # 13fa0 <__libc_start_main@GLIBC_2.34>
    3451:	f4                   	hlt
    3452:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3459:	00 00 00 
    345c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003460 <deregister_tm_clones>:
    3460:	48 8d 3d b1 0d 01 00 	lea    0x10db1(%rip),%rdi        # 14218 <__TMC_END__>
    3467:	48 8d 05 aa 0d 01 00 	lea    0x10daa(%rip),%rax        # 14218 <__TMC_END__>
    346e:	48 39 f8             	cmp    %rdi,%rax
    3471:	74 15                	je     3488 <deregister_tm_clones+0x28>
    3473:	48 8b 05 36 0b 01 00 	mov    0x10b36(%rip),%rax        # 13fb0 <_ITM_deregisterTMCloneTable@Base>
    347a:	48 85 c0             	test   %rax,%rax
    347d:	74 09                	je     3488 <deregister_tm_clones+0x28>
    347f:	ff e0                	jmp    *%rax
    3481:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3488:	c3                   	ret
    3489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003490 <register_tm_clones>:
    3490:	48 8d 3d 81 0d 01 00 	lea    0x10d81(%rip),%rdi        # 14218 <__TMC_END__>
    3497:	48 8d 35 7a 0d 01 00 	lea    0x10d7a(%rip),%rsi        # 14218 <__TMC_END__>
    349e:	48 29 fe             	sub    %rdi,%rsi
    34a1:	48 89 f0             	mov    %rsi,%rax
    34a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    34a8:	48 c1 f8 03          	sar    $0x3,%rax
    34ac:	48 01 c6             	add    %rax,%rsi
    34af:	48 d1 fe             	sar    %rsi
    34b2:	74 14                	je     34c8 <register_tm_clones+0x38>
    34b4:	48 8b 05 05 0b 01 00 	mov    0x10b05(%rip),%rax        # 13fc0 <_ITM_registerTMCloneTable@Base>
    34bb:	48 85 c0             	test   %rax,%rax
    34be:	74 08                	je     34c8 <register_tm_clones+0x38>
    34c0:	ff e0                	jmp    *%rax
    34c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    34c8:	c3                   	ret
    34c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000034d0 <__do_global_dtors_aux>:
    34d0:	f3 0f 1e fa          	endbr64
    34d4:	80 3d 55 0e 01 00 00 	cmpb   $0x0,0x10e55(%rip)        # 14330 <completed.0>
    34db:	75 2b                	jne    3508 <__do_global_dtors_aux+0x38>
    34dd:	55                   	push   %rbp
    34de:	48 83 3d aa 0a 01 00 	cmpq   $0x0,0x10aaa(%rip)        # 13f90 <__cxa_finalize@GLIBC_2.2.5>
    34e5:	00 
    34e6:	48 89 e5             	mov    %rsp,%rbp
    34e9:	74 0c                	je     34f7 <__do_global_dtors_aux+0x27>
    34eb:	48 8b 3d 0e 0d 01 00 	mov    0x10d0e(%rip),%rdi        # 14200 <__dso_handle>
    34f2:	e8 29 ff ff ff       	call   3420 <__cxa_finalize@plt>
    34f7:	e8 64 ff ff ff       	call   3460 <deregister_tm_clones>
    34fc:	c6 05 2d 0e 01 00 01 	movb   $0x1,0x10e2d(%rip)        # 14330 <completed.0>
    3503:	5d                   	pop    %rbp
    3504:	c3                   	ret
    3505:	0f 1f 00             	nopl   (%rax)
    3508:	c3                   	ret
    3509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003510 <frame_dummy>:
    3510:	f3 0f 1e fa          	endbr64
    3514:	e9 77 ff ff ff       	jmp    3490 <register_tm_clones>

0000000000003519 <_Z14protected_mainv>:
#include <neko.hpp>

#include <iostream>

int protected_main() {
    3519:	55                   	push   %rbp
    351a:	48 89 e5             	mov    %rsp,%rbp
    351d:	41 55                	push   %r13
    351f:	41 54                	push   %r12
    3521:	53                   	push   %rbx
    3522:	48 83 ec 18          	sub    $0x18,%rsp
  auto engine = new neko::Engine();
    3526:	bf f8 00 00 00       	mov    $0xf8,%edi
    352b:	e8 f0 fc ff ff       	call   3220 <_Znwm@plt>
    3530:	48 89 c3             	mov    %rax,%rbx
    3533:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    3539:	48 89 de             	mov    %rbx,%rsi
    353c:	b8 00 00 00 00       	mov    $0x0,%eax
    3541:	ba 1f 00 00 00       	mov    $0x1f,%edx
    3546:	48 89 f7             	mov    %rsi,%rdi
    3549:	48 89 d1             	mov    %rdx,%rcx
    354c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    354f:	48 89 df             	mov    %rbx,%rdi
    3552:	e8 3d 06 00 00       	call   3b94 <_ZN4neko6EngineC1Ev>
    3557:	48 89 5d d8          	mov    %rbx,-0x28(%rbp)
  engine->start();
    355b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    355f:	48 89 c7             	mov    %rax,%rdi
    3562:	e8 8d 04 00 00       	call   39f4 <_ZN4neko6Engine5startEv>
  delete engine;
    3567:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    356b:	48 85 c0             	test   %rax,%rax
    356e:	74 0f                	je     357f <_Z14protected_mainv+0x66>
    3570:	48 8b 10             	mov    (%rax),%rdx
    3573:	48 83 c2 08          	add    $0x8,%rdx
    3577:	48 8b 12             	mov    (%rdx),%rdx
    357a:	48 89 c7             	mov    %rax,%rdi
    357d:	ff d2                	call   *%rdx
  return EXIT_SUCCESS;
    357f:	b8 00 00 00 00       	mov    $0x0,%eax
    3584:	eb 20                	jmp    35a6 <_Z14protected_mainv+0x8d>
  auto engine = new neko::Engine();
    3586:	49 89 c4             	mov    %rax,%r12
    3589:	45 84 ed             	test   %r13b,%r13b
    358c:	74 0d                	je     359b <_Z14protected_mainv+0x82>
    358e:	be f8 00 00 00       	mov    $0xf8,%esi
    3593:	48 89 df             	mov    %rbx,%rdi
    3596:	e8 95 fc ff ff       	call   3230 <_ZdlPvm@plt>
    359b:	4c 89 e0             	mov    %r12,%rax
    359e:	48 89 c7             	mov    %rax,%rdi
    35a1:	e8 2a fe ff ff       	call   33d0 <_Unwind_Resume@plt>
}
    35a6:	48 83 c4 18          	add    $0x18,%rsp
    35aa:	5b                   	pop    %rbx
    35ab:	41 5c                	pop    %r12
    35ad:	41 5d                	pop    %r13
    35af:	5d                   	pop    %rbp
    35b0:	c3                   	ret

00000000000035b1 <main>:

int main() {
    35b1:	55                   	push   %rbp
    35b2:	48 89 e5             	mov    %rsp,%rbp
    35b5:	53                   	push   %rbx
    35b6:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    35ba:	e8 5a ff ff ff       	call   3519 <_Z14protected_mainv>
    35bf:	e9 c1 00 00 00       	jmp    3685 <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    35c4:	b8 01 00 00 00       	mov    $0x1,%eax
    35c9:	e9 b7 00 00 00       	jmp    3685 <main+0xd4>
  } catch (std::exception &e) {
    35ce:	48 83 fa 01          	cmp    $0x1,%rdx
    35d2:	75 4e                	jne    3622 <main+0x71>
    35d4:	48 89 c7             	mov    %rax,%rdi
    35d7:	e8 c4 fa ff ff       	call   30a0 <__cxa_begin_catch@plt>
    35dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    35e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35e4:	48 8b 00             	mov    (%rax),%rax
    35e7:	48 83 c0 10          	add    $0x10,%rax
    35eb:	48 8b 10             	mov    (%rax),%rdx
    35ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35f2:	48 89 c7             	mov    %rax,%rdi
    35f5:	ff d2                	call   *%rdx
    35f7:	48 89 c6             	mov    %rax,%rsi
    35fa:	48 8d 05 1f 0c 01 00 	lea    0x10c1f(%rip),%rax        # 14220 <_ZSt4cerr@GLIBCXX_3.4>
    3601:	48 89 c7             	mov    %rax,%rdi
    3604:	e8 07 fc ff ff       	call   3210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3609:	48 8b 15 88 09 01 00 	mov    0x10988(%rip),%rdx        # 13f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    3610:	48 89 d6             	mov    %rdx,%rsi
    3613:	48 89 c7             	mov    %rax,%rdi
    3616:	e8 55 fc ff ff       	call   3270 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    361b:	e8 80 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    3620:	eb a2                	jmp    35c4 <main+0x13>
    3622:	48 89 c7             	mov    %rax,%rdi
    3625:	e8 76 fa ff ff       	call   30a0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    362a:	48 8d 05 a6 80 00 00 	lea    0x80a6(%rip),%rax        # b6d7 <_ZN6__pstl9execution2v1L5unseqE+0x20>
    3631:	48 89 c6             	mov    %rax,%rsi
    3634:	48 8d 05 e5 0b 01 00 	lea    0x10be5(%rip),%rax        # 14220 <_ZSt4cerr@GLIBCXX_3.4>
    363b:	48 89 c7             	mov    %rax,%rdi
    363e:	e8 cd fb ff ff       	call   3210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3643:	48 8b 15 4e 09 01 00 	mov    0x1094e(%rip),%rdx        # 13f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    364a:	48 89 d6             	mov    %rdx,%rsi
    364d:	48 89 c7             	mov    %rax,%rdi
    3650:	e8 1b fc ff ff       	call   3270 <_ZNSolsEPFRSoS_E@plt>
  }
    3655:	e8 46 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    365a:	e9 65 ff ff ff       	jmp    35c4 <main+0x13>
  } catch (...) {
    365f:	48 89 c3             	mov    %rax,%rbx
    3662:	e8 39 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    3667:	48 89 d8             	mov    %rbx,%rax
    366a:	48 89 c7             	mov    %rax,%rdi
    366d:	e8 5e fd ff ff       	call   33d0 <_Unwind_Resume@plt>
  }
    3672:	48 89 c3             	mov    %rax,%rbx
    3675:	e8 26 fd ff ff       	call   33a0 <__cxa_end_catch@plt>
    367a:	48 89 d8             	mov    %rbx,%rax
    367d:	48 89 c7             	mov    %rax,%rdi
    3680:	e8 4b fd ff ff       	call   33d0 <_Unwind_Resume@plt>
    3685:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3689:	c9                   	leave
    368a:	c3                   	ret

000000000000368b <_Z41__static_initialization_and_destruction_0ii>:
    368b:	55                   	push   %rbp
    368c:	48 89 e5             	mov    %rsp,%rbp
    368f:	48 83 ec 10          	sub    $0x10,%rsp
    3693:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3696:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3699:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    369d:	75 3b                	jne    36da <_Z41__static_initialization_and_destruction_0ii+0x4f>
    369f:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    36a6:	75 32                	jne    36da <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    36a8:	48 8d 05 82 0c 01 00 	lea    0x10c82(%rip),%rax        # 14331 <_ZStL8__ioinit>
    36af:	48 89 c7             	mov    %rax,%rdi
    36b2:	e8 a9 fc ff ff       	call   3360 <_ZNSt8ios_base4InitC1Ev@plt>
    36b7:	48 8d 05 42 0b 01 00 	lea    0x10b42(%rip),%rax        # 14200 <__dso_handle>
    36be:	48 89 c2             	mov    %rax,%rdx
    36c1:	48 8d 05 69 0c 01 00 	lea    0x10c69(%rip),%rax        # 14331 <_ZStL8__ioinit>
    36c8:	48 89 c6             	mov    %rax,%rsi
    36cb:	48 8b 05 f6 08 01 00 	mov    0x108f6(%rip),%rax        # 13fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    36d2:	48 89 c7             	mov    %rax,%rdi
    36d5:	e8 06 fb ff ff       	call   31e0 <__cxa_atexit@plt>
    36da:	90                   	nop
    36db:	c9                   	leave
    36dc:	c3                   	ret

00000000000036dd <_GLOBAL__sub_I__Z14protected_mainv>:
    36dd:	55                   	push   %rbp
    36de:	48 89 e5             	mov    %rsp,%rbp
    36e1:	be ff ff 00 00       	mov    $0xffff,%esi
    36e6:	bf 01 00 00 00       	mov    $0x1,%edi
    36eb:	e8 9b ff ff ff       	call   368b <_Z41__static_initialization_and_destruction_0ii>
    36f0:	5d                   	pop    %rbp
    36f1:	c3                   	ret

00000000000036f2 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    36f2:	55                   	push   %rbp
    36f3:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    36f6:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    36fb:	5d                   	pop    %rbp
    36fc:	c3                   	ret

00000000000036fd <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    36fd:	55                   	push   %rbp
    36fe:	48 89 e5             	mov    %rsp,%rbp
    3701:	48 83 ec 10          	sub    $0x10,%rsp
    3705:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    3709:	e8 e4 ff ff ff       	call   36f2 <_ZSt23__is_constant_evaluatedv>
    370e:	84 c0                	test   %al,%al
    3710:	74 0e                	je     3720 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    3712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3716:	48 89 c7             	mov    %rax,%rdi
    3719:	e8 00 05 00 00       	call   3c1e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    371e:	eb 0d                	jmp    372d <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    3720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3724:	48 89 c7             	mov    %rax,%rdi
    3727:	e8 94 f9 ff ff       	call   30c0 <strlen@plt>
    372c:	90                   	nop
      }
    372d:	c9                   	leave
    372e:	c3                   	ret
    372f:	90                   	nop

0000000000003730 <_ZN4neko12StaticObjectC1Ev>:
#else
inline constexpr bool debugMode = false;
#endif /* NDEBUG */

struct StaticObject {
  StaticObject() = default;
    3730:	55                   	push   %rbp
    3731:	48 89 e5             	mov    %rsp,%rbp
    3734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3738:	48 8d 15 d1 04 01 00 	lea    0x104d1(%rip),%rdx        # 13c10 <_ZTVN4neko12StaticObjectE+0x10>
    373f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3743:	48 89 10             	mov    %rdx,(%rax)
    3746:	90                   	nop
    3747:	5d                   	pop    %rbp
    3748:	c3                   	ret
    3749:	90                   	nop

000000000000374a <_ZN4neko12StaticObjectD1Ev>:
  StaticObject(const StaticObject &) = delete;
  StaticObject(StaticObject &&) = delete;
  StaticObject &operator=(const StaticObject &) = delete;
  StaticObject &operator=(StaticObject &&) = delete;
  virtual ~StaticObject() = default;
    374a:	55                   	push   %rbp
    374b:	48 89 e5             	mov    %rsp,%rbp
    374e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3752:	48 8d 15 b7 04 01 00 	lea    0x104b7(%rip),%rdx        # 13c10 <_ZTVN4neko12StaticObjectE+0x10>
    3759:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    375d:	48 89 10             	mov    %rdx,(%rax)
    3760:	90                   	nop
    3761:	5d                   	pop    %rbp
    3762:	c3                   	ret
    3763:	90                   	nop

0000000000003764 <_ZN4neko12StaticObjectD0Ev>:
    3764:	55                   	push   %rbp
    3765:	48 89 e5             	mov    %rsp,%rbp
    3768:	48 83 ec 10          	sub    $0x10,%rsp
    376c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3774:	48 89 c7             	mov    %rax,%rdi
    3777:	e8 ce ff ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    377c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3780:	be 08 00 00 00       	mov    $0x8,%esi
    3785:	48 89 c7             	mov    %rax,%rdi
    3788:	e8 a3 fa ff ff       	call   3230 <_ZdlPvm@plt>
    378d:	c9                   	leave
    378e:	c3                   	ret
    378f:	90                   	nop

0000000000003790 <_ZN4neko7ContextC1Ev>:

class Context : public StaticObject {
public:
  using StaticObject::StaticObject;

  Context() {
    3790:	55                   	push   %rbp
    3791:	48 89 e5             	mov    %rsp,%rbp
    3794:	41 54                	push   %r12
    3796:	53                   	push   %rbx
    3797:	48 83 ec 10          	sub    $0x10,%rsp
    379b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    379f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37a3:	48 89 c7             	mov    %rax,%rdi
    37a6:	e8 85 ff ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    37ab:	48 8d 15 3e 04 01 00 	lea    0x1043e(%rip),%rdx        # 13bf0 <_ZTVN4neko7ContextE+0x10>
    37b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37b6:	48 89 10             	mov    %rdx,(%rax)
    if (glfwInit() != GLFW_TRUE) {
    37b9:	e8 12 fb ff ff       	call   32d0 <glfwInit@plt>
    37be:	83 f8 01             	cmp    $0x1,%eax
    37c1:	0f 95 c0             	setne  %al
    37c4:	84 c0                	test   %al,%al
    37c6:	74 65                	je     382d <_ZN4neko7ContextC1Ev+0x9d>
      throw std::runtime_error(
          "A bug or configuration error in GLFW, the underlying operating "
          "system or its drivers, or a lack of required resources.");
    37c8:	bf 10 00 00 00       	mov    $0x10,%edi
    37cd:	e8 fe f8 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    37d2:	48 89 c3             	mov    %rax,%rbx
      throw std::runtime_error(
    37d5:	48 8d 05 5c 7e 00 00 	lea    0x7e5c(%rip),%rax        # b638 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    37dc:	48 89 c6             	mov    %rax,%rsi
    37df:	48 89 df             	mov    %rbx,%rdi
    37e2:	e8 99 f8 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
          "system or its drivers, or a lack of required resources.");
    37e7:	48 8b 05 ba 07 01 00 	mov    0x107ba(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    37ee:	48 89 c2             	mov    %rax,%rdx
    37f1:	48 8d 05 a8 04 01 00 	lea    0x104a8(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    37f8:	48 89 c6             	mov    %rax,%rsi
    37fb:	48 89 df             	mov    %rbx,%rdi
    37fe:	e8 ad fb ff ff       	call   33b0 <__cxa_throw@plt>
    3803:	49 89 c4             	mov    %rax,%r12
    3806:	48 89 df             	mov    %rbx,%rdi
    3809:	e8 42 f9 ff ff       	call   3150 <__cxa_free_exception@plt>
    380e:	4c 89 e3             	mov    %r12,%rbx
    3811:	eb 03                	jmp    3816 <_ZN4neko7ContextC1Ev+0x86>
    }
  }
    3813:	48 89 c3             	mov    %rax,%rbx
    3816:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    381a:	48 89 c7             	mov    %rax,%rdi
    381d:	e8 28 ff ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3822:	48 89 d8             	mov    %rbx,%rax
    3825:	48 89 c7             	mov    %rax,%rdi
    3828:	e8 a3 fb ff ff       	call   33d0 <_Unwind_Resume@plt>
    382d:	90                   	nop
    382e:	48 83 c4 10          	add    $0x10,%rsp
    3832:	5b                   	pop    %rbx
    3833:	41 5c                	pop    %r12
    3835:	5d                   	pop    %rbp
    3836:	c3                   	ret
    3837:	90                   	nop

0000000000003838 <_ZN4neko7ContextD1Ev>:

  ~Context() { glfwTerminate(); }
    3838:	55                   	push   %rbp
    3839:	48 89 e5             	mov    %rsp,%rbp
    383c:	48 83 ec 10          	sub    $0x10,%rsp
    3840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3844:	48 8d 15 a5 03 01 00 	lea    0x103a5(%rip),%rdx        # 13bf0 <_ZTVN4neko7ContextE+0x10>
    384b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    384f:	48 89 10             	mov    %rdx,(%rax)
    3852:	e8 f9 f9 ff ff       	call   3250 <glfwTerminate@plt>
    3857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    385b:	48 89 c7             	mov    %rax,%rdi
    385e:	e8 e7 fe ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3863:	90                   	nop
    3864:	c9                   	leave
    3865:	c3                   	ret

0000000000003866 <_ZN4neko7ContextD0Ev>:
    3866:	55                   	push   %rbp
    3867:	48 89 e5             	mov    %rsp,%rbp
    386a:	48 83 ec 10          	sub    $0x10,%rsp
    386e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3876:	48 89 c7             	mov    %rax,%rdi
    3879:	e8 ba ff ff ff       	call   3838 <_ZN4neko7ContextD1Ev>
    387e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3882:	be 08 00 00 00       	mov    $0x8,%esi
    3887:	48 89 c7             	mov    %rax,%rdi
    388a:	e8 a1 f9 ff ff       	call   3230 <_ZdlPvm@plt>
    388f:	c9                   	leave
    3890:	c3                   	ret
    3891:	90                   	nop

0000000000003892 <_ZN4neko8RendererC1ERKNS_8SettingsE>:

class Renderer : public StaticObject {
public:
  using StaticObject::StaticObject;

  explicit Renderer(const Settings &settings) : mSettings{settings} {}
    3892:	55                   	push   %rbp
    3893:	48 89 e5             	mov    %rsp,%rbp
    3896:	53                   	push   %rbx
    3897:	48 83 ec 18          	sub    $0x18,%rsp
    389b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    389f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    38a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38a7:	48 89 c7             	mov    %rax,%rdi
    38aa:	e8 81 fe ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    38af:	48 8d 15 1a 03 01 00 	lea    0x1031a(%rip),%rdx        # 13bd0 <_ZTVN4neko8RendererE+0x10>
    38b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38ba:	48 89 10             	mov    %rdx,(%rax)
    38bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    38c5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    38c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38cd:	48 83 c0 10          	add    $0x10,%rax
    38d1:	48 89 c7             	mov    %rax,%rdi
    38d4:	e8 b7 fe ff ff       	call   3790 <_ZN4neko7ContextC1Ev>
    38d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38dd:	48 8d 48 18          	lea    0x18(%rax),%rcx
    38e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38e5:	48 8b 40 08          	mov    0x8(%rax),%rax
    38e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    38ed:	48 83 c2 10          	add    $0x10,%rdx
    38f1:	48 89 c6             	mov    %rax,%rsi
    38f4:	48 89 cf             	mov    %rcx,%rdi
    38f7:	e8 cc 53 00 00       	call   8cc8 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE>
    38fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3900:	48 8d 50 38          	lea    0x38(%rax),%rdx
    3904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3908:	48 8b 40 08          	mov    0x8(%rax),%rax
    390c:	48 89 c6             	mov    %rax,%rsi
    390f:	48 89 d7             	mov    %rdx,%rdi
    3912:	e8 63 65 00 00       	call   9e7a <_ZN4neko6WindowC1ERKNS_8SettingsE>
    3917:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    391b:	48 83 c0 50          	add    $0x50,%rax
    391f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3923:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
    3927:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    392b:	48 83 c2 38          	add    $0x38,%rdx
    392f:	48 89 ce             	mov    %rcx,%rsi
    3932:	48 89 c7             	mov    %rax,%rdi
    3935:	e8 96 66 00 00       	call   9fd0 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>
    393a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    393e:	48 83 c0 68          	add    $0x68,%rax
    3942:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3946:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
    394a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    394e:	48 83 c2 50          	add    $0x50,%rdx
    3952:	48 89 ce             	mov    %rcx,%rsi
    3955:	48 89 c7             	mov    %rax,%rdi
    3958:	e8 7f 06 00 00       	call   3fdc <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE>
    395d:	eb 6e                	jmp    39cd <_ZN4neko8RendererC1ERKNS_8SettingsE+0x13b>
    395f:	48 89 c3             	mov    %rax,%rbx
    3962:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3966:	48 83 c0 50          	add    $0x50,%rax
    396a:	48 89 c7             	mov    %rax,%rdi
    396d:	e8 4c 67 00 00       	call   a0be <_ZN4neko7SurfaceD1Ev>
    3972:	eb 03                	jmp    3977 <_ZN4neko8RendererC1ERKNS_8SettingsE+0xe5>
    3974:	48 89 c3             	mov    %rax,%rbx
    3977:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    397b:	48 83 c0 38          	add    $0x38,%rax
    397f:	48 89 c7             	mov    %rax,%rdi
    3982:	e8 b3 65 00 00       	call   9f3a <_ZN4neko6WindowD1Ev>
    3987:	eb 03                	jmp    398c <_ZN4neko8RendererC1ERKNS_8SettingsE+0xfa>
    3989:	48 89 c3             	mov    %rax,%rbx
    398c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3990:	48 83 c0 18          	add    $0x18,%rax
    3994:	48 89 c7             	mov    %rax,%rdi
    3997:	e8 e8 56 00 00       	call   9084 <_ZN4neko8InstanceD1Ev>
    399c:	eb 03                	jmp    39a1 <_ZN4neko8RendererC1ERKNS_8SettingsE+0x10f>
    399e:	48 89 c3             	mov    %rax,%rbx
    39a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39a5:	48 83 c0 10          	add    $0x10,%rax
    39a9:	48 89 c7             	mov    %rax,%rdi
    39ac:	e8 87 fe ff ff       	call   3838 <_ZN4neko7ContextD1Ev>
    39b1:	eb 03                	jmp    39b6 <_ZN4neko8RendererC1ERKNS_8SettingsE+0x124>
    39b3:	48 89 c3             	mov    %rax,%rbx
    39b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39ba:	48 89 c7             	mov    %rax,%rdi
    39bd:	e8 88 fd ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    39c2:	48 89 d8             	mov    %rbx,%rax
    39c5:	48 89 c7             	mov    %rax,%rdi
    39c8:	e8 03 fa ff ff       	call   33d0 <_Unwind_Resume@plt>
    39cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39d1:	c9                   	leave
    39d2:	c3                   	ret
    39d3:	90                   	nop

00000000000039d4 <_ZN4neko8Renderer5startEv>:

  ~Renderer() = default;

  void start() { mWindow.open(); };
    39d4:	55                   	push   %rbp
    39d5:	48 89 e5             	mov    %rsp,%rbp
    39d8:	48 83 ec 10          	sub    $0x10,%rsp
    39dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39e4:	48 83 c0 38          	add    $0x38,%rax
    39e8:	48 89 c7             	mov    %rax,%rdi
    39eb:	e8 b0 65 00 00       	call   9fa0 <_ZN4neko6Window4openEv>
    39f0:	90                   	nop
    39f1:	c9                   	leave
    39f2:	c3                   	ret
    39f3:	90                   	nop

00000000000039f4 <_ZN4neko6Engine5startEv>:

class Engine : public StaticObject {
public:
  using StaticObject::StaticObject;

  void start() { mRenderer.start(); };
    39f4:	55                   	push   %rbp
    39f5:	48 89 e5             	mov    %rsp,%rbp
    39f8:	48 83 ec 10          	sub    $0x10,%rsp
    39fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a04:	48 83 c0 68          	add    $0x68,%rax
    3a08:	48 89 c7             	mov    %rax,%rdi
    3a0b:	e8 c4 ff ff ff       	call   39d4 <_ZN4neko8Renderer5startEv>
    3a10:	90                   	nop
    3a11:	c9                   	leave
    3a12:	c3                   	ret
    3a13:	90                   	nop

0000000000003a14 <_ZN4neko8SettingsUt_C1Ev>:
  MoveOnlyObject &operator=(MoveOnlyObject &&) = default;
  virtual ~MoveOnlyObject() = default;
};

struct Settings {
  struct {
    3a14:	55                   	push   %rbp
    3a15:	48 89 e5             	mov    %rsp,%rbp
    3a18:	53                   	push   %rbx
    3a19:	48 83 ec 28          	sub    $0x28,%rsp
    3a1d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3a21:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    3a25:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3a29:	48 89 c7             	mov    %rax,%rdi
    3a2c:	e8 af f9 ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    3a31:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3a35:	48 89 c2             	mov    %rax,%rdx
    3a38:	48 8d 05 79 7c 00 00 	lea    0x7c79(%rip),%rax        # b6b8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    3a3f:	48 89 c6             	mov    %rax,%rsi
    3a42:	48 89 df             	mov    %rbx,%rdi
    3a45:	e8 36 02 00 00       	call   3c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    3a4a:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3a4e:	48 89 c7             	mov    %rax,%rdi
    3a51:	e8 4a f8 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3a56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a5a:	c7 40 20 00 00 40 00 	movl   $0x400000,0x20(%rax)
    3a61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a65:	48 8d 58 28          	lea    0x28(%rax),%rbx
    3a69:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3a6d:	48 89 c7             	mov    %rax,%rdi
    3a70:	e8 6b f9 ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    3a75:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3a79:	48 89 c2             	mov    %rax,%rdx
    3a7c:	48 8d 05 48 7c 00 00 	lea    0x7c48(%rip),%rax        # b6cb <_ZN6__pstl9execution2v1L5unseqE+0x14>
    3a83:	48 89 c6             	mov    %rax,%rsi
    3a86:	48 89 df             	mov    %rbx,%rdi
    3a89:	e8 f2 01 00 00       	call   3c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    3a8e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3a92:	48 89 c7             	mov    %rax,%rdi
    3a95:	e8 06 f8 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3a9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a9e:	c7 40 48 00 00 40 00 	movl   $0x400000,0x48(%rax)
    3aa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aa9:	c7 40 4c 00 30 40 00 	movl   $0x403000,0x4c(%rax)
    3ab0:	eb 40                	jmp    3af2 <_ZN4neko8SettingsUt_C1Ev+0xde>
    3ab2:	48 89 c3             	mov    %rax,%rbx
    3ab5:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    3ab9:	48 89 c7             	mov    %rax,%rdi
    3abc:	e8 df f7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3ac1:	48 89 d8             	mov    %rbx,%rax
    3ac4:	48 89 c7             	mov    %rax,%rdi
    3ac7:	e8 04 f9 ff ff       	call   33d0 <_Unwind_Resume@plt>
    3acc:	48 89 c3             	mov    %rax,%rbx
    3acf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3ad3:	48 89 c7             	mov    %rax,%rdi
    3ad6:	e8 c5 f7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    3adb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3adf:	48 89 c7             	mov    %rax,%rdi
    3ae2:	e8 29 f6 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    3ae7:	48 89 d8             	mov    %rbx,%rax
    3aea:	48 89 c7             	mov    %rax,%rdi
    3aed:	e8 de f8 ff ff       	call   33d0 <_Unwind_Resume@plt>
    3af2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3af6:	c9                   	leave
    3af7:	c3                   	ret

0000000000003af8 <_ZN4neko8SettingsUt_D1Ev>:
    3af8:	55                   	push   %rbp
    3af9:	48 89 e5             	mov    %rsp,%rbp
    3afc:	48 83 ec 10          	sub    $0x10,%rsp
    3b00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b08:	48 83 c0 28          	add    $0x28,%rax
    3b0c:	48 89 c7             	mov    %rax,%rdi
    3b0f:	e8 fc f5 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    3b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b18:	48 89 c7             	mov    %rax,%rdi
    3b1b:	e8 f0 f5 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    3b20:	90                   	nop
    3b21:	c9                   	leave
    3b22:	c3                   	ret
    3b23:	90                   	nop

0000000000003b24 <_ZN4neko8SettingsUt0_C1Ev>:
    uint32_t appVersion = VK_MAKE_VERSION(1, 0, 0);
    std::string engineName = "Neko Engine";
    uint32_t engineVersion = VK_MAKE_VERSION(1, 0, 0);
    uint32_t apiVersion = VK_API_VERSION_1_3;
  } general;
  struct {
    3b24:	55                   	push   %rbp
    3b25:	48 89 e5             	mov    %rsp,%rbp
    3b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b30:	c7 00 20 03 00 00    	movl   $0x320,(%rax)
    3b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b3a:	c7 40 04 58 02 00 00 	movl   $0x258,0x4(%rax)
    3b41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b45:	c6 40 08 00          	movb   $0x0,0x8(%rax)
    3b49:	90                   	nop
    3b4a:	5d                   	pop    %rbp
    3b4b:	c3                   	ret

0000000000003b4c <_ZN4neko8SettingsC1Ev>:
struct Settings {
    3b4c:	55                   	push   %rbp
    3b4d:	48 89 e5             	mov    %rsp,%rbp
    3b50:	48 83 ec 10          	sub    $0x10,%rsp
    3b54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b5c:	48 89 c7             	mov    %rax,%rdi
    3b5f:	e8 b0 fe ff ff       	call   3a14 <_ZN4neko8SettingsUt_C1Ev>
    3b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b68:	48 83 c0 50          	add    $0x50,%rax
    3b6c:	48 89 c7             	mov    %rax,%rdi
    3b6f:	e8 b0 ff ff ff       	call   3b24 <_ZN4neko8SettingsUt0_C1Ev>
    3b74:	90                   	nop
    3b75:	c9                   	leave
    3b76:	c3                   	ret
    3b77:	90                   	nop

0000000000003b78 <_ZN4neko8SettingsD1Ev>:
    3b78:	55                   	push   %rbp
    3b79:	48 89 e5             	mov    %rsp,%rbp
    3b7c:	48 83 ec 10          	sub    $0x10,%rsp
    3b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b88:	48 89 c7             	mov    %rax,%rdi
    3b8b:	e8 68 ff ff ff       	call   3af8 <_ZN4neko8SettingsUt_D1Ev>
    3b90:	90                   	nop
    3b91:	c9                   	leave
    3b92:	c3                   	ret
    3b93:	90                   	nop

0000000000003b94 <_ZN4neko6EngineC1Ev>:
class Engine : public StaticObject {
    3b94:	55                   	push   %rbp
    3b95:	48 89 e5             	mov    %rsp,%rbp
    3b98:	53                   	push   %rbx
    3b99:	48 83 ec 18          	sub    $0x18,%rsp
    3b9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3ba1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ba5:	48 89 c7             	mov    %rax,%rdi
    3ba8:	e8 83 fb ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    3bad:	48 8d 15 fc ff 00 00 	lea    0xfffc(%rip),%rdx        # 13bb0 <_ZTVN4neko6EngineE+0x10>
    3bb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bb8:	48 89 10             	mov    %rdx,(%rax)
    3bbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bbf:	48 83 c0 08          	add    $0x8,%rax
    3bc3:	48 89 c7             	mov    %rax,%rdi
    3bc6:	e8 81 ff ff ff       	call   3b4c <_ZN4neko8SettingsC1Ev>
    3bcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bcf:	48 83 c0 68          	add    $0x68,%rax
    3bd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3bd7:	48 83 c2 08          	add    $0x8,%rdx
    3bdb:	48 89 d6             	mov    %rdx,%rsi
    3bde:	48 89 c7             	mov    %rax,%rdi
    3be1:	e8 ac fc ff ff       	call   3892 <_ZN4neko8RendererC1ERKNS_8SettingsE>
    3be6:	eb 2f                	jmp    3c17 <_ZN4neko6EngineC1Ev+0x83>
    3be8:	48 89 c3             	mov    %rax,%rbx
    3beb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bef:	48 83 c0 08          	add    $0x8,%rax
    3bf3:	48 89 c7             	mov    %rax,%rdi
    3bf6:	e8 7d ff ff ff       	call   3b78 <_ZN4neko8SettingsD1Ev>
    3bfb:	eb 03                	jmp    3c00 <_ZN4neko6EngineC1Ev+0x6c>
    3bfd:	48 89 c3             	mov    %rax,%rbx
    3c00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c04:	48 89 c7             	mov    %rax,%rdi
    3c07:	e8 3e fb ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3c0c:	48 89 d8             	mov    %rbx,%rax
    3c0f:	48 89 c7             	mov    %rax,%rdi
    3c12:	e8 b9 f7 ff ff       	call   33d0 <_Unwind_Resume@plt>
    3c17:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3c1b:	c9                   	leave
    3c1c:	c3                   	ret
    3c1d:	90                   	nop

0000000000003c1e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    3c1e:	55                   	push   %rbp
    3c1f:	48 89 e5             	mov    %rsp,%rbp
    3c22:	48 83 ec 20          	sub    $0x20,%rsp
    3c26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    3c2a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    3c31:	00 
      while (!eq(__p[__i], char_type()))
    3c32:	eb 05                	jmp    3c39 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    3c34:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    3c39:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    3c3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3c41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c45:	48 01 c2             	add    %rax,%rdx
    3c48:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    3c4c:	48 89 c6             	mov    %rax,%rsi
    3c4f:	48 89 d7             	mov    %rdx,%rdi
    3c52:	e8 c9 00 00 00       	call   3d20 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    3c57:	83 f0 01             	xor    $0x1,%eax
    3c5a:	84 c0                	test   %al,%al
    3c5c:	75 d6                	jne    3c34 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    3c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3c62:	c9                   	leave
    3c63:	c3                   	ret

0000000000003c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    3c64:	55                   	push   %rbp
    3c65:	48 89 e5             	mov    %rsp,%rbp
    3c68:	48 83 ec 10          	sub    $0x10,%rsp
    3c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c74:	48 89 c7             	mov    %rax,%rdi
    3c77:	e8 d4 f3 ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    3c7c:	90                   	nop
    3c7d:	c9                   	leave
    3c7e:	c3                   	ret
    3c7f:	90                   	nop

0000000000003c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    3c80:	55                   	push   %rbp
    3c81:	48 89 e5             	mov    %rsp,%rbp
    3c84:	53                   	push   %rbx
    3c85:	48 83 ec 38          	sub    $0x38,%rsp
    3c89:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c8d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3c91:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    3c95:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    3c99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c9d:	48 89 c7             	mov    %rax,%rdi
    3ca0:	e8 fb f4 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3ca5:	48 89 c1             	mov    %rax,%rcx
    3ca8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3cac:	48 89 c2             	mov    %rax,%rdx
    3caf:	48 89 ce             	mov    %rcx,%rsi
    3cb2:	48 89 df             	mov    %rbx,%rdi
    3cb5:	e8 c6 f5 ff ff       	call   3280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    3cba:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3cbf:	75 0f                	jne    3cd0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    3cc1:	48 8d 05 28 7a 00 00 	lea    0x7a28(%rip),%rax        # b6f0 <_ZN6__pstl9execution2v1L5unseqE+0x39>
    3cc8:	48 89 c7             	mov    %rax,%rdi
    3ccb:	e8 70 f4 ff ff       	call   3140 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    3cd0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3cd4:	48 89 c7             	mov    %rax,%rdi
    3cd7:	e8 21 fa ff ff       	call   36fd <_ZNSt11char_traitsIcE6lengthEPKc>
    3cdc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3ce0:	48 01 d0             	add    %rdx,%rax
    3ce3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    3ce7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ceb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3cef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cf3:	48 89 ce             	mov    %rcx,%rsi
    3cf6:	48 89 c7             	mov    %rax,%rdi
    3cf9:	e8 88 00 00 00       	call   3d86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    3cfe:	eb 1a                	jmp    3d1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    3d00:	48 89 c3             	mov    %rax,%rbx
    3d03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d07:	48 89 c7             	mov    %rax,%rdi
    3d0a:	e8 55 ff ff ff       	call   3c64 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    3d0f:	48 89 d8             	mov    %rbx,%rax
    3d12:	48 89 c7             	mov    %rax,%rdi
    3d15:	e8 b6 f6 ff ff       	call   33d0 <_Unwind_Resume@plt>
    3d1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3d1e:	c9                   	leave
    3d1f:	c3                   	ret

0000000000003d20 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    3d20:	55                   	push   %rbp
    3d21:	48 89 e5             	mov    %rsp,%rbp
    3d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    3d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d30:	0f b6 10             	movzbl (%rax),%edx
    3d33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d37:	0f b6 00             	movzbl (%rax),%eax
    3d3a:	38 c2                	cmp    %al,%dl
    3d3c:	0f 94 c0             	sete   %al
    3d3f:	5d                   	pop    %rbp
    3d40:	c3                   	ret
    3d41:	90                   	nop

0000000000003d42 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    3d42:	55                   	push   %rbp
    3d43:	48 89 e5             	mov    %rsp,%rbp
    3d46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d56:	48 89 10             	mov    %rdx,(%rax)
    3d59:	90                   	nop
    3d5a:	5d                   	pop    %rbp
    3d5b:	c3                   	ret

0000000000003d5c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    3d5c:	55                   	push   %rbp
    3d5d:	48 89 e5             	mov    %rsp,%rbp
    3d60:	48 83 ec 10          	sub    $0x10,%rsp
    3d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d6c:	48 8b 00             	mov    (%rax),%rax
    3d6f:	48 85 c0             	test   %rax,%rax
    3d72:	74 0f                	je     3d83 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    3d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d78:	48 8b 00             	mov    (%rax),%rax
    3d7b:	48 89 c7             	mov    %rax,%rdi
    3d7e:	e8 7d f5 ff ff       	call   3300 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    3d83:	90                   	nop
    3d84:	c9                   	leave
    3d85:	c3                   	ret

0000000000003d86 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    3d86:	55                   	push   %rbp
    3d87:	48 89 e5             	mov    %rsp,%rbp
    3d8a:	48 83 ec 40          	sub    $0x40,%rsp
    3d8e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3d92:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3d96:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    3d9a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3d9e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3da2:	48 89 d6             	mov    %rdx,%rsi
    3da5:	48 89 c7             	mov    %rax,%rdi
    3da8:	e8 c0 00 00 00       	call   3e6d <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    3dad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    3db1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3db5:	48 83 f8 0f          	cmp    $0xf,%rax
    3db9:	76 3f                	jbe    3dfa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    3dbb:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    3dbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3dc3:	ba 00 00 00 00       	mov    $0x0,%edx
    3dc8:	48 89 ce             	mov    %rcx,%rsi
    3dcb:	48 89 c7             	mov    %rax,%rdi
    3dce:	e8 1d f6 ff ff       	call   33f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    3dd3:	48 89 c2             	mov    %rax,%rdx
    3dd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3dda:	48 89 d6             	mov    %rdx,%rsi
    3ddd:	48 89 c7             	mov    %rax,%rdi
    3de0:	e8 db f3 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    3de5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3de9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ded:	48 89 d6             	mov    %rdx,%rsi
    3df0:	48 89 c7             	mov    %rax,%rdi
    3df3:	e8 18 f6 ff ff       	call   3410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    3df8:	eb 15                	jmp    3e0f <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    3dfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3dfe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    3e02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e06:	48 89 c7             	mov    %rax,%rdi
    3e09:	e8 92 f3 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3e0e:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    3e0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3e13:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3e17:	48 89 d6             	mov    %rdx,%rsi
    3e1a:	48 89 c7             	mov    %rax,%rdi
    3e1d:	e8 20 ff ff ff       	call   3d42 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    3e22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e26:	48 89 c7             	mov    %rax,%rdi
    3e29:	e8 82 f4 ff ff       	call   32b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    3e2e:	48 89 c1             	mov    %rax,%rcx
    3e31:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3e35:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e39:	48 89 c6             	mov    %rax,%rsi
    3e3c:	48 89 cf             	mov    %rcx,%rdi
    3e3f:	e8 7c f4 ff ff       	call   32c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    3e44:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3e4b:	00 

	_M_set_length(__dnew);
    3e4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e54:	48 89 d6             	mov    %rdx,%rsi
    3e57:	48 89 c7             	mov    %rax,%rdi
    3e5a:	e8 c1 f2 ff ff       	call   3120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    3e5f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3e63:	48 89 c7             	mov    %rax,%rdi
    3e66:	e8 f1 fe ff ff       	call   3d5c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    3e6b:	c9                   	leave
    3e6c:	c3                   	ret

0000000000003e6d <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    3e6d:	55                   	push   %rbp
    3e6e:	48 89 e5             	mov    %rsp,%rbp
    3e71:	48 83 ec 10          	sub    $0x10,%rsp
    3e75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    3e7d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3e81:	48 89 c7             	mov    %rax,%rdi
    3e84:	e8 15 00 00 00       	call   3e9e <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    3e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e8d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e91:	48 89 d6             	mov    %rdx,%rsi
    3e94:	48 89 c7             	mov    %rax,%rdi
    3e97:	e8 0d 00 00 00       	call   3ea9 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    3e9c:	c9                   	leave
    3e9d:	c3                   	ret

0000000000003e9e <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    3e9e:	55                   	push   %rbp
    3e9f:	48 89 e5             	mov    %rsp,%rbp
    3ea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    3ea6:	90                   	nop
    3ea7:	5d                   	pop    %rbp
    3ea8:	c3                   	ret

0000000000003ea9 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    3ea9:	55                   	push   %rbp
    3eaa:	48 89 e5             	mov    %rsp,%rbp
    3ead:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3eb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    3eb5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3eb9:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    3ebd:	5d                   	pop    %rbp
    3ebe:	c3                   	ret
    3ebf:	90                   	nop

0000000000003ec0 <_ZN4neko6EngineD1Ev>:
    3ec0:	55                   	push   %rbp
    3ec1:	48 89 e5             	mov    %rsp,%rbp
    3ec4:	48 83 ec 10          	sub    $0x10,%rsp
    3ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ecc:	48 8d 15 dd fc 00 00 	lea    0xfcdd(%rip),%rdx        # 13bb0 <_ZTVN4neko6EngineE+0x10>
    3ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ed7:	48 89 10             	mov    %rdx,(%rax)
    3eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ede:	48 83 c0 68          	add    $0x68,%rax
    3ee2:	48 89 c7             	mov    %rax,%rdi
    3ee5:	e8 4c 00 00 00       	call   3f36 <_ZN4neko8RendererD1Ev>
    3eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3eee:	48 83 c0 08          	add    $0x8,%rax
    3ef2:	48 89 c7             	mov    %rax,%rdi
    3ef5:	e8 7e fc ff ff       	call   3b78 <_ZN4neko8SettingsD1Ev>
    3efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3efe:	48 89 c7             	mov    %rax,%rdi
    3f01:	e8 44 f8 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3f06:	90                   	nop
    3f07:	c9                   	leave
    3f08:	c3                   	ret
    3f09:	90                   	nop

0000000000003f0a <_ZN4neko6EngineD0Ev>:
    3f0a:	55                   	push   %rbp
    3f0b:	48 89 e5             	mov    %rsp,%rbp
    3f0e:	48 83 ec 10          	sub    $0x10,%rsp
    3f12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f1a:	48 89 c7             	mov    %rax,%rdi
    3f1d:	e8 9e ff ff ff       	call   3ec0 <_ZN4neko6EngineD1Ev>
    3f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f26:	be f8 00 00 00       	mov    $0xf8,%esi
    3f2b:	48 89 c7             	mov    %rax,%rdi
    3f2e:	e8 fd f2 ff ff       	call   3230 <_ZdlPvm@plt>
    3f33:	c9                   	leave
    3f34:	c3                   	ret
    3f35:	90                   	nop

0000000000003f36 <_ZN4neko8RendererD1Ev>:
  ~Renderer() = default;
    3f36:	55                   	push   %rbp
    3f37:	48 89 e5             	mov    %rsp,%rbp
    3f3a:	48 83 ec 10          	sub    $0x10,%rsp
    3f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f42:	48 8d 15 87 fc 00 00 	lea    0xfc87(%rip),%rdx        # 13bd0 <_ZTVN4neko8RendererE+0x10>
    3f49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f4d:	48 89 10             	mov    %rdx,(%rax)
    3f50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f54:	48 83 c0 68          	add    $0x68,%rax
    3f58:	48 89 c7             	mov    %rax,%rdi
    3f5b:	e8 1c 03 00 00       	call   427c <_ZN4neko13LogicalDeviceD1Ev>
    3f60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f64:	48 83 c0 50          	add    $0x50,%rax
    3f68:	48 89 c7             	mov    %rax,%rdi
    3f6b:	e8 4e 61 00 00       	call   a0be <_ZN4neko7SurfaceD1Ev>
    3f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f74:	48 83 c0 38          	add    $0x38,%rax
    3f78:	48 89 c7             	mov    %rax,%rdi
    3f7b:	e8 ba 5f 00 00       	call   9f3a <_ZN4neko6WindowD1Ev>
    3f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f84:	48 83 c0 18          	add    $0x18,%rax
    3f88:	48 89 c7             	mov    %rax,%rdi
    3f8b:	e8 f4 50 00 00       	call   9084 <_ZN4neko8InstanceD1Ev>
    3f90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f94:	48 83 c0 10          	add    $0x10,%rax
    3f98:	48 89 c7             	mov    %rax,%rdi
    3f9b:	e8 98 f8 ff ff       	call   3838 <_ZN4neko7ContextD1Ev>
    3fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fa4:	48 89 c7             	mov    %rax,%rdi
    3fa7:	e8 9e f7 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    3fac:	90                   	nop
    3fad:	c9                   	leave
    3fae:	c3                   	ret
    3faf:	90                   	nop

0000000000003fb0 <_ZN4neko8RendererD0Ev>:
    3fb0:	55                   	push   %rbp
    3fb1:	48 89 e5             	mov    %rsp,%rbp
    3fb4:	48 83 ec 10          	sub    $0x10,%rsp
    3fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fc0:	48 89 c7             	mov    %rax,%rdi
    3fc3:	e8 6e ff ff ff       	call   3f36 <_ZN4neko8RendererD1Ev>
    3fc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fcc:	be 90 00 00 00       	mov    $0x90,%esi
    3fd1:	48 89 c7             	mov    %rax,%rdi
    3fd4:	e8 57 f2 ff ff       	call   3230 <_ZdlPvm@plt>
    3fd9:	c9                   	leave
    3fda:	c3                   	ret
    3fdb:	90                   	nop

0000000000003fdc <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE>:
#include <map>
#include <optional>

namespace neko {

LogicalDevice::LogicalDevice(const Instance &crInstance,
    3fdc:	55                   	push   %rbp
    3fdd:	48 89 e5             	mov    %rsp,%rbp
    3fe0:	41 54                	push   %r12
    3fe2:	53                   	push   %rbx
    3fe3:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    3fea:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    3ff1:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
    3ff8:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
                             const Surface &crSurface) {
    3fff:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4006:	48 89 c7             	mov    %rax,%rdi
    4009:	e8 22 f7 ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    400e:	48 8d 15 1b fc 00 00 	lea    0xfc1b(%rip),%rdx        # 13c30 <_ZTVN4neko13LogicalDeviceE+0x10>
    4015:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    401c:	48 89 10             	mov    %rdx,(%rax)
  VkPhysicalDevice selectedPhysicalDevice =
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    401f:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    4026:	48 89 c7             	mov    %rax,%rdi
    4029:	e8 f4 0d 00 00       	call   4e22 <_ZNK4neko8InstancedeEv>
    402e:	48 8b 10             	mov    (%rax),%rdx
    4031:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4035:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    403c:	48 89 ce             	mov    %rcx,%rsi
    403f:	48 89 c7             	mov    %rax,%rdi
    4042:	e8 cf 0b 00 00       	call   4c16 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T>
    4047:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    404b:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4052:	48 89 d6             	mov    %rdx,%rsi
    4055:	48 89 c7             	mov    %rax,%rdi
    4058:	e8 b1 04 00 00       	call   450e <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>
    405d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4061:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4065:	48 89 c7             	mov    %rax,%rdi
    4068:	e8 c7 0e 00 00       	call   4f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>

  uint32_t selectedQueueFamilyIndex =
      selectUniversalQueueFamily(selectedPhysicalDevice, *crSurface);
    406d:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    4074:	48 89 c7             	mov    %rax,%rdi
    4077:	e8 b8 0d 00 00       	call   4e34 <_ZNK4neko7SurfacedeEv>
    407c:	48 8b 10             	mov    (%rax),%rdx
    407f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4083:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    408a:	48 89 ce             	mov    %rcx,%rsi
    408d:	48 89 c7             	mov    %rax,%rdi
    4090:	e8 51 02 00 00       	call   42e6 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
    4095:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  uint32_t selectedQueueIndex = 0;
    4098:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)

  float queuePriority = 1.0f;
    409f:	f3 0f 10 05 95 7e 00 	movss  0x7e95(%rip),%xmm0        # bf3c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x18c>
    40a6:	00 
    40a7:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)

  /* Populate the selected queue family's creation info */
  VkDeviceQueueCreateInfo queueInfo{};
    40ac:	66 0f ef c0          	pxor   %xmm0,%xmm0
    40b0:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    40b7:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    40be:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    40c5:	ff 
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    40c6:	c7 85 50 fe ff ff 02 	movl   $0x2,-0x1b0(%rbp)
    40cd:	00 00 00 
  queueInfo.pNext = nullptr;
    40d0:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    40d7:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedQueueFamilyIndex;
    40db:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    40de:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  queueInfo.queueCount = 1;
    40e4:	c7 85 68 fe ff ff 01 	movl   $0x1,-0x198(%rbp)
    40eb:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    40ee:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    40f2:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)

  VkPhysicalDeviceFeatures deviceFeatures{};
    40f9:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    4100:	b8 00 00 00 00       	mov    $0x0,%eax
    4105:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    410a:	48 89 d7             	mov    %rdx,%rdi
    410d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    4110:	48 89 fa             	mov    %rdi,%rdx
    4113:	89 02                	mov    %eax,(%rdx)
    4115:	48 83 c2 04          	add    $0x4,%rdx
  //   deviceFeatures.samplerAnisotropy = VK_TRUE;
  //   deviceFeatures.sampleRateShading = VK_TRUE;

  /* Populate the logical device's creation info */
  VkDeviceCreateInfo deviceInfo{};
    4119:	66 0f ef c0          	pxor   %xmm0,%xmm0
    411d:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    4124:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    412b:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    4132:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    4139:	66 0f d6 85 c0 fe ff 	movq   %xmm0,-0x140(%rbp)
    4140:	ff 
  deviceInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    4141:	c7 85 80 fe ff ff 03 	movl   $0x3,-0x180(%rbp)
    4148:	00 00 00 
  deviceInfo.queueCreateInfoCount = 1;
    414b:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    4152:	00 00 00 
  deviceInfo.pQueueCreateInfos = &queueInfo;
    4155:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    415c:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  deviceInfo.pEnabledFeatures = &deviceFeatures;
    4163:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    416a:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)

  /* Create a logical device */
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    4171:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4178:	48 8d 50 08          	lea    0x8(%rax),%rdx
    417c:	48 8d b5 80 fe ff ff 	lea    -0x180(%rbp),%rsi
    4183:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4187:	48 89 d1             	mov    %rdx,%rcx
    418a:	ba 00 00 00 00       	mov    $0x0,%edx
    418f:	48 89 c7             	mov    %rax,%rdi
    4192:	e8 b9 f1 ff ff       	call   3350 <vkCreateDevice@plt>
                     &mLogicalDevice) != VK_SUCCESS) {
    4197:	85 c0                	test   %eax,%eax
    4199:	0f 95 c0             	setne  %al
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    419c:	84 c0                	test   %al,%al
    419e:	74 3b                	je     41db <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x1ff>
    throw std::runtime_error("Failed to create logical device.");
    41a0:	bf 10 00 00 00       	mov    $0x10,%edi
    41a5:	e8 26 ef ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    41aa:	48 89 c3             	mov    %rax,%rbx
    41ad:	48 8d 05 04 7c 00 00 	lea    0x7c04(%rip),%rax        # bdb8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    41b4:	48 89 c6             	mov    %rax,%rsi
    41b7:	48 89 df             	mov    %rbx,%rdi
    41ba:	e8 c1 ee ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    41bf:	48 8b 05 e2 fd 00 00 	mov    0xfde2(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    41c6:	48 89 c2             	mov    %rax,%rdx
    41c9:	48 8d 05 d0 fa 00 00 	lea    0xfad0(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    41d0:	48 89 c6             	mov    %rax,%rsi
    41d3:	48 89 df             	mov    %rbx,%rdi
    41d6:	e8 d5 f1 ff ff       	call   33b0 <__cxa_throw@plt>
  }

  /* Get handles */
  mPhysicalDevice = selectedPhysicalDevice;
    41db:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    41e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    41e6:	48 89 50 10          	mov    %rdx,0x10(%rax)

  VkQueue queueHandle;
  vkGetDeviceQueue(mLogicalDevice, selectedQueueFamilyIndex, selectedQueueIndex,
    41ea:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    41f1:	48 8b 40 08          	mov    0x8(%rax),%rax
    41f5:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    41f9:	8b 55 e0             	mov    -0x20(%rbp),%edx
    41fc:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    41ff:	48 89 c7             	mov    %rax,%rdi
    4202:	e8 19 f1 ff ff       	call   3320 <vkGetDeviceQueue@plt>
                   &queueHandle);
  mQueue = {selectedQueueFamilyIndex, selectedQueueIndex, queueHandle};
    4207:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    420b:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    4212:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    4215:	89 48 18             	mov    %ecx,0x18(%rax)
    4218:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    421f:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    4222:	89 48 1c             	mov    %ecx,0x1c(%rax)
    4225:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    422c:	48 89 50 20          	mov    %rdx,0x20(%rax)
}
    4230:	eb 3e                	jmp    4270 <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x294>
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    4232:	48 89 c3             	mov    %rax,%rbx
    4235:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4239:	48 89 c7             	mov    %rax,%rdi
    423c:	e8 f3 0c 00 00       	call   4f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4241:	eb 13                	jmp    4256 <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x27a>
    throw std::runtime_error("Failed to create logical device.");
    4243:	49 89 c4             	mov    %rax,%r12
    4246:	48 89 df             	mov    %rbx,%rdi
    4249:	e8 02 ef ff ff       	call   3150 <__cxa_free_exception@plt>
    424e:	4c 89 e3             	mov    %r12,%rbx
    4251:	eb 03                	jmp    4256 <_ZN4neko13LogicalDeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x27a>
}
    4253:	48 89 c3             	mov    %rax,%rbx
    4256:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    425d:	48 89 c7             	mov    %rax,%rdi
    4260:	e8 e5 f4 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    4265:	48 89 d8             	mov    %rbx,%rax
    4268:	48 89 c7             	mov    %rax,%rdi
    426b:	e8 60 f1 ff ff       	call   33d0 <_Unwind_Resume@plt>
    4270:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    4277:	5b                   	pop    %rbx
    4278:	41 5c                	pop    %r12
    427a:	5d                   	pop    %rbp
    427b:	c3                   	ret

000000000000427c <_ZN4neko13LogicalDeviceD1Ev>:

LogicalDevice::~LogicalDevice() { vkDestroyDevice(mLogicalDevice, nullptr); }
    427c:	55                   	push   %rbp
    427d:	48 89 e5             	mov    %rsp,%rbp
    4280:	48 83 ec 10          	sub    $0x10,%rsp
    4284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4288:	48 8d 15 a1 f9 00 00 	lea    0xf9a1(%rip),%rdx        # 13c30 <_ZTVN4neko13LogicalDeviceE+0x10>
    428f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4293:	48 89 10             	mov    %rdx,(%rax)
    4296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    429a:	48 8b 40 08          	mov    0x8(%rax),%rax
    429e:	be 00 00 00 00       	mov    $0x0,%esi
    42a3:	48 89 c7             	mov    %rax,%rdi
    42a6:	e8 05 ef ff ff       	call   31b0 <vkDestroyDevice@plt>
    42ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42af:	48 89 c7             	mov    %rax,%rdi
    42b2:	e8 93 f4 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    42b7:	90                   	nop
    42b8:	c9                   	leave
    42b9:	c3                   	ret

00000000000042ba <_ZN4neko13LogicalDeviceD0Ev>:
    42ba:	55                   	push   %rbp
    42bb:	48 89 e5             	mov    %rsp,%rbp
    42be:	48 83 ec 10          	sub    $0x10,%rsp
    42c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42ca:	48 89 c7             	mov    %rax,%rdi
    42cd:	e8 aa ff ff ff       	call   427c <_ZN4neko13LogicalDeviceD1Ev>
    42d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42d6:	be 28 00 00 00       	mov    $0x28,%esi
    42db:	48 89 c7             	mov    %rax,%rdi
    42de:	e8 4d ef ff ff       	call   3230 <_ZdlPvm@plt>
    42e3:	c9                   	leave
    42e4:	c3                   	ret
    42e5:	90                   	nop

00000000000042e6 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

uint32_t
LogicalDevice::selectUniversalQueueFamily(VkPhysicalDevice physicalDevice,
                                          VkSurfaceKHR surface) {
    42e6:	55                   	push   %rbp
    42e7:	48 89 e5             	mov    %rsp,%rbp
    42ea:	41 54                	push   %r12
    42ec:	53                   	push   %rbx
    42ed:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    42f1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    42f5:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    42f9:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  uint32_t queueFamilyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    4300:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    4304:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4308:	ba 00 00 00 00       	mov    $0x0,%edx
    430d:	48 89 ce             	mov    %rcx,%rsi
    4310:	48 89 c7             	mov    %rax,%rdi
    4313:	e8 48 ee ff ff       	call   3160 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           nullptr);
  if (queueFamilyCount == 0) {
    4318:	8b 45 d0             	mov    -0x30(%rbp),%eax
    431b:	85 c0                	test   %eax,%eax
    431d:	75 3b                	jne    435a <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("No queue family available.");
    431f:	bf 10 00 00 00       	mov    $0x10,%edi
    4324:	e8 a7 ed ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4329:	48 89 c3             	mov    %rax,%rbx
    432c:	48 8d 05 a6 7a 00 00 	lea    0x7aa6(%rip),%rax        # bdd9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29>
    4333:	48 89 c6             	mov    %rax,%rsi
    4336:	48 89 df             	mov    %rbx,%rdi
    4339:	e8 42 ed ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    433e:	48 8b 05 63 fc 00 00 	mov    0xfc63(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4345:	48 89 c2             	mov    %rax,%rdx
    4348:	48 8d 05 51 f9 00 00 	lea    0xf951(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    434f:	48 89 c6             	mov    %rax,%rsi
    4352:	48 89 df             	mov    %rbx,%rdi
    4355:	e8 56 f0 ff ff       	call   33b0 <__cxa_throw@plt>
  }

  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    435a:	8b 45 d0             	mov    -0x30(%rbp),%eax
    435d:	89 c3                	mov    %eax,%ebx
    435f:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4363:	48 89 c7             	mov    %rax,%rdi
    4366:	e8 0d 0c 00 00       	call   4f78 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    436b:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    436f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4373:	48 89 de             	mov    %rbx,%rsi
    4376:	48 89 c7             	mov    %rax,%rdi
    4379:	e8 32 0c 00 00       	call   4fb0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    437e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4382:	48 89 c7             	mov    %rax,%rdi
    4385:	e8 0a 0c 00 00       	call   4f94 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    438a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    438e:	48 89 c7             	mov    %rax,%rdi
    4391:	e8 d4 0c 00 00       	call   506a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    4396:	48 89 c2             	mov    %rax,%rdx
    4399:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    439d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    43a1:	48 89 ce             	mov    %rcx,%rsi
    43a4:	48 89 c7             	mov    %rax,%rdi
    43a7:	e8 b4 ed ff ff       	call   3160 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  uint32_t iQueueFamily = 0;
    43ac:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    43b3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    43b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    43bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43bf:	48 89 c7             	mov    %rax,%rdi
    43c2:	e8 c7 0c 00 00       	call   508e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    43c7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    43cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43cf:	48 89 c7             	mov    %rax,%rdi
    43d2:	e8 dd 0c 00 00       	call   50b4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    43d7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    43db:	eb 78                	jmp    4455 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16f>
    43dd:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    43e1:	48 89 c7             	mov    %rax,%rdi
    43e4:	e8 4f 0d 00 00       	call   5138 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    43e9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    43ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43f1:	8b 00                	mov    (%rax),%eax
    43f3:	83 e0 01             	and    $0x1,%eax
    43f6:	85 c0                	test   %eax,%eax
    43f8:	74 4f                	je     4449 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
        (queueFamily.queueFlags & VK_QUEUE_COMPUTE_BIT)) {
    43fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43fe:	8b 00                	mov    (%rax),%eax
    4400:	83 e0 02             	and    $0x2,%eax
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    4403:	85 c0                	test   %eax,%eax
    4405:	74 42                	je     4449 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
      VkBool32 presentSupport = false;
    4407:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
      vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, iQueueFamily,
    440e:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    4412:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    4419:	8b 75 ec             	mov    -0x14(%rbp),%esi
    441c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4420:	48 89 c7             	mov    %rax,%rdi
    4423:	e8 68 ee ff ff       	call   3290 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                           surface, &presentSupport);
      if (presentSupport) {
    4428:	8b 45 9c             	mov    -0x64(%rbp),%eax
    442b:	85 c0                	test   %eax,%eax
    442d:	74 16                	je     4445 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x15f>
        return iQueueFamily;
    442f:	8b 5d ec             	mov    -0x14(%rbp),%ebx
      }
      ++iQueueFamily;
    }
  }
  throw std::runtime_error("Failed to select a queue family.");
}
    4432:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4436:	48 89 c7             	mov    %rax,%rdi
    4439:	e8 e8 0b 00 00       	call   5026 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
        return iQueueFamily;
    443e:	89 d8                	mov    %ebx,%eax
    4440:	e9 c0 00 00 00       	jmp    4505 <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x21f>
      ++iQueueFamily;
    4445:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    4449:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    444d:	48 89 c7             	mov    %rax,%rdi
    4450:	e8 c3 0c 00 00       	call   5118 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    4455:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    4459:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    445d:	48 89 d6             	mov    %rdx,%rsi
    4460:	48 89 c7             	mov    %rax,%rdi
    4463:	e8 75 0c 00 00       	call   50dd <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4468:	84 c0                	test   %al,%al
    446a:	0f 85 6d ff ff ff    	jne    43dd <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf7>
  throw std::runtime_error("Failed to select a queue family.");
    4470:	bf 10 00 00 00       	mov    $0x10,%edi
    4475:	e8 56 ec ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    447a:	48 89 c3             	mov    %rax,%rbx
    447d:	48 8d 05 74 79 00 00 	lea    0x7974(%rip),%rax        # bdf8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    4484:	48 89 c6             	mov    %rax,%rsi
    4487:	48 89 df             	mov    %rbx,%rdi
    448a:	e8 f1 eb ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    448f:	48 8b 05 12 fb 00 00 	mov    0xfb12(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4496:	48 89 c2             	mov    %rax,%rdx
    4499:	48 8d 05 00 f8 00 00 	lea    0xf800(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    44a0:	48 89 c6             	mov    %rax,%rsi
    44a3:	48 89 df             	mov    %rbx,%rdi
    44a6:	e8 05 ef ff ff       	call   33b0 <__cxa_throw@plt>
    throw std::runtime_error("No queue family available.");
    44ab:	49 89 c4             	mov    %rax,%r12
    44ae:	48 89 df             	mov    %rbx,%rdi
    44b1:	e8 9a ec ff ff       	call   3150 <__cxa_free_exception@plt>
    44b6:	4c 89 e0             	mov    %r12,%rax
    44b9:	48 89 c7             	mov    %rax,%rdi
    44bc:	e8 0f ef ff ff       	call   33d0 <_Unwind_Resume@plt>
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    44c1:	48 89 c3             	mov    %rax,%rbx
    44c4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    44c8:	48 89 c7             	mov    %rax,%rdi
    44cb:	e8 c4 0a 00 00       	call   4f94 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    44d0:	48 89 d8             	mov    %rbx,%rax
    44d3:	48 89 c7             	mov    %rax,%rdi
    44d6:	e8 f5 ee ff ff       	call   33d0 <_Unwind_Resume@plt>
  throw std::runtime_error("Failed to select a queue family.");
    44db:	49 89 c4             	mov    %rax,%r12
    44de:	48 89 df             	mov    %rbx,%rdi
    44e1:	e8 6a ec ff ff       	call   3150 <__cxa_free_exception@plt>
    44e6:	4c 89 e3             	mov    %r12,%rbx
    44e9:	eb 03                	jmp    44ee <_ZN4neko13LogicalDevice26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x208>
}
    44eb:	48 89 c3             	mov    %rax,%rbx
    44ee:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    44f2:	48 89 c7             	mov    %rax,%rdi
    44f5:	e8 2c 0b 00 00       	call   5026 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    44fa:	48 89 d8             	mov    %rbx,%rax
    44fd:	48 89 c7             	mov    %rax,%rdi
    4500:	e8 cb ee ff ff       	call   33d0 <_Unwind_Resume@plt>
    4505:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    4509:	5b                   	pop    %rbx
    450a:	41 5c                	pop    %r12
    450c:	5d                   	pop    %rbp
    450d:	c3                   	ret

000000000000450e <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>:

VkPhysicalDevice LogicalDevice::selectPhysicalDevice(
    std::vector<VkPhysicalDevice> &&rrPhysicalDevices) {
    450e:	55                   	push   %rbp
    450f:	48 89 e5             	mov    %rsp,%rbp
    4512:	41 54                	push   %r12
    4514:	53                   	push   %rbx
    4515:	48 83 ec 20          	sub    $0x20,%rsp
    4519:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    451d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (rrPhysicalDevices.size() == 1) {
    4521:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4525:	48 89 c7             	mov    %rax,%rdi
    4528:	e8 1d 0c 00 00       	call   514a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    452d:	48 83 f8 01          	cmp    $0x1,%rax
    4531:	0f 94 c0             	sete   %al
    4534:	84 c0                	test   %al,%al
    4536:	74 19                	je     4551 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x43>
    return rrPhysicalDevices[0];
    4538:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    453c:	be 00 00 00 00       	mov    $0x0,%esi
    4541:	48 89 c7             	mov    %rax,%rdi
    4544:	e8 25 0c 00 00       	call   516e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    4549:	48 8b 00             	mov    (%rax),%rax
    454c:	e9 b8 00 00 00       	jmp    4609 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  }
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    4551:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4558:	00 
    4559:	eb 46                	jmp    45a1 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x93>
    if (checkRequirements(rrPhysicalDevices[iDevice])) {
    455b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    455f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4563:	48 89 d6             	mov    %rdx,%rsi
    4566:	48 89 c7             	mov    %rax,%rdi
    4569:	e8 00 0c 00 00       	call   516e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    456e:	48 8b 10             	mov    (%rax),%rdx
    4571:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4575:	48 89 d6             	mov    %rdx,%rsi
    4578:	48 89 c7             	mov    %rax,%rdi
    457b:	e8 92 00 00 00       	call   4612 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T>
    4580:	84 c0                	test   %al,%al
    4582:	74 18                	je     459c <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x8e>
      return rrPhysicalDevices[iDevice];
    4584:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4588:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    458c:	48 89 d6             	mov    %rdx,%rsi
    458f:	48 89 c7             	mov    %rax,%rdi
    4592:	e8 d7 0b 00 00       	call   516e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    4597:	48 8b 00             	mov    (%rax),%rax
    459a:	eb 6d                	jmp    4609 <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    459c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    45a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    45a5:	48 89 c7             	mov    %rax,%rdi
    45a8:	e8 9d 0b 00 00       	call   514a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    45ad:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    45b1:	0f 92 c0             	setb   %al
    45b4:	84 c0                	test   %al,%al
    45b6:	75 a3                	jne    455b <_ZN4neko13LogicalDevice20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x4d>
    }
  }
  throw std::runtime_error("No suitable physical device found.");
    45b8:	bf 10 00 00 00       	mov    $0x10,%edi
    45bd:	e8 0e eb ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    45c2:	48 89 c3             	mov    %rax,%rbx
    45c5:	48 8d 05 54 78 00 00 	lea    0x7854(%rip),%rax        # be20 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    45cc:	48 89 c6             	mov    %rax,%rsi
    45cf:	48 89 df             	mov    %rbx,%rdi
    45d2:	e8 a9 ea ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    45d7:	48 8b 05 ca f9 00 00 	mov    0xf9ca(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    45de:	48 89 c2             	mov    %rax,%rdx
    45e1:	48 8d 05 b8 f6 00 00 	lea    0xf6b8(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    45e8:	48 89 c6             	mov    %rax,%rsi
    45eb:	48 89 df             	mov    %rbx,%rdi
    45ee:	e8 bd ed ff ff       	call   33b0 <__cxa_throw@plt>
    45f3:	49 89 c4             	mov    %rax,%r12
    45f6:	48 89 df             	mov    %rbx,%rdi
    45f9:	e8 52 eb ff ff       	call   3150 <__cxa_free_exception@plt>
    45fe:	4c 89 e0             	mov    %r12,%rax
    4601:	48 89 c7             	mov    %rax,%rdi
    4604:	e8 c7 ed ff ff       	call   33d0 <_Unwind_Resume@plt>
}
    4609:	48 83 c4 20          	add    $0x20,%rsp
    460d:	5b                   	pop    %rbx
    460e:	41 5c                	pop    %r12
    4610:	5d                   	pop    %rbp
    4611:	c3                   	ret

0000000000004612 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkRequirements(VkPhysicalDevice physicalDevice) {
    4612:	55                   	push   %rbp
    4613:	48 89 e5             	mov    %rsp,%rbp
    4616:	48 83 ec 10          	sub    $0x10,%rsp
    461a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    461e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    4622:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    462a:	48 89 d6             	mov    %rdx,%rsi
    462d:	48 89 c7             	mov    %rax,%rdi
    4630:	e8 41 00 00 00       	call   4676 <_ZN4neko13LogicalDevice15checkPropertiesEP18VkPhysicalDevice_T>
    4635:	84 c0                	test   %al,%al
    4637:	74 35                	je     466e <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    4639:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    463d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4641:	48 89 d6             	mov    %rdx,%rsi
    4644:	48 89 c7             	mov    %rax,%rdi
    4647:	e8 6a 00 00 00       	call   46b6 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T>
    464c:	84 c0                	test   %al,%al
    464e:	74 1e                	je     466e <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
         checkFeatures(physicalDevice);
    4650:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4658:	48 89 d6             	mov    %rdx,%rsi
    465b:	48 89 c7             	mov    %rax,%rdi
    465e:	e8 73 05 00 00       	call   4bd6 <_ZN4neko13LogicalDevice13checkFeaturesEP18VkPhysicalDevice_T>
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    4663:	84 c0                	test   %al,%al
    4665:	74 07                	je     466e <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    4667:	b8 01 00 00 00       	mov    $0x1,%eax
    466c:	eb 05                	jmp    4673 <_ZN4neko13LogicalDevice17checkRequirementsEP18VkPhysicalDevice_T+0x61>
    466e:	b8 00 00 00 00       	mov    $0x0,%eax
}
    4673:	c9                   	leave
    4674:	c3                   	ret
    4675:	90                   	nop

0000000000004676 <_ZN4neko13LogicalDevice15checkPropertiesEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkProperties(VkPhysicalDevice physicalDevice) {
    4676:	55                   	push   %rbp
    4677:	48 89 e5             	mov    %rsp,%rbp
    467a:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    4681:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    4688:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    468f:	48 8d 95 c0 fc ff ff 	lea    -0x340(%rbp),%rdx
    4696:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
    469d:	48 89 d6             	mov    %rdx,%rsi
    46a0:	48 89 c7             	mov    %rax,%rdi
    46a3:	e8 e8 e9 ff ff       	call   3090 <vkGetPhysicalDeviceProperties@plt>
  return properties.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    46a8:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    46ae:	83 f8 02             	cmp    $0x2,%eax
    46b1:	0f 94 c0             	sete   %al
}
    46b4:	c9                   	leave
    46b5:	c3                   	ret

00000000000046b6 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkExtensions(VkPhysicalDevice physicalDevice) {
    46b6:	55                   	push   %rbp
    46b7:	48 89 e5             	mov    %rsp,%rbp
    46ba:	41 55                	push   %r13
    46bc:	41 54                	push   %r12
    46be:	53                   	push   %rbx
    46bf:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    46c6:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    46cd:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    46d4:	48 8d 05 68 77 00 00 	lea    0x7768(%rip),%rax        # be43 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    46db:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    46e2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    46e9:	49 89 c4             	mov    %rax,%r12
    46ec:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    46f2:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    46f9:	48 89 c7             	mov    %rax,%rdi
    46fc:	e8 8d 0a 00 00       	call   518e <_ZNSaIPKcEC1Ev>
    4701:	48 8d 95 2e ff ff ff 	lea    -0xd2(%rbp),%rdx
    4708:	4c 89 e6             	mov    %r12,%rsi
    470b:	4c 89 ef             	mov    %r13,%rdi
    470e:	4c 89 e1             	mov    %r12,%rcx
    4711:	4c 89 eb             	mov    %r13,%rbx
    4714:	48 89 df             	mov    %rbx,%rdi
    4717:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    471e:	48 89 d1             	mov    %rdx,%rcx
    4721:	48 89 fa             	mov    %rdi,%rdx
    4724:	48 89 c7             	mov    %rax,%rdi
    4727:	e8 9a 0a 00 00       	call   51c6 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    472c:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    4733:	48 89 c7             	mov    %rax,%rdi
    4736:	e8 6f 0a 00 00       	call   51aa <_ZNSaIPKcED1Ev>

  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    473b:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    4742:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    4749:	b9 00 00 00 00       	mov    $0x0,%ecx
    474e:	be 00 00 00 00       	mov    $0x0,%esi
    4753:	48 89 c7             	mov    %rax,%rdi
    4756:	e8 d5 eb ff ff       	call   3330 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount, nullptr) != VK_SUCCESS) {
    475b:	85 c0                	test   %eax,%eax
    475d:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    4760:	84 c0                	test   %al,%al
    4762:	74 3b                	je     479f <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0xe9>
    throw std::runtime_error("Failed to get device extension list.");
    4764:	bf 10 00 00 00       	mov    $0x10,%edi
    4769:	e8 62 e9 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    476e:	48 89 c3             	mov    %rax,%rbx
    4771:	48 8d 05 e0 76 00 00 	lea    0x76e0(%rip),%rax        # be58 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    4778:	48 89 c6             	mov    %rax,%rsi
    477b:	48 89 df             	mov    %rbx,%rdi
    477e:	e8 fd e8 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4783:	48 8b 05 1e f8 00 00 	mov    0xf81e(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    478a:	48 89 c2             	mov    %rax,%rdx
    478d:	48 8d 05 0c f5 00 00 	lea    0xf50c(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4794:	48 89 c6             	mov    %rax,%rsi
    4797:	48 89 df             	mov    %rbx,%rdi
    479a:	e8 11 ec ff ff       	call   33b0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    479f:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    47a5:	89 c3                	mov    %eax,%ebx
    47a7:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    47ae:	48 89 c7             	mov    %rax,%rdi
    47b1:	e8 dc 0a 00 00       	call   5292 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    47b6:	48 8d 95 2f ff ff ff 	lea    -0xd1(%rbp),%rdx
    47bd:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    47c4:	48 89 de             	mov    %rbx,%rsi
    47c7:	48 89 c7             	mov    %rax,%rdi
    47ca:	e8 fb 0a 00 00       	call   52ca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    47cf:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    47d6:	48 89 c7             	mov    %rax,%rdi
    47d9:	e8 d0 0a 00 00       	call   52ae <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    47de:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    47e5:	48 89 c7             	mov    %rax,%rdi
    47e8:	e8 97 0b 00 00       	call   5384 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    47ed:	48 89 c1             	mov    %rax,%rcx
    47f0:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    47f7:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    47fe:	be 00 00 00 00       	mov    $0x0,%esi
    4803:	48 89 c7             	mov    %rax,%rdi
    4806:	e8 25 eb ff ff       	call   3330 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount,
          availableExtensions.data()) != VK_SUCCESS) {
    480b:	85 c0                	test   %eax,%eax
    480d:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    4810:	84 c0                	test   %al,%al
    4812:	74 3b                	je     484f <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x199>
    throw std::runtime_error("Failed to get device extension list.");
    4814:	bf 10 00 00 00       	mov    $0x10,%edi
    4819:	e8 b2 e8 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    481e:	48 89 c3             	mov    %rax,%rbx
    4821:	48 8d 05 30 76 00 00 	lea    0x7630(%rip),%rax        # be58 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    4828:	48 89 c6             	mov    %rax,%rsi
    482b:	48 89 df             	mov    %rbx,%rdi
    482e:	e8 4d e8 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4833:	48 8b 05 6e f7 00 00 	mov    0xf76e(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    483a:	48 89 c2             	mov    %rax,%rdx
    483d:	48 8d 05 5c f4 00 00 	lea    0xf45c(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4844:	48 89 c6             	mov    %rax,%rsi
    4847:	48 89 df             	mov    %rbx,%rdi
    484a:	e8 61 eb ff ff       	call   33b0 <__cxa_throw@plt>
  }

  /* Check if all required extension are supported */
  std::map<std::string, uint32_t> helper;
    484f:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4856:	48 89 c7             	mov    %rax,%rdi
    4859:	e8 82 06 00 00       	call   4ee0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensions) {
    485e:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4865:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    4869:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    486d:	48 89 c7             	mov    %rax,%rdi
    4870:	e8 c1 0b 00 00       	call   5436 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    4875:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    487c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4880:	48 89 c7             	mov    %rax,%rdi
    4883:	e8 d4 0b 00 00       	call   545c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    4888:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    488f:	e9 8c 00 00 00       	jmp    4920 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x26a>
    4894:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    489b:	48 89 c7             	mov    %rax,%rdi
    489e:	e8 41 0c 00 00       	call   54e4 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    48a3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    helper[availableExtension.extensionName]++;
    48a7:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    48ae:	48 89 c7             	mov    %rax,%rdi
    48b1:	e8 2a eb ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    48b6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    48ba:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    48c1:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    48c8:	48 89 ce             	mov    %rcx,%rsi
    48cb:	48 89 c7             	mov    %rax,%rdi
    48ce:	e8 ad f3 ff ff       	call   3c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    48d3:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    48da:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    48e1:	48 89 d6             	mov    %rdx,%rsi
    48e4:	48 89 c7             	mov    %rax,%rdi
    48e7:	e8 0a 0c 00 00       	call   54f6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    48ec:	8b 10                	mov    (%rax),%edx
    48ee:	83 c2 01             	add    $0x1,%edx
    48f1:	89 10                	mov    %edx,(%rax)
    48f3:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    48fa:	48 89 c7             	mov    %rax,%rdi
    48fd:	e8 0e e8 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4902:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    4909:	48 89 c7             	mov    %rax,%rdi
    490c:	e8 8f e9 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensions) {
    4911:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    4918:	48 89 c7             	mov    %rax,%rdi
    491b:	e8 a0 0b 00 00       	call   54c0 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    4920:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    4927:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    492e:	48 89 d6             	mov    %rdx,%rsi
    4931:	48 89 c7             	mov    %rax,%rdi
    4934:	e8 4c 0b 00 00       	call   5485 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4939:	84 c0                	test   %al,%al
    493b:	0f 85 53 ff ff ff    	jne    4894 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x1de>
  }
  for (const auto &requiredExtension : requiredExtensions) {
    4941:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    4948:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    494c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4950:	48 89 c7             	mov    %rax,%rdi
    4953:	e8 a2 0c 00 00       	call   55fa <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    4958:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    495f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4963:	48 89 c7             	mov    %rax,%rdi
    4966:	e8 b5 0c 00 00       	call   5620 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    496b:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    4972:	e9 ed 00 00 00       	jmp    4a64 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x3ae>
    4977:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    497e:	48 89 c7             	mov    %rax,%rdi
    4981:	e8 1e 0d 00 00       	call   56a4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    4986:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    helper[requiredExtension]++;
    498a:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    498e:	48 89 c7             	mov    %rax,%rdi
    4991:	e8 4a ea ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    4996:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    499a:	48 8b 08             	mov    (%rax),%rcx
    499d:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    49a1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    49a8:	48 89 ce             	mov    %rcx,%rsi
    49ab:	48 89 c7             	mov    %rax,%rdi
    49ae:	e8 cd f2 ff ff       	call   3c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    49b3:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    49ba:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    49c1:	48 89 d6             	mov    %rdx,%rsi
    49c4:	48 89 c7             	mov    %rax,%rdi
    49c7:	e8 2a 0b 00 00       	call   54f6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    49cc:	8b 10                	mov    (%rax),%edx
    49ce:	83 c2 01             	add    $0x1,%edx
    49d1:	89 10                	mov    %edx,(%rax)
    49d3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    49da:	48 89 c7             	mov    %rax,%rdi
    49dd:	e8 2e e7 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    49e2:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    49e6:	48 89 c7             	mov    %rax,%rdi
    49e9:	e8 b2 e8 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    if (helper[requiredExtension] < 2) {
    49ee:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    49f2:	48 89 c7             	mov    %rax,%rdi
    49f5:	e8 e6 e9 ff ff       	call   33e0 <_ZNSaIcEC1Ev@plt>
    49fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    49fe:	48 8b 08             	mov    (%rax),%rcx
    4a01:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    4a05:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    4a09:	48 89 ce             	mov    %rcx,%rsi
    4a0c:	48 89 c7             	mov    %rax,%rdi
    4a0f:	e8 6c f2 ff ff       	call   3c80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4a14:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    4a18:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4a1f:	48 89 d6             	mov    %rdx,%rsi
    4a22:	48 89 c7             	mov    %rax,%rdi
    4a25:	e8 cc 0a 00 00       	call   54f6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    4a2a:	8b 00                	mov    (%rax),%eax
    4a2c:	83 f8 01             	cmp    $0x1,%eax
    4a2f:	0f 96 c3             	setbe  %bl
    4a32:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    4a36:	48 89 c7             	mov    %rax,%rdi
    4a39:	e8 d2 e6 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4a3e:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4a42:	48 89 c7             	mov    %rax,%rdi
    4a45:	e8 56 e8 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    4a4a:	84 db                	test   %bl,%bl
    4a4c:	74 07                	je     4a55 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x39f>
      return false;
    4a4e:	bb 00 00 00 00       	mov    $0x0,%ebx
    4a53:	eb 35                	jmp    4a8a <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x3d4>
  for (const auto &requiredExtension : requiredExtensions) {
    4a55:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    4a5c:	48 89 c7             	mov    %rax,%rdi
    4a5f:	e8 20 0c 00 00       	call   5684 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    4a64:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
    4a6b:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    4a72:	48 89 d6             	mov    %rdx,%rsi
    4a75:	48 89 c7             	mov    %rax,%rdi
    4a78:	e8 cc 0b 00 00       	call   5649 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    4a7d:	84 c0                	test   %al,%al
    4a7f:	0f 85 f2 fe ff ff    	jne    4977 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x2c1>
    }
  }
  return true;
    4a85:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    4a8a:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4a91:	48 89 c7             	mov    %rax,%rdi
    4a94:	e8 63 04 00 00       	call   4efc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    4a99:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4aa0:	48 89 c7             	mov    %rax,%rdi
    4aa3:	e8 98 08 00 00       	call   5340 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4aa8:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    4aaf:	48 89 c7             	mov    %rax,%rdi
    4ab2:	e8 97 07 00 00       	call   524e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    4ab7:	89 d8                	mov    %ebx,%eax
    4ab9:	e9 09 01 00 00       	jmp    4bc7 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x511>
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    4abe:	48 89 c3             	mov    %rax,%rbx
    4ac1:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    4ac8:	48 89 c7             	mov    %rax,%rdi
    4acb:	e8 da 06 00 00       	call   51aa <_ZNSaIPKcED1Ev>
    4ad0:	48 89 d8             	mov    %rbx,%rax
    4ad3:	48 89 c7             	mov    %rax,%rdi
    4ad6:	e8 f5 e8 ff ff       	call   33d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    4adb:	49 89 c4             	mov    %rax,%r12
    4ade:	48 89 df             	mov    %rbx,%rdi
    4ae1:	e8 6a e6 ff ff       	call   3150 <__cxa_free_exception@plt>
    4ae6:	4c 89 e3             	mov    %r12,%rbx
    4ae9:	e9 bf 00 00 00       	jmp    4bad <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    4aee:	48 89 c3             	mov    %rax,%rbx
    4af1:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    4af8:	48 89 c7             	mov    %rax,%rdi
    4afb:	e8 ae 07 00 00       	call   52ae <_ZNSaI21VkExtensionPropertiesED1Ev>
    4b00:	e9 a8 00 00 00       	jmp    4bad <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    throw std::runtime_error("Failed to get device extension list.");
    4b05:	49 89 c4             	mov    %rax,%r12
    4b08:	48 89 df             	mov    %rbx,%rdi
    4b0b:	e8 40 e6 ff ff       	call   3150 <__cxa_free_exception@plt>
    4b10:	4c 89 e3             	mov    %r12,%rbx
    4b13:	e9 81 00 00 00       	jmp    4b99 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    helper[availableExtension.extensionName]++;
    4b18:	48 89 c3             	mov    %rax,%rbx
    4b1b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    4b22:	48 89 c7             	mov    %rax,%rdi
    4b25:	e8 e6 e5 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4b2a:	eb 03                	jmp    4b2f <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x479>
    4b2c:	48 89 c3             	mov    %rax,%rbx
    4b2f:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    4b36:	48 89 c7             	mov    %rax,%rdi
    4b39:	e8 62 e7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    4b3e:	eb 45                	jmp    4b85 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    helper[requiredExtension]++;
    4b40:	48 89 c3             	mov    %rax,%rbx
    4b43:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    4b4a:	48 89 c7             	mov    %rax,%rdi
    4b4d:	e8 be e5 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4b52:	eb 03                	jmp    4b57 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4a1>
    4b54:	48 89 c3             	mov    %rax,%rbx
    4b57:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    4b5b:	48 89 c7             	mov    %rax,%rdi
    4b5e:	e8 3d e7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
    4b63:	eb 20                	jmp    4b85 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    if (helper[requiredExtension] < 2) {
    4b65:	48 89 c3             	mov    %rax,%rbx
    4b68:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    4b6c:	48 89 c7             	mov    %rax,%rdi
    4b6f:	e8 9c e5 ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4b74:	eb 03                	jmp    4b79 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4c3>
    4b76:	48 89 c3             	mov    %rax,%rbx
    4b79:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4b7d:	48 89 c7             	mov    %rax,%rdi
    4b80:	e8 1b e7 ff ff       	call   32a0 <_ZNSaIcED1Ev@plt>
}
    4b85:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4b8c:	48 89 c7             	mov    %rax,%rdi
    4b8f:	e8 68 03 00 00       	call   4efc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    4b94:	eb 03                	jmp    4b99 <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    4b96:	48 89 c3             	mov    %rax,%rbx
    4b99:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4ba0:	48 89 c7             	mov    %rax,%rdi
    4ba3:	e8 98 07 00 00       	call   5340 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4ba8:	eb 03                	jmp    4bad <_ZN4neko13LogicalDevice15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    4baa:	48 89 c3             	mov    %rax,%rbx
    4bad:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    4bb4:	48 89 c7             	mov    %rax,%rdi
    4bb7:	e8 92 06 00 00       	call   524e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    4bbc:	48 89 d8             	mov    %rbx,%rax
    4bbf:	48 89 c7             	mov    %rax,%rdi
    4bc2:	e8 09 e8 ff ff       	call   33d0 <_Unwind_Resume@plt>
    4bc7:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    4bce:	5b                   	pop    %rbx
    4bcf:	41 5c                	pop    %r12
    4bd1:	41 5d                	pop    %r13
    4bd3:	5d                   	pop    %rbp
    4bd4:	c3                   	ret
    4bd5:	90                   	nop

0000000000004bd6 <_ZN4neko13LogicalDevice13checkFeaturesEP18VkPhysicalDevice_T>:

bool LogicalDevice::checkFeatures(VkPhysicalDevice physicalDevice) {
    4bd6:	55                   	push   %rbp
    4bd7:	48 89 e5             	mov    %rsp,%rbp
    4bda:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    4be1:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    4be8:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  VkPhysicalDeviceFeatures supportedFeatures;
  vkGetPhysicalDeviceFeatures(physicalDevice, &supportedFeatures);
    4bef:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    4bf6:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    4bfd:	48 89 d6             	mov    %rdx,%rsi
    4c00:	48 89 c7             	mov    %rax,%rdi
    4c03:	e8 68 e5 ff ff       	call   3170 <vkGetPhysicalDeviceFeatures@plt>
  return supportedFeatures.samplerAnisotropy;
    4c08:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    4c0e:	85 c0                	test   %eax,%eax
    4c10:	0f 95 c0             	setne  %al
}
    4c13:	c9                   	leave
    4c14:	c3                   	ret
    4c15:	90                   	nop

0000000000004c16 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T>:

std::vector<VkPhysicalDevice>
LogicalDevice::getPhysicalDevices(VkInstance instance) {
    4c16:	55                   	push   %rbp
    4c17:	48 89 e5             	mov    %rsp,%rbp
    4c1a:	41 54                	push   %r12
    4c1c:	53                   	push   %rbx
    4c1d:	48 83 ec 30          	sub    $0x30,%rsp
    4c21:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c25:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c29:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t physicalDeviceCount;
  VkResult result;
  if (result =
          vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    4c2d:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    4c31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4c35:	ba 00 00 00 00       	mov    $0x0,%edx
    4c3a:	48 89 ce             	mov    %rcx,%rsi
    4c3d:	48 89 c7             	mov    %rax,%rdi
    4c40:	e8 ab e4 ff ff       	call   30f0 <vkEnumeratePhysicalDevices@plt>
    4c45:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result =
    4c48:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    4c4c:	74 41                	je     4c8f <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x79>
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    4c4e:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    4c52:	74 3b                	je     4c8f <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x79>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4c54:	bf 10 00 00 00       	mov    $0x10,%edi
    4c59:	e8 72 e4 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4c5e:	48 89 c3             	mov    %rax,%rbx
    4c61:	48 8d 05 18 72 00 00 	lea    0x7218(%rip),%rax        # be80 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    4c68:	48 89 c6             	mov    %rax,%rsi
    4c6b:	48 89 df             	mov    %rbx,%rdi
    4c6e:	e8 0d e4 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4c73:	48 8b 05 2e f3 00 00 	mov    0xf32e(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4c7a:	48 89 c2             	mov    %rax,%rdx
    4c7d:	48 8d 05 1c f0 00 00 	lea    0xf01c(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4c84:	48 89 c6             	mov    %rax,%rsi
    4c87:	48 89 df             	mov    %rbx,%rdi
    4c8a:	e8 21 e7 ff ff       	call   33b0 <__cxa_throw@plt>
  }
  if (physicalDeviceCount == 0) {
    4c8f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4c92:	85 c0                	test   %eax,%eax
    4c94:	75 3b                	jne    4cd1 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0xbb>
    throw std::runtime_error("Failed to find any physical device.");
    4c96:	bf 10 00 00 00       	mov    $0x10,%edi
    4c9b:	e8 30 e4 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4ca0:	48 89 c3             	mov    %rax,%rbx
    4ca3:	48 8d 05 fe 71 00 00 	lea    0x71fe(%rip),%rax        # bea8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xf8>
    4caa:	48 89 c6             	mov    %rax,%rsi
    4cad:	48 89 df             	mov    %rbx,%rdi
    4cb0:	e8 cb e3 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4cb5:	48 8b 05 ec f2 00 00 	mov    0xf2ec(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4cbc:	48 89 c2             	mov    %rax,%rdx
    4cbf:	48 8d 05 da ef 00 00 	lea    0xefda(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4cc6:	48 89 c6             	mov    %rax,%rsi
    4cc9:	48 89 df             	mov    %rbx,%rdi
    4ccc:	e8 df e6 ff ff       	call   33b0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4cd1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4cd4:	89 c3                	mov    %eax,%ebx
    4cd6:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    4cda:	48 89 c7             	mov    %rax,%rdi
    4cdd:	e8 d4 09 00 00       	call   56b6 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    4ce2:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    4ce6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cea:	48 89 de             	mov    %rbx,%rsi
    4ced:	48 89 c7             	mov    %rax,%rdi
    4cf0:	e8 f9 09 00 00       	call   56ee <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    4cf5:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    4cf9:	48 89 c7             	mov    %rax,%rdi
    4cfc:	e8 d1 09 00 00       	call   56d2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (result = vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    4d01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d05:	48 89 c7             	mov    %rax,%rdi
    4d08:	e8 57 0a 00 00       	call   5764 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    4d0d:	48 89 c2             	mov    %rax,%rdx
    4d10:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    4d14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d18:	48 89 ce             	mov    %rcx,%rsi
    4d1b:	48 89 c7             	mov    %rax,%rdi
    4d1e:	e8 cd e3 ff ff       	call   30f0 <vkEnumeratePhysicalDevices@plt>
    4d23:	89 45 ec             	mov    %eax,-0x14(%rbp)
    4d26:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    4d2a:	0f 84 b5 00 00 00    	je     4de5 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x1cf>
                                          physicalDevices.data());
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    4d30:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    4d34:	0f 84 ab 00 00 00    	je     4de5 <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x1cf>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4d3a:	bf 10 00 00 00       	mov    $0x10,%edi
    4d3f:	e8 8c e3 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    4d44:	48 89 c3             	mov    %rax,%rbx
    4d47:	48 8d 05 32 71 00 00 	lea    0x7132(%rip),%rax        # be80 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    4d4e:	48 89 c6             	mov    %rax,%rsi
    4d51:	48 89 df             	mov    %rbx,%rdi
    4d54:	e8 27 e3 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    4d59:	48 8b 05 48 f2 00 00 	mov    0xf248(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4d60:	48 89 c2             	mov    %rax,%rdx
    4d63:	48 8d 05 36 ef 00 00 	lea    0xef36(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4d6a:	48 89 c6             	mov    %rax,%rsi
    4d6d:	48 89 df             	mov    %rbx,%rdi
    4d70:	e8 3b e6 ff ff       	call   33b0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4d75:	49 89 c4             	mov    %rax,%r12
    4d78:	48 89 df             	mov    %rbx,%rdi
    4d7b:	e8 d0 e3 ff ff       	call   3150 <__cxa_free_exception@plt>
    4d80:	4c 89 e0             	mov    %r12,%rax
    4d83:	48 89 c7             	mov    %rax,%rdi
    4d86:	e8 45 e6 ff ff       	call   33d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find any physical device.");
    4d8b:	49 89 c4             	mov    %rax,%r12
    4d8e:	48 89 df             	mov    %rbx,%rdi
    4d91:	e8 ba e3 ff ff       	call   3150 <__cxa_free_exception@plt>
    4d96:	4c 89 e0             	mov    %r12,%rax
    4d99:	48 89 c7             	mov    %rax,%rdi
    4d9c:	e8 2f e6 ff ff       	call   33d0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4da1:	48 89 c3             	mov    %rax,%rbx
    4da4:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    4da8:	48 89 c7             	mov    %rax,%rdi
    4dab:	e8 22 09 00 00       	call   56d2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4db0:	48 89 d8             	mov    %rbx,%rax
    4db3:	48 89 c7             	mov    %rax,%rdi
    4db6:	e8 15 e6 ff ff       	call   33d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    4dbb:	49 89 c4             	mov    %rax,%r12
    4dbe:	48 89 df             	mov    %rbx,%rdi
    4dc1:	e8 8a e3 ff ff       	call   3150 <__cxa_free_exception@plt>
    4dc6:	4c 89 e3             	mov    %r12,%rbx
    4dc9:	eb 03                	jmp    4dce <_ZN4neko13LogicalDevice18getPhysicalDevicesEP12VkInstance_T+0x1b8>
  }
  return physicalDevices;
}
    4dcb:	48 89 c3             	mov    %rax,%rbx
    4dce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dd2:	48 89 c7             	mov    %rax,%rdi
    4dd5:	e8 5a 01 00 00       	call   4f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4dda:	48 89 d8             	mov    %rbx,%rax
    4ddd:	48 89 c7             	mov    %rax,%rdi
    4de0:	e8 eb e5 ff ff       	call   33d0 <_Unwind_Resume@plt>
  return physicalDevices;
    4de5:	90                   	nop
}
    4de6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dea:	48 83 c4 30          	add    $0x30,%rsp
    4dee:	5b                   	pop    %rbx
    4def:	41 5c                	pop    %r12
    4df1:	5d                   	pop    %rbp
    4df2:	c3                   	ret

0000000000004df3 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4df3:	55                   	push   %rbp
    4df4:	48 89 e5             	mov    %rsp,%rbp
    4df7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dfb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4dff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e03:	5d                   	pop    %rbp
    4e04:	c3                   	ret

0000000000004e05 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    4e05:	55                   	push   %rbp
    4e06:	48 89 e5             	mov    %rsp,%rbp
    4e09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e11:	90                   	nop
    4e12:	5d                   	pop    %rbp
    4e13:	c3                   	ret

0000000000004e14 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e14:	55                   	push   %rbp
    4e15:	48 89 e5             	mov    %rsp,%rbp
    4e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e20:	5d                   	pop    %rbp
    4e21:	c3                   	ret

0000000000004e22 <_ZNK4neko8InstancedeEv>:

  Instance(const Settings &settings, const Context &context);

  ~Instance();

  const VkInstance &operator*() const noexcept { return mInstance; }
    4e22:	55                   	push   %rbp
    4e23:	48 89 e5             	mov    %rsp,%rbp
    4e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e2e:	48 83 c0 10          	add    $0x10,%rax
    4e32:	5d                   	pop    %rbp
    4e33:	c3                   	ret

0000000000004e34 <_ZNK4neko7SurfacedeEv>:

  Surface(const Instance &crInstance, const Window &crWindow);

  ~Surface();

  const VkSurfaceKHR &operator*() const noexcept { return mSurface; }
    4e34:	55                   	push   %rbp
    4e35:	48 89 e5             	mov    %rsp,%rbp
    4e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e40:	48 83 c0 10          	add    $0x10,%rax
    4e44:	5d                   	pop    %rbp
    4e45:	c3                   	ret

0000000000004e46 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    4e46:	55                   	push   %rbp
    4e47:	48 89 e5             	mov    %rsp,%rbp
    4e4a:	48 83 ec 10          	sub    $0x10,%rsp
    4e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    4e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e56:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    4e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e60:	48 89 c7             	mov    %rax,%rdi
    4e63:	e8 04 00 00 00       	call   4e6c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    4e68:	90                   	nop
    4e69:	c9                   	leave
    4e6a:	c3                   	ret
    4e6b:	90                   	nop

0000000000004e6c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    4e6c:	55                   	push   %rbp
    4e6d:	48 89 e5             	mov    %rsp,%rbp
    4e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    4e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e78:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4e7f:	00 
      _M_header._M_left = &_M_header;
    4e80:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e88:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    4e8c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e94:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    4e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e9c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    4ea3:	00 
    }
    4ea4:	90                   	nop
    4ea5:	5d                   	pop    %rbp
    4ea6:	c3                   	ret
    4ea7:	90                   	nop

0000000000004ea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    4ea8:	55                   	push   %rbp
    4ea9:	48 89 e5             	mov    %rsp,%rbp
    4eac:	48 83 ec 10          	sub    $0x10,%rsp
    4eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb8:	48 89 c7             	mov    %rax,%rdi
    4ebb:	e8 20 05 00 00       	call   53e0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    4ec0:	90                   	nop
    4ec1:	c9                   	leave
    4ec2:	c3                   	ret
    4ec3:	90                   	nop

0000000000004ec4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    4ec4:	55                   	push   %rbp
    4ec5:	48 89 e5             	mov    %rsp,%rbp
    4ec8:	48 83 ec 10          	sub    $0x10,%rsp
    4ecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ed4:	48 89 c7             	mov    %rax,%rdi
    4ed7:	e8 cc 04 00 00       	call   53a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    4edc:	90                   	nop
    4edd:	c9                   	leave
    4ede:	c3                   	ret
    4edf:	90                   	nop

0000000000004ee0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    4ee0:	55                   	push   %rbp
    4ee1:	48 89 e5             	mov    %rsp,%rbp
    4ee4:	48 83 ec 10          	sub    $0x10,%rsp
    4ee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ef0:	48 89 c7             	mov    %rax,%rdi
    4ef3:	e8 cc ff ff ff       	call   4ec4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    4ef8:	90                   	nop
    4ef9:	c9                   	leave
    4efa:	c3                   	ret
    4efb:	90                   	nop

0000000000004efc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    4efc:	55                   	push   %rbp
    4efd:	48 89 e5             	mov    %rsp,%rbp
    4f00:	48 83 ec 10          	sub    $0x10,%rsp
    4f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f0c:	48 89 c7             	mov    %rax,%rdi
    4f0f:	e8 e8 04 00 00       	call   53fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    4f14:	90                   	nop
    4f15:	c9                   	leave
    4f16:	c3                   	ret
    4f17:	90                   	nop

0000000000004f18 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4f18:	55                   	push   %rbp
    4f19:	48 89 e5             	mov    %rsp,%rbp
    4f1c:	48 83 ec 10          	sub    $0x10,%rsp
    4f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f28:	48 89 c7             	mov    %rax,%rdi
    4f2b:	e8 a2 07 00 00       	call   56d2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4f30:	90                   	nop
    4f31:	c9                   	leave
    4f32:	c3                   	ret
    4f33:	90                   	nop

0000000000004f34 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4f34:	55                   	push   %rbp
    4f35:	48 89 e5             	mov    %rsp,%rbp
    4f38:	48 83 ec 10          	sub    $0x10,%rsp
    4f3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f44:	48 89 c7             	mov    %rax,%rdi
    4f47:	e8 8a 08 00 00       	call   57d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4f4c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f53:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5b:	48 8b 00             	mov    (%rax),%rax
    4f5e:	48 89 ce             	mov    %rcx,%rsi
    4f61:	48 89 c7             	mov    %rax,%rdi
    4f64:	e8 7b 08 00 00       	call   57e4 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f6d:	48 89 c7             	mov    %rax,%rdi
    4f70:	e8 13 08 00 00       	call   5788 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4f75:	90                   	nop
    4f76:	c9                   	leave
    4f77:	c3                   	ret

0000000000004f78 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4f78:	55                   	push   %rbp
    4f79:	48 89 e5             	mov    %rsp,%rbp
    4f7c:	48 83 ec 10          	sub    $0x10,%rsp
    4f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f88:	48 89 c7             	mov    %rax,%rdi
    4f8b:	e8 7e 08 00 00       	call   580e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    4f90:	90                   	nop
    4f91:	c9                   	leave
    4f92:	c3                   	ret
    4f93:	90                   	nop

0000000000004f94 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4f94:	55                   	push   %rbp
    4f95:	48 89 e5             	mov    %rsp,%rbp
    4f98:	48 83 ec 10          	sub    $0x10,%rsp
    4f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa4:	48 89 c7             	mov    %rax,%rdi
    4fa7:	e8 6e 08 00 00       	call   581a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    4fac:	90                   	nop
    4fad:	c9                   	leave
    4fae:	c3                   	ret
    4faf:	90                   	nop

0000000000004fb0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4fb0:	55                   	push   %rbp
    4fb1:	48 89 e5             	mov    %rsp,%rbp
    4fb4:	53                   	push   %rbx
    4fb5:	48 83 ec 28          	sub    $0x28,%rsp
    4fb9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4fbd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4fc1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4fc5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4fc9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4fcd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4fd1:	48 89 d6             	mov    %rdx,%rsi
    4fd4:	48 89 c7             	mov    %rax,%rdi
    4fd7:	e8 49 08 00 00       	call   5825 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4fdc:	48 89 c1             	mov    %rax,%rcx
    4fdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fe3:	48 89 c2             	mov    %rax,%rdx
    4fe6:	48 89 ce             	mov    %rcx,%rsi
    4fe9:	48 89 df             	mov    %rbx,%rdi
    4fec:	e8 b1 08 00 00       	call   58a2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4ff1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ff5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ff9:	48 89 d6             	mov    %rdx,%rsi
    4ffc:	48 89 c7             	mov    %rax,%rdi
    4fff:	e8 54 09 00 00       	call   5958 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    5004:	eb 1a                	jmp    5020 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    5006:	48 89 c3             	mov    %rax,%rbx
    5009:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    500d:	48 89 c7             	mov    %rax,%rdi
    5010:	e8 eb 08 00 00       	call   5900 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    5015:	48 89 d8             	mov    %rbx,%rax
    5018:	48 89 c7             	mov    %rax,%rdi
    501b:	e8 b0 e3 ff ff       	call   33d0 <_Unwind_Resume@plt>
    5020:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5024:	c9                   	leave
    5025:	c3                   	ret

0000000000005026 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5026:	55                   	push   %rbp
    5027:	48 89 e5             	mov    %rsp,%rbp
    502a:	48 83 ec 10          	sub    $0x10,%rsp
    502e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5036:	48 89 c7             	mov    %rax,%rdi
    5039:	e8 5a 09 00 00       	call   5998 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    503e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5045:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    504d:	48 8b 00             	mov    (%rax),%rax
    5050:	48 89 ce             	mov    %rcx,%rsi
    5053:	48 89 c7             	mov    %rax,%rdi
    5056:	e8 4b 09 00 00       	call   59a6 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    505b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    505f:	48 89 c7             	mov    %rax,%rdi
    5062:	e8 99 08 00 00       	call   5900 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    5067:	90                   	nop
    5068:	c9                   	leave
    5069:	c3                   	ret

000000000000506a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    506a:	55                   	push   %rbp
    506b:	48 89 e5             	mov    %rsp,%rbp
    506e:	48 83 ec 10          	sub    $0x10,%rsp
    5072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    507a:	48 8b 10             	mov    (%rax),%rdx
    507d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5081:	48 89 d6             	mov    %rdx,%rsi
    5084:	48 89 c7             	mov    %rax,%rdi
    5087:	e8 44 09 00 00       	call   59d0 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    508c:	c9                   	leave
    508d:	c3                   	ret

000000000000508e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    508e:	55                   	push   %rbp
    508f:	48 89 e5             	mov    %rsp,%rbp
    5092:	48 83 ec 20          	sub    $0x20,%rsp
    5096:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    509a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    509e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    50a2:	48 89 d6             	mov    %rdx,%rsi
    50a5:	48 89 c7             	mov    %rax,%rdi
    50a8:	e8 35 09 00 00       	call   59e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    50ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50b1:	c9                   	leave
    50b2:	c3                   	ret
    50b3:	90                   	nop

00000000000050b4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    50b4:	55                   	push   %rbp
    50b5:	48 89 e5             	mov    %rsp,%rbp
    50b8:	48 83 ec 20          	sub    $0x20,%rsp
    50bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    50c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50c4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    50c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    50cc:	48 89 d6             	mov    %rdx,%rsi
    50cf:	48 89 c7             	mov    %rax,%rdi
    50d2:	e8 0b 09 00 00       	call   59e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    50d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50db:	c9                   	leave
    50dc:	c3                   	ret

00000000000050dd <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    50dd:	55                   	push   %rbp
    50de:	48 89 e5             	mov    %rsp,%rbp
    50e1:	53                   	push   %rbx
    50e2:	48 83 ec 18          	sub    $0x18,%rsp
    50e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    50ea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    50ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50f2:	48 89 c7             	mov    %rax,%rdi
    50f5:	e8 06 09 00 00       	call   5a00 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    50fa:	48 8b 18             	mov    (%rax),%rbx
    50fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5101:	48 89 c7             	mov    %rax,%rdi
    5104:	e8 f7 08 00 00       	call   5a00 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5109:	48 8b 00             	mov    (%rax),%rax
    510c:	48 39 c3             	cmp    %rax,%rbx
    510f:	0f 95 c0             	setne  %al
    5112:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5116:	c9                   	leave
    5117:	c3                   	ret

0000000000005118 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    5118:	55                   	push   %rbp
    5119:	48 89 e5             	mov    %rsp,%rbp
    511c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    5120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5124:	48 8b 00             	mov    (%rax),%rax
    5127:	48 8d 50 18          	lea    0x18(%rax),%rdx
    512b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    512f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    5132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5136:	5d                   	pop    %rbp
    5137:	c3                   	ret

0000000000005138 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    5138:	55                   	push   %rbp
    5139:	48 89 e5             	mov    %rsp,%rbp
    513c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    5140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5144:	48 8b 00             	mov    (%rax),%rax
    5147:	5d                   	pop    %rbp
    5148:	c3                   	ret
    5149:	90                   	nop

000000000000514a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    514a:	55                   	push   %rbp
    514b:	48 89 e5             	mov    %rsp,%rbp
    514e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5152:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5156:	48 8b 50 08          	mov    0x8(%rax),%rdx
    515a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    515e:	48 8b 00             	mov    (%rax),%rax
    5161:	48 29 c2             	sub    %rax,%rdx
    5164:	48 89 d0             	mov    %rdx,%rax
    5167:	48 c1 f8 03          	sar    $0x3,%rax
    516b:	5d                   	pop    %rbp
    516c:	c3                   	ret
    516d:	90                   	nop

000000000000516e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    516e:	55                   	push   %rbp
    516f:	48 89 e5             	mov    %rsp,%rbp
    5172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5176:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    517a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    517e:	48 8b 00             	mov    (%rax),%rax
    5181:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5185:	48 c1 e2 03          	shl    $0x3,%rdx
    5189:	48 01 d0             	add    %rdx,%rax
      }
    518c:	5d                   	pop    %rbp
    518d:	c3                   	ret

000000000000518e <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    518e:	55                   	push   %rbp
    518f:	48 89 e5             	mov    %rsp,%rbp
    5192:	48 83 ec 10          	sub    $0x10,%rsp
    5196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    519a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    519e:	48 89 c7             	mov    %rax,%rdi
    51a1:	e8 68 08 00 00       	call   5a0e <_ZNSt15__new_allocatorIPKcEC1Ev>
    51a6:	90                   	nop
    51a7:	c9                   	leave
    51a8:	c3                   	ret
    51a9:	90                   	nop

00000000000051aa <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    51aa:	55                   	push   %rbp
    51ab:	48 89 e5             	mov    %rsp,%rbp
    51ae:	48 83 ec 10          	sub    $0x10,%rsp
    51b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ba:	48 89 c7             	mov    %rax,%rdi
    51bd:	e8 58 08 00 00       	call   5a1a <_ZNSt15__new_allocatorIPKcED1Ev>
    51c2:	90                   	nop
    51c3:	c9                   	leave
    51c4:	c3                   	ret
    51c5:	90                   	nop

00000000000051c6 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    51c6:	55                   	push   %rbp
    51c7:	48 89 e5             	mov    %rsp,%rbp
    51ca:	53                   	push   %rbx
    51cb:	48 83 ec 38          	sub    $0x38,%rsp
    51cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    51d3:	48 89 f0             	mov    %rsi,%rax
    51d6:	48 89 d6             	mov    %rdx,%rsi
    51d9:	48 89 f2             	mov    %rsi,%rdx
    51dc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    51e0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    51e4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    51e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51ec:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    51f0:	48 89 d6             	mov    %rdx,%rsi
    51f3:	48 89 c7             	mov    %rax,%rdi
    51f6:	e8 47 08 00 00       	call   5a42 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    51fb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    51ff:	48 89 c7             	mov    %rax,%rdi
    5202:	e8 c1 08 00 00       	call   5ac8 <_ZNKSt16initializer_listIPKcE3endEv>
    5207:	48 89 c3             	mov    %rax,%rbx
    520a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    520e:	48 89 c7             	mov    %rax,%rdi
    5211:	e8 a0 08 00 00       	call   5ab6 <_ZNKSt16initializer_listIPKcE5beginEv>
    5216:	48 89 c1             	mov    %rax,%rcx
    5219:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    521d:	48 89 da             	mov    %rbx,%rdx
    5220:	48 89 ce             	mov    %rcx,%rsi
    5223:	48 89 c7             	mov    %rax,%rdi
    5226:	e8 03 09 00 00       	call   5b2e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    522b:	eb 1a                	jmp    5247 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    522d:	48 89 c3             	mov    %rax,%rbx
    5230:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5234:	48 89 c7             	mov    %rax,%rdi
    5237:	e8 2c 08 00 00       	call   5a68 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    523c:	48 89 d8             	mov    %rbx,%rax
    523f:	48 89 c7             	mov    %rax,%rdi
    5242:	e8 89 e1 ff ff       	call   33d0 <_Unwind_Resume@plt>
    5247:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    524b:	c9                   	leave
    524c:	c3                   	ret
    524d:	90                   	nop

000000000000524e <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    524e:	55                   	push   %rbp
    524f:	48 89 e5             	mov    %rsp,%rbp
    5252:	48 83 ec 10          	sub    $0x10,%rsp
    5256:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    525a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    525e:	48 89 c7             	mov    %rax,%rdi
    5261:	e8 78 09 00 00       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5266:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    526d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5275:	48 8b 00             	mov    (%rax),%rax
    5278:	48 89 ce             	mov    %rcx,%rsi
    527b:	48 89 c7             	mov    %rax,%rdi
    527e:	e8 69 09 00 00       	call   5bec <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    5283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5287:	48 89 c7             	mov    %rax,%rdi
    528a:	e8 d9 07 00 00       	call   5a68 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    528f:	90                   	nop
    5290:	c9                   	leave
    5291:	c3                   	ret

0000000000005292 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5292:	55                   	push   %rbp
    5293:	48 89 e5             	mov    %rsp,%rbp
    5296:	48 83 ec 10          	sub    $0x10,%rsp
    529a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    529e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a2:	48 89 c7             	mov    %rax,%rdi
    52a5:	e8 6c 09 00 00       	call   5c16 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    52aa:	90                   	nop
    52ab:	c9                   	leave
    52ac:	c3                   	ret
    52ad:	90                   	nop

00000000000052ae <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    52ae:	55                   	push   %rbp
    52af:	48 89 e5             	mov    %rsp,%rbp
    52b2:	48 83 ec 10          	sub    $0x10,%rsp
    52b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52be:	48 89 c7             	mov    %rax,%rdi
    52c1:	e8 5c 09 00 00       	call   5c22 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    52c6:	90                   	nop
    52c7:	c9                   	leave
    52c8:	c3                   	ret
    52c9:	90                   	nop

00000000000052ca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    52ca:	55                   	push   %rbp
    52cb:	48 89 e5             	mov    %rsp,%rbp
    52ce:	53                   	push   %rbx
    52cf:	48 83 ec 28          	sub    $0x28,%rsp
    52d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    52d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    52db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    52df:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    52e3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    52e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    52eb:	48 89 d6             	mov    %rdx,%rsi
    52ee:	48 89 c7             	mov    %rax,%rdi
    52f1:	e8 37 09 00 00       	call   5c2d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    52f6:	48 89 c1             	mov    %rax,%rcx
    52f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    52fd:	48 89 c2             	mov    %rax,%rdx
    5300:	48 89 ce             	mov    %rcx,%rsi
    5303:	48 89 df             	mov    %rbx,%rdi
    5306:	e8 9f 09 00 00       	call   5caa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    530b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    530f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5313:	48 89 d6             	mov    %rdx,%rsi
    5316:	48 89 c7             	mov    %rax,%rdi
    5319:	e8 42 0a 00 00       	call   5d60 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    531e:	eb 1a                	jmp    533a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    5320:	48 89 c3             	mov    %rax,%rbx
    5323:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5327:	48 89 c7             	mov    %rax,%rdi
    532a:	e8 d9 09 00 00       	call   5d08 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    532f:	48 89 d8             	mov    %rbx,%rax
    5332:	48 89 c7             	mov    %rax,%rdi
    5335:	e8 96 e0 ff ff       	call   33d0 <_Unwind_Resume@plt>
    533a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    533e:	c9                   	leave
    533f:	c3                   	ret

0000000000005340 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5340:	55                   	push   %rbp
    5341:	48 89 e5             	mov    %rsp,%rbp
    5344:	48 83 ec 10          	sub    $0x10,%rsp
    5348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    534c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5350:	48 89 c7             	mov    %rax,%rdi
    5353:	e8 48 0a 00 00       	call   5da0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5358:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    535b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    535f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5367:	48 8b 00             	mov    (%rax),%rax
    536a:	48 89 ce             	mov    %rcx,%rsi
    536d:	48 89 c7             	mov    %rax,%rdi
    5370:	e8 39 0a 00 00       	call   5dae <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    5375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5379:	48 89 c7             	mov    %rax,%rdi
    537c:	e8 87 09 00 00       	call   5d08 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    5381:	90                   	nop
    5382:	c9                   	leave
    5383:	c3                   	ret

0000000000005384 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5384:	55                   	push   %rbp
    5385:	48 89 e5             	mov    %rsp,%rbp
    5388:	48 83 ec 10          	sub    $0x10,%rsp
    538c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5394:	48 8b 10             	mov    (%rax),%rdx
    5397:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    539b:	48 89 d6             	mov    %rdx,%rsi
    539e:	48 89 c7             	mov    %rax,%rdi
    53a1:	e8 32 0a 00 00       	call   5dd8 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    53a6:	c9                   	leave
    53a7:	c3                   	ret

00000000000053a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    53a8:	55                   	push   %rbp
    53a9:	48 89 e5             	mov    %rsp,%rbp
    53ac:	48 83 ec 10          	sub    $0x10,%rsp
    53b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    53b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53b8:	48 89 c7             	mov    %rax,%rdi
    53bb:	e8 2a 0a 00 00       	call   5dea <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    53c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53c4:	48 89 c7             	mov    %rax,%rdi
    53c7:	e8 3a 0a 00 00       	call   5e06 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    53cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d0:	48 83 c0 08          	add    $0x8,%rax
    53d4:	48 89 c7             	mov    %rax,%rdi
    53d7:	e8 6a fa ff ff       	call   4e46 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    53dc:	90                   	nop
    53dd:	c9                   	leave
    53de:	c3                   	ret
    53df:	90                   	nop

00000000000053e0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    53e0:	55                   	push   %rbp
    53e1:	48 89 e5             	mov    %rsp,%rbp
    53e4:	48 83 ec 10          	sub    $0x10,%rsp
    53e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f0:	48 89 c7             	mov    %rax,%rdi
    53f3:	e8 1a 0a 00 00       	call   5e12 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    53f8:	90                   	nop
    53f9:	c9                   	leave
    53fa:	c3                   	ret
    53fb:	90                   	nop

00000000000053fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    53fc:	55                   	push   %rbp
    53fd:	48 89 e5             	mov    %rsp,%rbp
    5400:	48 83 ec 10          	sub    $0x10,%rsp
    5404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    5408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    540c:	48 89 c7             	mov    %rax,%rdi
    540f:	e8 70 0a 00 00       	call   5e84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    5414:	48 89 c2             	mov    %rax,%rdx
    5417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    541b:	48 89 d6             	mov    %rdx,%rsi
    541e:	48 89 c7             	mov    %rax,%rdi
    5421:	e8 f8 09 00 00       	call   5e1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    5426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    542a:	48 89 c7             	mov    %rax,%rdi
    542d:	e8 76 fa ff ff       	call   4ea8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    5432:	90                   	nop
    5433:	c9                   	leave
    5434:	c3                   	ret
    5435:	90                   	nop

0000000000005436 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    5436:	55                   	push   %rbp
    5437:	48 89 e5             	mov    %rsp,%rbp
    543a:	48 83 ec 20          	sub    $0x20,%rsp
    543e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    5442:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5446:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    544a:	48 89 d6             	mov    %rdx,%rsi
    544d:	48 89 c7             	mov    %rax,%rdi
    5450:	e8 49 0a 00 00       	call   5e9e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5459:	c9                   	leave
    545a:	c3                   	ret
    545b:	90                   	nop

000000000000545c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    545c:	55                   	push   %rbp
    545d:	48 89 e5             	mov    %rsp,%rbp
    5460:	48 83 ec 20          	sub    $0x20,%rsp
    5464:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    5468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    546c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5470:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5474:	48 89 d6             	mov    %rdx,%rsi
    5477:	48 89 c7             	mov    %rax,%rdi
    547a:	e8 1f 0a 00 00       	call   5e9e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    547f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5483:	c9                   	leave
    5484:	c3                   	ret

0000000000005485 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5485:	55                   	push   %rbp
    5486:	48 89 e5             	mov    %rsp,%rbp
    5489:	53                   	push   %rbx
    548a:	48 83 ec 18          	sub    $0x18,%rsp
    548e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5492:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    5496:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    549a:	48 89 c7             	mov    %rax,%rdi
    549d:	e8 1a 0a 00 00       	call   5ebc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    54a2:	48 8b 18             	mov    (%rax),%rbx
    54a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    54a9:	48 89 c7             	mov    %rax,%rdi
    54ac:	e8 0b 0a 00 00       	call   5ebc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    54b1:	48 8b 00             	mov    (%rax),%rax
    54b4:	48 39 c3             	cmp    %rax,%rbx
    54b7:	0f 95 c0             	setne  %al
    54ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    54be:	c9                   	leave
    54bf:	c3                   	ret

00000000000054c0 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    54c0:	55                   	push   %rbp
    54c1:	48 89 e5             	mov    %rsp,%rbp
    54c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    54c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54cc:	48 8b 00             	mov    (%rax),%rax
    54cf:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    54d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54da:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    54dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    54e1:	5d                   	pop    %rbp
    54e2:	c3                   	ret
    54e3:	90                   	nop

00000000000054e4 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    54e4:	55                   	push   %rbp
    54e5:	48 89 e5             	mov    %rsp,%rbp
    54e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    54ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f0:	48 8b 00             	mov    (%rax),%rax
    54f3:	5d                   	pop    %rbp
    54f4:	c3                   	ret
    54f5:	90                   	nop

00000000000054f6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    54f6:	55                   	push   %rbp
    54f7:	48 89 e5             	mov    %rsp,%rbp
    54fa:	53                   	push   %rbx
    54fb:	48 83 ec 48          	sub    $0x48,%rsp
    54ff:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5503:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    5507:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    550b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    550f:	48 89 d6             	mov    %rdx,%rsi
    5512:	48 89 c7             	mov    %rax,%rdi
    5515:	e8 b0 09 00 00       	call   5eca <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    551a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    551e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5522:	48 89 c7             	mov    %rax,%rdi
    5525:	e8 c6 09 00 00       	call   5ef0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    552a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    552e:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    5532:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5536:	48 89 d6             	mov    %rdx,%rsi
    5539:	48 89 c7             	mov    %rax,%rdi
    553c:	e8 c9 09 00 00       	call   5f0a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    5541:	84 c0                	test   %al,%al
    5543:	75 32                	jne    5577 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    5545:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5549:	48 89 c7             	mov    %rax,%rdi
    554c:	e8 db 09 00 00       	call   5f2c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    5551:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5555:	48 89 c7             	mov    %rax,%rdi
    5558:	e8 eb 09 00 00       	call   5f48 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    555d:	48 89 c2             	mov    %rax,%rdx
    5560:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    5564:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    5568:	48 89 ce             	mov    %rcx,%rsi
    556b:	48 89 c7             	mov    %rax,%rdi
    556e:	e8 f3 09 00 00       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    5573:	84 c0                	test   %al,%al
    5575:	74 07                	je     557e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    5577:	b8 01 00 00 00       	mov    $0x1,%eax
    557c:	eb 05                	jmp    5583 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    557e:	b8 00 00 00 00       	mov    $0x0,%eax
    5583:	84 c0                	test   %al,%al
    5585:	74 5d                	je     55e4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    5587:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    558b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    558f:	48 89 c7             	mov    %rax,%rdi
    5592:	e8 f8 09 00 00       	call   5f8f <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    5597:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    559a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    559e:	48 89 d6             	mov    %rdx,%rsi
    55a1:	48 89 c7             	mov    %rax,%rdi
    55a4:	e8 f4 09 00 00       	call   5f9d <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    55a9:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    55ad:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    55b1:	48 89 d6             	mov    %rdx,%rsi
    55b4:	48 89 c7             	mov    %rax,%rdi
    55b7:	e8 16 0a 00 00       	call   5fd2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    55bc:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    55c0:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    55c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55c8:	49 89 c8             	mov    %rcx,%r8
    55cb:	48 89 d1             	mov    %rdx,%rcx
    55ce:	48 8d 15 6b 69 00 00 	lea    0x696b(%rip),%rdx        # bf40 <_ZSt19piecewise_construct>
    55d5:	48 89 c6             	mov    %rax,%rsi
    55d8:	48 89 df             	mov    %rbx,%rdi
    55db:	e8 10 0a 00 00       	call   5ff0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    55e0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    55e4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    55e8:	48 89 c7             	mov    %rax,%rdi
    55eb:	e8 58 09 00 00       	call   5f48 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    55f0:	48 83 c0 20          	add    $0x20,%rax
      }
    55f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55f8:	c9                   	leave
    55f9:	c3                   	ret

00000000000055fa <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    55fa:	55                   	push   %rbp
    55fb:	48 89 e5             	mov    %rsp,%rbp
    55fe:	48 83 ec 20          	sub    $0x20,%rsp
    5602:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    5606:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    560a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    560e:	48 89 d6             	mov    %rdx,%rsi
    5611:	48 89 c7             	mov    %rax,%rdi
    5614:	e8 d3 0a 00 00       	call   60ec <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    5619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    561d:	c9                   	leave
    561e:	c3                   	ret
    561f:	90                   	nop

0000000000005620 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    5620:	55                   	push   %rbp
    5621:	48 89 e5             	mov    %rsp,%rbp
    5624:	48 83 ec 20          	sub    $0x20,%rsp
    5628:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    562c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5630:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5634:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5638:	48 89 d6             	mov    %rdx,%rsi
    563b:	48 89 c7             	mov    %rax,%rdi
    563e:	e8 a9 0a 00 00       	call   60ec <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    5643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5647:	c9                   	leave
    5648:	c3                   	ret

0000000000005649 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5649:	55                   	push   %rbp
    564a:	48 89 e5             	mov    %rsp,%rbp
    564d:	53                   	push   %rbx
    564e:	48 83 ec 18          	sub    $0x18,%rsp
    5652:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5656:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    565a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    565e:	48 89 c7             	mov    %rax,%rdi
    5661:	e8 a4 0a 00 00       	call   610a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    5666:	48 8b 18             	mov    (%rax),%rbx
    5669:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    566d:	48 89 c7             	mov    %rax,%rdi
    5670:	e8 95 0a 00 00       	call   610a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    5675:	48 8b 00             	mov    (%rax),%rax
    5678:	48 39 c3             	cmp    %rax,%rbx
    567b:	0f 95 c0             	setne  %al
    567e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5682:	c9                   	leave
    5683:	c3                   	ret

0000000000005684 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    5684:	55                   	push   %rbp
    5685:	48 89 e5             	mov    %rsp,%rbp
    5688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    568c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5690:	48 8b 00             	mov    (%rax),%rax
    5693:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5697:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    569b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    569e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    56a2:	5d                   	pop    %rbp
    56a3:	c3                   	ret

00000000000056a4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    56a4:	55                   	push   %rbp
    56a5:	48 89 e5             	mov    %rsp,%rbp
    56a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    56ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56b0:	48 8b 00             	mov    (%rax),%rax
    56b3:	5d                   	pop    %rbp
    56b4:	c3                   	ret
    56b5:	90                   	nop

00000000000056b6 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    56b6:	55                   	push   %rbp
    56b7:	48 89 e5             	mov    %rsp,%rbp
    56ba:	48 83 ec 10          	sub    $0x10,%rsp
    56be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56c6:	48 89 c7             	mov    %rax,%rdi
    56c9:	e8 4a 0a 00 00       	call   6118 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    56ce:	90                   	nop
    56cf:	c9                   	leave
    56d0:	c3                   	ret
    56d1:	90                   	nop

00000000000056d2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    56d2:	55                   	push   %rbp
    56d3:	48 89 e5             	mov    %rsp,%rbp
    56d6:	48 83 ec 10          	sub    $0x10,%rsp
    56da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56e2:	48 89 c7             	mov    %rax,%rdi
    56e5:	e8 3a 0a 00 00       	call   6124 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    56ea:	90                   	nop
    56eb:	c9                   	leave
    56ec:	c3                   	ret
    56ed:	90                   	nop

00000000000056ee <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    56ee:	55                   	push   %rbp
    56ef:	48 89 e5             	mov    %rsp,%rbp
    56f2:	53                   	push   %rbx
    56f3:	48 83 ec 28          	sub    $0x28,%rsp
    56f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    56fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    56ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5703:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5707:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    570b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    570f:	48 89 d6             	mov    %rdx,%rsi
    5712:	48 89 c7             	mov    %rax,%rdi
    5715:	e8 15 0a 00 00       	call   612f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    571a:	48 89 c1             	mov    %rax,%rcx
    571d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5721:	48 89 c2             	mov    %rax,%rdx
    5724:	48 89 ce             	mov    %rcx,%rsi
    5727:	48 89 df             	mov    %rbx,%rdi
    572a:	e8 61 0a 00 00       	call   6190 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    572f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5733:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5737:	48 89 d6             	mov    %rdx,%rsi
    573a:	48 89 c7             	mov    %rax,%rdi
    573d:	e8 ac 0a 00 00       	call   61ee <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    5742:	eb 1a                	jmp    575e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    5744:	48 89 c3             	mov    %rax,%rbx
    5747:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    574b:	48 89 c7             	mov    %rax,%rdi
    574e:	e8 35 00 00 00       	call   5788 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5753:	48 89 d8             	mov    %rbx,%rax
    5756:	48 89 c7             	mov    %rax,%rdi
    5759:	e8 72 dc ff ff       	call   33d0 <_Unwind_Resume@plt>
    575e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5762:	c9                   	leave
    5763:	c3                   	ret

0000000000005764 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5764:	55                   	push   %rbp
    5765:	48 89 e5             	mov    %rsp,%rbp
    5768:	48 83 ec 10          	sub    $0x10,%rsp
    576c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5774:	48 8b 10             	mov    (%rax),%rdx
    5777:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    577b:	48 89 d6             	mov    %rdx,%rsi
    577e:	48 89 c7             	mov    %rax,%rdi
    5781:	e8 a8 0a 00 00       	call   622e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    5786:	c9                   	leave
    5787:	c3                   	ret

0000000000005788 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5788:	55                   	push   %rbp
    5789:	48 89 e5             	mov    %rsp,%rbp
    578c:	48 83 ec 10          	sub    $0x10,%rsp
    5790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5798:	48 8b 50 10          	mov    0x10(%rax),%rdx
    579c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57a0:	48 8b 00             	mov    (%rax),%rax
    57a3:	48 29 c2             	sub    %rax,%rdx
    57a6:	48 89 d0             	mov    %rdx,%rax
    57a9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    57ad:	48 89 c2             	mov    %rax,%rdx
    57b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57b4:	48 8b 08             	mov    (%rax),%rcx
    57b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57bb:	48 89 ce             	mov    %rcx,%rsi
    57be:	48 89 c7             	mov    %rax,%rdi
    57c1:	e8 a0 0a 00 00       	call   6266 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    57c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ca:	48 89 c7             	mov    %rax,%rdi
    57cd:	e8 46 f7 ff ff       	call   4f18 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    57d2:	90                   	nop
    57d3:	c9                   	leave
    57d4:	c3                   	ret
    57d5:	90                   	nop

00000000000057d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    57d6:	55                   	push   %rbp
    57d7:	48 89 e5             	mov    %rsp,%rbp
    57da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    57de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57e2:	5d                   	pop    %rbp
    57e3:	c3                   	ret

00000000000057e4 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    57e4:	55                   	push   %rbp
    57e5:	48 89 e5             	mov    %rsp,%rbp
    57e8:	48 83 ec 20          	sub    $0x20,%rsp
    57ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    57f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    57fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5800:	48 89 d6             	mov    %rdx,%rsi
    5803:	48 89 c7             	mov    %rax,%rdi
    5806:	e8 90 0a 00 00       	call   629b <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    580b:	90                   	nop
    580c:	c9                   	leave
    580d:	c3                   	ret

000000000000580e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    580e:	55                   	push   %rbp
    580f:	48 89 e5             	mov    %rsp,%rbp
    5812:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5816:	90                   	nop
    5817:	5d                   	pop    %rbp
    5818:	c3                   	ret
    5819:	90                   	nop

000000000000581a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    581a:	55                   	push   %rbp
    581b:	48 89 e5             	mov    %rsp,%rbp
    581e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5822:	90                   	nop
    5823:	5d                   	pop    %rbp
    5824:	c3                   	ret

0000000000005825 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5825:	55                   	push   %rbp
    5826:	48 89 e5             	mov    %rsp,%rbp
    5829:	53                   	push   %rbx
    582a:	48 83 ec 28          	sub    $0x28,%rsp
    582e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5832:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5836:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    583a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    583e:	48 89 d6             	mov    %rdx,%rsi
    5841:	48 89 c7             	mov    %rax,%rdi
    5844:	e8 bb 0a 00 00       	call   6304 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    5849:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    584d:	48 89 c7             	mov    %rax,%rdi
    5850:	e8 6c 0a 00 00       	call   62c1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5855:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5859:	0f 92 c3             	setb   %bl
    585c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5860:	48 89 c7             	mov    %rax,%rdi
    5863:	e8 2c f7 ff ff       	call   4f94 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    5868:	84 db                	test   %bl,%bl
    586a:	74 0f                	je     587b <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    586c:	48 8d 05 95 66 00 00 	lea    0x6695(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    5873:	48 89 c7             	mov    %rax,%rdi
    5876:	e8 65 d8 ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    587b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    587f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5883:	c9                   	leave
    5884:	c3                   	ret
    5885:	90                   	nop

0000000000005886 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5886:	55                   	push   %rbp
    5887:	48 89 e5             	mov    %rsp,%rbp
    588a:	48 83 ec 10          	sub    $0x10,%rsp
    588e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5896:	48 89 c7             	mov    %rax,%rdi
    5899:	e8 f6 f6 ff ff       	call   4f94 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    589e:	90                   	nop
    589f:	c9                   	leave
    58a0:	c3                   	ret
    58a1:	90                   	nop

00000000000058a2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    58a2:	55                   	push   %rbp
    58a3:	48 89 e5             	mov    %rsp,%rbp
    58a6:	53                   	push   %rbx
    58a7:	48 83 ec 28          	sub    $0x28,%rsp
    58ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    58af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    58b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    58b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58bb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    58bf:	48 89 d6             	mov    %rdx,%rsi
    58c2:	48 89 c7             	mov    %rax,%rdi
    58c5:	e8 60 0a 00 00       	call   632a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    58ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    58ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58d2:	48 89 d6             	mov    %rdx,%rsi
    58d5:	48 89 c7             	mov    %rax,%rdi
    58d8:	e8 7f 0a 00 00       	call   635c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    58dd:	eb 1a                	jmp    58f9 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    58df:	48 89 c3             	mov    %rax,%rbx
    58e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58e6:	48 89 c7             	mov    %rax,%rdi
    58e9:	e8 98 ff ff ff       	call   5886 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    58ee:	48 89 d8             	mov    %rbx,%rax
    58f1:	48 89 c7             	mov    %rax,%rdi
    58f4:	e8 d7 da ff ff       	call   33d0 <_Unwind_Resume@plt>
    58f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    58fd:	c9                   	leave
    58fe:	c3                   	ret
    58ff:	90                   	nop

0000000000005900 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5900:	55                   	push   %rbp
    5901:	48 89 e5             	mov    %rsp,%rbp
    5904:	48 83 ec 10          	sub    $0x10,%rsp
    5908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    590c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5910:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5918:	48 8b 00             	mov    (%rax),%rax
    591b:	48 29 c2             	sub    %rax,%rdx
    591e:	48 c1 fa 03          	sar    $0x3,%rdx
    5922:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    5929:	aa aa aa 
    592c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5930:	48 89 c2             	mov    %rax,%rdx
    5933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5937:	48 8b 08             	mov    (%rax),%rcx
    593a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    593e:	48 89 ce             	mov    %rcx,%rsi
    5941:	48 89 c7             	mov    %rax,%rdi
    5944:	e8 73 0a 00 00       	call   63bc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    5949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    594d:	48 89 c7             	mov    %rax,%rdi
    5950:	e8 31 ff ff ff       	call   5886 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    5955:	90                   	nop
    5956:	c9                   	leave
    5957:	c3                   	ret

0000000000005958 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5958:	55                   	push   %rbp
    5959:	48 89 e5             	mov    %rsp,%rbp
    595c:	48 83 ec 10          	sub    $0x10,%rsp
    5960:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5964:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    596c:	48 89 c7             	mov    %rax,%rdi
    596f:	e8 24 00 00 00       	call   5998 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5974:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    597b:	48 8b 00             	mov    (%rax),%rax
    597e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5982:	48 89 ce             	mov    %rcx,%rsi
    5985:	48 89 c7             	mov    %rax,%rdi
    5988:	e8 64 0a 00 00       	call   63f1 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    598d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5991:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5995:	90                   	nop
    5996:	c9                   	leave
    5997:	c3                   	ret

0000000000005998 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5998:	55                   	push   %rbp
    5999:	48 89 e5             	mov    %rsp,%rbp
    599c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    59a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59a4:	5d                   	pop    %rbp
    59a5:	c3                   	ret

00000000000059a6 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    59a6:	55                   	push   %rbp
    59a7:	48 89 e5             	mov    %rsp,%rbp
    59aa:	48 83 ec 20          	sub    $0x20,%rsp
    59ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    59b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    59ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    59be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c2:	48 89 d6             	mov    %rdx,%rsi
    59c5:	48 89 c7             	mov    %rax,%rdi
    59c8:	e8 4d 0a 00 00       	call   641a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    59cd:	90                   	nop
    59ce:	c9                   	leave
    59cf:	c3                   	ret

00000000000059d0 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    59d0:	55                   	push   %rbp
    59d1:	48 89 e5             	mov    %rsp,%rbp
    59d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    59dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59e0:	5d                   	pop    %rbp
    59e1:	c3                   	ret

00000000000059e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    59e2:	55                   	push   %rbp
    59e3:	48 89 e5             	mov    %rsp,%rbp
    59e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    59ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59f2:	48 8b 10             	mov    (%rax),%rdx
    59f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59f9:	48 89 10             	mov    %rdx,(%rax)
    59fc:	90                   	nop
    59fd:	5d                   	pop    %rbp
    59fe:	c3                   	ret
    59ff:	90                   	nop

0000000000005a00 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5a00:	55                   	push   %rbp
    5a01:	48 89 e5             	mov    %rsp,%rbp
    5a04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a0c:	5d                   	pop    %rbp
    5a0d:	c3                   	ret

0000000000005a0e <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5a0e:	55                   	push   %rbp
    5a0f:	48 89 e5             	mov    %rsp,%rbp
    5a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a16:	90                   	nop
    5a17:	5d                   	pop    %rbp
    5a18:	c3                   	ret
    5a19:	90                   	nop

0000000000005a1a <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5a1a:	55                   	push   %rbp
    5a1b:	48 89 e5             	mov    %rsp,%rbp
    5a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a22:	90                   	nop
    5a23:	5d                   	pop    %rbp
    5a24:	c3                   	ret
    5a25:	90                   	nop

0000000000005a26 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5a26:	55                   	push   %rbp
    5a27:	48 89 e5             	mov    %rsp,%rbp
    5a2a:	48 83 ec 10          	sub    $0x10,%rsp
    5a2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a36:	48 89 c7             	mov    %rax,%rdi
    5a39:	e8 6c f7 ff ff       	call   51aa <_ZNSaIPKcED1Ev>
    5a3e:	90                   	nop
    5a3f:	c9                   	leave
    5a40:	c3                   	ret
    5a41:	90                   	nop

0000000000005a42 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    5a42:	55                   	push   %rbp
    5a43:	48 89 e5             	mov    %rsp,%rbp
    5a46:	48 83 ec 10          	sub    $0x10,%rsp
    5a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    5a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a5a:	48 89 d6             	mov    %rdx,%rsi
    5a5d:	48 89 c7             	mov    %rax,%rdi
    5a60:	e8 db 09 00 00       	call   6440 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    5a65:	90                   	nop
    5a66:	c9                   	leave
    5a67:	c3                   	ret

0000000000005a68 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5a68:	55                   	push   %rbp
    5a69:	48 89 e5             	mov    %rsp,%rbp
    5a6c:	48 83 ec 10          	sub    $0x10,%rsp
    5a70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a78:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a80:	48 8b 00             	mov    (%rax),%rax
    5a83:	48 29 c2             	sub    %rax,%rdx
    5a86:	48 89 d0             	mov    %rdx,%rax
    5a89:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5a8d:	48 89 c2             	mov    %rax,%rdx
    5a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a94:	48 8b 08             	mov    (%rax),%rcx
    5a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a9b:	48 89 ce             	mov    %rcx,%rsi
    5a9e:	48 89 c7             	mov    %rax,%rdi
    5aa1:	e8 cc 09 00 00       	call   6472 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    5aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aaa:	48 89 c7             	mov    %rax,%rdi
    5aad:	e8 74 ff ff ff       	call   5a26 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    5ab2:	90                   	nop
    5ab3:	c9                   	leave
    5ab4:	c3                   	ret
    5ab5:	90                   	nop

0000000000005ab6 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    5ab6:	55                   	push   %rbp
    5ab7:	48 89 e5             	mov    %rsp,%rbp
    5aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ac2:	48 8b 00             	mov    (%rax),%rax
    5ac5:	5d                   	pop    %rbp
    5ac6:	c3                   	ret
    5ac7:	90                   	nop

0000000000005ac8 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    5ac8:	55                   	push   %rbp
    5ac9:	48 89 e5             	mov    %rsp,%rbp
    5acc:	53                   	push   %rbx
    5acd:	48 83 ec 18          	sub    $0x18,%rsp
    5ad1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ad9:	48 89 c7             	mov    %rax,%rdi
    5adc:	e8 d5 ff ff ff       	call   5ab6 <_ZNKSt16initializer_listIPKcE5beginEv>
    5ae1:	48 89 c3             	mov    %rax,%rbx
    5ae4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ae8:	48 89 c7             	mov    %rax,%rdi
    5aeb:	e8 b8 09 00 00       	call   64a8 <_ZNKSt16initializer_listIPKcE4sizeEv>
    5af0:	48 c1 e0 03          	shl    $0x3,%rax
    5af4:	48 01 d8             	add    %rbx,%rax
    5af7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5afb:	c9                   	leave
    5afc:	c3                   	ret

0000000000005afd <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    5afd:	55                   	push   %rbp
    5afe:	48 89 e5             	mov    %rsp,%rbp
    5b01:	48 83 ec 10          	sub    $0x10,%rsp
    5b05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    5b0d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5b11:	48 89 c7             	mov    %rax,%rdi
    5b14:	e8 a1 09 00 00       	call   64ba <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    5b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b1d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b21:	48 89 d6             	mov    %rdx,%rsi
    5b24:	48 89 c7             	mov    %rax,%rdi
    5b27:	e8 99 09 00 00       	call   64c5 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    5b2c:	c9                   	leave
    5b2d:	c3                   	ret

0000000000005b2e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5b2e:	55                   	push   %rbp
    5b2f:	48 89 e5             	mov    %rsp,%rbp
    5b32:	53                   	push   %rbx
    5b33:	48 83 ec 38          	sub    $0x38,%rsp
    5b37:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5b3b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5b3f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5b43:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5b47:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5b4b:	48 89 d6             	mov    %rdx,%rsi
    5b4e:	48 89 c7             	mov    %rax,%rdi
    5b51:	e8 a7 ff ff ff       	call   5afd <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    5b56:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5b5a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b62:	48 89 c7             	mov    %rax,%rdi
    5b65:	e8 74 00 00 00       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5b6a:	48 89 c2             	mov    %rax,%rdx
    5b6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b71:	48 89 d6             	mov    %rdx,%rsi
    5b74:	48 89 c7             	mov    %rax,%rdi
    5b77:	e8 63 09 00 00       	call   64df <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    5b7c:	48 89 c6             	mov    %rax,%rsi
    5b7f:	48 89 df             	mov    %rbx,%rdi
    5b82:	e8 b9 09 00 00       	call   6540 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    5b87:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b8b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5b8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b92:	48 8b 00             	mov    (%rax),%rax
    5b95:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5b99:	48 c1 e2 03          	shl    $0x3,%rdx
    5b9d:	48 01 c2             	add    %rax,%rdx
    5ba0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ba4:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    5ba8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bac:	48 89 c7             	mov    %rax,%rdi
    5baf:	e8 2a 00 00 00       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5bb4:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    5bb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bbb:	48 8b 10             	mov    (%rax),%rdx
    5bbe:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5bc2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5bc6:	48 89 c7             	mov    %rax,%rdi
    5bc9:	e8 a5 09 00 00       	call   6573 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    5bce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5bd2:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    5bd6:	90                   	nop
    5bd7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5bdb:	c9                   	leave
    5bdc:	c3                   	ret
    5bdd:	90                   	nop

0000000000005bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5bde:	55                   	push   %rbp
    5bdf:	48 89 e5             	mov    %rsp,%rbp
    5be2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bea:	5d                   	pop    %rbp
    5beb:	c3                   	ret

0000000000005bec <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5bec:	55                   	push   %rbp
    5bed:	48 89 e5             	mov    %rsp,%rbp
    5bf0:	48 83 ec 20          	sub    $0x20,%rsp
    5bf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5bfc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5c00:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c08:	48 89 d6             	mov    %rdx,%rsi
    5c0b:	48 89 c7             	mov    %rax,%rdi
    5c0e:	e8 91 09 00 00       	call   65a4 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    5c13:	90                   	nop
    5c14:	c9                   	leave
    5c15:	c3                   	ret

0000000000005c16 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5c16:	55                   	push   %rbp
    5c17:	48 89 e5             	mov    %rsp,%rbp
    5c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c1e:	90                   	nop
    5c1f:	5d                   	pop    %rbp
    5c20:	c3                   	ret
    5c21:	90                   	nop

0000000000005c22 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5c22:	55                   	push   %rbp
    5c23:	48 89 e5             	mov    %rsp,%rbp
    5c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c2a:	90                   	nop
    5c2b:	5d                   	pop    %rbp
    5c2c:	c3                   	ret

0000000000005c2d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5c2d:	55                   	push   %rbp
    5c2e:	48 89 e5             	mov    %rsp,%rbp
    5c31:	53                   	push   %rbx
    5c32:	48 83 ec 28          	sub    $0x28,%rsp
    5c36:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5c3a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5c3e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5c42:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c46:	48 89 d6             	mov    %rdx,%rsi
    5c49:	48 89 c7             	mov    %rax,%rdi
    5c4c:	e8 bb 09 00 00       	call   660c <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    5c51:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c55:	48 89 c7             	mov    %rax,%rdi
    5c58:	e8 6d 09 00 00       	call   65ca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5c5d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5c61:	0f 92 c3             	setb   %bl
    5c64:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c68:	48 89 c7             	mov    %rax,%rdi
    5c6b:	e8 3e f6 ff ff       	call   52ae <_ZNSaI21VkExtensionPropertiesED1Ev>
    5c70:	84 db                	test   %bl,%bl
    5c72:	74 0f                	je     5c83 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5c74:	48 8d 05 8d 62 00 00 	lea    0x628d(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    5c7b:	48 89 c7             	mov    %rax,%rdi
    5c7e:	e8 5d d4 ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5c83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5c87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c8b:	c9                   	leave
    5c8c:	c3                   	ret
    5c8d:	90                   	nop

0000000000005c8e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5c8e:	55                   	push   %rbp
    5c8f:	48 89 e5             	mov    %rsp,%rbp
    5c92:	48 83 ec 10          	sub    $0x10,%rsp
    5c96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c9e:	48 89 c7             	mov    %rax,%rdi
    5ca1:	e8 08 f6 ff ff       	call   52ae <_ZNSaI21VkExtensionPropertiesED1Ev>
    5ca6:	90                   	nop
    5ca7:	c9                   	leave
    5ca8:	c3                   	ret
    5ca9:	90                   	nop

0000000000005caa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5caa:	55                   	push   %rbp
    5cab:	48 89 e5             	mov    %rsp,%rbp
    5cae:	53                   	push   %rbx
    5caf:	48 83 ec 28          	sub    $0x28,%rsp
    5cb3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5cb7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5cbb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5cbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cc3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5cc7:	48 89 d6             	mov    %rdx,%rsi
    5cca:	48 89 c7             	mov    %rax,%rdi
    5ccd:	e8 60 09 00 00       	call   6632 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5cd2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5cd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cda:	48 89 d6             	mov    %rdx,%rsi
    5cdd:	48 89 c7             	mov    %rax,%rdi
    5ce0:	e8 7f 09 00 00       	call   6664 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    5ce5:	eb 1a                	jmp    5d01 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5ce7:	48 89 c3             	mov    %rax,%rbx
    5cea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cee:	48 89 c7             	mov    %rax,%rdi
    5cf1:	e8 98 ff ff ff       	call   5c8e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5cf6:	48 89 d8             	mov    %rbx,%rax
    5cf9:	48 89 c7             	mov    %rax,%rdi
    5cfc:	e8 cf d6 ff ff       	call   33d0 <_Unwind_Resume@plt>
    5d01:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d05:	c9                   	leave
    5d06:	c3                   	ret
    5d07:	90                   	nop

0000000000005d08 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5d08:	55                   	push   %rbp
    5d09:	48 89 e5             	mov    %rsp,%rbp
    5d0c:	48 83 ec 10          	sub    $0x10,%rsp
    5d10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d18:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5d1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d20:	48 8b 00             	mov    (%rax),%rax
    5d23:	48 29 c2             	sub    %rax,%rdx
    5d26:	48 c1 fa 02          	sar    $0x2,%rdx
    5d2a:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    5d31:	fc c0 0f 
    5d34:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5d38:	48 89 c2             	mov    %rax,%rdx
    5d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d3f:	48 8b 08             	mov    (%rax),%rcx
    5d42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d46:	48 89 ce             	mov    %rcx,%rsi
    5d49:	48 89 c7             	mov    %rax,%rdi
    5d4c:	e8 75 09 00 00       	call   66c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    5d51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d55:	48 89 c7             	mov    %rax,%rdi
    5d58:	e8 31 ff ff ff       	call   5c8e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5d5d:	90                   	nop
    5d5e:	c9                   	leave
    5d5f:	c3                   	ret

0000000000005d60 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5d60:	55                   	push   %rbp
    5d61:	48 89 e5             	mov    %rsp,%rbp
    5d64:	48 83 ec 10          	sub    $0x10,%rsp
    5d68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d74:	48 89 c7             	mov    %rax,%rdi
    5d77:	e8 24 00 00 00       	call   5da0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5d7c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5d7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d83:	48 8b 00             	mov    (%rax),%rax
    5d86:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d8a:	48 89 ce             	mov    %rcx,%rsi
    5d8d:	48 89 c7             	mov    %rax,%rdi
    5d90:	e8 66 09 00 00       	call   66fb <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5d95:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5d99:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5d9d:	90                   	nop
    5d9e:	c9                   	leave
    5d9f:	c3                   	ret

0000000000005da0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5da0:	55                   	push   %rbp
    5da1:	48 89 e5             	mov    %rsp,%rbp
    5da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dac:	5d                   	pop    %rbp
    5dad:	c3                   	ret

0000000000005dae <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5dae:	55                   	push   %rbp
    5daf:	48 89 e5             	mov    %rsp,%rbp
    5db2:	48 83 ec 20          	sub    $0x20,%rsp
    5db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5dbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5dc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dca:	48 89 d6             	mov    %rdx,%rsi
    5dcd:	48 89 c7             	mov    %rax,%rdi
    5dd0:	e8 4f 09 00 00       	call   6724 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    5dd5:	90                   	nop
    5dd6:	c9                   	leave
    5dd7:	c3                   	ret

0000000000005dd8 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5dd8:	55                   	push   %rbp
    5dd9:	48 89 e5             	mov    %rsp,%rbp
    5ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5de0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5de4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5de8:	5d                   	pop    %rbp
    5de9:	c3                   	ret

0000000000005dea <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5dea:	55                   	push   %rbp
    5deb:	48 89 e5             	mov    %rsp,%rbp
    5dee:	48 83 ec 10          	sub    $0x10,%rsp
    5df2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dfa:	48 89 c7             	mov    %rax,%rdi
    5dfd:	e8 48 09 00 00       	call   674a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    5e02:	90                   	nop
    5e03:	c9                   	leave
    5e04:	c3                   	ret
    5e05:	90                   	nop

0000000000005e06 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    5e06:	55                   	push   %rbp
    5e07:	48 89 e5             	mov    %rsp,%rbp
    5e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    5e0e:	90                   	nop
    5e0f:	5d                   	pop    %rbp
    5e10:	c3                   	ret
    5e11:	90                   	nop

0000000000005e12 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    5e12:	55                   	push   %rbp
    5e13:	48 89 e5             	mov    %rsp,%rbp
    5e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e1a:	90                   	nop
    5e1b:	5d                   	pop    %rbp
    5e1c:	c3                   	ret
    5e1d:	90                   	nop

0000000000005e1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5e1e:	55                   	push   %rbp
    5e1f:	48 89 e5             	mov    %rsp,%rbp
    5e22:	48 83 ec 20          	sub    $0x20,%rsp
    5e26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5e2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    5e2e:	eb 49                	jmp    5e79 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    5e30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5e34:	48 89 c7             	mov    %rax,%rdi
    5e37:	e8 19 09 00 00       	call   6755 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    5e3c:	48 89 c2             	mov    %rax,%rdx
    5e3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e43:	48 89 d6             	mov    %rdx,%rsi
    5e46:	48 89 c7             	mov    %rax,%rdi
    5e49:	e8 d0 ff ff ff       	call   5e1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    5e4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5e52:	48 89 c7             	mov    %rax,%rdi
    5e55:	e8 0d 09 00 00       	call   6767 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    5e5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    5e5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e66:	48 89 d6             	mov    %rdx,%rsi
    5e69:	48 89 c7             	mov    %rax,%rdi
    5e6c:	e8 09 09 00 00       	call   677a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    5e71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e75:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    5e79:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5e7e:	75 b0                	jne    5e30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
    5e80:	90                   	nop
    5e81:	90                   	nop
    5e82:	c9                   	leave
    5e83:	c3                   	ret

0000000000005e84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    5e84:	55                   	push   %rbp
    5e85:	48 89 e5             	mov    %rsp,%rbp
    5e88:	48 83 ec 10          	sub    $0x10,%rsp
    5e8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    5e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e94:	48 89 c7             	mov    %rax,%rdi
    5e97:	e8 18 09 00 00       	call   67b4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    5e9c:	c9                   	leave
    5e9d:	c3                   	ret

0000000000005e9e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5e9e:	55                   	push   %rbp
    5e9f:	48 89 e5             	mov    %rsp,%rbp
    5ea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ea6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5eaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5eae:	48 8b 10             	mov    (%rax),%rdx
    5eb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb5:	48 89 10             	mov    %rdx,(%rax)
    5eb8:	90                   	nop
    5eb9:	5d                   	pop    %rbp
    5eba:	c3                   	ret
    5ebb:	90                   	nop

0000000000005ebc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5ebc:	55                   	push   %rbp
    5ebd:	48 89 e5             	mov    %rsp,%rbp
    5ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ec8:	5d                   	pop    %rbp
    5ec9:	c3                   	ret

0000000000005eca <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    5eca:	55                   	push   %rbp
    5ecb:	48 89 e5             	mov    %rsp,%rbp
    5ece:	48 83 ec 10          	sub    $0x10,%rsp
    5ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ed6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    5eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ede:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ee2:	48 89 d6             	mov    %rdx,%rsi
    5ee5:	48 89 c7             	mov    %rax,%rdi
    5ee8:	e8 d9 08 00 00       	call   67c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    5eed:	c9                   	leave
    5eee:	c3                   	ret
    5eef:	90                   	nop

0000000000005ef0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    5ef0:	55                   	push   %rbp
    5ef1:	48 89 e5             	mov    %rsp,%rbp
    5ef4:	48 83 ec 10          	sub    $0x10,%rsp
    5ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    5efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f00:	48 89 c7             	mov    %rax,%rdi
    5f03:	e8 0a 09 00 00       	call   6812 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    5f08:	c9                   	leave
    5f09:	c3                   	ret

0000000000005f0a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    5f0a:	55                   	push   %rbp
    5f0b:	48 89 e5             	mov    %rsp,%rbp
    5f0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    5f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f1a:	48 8b 10             	mov    (%rax),%rdx
    5f1d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f21:	48 8b 00             	mov    (%rax),%rax
    5f24:	48 39 c2             	cmp    %rax,%rdx
    5f27:	0f 94 c0             	sete   %al
    5f2a:	5d                   	pop    %rbp
    5f2b:	c3                   	ret

0000000000005f2c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    5f2c:	55                   	push   %rbp
    5f2d:	48 89 e5             	mov    %rsp,%rbp
    5f30:	48 83 ec 10          	sub    $0x10,%rsp
    5f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    5f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f3c:	48 89 c7             	mov    %rax,%rdi
    5f3f:	e8 f8 08 00 00       	call   683c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    5f44:	90                   	nop
    5f45:	c9                   	leave
    5f46:	c3                   	ret
    5f47:	90                   	nop

0000000000005f48 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    5f48:	55                   	push   %rbp
    5f49:	48 89 e5             	mov    %rsp,%rbp
    5f4c:	48 83 ec 10          	sub    $0x10,%rsp
    5f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    5f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f58:	48 8b 00             	mov    (%rax),%rax
    5f5b:	48 89 c7             	mov    %rax,%rdi
    5f5e:	e8 e5 08 00 00       	call   6848 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    5f63:	c9                   	leave
    5f64:	c3                   	ret
    5f65:	90                   	nop

0000000000005f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    5f66:	55                   	push   %rbp
    5f67:	48 89 e5             	mov    %rsp,%rbp
    5f6a:	48 83 ec 20          	sub    $0x20,%rsp
    5f6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    5f7a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f82:	48 89 d6             	mov    %rdx,%rsi
    5f85:	48 89 c7             	mov    %rax,%rdi
    5f88:	e8 d9 08 00 00       	call   6866 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    5f8d:	c9                   	leave
    5f8e:	c3                   	ret

0000000000005f8f <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    5f8f:	55                   	push   %rbp
    5f90:	48 89 e5             	mov    %rsp,%rbp
    5f93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5f97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f9b:	5d                   	pop    %rbp
    5f9c:	c3                   	ret

0000000000005f9d <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    5f9d:	55                   	push   %rbp
    5f9e:	48 89 e5             	mov    %rsp,%rbp
    5fa1:	48 83 ec 10          	sub    $0x10,%rsp
    5fa5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fa9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    5fad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5fb1:	48 89 c7             	mov    %rax,%rdi
    5fb4:	e8 d5 08 00 00       	call   688e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    5fb9:	48 89 c2             	mov    %rax,%rdx
    5fbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fc0:	48 89 d6             	mov    %rdx,%rsi
    5fc3:	48 89 c7             	mov    %rax,%rdi
    5fc6:	e8 d1 08 00 00       	call   689c <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    5fcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fcf:	c9                   	leave
    5fd0:	c3                   	ret
    5fd1:	90                   	nop

0000000000005fd2 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    5fd2:	55                   	push   %rbp
    5fd3:	48 89 e5             	mov    %rsp,%rbp
    5fd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    5fde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5fe2:	48 8b 10             	mov    (%rax),%rdx
    5fe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe9:	48 89 10             	mov    %rdx,(%rax)
    5fec:	90                   	nop
    5fed:	5d                   	pop    %rbp
    5fee:	c3                   	ret
    5fef:	90                   	nop

0000000000005ff0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5ff0:	55                   	push   %rbp
    5ff1:	48 89 e5             	mov    %rsp,%rbp
    5ff4:	41 54                	push   %r12
    5ff6:	53                   	push   %rbx
    5ff7:	48 83 ec 60          	sub    $0x60,%rsp
    5ffb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5fff:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    6003:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    6007:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    600b:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    600f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6013:	48 89 c7             	mov    %rax,%rdi
    6016:	e8 d0 08 00 00       	call   68eb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    601b:	49 89 c4             	mov    %rax,%r12
    601e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6022:	48 89 c7             	mov    %rax,%rdi
    6025:	e8 b3 08 00 00       	call   68dd <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    602a:	48 89 c3             	mov    %rax,%rbx
    602d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6031:	48 89 c7             	mov    %rax,%rdi
    6034:	e8 96 08 00 00       	call   68cf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    6039:	48 89 c2             	mov    %rax,%rdx
    603c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    6040:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6044:	4d 89 e0             	mov    %r12,%r8
    6047:	48 89 d9             	mov    %rbx,%rcx
    604a:	48 89 c7             	mov    %rax,%rdi
    604d:	e8 a8 08 00 00       	call   68fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    6052:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6056:	48 89 c7             	mov    %rax,%rdi
    6059:	e8 9c 0d 00 00       	call   6dfa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    605e:	48 89 c2             	mov    %rax,%rdx
    6061:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    6065:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6069:	48 89 ce             	mov    %rcx,%rsi
    606c:	48 89 c7             	mov    %rax,%rdi
    606f:	e8 38 09 00 00       	call   69ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    6074:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6078:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    607c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6080:	48 85 c0             	test   %rax,%rax
    6083:	74 1c                	je     60a1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    6085:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    6089:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    608d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6091:	48 89 ce             	mov    %rcx,%rsi
    6094:	48 89 c7             	mov    %rax,%rdi
    6097:	e8 7c 0d 00 00       	call   6e18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    609c:	48 89 c3             	mov    %rax,%rbx
    609f:	eb 17                	jmp    60b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    60a1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    60a5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    60a9:	48 89 d6             	mov    %rdx,%rsi
    60ac:	48 89 c7             	mov    %rax,%rdi
    60af:	e8 ba 0d 00 00       	call   6e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    60b4:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    60b8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    60bc:	48 89 c7             	mov    %rax,%rdi
    60bf:	e8 b2 08 00 00       	call   6976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    60c4:	48 89 d8             	mov    %rbx,%rax
    60c7:	eb 1a                	jmp    60e3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    60c9:	48 89 c3             	mov    %rax,%rbx
    60cc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    60d0:	48 89 c7             	mov    %rax,%rdi
    60d3:	e8 9e 08 00 00       	call   6976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    60d8:	48 89 d8             	mov    %rbx,%rax
    60db:	48 89 c7             	mov    %rax,%rdi
    60de:	e8 ed d2 ff ff       	call   33d0 <_Unwind_Resume@plt>
    60e3:	48 83 c4 60          	add    $0x60,%rsp
    60e7:	5b                   	pop    %rbx
    60e8:	41 5c                	pop    %r12
    60ea:	5d                   	pop    %rbp
    60eb:	c3                   	ret

00000000000060ec <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    60ec:	55                   	push   %rbp
    60ed:	48 89 e5             	mov    %rsp,%rbp
    60f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    60f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    60fc:	48 8b 10             	mov    (%rax),%rdx
    60ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6103:	48 89 10             	mov    %rdx,(%rax)
    6106:	90                   	nop
    6107:	5d                   	pop    %rbp
    6108:	c3                   	ret
    6109:	90                   	nop

000000000000610a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    610a:	55                   	push   %rbp
    610b:	48 89 e5             	mov    %rsp,%rbp
    610e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6112:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6116:	5d                   	pop    %rbp
    6117:	c3                   	ret

0000000000006118 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6118:	55                   	push   %rbp
    6119:	48 89 e5             	mov    %rsp,%rbp
    611c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6120:	90                   	nop
    6121:	5d                   	pop    %rbp
    6122:	c3                   	ret
    6123:	90                   	nop

0000000000006124 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6124:	55                   	push   %rbp
    6125:	48 89 e5             	mov    %rsp,%rbp
    6128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    612c:	90                   	nop
    612d:	5d                   	pop    %rbp
    612e:	c3                   	ret

000000000000612f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    612f:	55                   	push   %rbp
    6130:	48 89 e5             	mov    %rsp,%rbp
    6133:	53                   	push   %rbx
    6134:	48 83 ec 28          	sub    $0x28,%rsp
    6138:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    613c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6140:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6144:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6148:	48 89 d6             	mov    %rdx,%rsi
    614b:	48 89 c7             	mov    %rax,%rdi
    614e:	e8 ed 00 00 00       	call   6240 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6153:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6157:	48 89 c7             	mov    %rax,%rdi
    615a:	e8 29 0d 00 00       	call   6e88 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    615f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6163:	0f 92 c3             	setb   %bl
    6166:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    616a:	48 89 c7             	mov    %rax,%rdi
    616d:	e8 60 f5 ff ff       	call   56d2 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    6172:	84 db                	test   %bl,%bl
    6174:	74 0f                	je     6185 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6176:	48 8d 05 8b 5d 00 00 	lea    0x5d8b(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    617d:	48 89 c7             	mov    %rax,%rdi
    6180:	e8 5b cf ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6185:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6189:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    618d:	c9                   	leave
    618e:	c3                   	ret
    618f:	90                   	nop

0000000000006190 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6190:	55                   	push   %rbp
    6191:	48 89 e5             	mov    %rsp,%rbp
    6194:	53                   	push   %rbx
    6195:	48 83 ec 28          	sub    $0x28,%rsp
    6199:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    619d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    61a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    61ad:	48 89 d6             	mov    %rdx,%rsi
    61b0:	48 89 c7             	mov    %rax,%rdi
    61b3:	e8 12 0d 00 00       	call   6eca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    61b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    61bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61c0:	48 89 d6             	mov    %rdx,%rsi
    61c3:	48 89 c7             	mov    %rax,%rdi
    61c6:	e8 31 0d 00 00       	call   6efc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    61cb:	eb 1a                	jmp    61e7 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    61cd:	48 89 c3             	mov    %rax,%rbx
    61d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61d4:	48 89 c7             	mov    %rax,%rdi
    61d7:	e8 3c ed ff ff       	call   4f18 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    61dc:	48 89 d8             	mov    %rbx,%rax
    61df:	48 89 c7             	mov    %rax,%rdi
    61e2:	e8 e9 d1 ff ff       	call   33d0 <_Unwind_Resume@plt>
    61e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    61eb:	c9                   	leave
    61ec:	c3                   	ret
    61ed:	90                   	nop

00000000000061ee <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    61ee:	55                   	push   %rbp
    61ef:	48 89 e5             	mov    %rsp,%rbp
    61f2:	48 83 ec 10          	sub    $0x10,%rsp
    61f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    61fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6202:	48 89 c7             	mov    %rax,%rdi
    6205:	e8 cc f5 ff ff       	call   57d6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    620a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    620d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6211:	48 8b 00             	mov    (%rax),%rax
    6214:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6218:	48 89 ce             	mov    %rcx,%rsi
    621b:	48 89 c7             	mov    %rax,%rdi
    621e:	e8 2f 0d 00 00       	call   6f52 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6223:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6227:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    622b:	90                   	nop
    622c:	c9                   	leave
    622d:	c3                   	ret

000000000000622e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    622e:	55                   	push   %rbp
    622f:	48 89 e5             	mov    %rsp,%rbp
    6232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6236:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    623a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    623e:	5d                   	pop    %rbp
    623f:	c3                   	ret

0000000000006240 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6240:	55                   	push   %rbp
    6241:	48 89 e5             	mov    %rsp,%rbp
    6244:	48 83 ec 10          	sub    $0x10,%rsp
    6248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    624c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6250:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6258:	48 89 d6             	mov    %rdx,%rsi
    625b:	48 89 c7             	mov    %rax,%rdi
    625e:	e8 19 0d 00 00       	call   6f7c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    6263:	90                   	nop
    6264:	c9                   	leave
    6265:	c3                   	ret

0000000000006266 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    6266:	55                   	push   %rbp
    6267:	48 89 e5             	mov    %rsp,%rbp
    626a:	48 83 ec 20          	sub    $0x20,%rsp
    626e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6272:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6276:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    627a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    627f:	74 17                	je     6298 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6285:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6289:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    628d:	48 89 ce             	mov    %rcx,%rsi
    6290:	48 89 c7             	mov    %rax,%rdi
    6293:	e8 f3 0c 00 00       	call   6f8b <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    6298:	90                   	nop
    6299:	c9                   	leave
    629a:	c3                   	ret

000000000000629b <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    629b:	55                   	push   %rbp
    629c:	48 89 e5             	mov    %rsp,%rbp
    629f:	48 83 ec 10          	sub    $0x10,%rsp
    62a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    62ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b3:	48 89 d6             	mov    %rdx,%rsi
    62b6:	48 89 c7             	mov    %rax,%rdi
    62b9:	e8 fb 0c 00 00       	call   6fb9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    62be:	90                   	nop
    62bf:	c9                   	leave
    62c0:	c3                   	ret

00000000000062c1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    62c1:	55                   	push   %rbp
    62c2:	48 89 e5             	mov    %rsp,%rbp
    62c5:	48 83 ec 20          	sub    $0x20,%rsp
    62c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    62cd:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    62d4:	55 55 05 
    62d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    62db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62df:	48 89 c7             	mov    %rax,%rdi
    62e2:	e8 e1 0c 00 00       	call   6fc8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    62e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    62eb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    62ef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    62f3:	48 89 d6             	mov    %rdx,%rsi
    62f6:	48 89 c7             	mov    %rax,%rdi
    62f9:	e8 e4 0c 00 00       	call   6fe2 <_ZSt3minImERKT_S2_S2_>
    62fe:	48 8b 00             	mov    (%rax),%rax
      }
    6301:	c9                   	leave
    6302:	c3                   	ret
    6303:	90                   	nop

0000000000006304 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6304:	55                   	push   %rbp
    6305:	48 89 e5             	mov    %rsp,%rbp
    6308:	48 83 ec 10          	sub    $0x10,%rsp
    630c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6314:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    631c:	48 89 d6             	mov    %rdx,%rsi
    631f:	48 89 c7             	mov    %rax,%rdi
    6322:	e8 e7 0c 00 00       	call   700e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    6327:	90                   	nop
    6328:	c9                   	leave
    6329:	c3                   	ret

000000000000632a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    632a:	55                   	push   %rbp
    632b:	48 89 e5             	mov    %rsp,%rbp
    632e:	48 83 ec 10          	sub    $0x10,%rsp
    6332:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6336:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    633a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    633e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6342:	48 89 d6             	mov    %rdx,%rsi
    6345:	48 89 c7             	mov    %rax,%rdi
    6348:	e8 b7 ff ff ff       	call   6304 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    634d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6351:	48 89 c7             	mov    %rax,%rdi
    6354:	e8 c5 0c 00 00       	call   701e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6359:	90                   	nop
    635a:	c9                   	leave
    635b:	c3                   	ret

000000000000635c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    635c:	55                   	push   %rbp
    635d:	48 89 e5             	mov    %rsp,%rbp
    6360:	48 83 ec 10          	sub    $0x10,%rsp
    6364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6368:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    636c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6374:	48 89 d6             	mov    %rdx,%rsi
    6377:	48 89 c7             	mov    %rax,%rdi
    637a:	e8 cd 0c 00 00       	call   704c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    637f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6383:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    638a:	48 8b 10             	mov    (%rax),%rdx
    638d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6391:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6399:	48 8b 08             	mov    (%rax),%rcx
    639c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63a0:	48 89 d0             	mov    %rdx,%rax
    63a3:	48 01 c0             	add    %rax,%rax
    63a6:	48 01 d0             	add    %rdx,%rax
    63a9:	48 c1 e0 03          	shl    $0x3,%rax
    63ad:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    63b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b5:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    63b9:	90                   	nop
    63ba:	c9                   	leave
    63bb:	c3                   	ret

00000000000063bc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    63bc:	55                   	push   %rbp
    63bd:	48 89 e5             	mov    %rsp,%rbp
    63c0:	48 83 ec 20          	sub    $0x20,%rsp
    63c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    63d0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    63d5:	74 17                	je     63ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    63d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    63e3:	48 89 ce             	mov    %rcx,%rsi
    63e6:	48 89 c7             	mov    %rax,%rdi
    63e9:	e8 91 0c 00 00       	call   707f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    63ee:	90                   	nop
    63ef:	c9                   	leave
    63f0:	c3                   	ret

00000000000063f1 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    63f1:	55                   	push   %rbp
    63f2:	48 89 e5             	mov    %rsp,%rbp
    63f5:	48 83 ec 20          	sub    $0x20,%rsp
    63f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6401:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    6405:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6409:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    640d:	48 89 d6             	mov    %rdx,%rsi
    6410:	48 89 c7             	mov    %rax,%rdi
    6413:	e8 95 0c 00 00       	call   70ad <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    6418:	c9                   	leave
    6419:	c3                   	ret

000000000000641a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    641a:	55                   	push   %rbp
    641b:	48 89 e5             	mov    %rsp,%rbp
    641e:	48 83 ec 10          	sub    $0x10,%rsp
    6422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6426:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    642a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    642e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6432:	48 89 d6             	mov    %rdx,%rsi
    6435:	48 89 c7             	mov    %rax,%rdi
    6438:	e8 99 0c 00 00       	call   70d6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    643d:	90                   	nop
    643e:	c9                   	leave
    643f:	c3                   	ret

0000000000006440 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6440:	55                   	push   %rbp
    6441:	48 89 e5             	mov    %rsp,%rbp
    6444:	48 83 ec 10          	sub    $0x10,%rsp
    6448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    644c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6450:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6458:	48 89 d6             	mov    %rdx,%rsi
    645b:	48 89 c7             	mov    %rax,%rdi
    645e:	e8 83 0c 00 00       	call   70e6 <_ZNSaIPKcEC1ERKS1_>
    6463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6467:	48 89 c7             	mov    %rax,%rdi
    646a:	e8 9d 0c 00 00       	call   710c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    646f:	90                   	nop
    6470:	c9                   	leave
    6471:	c3                   	ret

0000000000006472 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    6472:	55                   	push   %rbp
    6473:	48 89 e5             	mov    %rsp,%rbp
    6476:	48 83 ec 20          	sub    $0x20,%rsp
    647a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    647e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6482:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6486:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    648b:	74 17                	je     64a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    648d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6491:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6495:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6499:	48 89 ce             	mov    %rcx,%rsi
    649c:	48 89 c7             	mov    %rax,%rdi
    649f:	e8 96 0c 00 00       	call   713a <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    64a4:	90                   	nop
    64a5:	c9                   	leave
    64a6:	c3                   	ret
    64a7:	90                   	nop

00000000000064a8 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    64a8:	55                   	push   %rbp
    64a9:	48 89 e5             	mov    %rsp,%rbp
    64ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b4:	48 8b 40 08          	mov    0x8(%rax),%rax
    64b8:	5d                   	pop    %rbp
    64b9:	c3                   	ret

00000000000064ba <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    64ba:	55                   	push   %rbp
    64bb:	48 89 e5             	mov    %rsp,%rbp
    64be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    64c2:	90                   	nop
    64c3:	5d                   	pop    %rbp
    64c4:	c3                   	ret

00000000000064c5 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    64c5:	55                   	push   %rbp
    64c6:	48 89 e5             	mov    %rsp,%rbp
    64c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    64d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64d5:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    64d9:	48 c1 f8 03          	sar    $0x3,%rax
    }
    64dd:	5d                   	pop    %rbp
    64de:	c3                   	ret

00000000000064df <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    64df:	55                   	push   %rbp
    64e0:	48 89 e5             	mov    %rsp,%rbp
    64e3:	53                   	push   %rbx
    64e4:	48 83 ec 28          	sub    $0x28,%rsp
    64e8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    64ec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    64f0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    64f4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    64f8:	48 89 d6             	mov    %rdx,%rsi
    64fb:	48 89 c7             	mov    %rax,%rdi
    64fe:	e8 e3 0b 00 00       	call   70e6 <_ZNSaIPKcEC1ERKS1_>
    6503:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6507:	48 89 c7             	mov    %rax,%rdi
    650a:	e8 59 0c 00 00       	call   7168 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    650f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6513:	0f 92 c3             	setb   %bl
    6516:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    651a:	48 89 c7             	mov    %rax,%rdi
    651d:	e8 88 ec ff ff       	call   51aa <_ZNSaIPKcED1Ev>
    6522:	84 db                	test   %bl,%bl
    6524:	74 0f                	je     6535 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6526:	48 8d 05 db 59 00 00 	lea    0x59db(%rip),%rax        # bf08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    652d:	48 89 c7             	mov    %rax,%rdi
    6530:	e8 ab cb ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6535:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6539:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    653d:	c9                   	leave
    653e:	c3                   	ret
    653f:	90                   	nop

0000000000006540 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6540:	55                   	push   %rbp
    6541:	48 89 e5             	mov    %rsp,%rbp
    6544:	48 83 ec 10          	sub    $0x10,%rsp
    6548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    654c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6550:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6555:	74 15                	je     656c <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    6557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    655b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    655f:	48 89 d6             	mov    %rdx,%rsi
    6562:	48 89 c7             	mov    %rax,%rdi
    6565:	e8 40 0c 00 00       	call   71aa <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    656a:	eb 05                	jmp    6571 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    656c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6571:	c9                   	leave
    6572:	c3                   	ret

0000000000006573 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    6573:	55                   	push   %rbp
    6574:	48 89 e5             	mov    %rsp,%rbp
    6577:	48 83 ec 20          	sub    $0x20,%rsp
    657b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    657f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6583:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6587:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    658b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    658f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6597:	48 89 ce             	mov    %rcx,%rsi
    659a:	48 89 c7             	mov    %rax,%rdi
    659d:	e8 32 0c 00 00       	call   71d4 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    65a2:	c9                   	leave
    65a3:	c3                   	ret

00000000000065a4 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    65a4:	55                   	push   %rbp
    65a5:	48 89 e5             	mov    %rsp,%rbp
    65a8:	48 83 ec 10          	sub    $0x10,%rsp
    65ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    65b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65bc:	48 89 d6             	mov    %rdx,%rsi
    65bf:	48 89 c7             	mov    %rax,%rdi
    65c2:	e8 42 0c 00 00       	call   7209 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    65c7:	90                   	nop
    65c8:	c9                   	leave
    65c9:	c3                   	ret

00000000000065ca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    65ca:	55                   	push   %rbp
    65cb:	48 89 e5             	mov    %rsp,%rbp
    65ce:	48 83 ec 20          	sub    $0x20,%rsp
    65d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    65d6:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    65dd:	07 7e 00 
    65e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    65e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65e8:	48 89 c7             	mov    %rax,%rdi
    65eb:	e8 28 0c 00 00       	call   7218 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    65f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    65f4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    65f8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    65fc:	48 89 d6             	mov    %rdx,%rsi
    65ff:	48 89 c7             	mov    %rax,%rdi
    6602:	e8 db 09 00 00       	call   6fe2 <_ZSt3minImERKT_S2_S2_>
    6607:	48 8b 00             	mov    (%rax),%rax
      }
    660a:	c9                   	leave
    660b:	c3                   	ret

000000000000660c <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    660c:	55                   	push   %rbp
    660d:	48 89 e5             	mov    %rsp,%rbp
    6610:	48 83 ec 10          	sub    $0x10,%rsp
    6614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6618:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    661c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6624:	48 89 d6             	mov    %rdx,%rsi
    6627:	48 89 c7             	mov    %rax,%rdi
    662a:	e8 03 0c 00 00       	call   7232 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    662f:	90                   	nop
    6630:	c9                   	leave
    6631:	c3                   	ret

0000000000006632 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6632:	55                   	push   %rbp
    6633:	48 89 e5             	mov    %rsp,%rbp
    6636:	48 83 ec 10          	sub    $0x10,%rsp
    663a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    663e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6642:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    664a:	48 89 d6             	mov    %rdx,%rsi
    664d:	48 89 c7             	mov    %rax,%rdi
    6650:	e8 b7 ff ff ff       	call   660c <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    6655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6659:	48 89 c7             	mov    %rax,%rdi
    665c:	e8 e1 0b 00 00       	call   7242 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6661:	90                   	nop
    6662:	c9                   	leave
    6663:	c3                   	ret

0000000000006664 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6664:	55                   	push   %rbp
    6665:	48 89 e5             	mov    %rsp,%rbp
    6668:	48 83 ec 10          	sub    $0x10,%rsp
    666c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6670:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6674:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    667c:	48 89 d6             	mov    %rdx,%rsi
    667f:	48 89 c7             	mov    %rax,%rdi
    6682:	e8 e9 0b 00 00       	call   7270 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    6687:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    668b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    668e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6692:	48 8b 10             	mov    (%rax),%rdx
    6695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6699:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    669d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a1:	48 8b 08             	mov    (%rax),%rcx
    66a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66a8:	48 89 d0             	mov    %rdx,%rax
    66ab:	48 c1 e0 06          	shl    $0x6,%rax
    66af:	48 01 d0             	add    %rdx,%rax
    66b2:	48 c1 e0 02          	shl    $0x2,%rax
    66b6:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    66ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66be:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    66c2:	90                   	nop
    66c3:	c9                   	leave
    66c4:	c3                   	ret
    66c5:	90                   	nop

00000000000066c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    66c6:	55                   	push   %rbp
    66c7:	48 89 e5             	mov    %rsp,%rbp
    66ca:	48 83 ec 20          	sub    $0x20,%rsp
    66ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    66da:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    66df:	74 17                	je     66f8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    66e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    66ed:	48 89 ce             	mov    %rcx,%rsi
    66f0:	48 89 c7             	mov    %rax,%rdi
    66f3:	e8 ab 0b 00 00       	call   72a3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    66f8:	90                   	nop
    66f9:	c9                   	leave
    66fa:	c3                   	ret

00000000000066fb <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    66fb:	55                   	push   %rbp
    66fc:	48 89 e5             	mov    %rsp,%rbp
    66ff:	48 83 ec 20          	sub    $0x20,%rsp
    6703:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6707:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    670b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    670f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6717:	48 89 d6             	mov    %rdx,%rsi
    671a:	48 89 c7             	mov    %rax,%rdi
    671d:	e8 af 0b 00 00       	call   72d1 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    6722:	c9                   	leave
    6723:	c3                   	ret

0000000000006724 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6724:	55                   	push   %rbp
    6725:	48 89 e5             	mov    %rsp,%rbp
    6728:	48 83 ec 10          	sub    $0x10,%rsp
    672c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6734:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    673c:	48 89 d6             	mov    %rdx,%rsi
    673f:	48 89 c7             	mov    %rax,%rdi
    6742:	e8 b3 0b 00 00       	call   72fa <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    6747:	90                   	nop
    6748:	c9                   	leave
    6749:	c3                   	ret

000000000000674a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    674a:	55                   	push   %rbp
    674b:	48 89 e5             	mov    %rsp,%rbp
    674e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6752:	90                   	nop
    6753:	5d                   	pop    %rbp
    6754:	c3                   	ret

0000000000006755 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    6755:	55                   	push   %rbp
    6756:	48 89 e5             	mov    %rsp,%rbp
    6759:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    675d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6761:	48 8b 40 18          	mov    0x18(%rax),%rax
    6765:	5d                   	pop    %rbp
    6766:	c3                   	ret

0000000000006767 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    6767:	55                   	push   %rbp
    6768:	48 89 e5             	mov    %rsp,%rbp
    676b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    676f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6773:	48 8b 40 10          	mov    0x10(%rax),%rax
    6777:	5d                   	pop    %rbp
    6778:	c3                   	ret
    6779:	90                   	nop

000000000000677a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    677a:	55                   	push   %rbp
    677b:	48 89 e5             	mov    %rsp,%rbp
    677e:	48 83 ec 10          	sub    $0x10,%rsp
    6782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6786:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    678a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    678e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6792:	48 89 d6             	mov    %rdx,%rsi
    6795:	48 89 c7             	mov    %rax,%rdi
    6798:	e8 6d 0b 00 00       	call   730a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    679d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a5:	48 89 d6             	mov    %rdx,%rsi
    67a8:	48 89 c7             	mov    %rax,%rdi
    67ab:	e8 98 0b 00 00       	call   7348 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    67b0:	90                   	nop
    67b1:	c9                   	leave
    67b2:	c3                   	ret
    67b3:	90                   	nop

00000000000067b4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    67b4:	55                   	push   %rbp
    67b5:	48 89 e5             	mov    %rsp,%rbp
    67b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    67bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c0:	48 8b 40 10          	mov    0x10(%rax),%rax
    67c4:	5d                   	pop    %rbp
    67c5:	c3                   	ret

00000000000067c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    67c6:	55                   	push   %rbp
    67c7:	48 89 e5             	mov    %rsp,%rbp
    67ca:	53                   	push   %rbx
    67cb:	48 83 ec 18          	sub    $0x18,%rsp
    67cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    67d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    67d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67db:	48 89 c7             	mov    %rax,%rdi
    67de:	e8 9b 0b 00 00       	call   737e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    67e3:	48 89 c3             	mov    %rax,%rbx
    67e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67ea:	48 89 c7             	mov    %rax,%rdi
    67ed:	e8 92 f6 ff ff       	call   5e84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    67f2:	48 89 c6             	mov    %rax,%rsi
    67f5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    67f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67fd:	48 89 d1             	mov    %rdx,%rcx
    6800:	48 89 da             	mov    %rbx,%rdx
    6803:	48 89 c7             	mov    %rax,%rdi
    6806:	e8 85 0b 00 00       	call   7390 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    680b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    680f:	c9                   	leave
    6810:	c3                   	ret
    6811:	90                   	nop

0000000000006812 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6812:	55                   	push   %rbp
    6813:	48 89 e5             	mov    %rsp,%rbp
    6816:	48 83 ec 20          	sub    $0x20,%rsp
    681a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    681e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6822:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6826:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    682a:	48 89 d6             	mov    %rdx,%rsi
    682d:	48 89 c7             	mov    %rax,%rdi
    6830:	e8 39 06 00 00       	call   6e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    6835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6839:	c9                   	leave
    683a:	c3                   	ret
    683b:	90                   	nop

000000000000683c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    683c:	55                   	push   %rbp
    683d:	48 89 e5             	mov    %rsp,%rbp
    6840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    6844:	90                   	nop
    6845:	5d                   	pop    %rbp
    6846:	c3                   	ret
    6847:	90                   	nop

0000000000006848 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    6848:	55                   	push   %rbp
    6849:	48 89 e5             	mov    %rsp,%rbp
    684c:	48 83 ec 10          	sub    $0x10,%rsp
    6850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    6854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6858:	48 83 c0 20          	add    $0x20,%rax
    685c:	48 89 c7             	mov    %rax,%rdi
    685f:	e8 c2 0b 00 00       	call   7426 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    6864:	c9                   	leave
    6865:	c3                   	ret

0000000000006866 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    6866:	55                   	push   %rbp
    6867:	48 89 e5             	mov    %rsp,%rbp
    686a:	48 83 ec 10          	sub    $0x10,%rsp
    686e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6872:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    6876:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    687a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    687e:	48 89 d6             	mov    %rdx,%rsi
    6881:	48 89 c7             	mov    %rax,%rdi
    6884:	e8 a7 c7 ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    6889:	c1 e8 1f             	shr    $0x1f,%eax
    688c:	c9                   	leave
    688d:	c3                   	ret

000000000000688e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    688e:	55                   	push   %rbp
    688f:	48 89 e5             	mov    %rsp,%rbp
    6892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    689a:	5d                   	pop    %rbp
    689b:	c3                   	ret

000000000000689c <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    689c:	55                   	push   %rbp
    689d:	48 89 e5             	mov    %rsp,%rbp
    68a0:	53                   	push   %rbx
    68a1:	48 83 ec 18          	sub    $0x18,%rsp
    68a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    68a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    68ad:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    68b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    68b5:	48 89 c7             	mov    %rax,%rdi
    68b8:	e8 d1 ff ff ff       	call   688e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    68bd:	48 89 c6             	mov    %rax,%rsi
    68c0:	48 89 df             	mov    %rbx,%rdi
    68c3:	e8 78 0b 00 00       	call   7440 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    68c8:	90                   	nop
    68c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    68cd:	c9                   	leave
    68ce:	c3                   	ret

00000000000068cf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    68cf:	55                   	push   %rbp
    68d0:	48 89 e5             	mov    %rsp,%rbp
    68d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    68d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68db:	5d                   	pop    %rbp
    68dc:	c3                   	ret

00000000000068dd <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    68dd:	55                   	push   %rbp
    68de:	48 89 e5             	mov    %rsp,%rbp
    68e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    68e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68e9:	5d                   	pop    %rbp
    68ea:	c3                   	ret

00000000000068eb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    68eb:	55                   	push   %rbp
    68ec:	48 89 e5             	mov    %rsp,%rbp
    68ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    68f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68f7:	5d                   	pop    %rbp
    68f8:	c3                   	ret
    68f9:	90                   	nop

00000000000068fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    68fa:	55                   	push   %rbp
    68fb:	48 89 e5             	mov    %rsp,%rbp
    68fe:	41 54                	push   %r12
    6900:	53                   	push   %rbx
    6901:	48 83 ec 30          	sub    $0x30,%rsp
    6905:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6909:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    690d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6911:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    6915:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    6919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    691d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6921:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    6924:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6928:	48 89 c7             	mov    %rax,%rdi
    692b:	e8 bb ff ff ff       	call   68eb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    6930:	49 89 c4             	mov    %rax,%r12
    6933:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6937:	48 89 c7             	mov    %rax,%rdi
    693a:	e8 9e ff ff ff       	call   68dd <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    693f:	48 89 c3             	mov    %rax,%rbx
    6942:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6946:	48 89 c7             	mov    %rax,%rdi
    6949:	e8 81 ff ff ff       	call   68cf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    694e:	48 89 c6             	mov    %rax,%rsi
    6951:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6955:	4c 89 e1             	mov    %r12,%rcx
    6958:	48 89 da             	mov    %rbx,%rdx
    695b:	48 89 c7             	mov    %rax,%rdi
    695e:	e8 11 0b 00 00       	call   7474 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    6963:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6967:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    696b:	90                   	nop
    696c:	48 83 c4 30          	add    $0x30,%rsp
    6970:	5b                   	pop    %rbx
    6971:	41 5c                	pop    %r12
    6973:	5d                   	pop    %rbp
    6974:	c3                   	ret
    6975:	90                   	nop

0000000000006976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    6976:	55                   	push   %rbp
    6977:	48 89 e5             	mov    %rsp,%rbp
    697a:	48 83 ec 10          	sub    $0x10,%rsp
    697e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    6982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6986:	48 8b 40 08          	mov    0x8(%rax),%rax
    698a:	48 85 c0             	test   %rax,%rax
    698d:	74 1a                	je     69a9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    698f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6993:	48 8b 00             	mov    (%rax),%rax
    6996:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    699a:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    699e:	48 89 d6             	mov    %rdx,%rsi
    69a1:	48 89 c7             	mov    %rax,%rdi
    69a4:	e8 d1 fd ff ff       	call   677a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    69a9:	90                   	nop
    69aa:	c9                   	leave
    69ab:	c3                   	ret

00000000000069ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    69ac:	55                   	push   %rbp
    69ad:	48 89 e5             	mov    %rsp,%rbp
    69b0:	53                   	push   %rbx
    69b1:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    69b8:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    69bf:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    69c6:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    69cd:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    69d4:	48 89 c7             	mov    %rax,%rdi
    69d7:	e8 14 0b 00 00       	call   74f0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    69dc:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    69e3:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    69ea:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    69f1:	48 89 c7             	mov    %rax,%rdi
    69f4:	e8 85 09 00 00       	call   737e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    69f9:	48 39 c3             	cmp    %rax,%rbx
    69fc:	0f 94 c0             	sete   %al
    69ff:	84 c0                	test   %al,%al
    6a01:	0f 84 c8 00 00 00    	je     6acf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    6a07:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6a0e:	48 89 c7             	mov    %rax,%rdi
    6a11:	e8 02 0b 00 00       	call   7518 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    6a16:	48 85 c0             	test   %rax,%rax
    6a19:	74 44                	je     6a5f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    6a1b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6a22:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6a29:	48 89 c7             	mov    %rax,%rdi
    6a2c:	e8 f9 0a 00 00       	call   752a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6a31:	48 8b 00             	mov    (%rax),%rax
    6a34:	48 89 c7             	mov    %rax,%rdi
    6a37:	e8 00 0b 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6a3c:	48 89 c1             	mov    %rax,%rcx
    6a3f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6a46:	48 89 c2             	mov    %rax,%rdx
    6a49:	48 89 ce             	mov    %rcx,%rsi
    6a4c:	48 89 df             	mov    %rbx,%rdi
    6a4f:	e8 12 f5 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6a54:	84 c0                	test   %al,%al
    6a56:	74 07                	je     6a5f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    6a58:	b8 01 00 00 00       	mov    $0x1,%eax
    6a5d:	eb 05                	jmp    6a64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    6a5f:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    6a64:	84 c0                	test   %al,%al
    6a66:	74 49                	je     6ab1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    6a68:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6a6f:	48 89 c7             	mov    %rax,%rdi
    6a72:	e8 b3 0a 00 00       	call   752a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6a77:	48 89 c2             	mov    %rax,%rdx
    6a7a:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    6a81:	00 00 00 00 
    6a85:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    6a8c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    6a93:	48 89 ce             	mov    %rcx,%rsi
    6a96:	48 89 c7             	mov    %rax,%rdi
    6a99:	e8 b8 0a 00 00       	call   7556 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6a9e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    6aa5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    6aac:	e9 43 03 00 00       	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    6ab1:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6ab8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6abf:	48 89 d6             	mov    %rdx,%rsi
    6ac2:	48 89 c7             	mov    %rax,%rdi
    6ac5:	e8 bc 0a 00 00       	call   7586 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    6aca:	e9 25 03 00 00       	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    6acf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6ad6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6add:	48 89 c7             	mov    %rax,%rdi
    6ae0:	e8 57 0a 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6ae5:	48 89 c2             	mov    %rax,%rdx
    6ae8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6aef:	48 89 c6             	mov    %rax,%rsi
    6af2:	48 89 df             	mov    %rbx,%rdi
    6af5:	e8 6c f4 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6afa:	84 c0                	test   %al,%al
    6afc:	0f 84 66 01 00 00    	je     6c68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    6b02:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6b09:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    6b10:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    6b17:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6b1e:	48 89 c7             	mov    %rax,%rdi
    6b21:	e8 d6 0b 00 00       	call   76fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6b26:	48 8b 00             	mov    (%rax),%rax
    6b29:	48 39 c3             	cmp    %rax,%rbx
    6b2c:	0f 94 c0             	sete   %al
    6b2f:	84 c0                	test   %al,%al
    6b31:	74 4c                	je     6b7f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    6b33:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6b3a:	48 89 c7             	mov    %rax,%rdi
    6b3d:	e8 ba 0b 00 00       	call   76fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6b42:	48 89 c3             	mov    %rax,%rbx
    6b45:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6b4c:	48 89 c7             	mov    %rax,%rdi
    6b4f:	e8 a8 0b 00 00       	call   76fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6b54:	48 89 c1             	mov    %rax,%rcx
    6b57:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    6b5e:	48 89 da             	mov    %rbx,%rdx
    6b61:	48 89 ce             	mov    %rcx,%rsi
    6b64:	48 89 c7             	mov    %rax,%rdi
    6b67:	e8 a2 0b 00 00       	call   770e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    6b6c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    6b73:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    6b7a:	e9 75 02 00 00       	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    6b7f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6b86:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    6b8d:	48 89 c7             	mov    %rax,%rdi
    6b90:	e8 bd 0b 00 00       	call   7752 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    6b95:	48 8b 00             	mov    (%rax),%rax
    6b98:	48 89 c7             	mov    %rax,%rdi
    6b9b:	e8 9c 09 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6ba0:	48 89 c1             	mov    %rax,%rcx
    6ba3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6baa:	48 89 c2             	mov    %rax,%rdx
    6bad:	48 89 ce             	mov    %rcx,%rsi
    6bb0:	48 89 df             	mov    %rbx,%rdi
    6bb3:	e8 ae f3 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6bb8:	84 c0                	test   %al,%al
    6bba:	0f 84 8a 00 00 00    	je     6c4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    6bc0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6bc7:	48 89 c7             	mov    %rax,%rdi
    6bca:	e8 86 fb ff ff       	call   6755 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    6bcf:	48 85 c0             	test   %rax,%rax
    6bd2:	0f 94 c0             	sete   %al
    6bd5:	84 c0                	test   %al,%al
    6bd7:	74 3e                	je     6c17 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    6bd9:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    6be0:	00 00 00 00 
    6be4:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    6beb:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    6bf2:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    6bf9:	48 89 ce             	mov    %rcx,%rsi
    6bfc:	48 89 c7             	mov    %rax,%rdi
    6bff:	e8 52 09 00 00       	call   7556 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6c04:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    6c0b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    6c12:	e9 dd 01 00 00       	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    6c17:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    6c1e:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    6c25:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    6c2c:	48 89 ce             	mov    %rcx,%rsi
    6c2f:	48 89 c7             	mov    %rax,%rdi
    6c32:	e8 d7 0a 00 00       	call   770e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    6c37:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6c3e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6c45:	e9 aa 01 00 00       	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    6c4a:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6c51:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6c58:	48 89 d6             	mov    %rdx,%rsi
    6c5b:	48 89 c7             	mov    %rax,%rdi
    6c5e:	e8 23 09 00 00       	call   7586 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    6c63:	e9 8c 01 00 00       	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    6c68:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6c6f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6c76:	48 89 c7             	mov    %rax,%rdi
    6c79:	e8 be 08 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6c7e:	48 89 c1             	mov    %rax,%rcx
    6c81:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6c88:	48 89 c2             	mov    %rax,%rdx
    6c8b:	48 89 ce             	mov    %rcx,%rsi
    6c8e:	48 89 df             	mov    %rbx,%rdi
    6c91:	e8 d0 f2 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6c96:	84 c0                	test   %al,%al
    6c98:	0f 84 2c 01 00 00    	je     6dca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    6c9e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6ca5:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    6cac:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    6cb3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6cba:	48 89 c7             	mov    %rax,%rdi
    6cbd:	e8 68 08 00 00       	call   752a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6cc2:	48 8b 00             	mov    (%rax),%rax
    6cc5:	48 39 c3             	cmp    %rax,%rbx
    6cc8:	0f 94 c0             	sete   %al
    6ccb:	84 c0                	test   %al,%al
    6ccd:	74 3a                	je     6d09 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    6ccf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6cd6:	48 89 c7             	mov    %rax,%rdi
    6cd9:	e8 4c 08 00 00       	call   752a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6cde:	48 89 c2             	mov    %rax,%rdx
    6ce1:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    6ce8:	00 
    6ce9:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    6ced:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6cf1:	48 89 ce             	mov    %rcx,%rsi
    6cf4:	48 89 c7             	mov    %rax,%rdi
    6cf7:	e8 5a 08 00 00       	call   7556 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6cfc:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6d00:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    6d04:	e9 eb 00 00 00       	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    6d09:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6d10:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    6d17:	48 89 c7             	mov    %rax,%rdi
    6d1a:	e8 5b 0a 00 00       	call   777a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    6d1f:	48 8b 00             	mov    (%rax),%rax
    6d22:	48 89 c7             	mov    %rax,%rdi
    6d25:	e8 12 08 00 00       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6d2a:	48 89 c2             	mov    %rax,%rdx
    6d2d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6d34:	48 89 c6             	mov    %rax,%rsi
    6d37:	48 89 df             	mov    %rbx,%rdi
    6d3a:	e8 27 f2 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6d3f:	84 c0                	test   %al,%al
    6d41:	74 6c                	je     6daf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    6d43:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6d4a:	48 89 c7             	mov    %rax,%rdi
    6d4d:	e8 03 fa ff ff       	call   6755 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    6d52:	48 85 c0             	test   %rax,%rax
    6d55:	0f 94 c0             	sete   %al
    6d58:	84 c0                	test   %al,%al
    6d5a:	74 2c                	je     6d88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    6d5c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    6d63:	00 
    6d64:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    6d6b:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    6d6f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6d73:	48 89 ce             	mov    %rcx,%rsi
    6d76:	48 89 c7             	mov    %rax,%rdi
    6d79:	e8 d8 07 00 00       	call   7556 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6d7e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6d82:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6d86:	eb 6c                	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    6d88:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    6d8f:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    6d96:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6d9a:	48 89 ce             	mov    %rcx,%rsi
    6d9d:	48 89 c7             	mov    %rax,%rdi
    6da0:	e8 69 09 00 00       	call   770e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    6da5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6da9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6dad:	eb 45                	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    6daf:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6db6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6dbd:	48 89 d6             	mov    %rdx,%rsi
    6dc0:	48 89 c7             	mov    %rax,%rdi
    6dc3:	e8 be 07 00 00       	call   7586 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    6dc8:	eb 2a                	jmp    6df4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    6dca:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6dd1:	00 
    6dd2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6dd6:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    6ddd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6de1:	48 89 ce             	mov    %rcx,%rsi
    6de4:	48 89 c7             	mov    %rax,%rdi
    6de7:	e8 6a 07 00 00       	call   7556 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6dec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6df0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    6df4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6df8:	c9                   	leave
    6df9:	c3                   	ret

0000000000006dfa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    6dfa:	55                   	push   %rbp
    6dfb:	48 89 e5             	mov    %rsp,%rbp
    6dfe:	48 83 ec 10          	sub    $0x10,%rsp
    6e02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    6e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e0a:	48 8b 40 08          	mov    0x8(%rax),%rax
    6e0e:	48 89 c7             	mov    %rax,%rdi
    6e11:	e8 8c 09 00 00       	call   77a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    6e16:	c9                   	leave
    6e17:	c3                   	ret

0000000000006e18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    6e18:	55                   	push   %rbp
    6e19:	48 89 e5             	mov    %rsp,%rbp
    6e1c:	48 83 ec 30          	sub    $0x30,%rsp
    6e20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e24:	48 89 d1             	mov    %rdx,%rcx
    6e27:	48 89 f0             	mov    %rsi,%rax
    6e2a:	48 89 fa             	mov    %rdi,%rdx
    6e2d:	48 89 ca             	mov    %rcx,%rdx
    6e30:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6e34:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    6e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e3c:	48 8b 00             	mov    (%rax),%rax
    6e3f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e43:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    6e47:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6e4b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6e4f:	48 89 c7             	mov    %rax,%rdi
    6e52:	e8 77 09 00 00       	call   77ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    6e57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    6e5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e5f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6e66:	00 
	  return __it;
    6e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    6e6b:	c9                   	leave
    6e6c:	c3                   	ret
    6e6d:	90                   	nop

0000000000006e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    6e6e:	55                   	push   %rbp
    6e6f:	48 89 e5             	mov    %rsp,%rbp
    6e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    6e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e82:	48 89 10             	mov    %rdx,(%rax)
    6e85:	90                   	nop
    6e86:	5d                   	pop    %rbp
    6e87:	c3                   	ret

0000000000006e88 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6e88:	55                   	push   %rbp
    6e89:	48 89 e5             	mov    %rsp,%rbp
    6e8c:	48 83 ec 20          	sub    $0x20,%rsp
    6e90:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6e94:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6e9b:	ff ff 0f 
    6e9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6ea2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ea6:	48 89 c7             	mov    %rax,%rdi
    6ea9:	e8 e3 09 00 00       	call   7891 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    6eae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6eb2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6eb6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6eba:	48 89 d6             	mov    %rdx,%rsi
    6ebd:	48 89 c7             	mov    %rax,%rdi
    6ec0:	e8 1d 01 00 00       	call   6fe2 <_ZSt3minImERKT_S2_S2_>
    6ec5:	48 8b 00             	mov    (%rax),%rax
      }
    6ec8:	c9                   	leave
    6ec9:	c3                   	ret

0000000000006eca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6eca:	55                   	push   %rbp
    6ecb:	48 89 e5             	mov    %rsp,%rbp
    6ece:	48 83 ec 10          	sub    $0x10,%rsp
    6ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ed6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6eda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ee2:	48 89 d6             	mov    %rdx,%rsi
    6ee5:	48 89 c7             	mov    %rax,%rdi
    6ee8:	e8 53 f3 ff ff       	call   6240 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6eed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ef1:	48 89 c7             	mov    %rax,%rdi
    6ef4:	e8 b3 09 00 00       	call   78ac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6ef9:	90                   	nop
    6efa:	c9                   	leave
    6efb:	c3                   	ret

0000000000006efc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6efc:	55                   	push   %rbp
    6efd:	48 89 e5             	mov    %rsp,%rbp
    6f00:	48 83 ec 10          	sub    $0x10,%rsp
    6f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6f0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f14:	48 89 d6             	mov    %rdx,%rsi
    6f17:	48 89 c7             	mov    %rax,%rdi
    6f1a:	e8 bb 09 00 00       	call   78da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    6f1f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6f23:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f2a:	48 8b 10             	mov    (%rax),%rdx
    6f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f31:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6f35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f39:	48 8b 00             	mov    (%rax),%rax
    6f3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f40:	48 c1 e2 03          	shl    $0x3,%rdx
    6f44:	48 01 c2             	add    %rax,%rdx
    6f47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f4b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6f4f:	90                   	nop
    6f50:	c9                   	leave
    6f51:	c3                   	ret

0000000000006f52 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6f52:	55                   	push   %rbp
    6f53:	48 89 e5             	mov    %rsp,%rbp
    6f56:	48 83 ec 20          	sub    $0x20,%rsp
    6f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6f66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f6e:	48 89 d6             	mov    %rdx,%rsi
    6f71:	48 89 c7             	mov    %rax,%rdi
    6f74:	e8 94 09 00 00       	call   790d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    6f79:	c9                   	leave
    6f7a:	c3                   	ret
    6f7b:	90                   	nop

0000000000006f7c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6f7c:	55                   	push   %rbp
    6f7d:	48 89 e5             	mov    %rsp,%rbp
    6f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f88:	90                   	nop
    6f89:	5d                   	pop    %rbp
    6f8a:	c3                   	ret

0000000000006f8b <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6f8b:	55                   	push   %rbp
    6f8c:	48 89 e5             	mov    %rsp,%rbp
    6f8f:	48 83 ec 20          	sub    $0x20,%rsp
    6f93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6f9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6fa3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6fa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fab:	48 89 ce             	mov    %rcx,%rsi
    6fae:	48 89 c7             	mov    %rax,%rdi
    6fb1:	e8 80 09 00 00       	call   7936 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    6fb6:	90                   	nop
    6fb7:	c9                   	leave
    6fb8:	c3                   	ret

0000000000006fb9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6fb9:	55                   	push   %rbp
    6fba:	48 89 e5             	mov    %rsp,%rbp
    6fbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fc1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6fc5:	90                   	nop
    6fc6:	5d                   	pop    %rbp
    6fc7:	c3                   	ret

0000000000006fc8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6fc8:	55                   	push   %rbp
    6fc9:	48 89 e5             	mov    %rsp,%rbp
    6fcc:	48 83 ec 10          	sub    $0x10,%rsp
    6fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fd8:	48 89 c7             	mov    %rax,%rdi
    6fdb:	e8 88 09 00 00       	call   7968 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    6fe0:	c9                   	leave
    6fe1:	c3                   	ret

0000000000006fe2 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    6fe2:	55                   	push   %rbp
    6fe3:	48 89 e5             	mov    %rsp,%rbp
    6fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    6fee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ff2:	48 8b 10             	mov    (%rax),%rdx
    6ff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ff9:	48 8b 00             	mov    (%rax),%rax
    6ffc:	48 39 c2             	cmp    %rax,%rdx
    6fff:	73 06                	jae    7007 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    7001:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7005:	eb 04                	jmp    700b <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    7007:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    700b:	5d                   	pop    %rbp
    700c:	c3                   	ret
    700d:	90                   	nop

000000000000700e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    700e:	55                   	push   %rbp
    700f:	48 89 e5             	mov    %rsp,%rbp
    7012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7016:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    701a:	90                   	nop
    701b:	5d                   	pop    %rbp
    701c:	c3                   	ret
    701d:	90                   	nop

000000000000701e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    701e:	55                   	push   %rbp
    701f:	48 89 e5             	mov    %rsp,%rbp
    7022:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    702a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7031:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7035:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    703c:	00 
    703d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7041:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7048:	00 
	{ }
    7049:	90                   	nop
    704a:	5d                   	pop    %rbp
    704b:	c3                   	ret

000000000000704c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    704c:	55                   	push   %rbp
    704d:	48 89 e5             	mov    %rsp,%rbp
    7050:	48 83 ec 10          	sub    $0x10,%rsp
    7054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7058:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    705c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7061:	74 15                	je     7078 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    7063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7067:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    706b:	48 89 d6             	mov    %rdx,%rsi
    706e:	48 89 c7             	mov    %rax,%rdi
    7071:	e8 0c 09 00 00       	call   7982 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    7076:	eb 05                	jmp    707d <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    7078:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    707d:	c9                   	leave
    707e:	c3                   	ret

000000000000707f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    707f:	55                   	push   %rbp
    7080:	48 89 e5             	mov    %rsp,%rbp
    7083:	48 83 ec 20          	sub    $0x20,%rsp
    7087:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    708b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    708f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7093:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7097:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    709b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    709f:	48 89 ce             	mov    %rcx,%rsi
    70a2:	48 89 c7             	mov    %rax,%rdi
    70a5:	e8 02 09 00 00       	call   79ac <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    70aa:	90                   	nop
    70ab:	c9                   	leave
    70ac:	c3                   	ret

00000000000070ad <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    70ad:	55                   	push   %rbp
    70ae:	48 89 e5             	mov    %rsp,%rbp
    70b1:	48 83 ec 20          	sub    $0x20,%rsp
    70b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    70b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    70bd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    70c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    70c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70c9:	48 89 d6             	mov    %rdx,%rsi
    70cc:	48 89 c7             	mov    %rax,%rdi
    70cf:	e8 11 09 00 00       	call   79e5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    70d4:	c9                   	leave
    70d5:	c3                   	ret

00000000000070d6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    70d6:	55                   	push   %rbp
    70d7:	48 89 e5             	mov    %rsp,%rbp
    70da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    70e2:	90                   	nop
    70e3:	5d                   	pop    %rbp
    70e4:	c3                   	ret
    70e5:	90                   	nop

00000000000070e6 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    70e6:	55                   	push   %rbp
    70e7:	48 89 e5             	mov    %rsp,%rbp
    70ea:	48 83 ec 10          	sub    $0x10,%rsp
    70ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    70f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    70fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70fe:	48 89 d6             	mov    %rdx,%rsi
    7101:	48 89 c7             	mov    %rax,%rdi
    7104:	e8 39 09 00 00       	call   7a42 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    7109:	90                   	nop
    710a:	c9                   	leave
    710b:	c3                   	ret

000000000000710c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    710c:	55                   	push   %rbp
    710d:	48 89 e5             	mov    %rsp,%rbp
    7110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7118:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    711f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7123:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    712a:	00 
    712b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    712f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7136:	00 
	{ }
    7137:	90                   	nop
    7138:	5d                   	pop    %rbp
    7139:	c3                   	ret

000000000000713a <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    713a:	55                   	push   %rbp
    713b:	48 89 e5             	mov    %rsp,%rbp
    713e:	48 83 ec 20          	sub    $0x20,%rsp
    7142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7146:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    714a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    714e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7152:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    715a:	48 89 ce             	mov    %rcx,%rsi
    715d:	48 89 c7             	mov    %rax,%rdi
    7160:	e8 ed 08 00 00       	call   7a52 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    7165:	90                   	nop
    7166:	c9                   	leave
    7167:	c3                   	ret

0000000000007168 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7168:	55                   	push   %rbp
    7169:	48 89 e5             	mov    %rsp,%rbp
    716c:	48 83 ec 20          	sub    $0x20,%rsp
    7170:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7174:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    717b:	ff ff 0f 
    717e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7182:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7186:	48 89 c7             	mov    %rax,%rdi
    7189:	e8 f5 08 00 00       	call   7a83 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    718e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7192:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7196:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    719a:	48 89 d6             	mov    %rdx,%rsi
    719d:	48 89 c7             	mov    %rax,%rdi
    71a0:	e8 3d fe ff ff       	call   6fe2 <_ZSt3minImERKT_S2_S2_>
    71a5:	48 8b 00             	mov    (%rax),%rax
      }
    71a8:	c9                   	leave
    71a9:	c3                   	ret

00000000000071aa <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    71aa:	55                   	push   %rbp
    71ab:	48 89 e5             	mov    %rsp,%rbp
    71ae:	48 83 ec 10          	sub    $0x10,%rsp
    71b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    71ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    71be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c2:	ba 00 00 00 00       	mov    $0x0,%edx
    71c7:	48 89 ce             	mov    %rcx,%rsi
    71ca:	48 89 c7             	mov    %rax,%rdi
    71cd:	e8 cc 08 00 00       	call   7a9e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    71d2:	c9                   	leave
    71d3:	c3                   	ret

00000000000071d4 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    71d4:	55                   	push   %rbp
    71d5:	48 89 e5             	mov    %rsp,%rbp
    71d8:	48 83 ec 30          	sub    $0x30,%rsp
    71dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    71e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    71e4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    71e8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    71ec:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    71f0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    71f4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    71f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    71fc:	48 89 ce             	mov    %rcx,%rsi
    71ff:	48 89 c7             	mov    %rax,%rdi
    7202:	e8 f8 08 00 00       	call   7aff <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    7207:	c9                   	leave
    7208:	c3                   	ret

0000000000007209 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    7209:	55                   	push   %rbp
    720a:	48 89 e5             	mov    %rsp,%rbp
    720d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7211:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7215:	90                   	nop
    7216:	5d                   	pop    %rbp
    7217:	c3                   	ret

0000000000007218 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7218:	55                   	push   %rbp
    7219:	48 89 e5             	mov    %rsp,%rbp
    721c:	48 83 ec 10          	sub    $0x10,%rsp
    7220:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7228:	48 89 c7             	mov    %rax,%rdi
    722b:	e8 fc 08 00 00       	call   7b2c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    7230:	c9                   	leave
    7231:	c3                   	ret

0000000000007232 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    7232:	55                   	push   %rbp
    7233:	48 89 e5             	mov    %rsp,%rbp
    7236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    723a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    723e:	90                   	nop
    723f:	5d                   	pop    %rbp
    7240:	c3                   	ret
    7241:	90                   	nop

0000000000007242 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7242:	55                   	push   %rbp
    7243:	48 89 e5             	mov    %rsp,%rbp
    7246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    724a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    724e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7255:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7259:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7260:	00 
    7261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7265:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    726c:	00 
	{ }
    726d:	90                   	nop
    726e:	5d                   	pop    %rbp
    726f:	c3                   	ret

0000000000007270 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7270:	55                   	push   %rbp
    7271:	48 89 e5             	mov    %rsp,%rbp
    7274:	48 83 ec 10          	sub    $0x10,%rsp
    7278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    727c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7280:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7285:	74 15                	je     729c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    7287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    728b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    728f:	48 89 d6             	mov    %rdx,%rsi
    7292:	48 89 c7             	mov    %rax,%rdi
    7295:	e8 ac 08 00 00       	call   7b46 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    729a:	eb 05                	jmp    72a1 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    729c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    72a1:	c9                   	leave
    72a2:	c3                   	ret

00000000000072a3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    72a3:	55                   	push   %rbp
    72a4:	48 89 e5             	mov    %rsp,%rbp
    72a7:	48 83 ec 20          	sub    $0x20,%rsp
    72ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    72b3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    72b7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72bb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    72bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72c3:	48 89 ce             	mov    %rcx,%rsi
    72c6:	48 89 c7             	mov    %rax,%rdi
    72c9:	e8 a2 08 00 00       	call   7b70 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    72ce:	90                   	nop
    72cf:	c9                   	leave
    72d0:	c3                   	ret

00000000000072d1 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    72d1:	55                   	push   %rbp
    72d2:	48 89 e5             	mov    %rsp,%rbp
    72d5:	48 83 ec 20          	sub    $0x20,%rsp
    72d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    72dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    72e1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    72e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    72e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72ed:	48 89 d6             	mov    %rdx,%rsi
    72f0:	48 89 c7             	mov    %rax,%rdi
    72f3:	e8 b2 08 00 00       	call   7baa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    72f8:	c9                   	leave
    72f9:	c3                   	ret

00000000000072fa <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    72fa:	55                   	push   %rbp
    72fb:	48 89 e5             	mov    %rsp,%rbp
    72fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7302:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7306:	90                   	nop
    7307:	5d                   	pop    %rbp
    7308:	c3                   	ret
    7309:	90                   	nop

000000000000730a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    730a:	55                   	push   %rbp
    730b:	48 89 e5             	mov    %rsp,%rbp
    730e:	53                   	push   %rbx
    730f:	48 83 ec 18          	sub    $0x18,%rsp
    7313:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7317:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    731b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    731f:	48 89 c7             	mov    %rax,%rdi
    7322:	e8 21 f5 ff ff       	call   6848 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    7327:	48 89 c3             	mov    %rax,%rbx
    732a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    732e:	48 89 c7             	mov    %rax,%rdi
    7331:	e8 d4 08 00 00       	call   7c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7336:	48 89 de             	mov    %rbx,%rsi
    7339:	48 89 c7             	mov    %rax,%rdi
    733c:	e8 d7 08 00 00       	call   7c18 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    7341:	90                   	nop
    7342:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7346:	c9                   	leave
    7347:	c3                   	ret

0000000000007348 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    7348:	55                   	push   %rbp
    7349:	48 89 e5             	mov    %rsp,%rbp
    734c:	48 83 ec 10          	sub    $0x10,%rsp
    7350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    7358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    735c:	48 89 c7             	mov    %rax,%rdi
    735f:	e8 a6 08 00 00       	call   7c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7364:	48 89 c1             	mov    %rax,%rcx
    7367:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    736b:	ba 01 00 00 00       	mov    $0x1,%edx
    7370:	48 89 c6             	mov    %rax,%rsi
    7373:	48 89 cf             	mov    %rcx,%rdi
    7376:	e8 c3 08 00 00       	call   7c3e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    737b:	90                   	nop
    737c:	c9                   	leave
    737d:	c3                   	ret

000000000000737e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    737e:	55                   	push   %rbp
    737f:	48 89 e5             	mov    %rsp,%rbp
    7382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    7386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    738a:	48 83 c0 08          	add    $0x8,%rax
    738e:	5d                   	pop    %rbp
    738f:	c3                   	ret

0000000000007390 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    7390:	55                   	push   %rbp
    7391:	48 89 e5             	mov    %rsp,%rbp
    7394:	53                   	push   %rbx
    7395:	48 83 ec 38          	sub    $0x38,%rsp
    7399:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    739d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    73a1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    73a5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    73a9:	eb 56                	jmp    7401 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    73ab:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    73af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73b3:	48 89 c7             	mov    %rax,%rdi
    73b6:	e8 e7 03 00 00       	call   77a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    73bb:	48 89 c1             	mov    %rax,%rcx
    73be:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    73c2:	48 89 c2             	mov    %rax,%rdx
    73c5:	48 89 ce             	mov    %rcx,%rsi
    73c8:	48 89 df             	mov    %rbx,%rdi
    73cb:	e8 96 eb ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    73d0:	83 f0 01             	xor    $0x1,%eax
    73d3:	84 c0                	test   %al,%al
    73d5:	74 1a                	je     73f1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    73d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73db:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    73df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73e3:	48 89 c7             	mov    %rax,%rdi
    73e6:	e8 7c f3 ff ff       	call   6767 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    73eb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    73ef:	eb 10                	jmp    7401 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    73f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    73f5:	48 89 c7             	mov    %rax,%rdi
    73f8:	e8 58 f3 ff ff       	call   6755 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    73fd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    7401:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    7406:	75 a3                	jne    73ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    7408:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    740c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7410:	48 89 d6             	mov    %rdx,%rsi
    7413:	48 89 c7             	mov    %rax,%rdi
    7416:	e8 53 fa ff ff       	call   6e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    741b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    741f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7423:	c9                   	leave
    7424:	c3                   	ret
    7425:	90                   	nop

0000000000007426 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    7426:	55                   	push   %rbp
    7427:	48 89 e5             	mov    %rsp,%rbp
    742a:	48 83 ec 10          	sub    $0x10,%rsp
    742e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    7432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7436:	48 89 c7             	mov    %rax,%rdi
    7439:	e8 2e 08 00 00       	call   7c6c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    743e:	c9                   	leave
    743f:	c3                   	ret

0000000000007440 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    7440:	55                   	push   %rbp
    7441:	48 89 e5             	mov    %rsp,%rbp
    7444:	53                   	push   %rbx
    7445:	48 83 ec 18          	sub    $0x18,%rsp
    7449:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    744d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    7451:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7455:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7459:	48 89 c7             	mov    %rax,%rdi
    745c:	e8 2d f4 ff ff       	call   688e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    7461:	48 89 c6             	mov    %rax,%rsi
    7464:	48 89 df             	mov    %rbx,%rdi
    7467:	e8 0e 08 00 00       	call   7c7a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    746c:	90                   	nop
    746d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7471:	c9                   	leave
    7472:	c3                   	ret
    7473:	90                   	nop

0000000000007474 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    7474:	55                   	push   %rbp
    7475:	48 89 e5             	mov    %rsp,%rbp
    7478:	41 54                	push   %r12
    747a:	53                   	push   %rbx
    747b:	48 83 ec 30          	sub    $0x30,%rsp
    747f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7483:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7487:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    748b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    748f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7493:	48 89 c7             	mov    %rax,%rdi
    7496:	e8 05 08 00 00       	call   7ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    749b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    749f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    74a3:	48 89 c7             	mov    %rax,%rdi
    74a6:	e8 40 f4 ff ff       	call   68eb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    74ab:	49 89 c4             	mov    %rax,%r12
    74ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    74b2:	48 89 c7             	mov    %rax,%rdi
    74b5:	e8 23 f4 ff ff       	call   68dd <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    74ba:	48 89 c3             	mov    %rax,%rbx
    74bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    74c1:	48 89 c7             	mov    %rax,%rdi
    74c4:	e8 06 f4 ff ff       	call   68cf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    74c9:	48 89 c2             	mov    %rax,%rdx
    74cc:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    74d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74d4:	4d 89 e0             	mov    %r12,%r8
    74d7:	48 89 d9             	mov    %rbx,%rcx
    74da:	48 89 c7             	mov    %rax,%rdi
    74dd:	e8 e6 07 00 00       	call   7cc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    74e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    74e6:	48 83 c4 30          	add    $0x30,%rsp
    74ea:	5b                   	pop    %rbx
    74eb:	41 5c                	pop    %r12
    74ed:	5d                   	pop    %rbp
    74ee:	c3                   	ret
    74ef:	90                   	nop

00000000000074f0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    74f0:	55                   	push   %rbp
    74f1:	48 89 e5             	mov    %rsp,%rbp
    74f4:	48 83 ec 20          	sub    $0x20,%rsp
    74f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    74fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7500:	48 8b 10             	mov    (%rax),%rdx
    7503:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7507:	48 89 d6             	mov    %rdx,%rsi
    750a:	48 89 c7             	mov    %rax,%rdi
    750d:	e8 5c f9 ff ff       	call   6e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    7512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7516:	c9                   	leave
    7517:	c3                   	ret

0000000000007518 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7518:	55                   	push   %rbp
    7519:	48 89 e5             	mov    %rsp,%rbp
    751c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    7520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7524:	48 8b 40 28          	mov    0x28(%rax),%rax
    7528:	5d                   	pop    %rbp
    7529:	c3                   	ret

000000000000752a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    752a:	55                   	push   %rbp
    752b:	48 89 e5             	mov    %rsp,%rbp
    752e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    7532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7536:	48 83 c0 20          	add    $0x20,%rax
    753a:	5d                   	pop    %rbp
    753b:	c3                   	ret

000000000000753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    753c:	55                   	push   %rbp
    753d:	48 89 e5             	mov    %rsp,%rbp
    7540:	48 83 ec 10          	sub    $0x10,%rsp
    7544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    7548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    754c:	48 89 c7             	mov    %rax,%rdi
    754f:	e8 4e 02 00 00       	call   77a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    7554:	c9                   	leave
    7555:	c3                   	ret

0000000000007556 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
    7556:	55                   	push   %rbp
    7557:	48 89 e5             	mov    %rsp,%rbp
    755a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    755e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7562:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    7566:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    756a:	48 8b 10             	mov    (%rax),%rdx
    756d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7571:	48 89 10             	mov    %rdx,(%rax)
    7574:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7578:	48 8b 10             	mov    (%rax),%rdx
    757b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    757f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7583:	90                   	nop
    7584:	5d                   	pop    %rbp
    7585:	c3                   	ret

0000000000007586 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    7586:	55                   	push   %rbp
    7587:	48 89 e5             	mov    %rsp,%rbp
    758a:	53                   	push   %rbx
    758b:	48 83 ec 78          	sub    $0x78,%rsp
    758f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    7593:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    7597:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    759b:	48 89 c7             	mov    %rax,%rdi
    759e:	e8 e1 e8 ff ff       	call   5e84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    75a3:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    75a7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    75ab:	48 89 c7             	mov    %rax,%rdi
    75ae:	e8 cb fd ff ff       	call   737e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    75b3:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    75b7:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    75bb:	eb 51                	jmp    760e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    75bd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    75c1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    75c5:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    75c9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    75cd:	48 89 c7             	mov    %rax,%rdi
    75d0:	e8 cd 01 00 00       	call   77a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    75d5:	48 89 c2             	mov    %rax,%rdx
    75d8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    75dc:	48 89 c6             	mov    %rax,%rsi
    75df:	48 89 df             	mov    %rbx,%rdi
    75e2:	e8 7f e9 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    75e7:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    75ea:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    75ee:	74 0e                	je     75fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    75f0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    75f4:	48 89 c7             	mov    %rax,%rdi
    75f7:	e8 6b f1 ff ff       	call   6767 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    75fc:	eb 0c                	jmp    760a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    75fe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7602:	48 89 c7             	mov    %rax,%rdi
    7605:	e8 4b f1 ff ff       	call   6755 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    760a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    760e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7612:	48 85 c0             	test   %rax,%rax
    7615:	75 a6                	jne    75bd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    7617:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    761b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    761f:	48 89 d6             	mov    %rdx,%rsi
    7622:	48 89 c7             	mov    %rax,%rdi
    7625:	e8 44 f8 ff ff       	call   6e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    762a:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    762e:	74 54                	je     7684 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    7630:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7634:	48 89 c7             	mov    %rax,%rdi
    7637:	e8 5e 07 00 00       	call   7d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    763c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7640:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    7644:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7648:	48 89 d6             	mov    %rdx,%rsi
    764b:	48 89 c7             	mov    %rax,%rdi
    764e:	e8 b7 e8 ff ff       	call   5f0a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    7653:	84 c0                	test   %al,%al
    7655:	74 21                	je     7678 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    7657:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    765b:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    765f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7663:	48 89 ce             	mov    %rcx,%rsi
    7666:	48 89 c7             	mov    %rax,%rdi
    7669:	e8 56 07 00 00       	call   7dc4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    766e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7672:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7676:	eb 7d                	jmp    76f5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    7678:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    767c:	48 89 c7             	mov    %rax,%rdi
    767f:	e8 ce 00 00 00       	call   7752 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    7684:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    7688:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    768c:	48 89 c7             	mov    %rax,%rdi
    768f:	e8 a8 fe ff ff       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7694:	48 89 c1             	mov    %rax,%rcx
    7697:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    769b:	48 89 c2             	mov    %rax,%rdx
    769e:	48 89 ce             	mov    %rcx,%rsi
    76a1:	48 89 df             	mov    %rbx,%rdi
    76a4:	e8 bd e8 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    76a9:	84 c0                	test   %al,%al
    76ab:	74 21                	je     76ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    76ad:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    76b1:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    76b5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    76b9:	48 89 ce             	mov    %rcx,%rsi
    76bc:	48 89 c7             	mov    %rax,%rdi
    76bf:	e8 00 07 00 00       	call   7dc4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    76c4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    76c8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    76cc:	eb 27                	jmp    76f5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    76ce:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    76d5:	00 
    76d6:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    76da:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    76de:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    76e2:	48 89 ce             	mov    %rcx,%rsi
    76e5:	48 89 c7             	mov    %rax,%rdi
    76e8:	e8 69 fe ff ff       	call   7556 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    76ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    76f1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    76f5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    76f9:	c9                   	leave
    76fa:	c3                   	ret
    76fb:	90                   	nop

00000000000076fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    76fc:	55                   	push   %rbp
    76fd:	48 89 e5             	mov    %rsp,%rbp
    7700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    7704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7708:	48 83 c0 18          	add    $0x18,%rax
    770c:	5d                   	pop    %rbp
    770d:	c3                   	ret

000000000000770e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    770e:	55                   	push   %rbp
    770f:	48 89 e5             	mov    %rsp,%rbp
    7712:	48 83 ec 20          	sub    $0x20,%rsp
    7716:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    771a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    771e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    7722:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7726:	48 89 c7             	mov    %rax,%rdi
    7729:	e8 da 06 00 00       	call   7e08 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    772e:	48 8b 10             	mov    (%rax),%rdx
    7731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7735:	48 89 10             	mov    %rdx,(%rax)
    7738:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    773c:	48 89 c7             	mov    %rax,%rdi
    773f:	e8 c4 06 00 00       	call   7e08 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    7744:	48 8b 10             	mov    (%rax),%rdx
    7747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    774b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    774f:	90                   	nop
    7750:	c9                   	leave
    7751:	c3                   	ret

0000000000007752 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    7752:	55                   	push   %rbp
    7753:	48 89 e5             	mov    %rsp,%rbp
    7756:	48 83 ec 10          	sub    $0x10,%rsp
    775a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    775e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7762:	48 8b 00             	mov    (%rax),%rax
    7765:	48 89 c7             	mov    %rax,%rdi
    7768:	e8 f3 ba ff ff       	call   3260 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    776d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7771:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    7774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7778:	c9                   	leave
    7779:	c3                   	ret

000000000000777a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    777a:	55                   	push   %rbp
    777b:	48 89 e5             	mov    %rsp,%rbp
    777e:	48 83 ec 10          	sub    $0x10,%rsp
    7782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    7786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    778a:	48 8b 00             	mov    (%rax),%rax
    778d:	48 89 c7             	mov    %rax,%rdi
    7790:	e8 9b b9 ff ff       	call   3130 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    7795:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7799:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    779c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    77a0:	c9                   	leave
    77a1:	c3                   	ret

00000000000077a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    77a2:	55                   	push   %rbp
    77a3:	48 89 e5             	mov    %rsp,%rbp
    77a6:	48 83 ec 20          	sub    $0x20,%rsp
    77aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    77ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77b2:	48 89 c7             	mov    %rax,%rdi
    77b5:	e8 5c 06 00 00       	call   7e16 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    77ba:	48 89 c2             	mov    %rax,%rdx
    77bd:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    77c1:	48 89 d6             	mov    %rdx,%rsi
    77c4:	48 89 c7             	mov    %rax,%rdi
    77c7:	e8 68 06 00 00       	call   7e34 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    77cc:	c9                   	leave
    77cd:	c3                   	ret

00000000000077ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    77ce:	55                   	push   %rbp
    77cf:	48 89 e5             	mov    %rsp,%rbp
    77d2:	41 54                	push   %r12
    77d4:	53                   	push   %rbx
    77d5:	48 83 ec 30          	sub    $0x30,%rsp
    77d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    77dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    77e1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    77e5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    77e9:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    77ee:	75 43                	jne    7833 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    77f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77f4:	48 89 c7             	mov    %rax,%rdi
    77f7:	e8 82 fb ff ff       	call   737e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    77fc:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    7800:	74 31                	je     7833 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    7802:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    7806:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    780a:	48 89 c7             	mov    %rax,%rdi
    780d:	e8 2a fd ff ff       	call   753c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7812:	49 89 c4             	mov    %rax,%r12
    7815:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7819:	48 89 c7             	mov    %rax,%rdi
    781c:	e8 81 ff ff ff       	call   77a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    7821:	4c 89 e2             	mov    %r12,%rdx
    7824:	48 89 c6             	mov    %rax,%rsi
    7827:	48 89 df             	mov    %rbx,%rdi
    782a:	e8 37 e7 ff ff       	call   5f66 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    782f:	84 c0                	test   %al,%al
    7831:	74 07                	je     783a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    7833:	b8 01 00 00 00       	mov    $0x1,%eax
    7838:	eb 05                	jmp    783f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    783a:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    783f:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    7842:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7846:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    784a:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    784e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7852:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    7856:	89 c7                	mov    %eax,%edi
    7858:	e8 e3 b7 ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    785d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7861:	48 8b 40 28          	mov    0x28(%rax),%rax
    7865:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7869:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    786d:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    7871:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    7875:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7879:	48 89 d6             	mov    %rdx,%rsi
    787c:	48 89 c7             	mov    %rax,%rdi
    787f:	e8 ea f5 ff ff       	call   6e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    7884:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    7888:	48 83 c4 30          	add    $0x30,%rsp
    788c:	5b                   	pop    %rbx
    788d:	41 5c                	pop    %r12
    788f:	5d                   	pop    %rbp
    7890:	c3                   	ret

0000000000007891 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7891:	55                   	push   %rbp
    7892:	48 89 e5             	mov    %rsp,%rbp
    7895:	48 83 ec 10          	sub    $0x10,%rsp
    7899:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    789d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a1:	48 89 c7             	mov    %rax,%rdi
    78a4:	e8 9d 05 00 00       	call   7e46 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    78a9:	c9                   	leave
    78aa:	c3                   	ret
    78ab:	90                   	nop

00000000000078ac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    78ac:	55                   	push   %rbp
    78ad:	48 89 e5             	mov    %rsp,%rbp
    78b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    78b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78b8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    78bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78c3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    78ca:	00 
    78cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78cf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    78d6:	00 
	{ }
    78d7:	90                   	nop
    78d8:	5d                   	pop    %rbp
    78d9:	c3                   	ret

00000000000078da <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    78da:	55                   	push   %rbp
    78db:	48 89 e5             	mov    %rsp,%rbp
    78de:	48 83 ec 10          	sub    $0x10,%rsp
    78e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    78ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    78ef:	74 15                	je     7906 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    78f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78f9:	48 89 d6             	mov    %rdx,%rsi
    78fc:	48 89 c7             	mov    %rax,%rdi
    78ff:	e8 5c 05 00 00       	call   7e60 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    7904:	eb 05                	jmp    790b <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    7906:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    790b:	c9                   	leave
    790c:	c3                   	ret

000000000000790d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    790d:	55                   	push   %rbp
    790e:	48 89 e5             	mov    %rsp,%rbp
    7911:	48 83 ec 20          	sub    $0x20,%rsp
    7915:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7919:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    791d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7921:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7929:	48 89 d6             	mov    %rdx,%rsi
    792c:	48 89 c7             	mov    %rax,%rdi
    792f:	e8 56 05 00 00       	call   7e8a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    7934:	c9                   	leave
    7935:	c3                   	ret

0000000000007936 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7936:	55                   	push   %rbp
    7937:	48 89 e5             	mov    %rsp,%rbp
    793a:	48 83 ec 20          	sub    $0x20,%rsp
    793e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7942:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7946:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    794a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    794e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7955:	00 
    7956:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    795a:	48 89 d6             	mov    %rdx,%rsi
    795d:	48 89 c7             	mov    %rax,%rdi
    7960:	e8 cb b8 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    7965:	c9                   	leave
    7966:	c3                   	ret
    7967:	90                   	nop

0000000000007968 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7968:	55                   	push   %rbp
    7969:	48 89 e5             	mov    %rsp,%rbp
    796c:	48 83 ec 10          	sub    $0x10,%rsp
    7970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7978:	48 89 c7             	mov    %rax,%rdi
    797b:	e8 68 05 00 00       	call   7ee8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7980:	c9                   	leave
    7981:	c3                   	ret

0000000000007982 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7982:	55                   	push   %rbp
    7983:	48 89 e5             	mov    %rsp,%rbp
    7986:	48 83 ec 10          	sub    $0x10,%rsp
    798a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    798e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7992:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    799a:	ba 00 00 00 00       	mov    $0x0,%edx
    799f:	48 89 ce             	mov    %rcx,%rsi
    79a2:	48 89 c7             	mov    %rax,%rdi
    79a5:	e8 52 05 00 00       	call   7efc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    79aa:	c9                   	leave
    79ab:	c3                   	ret

00000000000079ac <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    79ac:	55                   	push   %rbp
    79ad:	48 89 e5             	mov    %rsp,%rbp
    79b0:	48 83 ec 20          	sub    $0x20,%rsp
    79b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    79bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    79c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79c4:	48 89 d0             	mov    %rdx,%rax
    79c7:	48 01 c0             	add    %rax,%rax
    79ca:	48 01 d0             	add    %rdx,%rax
    79cd:	48 c1 e0 03          	shl    $0x3,%rax
    79d1:	48 89 c2             	mov    %rax,%rdx
    79d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79d8:	48 89 d6             	mov    %rdx,%rsi
    79db:	48 89 c7             	mov    %rax,%rdi
    79de:	e8 4d b8 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    79e3:	c9                   	leave
    79e4:	c3                   	ret

00000000000079e5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    79e5:	55                   	push   %rbp
    79e6:	48 89 e5             	mov    %rsp,%rbp
    79e9:	48 83 ec 20          	sub    $0x20,%rsp
    79ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    79f5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    79fa:	74 40                	je     7a3c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    79fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a00:	48 89 c7             	mov    %rax,%rdi
    7a03:	e8 5e 05 00 00       	call   7f66 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    7a08:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a10:	48 89 c7             	mov    %rax,%rdi
    7a13:	e8 5c 05 00 00       	call   7f74 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7a18:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7a1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a21:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7a25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a2d:	48 89 ce             	mov    %rcx,%rsi
    7a30:	48 89 c7             	mov    %rax,%rdi
    7a33:	e8 85 05 00 00       	call   7fbd <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    7a38:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7a3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7a40:	c9                   	leave
    7a41:	c3                   	ret

0000000000007a42 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    7a42:	55                   	push   %rbp
    7a43:	48 89 e5             	mov    %rsp,%rbp
    7a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a4e:	90                   	nop
    7a4f:	5d                   	pop    %rbp
    7a50:	c3                   	ret
    7a51:	90                   	nop

0000000000007a52 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7a52:	55                   	push   %rbp
    7a53:	48 89 e5             	mov    %rsp,%rbp
    7a56:	48 83 ec 20          	sub    $0x20,%rsp
    7a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7a66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a6a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7a71:	00 
    7a72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7a76:	48 89 d6             	mov    %rdx,%rsi
    7a79:	48 89 c7             	mov    %rax,%rdi
    7a7c:	e8 af b7 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    7a81:	c9                   	leave
    7a82:	c3                   	ret

0000000000007a83 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7a83:	55                   	push   %rbp
    7a84:	48 89 e5             	mov    %rsp,%rbp
    7a87:	48 83 ec 10          	sub    $0x10,%rsp
    7a8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a93:	48 89 c7             	mov    %rax,%rdi
    7a96:	e8 67 05 00 00       	call   8002 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    7a9b:	c9                   	leave
    7a9c:	c3                   	ret
    7a9d:	90                   	nop

0000000000007a9e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7a9e:	55                   	push   %rbp
    7a9f:	48 89 e5             	mov    %rsp,%rbp
    7aa2:	48 83 ec 20          	sub    $0x20,%rsp
    7aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7aaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7aae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ab6:	48 89 c7             	mov    %rax,%rdi
    7ab9:	e8 5e 05 00 00       	call   801c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    7abe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7ac2:	0f 92 c0             	setb   %al
    7ac5:	0f b6 c0             	movzbl %al,%eax
    7ac8:	48 85 c0             	test   %rax,%rax
    7acb:	0f 95 c0             	setne  %al
    7ace:	84 c0                	test   %al,%al
    7ad0:	74 1a                	je     7aec <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7ad2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    7ad9:	ff ff 1f 
    7adc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7ae0:	73 05                	jae    7ae7 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7ae2:	e8 a9 b6 ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7ae7:	e8 84 b5 ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7aec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7af0:	48 c1 e0 03          	shl    $0x3,%rax
    7af4:	48 89 c7             	mov    %rax,%rdi
    7af7:	e8 24 b7 ff ff       	call   3220 <_Znwm@plt>
    7afc:	90                   	nop
      }
    7afd:	c9                   	leave
    7afe:	c3                   	ret

0000000000007aff <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    7aff:	55                   	push   %rbp
    7b00:	48 89 e5             	mov    %rsp,%rbp
    7b03:	48 83 ec 20          	sub    $0x20,%rsp
    7b07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    7b13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b1f:	48 89 ce             	mov    %rcx,%rsi
    7b22:	48 89 c7             	mov    %rax,%rdi
    7b25:	e8 06 05 00 00       	call   8030 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    7b2a:	c9                   	leave
    7b2b:	c3                   	ret

0000000000007b2c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7b2c:	55                   	push   %rbp
    7b2d:	48 89 e5             	mov    %rsp,%rbp
    7b30:	48 83 ec 10          	sub    $0x10,%rsp
    7b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b3c:	48 89 c7             	mov    %rax,%rdi
    7b3f:	e8 38 05 00 00       	call   807c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    7b44:	c9                   	leave
    7b45:	c3                   	ret

0000000000007b46 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7b46:	55                   	push   %rbp
    7b47:	48 89 e5             	mov    %rsp,%rbp
    7b4a:	48 83 ec 10          	sub    $0x10,%rsp
    7b4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7b56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b5e:	ba 00 00 00 00       	mov    $0x0,%edx
    7b63:	48 89 ce             	mov    %rcx,%rsi
    7b66:	48 89 c7             	mov    %rax,%rdi
    7b69:	e8 22 05 00 00       	call   8090 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    7b6e:	c9                   	leave
    7b6f:	c3                   	ret

0000000000007b70 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7b70:	55                   	push   %rbp
    7b71:	48 89 e5             	mov    %rsp,%rbp
    7b74:	48 83 ec 20          	sub    $0x20,%rsp
    7b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7b84:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b88:	48 89 d0             	mov    %rdx,%rax
    7b8b:	48 c1 e0 06          	shl    $0x6,%rax
    7b8f:	48 01 d0             	add    %rdx,%rax
    7b92:	48 c1 e0 02          	shl    $0x2,%rax
    7b96:	48 89 c2             	mov    %rax,%rdx
    7b99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b9d:	48 89 d6             	mov    %rdx,%rsi
    7ba0:	48 89 c7             	mov    %rax,%rdi
    7ba3:	e8 88 b6 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    7ba8:	c9                   	leave
    7ba9:	c3                   	ret

0000000000007baa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7baa:	55                   	push   %rbp
    7bab:	48 89 e5             	mov    %rsp,%rbp
    7bae:	48 83 ec 20          	sub    $0x20,%rsp
    7bb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7bb6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7bba:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7bbf:	74 43                	je     7c04 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7bc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bc5:	48 89 c7             	mov    %rax,%rdi
    7bc8:	e8 2e 05 00 00       	call   80fb <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    7bcd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7bd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bd5:	48 89 c7             	mov    %rax,%rdi
    7bd8:	e8 2c 05 00 00       	call   8109 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7bdd:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    7be4:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    7be5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7be9:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7bed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7bf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bf5:	48 89 ce             	mov    %rcx,%rsi
    7bf8:	48 89 c7             	mov    %rax,%rdi
    7bfb:	e8 63 05 00 00       	call   8163 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    7c00:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7c04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7c08:	c9                   	leave
    7c09:	c3                   	ret

0000000000007c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    7c0a:	55                   	push   %rbp
    7c0b:	48 89 e5             	mov    %rsp,%rbp
    7c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c16:	5d                   	pop    %rbp
    7c17:	c3                   	ret

0000000000007c18 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    7c18:	55                   	push   %rbp
    7c19:	48 89 e5             	mov    %rsp,%rbp
    7c1c:	48 83 ec 10          	sub    $0x10,%rsp
    7c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    7c28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c30:	48 89 d6             	mov    %rdx,%rsi
    7c33:	48 89 c7             	mov    %rax,%rdi
    7c36:	e8 89 05 00 00       	call   81c4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    7c3b:	90                   	nop
    7c3c:	c9                   	leave
    7c3d:	c3                   	ret

0000000000007c3e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7c3e:	55                   	push   %rbp
    7c3f:	48 89 e5             	mov    %rsp,%rbp
    7c42:	48 83 ec 20          	sub    $0x20,%rsp
    7c46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7c52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7c56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c5e:	48 89 ce             	mov    %rcx,%rsi
    7c61:	48 89 c7             	mov    %rax,%rdi
    7c64:	e8 7b 05 00 00       	call   81e4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    7c69:	90                   	nop
    7c6a:	c9                   	leave
    7c6b:	c3                   	ret

0000000000007c6c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    7c6c:	55                   	push   %rbp
    7c6d:	48 89 e5             	mov    %rsp,%rbp
    7c70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    7c74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c78:	5d                   	pop    %rbp
    7c79:	c3                   	ret

0000000000007c7a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    7c7a:	55                   	push   %rbp
    7c7b:	48 89 e5             	mov    %rsp,%rbp
    7c7e:	48 83 ec 10          	sub    $0x10,%rsp
    7c82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    7c8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7c8e:	48 89 c7             	mov    %rax,%rdi
    7c91:	e8 f8 eb ff ff       	call   688e <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    7c96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c9a:	48 89 02             	mov    %rax,(%rdx)
    7c9d:	90                   	nop
    7c9e:	c9                   	leave
    7c9f:	c3                   	ret

0000000000007ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    7ca0:	55                   	push   %rbp
    7ca1:	48 89 e5             	mov    %rsp,%rbp
    7ca4:	48 83 ec 10          	sub    $0x10,%rsp
    7ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    7cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cb0:	48 89 c7             	mov    %rax,%rdi
    7cb3:	e8 52 ff ff ff       	call   7c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7cb8:	be 01 00 00 00       	mov    $0x1,%esi
    7cbd:	48 89 c7             	mov    %rax,%rdi
    7cc0:	e8 59 05 00 00       	call   821e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    7cc5:	c9                   	leave
    7cc6:	c3                   	ret
    7cc7:	90                   	nop

0000000000007cc8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    7cc8:	55                   	push   %rbp
    7cc9:	48 89 e5             	mov    %rsp,%rbp
    7ccc:	41 56                	push   %r14
    7cce:	41 55                	push   %r13
    7cd0:	41 54                	push   %r12
    7cd2:	53                   	push   %rbx
    7cd3:	48 83 ec 30          	sub    $0x30,%rsp
    7cd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7cdb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7cdf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    7ce3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    7ce7:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    7ceb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7cef:	48 89 c6             	mov    %rax,%rsi
    7cf2:	bf 48 00 00 00       	mov    $0x48,%edi
    7cf7:	e8 f7 d0 ff ff       	call   4df3 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    7cfc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7d00:	48 89 c7             	mov    %rax,%rdi
    7d03:	e8 e3 eb ff ff       	call   68eb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7d08:	49 89 c6             	mov    %rax,%r14
    7d0b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7d0f:	48 89 c7             	mov    %rax,%rdi
    7d12:	e8 c6 eb ff ff       	call   68dd <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    7d17:	49 89 c5             	mov    %rax,%r13
    7d1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d1e:	48 89 c7             	mov    %rax,%rdi
    7d21:	e8 a9 eb ff ff       	call   68cf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7d26:	49 89 c4             	mov    %rax,%r12
    7d29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d2d:	48 89 c7             	mov    %rax,%rdi
    7d30:	e8 13 eb ff ff       	call   6848 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    7d35:	48 89 c3             	mov    %rax,%rbx
    7d38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d3c:	48 89 c7             	mov    %rax,%rdi
    7d3f:	e8 c6 fe ff ff       	call   7c0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7d44:	4d 89 f0             	mov    %r14,%r8
    7d47:	4c 89 e9             	mov    %r13,%rcx
    7d4a:	4c 89 e2             	mov    %r12,%rdx
    7d4d:	48 89 de             	mov    %rbx,%rsi
    7d50:	48 89 c7             	mov    %rax,%rdi
    7d53:	e8 f0 04 00 00       	call   8248 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    7d58:	eb 33                	jmp    7d8d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    7d5a:	48 89 c7             	mov    %rax,%rdi
    7d5d:	e8 3e b3 ff ff       	call   30a0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    7d62:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7d66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d6a:	48 89 d6             	mov    %rdx,%rsi
    7d6d:	48 89 c7             	mov    %rax,%rdi
    7d70:	e8 d3 f5 ff ff       	call   7348 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    7d75:	e8 c6 b5 ff ff       	call   3340 <__cxa_rethrow@plt>
	  __catch(...)
    7d7a:	48 89 c3             	mov    %rax,%rbx
    7d7d:	e8 1e b6 ff ff       	call   33a0 <__cxa_end_catch@plt>
    7d82:	48 89 d8             	mov    %rbx,%rax
    7d85:	48 89 c7             	mov    %rax,%rdi
    7d88:	e8 43 b6 ff ff       	call   33d0 <_Unwind_Resume@plt>
	}
    7d8d:	48 83 c4 30          	add    $0x30,%rsp
    7d91:	5b                   	pop    %rbx
    7d92:	41 5c                	pop    %r12
    7d94:	41 5d                	pop    %r13
    7d96:	41 5e                	pop    %r14
    7d98:	5d                   	pop    %rbp
    7d99:	c3                   	ret

0000000000007d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    7d9a:	55                   	push   %rbp
    7d9b:	48 89 e5             	mov    %rsp,%rbp
    7d9e:	48 83 ec 20          	sub    $0x20,%rsp
    7da2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    7da6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7daa:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7dae:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7db2:	48 89 d6             	mov    %rdx,%rsi
    7db5:	48 89 c7             	mov    %rax,%rdi
    7db8:	e8 b1 f0 ff ff       	call   6e6e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    7dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dc1:	c9                   	leave
    7dc2:	c3                   	ret
    7dc3:	90                   	nop

0000000000007dc4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    7dc4:	55                   	push   %rbp
    7dc5:	48 89 e5             	mov    %rsp,%rbp
    7dc8:	48 83 ec 20          	sub    $0x20,%rsp
    7dcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7dd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7dd4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    7dd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7ddc:	48 89 c7             	mov    %rax,%rdi
    7ddf:	e8 d0 04 00 00       	call   82b4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    7de4:	48 8b 10             	mov    (%rax),%rdx
    7de7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7deb:	48 89 10             	mov    %rdx,(%rax)
    7dee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7df2:	48 89 c7             	mov    %rax,%rdi
    7df5:	e8 0e 00 00 00       	call   7e08 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    7dfa:	48 8b 10             	mov    (%rax),%rdx
    7dfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e01:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7e05:	90                   	nop
    7e06:	c9                   	leave
    7e07:	c3                   	ret

0000000000007e08 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7e08:	55                   	push   %rbp
    7e09:	48 89 e5             	mov    %rsp,%rbp
    7e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7e10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e14:	5d                   	pop    %rbp
    7e15:	c3                   	ret

0000000000007e16 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    7e16:	55                   	push   %rbp
    7e17:	48 89 e5             	mov    %rsp,%rbp
    7e1a:	48 83 ec 10          	sub    $0x10,%rsp
    7e1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    7e22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e26:	48 83 c0 20          	add    $0x20,%rax
    7e2a:	48 89 c7             	mov    %rax,%rdi
    7e2d:	e8 90 04 00 00       	call   82c2 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    7e32:	c9                   	leave
    7e33:	c3                   	ret

0000000000007e34 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    7e34:	55                   	push   %rbp
    7e35:	48 89 e5             	mov    %rsp,%rbp
    7e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    7e40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7e44:	5d                   	pop    %rbp
    7e45:	c3                   	ret

0000000000007e46 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7e46:	55                   	push   %rbp
    7e47:	48 89 e5             	mov    %rsp,%rbp
    7e4a:	48 83 ec 10          	sub    $0x10,%rsp
    7e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e56:	48 89 c7             	mov    %rax,%rdi
    7e59:	e8 7e 04 00 00       	call   82dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    7e5e:	c9                   	leave
    7e5f:	c3                   	ret

0000000000007e60 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    7e60:	55                   	push   %rbp
    7e61:	48 89 e5             	mov    %rsp,%rbp
    7e64:	48 83 ec 10          	sub    $0x10,%rsp
    7e68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7e70:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e78:	ba 00 00 00 00       	mov    $0x0,%edx
    7e7d:	48 89 ce             	mov    %rcx,%rsi
    7e80:	48 89 c7             	mov    %rax,%rdi
    7e83:	e8 68 04 00 00       	call   82f0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    7e88:	c9                   	leave
    7e89:	c3                   	ret

0000000000007e8a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7e8a:	55                   	push   %rbp
    7e8b:	48 89 e5             	mov    %rsp,%rbp
    7e8e:	48 83 ec 20          	sub    $0x20,%rsp
    7e92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7e9a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7e9f:	74 40                	je     7ee1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    7ea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ea5:	48 89 c7             	mov    %rax,%rdi
    7ea8:	e8 a4 04 00 00       	call   8351 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    7ead:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7eb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eb5:	48 89 c7             	mov    %rax,%rdi
    7eb8:	e8 a2 04 00 00       	call   835f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    7ebd:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7ec2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ec6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7eca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ece:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ed2:	48 89 ce             	mov    %rcx,%rsi
    7ed5:	48 89 c7             	mov    %rax,%rdi
    7ed8:	e8 a9 04 00 00       	call   8386 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    7edd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7ee1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7ee5:	c9                   	leave
    7ee6:	c3                   	ret
    7ee7:	90                   	nop

0000000000007ee8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7ee8:	55                   	push   %rbp
    7ee9:	48 89 e5             	mov    %rsp,%rbp
    7eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7ef0:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    7ef7:	55 55 05 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    7efa:	5d                   	pop    %rbp
    7efb:	c3                   	ret

0000000000007efc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7efc:	55                   	push   %rbp
    7efd:	48 89 e5             	mov    %rsp,%rbp
    7f00:	48 83 ec 20          	sub    $0x20,%rsp
    7f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f0c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f14:	48 89 c7             	mov    %rax,%rdi
    7f17:	e8 cc ff ff ff       	call   7ee8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7f1c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7f20:	0f 92 c0             	setb   %al
    7f23:	0f b6 c0             	movzbl %al,%eax
    7f26:	48 85 c0             	test   %rax,%rax
    7f29:	0f 95 c0             	setne  %al
    7f2c:	84 c0                	test   %al,%al
    7f2e:	74 1a                	je     7f4a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7f30:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    7f37:	aa aa 0a 
    7f3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7f3e:	73 05                	jae    7f45 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7f40:	e8 4b b2 ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7f45:	e8 26 b1 ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7f4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f4e:	48 89 d0             	mov    %rdx,%rax
    7f51:	48 01 c0             	add    %rax,%rax
    7f54:	48 01 d0             	add    %rdx,%rax
    7f57:	48 c1 e0 03          	shl    $0x3,%rax
    7f5b:	48 89 c7             	mov    %rax,%rdi
    7f5e:	e8 bd b2 ff ff       	call   3220 <_Znwm@plt>
    7f63:	90                   	nop
      }
    7f64:	c9                   	leave
    7f65:	c3                   	ret

0000000000007f66 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7f66:	55                   	push   %rbp
    7f67:	48 89 e5             	mov    %rsp,%rbp
    7f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f72:	5d                   	pop    %rbp
    7f73:	c3                   	ret

0000000000007f74 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7f74:	55                   	push   %rbp
    7f75:	48 89 e5             	mov    %rsp,%rbp
    7f78:	48 83 ec 10          	sub    $0x10,%rsp
    7f7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f84:	48 89 c6             	mov    %rax,%rsi
    7f87:	bf 18 00 00 00       	mov    $0x18,%edi
    7f8c:	e8 62 ce ff ff       	call   4df3 <_ZnwmPv>
    7f91:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    7f97:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    7f9e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    7fa5:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    7fac:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    7fb3:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    7fba:	90                   	nop
    7fbb:	c9                   	leave
    7fbc:	c3                   	ret

0000000000007fbd <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7fbd:	55                   	push   %rbp
    7fbe:	48 89 e5             	mov    %rsp,%rbp
    7fc1:	48 83 ec 20          	sub    $0x20,%rsp
    7fc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fc9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7fcd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    7fd1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7fd5:	48 89 c7             	mov    %rax,%rdi
    7fd8:	e8 ed 03 00 00       	call   83ca <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7fdd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7fe1:	48 89 c7             	mov    %rax,%rdi
    7fe4:	e8 2b ce ff ff       	call   4e14 <_ZSt17__size_to_integerm>
    7fe9:	48 89 c1             	mov    %rax,%rcx
    7fec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ff0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7ff4:	48 89 ce             	mov    %rcx,%rsi
    7ff7:	48 89 c7             	mov    %rax,%rdi
    7ffa:	e8 d6 03 00 00       	call   83d5 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    7fff:	c9                   	leave
    8000:	c3                   	ret
    8001:	90                   	nop

0000000000008002 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    8002:	55                   	push   %rbp
    8003:	48 89 e5             	mov    %rsp,%rbp
    8006:	48 83 ec 10          	sub    $0x10,%rsp
    800a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    800e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8012:	48 89 c7             	mov    %rax,%rdi
    8015:	e8 02 00 00 00       	call   801c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    801a:	c9                   	leave
    801b:	c3                   	ret

000000000000801c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    801c:	55                   	push   %rbp
    801d:	48 89 e5             	mov    %rsp,%rbp
    8020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8024:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    802b:	ff ff 0f 
      }
    802e:	5d                   	pop    %rbp
    802f:	c3                   	ret

0000000000008030 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    8030:	55                   	push   %rbp
    8031:	48 89 e5             	mov    %rsp,%rbp
    8034:	53                   	push   %rbx
    8035:	48 83 ec 28          	sub    $0x28,%rsp
    8039:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    803d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8041:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    8045:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8049:	48 89 c7             	mov    %rax,%rdi
    804c:	e8 f1 03 00 00       	call   8442 <_ZSt12__miter_baseIPKPKcET_S4_>
    8051:	48 89 c3             	mov    %rax,%rbx
    8054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8058:	48 89 c7             	mov    %rax,%rdi
    805b:	e8 e2 03 00 00       	call   8442 <_ZSt12__miter_baseIPKPKcET_S4_>
    8060:	48 89 c1             	mov    %rax,%rcx
    8063:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8067:	48 89 c2             	mov    %rax,%rdx
    806a:	48 89 de             	mov    %rbx,%rsi
    806d:	48 89 cf             	mov    %rcx,%rdi
    8070:	e8 db 03 00 00       	call   8450 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    8075:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8079:	c9                   	leave
    807a:	c3                   	ret
    807b:	90                   	nop

000000000000807c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    807c:	55                   	push   %rbp
    807d:	48 89 e5             	mov    %rsp,%rbp
    8080:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8084:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    808b:	07 7e 00 
      }
    808e:	5d                   	pop    %rbp
    808f:	c3                   	ret

0000000000008090 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8090:	55                   	push   %rbp
    8091:	48 89 e5             	mov    %rsp,%rbp
    8094:	48 83 ec 20          	sub    $0x20,%rsp
    8098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    809c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    80a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    80a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80a8:	48 89 c7             	mov    %rax,%rdi
    80ab:	e8 cc ff ff ff       	call   807c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    80b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    80b4:	0f 92 c0             	setb   %al
    80b7:	0f b6 c0             	movzbl %al,%eax
    80ba:	48 85 c0             	test   %rax,%rax
    80bd:	0f 95 c0             	setne  %al
    80c0:	84 c0                	test   %al,%al
    80c2:	74 1a                	je     80de <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    80c4:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    80cb:	0f fc 00 
    80ce:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    80d2:	73 05                	jae    80d9 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    80d4:	e8 b7 b0 ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    80d9:	e8 92 af ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    80de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    80e2:	48 89 d0             	mov    %rdx,%rax
    80e5:	48 c1 e0 06          	shl    $0x6,%rax
    80e9:	48 01 d0             	add    %rdx,%rax
    80ec:	48 c1 e0 02          	shl    $0x2,%rax
    80f0:	48 89 c7             	mov    %rax,%rdi
    80f3:	e8 28 b1 ff ff       	call   3220 <_Znwm@plt>
    80f8:	90                   	nop
      }
    80f9:	c9                   	leave
    80fa:	c3                   	ret

00000000000080fb <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    80fb:	55                   	push   %rbp
    80fc:	48 89 e5             	mov    %rsp,%rbp
    80ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8107:	5d                   	pop    %rbp
    8108:	c3                   	ret

0000000000008109 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8109:	55                   	push   %rbp
    810a:	48 89 e5             	mov    %rsp,%rbp
    810d:	48 83 ec 10          	sub    $0x10,%rsp
    8111:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8119:	48 89 c6             	mov    %rax,%rsi
    811c:	bf 04 01 00 00       	mov    $0x104,%edi
    8121:	e8 cd cc ff ff       	call   4df3 <_ZnwmPv>
    8126:	b9 04 01 00 00       	mov    $0x104,%ecx
    812b:	be 00 00 00 00       	mov    $0x0,%esi
    8130:	48 89 30             	mov    %rsi,(%rax)
    8133:	89 ca                	mov    %ecx,%edx
    8135:	48 01 c2             	add    %rax,%rdx
    8138:	48 83 c2 08          	add    $0x8,%rdx
    813c:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    8140:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8144:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8148:	48 29 d0             	sub    %rdx,%rax
    814b:	01 c1                	add    %eax,%ecx
    814d:	83 e1 f8             	and    $0xfffffff8,%ecx
    8150:	89 c8                	mov    %ecx,%eax
    8152:	c1 e8 03             	shr    $0x3,%eax
    8155:	89 c1                	mov    %eax,%ecx
    8157:	48 89 d7             	mov    %rdx,%rdi
    815a:	48 89 f0             	mov    %rsi,%rax
    815d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    8160:	90                   	nop
    8161:	c9                   	leave
    8162:	c3                   	ret

0000000000008163 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8163:	55                   	push   %rbp
    8164:	48 89 e5             	mov    %rsp,%rbp
    8167:	48 83 ec 20          	sub    $0x20,%rsp
    816b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    816f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8173:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8177:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    817b:	48 89 c7             	mov    %rax,%rdi
    817e:	e8 37 03 00 00       	call   84ba <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8183:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8187:	48 89 c7             	mov    %rax,%rdi
    818a:	e8 85 cc ff ff       	call   4e14 <_ZSt17__size_to_integerm>
    818f:	48 89 c1             	mov    %rax,%rcx
    8192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8196:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    819a:	48 89 ce             	mov    %rcx,%rsi
    819d:	48 89 c7             	mov    %rax,%rdi
    81a0:	e8 20 03 00 00       	call   84c5 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    81a5:	c9                   	leave
    81a6:	c3                   	ret
    81a7:	90                   	nop

00000000000081a8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    81a8:	55                   	push   %rbp
    81a9:	48 89 e5             	mov    %rsp,%rbp
    81ac:	48 83 ec 10          	sub    $0x10,%rsp
    81b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81b8:	48 89 c7             	mov    %rax,%rdi
    81bb:	e8 50 af ff ff       	call   3110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    81c0:	90                   	nop
    81c1:	c9                   	leave
    81c2:	c3                   	ret
    81c3:	90                   	nop

00000000000081c4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    81c4:	55                   	push   %rbp
    81c5:	48 89 e5             	mov    %rsp,%rbp
    81c8:	48 83 ec 10          	sub    $0x10,%rsp
    81cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    81d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    81d8:	48 89 c7             	mov    %rax,%rdi
    81db:	e8 c8 ff ff ff       	call   81a8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    81e0:	90                   	nop
    81e1:	c9                   	leave
    81e2:	c3                   	ret
    81e3:	90                   	nop

00000000000081e4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    81e4:	55                   	push   %rbp
    81e5:	48 89 e5             	mov    %rsp,%rbp
    81e8:	48 83 ec 20          	sub    $0x20,%rsp
    81ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    81f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    81fc:	48 89 d0             	mov    %rdx,%rax
    81ff:	48 c1 e0 03          	shl    $0x3,%rax
    8203:	48 01 d0             	add    %rdx,%rax
    8206:	48 c1 e0 03          	shl    $0x3,%rax
    820a:	48 89 c2             	mov    %rax,%rdx
    820d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8211:	48 89 d6             	mov    %rdx,%rsi
    8214:	48 89 c7             	mov    %rax,%rdi
    8217:	e8 14 b0 ff ff       	call   3230 <_ZdlPvm@plt>
      }
    821c:	c9                   	leave
    821d:	c3                   	ret

000000000000821e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    821e:	55                   	push   %rbp
    821f:	48 89 e5             	mov    %rsp,%rbp
    8222:	48 83 ec 10          	sub    $0x10,%rsp
    8226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    822a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    822e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8236:	ba 00 00 00 00       	mov    $0x0,%edx
    823b:	48 89 ce             	mov    %rcx,%rsi
    823e:	48 89 c7             	mov    %rax,%rdi
    8241:	e8 ee 02 00 00       	call   8534 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    8246:	c9                   	leave
    8247:	c3                   	ret

0000000000008248 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    8248:	55                   	push   %rbp
    8249:	48 89 e5             	mov    %rsp,%rbp
    824c:	41 54                	push   %r12
    824e:	53                   	push   %rbx
    824f:	48 83 ec 30          	sub    $0x30,%rsp
    8253:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8257:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    825b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    825f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    8263:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    8267:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    826b:	48 89 c7             	mov    %rax,%rdi
    826e:	e8 78 e6 ff ff       	call   68eb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    8273:	49 89 c4             	mov    %rax,%r12
    8276:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    827a:	48 89 c7             	mov    %rax,%rdi
    827d:	e8 5b e6 ff ff       	call   68dd <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    8282:	48 89 c3             	mov    %rax,%rbx
    8285:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8289:	48 89 c7             	mov    %rax,%rdi
    828c:	e8 3e e6 ff ff       	call   68cf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8291:	48 89 c2             	mov    %rax,%rdx
    8294:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    8298:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    829c:	4d 89 e0             	mov    %r12,%r8
    829f:	48 89 d9             	mov    %rbx,%rcx
    82a2:	48 89 c7             	mov    %rax,%rdi
    82a5:	e8 1c 03 00 00       	call   85c6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    82aa:	90                   	nop
    82ab:	48 83 c4 30          	add    $0x30,%rsp
    82af:	5b                   	pop    %rbx
    82b0:	41 5c                	pop    %r12
    82b2:	5d                   	pop    %rbp
    82b3:	c3                   	ret

00000000000082b4 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    82b4:	55                   	push   %rbp
    82b5:	48 89 e5             	mov    %rsp,%rbp
    82b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    82bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c0:	5d                   	pop    %rbp
    82c1:	c3                   	ret

00000000000082c2 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    82c2:	55                   	push   %rbp
    82c3:	48 89 e5             	mov    %rsp,%rbp
    82c6:	48 83 ec 10          	sub    $0x10,%rsp
    82ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    82ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82d2:	48 89 c7             	mov    %rax,%rdi
    82d5:	e8 9c 03 00 00       	call   8676 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    82da:	c9                   	leave
    82db:	c3                   	ret

00000000000082dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    82dc:	55                   	push   %rbp
    82dd:	48 89 e5             	mov    %rsp,%rbp
    82e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    82e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    82eb:	ff ff 0f 
      }
    82ee:	5d                   	pop    %rbp
    82ef:	c3                   	ret

00000000000082f0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    82f0:	55                   	push   %rbp
    82f1:	48 89 e5             	mov    %rsp,%rbp
    82f4:	48 83 ec 20          	sub    $0x20,%rsp
    82f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8300:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8308:	48 89 c7             	mov    %rax,%rdi
    830b:	e8 cc ff ff ff       	call   82dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    8310:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8314:	0f 92 c0             	setb   %al
    8317:	0f b6 c0             	movzbl %al,%eax
    831a:	48 85 c0             	test   %rax,%rax
    831d:	0f 95 c0             	setne  %al
    8320:	84 c0                	test   %al,%al
    8322:	74 1a                	je     833e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8324:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    832b:	ff ff 1f 
    832e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8332:	73 05                	jae    8339 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8334:	e8 57 ae ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8339:	e8 32 ad ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    833e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8342:	48 c1 e0 03          	shl    $0x3,%rax
    8346:	48 89 c7             	mov    %rax,%rdi
    8349:	e8 d2 ae ff ff       	call   3220 <_Znwm@plt>
    834e:	90                   	nop
      }
    834f:	c9                   	leave
    8350:	c3                   	ret

0000000000008351 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8351:	55                   	push   %rbp
    8352:	48 89 e5             	mov    %rsp,%rbp
    8355:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8359:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    835d:	5d                   	pop    %rbp
    835e:	c3                   	ret

000000000000835f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    835f:	55                   	push   %rbp
    8360:	48 89 e5             	mov    %rsp,%rbp
    8363:	48 83 ec 10          	sub    $0x10,%rsp
    8367:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    836b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    836f:	48 89 c6             	mov    %rax,%rsi
    8372:	bf 08 00 00 00       	mov    $0x8,%edi
    8377:	e8 77 ca ff ff       	call   4df3 <_ZnwmPv>
    837c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    8383:	90                   	nop
    8384:	c9                   	leave
    8385:	c3                   	ret

0000000000008386 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8386:	55                   	push   %rbp
    8387:	48 89 e5             	mov    %rsp,%rbp
    838a:	48 83 ec 20          	sub    $0x20,%rsp
    838e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8392:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8396:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    839a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    839e:	48 89 c7             	mov    %rax,%rdi
    83a1:	e8 de 02 00 00       	call   8684 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    83a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    83aa:	48 89 c7             	mov    %rax,%rdi
    83ad:	e8 62 ca ff ff       	call   4e14 <_ZSt17__size_to_integerm>
    83b2:	48 89 c1             	mov    %rax,%rcx
    83b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83bd:	48 89 ce             	mov    %rcx,%rsi
    83c0:	48 89 c7             	mov    %rax,%rdi
    83c3:	e8 c7 02 00 00       	call   868f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    83c8:	c9                   	leave
    83c9:	c3                   	ret

00000000000083ca <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    83ca:	55                   	push   %rbp
    83cb:	48 89 e5             	mov    %rsp,%rbp
    83ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    83d2:	90                   	nop
    83d3:	5d                   	pop    %rbp
    83d4:	c3                   	ret

00000000000083d5 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    83d5:	55                   	push   %rbp
    83d6:	48 89 e5             	mov    %rsp,%rbp
    83d9:	48 83 ec 20          	sub    $0x20,%rsp
    83dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    83e9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    83ee:	75 06                	jne    83f6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    83f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f4:	eb 4a                	jmp    8440 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    83f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    83fa:	48 89 d0             	mov    %rdx,%rax
    83fd:	48 01 c0             	add    %rax,%rax
    8400:	48 01 d0             	add    %rdx,%rax
    8403:	48 c1 e0 03          	shl    $0x3,%rax
    8407:	48 89 c2             	mov    %rax,%rdx
    840a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    840e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8412:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    841a:	48 89 ce             	mov    %rcx,%rsi
    841d:	48 89 c7             	mov    %rax,%rdi
    8420:	e8 c7 02 00 00       	call   86ec <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8425:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8429:	48 89 d0             	mov    %rdx,%rax
    842c:	48 01 c0             	add    %rax,%rax
    842f:	48 01 d0             	add    %rdx,%rax
    8432:	48 c1 e0 03          	shl    $0x3,%rax
    8436:	48 89 c2             	mov    %rax,%rdx
    8439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    843d:	48 01 d0             	add    %rdx,%rax
    }
    8440:	c9                   	leave
    8441:	c3                   	ret

0000000000008442 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    8442:	55                   	push   %rbp
    8443:	48 89 e5             	mov    %rsp,%rbp
    8446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    844a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    844e:	5d                   	pop    %rbp
    844f:	c3                   	ret

0000000000008450 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    8450:	55                   	push   %rbp
    8451:	48 89 e5             	mov    %rsp,%rbp
    8454:	41 54                	push   %r12
    8456:	53                   	push   %rbx
    8457:	48 83 ec 20          	sub    $0x20,%rsp
    845b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    845f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8463:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    8467:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    846b:	48 89 c7             	mov    %rax,%rdi
    846e:	e8 b5 02 00 00       	call   8728 <_ZSt12__niter_baseIPPKcET_S3_>
    8473:	49 89 c4             	mov    %rax,%r12
    8476:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    847a:	48 89 c7             	mov    %rax,%rdi
    847d:	e8 98 02 00 00       	call   871a <_ZSt12__niter_baseIPKPKcET_S4_>
    8482:	48 89 c3             	mov    %rax,%rbx
    8485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8489:	48 89 c7             	mov    %rax,%rdi
    848c:	e8 89 02 00 00       	call   871a <_ZSt12__niter_baseIPKPKcET_S4_>
    8491:	4c 89 e2             	mov    %r12,%rdx
    8494:	48 89 de             	mov    %rbx,%rsi
    8497:	48 89 c7             	mov    %rax,%rdi
    849a:	e8 97 02 00 00       	call   8736 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    849f:	48 89 c2             	mov    %rax,%rdx
    84a2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    84a6:	48 89 d6             	mov    %rdx,%rsi
    84a9:	48 89 c7             	mov    %rax,%rdi
    84ac:	e8 b2 02 00 00       	call   8763 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    84b1:	48 83 c4 20          	add    $0x20,%rsp
    84b5:	5b                   	pop    %rbx
    84b6:	41 5c                	pop    %r12
    84b8:	5d                   	pop    %rbp
    84b9:	c3                   	ret

00000000000084ba <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    84ba:	55                   	push   %rbp
    84bb:	48 89 e5             	mov    %rsp,%rbp
    84be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    84c2:	90                   	nop
    84c3:	5d                   	pop    %rbp
    84c4:	c3                   	ret

00000000000084c5 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    84c5:	55                   	push   %rbp
    84c6:	48 89 e5             	mov    %rsp,%rbp
    84c9:	48 83 ec 20          	sub    $0x20,%rsp
    84cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    84d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    84d9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    84de:	75 06                	jne    84e6 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    84e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e4:	eb 4c                	jmp    8532 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    84e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    84ea:	48 89 d0             	mov    %rdx,%rax
    84ed:	48 c1 e0 06          	shl    $0x6,%rax
    84f1:	48 01 d0             	add    %rdx,%rax
    84f4:	48 c1 e0 02          	shl    $0x2,%rax
    84f8:	48 89 c2             	mov    %rax,%rdx
    84fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ff:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8503:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    850b:	48 89 ce             	mov    %rcx,%rsi
    850e:	48 89 c7             	mov    %rax,%rdi
    8511:	e8 5f 02 00 00       	call   8775 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8516:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    851a:	48 89 d0             	mov    %rdx,%rax
    851d:	48 c1 e0 06          	shl    $0x6,%rax
    8521:	48 01 d0             	add    %rdx,%rax
    8524:	48 c1 e0 02          	shl    $0x2,%rax
    8528:	48 89 c2             	mov    %rax,%rdx
    852b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852f:	48 01 d0             	add    %rdx,%rax
    }
    8532:	c9                   	leave
    8533:	c3                   	ret

0000000000008534 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8534:	55                   	push   %rbp
    8535:	48 89 e5             	mov    %rsp,%rbp
    8538:	48 83 ec 20          	sub    $0x20,%rsp
    853c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8540:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8544:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    854c:	48 89 c7             	mov    %rax,%rdi
    854f:	e8 50 02 00 00       	call   87a4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    8554:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8558:	0f 92 c0             	setb   %al
    855b:	0f b6 c0             	movzbl %al,%eax
    855e:	48 85 c0             	test   %rax,%rax
    8561:	0f 95 c0             	setne  %al
    8564:	84 c0                	test   %al,%al
    8566:	74 1a                	je     8582 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8568:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    856f:	38 8e 03 
    8572:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8576:	73 05                	jae    857d <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8578:	e8 13 ac ff ff       	call   3190 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    857d:	e8 ee aa ff ff       	call   3070 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8582:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8586:	48 89 d0             	mov    %rdx,%rax
    8589:	48 c1 e0 03          	shl    $0x3,%rax
    858d:	48 01 d0             	add    %rdx,%rax
    8590:	48 c1 e0 03          	shl    $0x3,%rax
    8594:	48 89 c7             	mov    %rax,%rdi
    8597:	e8 84 ac ff ff       	call   3220 <_Znwm@plt>
    859c:	90                   	nop
      }
    859d:	c9                   	leave
    859e:	c3                   	ret
    859f:	90                   	nop

00000000000085a0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    85a0:	55                   	push   %rbp
    85a1:	48 89 e5             	mov    %rsp,%rbp
    85a4:	48 83 ec 10          	sub    $0x10,%rsp
    85a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    85b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    85b8:	48 89 d6             	mov    %rdx,%rsi
    85bb:	48 89 c7             	mov    %rax,%rdi
    85be:	e8 f5 01 00 00       	call   87b8 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    85c3:	90                   	nop
    85c4:	c9                   	leave
    85c5:	c3                   	ret

00000000000085c6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    85c6:	55                   	push   %rbp
    85c7:	48 89 e5             	mov    %rsp,%rbp
    85ca:	41 56                	push   %r14
    85cc:	41 55                	push   %r13
    85ce:	41 54                	push   %r12
    85d0:	53                   	push   %rbx
    85d1:	48 83 ec 40          	sub    $0x40,%rsp
    85d5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    85d9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    85dd:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    85e1:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    85e5:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    85e9:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    85ed:	48 89 de             	mov    %rbx,%rsi
    85f0:	bf 28 00 00 00       	mov    $0x28,%edi
    85f5:	e8 f9 c7 ff ff       	call   4df3 <_ZnwmPv>
    85fa:	49 89 c4             	mov    %rax,%r12
    85fd:	41 be 01 00 00 00    	mov    $0x1,%r14d
    8603:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8607:	48 89 c7             	mov    %rax,%rdi
    860a:	e8 dc e2 ff ff       	call   68eb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    860f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    8613:	48 89 c7             	mov    %rax,%rdi
    8616:	e8 c2 e2 ff ff       	call   68dd <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    861b:	48 89 c2             	mov    %rax,%rdx
    861e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    8622:	48 89 d6             	mov    %rdx,%rsi
    8625:	48 89 c7             	mov    %rax,%rdi
    8628:	e8 73 ff ff ff       	call   85a0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    862d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8631:	48 89 c7             	mov    %rax,%rdi
    8634:	e8 96 e2 ff ff       	call   68cf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8639:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    863d:	48 89 c6             	mov    %rax,%rsi
    8640:	4c 89 e7             	mov    %r12,%rdi
    8643:	e8 8e 01 00 00       	call   87d6 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    8648:	eb 1e                	jmp    8668 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    864a:	49 89 c5             	mov    %rax,%r13
    864d:	45 84 f6             	test   %r14b,%r14b
    8650:	74 0b                	je     865d <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    8652:	48 89 de             	mov    %rbx,%rsi
    8655:	4c 89 e7             	mov    %r12,%rdi
    8658:	e8 a8 c7 ff ff       	call   4e05 <_ZdlPvS_>
    865d:	4c 89 e8             	mov    %r13,%rax
    8660:	48 89 c7             	mov    %rax,%rdi
    8663:	e8 68 ad ff ff       	call   33d0 <_Unwind_Resume@plt>
    8668:	48 83 c4 40          	add    $0x40,%rsp
    866c:	5b                   	pop    %rbx
    866d:	41 5c                	pop    %r12
    866f:	41 5d                	pop    %r13
    8671:	41 5e                	pop    %r14
    8673:	5d                   	pop    %rbp
    8674:	c3                   	ret
    8675:	90                   	nop

0000000000008676 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    8676:	55                   	push   %rbp
    8677:	48 89 e5             	mov    %rsp,%rbp
    867a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    867e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8682:	5d                   	pop    %rbp
    8683:	c3                   	ret

0000000000008684 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    8684:	55                   	push   %rbp
    8685:	48 89 e5             	mov    %rsp,%rbp
    8688:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    868c:	90                   	nop
    868d:	5d                   	pop    %rbp
    868e:	c3                   	ret

000000000000868f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    868f:	55                   	push   %rbp
    8690:	48 89 e5             	mov    %rsp,%rbp
    8693:	48 83 ec 20          	sub    $0x20,%rsp
    8697:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    869b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    869f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    86a3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    86a8:	75 06                	jne    86b0 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    86aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ae:	eb 3a                	jmp    86ea <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    86b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86b4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    86bb:	00 
    86bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    86c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    86c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86cc:	48 89 ce             	mov    %rcx,%rsi
    86cf:	48 89 c7             	mov    %rax,%rdi
    86d2:	e8 29 01 00 00       	call   8800 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    86d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86db:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    86e2:	00 
    86e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e7:	48 01 d0             	add    %rdx,%rax
    }
    86ea:	c9                   	leave
    86eb:	c3                   	ret

00000000000086ec <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    86ec:	55                   	push   %rbp
    86ed:	48 89 e5             	mov    %rsp,%rbp
    86f0:	48 83 ec 20          	sub    $0x20,%rsp
    86f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    86fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8700:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8704:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    870c:	48 89 ce             	mov    %rcx,%rsi
    870f:	48 89 c7             	mov    %rax,%rdi
    8712:	e8 17 01 00 00       	call   882e <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8717:	90                   	nop
    8718:	c9                   	leave
    8719:	c3                   	ret

000000000000871a <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    871a:	55                   	push   %rbp
    871b:	48 89 e5             	mov    %rsp,%rbp
    871e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    8722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8726:	5d                   	pop    %rbp
    8727:	c3                   	ret

0000000000008728 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    8728:	55                   	push   %rbp
    8729:	48 89 e5             	mov    %rsp,%rbp
    872c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    8730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8734:	5d                   	pop    %rbp
    8735:	c3                   	ret

0000000000008736 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    8736:	55                   	push   %rbp
    8737:	48 89 e5             	mov    %rsp,%rbp
    873a:	48 83 ec 20          	sub    $0x20,%rsp
    873e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8742:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8746:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    874a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    874e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8756:	48 89 ce             	mov    %rcx,%rsi
    8759:	48 89 c7             	mov    %rax,%rdi
    875c:	e8 10 01 00 00       	call   8871 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    8761:	c9                   	leave
    8762:	c3                   	ret

0000000000008763 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    8763:	55                   	push   %rbp
    8764:	48 89 e5             	mov    %rsp,%rbp
    8767:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    876b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    876f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8773:	5d                   	pop    %rbp
    8774:	c3                   	ret

0000000000008775 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8775:	55                   	push   %rbp
    8776:	48 89 e5             	mov    %rsp,%rbp
    8779:	48 83 ec 20          	sub    $0x20,%rsp
    877d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8781:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8785:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8789:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    878d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8795:	48 89 ce             	mov    %rcx,%rsi
    8798:	48 89 c7             	mov    %rax,%rdi
    879b:	e8 fe 00 00 00       	call   889e <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    87a0:	90                   	nop
    87a1:	c9                   	leave
    87a2:	c3                   	ret
    87a3:	90                   	nop

00000000000087a4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    87a4:	55                   	push   %rbp
    87a5:	48 89 e5             	mov    %rsp,%rbp
    87a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    87ac:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    87b3:	1c c7 01 
      }
    87b6:	5d                   	pop    %rbp
    87b7:	c3                   	ret

00000000000087b8 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    87b8:	55                   	push   %rbp
    87b9:	48 89 e5             	mov    %rsp,%rbp
    87bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    87c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    87cc:	48 8b 12             	mov    (%rdx),%rdx
    87cf:	48 89 10             	mov    %rdx,(%rax)
      { }
    87d2:	90                   	nop
    87d3:	5d                   	pop    %rbp
    87d4:	c3                   	ret
    87d5:	90                   	nop

00000000000087d6 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    87d6:	55                   	push   %rbp
    87d7:	48 89 e5             	mov    %rsp,%rbp
    87da:	48 83 ec 20          	sub    $0x20,%rsp
    87de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    87e6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    87ea:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    87ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87f2:	48 89 ce             	mov    %rcx,%rsi
    87f5:	48 89 c7             	mov    %rax,%rdi
    87f8:	e8 19 01 00 00       	call   8916 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    87fd:	90                   	nop
    87fe:	c9                   	leave
    87ff:	c3                   	ret

0000000000008800 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8800:	55                   	push   %rbp
    8801:	48 89 e5             	mov    %rsp,%rbp
    8804:	48 83 ec 20          	sub    $0x20,%rsp
    8808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    880c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8810:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8814:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8818:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    881c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8820:	48 89 ce             	mov    %rcx,%rsi
    8823:	48 89 c7             	mov    %rax,%rdi
    8826:	e8 35 01 00 00       	call   8960 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    882b:	90                   	nop
    882c:	c9                   	leave
    882d:	c3                   	ret

000000000000882e <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    882e:	55                   	push   %rbp
    882f:	48 89 e5             	mov    %rsp,%rbp
    8832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    883a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    883e:	eb 23                	jmp    8863 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    8840:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8844:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    8848:	48 8b 06             	mov    (%rsi),%rax
    884b:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    884f:	48 89 01             	mov    %rax,(%rcx)
    8852:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    8856:	48 8b 46 10          	mov    0x10(%rsi),%rax
    885a:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    885e:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    8863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8867:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    886b:	75 d3                	jne    8840 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    886d:	90                   	nop
    886e:	90                   	nop
    886f:	5d                   	pop    %rbp
    8870:	c3                   	ret

0000000000008871 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    8871:	55                   	push   %rbp
    8872:	48 89 e5             	mov    %rsp,%rbp
    8875:	48 83 ec 20          	sub    $0x20,%rsp
    8879:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    887d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8881:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    8885:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8889:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    888d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8891:	48 89 ce             	mov    %rcx,%rsi
    8894:	48 89 c7             	mov    %rax,%rdi
    8897:	e8 ff 00 00 00       	call   899b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    889c:	c9                   	leave
    889d:	c3                   	ret

000000000000889e <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    889e:	55                   	push   %rbp
    889f:	48 89 e5             	mov    %rsp,%rbp
    88a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    88aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    88ae:	eb 58                	jmp    8908 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    88b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    88b8:	b9 04 01 00 00       	mov    $0x104,%ecx
    88bd:	48 8b 32             	mov    (%rdx),%rsi
    88c0:	48 89 30             	mov    %rsi,(%rax)
    88c3:	89 ce                	mov    %ecx,%esi
    88c5:	48 01 c6             	add    %rax,%rsi
    88c8:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    88cc:	89 ce                	mov    %ecx,%esi
    88ce:	48 01 d6             	add    %rdx,%rsi
    88d1:	48 83 c6 08          	add    $0x8,%rsi
    88d5:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    88d9:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    88dd:	48 8d 78 08          	lea    0x8(%rax),%rdi
    88e1:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    88e5:	48 29 f8             	sub    %rdi,%rax
    88e8:	48 29 c2             	sub    %rax,%rdx
    88eb:	01 c1                	add    %eax,%ecx
    88ed:	83 e1 f8             	and    $0xfffffff8,%ecx
    88f0:	89 c8                	mov    %ecx,%eax
    88f2:	c1 e8 03             	shr    $0x3,%eax
    88f5:	89 c0                	mov    %eax,%eax
    88f7:	48 89 d6             	mov    %rdx,%rsi
    88fa:	48 89 c1             	mov    %rax,%rcx
    88fd:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    8900:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    8907:	00 
    8908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    890c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8910:	75 9e                	jne    88b0 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    8912:	90                   	nop
    8913:	90                   	nop
    8914:	5d                   	pop    %rbp
    8915:	c3                   	ret

0000000000008916 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    8916:	55                   	push   %rbp
    8917:	48 89 e5             	mov    %rsp,%rbp
    891a:	53                   	push   %rbx
    891b:	48 83 ec 28          	sub    $0x28,%rsp
    891f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8923:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8927:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    892b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    892f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8933:	48 89 c7             	mov    %rax,%rdi
    8936:	e8 bf 00 00 00       	call   89fa <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    893b:	48 89 c7             	mov    %rax,%rdi
    893e:	e8 d1 00 00 00       	call   8a14 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    8943:	48 89 c6             	mov    %rax,%rsi
    8946:	48 89 df             	mov    %rbx,%rdi
    8949:	e8 b2 a7 ff ff       	call   3100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    894e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8952:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    8959:	90                   	nop
    895a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    895e:	c9                   	leave
    895f:	c3                   	ret

0000000000008960 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8960:	55                   	push   %rbp
    8961:	48 89 e5             	mov    %rsp,%rbp
    8964:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8968:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    896c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    8970:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8974:	48 8b 00             	mov    (%rax),%rax
    8977:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    897b:	eb 10                	jmp    898d <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    897d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8981:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8985:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    8988:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    898d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8991:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    8995:	75 e6                	jne    897d <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    8997:	90                   	nop
    8998:	90                   	nop
    8999:	5d                   	pop    %rbp
    899a:	c3                   	ret

000000000000899b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    899b:	55                   	push   %rbp
    899c:	48 89 e5             	mov    %rsp,%rbp
    899f:	48 83 ec 30          	sub    $0x30,%rsp
    89a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    89a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    89ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    89af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89b3:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    89b7:	48 c1 f8 03          	sar    $0x3,%rax
    89bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    89bf:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    89c4:	74 1f                	je     89e5 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    89c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    89d1:	00 
    89d2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    89d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89da:	48 89 ce             	mov    %rcx,%rsi
    89dd:	48 89 c7             	mov    %rax,%rdi
    89e0:	e8 ab a9 ff ff       	call   3390 <memmove@plt>
	  return __result + _Num;
    89e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89e9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    89f0:	00 
    89f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    89f5:	48 01 d0             	add    %rdx,%rax
	}
    89f8:	c9                   	leave
    89f9:	c3                   	ret

00000000000089fa <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    89fa:	55                   	push   %rbp
    89fb:	48 89 e5             	mov    %rsp,%rbp
    89fe:	48 83 ec 10          	sub    $0x10,%rsp
    8a02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8a06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a0a:	48 89 c7             	mov    %rax,%rdi
    8a0d:	e8 10 00 00 00       	call   8a22 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    8a12:	c9                   	leave
    8a13:	c3                   	ret

0000000000008a14 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8a14:	55                   	push   %rbp
    8a15:	48 89 e5             	mov    %rsp,%rbp
    8a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a20:	5d                   	pop    %rbp
    8a21:	c3                   	ret

0000000000008a22 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    8a22:	55                   	push   %rbp
    8a23:	48 89 e5             	mov    %rsp,%rbp
    8a26:	48 83 ec 10          	sub    $0x10,%rsp
    8a2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    8a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a32:	48 89 c7             	mov    %rax,%rdi
    8a35:	e8 02 00 00 00       	call   8a3c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    8a3a:	c9                   	leave
    8a3b:	c3                   	ret

0000000000008a3c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    8a3c:	55                   	push   %rbp
    8a3d:	48 89 e5             	mov    %rsp,%rbp
    8a40:	48 83 ec 10          	sub    $0x10,%rsp
    8a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a4c:	48 89 c7             	mov    %rax,%rdi
    8a4f:	e8 02 00 00 00       	call   8a56 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    8a54:	c9                   	leave
    8a55:	c3                   	ret

0000000000008a56 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    8a56:	55                   	push   %rbp
    8a57:	48 89 e5             	mov    %rsp,%rbp
    8a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a62:	48 8b 00             	mov    (%rax),%rax
    8a65:	5d                   	pop    %rbp
    8a66:	c3                   	ret
    8a67:	90                   	nop

0000000000008a68 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
namespace neko {

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) const {
    8a68:	55                   	push   %rbp
    8a69:	48 89 e5             	mov    %rsp,%rbp
    8a6c:	48 83 ec 40          	sub    $0x40,%rsp
    8a70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8a7c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    8a80:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    8a84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a88:	48 8d 15 09 3b 00 00 	lea    0x3b09(%rip),%rdx        # c598 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    8a8f:	48 89 d6             	mov    %rdx,%rsi
    8a92:	48 89 c7             	mov    %rax,%rdi
    8a95:	e8 56 a7 ff ff       	call   31f0 <vkGetInstanceProcAddr@plt>
    8a9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
    8a9e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8aa3:	74 1c                	je     8ac1 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
    8aa5:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    8aa9:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    8aad:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8ab1:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    8ab5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ab9:	48 89 c7             	mov    %rax,%rdi
    8abc:	41 ff d0             	call   *%r8
    8abf:	eb 05                	jmp    8ac6 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    8ac1:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
    8ac6:	c9                   	leave
    8ac7:	c3                   	ret

0000000000008ac8 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) const noexcept {
    8ac8:	55                   	push   %rbp
    8ac9:	48 89 e5             	mov    %rsp,%rbp
    8acc:	48 83 ec 30          	sub    $0x30,%rsp
    8ad0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ad4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8ad8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8adc:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    8ae0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ae4:	48 8d 15 cd 3a 00 00 	lea    0x3acd(%rip),%rdx        # c5b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x28>
    8aeb:	48 89 d6             	mov    %rdx,%rsi
    8aee:	48 89 c7             	mov    %rax,%rdi
    8af1:	e8 fa a6 ff ff       	call   31f0 <vkGetInstanceProcAddr@plt>
    8af6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    8afa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8aff:	74 19                	je     8b1a <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
    8b01:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    8b05:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8b09:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    8b0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8b11:	48 89 ce             	mov    %rcx,%rsi
    8b14:	48 89 c7             	mov    %rax,%rdi
    8b17:	41 ff d0             	call   *%r8
  }
}
    8b1a:	90                   	nop
    8b1b:	c9                   	leave
    8b1c:	c3                   	ret
    8b1d:	90                   	nop

0000000000008b1e <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL Instance::debugMessengerCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    8b1e:	55                   	push   %rbp
    8b1f:	48 89 e5             	mov    %rsp,%rbp
    8b22:	48 83 ec 20          	sub    $0x20,%rsp
    8b26:	89 7d fc             	mov    %edi,-0x4(%rbp)
    8b29:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8b2c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    8b30:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    8b34:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8b37:	83 f8 01             	cmp    $0x1,%eax
    8b3a:	7e 3c                	jle    8b78 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    8b3c:	be 0a 00 00 00       	mov    $0xa,%esi
    8b41:	48 8d 05 d8 b6 00 00 	lea    0xb6d8(%rip),%rax        # 14220 <_ZSt4cerr@GLIBCXX_3.4>
    8b48:	48 89 c7             	mov    %rax,%rdi
    8b4b:	e8 90 a7 ff ff       	call   32e0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    8b50:	48 89 c2             	mov    %rax,%rdx
    8b53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b57:	48 8b 40 28          	mov    0x28(%rax),%rax
    8b5b:	48 89 c6             	mov    %rax,%rsi
    8b5e:	48 89 d7             	mov    %rdx,%rdi
    8b61:	e8 aa a6 ff ff       	call   3210 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    8b66:	48 8b 15 2b b4 00 00 	mov    0xb42b(%rip),%rdx        # 13f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    8b6d:	48 89 d6             	mov    %rdx,%rsi
    8b70:	48 89 c7             	mov    %rax,%rdi
    8b73:	e8 f8 a6 ff ff       	call   3270 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    8b78:	b8 00 00 00 00       	mov    $0x0,%eax
}
    8b7d:	c9                   	leave
    8b7e:	c3                   	ret
    8b7f:	90                   	nop

0000000000008b80 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void Instance::populateDebugMessengerInfo(
    VkDebugUtilsMessengerCreateInfoEXT &debugMessengerInfo) {
    8b80:	55                   	push   %rbp
    8b81:	48 89 e5             	mov    %rsp,%rbp
    8b84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  debugMessengerInfo.sType =
    8b8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b90:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
      VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
  debugMessengerInfo.messageSeverity =
    8b96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b9a:	c7 40 14 11 11 00 00 	movl   $0x1111,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  debugMessengerInfo.messageType =
    8ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ba5:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
      VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  debugMessengerInfo.pfnUserCallback = debugMessengerCallback;
    8bac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bb0:	48 8d 15 67 ff ff ff 	lea    -0x99(%rip),%rdx        # 8b1e <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    8bb7:	48 89 50 20          	mov    %rdx,0x20(%rax)
  debugMessengerInfo.pUserData = nullptr;
    8bbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8bbf:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    8bc6:	00 
}
    8bc7:	90                   	nop
    8bc8:	5d                   	pop    %rbp
    8bc9:	c3                   	ret

0000000000008bca <_ZN4neko8Instance21getRequiredExtensionsEv>:

std::vector<const char *> Instance::getRequiredExtensions() {
    8bca:	55                   	push   %rbp
    8bcb:	48 89 e5             	mov    %rsp,%rbp
    8bce:	53                   	push   %rbx
    8bcf:	48 83 ec 58          	sub    $0x58,%rsp
    8bd3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    8bd7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  uint32_t requiredExtensionCount;
  const char **pRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    8bdb:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8bdf:	48 89 c7             	mov    %rax,%rdi
    8be2:	e8 99 a5 ff ff       	call   3180 <glfwGetRequiredInstanceExtensions@plt>
    8be7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    8beb:	8b 45 c8             	mov    -0x38(%rbp),%eax
    8bee:	89 c3                	mov    %eax,%ebx
    8bf0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8bf4:	48 89 c7             	mov    %rax,%rdi
    8bf7:	e8 92 c5 ff ff       	call   518e <_ZNSaIPKcEC1Ev>
    8bfc:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    8c00:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8c04:	48 89 de             	mov    %rbx,%rsi
    8c07:	48 89 c7             	mov    %rax,%rdi
    8c0a:	e8 6b 05 00 00       	call   917a <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    8c0f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8c13:	48 89 c7             	mov    %rax,%rdi
    8c16:	e8 8f c5 ff ff       	call   51aa <_ZNSaIPKcED1Ev>
  size_t iExtension = 0;
    8c1b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8c22:	00 
  for (auto &extension : requiredExtensions) {
    8c23:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8c27:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8c2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c2f:	48 89 c7             	mov    %rax,%rdi
    8c32:	e8 b9 05 00 00       	call   91f0 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    8c37:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    8c3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c3f:	48 89 c7             	mov    %rax,%rdi
    8c42:	e8 cf 05 00 00       	call   9216 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    8c47:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    8c4b:	eb 3e                	jmp    8c8b <_ZN4neko8Instance21getRequiredExtensionsEv+0xc1>
    8c4d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8c51:	48 89 c7             	mov    %rax,%rdi
    8c54:	e8 41 06 00 00       	call   929a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    8c59:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    extension = pRequiredExtensions[iExtension];
    8c5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c61:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8c68:	00 
    8c69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c6d:	48 01 d0             	add    %rdx,%rax
    8c70:	48 8b 10             	mov    (%rax),%rdx
    8c73:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c77:	48 89 10             	mov    %rdx,(%rax)
    ++iExtension;
    8c7a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (auto &extension : requiredExtensions) {
    8c7f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8c83:	48 89 c7             	mov    %rax,%rdi
    8c86:	e8 ef 05 00 00       	call   927a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    8c8b:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    8c8f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8c93:	48 89 d6             	mov    %rdx,%rsi
    8c96:	48 89 c7             	mov    %rax,%rdi
    8c99:	e8 a1 05 00 00       	call   923f <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    8c9e:	84 c0                	test   %al,%al
    8ca0:	75 ab                	jne    8c4d <_ZN4neko8Instance21getRequiredExtensionsEv+0x83>
  }
  return requiredExtensions;
    8ca2:	eb 1a                	jmp    8cbe <_ZN4neko8Instance21getRequiredExtensionsEv+0xf4>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    8ca4:	48 89 c3             	mov    %rax,%rbx
    8ca7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8cab:	48 89 c7             	mov    %rax,%rdi
    8cae:	e8 f7 c4 ff ff       	call   51aa <_ZNSaIPKcED1Ev>
    8cb3:	48 89 d8             	mov    %rbx,%rax
    8cb6:	48 89 c7             	mov    %rax,%rdi
    8cb9:	e8 12 a7 ff ff       	call   33d0 <_Unwind_Resume@plt>
}
    8cbe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8cc2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cc6:	c9                   	leave
    8cc7:	c3                   	ret

0000000000008cc8 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE>:

Instance::Instance(const Settings &settings, const Context &context)
    8cc8:	55                   	push   %rbp
    8cc9:	48 89 e5             	mov    %rsp,%rbp
    8ccc:	41 55                	push   %r13
    8cce:	41 54                	push   %r12
    8cd0:	53                   	push   %rbx
    8cd1:	48 81 ec 28 01 00 00 	sub    $0x128,%rsp
    8cd8:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    8cdf:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    8ce6:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
    : mcrContext{context} {
    8ced:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8cf4:	48 89 c7             	mov    %rax,%rdi
    8cf7:	e8 34 aa ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    8cfc:	48 8d 15 4d af 00 00 	lea    0xaf4d(%rip),%rdx        # 13c50 <_ZTVN4neko8InstanceE+0x10>
    8d03:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8d0a:	48 89 10             	mov    %rdx,(%rax)
    8d0d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8d14:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    8d1b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  uint32_t apiVersion;
  vkEnumerateInstanceVersion(&apiVersion);
    8d1f:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    8d23:	48 89 c7             	mov    %rax,%rdi
    8d26:	e8 e5 a5 ff ff       	call   3310 <vkEnumerateInstanceVersion@plt>

  VkApplicationInfo applicationInfo{};
    8d2b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8d2f:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    8d36:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    8d3d:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
  applicationInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    8d44:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    8d4b:	00 00 00 
  applicationInfo.pApplicationName = settings.general.appName.c_str();
    8d4e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d55:	48 89 c7             	mov    %rax,%rdi
    8d58:	e8 53 a3 ff ff       	call   30b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    8d5d:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  applicationInfo.applicationVersion = settings.general.appVersion;
    8d64:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d6b:	8b 40 20             	mov    0x20(%rax),%eax
    8d6e:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  applicationInfo.pEngineName = settings.general.engineName.c_str();
    8d74:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d7b:	48 83 c0 28          	add    $0x28,%rax
    8d7f:	48 89 c7             	mov    %rax,%rdi
    8d82:	e8 29 a3 ff ff       	call   30b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    8d87:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  applicationInfo.engineVersion = settings.general.engineVersion;
    8d8e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8d95:	8b 40 48             	mov    0x48(%rax),%eax
    8d98:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  applicationInfo.apiVersion = apiVersion;
    8d9e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    8da1:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)

  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    8da7:	48 8d 05 5a 3e 00 00 	lea    0x3e5a(%rip),%rax        # cc08 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    8dae:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8db2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8db6:	49 89 c4             	mov    %rax,%r12
    8db9:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    8dbf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8dc3:	48 89 c7             	mov    %rax,%rdi
    8dc6:	e8 c3 c3 ff ff       	call   518e <_ZNSaIPKcEC1Ev>
    8dcb:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8dcf:	4c 89 e6             	mov    %r12,%rsi
    8dd2:	4c 89 ef             	mov    %r13,%rdi
    8dd5:	4c 89 e1             	mov    %r12,%rcx
    8dd8:	4c 89 eb             	mov    %r13,%rbx
    8ddb:	48 89 df             	mov    %rbx,%rdi
    8dde:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8de2:	48 89 d1             	mov    %rdx,%rcx
    8de5:	48 89 fa             	mov    %rdi,%rdx
    8de8:	48 89 c7             	mov    %rax,%rdi
    8deb:	e8 d6 c3 ff ff       	call   51c6 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    8df0:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8df4:	48 89 c7             	mov    %rax,%rdi
    8df7:	e8 ae c3 ff ff       	call   51aa <_ZNSaIPKcED1Ev>
  auto extensions = this->getRequiredExtensions();
    8dfc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8e00:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8e07:	48 89 d6             	mov    %rdx,%rsi
    8e0a:	48 89 c7             	mov    %rax,%rdi
    8e0d:	e8 b8 fd ff ff       	call   8bca <_ZN4neko8Instance21getRequiredExtensionsEv>

  VkDebugUtilsMessengerCreateInfoEXT *pDebugMessengerInfo = nullptr;
    8e12:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    8e19:	00 
  VkDebugUtilsMessengerCreateInfoEXT debugMessengerInfo{};
    8e1a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8e1e:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    8e25:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    8e2c:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)

  if constexpr (neko::debugMode) {
    layers.emplace_back("VK_LAYER_KHRONOS_validation");
    8e33:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8e37:	48 8d 15 e4 3d 00 00 	lea    0x3de4(%rip),%rdx        # cc22 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22>
    8e3e:	48 89 d6             	mov    %rdx,%rsi
    8e41:	48 89 c7             	mov    %rax,%rdi
    8e44:	e8 63 04 00 00       	call   92ac <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>
    extensions.emplace_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    8e49:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8e4d:	48 8d 15 ea 3d 00 00 	lea    0x3dea(%rip),%rdx        # cc3e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e>
    8e54:	48 89 d6             	mov    %rdx,%rsi
    8e57:	48 89 c7             	mov    %rax,%rdi
    8e5a:	e8 f1 04 00 00       	call   9350 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>

    this->populateDebugMessengerInfo(debugMessengerInfo);
    8e5f:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    8e66:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8e6d:	48 89 d6             	mov    %rdx,%rsi
    8e70:	48 89 c7             	mov    %rax,%rdi
    8e73:	e8 08 fd ff ff       	call   8b80 <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    pDebugMessengerInfo = &debugMessengerInfo;
    8e78:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    8e7f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  }

  VkInstanceCreateInfo instanceInfo{};
    8e83:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8e87:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    8e8e:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    8e95:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    8e9c:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    8ea3:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    8eaa:	00 00 00 
  instanceInfo.pNext = pDebugMessengerInfo;
    8ead:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8eb1:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.pApplicationInfo = &applicationInfo;
    8eb8:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    8ebf:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(layers.size());
    8ec6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8eca:	48 89 c7             	mov    %rax,%rdi
    8ecd:	e8 22 05 00 00       	call   93f4 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    8ed2:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  instanceInfo.ppEnabledLayerNames = layers.data();
    8ed8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8edc:	48 89 c7             	mov    %rax,%rdi
    8edf:	e8 34 05 00 00       	call   9418 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    8ee4:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  instanceInfo.enabledExtensionCount = static_cast<uint32_t>(extensions.size());
    8eeb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8eef:	48 89 c7             	mov    %rax,%rdi
    8ef2:	e8 fd 04 00 00       	call   93f4 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    8ef7:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  instanceInfo.ppEnabledExtensionNames = extensions.data();
    8efd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8f01:	48 89 c7             	mov    %rax,%rdi
    8f04:	e8 0f 05 00 00       	call   9418 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    8f09:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  if (vkCreateInstance(&instanceInfo, nullptr, &mInstance) != VK_SUCCESS) {
    8f10:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8f17:	48 8d 50 10          	lea    0x10(%rax),%rdx
    8f1b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    8f22:	be 00 00 00 00       	mov    $0x0,%esi
    8f27:	48 89 c7             	mov    %rax,%rdi
    8f2a:	e8 c1 a3 ff ff       	call   32f0 <vkCreateInstance@plt>
    8f2f:	85 c0                	test   %eax,%eax
    8f31:	0f 95 c0             	setne  %al
    8f34:	84 c0                	test   %al,%al
    8f36:	74 3b                	je     8f73 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x2ab>
    throw std::runtime_error("Failed to create instance.");
    8f38:	bf 10 00 00 00       	mov    $0x10,%edi
    8f3d:	e8 8e a1 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    8f42:	48 89 c3             	mov    %rax,%rbx
    8f45:	48 8d 05 05 3d 00 00 	lea    0x3d05(%rip),%rax        # cc51 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x51>
    8f4c:	48 89 c6             	mov    %rax,%rsi
    8f4f:	48 89 df             	mov    %rbx,%rdi
    8f52:	e8 29 a1 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    8f57:	48 8b 05 4a b0 00 00 	mov    0xb04a(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8f5e:	48 89 c2             	mov    %rax,%rdx
    8f61:	48 8d 05 38 ad 00 00 	lea    0xad38(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8f68:	48 89 c6             	mov    %rax,%rsi
    8f6b:	48 89 df             	mov    %rbx,%rdi
    8f6e:	e8 3d a4 ff ff       	call   33b0 <__cxa_throw@plt>
  }

  if constexpr (neko::debugMode) {
    if (mcrContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    8f73:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8f7a:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f7e:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8f85:	48 8d 4a 18          	lea    0x18(%rdx),%rcx
    8f89:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8f90:	48 8b 72 10          	mov    0x10(%rdx),%rsi
    8f94:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f98:	49 89 c8             	mov    %rcx,%r8
    8f9b:	b9 00 00 00 00       	mov    $0x0,%ecx
    8fa0:	48 89 c7             	mov    %rax,%rdi
    8fa3:	e8 c0 fa ff ff       	call   8a68 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                        &mDebugMessenger) != VK_SUCCESS) {
    8fa8:	85 c0                	test   %eax,%eax
    8faa:	0f 95 c0             	setne  %al
    if (mcrContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    8fad:	84 c0                	test   %al,%al
    8faf:	74 3b                	je     8fec <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x324>
      throw std::runtime_error("Failed to create debug messenger");
    8fb1:	bf 10 00 00 00       	mov    $0x10,%edi
    8fb6:	e8 15 a1 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    8fbb:	48 89 c3             	mov    %rax,%rbx
    8fbe:	48 8d 05 ab 3c 00 00 	lea    0x3cab(%rip),%rax        # cc70 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    8fc5:	48 89 c6             	mov    %rax,%rsi
    8fc8:	48 89 df             	mov    %rbx,%rdi
    8fcb:	e8 b0 a0 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    8fd0:	48 8b 05 d1 af 00 00 	mov    0xafd1(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8fd7:	48 89 c2             	mov    %rax,%rdx
    8fda:	48 8d 05 bf ac 00 00 	lea    0xacbf(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8fe1:	48 89 c6             	mov    %rax,%rsi
    8fe4:	48 89 df             	mov    %rbx,%rdi
    8fe7:	e8 c4 a3 ff ff       	call   33b0 <__cxa_throw@plt>
    }
  }
}
    8fec:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8ff0:	48 89 c7             	mov    %rax,%rdi
    8ff3:	e8 56 c2 ff ff       	call   524e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8ff8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8ffc:	48 89 c7             	mov    %rax,%rdi
    8fff:	e8 4a c2 ff ff       	call   524e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9004:	eb 70                	jmp    9076 <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x3ae>
  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    9006:	48 89 c3             	mov    %rax,%rbx
    9009:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    900d:	48 89 c7             	mov    %rax,%rdi
    9010:	e8 95 c1 ff ff       	call   51aa <_ZNSaIPKcED1Ev>
    9015:	eb 45                	jmp    905c <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x394>
    throw std::runtime_error("Failed to create instance.");
    9017:	49 89 c4             	mov    %rax,%r12
    901a:	48 89 df             	mov    %rbx,%rdi
    901d:	e8 2e a1 ff ff       	call   3150 <__cxa_free_exception@plt>
    9022:	4c 89 e3             	mov    %r12,%rbx
    9025:	eb 13                	jmp    903a <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x372>
      throw std::runtime_error("Failed to create debug messenger");
    9027:	49 89 c4             	mov    %rax,%r12
    902a:	48 89 df             	mov    %rbx,%rdi
    902d:	e8 1e a1 ff ff       	call   3150 <__cxa_free_exception@plt>
    9032:	4c 89 e3             	mov    %r12,%rbx
    9035:	eb 03                	jmp    903a <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x372>
}
    9037:	48 89 c3             	mov    %rax,%rbx
    903a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    903e:	48 89 c7             	mov    %rax,%rdi
    9041:	e8 08 c2 ff ff       	call   524e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9046:	eb 03                	jmp    904b <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x383>
    9048:	48 89 c3             	mov    %rax,%rbx
    904b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    904f:	48 89 c7             	mov    %rax,%rdi
    9052:	e8 f7 c1 ff ff       	call   524e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9057:	eb 03                	jmp    905c <_ZN4neko8InstanceC1ERKNS_8SettingsERKNS_7ContextE+0x394>
    9059:	48 89 c3             	mov    %rax,%rbx
    905c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    9063:	48 89 c7             	mov    %rax,%rdi
    9066:	e8 df a6 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    906b:	48 89 d8             	mov    %rbx,%rax
    906e:	48 89 c7             	mov    %rax,%rdi
    9071:	e8 5a a3 ff ff       	call   33d0 <_Unwind_Resume@plt>
    9076:	48 81 c4 28 01 00 00 	add    $0x128,%rsp
    907d:	5b                   	pop    %rbx
    907e:	41 5c                	pop    %r12
    9080:	41 5d                	pop    %r13
    9082:	5d                   	pop    %rbp
    9083:	c3                   	ret

0000000000009084 <_ZN4neko8InstanceD1Ev>:

Instance::~Instance() {
    9084:	55                   	push   %rbp
    9085:	48 89 e5             	mov    %rsp,%rbp
    9088:	48 83 ec 10          	sub    $0x10,%rsp
    908c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9090:	48 8d 15 b9 ab 00 00 	lea    0xabb9(%rip),%rdx        # 13c50 <_ZTVN4neko8InstanceE+0x10>
    9097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909b:	48 89 10             	mov    %rdx,(%rax)
  mcrContext.destroyDebugMessenger(mInstance, mDebugMessenger, nullptr);
    909e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90a2:	48 8b 40 08          	mov    0x8(%rax),%rax
    90a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    90aa:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    90ae:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    90b2:	48 8b 71 10          	mov    0x10(%rcx),%rsi
    90b6:	b9 00 00 00 00       	mov    $0x0,%ecx
    90bb:	48 89 c7             	mov    %rax,%rdi
    90be:	e8 05 fa ff ff       	call   8ac8 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkDestroyInstance(mInstance, nullptr);
    90c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90c7:	48 8b 40 10          	mov    0x10(%rax),%rax
    90cb:	be 00 00 00 00       	mov    $0x0,%esi
    90d0:	48 89 c7             	mov    %rax,%rdi
    90d3:	e8 68 a1 ff ff       	call   3240 <vkDestroyInstance@plt>
}
    90d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90dc:	48 89 c7             	mov    %rax,%rdi
    90df:	e8 66 a6 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    90e4:	90                   	nop
    90e5:	c9                   	leave
    90e6:	c3                   	ret
    90e7:	90                   	nop

00000000000090e8 <_ZN4neko8InstanceD0Ev>:
Instance::~Instance() {
    90e8:	55                   	push   %rbp
    90e9:	48 89 e5             	mov    %rsp,%rbp
    90ec:	48 83 ec 10          	sub    $0x10,%rsp
    90f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
}
    90f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90f8:	48 89 c7             	mov    %rax,%rdi
    90fb:	e8 84 ff ff ff       	call   9084 <_ZN4neko8InstanceD1Ev>
    9100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9104:	be 20 00 00 00       	mov    $0x20,%esi
    9109:	48 89 c7             	mov    %rax,%rdi
    910c:	e8 1f a1 ff ff       	call   3230 <_ZdlPvm@plt>
    9111:	c9                   	leave
    9112:	c3                   	ret

0000000000009113 <_Z41__static_initialization_and_destruction_0ii>:

    9113:	55                   	push   %rbp
    9114:	48 89 e5             	mov    %rsp,%rbp
    9117:	48 83 ec 10          	sub    $0x10,%rsp
    911b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    911e:	89 75 f8             	mov    %esi,-0x8(%rbp)
    9121:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    9125:	75 3b                	jne    9162 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    9127:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    912e:	75 32                	jne    9162 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    9130:	48 8d 05 fb b1 00 00 	lea    0xb1fb(%rip),%rax        # 14332 <_ZStL8__ioinit>
    9137:	48 89 c7             	mov    %rax,%rdi
    913a:	e8 21 a2 ff ff       	call   3360 <_ZNSt8ios_base4InitC1Ev@plt>
    913f:	48 8d 05 ba b0 00 00 	lea    0xb0ba(%rip),%rax        # 14200 <__dso_handle>
    9146:	48 89 c2             	mov    %rax,%rdx
    9149:	48 8d 05 e2 b1 00 00 	lea    0xb1e2(%rip),%rax        # 14332 <_ZStL8__ioinit>
    9150:	48 89 c6             	mov    %rax,%rsi
    9153:	48 8b 05 6e ae 00 00 	mov    0xae6e(%rip),%rax        # 13fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    915a:	48 89 c7             	mov    %rax,%rdi
    915d:	e8 7e a0 ff ff       	call   31e0 <__cxa_atexit@plt>
    9162:	90                   	nop
    9163:	c9                   	leave
    9164:	c3                   	ret

0000000000009165 <_GLOBAL__sub_I__ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    9165:	55                   	push   %rbp
    9166:	48 89 e5             	mov    %rsp,%rbp
    9169:	be ff ff 00 00       	mov    $0xffff,%esi
    916e:	bf 01 00 00 00       	mov    $0x1,%edi
    9173:	e8 9b ff ff ff       	call   9113 <_Z41__static_initialization_and_destruction_0ii>
    9178:	5d                   	pop    %rbp
    9179:	c3                   	ret

000000000000917a <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    917a:	55                   	push   %rbp
    917b:	48 89 e5             	mov    %rsp,%rbp
    917e:	53                   	push   %rbx
    917f:	48 83 ec 28          	sub    $0x28,%rsp
    9183:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9187:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    918b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    918f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9193:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9197:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    919b:	48 89 d6             	mov    %rdx,%rsi
    919e:	48 89 c7             	mov    %rax,%rdi
    91a1:	e8 39 d3 ff ff       	call   64df <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    91a6:	48 89 c1             	mov    %rax,%rcx
    91a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    91ad:	48 89 c2             	mov    %rax,%rdx
    91b0:	48 89 ce             	mov    %rcx,%rsi
    91b3:	48 89 df             	mov    %rbx,%rdi
    91b6:	e8 81 02 00 00       	call   943c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    91bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    91bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91c3:	48 89 d6             	mov    %rdx,%rsi
    91c6:	48 89 c7             	mov    %rax,%rdi
    91c9:	e8 cc 02 00 00       	call   949a <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    91ce:	eb 1a                	jmp    91ea <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    91d0:	48 89 c3             	mov    %rax,%rbx
    91d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91d7:	48 89 c7             	mov    %rax,%rdi
    91da:	e8 89 c8 ff ff       	call   5a68 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    91df:	48 89 d8             	mov    %rbx,%rax
    91e2:	48 89 c7             	mov    %rax,%rdi
    91e5:	e8 e6 a1 ff ff       	call   33d0 <_Unwind_Resume@plt>
    91ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91ee:	c9                   	leave
    91ef:	c3                   	ret

00000000000091f0 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    91f0:	55                   	push   %rbp
    91f1:	48 89 e5             	mov    %rsp,%rbp
    91f4:	48 83 ec 20          	sub    $0x20,%rsp
    91f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    91fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9200:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9204:	48 89 d6             	mov    %rdx,%rsi
    9207:	48 89 c7             	mov    %rax,%rdi
    920a:	e8 cb 02 00 00       	call   94da <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    920f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9213:	c9                   	leave
    9214:	c3                   	ret
    9215:	90                   	nop

0000000000009216 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9216:	55                   	push   %rbp
    9217:	48 89 e5             	mov    %rsp,%rbp
    921a:	48 83 ec 20          	sub    $0x20,%rsp
    921e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9222:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9226:	48 8d 50 08          	lea    0x8(%rax),%rdx
    922a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    922e:	48 89 d6             	mov    %rdx,%rsi
    9231:	48 89 c7             	mov    %rax,%rdi
    9234:	e8 a1 02 00 00       	call   94da <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    923d:	c9                   	leave
    923e:	c3                   	ret

000000000000923f <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    923f:	55                   	push   %rbp
    9240:	48 89 e5             	mov    %rsp,%rbp
    9243:	53                   	push   %rbx
    9244:	48 83 ec 18          	sub    $0x18,%rsp
    9248:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    924c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    9250:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9254:	48 89 c7             	mov    %rax,%rdi
    9257:	e8 9c 02 00 00       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    925c:	48 8b 18             	mov    (%rax),%rbx
    925f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9263:	48 89 c7             	mov    %rax,%rdi
    9266:	e8 8d 02 00 00       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    926b:	48 8b 00             	mov    (%rax),%rax
    926e:	48 39 c3             	cmp    %rax,%rbx
    9271:	0f 95 c0             	setne  %al
    9274:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9278:	c9                   	leave
    9279:	c3                   	ret

000000000000927a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    927a:	55                   	push   %rbp
    927b:	48 89 e5             	mov    %rsp,%rbp
    927e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9286:	48 8b 00             	mov    (%rax),%rax
    9289:	48 8d 50 08          	lea    0x8(%rax),%rdx
    928d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9291:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9298:	5d                   	pop    %rbp
    9299:	c3                   	ret

000000000000929a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    929a:	55                   	push   %rbp
    929b:	48 89 e5             	mov    %rsp,%rbp
    929e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    92a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a6:	48 8b 00             	mov    (%rax),%rax
    92a9:	5d                   	pop    %rbp
    92aa:	c3                   	ret
    92ab:	90                   	nop

00000000000092ac <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    92ac:	55                   	push   %rbp
    92ad:	48 89 e5             	mov    %rsp,%rbp
    92b0:	53                   	push   %rbx
    92b1:	48 83 ec 18          	sub    $0x18,%rsp
    92b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    92bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92c1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    92c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92c9:	48 8b 40 10          	mov    0x10(%rax),%rax
    92cd:	48 39 c2             	cmp    %rax,%rdx
    92d0:	74 3c                	je     930e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    92d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    92d6:	48 89 c7             	mov    %rax,%rdi
    92d9:	e8 28 02 00 00       	call   9506 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    92de:	48 89 c2             	mov    %rax,%rdx
    92e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92e5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    92e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92ed:	48 89 ce             	mov    %rcx,%rsi
    92f0:	48 89 c7             	mov    %rax,%rdi
    92f3:	e8 1c 02 00 00       	call   9514 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    92f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92fc:	48 8b 40 08          	mov    0x8(%rax),%rax
    9300:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9304:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9308:	48 89 50 08          	mov    %rdx,0x8(%rax)
    930c:	eb 30                	jmp    933e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    930e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9312:	48 89 c7             	mov    %rax,%rdi
    9315:	e8 ec 01 00 00       	call   9506 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    931a:	48 89 c3             	mov    %rax,%rbx
    931d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9321:	48 89 c7             	mov    %rax,%rdi
    9324:	e8 ed fe ff ff       	call   9216 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    9329:	48 89 c1             	mov    %rax,%rcx
    932c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9330:	48 89 da             	mov    %rbx,%rdx
    9333:	48 89 ce             	mov    %rcx,%rsi
    9336:	48 89 c7             	mov    %rax,%rdi
    9339:	e8 10 02 00 00       	call   954e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    933e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9342:	48 89 c7             	mov    %rax,%rdi
    9345:	e8 96 03 00 00       	call   96e0 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    934a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    934e:	c9                   	leave
    934f:	c3                   	ret

0000000000009350 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
    9350:	55                   	push   %rbp
    9351:	48 89 e5             	mov    %rsp,%rbp
    9354:	53                   	push   %rbx
    9355:	48 83 ec 18          	sub    $0x18,%rsp
    9359:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    935d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    9361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9365:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    936d:	48 8b 40 10          	mov    0x10(%rax),%rax
    9371:	48 39 c2             	cmp    %rax,%rdx
    9374:	74 3c                	je     93b2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    9376:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    937a:	48 89 c7             	mov    %rax,%rdi
    937d:	e8 9d 03 00 00       	call   971f <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9382:	48 89 c2             	mov    %rax,%rdx
    9385:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9389:	48 8b 48 08          	mov    0x8(%rax),%rcx
    938d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9391:	48 89 ce             	mov    %rcx,%rsi
    9394:	48 89 c7             	mov    %rax,%rdi
    9397:	e8 91 03 00 00       	call   972d <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    939c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93a0:	48 8b 40 08          	mov    0x8(%rax),%rax
    93a4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    93a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93ac:	48 89 50 08          	mov    %rdx,0x8(%rax)
    93b0:	eb 30                	jmp    93e2 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    93b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    93b6:	48 89 c7             	mov    %rax,%rdi
    93b9:	e8 61 03 00 00       	call   971f <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    93be:	48 89 c3             	mov    %rax,%rbx
    93c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93c5:	48 89 c7             	mov    %rax,%rdi
    93c8:	e8 49 fe ff ff       	call   9216 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    93cd:	48 89 c1             	mov    %rax,%rcx
    93d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93d4:	48 89 da             	mov    %rbx,%rdx
    93d7:	48 89 ce             	mov    %rcx,%rsi
    93da:	48 89 c7             	mov    %rax,%rdi
    93dd:	e8 84 03 00 00       	call   9766 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
    93e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93e6:	48 89 c7             	mov    %rax,%rdi
    93e9:	e8 f2 02 00 00       	call   96e0 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
    93ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    93f2:	c9                   	leave
    93f3:	c3                   	ret

00000000000093f4 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    93f4:	55                   	push   %rbp
    93f5:	48 89 e5             	mov    %rsp,%rbp
    93f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    93fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9400:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9408:	48 8b 00             	mov    (%rax),%rax
    940b:	48 29 c2             	sub    %rax,%rdx
    940e:	48 89 d0             	mov    %rdx,%rax
    9411:	48 c1 f8 03          	sar    $0x3,%rax
    9415:	5d                   	pop    %rbp
    9416:	c3                   	ret
    9417:	90                   	nop

0000000000009418 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9418:	55                   	push   %rbp
    9419:	48 89 e5             	mov    %rsp,%rbp
    941c:	48 83 ec 10          	sub    $0x10,%rsp
    9420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9428:	48 8b 10             	mov    (%rax),%rdx
    942b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    942f:	48 89 d6             	mov    %rdx,%rsi
    9432:	48 89 c7             	mov    %rax,%rdi
    9435:	e8 be 04 00 00       	call   98f8 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    943a:	c9                   	leave
    943b:	c3                   	ret

000000000000943c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    943c:	55                   	push   %rbp
    943d:	48 89 e5             	mov    %rsp,%rbp
    9440:	53                   	push   %rbx
    9441:	48 83 ec 28          	sub    $0x28,%rsp
    9445:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9449:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    944d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9451:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9455:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9459:	48 89 d6             	mov    %rdx,%rsi
    945c:	48 89 c7             	mov    %rax,%rdi
    945f:	e8 dc cf ff ff       	call   6440 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9464:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    946c:	48 89 d6             	mov    %rdx,%rsi
    946f:	48 89 c7             	mov    %rax,%rdi
    9472:	e8 93 04 00 00       	call   990a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    9477:	eb 1a                	jmp    9493 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    9479:	48 89 c3             	mov    %rax,%rbx
    947c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9480:	48 89 c7             	mov    %rax,%rdi
    9483:	e8 9e c5 ff ff       	call   5a26 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    9488:	48 89 d8             	mov    %rbx,%rax
    948b:	48 89 c7             	mov    %rax,%rdi
    948e:	e8 3d 9f ff ff       	call   33d0 <_Unwind_Resume@plt>
    9493:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9497:	c9                   	leave
    9498:	c3                   	ret
    9499:	90                   	nop

000000000000949a <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    949a:	55                   	push   %rbp
    949b:	48 89 e5             	mov    %rsp,%rbp
    949e:	48 83 ec 10          	sub    $0x10,%rsp
    94a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    94aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94ae:	48 89 c7             	mov    %rax,%rdi
    94b1:	e8 28 c7 ff ff       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    94b6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    94b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94bd:	48 8b 00             	mov    (%rax),%rax
    94c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94c4:	48 89 ce             	mov    %rcx,%rsi
    94c7:	48 89 c7             	mov    %rax,%rdi
    94ca:	e8 91 04 00 00       	call   9960 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    94cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    94d3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    94d7:	90                   	nop
    94d8:	c9                   	leave
    94d9:	c3                   	ret

00000000000094da <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    94da:	55                   	push   %rbp
    94db:	48 89 e5             	mov    %rsp,%rbp
    94de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    94e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94ea:	48 8b 10             	mov    (%rax),%rdx
    94ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f1:	48 89 10             	mov    %rdx,(%rax)
    94f4:	90                   	nop
    94f5:	5d                   	pop    %rbp
    94f6:	c3                   	ret
    94f7:	90                   	nop

00000000000094f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    94f8:	55                   	push   %rbp
    94f9:	48 89 e5             	mov    %rsp,%rbp
    94fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9500:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9504:	5d                   	pop    %rbp
    9505:	c3                   	ret

0000000000009506 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9506:	55                   	push   %rbp
    9507:	48 89 e5             	mov    %rsp,%rbp
    950a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    950e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9512:	5d                   	pop    %rbp
    9513:	c3                   	ret

0000000000009514 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    9514:	55                   	push   %rbp
    9515:	48 89 e5             	mov    %rsp,%rbp
    9518:	48 83 ec 20          	sub    $0x20,%rsp
    951c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9520:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9524:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    9528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    952c:	48 89 c7             	mov    %rax,%rdi
    952f:	e8 d2 ff ff ff       	call   9506 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9534:	48 89 c2             	mov    %rax,%rdx
    9537:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    953b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    953f:	48 89 ce             	mov    %rcx,%rsi
    9542:	48 89 c7             	mov    %rax,%rdi
    9545:	e8 40 04 00 00       	call   998a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>
	}
    954a:	90                   	nop
    954b:	c9                   	leave
    954c:	c3                   	ret
    954d:	90                   	nop

000000000000954e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    954e:	55                   	push   %rbp
    954f:	48 89 e5             	mov    %rsp,%rbp
    9552:	53                   	push   %rbx
    9553:	48 83 ec 68          	sub    $0x68,%rsp
    9557:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    955b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    955f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    9563:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9567:	48 8d 15 5b 37 00 00 	lea    0x375b(%rip),%rdx        # ccc9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
    956e:	be 01 00 00 00       	mov    $0x1,%esi
    9573:	48 89 c7             	mov    %rax,%rdi
    9576:	e8 4f 04 00 00       	call   99ca <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    957b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    957f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9583:	48 8b 00             	mov    (%rax),%rax
    9586:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    958a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    958e:	48 8b 40 08          	mov    0x8(%rax),%rax
    9592:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    9596:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    959a:	48 89 c7             	mov    %rax,%rdi
    959d:	e8 4e fc ff ff       	call   91f0 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    95a2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    95a6:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    95aa:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    95ae:	48 89 d6             	mov    %rdx,%rsi
    95b1:	48 89 c7             	mov    %rax,%rdi
    95b4:	e8 d9 04 00 00       	call   9a92 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    95b9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    95bd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    95c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    95c5:	48 89 d6             	mov    %rdx,%rsi
    95c8:	48 89 c7             	mov    %rax,%rdi
    95cb:	e8 70 cf ff ff       	call   6540 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    95d0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    95d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95d8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    95dc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    95e0:	48 89 c7             	mov    %rax,%rdi
    95e3:	e8 1e ff ff ff       	call   9506 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    95e8:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    95eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    95ef:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    95f6:	00 
	  _Alloc_traits::construct(this->_M_impl,
    95f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95fb:	48 01 c1             	add    %rax,%rcx
    95fe:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9602:	48 89 ce             	mov    %rcx,%rsi
    9605:	48 89 c7             	mov    %rax,%rdi
    9608:	e8 07 ff ff ff       	call   9514 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    960d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    9614:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    9615:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9619:	48 89 c7             	mov    %rax,%rdi
    961c:	e8 bd c5 ff ff       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9621:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    9624:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9628:	48 89 c7             	mov    %rax,%rdi
    962b:	e8 c8 fe ff ff       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9630:	48 8b 30             	mov    (%rax),%rsi
    9633:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9637:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    963b:	48 89 d9             	mov    %rbx,%rcx
    963e:	48 89 c7             	mov    %rax,%rdi
    9641:	e8 8e 04 00 00       	call   9ad4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    9646:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    964a:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    964f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9653:	48 89 c7             	mov    %rax,%rdi
    9656:	e8 83 c5 ff ff       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    965b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    965e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9662:	48 89 c7             	mov    %rax,%rdi
    9665:	e8 8e fe ff ff       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    966a:	48 8b 00             	mov    (%rax),%rax
    966d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9671:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    9675:	48 89 d9             	mov    %rbx,%rcx
    9678:	48 89 c7             	mov    %rax,%rdi
    967b:	e8 54 04 00 00       	call   9ad4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    9680:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    9684:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    9688:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    968c:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    9690:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    9694:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    9698:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    969c:	48 89 ce             	mov    %rcx,%rsi
    969f:	48 89 c7             	mov    %rax,%rdi
    96a2:	e8 cb cd ff ff       	call   6472 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    96a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    96ab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    96af:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    96b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    96b6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    96ba:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    96be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96c2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    96c9:	00 
    96ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    96ce:	48 01 c2             	add    %rax,%rdx
    96d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    96d5:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    96d9:	90                   	nop
    96da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    96de:	c9                   	leave
    96df:	c3                   	ret

00000000000096e0 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    96e0:	55                   	push   %rbp
    96e1:	48 89 e5             	mov    %rsp,%rbp
    96e4:	48 83 ec 20          	sub    $0x20,%rsp
    96e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    96ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96f0:	48 89 c7             	mov    %rax,%rdi
    96f3:	e8 1e fb ff ff       	call   9216 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    96f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    96fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9700:	be 01 00 00 00       	mov    $0x1,%esi
    9705:	48 89 c7             	mov    %rax,%rdi
    9708:	e8 f9 03 00 00       	call   9b06 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    970d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9711:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    9715:	48 89 c7             	mov    %rax,%rdi
    9718:	e8 7d fb ff ff       	call   929a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    971d:	c9                   	leave
    971e:	c3                   	ret

000000000000971f <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    971f:	55                   	push   %rbp
    9720:	48 89 e5             	mov    %rsp,%rbp
    9723:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    972b:	5d                   	pop    %rbp
    972c:	c3                   	ret

000000000000972d <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    972d:	55                   	push   %rbp
    972e:	48 89 e5             	mov    %rsp,%rbp
    9731:	48 83 ec 20          	sub    $0x20,%rsp
    9735:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9739:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    973d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    9741:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9745:	48 89 c7             	mov    %rax,%rdi
    9748:	e8 d2 ff ff ff       	call   971f <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    974d:	48 89 c2             	mov    %rax,%rdx
    9750:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9758:	48 89 ce             	mov    %rcx,%rsi
    975b:	48 89 c7             	mov    %rax,%rdi
    975e:	e8 e5 03 00 00       	call   9b48 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>
	}
    9763:	90                   	nop
    9764:	c9                   	leave
    9765:	c3                   	ret

0000000000009766 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
    9766:	55                   	push   %rbp
    9767:	48 89 e5             	mov    %rsp,%rbp
    976a:	53                   	push   %rbx
    976b:	48 83 ec 68          	sub    $0x68,%rsp
    976f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    9773:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    9777:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    977b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    977f:	48 8d 15 43 35 00 00 	lea    0x3543(%rip),%rdx        # ccc9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
    9786:	be 01 00 00 00       	mov    $0x1,%esi
    978b:	48 89 c7             	mov    %rax,%rdi
    978e:	e8 37 02 00 00       	call   99ca <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    9793:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    9797:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    979b:	48 8b 00             	mov    (%rax),%rax
    979e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    97a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    97a6:	48 8b 40 08          	mov    0x8(%rax),%rax
    97aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    97ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    97b2:	48 89 c7             	mov    %rax,%rdi
    97b5:	e8 36 fa ff ff       	call   91f0 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    97ba:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    97be:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    97c2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    97c6:	48 89 d6             	mov    %rdx,%rsi
    97c9:	48 89 c7             	mov    %rax,%rdi
    97cc:	e8 c1 02 00 00       	call   9a92 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    97d1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    97d5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    97d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    97dd:	48 89 d6             	mov    %rdx,%rsi
    97e0:	48 89 c7             	mov    %rax,%rdi
    97e3:	e8 58 cd ff ff       	call   6540 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    97e8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    97ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97f0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    97f4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    97f8:	48 89 c7             	mov    %rax,%rdi
    97fb:	e8 1f ff ff ff       	call   971f <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9800:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    9803:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9807:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    980e:	00 
	  _Alloc_traits::construct(this->_M_impl,
    980f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9813:	48 01 c1             	add    %rax,%rcx
    9816:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    981a:	48 89 ce             	mov    %rcx,%rsi
    981d:	48 89 c7             	mov    %rax,%rdi
    9820:	e8 08 ff ff ff       	call   972d <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
    9825:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    982c:	00 
					 __new_start, _M_get_Tp_allocator());
    982d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9831:	48 89 c7             	mov    %rax,%rdi
    9834:	e8 a5 c3 ff ff       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9839:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    983c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9840:	48 89 c7             	mov    %rax,%rdi
    9843:	e8 b0 fc ff ff       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9848:	48 8b 30             	mov    (%rax),%rsi
    984b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    984f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9853:	48 89 d9             	mov    %rbx,%rcx
    9856:	48 89 c7             	mov    %rax,%rdi
    9859:	e8 76 02 00 00       	call   9ad4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    985e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    9862:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    9867:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    986b:	48 89 c7             	mov    %rax,%rdi
    986e:	e8 6b c3 ff ff       	call   5bde <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9873:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    9876:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    987a:	48 89 c7             	mov    %rax,%rdi
    987d:	e8 76 fc ff ff       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9882:	48 8b 00             	mov    (%rax),%rax
    9885:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9889:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    988d:	48 89 d9             	mov    %rbx,%rcx
    9890:	48 89 c7             	mov    %rax,%rdi
    9893:	e8 3c 02 00 00       	call   9ad4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    9898:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    989c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    98a0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    98a4:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    98a8:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    98ac:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    98b0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    98b4:	48 89 ce             	mov    %rcx,%rsi
    98b7:	48 89 c7             	mov    %rax,%rdi
    98ba:	e8 b3 cb ff ff       	call   6472 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    98bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    98c3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    98c7:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    98ca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    98ce:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    98d2:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    98d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98da:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    98e1:	00 
    98e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    98e6:	48 01 c2             	add    %rax,%rdx
    98e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    98ed:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    98f1:	90                   	nop
    98f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98f6:	c9                   	leave
    98f7:	c3                   	ret

00000000000098f8 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    98f8:	55                   	push   %rbp
    98f9:	48 89 e5             	mov    %rsp,%rbp
    98fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9900:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9904:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9908:	5d                   	pop    %rbp
    9909:	c3                   	ret

000000000000990a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    990a:	55                   	push   %rbp
    990b:	48 89 e5             	mov    %rsp,%rbp
    990e:	48 83 ec 10          	sub    $0x10,%rsp
    9912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9916:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    991a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    991e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9922:	48 89 d6             	mov    %rdx,%rsi
    9925:	48 89 c7             	mov    %rax,%rdi
    9928:	e8 13 cc ff ff       	call   6540 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    992d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9931:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9938:	48 8b 10             	mov    (%rax),%rdx
    993b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    993f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9943:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9947:	48 8b 00             	mov    (%rax),%rax
    994a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    994e:	48 c1 e2 03          	shl    $0x3,%rdx
    9952:	48 01 c2             	add    %rax,%rdx
    9955:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9959:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    995d:	90                   	nop
    995e:	c9                   	leave
    995f:	c3                   	ret

0000000000009960 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9960:	55                   	push   %rbp
    9961:	48 89 e5             	mov    %rsp,%rbp
    9964:	48 83 ec 20          	sub    $0x20,%rsp
    9968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    996c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9970:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9974:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9978:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    997c:	48 89 d6             	mov    %rdx,%rsi
    997f:	48 89 c7             	mov    %rax,%rdi
    9982:	e8 00 02 00 00       	call   9b87 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9987:	c9                   	leave
    9988:	c3                   	ret
    9989:	90                   	nop

000000000000998a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    998a:	55                   	push   %rbp
    998b:	48 89 e5             	mov    %rsp,%rbp
    998e:	53                   	push   %rbx
    998f:	48 83 ec 28          	sub    $0x28,%rsp
    9993:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9997:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    999b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    999f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99a3:	48 89 c6             	mov    %rax,%rsi
    99a6:	bf 08 00 00 00       	mov    $0x8,%edi
    99ab:	e8 43 b4 ff ff       	call   4df3 <_ZnwmPv>
    99b0:	48 89 c3             	mov    %rax,%rbx
    99b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99b7:	48 89 c7             	mov    %rax,%rdi
    99ba:	e8 47 fb ff ff       	call   9506 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    99bf:	48 89 03             	mov    %rax,(%rbx)
    99c2:	90                   	nop
    99c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99c7:	c9                   	leave
    99c8:	c3                   	ret
    99c9:	90                   	nop

00000000000099ca <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    99ca:	55                   	push   %rbp
    99cb:	48 89 e5             	mov    %rsp,%rbp
    99ce:	53                   	push   %rbx
    99cf:	48 83 ec 38          	sub    $0x38,%rsp
    99d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    99d7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    99db:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    99df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99e3:	48 89 c7             	mov    %rax,%rdi
    99e6:	e8 c5 01 00 00       	call   9bb0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    99eb:	48 89 c3             	mov    %rax,%rbx
    99ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99f2:	48 89 c7             	mov    %rax,%rdi
    99f5:	e8 fa f9 ff ff       	call   93f4 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    99fa:	48 29 c3             	sub    %rax,%rbx
    99fd:	48 89 da             	mov    %rbx,%rdx
    9a00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9a04:	48 39 c2             	cmp    %rax,%rdx
    9a07:	0f 92 c0             	setb   %al
    9a0a:	84 c0                	test   %al,%al
    9a0c:	74 0c                	je     9a1a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    9a0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9a12:	48 89 c7             	mov    %rax,%rdi
    9a15:	e8 c6 96 ff ff       	call   30e0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    9a1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a1e:	48 89 c7             	mov    %rax,%rdi
    9a21:	e8 ce f9 ff ff       	call   93f4 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    9a26:	48 89 c3             	mov    %rax,%rbx
    9a29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a2d:	48 89 c7             	mov    %rax,%rdi
    9a30:	e8 bf f9 ff ff       	call   93f4 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    9a35:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9a39:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    9a3d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9a41:	48 89 d6             	mov    %rdx,%rsi
    9a44:	48 89 c7             	mov    %rax,%rdi
    9a47:	e8 86 01 00 00       	call   9bd2 <_ZSt3maxImERKT_S2_S2_>
    9a4c:	48 8b 00             	mov    (%rax),%rax
    9a4f:	48 01 d8             	add    %rbx,%rax
    9a52:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9a56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a5a:	48 89 c7             	mov    %rax,%rdi
    9a5d:	e8 92 f9 ff ff       	call   93f4 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    9a62:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9a66:	72 12                	jb     9a7a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    9a68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a6c:	48 89 c7             	mov    %rax,%rdi
    9a6f:	e8 3c 01 00 00       	call   9bb0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    9a74:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9a78:	73 0e                	jae    9a88 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    9a7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a7e:	48 89 c7             	mov    %rax,%rdi
    9a81:	e8 2a 01 00 00       	call   9bb0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    9a86:	eb 04                	jmp    9a8c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    9a88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    9a8c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a90:	c9                   	leave
    9a91:	c3                   	ret

0000000000009a92 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    9a92:	55                   	push   %rbp
    9a93:	48 89 e5             	mov    %rsp,%rbp
    9a96:	53                   	push   %rbx
    9a97:	48 83 ec 18          	sub    $0x18,%rsp
    9a9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    9aa3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9aa7:	48 89 c7             	mov    %rax,%rdi
    9aaa:	e8 49 fa ff ff       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9aaf:	48 8b 18             	mov    (%rax),%rbx
    9ab2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9ab6:	48 89 c7             	mov    %rax,%rdi
    9ab9:	e8 3a fa ff ff       	call   94f8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9abe:	48 8b 00             	mov    (%rax),%rax
    9ac1:	48 89 da             	mov    %rbx,%rdx
    9ac4:	48 29 c2             	sub    %rax,%rdx
    9ac7:	48 89 d0             	mov    %rdx,%rax
    9aca:	48 c1 f8 03          	sar    $0x3,%rax
    9ace:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9ad2:	c9                   	leave
    9ad3:	c3                   	ret

0000000000009ad4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    9ad4:	55                   	push   %rbp
    9ad5:	48 89 e5             	mov    %rsp,%rbp
    9ad8:	48 83 ec 20          	sub    $0x20,%rsp
    9adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ae0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ae4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    9ae8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    9aec:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9af0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9af4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    9af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9afc:	48 89 c7             	mov    %rax,%rdi
    9aff:	e8 f9 00 00 00       	call   9bfd <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    9b04:	c9                   	leave
    9b05:	c3                   	ret

0000000000009b06 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    9b06:	55                   	push   %rbp
    9b07:	48 89 e5             	mov    %rsp,%rbp
    9b0a:	48 83 ec 20          	sub    $0x20,%rsp
    9b0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    9b16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b1a:	48 8b 00             	mov    (%rax),%rax
    9b1d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b21:	48 c1 e2 03          	shl    $0x3,%rdx
    9b25:	48 f7 da             	neg    %rdx
    9b28:	48 01 d0             	add    %rdx,%rax
    9b2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9b2f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    9b33:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    9b37:	48 89 d6             	mov    %rdx,%rsi
    9b3a:	48 89 c7             	mov    %rax,%rdi
    9b3d:	e8 98 f9 ff ff       	call   94da <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9b42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b46:	c9                   	leave
    9b47:	c3                   	ret

0000000000009b48 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    9b48:	55                   	push   %rbp
    9b49:	48 89 e5             	mov    %rsp,%rbp
    9b4c:	53                   	push   %rbx
    9b4d:	48 83 ec 28          	sub    $0x28,%rsp
    9b51:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b55:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9b59:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    9b5d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b61:	48 89 c6             	mov    %rax,%rsi
    9b64:	bf 08 00 00 00       	mov    $0x8,%edi
    9b69:	e8 85 b2 ff ff       	call   4df3 <_ZnwmPv>
    9b6e:	48 89 c3             	mov    %rax,%rbx
    9b71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b75:	48 89 c7             	mov    %rax,%rdi
    9b78:	e8 a2 fb ff ff       	call   971f <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9b7d:	48 89 03             	mov    %rax,(%rbx)
    9b80:	90                   	nop
    9b81:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b85:	c9                   	leave
    9b86:	c3                   	ret

0000000000009b87 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    9b87:	55                   	push   %rbp
    9b88:	48 89 e5             	mov    %rsp,%rbp
    9b8b:	48 83 ec 20          	sub    $0x20,%rsp
    9b8f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b93:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    9b97:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    9b9b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9b9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ba3:	48 89 d6             	mov    %rdx,%rsi
    9ba6:	48 89 c7             	mov    %rax,%rdi
    9ba9:	e8 b2 00 00 00       	call   9c60 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    9bae:	c9                   	leave
    9baf:	c3                   	ret

0000000000009bb0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    9bb0:	55                   	push   %rbp
    9bb1:	48 89 e5             	mov    %rsp,%rbp
    9bb4:	48 83 ec 10          	sub    $0x10,%rsp
    9bb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    9bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc0:	48 89 c7             	mov    %rax,%rdi
    9bc3:	e8 f6 00 00 00       	call   9cbe <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9bc8:	48 89 c7             	mov    %rax,%rdi
    9bcb:	e8 98 d5 ff ff       	call   7168 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    9bd0:	c9                   	leave
    9bd1:	c3                   	ret

0000000000009bd2 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    9bd2:	55                   	push   %rbp
    9bd3:	48 89 e5             	mov    %rsp,%rbp
    9bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    9bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be2:	48 8b 10             	mov    (%rax),%rdx
    9be5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9be9:	48 8b 00             	mov    (%rax),%rax
    9bec:	48 39 c2             	cmp    %rax,%rdx
    9bef:	73 06                	jae    9bf7 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    9bf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9bf5:	eb 04                	jmp    9bfb <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    9bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    9bfb:	5d                   	pop    %rbp
    9bfc:	c3                   	ret

0000000000009bfd <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    9bfd:	55                   	push   %rbp
    9bfe:	48 89 e5             	mov    %rsp,%rbp
    9c01:	41 54                	push   %r12
    9c03:	53                   	push   %rbx
    9c04:	48 83 ec 20          	sub    $0x20,%rsp
    9c08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9c10:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9c14:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    9c18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c1c:	48 89 c7             	mov    %rax,%rdi
    9c1f:	e8 04 eb ff ff       	call   8728 <_ZSt12__niter_baseIPPKcET_S3_>
    9c24:	49 89 c4             	mov    %rax,%r12
    9c27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c2b:	48 89 c7             	mov    %rax,%rdi
    9c2e:	e8 f5 ea ff ff       	call   8728 <_ZSt12__niter_baseIPPKcET_S3_>
    9c33:	48 89 c3             	mov    %rax,%rbx
    9c36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c3a:	48 89 c7             	mov    %rax,%rdi
    9c3d:	e8 e6 ea ff ff       	call   8728 <_ZSt12__niter_baseIPPKcET_S3_>
    9c42:	48 89 c7             	mov    %rax,%rdi
    9c45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9c49:	48 89 c1             	mov    %rax,%rcx
    9c4c:	4c 89 e2             	mov    %r12,%rdx
    9c4f:	48 89 de             	mov    %rbx,%rsi
    9c52:	e8 75 00 00 00       	call   9ccc <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    9c57:	48 83 c4 20          	add    $0x20,%rsp
    9c5b:	5b                   	pop    %rbx
    9c5c:	41 5c                	pop    %r12
    9c5e:	5d                   	pop    %rbp
    9c5f:	c3                   	ret

0000000000009c60 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9c60:	55                   	push   %rbp
    9c61:	48 89 e5             	mov    %rsp,%rbp
    9c64:	48 83 ec 20          	sub    $0x20,%rsp
    9c68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c6c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9c70:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9c75:	74 40                	je     9cb7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    9c77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c7b:	48 89 c7             	mov    %rax,%rdi
    9c7e:	e8 ac 00 00 00       	call   9d2f <_ZSt11__addressofIPKcEPT_RS2_>
    9c83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    9c87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c8b:	48 89 c7             	mov    %rax,%rdi
    9c8e:	e8 aa 00 00 00       	call   9d3d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    9c93:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    9c98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c9c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9ca0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9ca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ca8:	48 89 ce             	mov    %rcx,%rsi
    9cab:	48 89 c7             	mov    %rax,%rdi
    9cae:	e8 b1 00 00 00       	call   9d64 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    9cb3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    9cb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9cbb:	c9                   	leave
    9cbc:	c3                   	ret
    9cbd:	90                   	nop

0000000000009cbe <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    9cbe:	55                   	push   %rbp
    9cbf:	48 89 e5             	mov    %rsp,%rbp
    9cc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9cc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cca:	5d                   	pop    %rbp
    9ccb:	c3                   	ret

0000000000009ccc <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    9ccc:	55                   	push   %rbp
    9ccd:	48 89 e5             	mov    %rsp,%rbp
    9cd0:	48 83 ec 30          	sub    $0x30,%rsp
    9cd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9cd8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9cdc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9ce0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    9ce4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9ce8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    9cec:	48 c1 f8 03          	sar    $0x3,%rax
    9cf0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    9cf4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9cf9:	7e 1f                	jle    9d1a <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    9cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9d06:	00 
    9d07:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9d0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d0f:	48 89 ce             	mov    %rcx,%rsi
    9d12:	48 89 c7             	mov    %rax,%rdi
    9d15:	e8 76 96 ff ff       	call   3390 <memmove@plt>
      return __result + __count;
    9d1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d1e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9d25:	00 
    9d26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d2a:	48 01 d0             	add    %rdx,%rax
    }
    9d2d:	c9                   	leave
    9d2e:	c3                   	ret

0000000000009d2f <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9d2f:	55                   	push   %rbp
    9d30:	48 89 e5             	mov    %rsp,%rbp
    9d33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3b:	5d                   	pop    %rbp
    9d3c:	c3                   	ret

0000000000009d3d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9d3d:	55                   	push   %rbp
    9d3e:	48 89 e5             	mov    %rsp,%rbp
    9d41:	48 83 ec 10          	sub    $0x10,%rsp
    9d45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d4d:	48 89 c6             	mov    %rax,%rsi
    9d50:	bf 08 00 00 00       	mov    $0x8,%edi
    9d55:	e8 99 b0 ff ff       	call   4df3 <_ZnwmPv>
    9d5a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    9d61:	90                   	nop
    9d62:	c9                   	leave
    9d63:	c3                   	ret

0000000000009d64 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9d64:	55                   	push   %rbp
    9d65:	48 89 e5             	mov    %rsp,%rbp
    9d68:	48 83 ec 20          	sub    $0x20,%rsp
    9d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9d78:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9d7c:	48 89 c7             	mov    %rax,%rdi
    9d7f:	e8 24 00 00 00       	call   9da8 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9d84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d88:	48 89 c7             	mov    %rax,%rdi
    9d8b:	e8 84 b0 ff ff       	call   4e14 <_ZSt17__size_to_integerm>
    9d90:	48 89 c1             	mov    %rax,%rcx
    9d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d9b:	48 89 ce             	mov    %rcx,%rsi
    9d9e:	48 89 c7             	mov    %rax,%rdi
    9da1:	e8 0d 00 00 00       	call   9db3 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    9da6:	c9                   	leave
    9da7:	c3                   	ret

0000000000009da8 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    9da8:	55                   	push   %rbp
    9da9:	48 89 e5             	mov    %rsp,%rbp
    9dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9db0:	90                   	nop
    9db1:	5d                   	pop    %rbp
    9db2:	c3                   	ret

0000000000009db3 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    9db3:	55                   	push   %rbp
    9db4:	48 89 e5             	mov    %rsp,%rbp
    9db7:	48 83 ec 20          	sub    $0x20,%rsp
    9dbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dc3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    9dc7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9dcc:	75 06                	jne    9dd4 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    9dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd2:	eb 3a                	jmp    9e0e <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    9dd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9dd8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9ddf:	00 
    9de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9de8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9df0:	48 89 ce             	mov    %rcx,%rsi
    9df3:	48 89 c7             	mov    %rax,%rdi
    9df6:	e8 15 00 00 00       	call   9e10 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    9dfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9dff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9e06:	00 
    9e07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e0b:	48 01 d0             	add    %rdx,%rax
    }
    9e0e:	c9                   	leave
    9e0f:	c3                   	ret

0000000000009e10 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    9e10:	55                   	push   %rbp
    9e11:	48 89 e5             	mov    %rsp,%rbp
    9e14:	48 83 ec 20          	sub    $0x20,%rsp
    9e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    9e24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e28:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e30:	48 89 ce             	mov    %rcx,%rsi
    9e33:	48 89 c7             	mov    %rax,%rdi
    9e36:	e8 03 00 00 00       	call   9e3e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    9e3b:	90                   	nop
    9e3c:	c9                   	leave
    9e3d:	c3                   	ret

0000000000009e3e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    9e3e:	55                   	push   %rbp
    9e3f:	48 89 e5             	mov    %rsp,%rbp
    9e42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9e46:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9e4a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    9e4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e52:	48 8b 00             	mov    (%rax),%rax
    9e55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    9e59:	eb 10                	jmp    9e6b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    9e5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e5f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e63:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    9e66:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    9e6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e6f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    9e73:	75 e6                	jne    9e5b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    9e75:	90                   	nop
    9e76:	90                   	nop
    9e77:	5d                   	pop    %rbp
    9e78:	c3                   	ret
    9e79:	90                   	nop

0000000000009e7a <_ZN4neko6WindowC1ERKNS_8SettingsE>:
#include "window.hpp"

namespace neko {

Window::Window(const Settings &settings)
    9e7a:	55                   	push   %rbp
    9e7b:	48 89 e5             	mov    %rsp,%rbp
    9e7e:	53                   	push   %rbx
    9e7f:	48 83 ec 18          	sub    $0x18,%rsp
    9e83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9e87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    : mWidth{settings.graphics.screenWidth},
      mHeight{settings.graphics.screenHeight} {
    9e8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e8f:	48 89 c7             	mov    %rax,%rdi
    9e92:	e8 99 98 ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    9e97:	48 8d 15 d2 9d 00 00 	lea    0x9dd2(%rip),%rdx        # 13c70 <_ZTVN4neko6WindowE+0x10>
    9e9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ea2:	48 89 10             	mov    %rdx,(%rax)
    : mWidth{settings.graphics.screenWidth},
    9ea5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9ea9:	8b 50 50             	mov    0x50(%rax),%edx
    9eac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9eb0:	89 50 10             	mov    %edx,0x10(%rax)
      mHeight{settings.graphics.screenHeight} {
    9eb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9eb7:	8b 50 54             	mov    0x54(%rax),%edx
    9eba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ebe:	89 50 14             	mov    %edx,0x14(%rax)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    9ec1:	be 00 00 00 00       	mov    $0x0,%esi
    9ec6:	bf 01 20 02 00       	mov    $0x22001,%edi
    9ecb:	e8 00 93 ff ff       	call   31d0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    9ed0:	be 00 00 00 00       	mov    $0x0,%esi
    9ed5:	bf 03 00 02 00       	mov    $0x20003,%edi
    9eda:	e8 f1 92 ff ff       	call   31d0 <glfwWindowHint@plt>
  mWindow = glfwCreateWindow(mWidth, mHeight, settings.general.appName.c_str(),
    9edf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9ee3:	48 89 c7             	mov    %rax,%rdi
    9ee6:	e8 c5 91 ff ff       	call   30b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    9eeb:	48 89 c2             	mov    %rax,%rdx
    9eee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ef2:	8b 40 14             	mov    0x14(%rax),%eax
    9ef5:	89 c6                	mov    %eax,%esi
    9ef7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9efb:	8b 40 10             	mov    0x10(%rax),%eax
    9efe:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9f04:	b9 00 00 00 00       	mov    $0x0,%ecx
    9f09:	89 c7                	mov    %eax,%edi
    9f0b:	e8 70 94 ff ff       	call   3380 <glfwCreateWindow@plt>
    9f10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f14:	48 89 42 08          	mov    %rax,0x8(%rdx)
                             nullptr, nullptr);
}
    9f18:	eb 1a                	jmp    9f34 <_ZN4neko6WindowC1ERKNS_8SettingsE+0xba>
    9f1a:	48 89 c3             	mov    %rax,%rbx
    9f1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f21:	48 89 c7             	mov    %rax,%rdi
    9f24:	e8 21 98 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    9f29:	48 89 d8             	mov    %rbx,%rax
    9f2c:	48 89 c7             	mov    %rax,%rdi
    9f2f:	e8 9c 94 ff ff       	call   33d0 <_Unwind_Resume@plt>
    9f34:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f38:	c9                   	leave
    9f39:	c3                   	ret

0000000000009f3a <_ZN4neko6WindowD1Ev>:

Window::~Window() { glfwDestroyWindow(mWindow); }
    9f3a:	55                   	push   %rbp
    9f3b:	48 89 e5             	mov    %rsp,%rbp
    9f3e:	48 83 ec 10          	sub    $0x10,%rsp
    9f42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f46:	48 8d 15 23 9d 00 00 	lea    0x9d23(%rip),%rdx        # 13c70 <_ZTVN4neko6WindowE+0x10>
    9f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f51:	48 89 10             	mov    %rdx,(%rax)
    9f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f58:	48 8b 40 08          	mov    0x8(%rax),%rax
    9f5c:	48 89 c7             	mov    %rax,%rdi
    9f5f:	e8 fc 90 ff ff       	call   3060 <glfwDestroyWindow@plt>
    9f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f68:	48 89 c7             	mov    %rax,%rdi
    9f6b:	e8 da 97 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    9f70:	90                   	nop
    9f71:	c9                   	leave
    9f72:	c3                   	ret
    9f73:	90                   	nop

0000000000009f74 <_ZN4neko6WindowD0Ev>:
    9f74:	55                   	push   %rbp
    9f75:	48 89 e5             	mov    %rsp,%rbp
    9f78:	48 83 ec 10          	sub    $0x10,%rsp
    9f7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f84:	48 89 c7             	mov    %rax,%rdi
    9f87:	e8 ae ff ff ff       	call   9f3a <_ZN4neko6WindowD1Ev>
    9f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f90:	be 18 00 00 00       	mov    $0x18,%esi
    9f95:	48 89 c7             	mov    %rax,%rdi
    9f98:	e8 93 92 ff ff       	call   3230 <_ZdlPvm@plt>
    9f9d:	c9                   	leave
    9f9e:	c3                   	ret
    9f9f:	90                   	nop

0000000000009fa0 <_ZN4neko6Window4openEv>:

void Window::open() {
    9fa0:	55                   	push   %rbp
    9fa1:	48 89 e5             	mov    %rsp,%rbp
    9fa4:	48 83 ec 10          	sub    $0x10,%rsp
    9fa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(mWindow)) {
    9fac:	eb 05                	jmp    9fb3 <_ZN4neko6Window4openEv+0x13>
    glfwPollEvents();
    9fae:	e8 4d 92 ff ff       	call   3200 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(mWindow)) {
    9fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fb7:	48 8b 40 08          	mov    0x8(%rax),%rax
    9fbb:	48 89 c7             	mov    %rax,%rdi
    9fbe:	e8 3d 94 ff ff       	call   3400 <glfwWindowShouldClose@plt>
    9fc3:	85 c0                	test   %eax,%eax
    9fc5:	0f 94 c0             	sete   %al
    9fc8:	84 c0                	test   %al,%al
    9fca:	75 e2                	jne    9fae <_ZN4neko6Window4openEv+0xe>
  }
}
    9fcc:	90                   	nop
    9fcd:	90                   	nop
    9fce:	c9                   	leave
    9fcf:	c3                   	ret

0000000000009fd0 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>:
#include "renderer/basic/instance/instance.hpp"
#include "renderer/basic/window/window.hpp"

namespace neko {

Surface::Surface(const Instance &crInstance, const Window &crWindow)
    9fd0:	55                   	push   %rbp
    9fd1:	48 89 e5             	mov    %rsp,%rbp
    9fd4:	41 54                	push   %r12
    9fd6:	53                   	push   %rbx
    9fd7:	48 83 ec 20          	sub    $0x20,%rsp
    9fdb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9fdf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9fe3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    : mcrInstance{crInstance} {
    9fe7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9feb:	48 89 c7             	mov    %rax,%rdi
    9fee:	e8 3d 97 ff ff       	call   3730 <_ZN4neko12StaticObjectC1Ev>
    9ff3:	48 8d 15 96 9c 00 00 	lea    0x9c96(%rip),%rdx        # 13c90 <_ZTVN4neko7SurfaceE+0x10>
    9ffa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ffe:	48 89 10             	mov    %rdx,(%rax)
    a001:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a005:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a009:	48 89 50 08          	mov    %rdx,0x8(%rax)
  if (glfwCreateWindowSurface(*crInstance, *crWindow, nullptr, &mSurface) !=
    a00d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a011:	4c 8d 60 10          	lea    0x10(%rax),%r12
    a015:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a019:	48 89 c7             	mov    %rax,%rdi
    a01c:	e8 23 01 00 00       	call   a144 <_ZNK4neko6WindowdeEv>
    a021:	48 8b 18             	mov    (%rax),%rbx
    a024:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a028:	48 89 c7             	mov    %rax,%rdi
    a02b:	e8 f2 ad ff ff       	call   4e22 <_ZNK4neko8InstancedeEv>
    a030:	48 8b 00             	mov    (%rax),%rax
    a033:	4c 89 e1             	mov    %r12,%rcx
    a036:	ba 00 00 00 00       	mov    $0x0,%edx
    a03b:	48 89 de             	mov    %rbx,%rsi
    a03e:	48 89 c7             	mov    %rax,%rdi
    a041:	e8 2a 93 ff ff       	call   3370 <glfwCreateWindowSurface@plt>
    a046:	85 c0                	test   %eax,%eax
    a048:	0f 95 c0             	setne  %al
    a04b:	84 c0                	test   %al,%al
    a04d:	74 65                	je     a0b4 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xe4>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    a04f:	bf 10 00 00 00       	mov    $0x10,%edi
    a054:	e8 77 90 ff ff       	call   30d0 <__cxa_allocate_exception@plt>
    a059:	48 89 c3             	mov    %rax,%rbx
    a05c:	48 8d 05 15 39 00 00 	lea    0x3915(%rip),%rax        # d978 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    a063:	48 89 c6             	mov    %rax,%rsi
    a066:	48 89 df             	mov    %rbx,%rdi
    a069:	e8 12 90 ff ff       	call   3080 <_ZNSt13runtime_errorC1EPKc@plt>
    a06e:	48 8b 05 33 9f 00 00 	mov    0x9f33(%rip),%rax        # 13fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a075:	48 89 c2             	mov    %rax,%rdx
    a078:	48 8d 05 21 9c 00 00 	lea    0x9c21(%rip),%rax        # 13ca0 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a07f:	48 89 c6             	mov    %rax,%rsi
    a082:	48 89 df             	mov    %rbx,%rdi
    a085:	e8 26 93 ff ff       	call   33b0 <__cxa_throw@plt>
    a08a:	49 89 c4             	mov    %rax,%r12
    a08d:	48 89 df             	mov    %rbx,%rdi
    a090:	e8 bb 90 ff ff       	call   3150 <__cxa_free_exception@plt>
    a095:	4c 89 e3             	mov    %r12,%rbx
    a098:	eb 03                	jmp    a09d <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xcd>
  }
}
    a09a:	48 89 c3             	mov    %rax,%rbx
    a09d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0a1:	48 89 c7             	mov    %rax,%rdi
    a0a4:	e8 a1 96 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    a0a9:	48 89 d8             	mov    %rbx,%rax
    a0ac:	48 89 c7             	mov    %rax,%rdi
    a0af:	e8 1c 93 ff ff       	call   33d0 <_Unwind_Resume@plt>
    a0b4:	90                   	nop
    a0b5:	48 83 c4 20          	add    $0x20,%rsp
    a0b9:	5b                   	pop    %rbx
    a0ba:	41 5c                	pop    %r12
    a0bc:	5d                   	pop    %rbp
    a0bd:	c3                   	ret

000000000000a0be <_ZN4neko7SurfaceD1Ev>:

Surface::~Surface() { vkDestroySurfaceKHR(*mcrInstance, mSurface, nullptr); }
    a0be:	55                   	push   %rbp
    a0bf:	48 89 e5             	mov    %rsp,%rbp
    a0c2:	53                   	push   %rbx
    a0c3:	48 83 ec 18          	sub    $0x18,%rsp
    a0c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0cb:	48 8d 15 be 9b 00 00 	lea    0x9bbe(%rip),%rdx        # 13c90 <_ZTVN4neko7SurfaceE+0x10>
    a0d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0d6:	48 89 10             	mov    %rdx,(%rax)
    a0d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0dd:	48 8b 58 10          	mov    0x10(%rax),%rbx
    a0e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0e5:	48 8b 40 08          	mov    0x8(%rax),%rax
    a0e9:	48 89 c7             	mov    %rax,%rdi
    a0ec:	e8 31 ad ff ff       	call   4e22 <_ZNK4neko8InstancedeEv>
    a0f1:	48 8b 00             	mov    (%rax),%rax
    a0f4:	ba 00 00 00 00       	mov    $0x0,%edx
    a0f9:	48 89 de             	mov    %rbx,%rsi
    a0fc:	48 89 c7             	mov    %rax,%rdi
    a0ff:	e8 bc 92 ff ff       	call   33c0 <vkDestroySurfaceKHR@plt>
    a104:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a108:	48 89 c7             	mov    %rax,%rdi
    a10b:	e8 3a 96 ff ff       	call   374a <_ZN4neko12StaticObjectD1Ev>
    a110:	90                   	nop
    a111:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a115:	c9                   	leave
    a116:	c3                   	ret
    a117:	90                   	nop

000000000000a118 <_ZN4neko7SurfaceD0Ev>:
    a118:	55                   	push   %rbp
    a119:	48 89 e5             	mov    %rsp,%rbp
    a11c:	48 83 ec 10          	sub    $0x10,%rsp
    a120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a128:	48 89 c7             	mov    %rax,%rdi
    a12b:	e8 8e ff ff ff       	call   a0be <_ZN4neko7SurfaceD1Ev>
    a130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a134:	be 18 00 00 00       	mov    $0x18,%esi
    a139:	48 89 c7             	mov    %rax,%rdi
    a13c:	e8 ef 90 ff ff       	call   3230 <_ZdlPvm@plt>
    a141:	c9                   	leave
    a142:	c3                   	ret
    a143:	90                   	nop

000000000000a144 <_ZNK4neko6WindowdeEv>:

  explicit Window(const Settings &settings);

  ~Window();

  const GLWindow &operator*() const noexcept { return mWindow; }
    a144:	55                   	push   %rbp
    a145:	48 89 e5             	mov    %rsp,%rbp
    a148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a14c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a150:	48 83 c0 08          	add    $0x8,%rax
    a154:	5d                   	pop    %rbp
    a155:	c3                   	ret

Disassembly of section .fini:

000000000000a158 <_fini>:
    a158:	48 83 ec 08          	sub    $0x8,%rsp
    a15c:	48 83 c4 08          	add    $0x8,%rsp
    a160:	c3                   	ret
