
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000005000 <_init>:
    5000:	48 83 ec 08          	sub    $0x8,%rsp
    5004:	48 8b 05 c5 bf 00 00 	mov    0xbfc5(%rip),%rax        # 10fd0 <__gmon_start__@Base>
    500b:	48 85 c0             	test   %rax,%rax
    500e:	74 02                	je     5012 <_init+0x12>
    5010:	ff d0                	call   *%rax
    5012:	48 83 c4 08          	add    $0x8,%rsp
    5016:	c3                   	ret

Disassembly of section .plt:

0000000000005020 <_Znam@plt-0x10>:
    5020:	ff 35 ca bf 00 00    	push   0xbfca(%rip)        # 10ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    5026:	ff 25 cc bf 00 00    	jmp    *0xbfcc(%rip)        # 10ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    502c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005030 <_Znam@plt>:
    5030:	ff 25 ca bf 00 00    	jmp    *0xbfca(%rip)        # 11000 <_Znam@GLIBCXX_3.4>
    5036:	68 00 00 00 00       	push   $0x0
    503b:	e9 e0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005040 <_ZNSaIcED2Ev@plt>:
    5040:	ff 25 c2 bf 00 00    	jmp    *0xbfc2(%rip)        # 11008 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    5046:	68 01 00 00 00       	push   $0x1
    504b:	e9 d0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005050 <_ZNSolsEPFRSt8ios_baseS0_E@plt>:
    5050:	ff 25 ba bf 00 00    	jmp    *0xbfba(%rip)        # 11010 <_ZNSolsEPFRSt8ios_baseS0_E@GLIBCXX_3.4>
    5056:	68 02 00 00 00       	push   $0x2
    505b:	e9 c0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005060 <_ZSt17__throw_bad_allocv@plt>:
    5060:	ff 25 b2 bf 00 00    	jmp    *0xbfb2(%rip)        # 11018 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    5066:	68 03 00 00 00       	push   $0x3
    506b:	e9 b0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005070 <__cxa_begin_catch@plt>:
    5070:	ff 25 aa bf 00 00    	jmp    *0xbfaa(%rip)        # 11020 <__cxa_begin_catch@CXXABI_1.3>
    5076:	68 04 00 00 00       	push   $0x4
    507b:	e9 a0 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005080 <strlen@plt>:
    5080:	ff 25 a2 bf 00 00    	jmp    *0xbfa2(%rip)        # 11028 <strlen@GLIBC_2.2.5>
    5086:	68 05 00 00 00       	push   $0x5
    508b:	e9 90 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005090 <__cxa_allocate_exception@plt>:
    5090:	ff 25 9a bf 00 00    	jmp    *0xbf9a(%rip)        # 11030 <__cxa_allocate_exception@CXXABI_1.3>
    5096:	68 06 00 00 00       	push   $0x6
    509b:	e9 80 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050a0 <_ZSt20__throw_length_errorPKc@plt>:
    50a0:	ff 25 92 bf 00 00    	jmp    *0xbf92(%rip)        # 11038 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    50a6:	68 07 00 00 00       	push   $0x7
    50ab:	e9 70 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050b0 <__cxa_guard_release@plt>:
    50b0:	ff 25 8a bf 00 00    	jmp    *0xbf8a(%rip)        # 11040 <__cxa_guard_release@CXXABI_1.3>
    50b6:	68 08 00 00 00       	push   $0x8
    50bb:	e9 60 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050c0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    50c0:	ff 25 82 bf 00 00    	jmp    *0xbf82(%rip)        # 11048 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.26>
    50c6:	68 09 00 00 00       	push   $0x9
    50cb:	e9 50 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050d0 <_ZSt19__throw_logic_errorPKc@plt>:
    50d0:	ff 25 7a bf 00 00    	jmp    *0xbf7a(%rip)        # 11050 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    50d6:	68 0a 00 00 00       	push   $0xa
    50db:	e9 40 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050e0 <__cxa_free_exception@plt>:
    50e0:	ff 25 72 bf 00 00    	jmp    *0xbf72(%rip)        # 11058 <__cxa_free_exception@CXXABI_1.3>
    50e6:	68 0b 00 00 00       	push   $0xb
    50eb:	e9 30 ff ff ff       	jmp    5020 <_init+0x20>

00000000000050f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    50f0:	ff 25 6a bf 00 00    	jmp    *0xbf6a(%rip)        # 11060 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    50f6:	68 0c 00 00 00       	push   $0xc
    50fb:	e9 20 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005100 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    5100:	ff 25 62 bf 00 00    	jmp    *0xbf62(%rip)        # 11068 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    5106:	68 0d 00 00 00       	push   $0xd
    510b:	e9 10 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005110 <memcpy@plt>:
    5110:	ff 25 5a bf 00 00    	jmp    *0xbf5a(%rip)        # 11070 <memcpy@GLIBC_2.14>
    5116:	68 0e 00 00 00       	push   $0xe
    511b:	e9 00 ff ff ff       	jmp    5020 <_init+0x20>

0000000000005120 <_ZNSt12system_errorD2Ev@plt>:
    5120:	ff 25 52 bf 00 00    	jmp    *0xbf52(%rip)        # 11078 <_ZNSt12system_errorD2Ev@GLIBCXX_3.4.11>
    5126:	68 0f 00 00 00       	push   $0xf
    512b:	e9 f0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005130 <__cxa_atexit@plt>:
    5130:	ff 25 4a bf 00 00    	jmp    *0xbf4a(%rip)        # 11080 <__cxa_atexit@GLIBC_2.2.5>
    5136:	68 10 00 00 00       	push   $0x10
    513b:	e9 e0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005140 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    5140:	ff 25 42 bf 00 00    	jmp    *0xbf42(%rip)        # 11088 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    5146:	68 11 00 00 00       	push   $0x11
    514b:	e9 d0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005150 <_ZdlPv@plt>:
    5150:	ff 25 3a bf 00 00    	jmp    *0xbf3a(%rip)        # 11090 <_ZdlPv@GLIBCXX_3.4>
    5156:	68 12 00 00 00       	push   $0x12
    515b:	e9 c0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005160 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    5160:	ff 25 32 bf 00 00    	jmp    *0xbf32(%rip)        # 11098 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    5166:	68 13 00 00 00       	push   $0x13
    516b:	e9 b0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005170 <_Znwm@plt>:
    5170:	ff 25 2a bf 00 00    	jmp    *0xbf2a(%rip)        # 110a0 <_Znwm@GLIBCXX_3.4>
    5176:	68 14 00 00 00       	push   $0x14
    517b:	e9 a0 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005180 <_ZdlPvm@plt>:
    5180:	ff 25 22 bf 00 00    	jmp    *0xbf22(%rip)        # 110a8 <_ZdlPvm@CXXABI_1.3.9>
    5186:	68 15 00 00 00       	push   $0x15
    518b:	e9 90 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005190 <_ZNSaIcED1Ev@plt>:
    5190:	ff 25 1a bf 00 00    	jmp    *0xbf1a(%rip)        # 110b0 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    5196:	68 16 00 00 00       	push   $0x16
    519b:	e9 80 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    51a0:	ff 25 12 bf 00 00    	jmp    *0xbf12(%rip)        # 110b8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    51a6:	68 17 00 00 00       	push   $0x17
    51ab:	e9 70 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051b0 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    51b0:	ff 25 0a bf 00 00    	jmp    *0xbf0a(%rip)        # 110c0 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    51b6:	68 18 00 00 00       	push   $0x18
    51bb:	e9 60 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051c0 <_ZdaPv@plt>:
    51c0:	ff 25 02 bf 00 00    	jmp    *0xbf02(%rip)        # 110c8 <_ZdaPv@GLIBCXX_3.4>
    51c6:	68 19 00 00 00       	push   $0x19
    51cb:	e9 50 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051d0 <_ZNSolsEj@plt>:
    51d0:	ff 25 fa be 00 00    	jmp    *0xbefa(%rip)        # 110d0 <_ZNSolsEj@GLIBCXX_3.4>
    51d6:	68 1a 00 00 00       	push   $0x1a
    51db:	e9 40 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051e0 <_ZNKSt13runtime_error4whatEv@plt>:
    51e0:	ff 25 f2 be 00 00    	jmp    *0xbef2(%rip)        # 110d8 <_ZNKSt13runtime_error4whatEv@GLIBCXX_3.4>
    51e6:	68 1b 00 00 00       	push   $0x1b
    51eb:	e9 30 fe ff ff       	jmp    5020 <_init+0x20>

00000000000051f0 <_ZNSaIcEC2ERKS_@plt>:
    51f0:	ff 25 ea be 00 00    	jmp    *0xbeea(%rip)        # 110e0 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    51f6:	68 1c 00 00 00       	push   $0x1c
    51fb:	e9 20 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005200 <_ZSt24__throw_out_of_range_fmtPKcz@plt>:
    5200:	ff 25 e2 be 00 00    	jmp    *0xbee2(%rip)        # 110e8 <_ZSt24__throw_out_of_range_fmtPKcz@GLIBCXX_3.4.20>
    5206:	68 1d 00 00 00       	push   $0x1d
    520b:	e9 10 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005210 <_ZNSt8ios_base4InitC1Ev@plt>:
    5210:	ff 25 da be 00 00    	jmp    *0xbeda(%rip)        # 110f0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    5216:	68 1e 00 00 00       	push   $0x1e
    521b:	e9 00 fe ff ff       	jmp    5020 <_init+0x20>

0000000000005220 <memmove@plt>:
    5220:	ff 25 d2 be 00 00    	jmp    *0xbed2(%rip)        # 110f8 <memmove@GLIBC_2.2.5>
    5226:	68 1f 00 00 00       	push   $0x1f
    522b:	e9 f0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005230 <__cxa_end_catch@plt>:
    5230:	ff 25 ca be 00 00    	jmp    *0xbeca(%rip)        # 11100 <__cxa_end_catch@CXXABI_1.3>
    5236:	68 20 00 00 00       	push   $0x20
    523b:	e9 e0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005240 <__cxa_throw@plt>:
    5240:	ff 25 c2 be 00 00    	jmp    *0xbec2(%rip)        # 11108 <__cxa_throw@CXXABI_1.3>
    5246:	68 21 00 00 00       	push   $0x21
    524b:	e9 d0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005250 <_ZNSt3_V214error_categoryD2Ev@plt>:
    5250:	ff 25 ba be 00 00    	jmp    *0xbeba(%rip)        # 11110 <_ZNSt3_V214error_categoryD2Ev@GLIBCXX_3.4.21>
    5256:	68 22 00 00 00       	push   $0x22
    525b:	e9 c0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005260 <_Unwind_Resume@plt>:
    5260:	ff 25 b2 be 00 00    	jmp    *0xbeb2(%rip)        # 11118 <_Unwind_Resume@GCC_3.0>
    5266:	68 23 00 00 00       	push   $0x23
    526b:	e9 b0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005270 <_ZNSaIcEC1Ev@plt>:
    5270:	ff 25 aa be 00 00    	jmp    *0xbeaa(%rip)        # 11120 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    5276:	68 24 00 00 00       	push   $0x24
    527b:	e9 a0 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005280 <__cxa_guard_acquire@plt>:
    5280:	ff 25 a2 be 00 00    	jmp    *0xbea2(%rip)        # 11128 <__cxa_guard_acquire@CXXABI_1.3>
    5286:	68 25 00 00 00       	push   $0x25
    528b:	e9 90 fd ff ff       	jmp    5020 <_init+0x20>

0000000000005290 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>:
    5290:	ff 25 9a be 00 00    	jmp    *0xbe9a(%rip)        # 11130 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@GLIBCXX_3.4.29>
    5296:	68 26 00 00 00       	push   $0x26
    529b:	e9 80 fd ff ff       	jmp    5020 <_init+0x20>

Disassembly of section .plt.got:

00000000000052a0 <__cxa_finalize@plt>:
    52a0:	ff 25 12 bd 00 00    	jmp    *0xbd12(%rip)        # 10fb8 <__cxa_finalize@GLIBC_2.2.5>
    52a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000052b0 <_start>:
    52b0:	31 ed                	xor    %ebp,%ebp
    52b2:	49 89 d1             	mov    %rdx,%r9
    52b5:	5e                   	pop    %rsi
    52b6:	48 89 e2             	mov    %rsp,%rdx
    52b9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    52bd:	50                   	push   %rax
    52be:	54                   	push   %rsp
    52bf:	45 31 c0             	xor    %r8d,%r8d
    52c2:	31 c9                	xor    %ecx,%ecx
    52c4:	48 8d 3d 7f 0d 00 00 	lea    0xd7f(%rip),%rdi        # 604a <main>
    52cb:	ff 15 ef bc 00 00    	call   *0xbcef(%rip)        # 10fc0 <__libc_start_main@GLIBC_2.34>
    52d1:	f4                   	hlt
    52d2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    52d9:	00 00 00 
    52dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000052e0 <deregister_tm_clones>:
    52e0:	48 8d 3d 79 be 00 00 	lea    0xbe79(%rip),%rdi        # 11160 <__TMC_END__>
    52e7:	48 8d 05 72 be 00 00 	lea    0xbe72(%rip),%rax        # 11160 <__TMC_END__>
    52ee:	48 39 f8             	cmp    %rdi,%rax
    52f1:	74 15                	je     5308 <deregister_tm_clones+0x28>
    52f3:	48 8b 05 ce bc 00 00 	mov    0xbcce(%rip),%rax        # 10fc8 <_ITM_deregisterTMCloneTable@Base>
    52fa:	48 85 c0             	test   %rax,%rax
    52fd:	74 09                	je     5308 <deregister_tm_clones+0x28>
    52ff:	ff e0                	jmp    *%rax
    5301:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5308:	c3                   	ret
    5309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005310 <register_tm_clones>:
    5310:	48 8d 3d 49 be 00 00 	lea    0xbe49(%rip),%rdi        # 11160 <__TMC_END__>
    5317:	48 8d 35 42 be 00 00 	lea    0xbe42(%rip),%rsi        # 11160 <__TMC_END__>
    531e:	48 29 fe             	sub    %rdi,%rsi
    5321:	48 89 f0             	mov    %rsi,%rax
    5324:	48 c1 ee 3f          	shr    $0x3f,%rsi
    5328:	48 c1 f8 03          	sar    $0x3,%rax
    532c:	48 01 c6             	add    %rax,%rsi
    532f:	48 d1 fe             	sar    %rsi
    5332:	74 14                	je     5348 <register_tm_clones+0x38>
    5334:	48 8b 05 9d bc 00 00 	mov    0xbc9d(%rip),%rax        # 10fd8 <_ITM_registerTMCloneTable@Base>
    533b:	48 85 c0             	test   %rax,%rax
    533e:	74 08                	je     5348 <register_tm_clones+0x38>
    5340:	ff e0                	jmp    *%rax
    5342:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5348:	c3                   	ret
    5349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005350 <__do_global_dtors_aux>:
    5350:	f3 0f 1e fa          	endbr64
    5354:	80 3d 55 c0 00 00 00 	cmpb   $0x0,0xc055(%rip)        # 113b0 <completed.0>
    535b:	75 2b                	jne    5388 <__do_global_dtors_aux+0x38>
    535d:	55                   	push   %rbp
    535e:	48 83 3d 52 bc 00 00 	cmpq   $0x0,0xbc52(%rip)        # 10fb8 <__cxa_finalize@GLIBC_2.2.5>
    5365:	00 
    5366:	48 89 e5             	mov    %rsp,%rbp
    5369:	74 0c                	je     5377 <__do_global_dtors_aux+0x27>
    536b:	48 8b 3d ce bd 00 00 	mov    0xbdce(%rip),%rdi        # 11140 <__dso_handle>
    5372:	e8 29 ff ff ff       	call   52a0 <__cxa_finalize@plt>
    5377:	e8 64 ff ff ff       	call   52e0 <deregister_tm_clones>
    537c:	c6 05 2d c0 00 00 01 	movb   $0x1,0xc02d(%rip)        # 113b0 <completed.0>
    5383:	5d                   	pop    %rbp
    5384:	c3                   	ret
    5385:	0f 1f 00             	nopl   (%rax)
    5388:	c3                   	ret
    5389:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005390 <frame_dummy>:
    5390:	f3 0f 1e fa          	endbr64
    5394:	e9 77 ff ff ff       	jmp    5310 <register_tm_clones>

0000000000005399 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc>:
  };

  namespace
  {
    [[noreturn]] void throwResultException( Result result, char const * message )
    {
    5399:	55                   	push   %rbp
    539a:	48 89 e5             	mov    %rsp,%rbp
    539d:	41 54                	push   %r12
    539f:	53                   	push   %rbx
    53a0:	48 83 ec 30          	sub    $0x30,%rsp
    53a4:	89 7d cc             	mov    %edi,-0x34(%rbp)
    53a7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      switch ( result )
    53ab:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    53af:	0f 89 28 07 00 00    	jns    5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    53b5:	83 7d cc f3          	cmpl   $0xfffffff3,-0x34(%rbp)
    53b9:	0f 8d 3d 01 00 00    	jge    54fc <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x163>
    53bf:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    53c6:	0f 84 19 05 00 00    	je     58e5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x54c>
    53cc:	81 7d cc 00 36 65 c4 	cmpl   $0xc4653600,-0x34(%rbp)
    53d3:	0f 8f 04 07 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    53d9:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    53e0:	0f 84 37 05 00 00    	je     591d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x584>
    53e6:	81 7d cc ff 35 65 c4 	cmpl   $0xc46535ff,-0x34(%rbp)
    53ed:	0f 8f ea 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    53f3:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    53fa:	0f 84 55 05 00 00    	je     5955 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5bc>
    5400:	81 7d cc 14 32 65 c4 	cmpl   $0xc4653214,-0x34(%rbp)
    5407:	0f 8f d0 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    540d:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    5414:	0f 84 73 05 00 00    	je     598d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x5f4>
    541a:	81 7d cc 47 2a 65 c4 	cmpl   $0xc4652a47,-0x34(%rbp)
    5421:	0f 8f b6 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5427:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    542e:	0f 84 91 05 00 00    	je     59c5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x62c>
    5434:	81 7d cc 07 0b 65 c4 	cmpl   $0xc4650b07,-0x34(%rbp)
    543b:	0f 8f 9c 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5441:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    5448:	0f 84 af 05 00 00    	je     59fd <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x664>
    544e:	81 7d cc 20 07 65 c4 	cmpl   $0xc4650720,-0x34(%rbp)
    5455:	0f 8f 82 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    545b:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    5462:	0f 84 9d 03 00 00    	je     5805 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x46c>
    5468:	81 7d cc 78 28 64 c4 	cmpl   $0xc4642878,-0x34(%rbp)
    546f:	0f 8f 68 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    5475:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    547c:	0f 84 bb 03 00 00    	je     583d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4a4>
    5482:	81 7d cc bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x34(%rbp)
    5489:	0f 8f 4e 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    548f:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    5496:	0f 84 99 05 00 00    	je     5a35 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x69c>
    549c:	81 7d cc d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x34(%rbp)
    54a3:	0f 8f 34 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54a9:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    54b0:	0f 84 bf 03 00 00    	je     5875 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x4dc>
    54b6:	81 7d cc 18 c1 62 c4 	cmpl   $0xc462c118,-0x34(%rbp)
    54bd:	0f 8f 1a 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54c3:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    54ca:	0f 84 9d 05 00 00    	je     5a6d <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x6d4>
    54d0:	81 7d cc 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x34(%rbp)
    54d7:	0f 8f 00 06 00 00    	jg     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54dd:	81 7d cc b0 0d 60 c4 	cmpl   $0xc4600db0,-0x34(%rbp)
    54e4:	0f 84 bb 05 00 00    	je     5aa5 <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x70c>
    54ea:	81 7d cc 18 4a 61 c4 	cmpl   $0xc4614a18,-0x34(%rbp)
    54f1:	0f 84 b6 03 00 00    	je     58ad <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x514>
    54f7:	e9 e1 05 00 00       	jmp    5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    54fc:	8b 45 cc             	mov    -0x34(%rbp),%eax
    54ff:	83 c0 0d             	add    $0xd,%eax
    5502:	83 f8 0c             	cmp    $0xc,%eax
    5505:	0f 87 d2 05 00 00    	ja     5add <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x744>
    550b:	89 c0                	mov    %eax,%eax
    550d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5514:	00 
    5515:	48 8d 05 54 74 00 00 	lea    0x7454(%rip),%rax        # c970 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x338>
    551c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    551f:	48 98                	cltq
    5521:	48 8d 15 48 74 00 00 	lea    0x7448(%rip),%rdx        # c970 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x338>
    5528:	48 01 d0             	add    %rdx,%rax
    552b:	ff e0                	jmp    *%rax
      {
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    552d:	bf 28 00 00 00       	mov    $0x28,%edi
    5532:	e8 59 fb ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5537:	48 89 c3             	mov    %rax,%rbx
    553a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    553e:	48 89 c6             	mov    %rax,%rsi
    5541:	48 89 df             	mov    %rbx,%rdi
    5544:	e8 eb 23 00 00       	call   7934 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>
    5549:	48 8d 05 34 5a 00 00 	lea    0x5a34(%rip),%rax        # af84 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    5550:	48 89 c2             	mov    %rax,%rdx
    5553:	48 8d 05 e6 b7 00 00 	lea    0xb7e6(%rip),%rax        # 10d40 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    555a:	48 89 c6             	mov    %rax,%rsi
    555d:	48 89 df             	mov    %rbx,%rdi
    5560:	e8 db fc ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    5565:	bf 28 00 00 00       	mov    $0x28,%edi
    556a:	e8 21 fb ff ff       	call   5090 <__cxa_allocate_exception@plt>
    556f:	48 89 c3             	mov    %rax,%rbx
    5572:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5576:	48 89 c6             	mov    %rax,%rsi
    5579:	48 89 df             	mov    %rbx,%rdi
    557c:	e8 85 24 00 00       	call   7a06 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>
    5581:	48 8d 05 8c 59 00 00 	lea    0x598c(%rip),%rax        # af14 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    5588:	48 89 c2             	mov    %rax,%rdx
    558b:	48 8d 05 96 b7 00 00 	lea    0xb796(%rip),%rax        # 10d28 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5592:	48 89 c6             	mov    %rax,%rsi
    5595:	48 89 df             	mov    %rbx,%rdi
    5598:	e8 a3 fc ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    559d:	bf 28 00 00 00       	mov    $0x28,%edi
    55a2:	e8 e9 fa ff ff       	call   5090 <__cxa_allocate_exception@plt>
    55a7:	48 89 c3             	mov    %rax,%rbx
    55aa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    55ae:	48 89 c6             	mov    %rax,%rsi
    55b1:	48 89 df             	mov    %rbx,%rdi
    55b4:	e8 1f 25 00 00       	call   7ad8 <_ZN2vk25InitializationFailedErrorC1EPKc>
    55b9:	48 8d 05 e4 58 00 00 	lea    0x58e4(%rip),%rax        # aea4 <_ZN2vk25InitializationFailedErrorD1Ev>
    55c0:	48 89 c2             	mov    %rax,%rdx
    55c3:	48 8d 05 46 b7 00 00 	lea    0xb746(%rip),%rax        # 10d10 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    55ca:	48 89 c6             	mov    %rax,%rsi
    55cd:	48 89 df             	mov    %rbx,%rdi
    55d0:	e8 6b fc ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    55d5:	bf 28 00 00 00       	mov    $0x28,%edi
    55da:	e8 b1 fa ff ff       	call   5090 <__cxa_allocate_exception@plt>
    55df:	48 89 c3             	mov    %rax,%rbx
    55e2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    55e6:	48 89 c6             	mov    %rax,%rsi
    55e9:	48 89 df             	mov    %rbx,%rdi
    55ec:	e8 b9 25 00 00       	call   7baa <_ZN2vk15DeviceLostErrorC1EPKc>
    55f1:	48 8d 05 3c 58 00 00 	lea    0x583c(%rip),%rax        # ae34 <_ZN2vk15DeviceLostErrorD1Ev>
    55f8:	48 89 c2             	mov    %rax,%rdx
    55fb:	48 8d 05 f6 b6 00 00 	lea    0xb6f6(%rip),%rax        # 10cf8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5602:	48 89 c6             	mov    %rax,%rsi
    5605:	48 89 df             	mov    %rbx,%rdi
    5608:	e8 33 fc ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    560d:	bf 28 00 00 00       	mov    $0x28,%edi
    5612:	e8 79 fa ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5617:	48 89 c3             	mov    %rax,%rbx
    561a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    561e:	48 89 c6             	mov    %rax,%rsi
    5621:	48 89 df             	mov    %rbx,%rdi
    5624:	e8 53 26 00 00       	call   7c7c <_ZN2vk20MemoryMapFailedErrorC1EPKc>
    5629:	48 8d 05 94 57 00 00 	lea    0x5794(%rip),%rax        # adc4 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    5630:	48 89 c2             	mov    %rax,%rdx
    5633:	48 8d 05 a6 b6 00 00 	lea    0xb6a6(%rip),%rax        # 10ce0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    563a:	48 89 c6             	mov    %rax,%rsi
    563d:	48 89 df             	mov    %rbx,%rdi
    5640:	e8 fb fb ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    5645:	bf 28 00 00 00       	mov    $0x28,%edi
    564a:	e8 41 fa ff ff       	call   5090 <__cxa_allocate_exception@plt>
    564f:	48 89 c3             	mov    %rax,%rbx
    5652:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5656:	48 89 c6             	mov    %rax,%rsi
    5659:	48 89 df             	mov    %rbx,%rdi
    565c:	e8 ed 26 00 00       	call   7d4e <_ZN2vk20LayerNotPresentErrorC1EPKc>
    5661:	48 8d 05 ec 56 00 00 	lea    0x56ec(%rip),%rax        # ad54 <_ZN2vk20LayerNotPresentErrorD1Ev>
    5668:	48 89 c2             	mov    %rax,%rdx
    566b:	48 8d 05 56 b6 00 00 	lea    0xb656(%rip),%rax        # 10cc8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5672:	48 89 c6             	mov    %rax,%rsi
    5675:	48 89 df             	mov    %rbx,%rdi
    5678:	e8 c3 fb ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    567d:	bf 28 00 00 00       	mov    $0x28,%edi
    5682:	e8 09 fa ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5687:	48 89 c3             	mov    %rax,%rbx
    568a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    568e:	48 89 c6             	mov    %rax,%rsi
    5691:	48 89 df             	mov    %rbx,%rdi
    5694:	e8 87 27 00 00       	call   7e20 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>
    5699:	48 8d 05 44 56 00 00 	lea    0x5644(%rip),%rax        # ace4 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    56a0:	48 89 c2             	mov    %rax,%rdx
    56a3:	48 8d 05 06 b6 00 00 	lea    0xb606(%rip),%rax        # 10cb0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    56aa:	48 89 c6             	mov    %rax,%rsi
    56ad:	48 89 df             	mov    %rbx,%rdi
    56b0:	e8 8b fb ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    56b5:	bf 28 00 00 00       	mov    $0x28,%edi
    56ba:	e8 d1 f9 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    56bf:	48 89 c3             	mov    %rax,%rbx
    56c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56c6:	48 89 c6             	mov    %rax,%rsi
    56c9:	48 89 df             	mov    %rbx,%rdi
    56cc:	e8 21 28 00 00       	call   7ef2 <_ZN2vk22FeatureNotPresentErrorC1EPKc>
    56d1:	48 8d 05 9c 55 00 00 	lea    0x559c(%rip),%rax        # ac74 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    56d8:	48 89 c2             	mov    %rax,%rdx
    56db:	48 8d 05 b6 b5 00 00 	lea    0xb5b6(%rip),%rax        # 10c98 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    56e2:	48 89 c6             	mov    %rax,%rsi
    56e5:	48 89 df             	mov    %rbx,%rdi
    56e8:	e8 53 fb ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    56ed:	bf 28 00 00 00       	mov    $0x28,%edi
    56f2:	e8 99 f9 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    56f7:	48 89 c3             	mov    %rax,%rbx
    56fa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    56fe:	48 89 c6             	mov    %rax,%rsi
    5701:	48 89 df             	mov    %rbx,%rdi
    5704:	e8 bb 28 00 00       	call   7fc4 <_ZN2vk23IncompatibleDriverErrorC1EPKc>
    5709:	48 8d 05 f4 54 00 00 	lea    0x54f4(%rip),%rax        # ac04 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    5710:	48 89 c2             	mov    %rax,%rdx
    5713:	48 8d 05 66 b5 00 00 	lea    0xb566(%rip),%rax        # 10c80 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    571a:	48 89 c6             	mov    %rax,%rsi
    571d:	48 89 df             	mov    %rbx,%rdi
    5720:	e8 1b fb ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    5725:	bf 28 00 00 00       	mov    $0x28,%edi
    572a:	e8 61 f9 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    572f:	48 89 c3             	mov    %rax,%rbx
    5732:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5736:	48 89 c6             	mov    %rax,%rsi
    5739:	48 89 df             	mov    %rbx,%rdi
    573c:	e8 55 29 00 00       	call   8096 <_ZN2vk19TooManyObjectsErrorC1EPKc>
    5741:	48 8d 05 4c 54 00 00 	lea    0x544c(%rip),%rax        # ab94 <_ZN2vk19TooManyObjectsErrorD1Ev>
    5748:	48 89 c2             	mov    %rax,%rdx
    574b:	48 8d 05 16 b5 00 00 	lea    0xb516(%rip),%rax        # 10c68 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5752:	48 89 c6             	mov    %rax,%rsi
    5755:	48 89 df             	mov    %rbx,%rdi
    5758:	e8 e3 fa ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    575d:	bf 28 00 00 00       	mov    $0x28,%edi
    5762:	e8 29 f9 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5767:	48 89 c3             	mov    %rax,%rbx
    576a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    576e:	48 89 c6             	mov    %rax,%rsi
    5771:	48 89 df             	mov    %rbx,%rdi
    5774:	e8 ef 29 00 00       	call   8168 <_ZN2vk23FormatNotSupportedErrorC1EPKc>
    5779:	48 8d 05 a4 53 00 00 	lea    0x53a4(%rip),%rax        # ab24 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    5780:	48 89 c2             	mov    %rax,%rdx
    5783:	48 8d 05 c6 b4 00 00 	lea    0xb4c6(%rip),%rax        # 10c50 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    578a:	48 89 c6             	mov    %rax,%rsi
    578d:	48 89 df             	mov    %rbx,%rdi
    5790:	e8 ab fa ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    5795:	bf 28 00 00 00       	mov    $0x28,%edi
    579a:	e8 f1 f8 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    579f:	48 89 c3             	mov    %rax,%rbx
    57a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57a6:	48 89 c6             	mov    %rax,%rsi
    57a9:	48 89 df             	mov    %rbx,%rdi
    57ac:	e8 89 2a 00 00       	call   823a <_ZN2vk19FragmentedPoolErrorC1EPKc>
    57b1:	48 8d 05 fc 52 00 00 	lea    0x52fc(%rip),%rax        # aab4 <_ZN2vk19FragmentedPoolErrorD1Ev>
    57b8:	48 89 c2             	mov    %rax,%rdx
    57bb:	48 8d 05 76 b4 00 00 	lea    0xb476(%rip),%rax        # 10c38 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    57c2:	48 89 c6             	mov    %rax,%rsi
    57c5:	48 89 df             	mov    %rbx,%rdi
    57c8:	e8 73 fa ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    57cd:	bf 28 00 00 00       	mov    $0x28,%edi
    57d2:	e8 b9 f8 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    57d7:	48 89 c3             	mov    %rax,%rbx
    57da:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    57de:	48 89 c6             	mov    %rax,%rsi
    57e1:	48 89 df             	mov    %rbx,%rdi
    57e4:	e8 23 2b 00 00       	call   830c <_ZN2vk12UnknownErrorC1EPKc>
    57e9:	48 8d 05 54 52 00 00 	lea    0x5254(%rip),%rax        # aa44 <_ZN2vk12UnknownErrorD1Ev>
    57f0:	48 89 c2             	mov    %rax,%rdx
    57f3:	48 8d 05 26 b4 00 00 	lea    0xb426(%rip),%rax        # 10c20 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    57fa:	48 89 c6             	mov    %rax,%rsi
    57fd:	48 89 df             	mov    %rbx,%rdi
    5800:	e8 3b fa ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    5805:	bf 28 00 00 00       	mov    $0x28,%edi
    580a:	e8 81 f8 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    580f:	48 89 c3             	mov    %rax,%rbx
    5812:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5816:	48 89 c6             	mov    %rax,%rsi
    5819:	48 89 df             	mov    %rbx,%rdi
    581c:	e8 bd 2b 00 00       	call   83de <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>
    5821:	48 8d 05 ac 51 00 00 	lea    0x51ac(%rip),%rax        # a9d4 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    5828:	48 89 c2             	mov    %rax,%rdx
    582b:	48 8d 05 d6 b3 00 00 	lea    0xb3d6(%rip),%rax        # 10c08 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5832:	48 89 c6             	mov    %rax,%rsi
    5835:	48 89 df             	mov    %rbx,%rdi
    5838:	e8 03 fa ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    583d:	bf 28 00 00 00       	mov    $0x28,%edi
    5842:	e8 49 f8 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5847:	48 89 c3             	mov    %rax,%rbx
    584a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    584e:	48 89 c6             	mov    %rax,%rsi
    5851:	48 89 df             	mov    %rbx,%rdi
    5854:	e8 57 2c 00 00       	call   84b0 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>
    5859:	48 8d 05 04 51 00 00 	lea    0x5104(%rip),%rax        # a964 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    5860:	48 89 c2             	mov    %rax,%rdx
    5863:	48 8d 05 86 b3 00 00 	lea    0xb386(%rip),%rax        # 10bf0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    586a:	48 89 c6             	mov    %rax,%rsi
    586d:	48 89 df             	mov    %rbx,%rdi
    5870:	e8 cb f9 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    5875:	bf 28 00 00 00       	mov    $0x28,%edi
    587a:	e8 11 f8 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    587f:	48 89 c3             	mov    %rax,%rbx
    5882:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5886:	48 89 c6             	mov    %rax,%rsi
    5889:	48 89 df             	mov    %rbx,%rdi
    588c:	e8 f1 2c 00 00       	call   8582 <_ZN2vk18FragmentationErrorC1EPKc>
    5891:	48 8d 05 5c 50 00 00 	lea    0x505c(%rip),%rax        # a8f4 <_ZN2vk18FragmentationErrorD1Ev>
    5898:	48 89 c2             	mov    %rax,%rdx
    589b:	48 8d 05 36 b3 00 00 	lea    0xb336(%rip),%rax        # 10bd8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    58a2:	48 89 c6             	mov    %rax,%rsi
    58a5:	48 89 df             	mov    %rbx,%rdi
    58a8:	e8 93 f9 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    58ad:	bf 28 00 00 00       	mov    $0x28,%edi
    58b2:	e8 d9 f7 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    58b7:	48 89 c3             	mov    %rax,%rbx
    58ba:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    58be:	48 89 c6             	mov    %rax,%rsi
    58c1:	48 89 df             	mov    %rbx,%rdi
    58c4:	e8 8b 2d 00 00       	call   8654 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>
    58c9:	48 8d 05 b4 4f 00 00 	lea    0x4fb4(%rip),%rax        # a884 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    58d0:	48 89 c2             	mov    %rax,%rdx
    58d3:	48 8d 05 e6 b2 00 00 	lea    0xb2e6(%rip),%rax        # 10bc0 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    58da:	48 89 c6             	mov    %rax,%rsi
    58dd:	48 89 df             	mov    %rbx,%rdi
    58e0:	e8 5b f9 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    58e5:	bf 28 00 00 00       	mov    $0x28,%edi
    58ea:	e8 a1 f7 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    58ef:	48 89 c3             	mov    %rax,%rbx
    58f2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    58f6:	48 89 c6             	mov    %rax,%rsi
    58f9:	48 89 df             	mov    %rbx,%rdi
    58fc:	e8 25 2e 00 00       	call   8726 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>
    5901:	48 8d 05 0c 4f 00 00 	lea    0x4f0c(%rip),%rax        # a814 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    5908:	48 89 c2             	mov    %rax,%rdx
    590b:	48 8d 05 96 b2 00 00 	lea    0xb296(%rip),%rax        # 10ba8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5912:	48 89 c6             	mov    %rax,%rsi
    5915:	48 89 df             	mov    %rbx,%rdi
    5918:	e8 23 f9 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    591d:	bf 28 00 00 00       	mov    $0x28,%edi
    5922:	e8 69 f7 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5927:	48 89 c3             	mov    %rax,%rbx
    592a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    592e:	48 89 c6             	mov    %rax,%rsi
    5931:	48 89 df             	mov    %rbx,%rdi
    5934:	e8 bf 2e 00 00       	call   87f8 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>
    5939:	48 8d 05 64 4e 00 00 	lea    0x4e64(%rip),%rax        # a7a4 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    5940:	48 89 c2             	mov    %rax,%rdx
    5943:	48 8d 05 46 b2 00 00 	lea    0xb246(%rip),%rax        # 10b90 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    594a:	48 89 c6             	mov    %rax,%rsi
    594d:	48 89 df             	mov    %rbx,%rdi
    5950:	e8 eb f8 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5955:	bf 28 00 00 00       	mov    $0x28,%edi
    595a:	e8 31 f7 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    595f:	48 89 c3             	mov    %rax,%rbx
    5962:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5966:	48 89 c6             	mov    %rax,%rsi
    5969:	48 89 df             	mov    %rbx,%rdi
    596c:	e8 59 2f 00 00       	call   88ca <_ZN2vk17OutOfDateKHRErrorC1EPKc>
    5971:	48 8d 05 bc 4d 00 00 	lea    0x4dbc(%rip),%rax        # a734 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    5978:	48 89 c2             	mov    %rax,%rdx
    597b:	48 8d 05 f6 b1 00 00 	lea    0xb1f6(%rip),%rax        # 10b78 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5982:	48 89 c6             	mov    %rax,%rsi
    5985:	48 89 df             	mov    %rbx,%rdi
    5988:	e8 b3 f8 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    598d:	bf 28 00 00 00       	mov    $0x28,%edi
    5992:	e8 f9 f6 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5997:	48 89 c3             	mov    %rax,%rbx
    599a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    599e:	48 89 c6             	mov    %rax,%rsi
    59a1:	48 89 df             	mov    %rbx,%rdi
    59a4:	e8 f3 2f 00 00       	call   899c <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>
    59a9:	48 8d 05 14 4d 00 00 	lea    0x4d14(%rip),%rax        # a6c4 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    59b0:	48 89 c2             	mov    %rax,%rdx
    59b3:	48 8d 05 a6 b1 00 00 	lea    0xb1a6(%rip),%rax        # 10b60 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    59ba:	48 89 c6             	mov    %rax,%rsi
    59bd:	48 89 df             	mov    %rbx,%rdi
    59c0:	e8 7b f8 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    59c5:	bf 28 00 00 00       	mov    $0x28,%edi
    59ca:	e8 c1 f6 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    59cf:	48 89 c3             	mov    %rax,%rbx
    59d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    59d6:	48 89 c6             	mov    %rax,%rsi
    59d9:	48 89 df             	mov    %rbx,%rdi
    59dc:	e8 8d 30 00 00       	call   8a6e <_ZN2vk24ValidationFailedEXTErrorC1EPKc>
    59e1:	48 8d 05 6c 4c 00 00 	lea    0x4c6c(%rip),%rax        # a654 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    59e8:	48 89 c2             	mov    %rax,%rdx
    59eb:	48 8d 05 56 b1 00 00 	lea    0xb156(%rip),%rax        # 10b48 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    59f2:	48 89 c6             	mov    %rax,%rsi
    59f5:	48 89 df             	mov    %rbx,%rdi
    59f8:	e8 43 f8 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    59fd:	bf 28 00 00 00       	mov    $0x28,%edi
    5a02:	e8 89 f6 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5a07:	48 89 c3             	mov    %rax,%rbx
    5a0a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a0e:	48 89 c6             	mov    %rax,%rsi
    5a11:	48 89 df             	mov    %rbx,%rdi
    5a14:	e8 27 31 00 00       	call   8b40 <_ZN2vk20InvalidShaderNVErrorC1EPKc>
    5a19:	48 8d 05 c4 4b 00 00 	lea    0x4bc4(%rip),%rax        # a5e4 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    5a20:	48 89 c2             	mov    %rax,%rdx
    5a23:	48 8d 05 06 b1 00 00 	lea    0xb106(%rip),%rax        # 10b30 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a2a:	48 89 c6             	mov    %rax,%rsi
    5a2d:	48 89 df             	mov    %rbx,%rdi
    5a30:	e8 0b f8 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorVideoProfileCodecNotSupportedKHR: throw VideoProfileCodecNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
#  if defined( VK_ENABLE_BETA_EXTENSIONS )
        case Result::eErrorVideoStdVersionNotSupportedKHR: throw VideoStdVersionNotSupportedKHRError( message );
#  endif /*VK_ENABLE_BETA_EXTENSIONS*/
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5a35:	bf 28 00 00 00       	mov    $0x28,%edi
    5a3a:	e8 51 f6 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5a3f:	48 89 c3             	mov    %rax,%rbx
    5a42:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a46:	48 89 c6             	mov    %rax,%rsi
    5a49:	48 89 df             	mov    %rbx,%rdi
    5a4c:	e8 c1 31 00 00       	call   8c12 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>
    5a51:	48 8d 05 1c 4b 00 00 	lea    0x4b1c(%rip),%rax        # a574 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    5a58:	48 89 c2             	mov    %rax,%rdx
    5a5b:	48 8d 05 b6 b0 00 00 	lea    0xb0b6(%rip),%rax        # 10b18 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a62:	48 89 c6             	mov    %rax,%rsi
    5a65:	48 89 df             	mov    %rbx,%rdi
    5a68:	e8 d3 f7 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5a6d:	bf 28 00 00 00       	mov    $0x28,%edi
    5a72:	e8 19 f6 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5a77:	48 89 c3             	mov    %rax,%rbx
    5a7a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5a7e:	48 89 c6             	mov    %rax,%rsi
    5a81:	48 89 df             	mov    %rbx,%rdi
    5a84:	e8 5b 32 00 00       	call   8ce4 <_ZN2vk20NotPermittedKHRErrorC1EPKc>
    5a89:	48 8d 05 74 4a 00 00 	lea    0x4a74(%rip),%rax        # a504 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    5a90:	48 89 c2             	mov    %rax,%rdx
    5a93:	48 8d 05 66 b0 00 00 	lea    0xb066(%rip),%rax        # 10b00 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5a9a:	48 89 c6             	mov    %rax,%rsi
    5a9d:	48 89 df             	mov    %rbx,%rdi
    5aa0:	e8 9b f7 ff ff       	call   5240 <__cxa_throw@plt>
#  if defined( VK_USE_PLATFORM_WIN32_KHR )
        case Result::eErrorFullScreenExclusiveModeLostEXT: throw FullScreenExclusiveModeLostEXTError( message );
#  endif /*VK_USE_PLATFORM_WIN32_KHR*/
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5aa5:	bf 28 00 00 00       	mov    $0x28,%edi
    5aaa:	e8 e1 f5 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5aaf:	48 89 c3             	mov    %rax,%rbx
    5ab2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5ab6:	48 89 c6             	mov    %rax,%rsi
    5ab9:	48 89 df             	mov    %rbx,%rdi
    5abc:	e8 f5 32 00 00       	call   8db6 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>
    5ac1:	48 8d 05 cc 49 00 00 	lea    0x49cc(%rip),%rax        # a494 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    5ac8:	48 89 c2             	mov    %rax,%rdx
    5acb:	48 8d 05 16 b0 00 00 	lea    0xb016(%rip),%rax        # 10ae8 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    5ad2:	48 89 c6             	mov    %rax,%rsi
    5ad5:	48 89 df             	mov    %rbx,%rdi
    5ad8:	e8 63 f7 ff ff       	call   5240 <__cxa_throw@plt>
        default: throw SystemError( make_error_code( result ) );
    5add:	bf 28 00 00 00       	mov    $0x28,%edi
    5ae2:	e8 a9 f5 ff ff       	call   5090 <__cxa_allocate_exception@plt>
    5ae7:	48 89 c3             	mov    %rax,%rbx
    5aea:	8b 45 cc             	mov    -0x34(%rbp),%eax
    5aed:	89 45 ec             	mov    %eax,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    5af0:	0f b6 05 c1 b8 00 00 	movzbl 0xb8c1(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5af7:	84 c0                	test   %al,%al
    5af9:	0f 94 c0             	sete   %al
    5afc:	84 c0                	test   %al,%al
    5afe:	74 4a                	je     5b4a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5b00:	48 8d 05 b1 b8 00 00 	lea    0xb8b1(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5b07:	48 89 c7             	mov    %rax,%rdi
    5b0a:	e8 71 f7 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    5b0f:	85 c0                	test   %eax,%eax
    5b11:	0f 95 c0             	setne  %al
    5b14:	84 c0                	test   %al,%al
    5b16:	74 32                	je     5b4a <_ZN2vk12_GLOBAL__N_120throwResultExceptionENS_6ResultEPKc+0x7b1>
    5b18:	48 8d 05 21 b6 00 00 	lea    0xb621(%rip),%rax        # 11140 <__dso_handle>
    5b1f:	48 89 c2             	mov    %rax,%rdx
    5b22:	48 8d 05 1f b6 00 00 	lea    0xb61f(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    5b29:	48 89 c6             	mov    %rax,%rsi
    5b2c:	48 8d 05 c1 54 00 00 	lea    0x54c1(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    5b33:	48 89 c7             	mov    %rax,%rdi
    5b36:	e8 f5 f5 ff ff       	call   5130 <__cxa_atexit@plt>
    5b3b:	48 8d 05 76 b8 00 00 	lea    0xb876(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    5b42:	48 89 c7             	mov    %rax,%rdi
    5b45:	e8 66 f5 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    5b4a:	48 8d 15 f7 b5 00 00 	lea    0xb5f7(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    5b51:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    5b54:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5b58:	89 ce                	mov    %ecx,%esi
    5b5a:	48 89 c7             	mov    %rax,%rdi
    5b5d:	e8 7c 07 00 00       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    5b62:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5b66:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
        default: throw SystemError( make_error_code( result ) );
    5b6a:	48 89 c6             	mov    %rax,%rsi
    5b6d:	48 89 d7             	mov    %rdx,%rdi
    5b70:	89 f1                	mov    %esi,%ecx
    5b72:	48 89 d0             	mov    %rdx,%rax
    5b75:	89 ce                	mov    %ecx,%esi
    5b77:	48 89 c2             	mov    %rax,%rdx
    5b7a:	48 89 df             	mov    %rbx,%rdi
    5b7d:	e8 fc 1b 00 00       	call   777e <_ZN2vk11SystemErrorC1ESt10error_code>
    5b82:	48 8d 05 2b 1d 00 00 	lea    0x1d2b(%rip),%rax        # 78b4 <_ZN2vk11SystemErrorD1Ev>
    5b89:	48 89 c2             	mov    %rax,%rdx
    5b8c:	48 8d 05 c5 b1 00 00 	lea    0xb1c5(%rip),%rax        # 10d58 <_ZTVN10__cxxabiv121__vmi_class_type_infoE@CXXABI_1.3>
    5b93:	48 89 c6             	mov    %rax,%rsi
    5b96:	48 89 df             	mov    %rbx,%rdi
    5b99:	e8 a2 f6 ff ff       	call   5240 <__cxa_throw@plt>
        case Result::eErrorOutOfHostMemory: throw OutOfHostMemoryError( message );
    5b9e:	49 89 c4             	mov    %rax,%r12
    5ba1:	48 89 df             	mov    %rbx,%rdi
    5ba4:	e8 37 f5 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5ba9:	4c 89 e0             	mov    %r12,%rax
    5bac:	48 89 c7             	mov    %rax,%rdi
    5baf:	e8 ac f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDeviceMemory: throw OutOfDeviceMemoryError( message );
    5bb4:	49 89 c4             	mov    %rax,%r12
    5bb7:	48 89 df             	mov    %rbx,%rdi
    5bba:	e8 21 f5 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5bbf:	4c 89 e0             	mov    %r12,%rax
    5bc2:	48 89 c7             	mov    %rax,%rdi
    5bc5:	e8 96 f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorInitializationFailed: throw InitializationFailedError( message );
    5bca:	49 89 c4             	mov    %rax,%r12
    5bcd:	48 89 df             	mov    %rbx,%rdi
    5bd0:	e8 0b f5 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5bd5:	4c 89 e0             	mov    %r12,%rax
    5bd8:	48 89 c7             	mov    %rax,%rdi
    5bdb:	e8 80 f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorDeviceLost: throw DeviceLostError( message );
    5be0:	49 89 c4             	mov    %rax,%r12
    5be3:	48 89 df             	mov    %rbx,%rdi
    5be6:	e8 f5 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5beb:	4c 89 e0             	mov    %r12,%rax
    5bee:	48 89 c7             	mov    %rax,%rdi
    5bf1:	e8 6a f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorMemoryMapFailed: throw MemoryMapFailedError( message );
    5bf6:	49 89 c4             	mov    %rax,%r12
    5bf9:	48 89 df             	mov    %rbx,%rdi
    5bfc:	e8 df f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c01:	4c 89 e0             	mov    %r12,%rax
    5c04:	48 89 c7             	mov    %rax,%rdi
    5c07:	e8 54 f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorLayerNotPresent: throw LayerNotPresentError( message );
    5c0c:	49 89 c4             	mov    %rax,%r12
    5c0f:	48 89 df             	mov    %rbx,%rdi
    5c12:	e8 c9 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c17:	4c 89 e0             	mov    %r12,%rax
    5c1a:	48 89 c7             	mov    %rax,%rdi
    5c1d:	e8 3e f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorExtensionNotPresent: throw ExtensionNotPresentError( message );
    5c22:	49 89 c4             	mov    %rax,%r12
    5c25:	48 89 df             	mov    %rbx,%rdi
    5c28:	e8 b3 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c2d:	4c 89 e0             	mov    %r12,%rax
    5c30:	48 89 c7             	mov    %rax,%rdi
    5c33:	e8 28 f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorFeatureNotPresent: throw FeatureNotPresentError( message );
    5c38:	49 89 c4             	mov    %rax,%r12
    5c3b:	48 89 df             	mov    %rbx,%rdi
    5c3e:	e8 9d f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c43:	4c 89 e0             	mov    %r12,%rax
    5c46:	48 89 c7             	mov    %rax,%rdi
    5c49:	e8 12 f6 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDriver: throw IncompatibleDriverError( message );
    5c4e:	49 89 c4             	mov    %rax,%r12
    5c51:	48 89 df             	mov    %rbx,%rdi
    5c54:	e8 87 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c59:	4c 89 e0             	mov    %r12,%rax
    5c5c:	48 89 c7             	mov    %rax,%rdi
    5c5f:	e8 fc f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorTooManyObjects: throw TooManyObjectsError( message );
    5c64:	49 89 c4             	mov    %rax,%r12
    5c67:	48 89 df             	mov    %rbx,%rdi
    5c6a:	e8 71 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c6f:	4c 89 e0             	mov    %r12,%rax
    5c72:	48 89 c7             	mov    %rax,%rdi
    5c75:	e8 e6 f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorFormatNotSupported: throw FormatNotSupportedError( message );
    5c7a:	49 89 c4             	mov    %rax,%r12
    5c7d:	48 89 df             	mov    %rbx,%rdi
    5c80:	e8 5b f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c85:	4c 89 e0             	mov    %r12,%rax
    5c88:	48 89 c7             	mov    %rax,%rdi
    5c8b:	e8 d0 f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorFragmentedPool: throw FragmentedPoolError( message );
    5c90:	49 89 c4             	mov    %rax,%r12
    5c93:	48 89 df             	mov    %rbx,%rdi
    5c96:	e8 45 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5c9b:	4c 89 e0             	mov    %r12,%rax
    5c9e:	48 89 c7             	mov    %rax,%rdi
    5ca1:	e8 ba f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorUnknown: throw UnknownError( message );
    5ca6:	49 89 c4             	mov    %rax,%r12
    5ca9:	48 89 df             	mov    %rbx,%rdi
    5cac:	e8 2f f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5cb1:	4c 89 e0             	mov    %r12,%rax
    5cb4:	48 89 c7             	mov    %rax,%rdi
    5cb7:	e8 a4 f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorOutOfPoolMemory: throw OutOfPoolMemoryError( message );
    5cbc:	49 89 c4             	mov    %rax,%r12
    5cbf:	48 89 df             	mov    %rbx,%rdi
    5cc2:	e8 19 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5cc7:	4c 89 e0             	mov    %r12,%rax
    5cca:	48 89 c7             	mov    %rax,%rdi
    5ccd:	e8 8e f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorInvalidExternalHandle: throw InvalidExternalHandleError( message );
    5cd2:	49 89 c4             	mov    %rax,%r12
    5cd5:	48 89 df             	mov    %rbx,%rdi
    5cd8:	e8 03 f4 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5cdd:	4c 89 e0             	mov    %r12,%rax
    5ce0:	48 89 c7             	mov    %rax,%rdi
    5ce3:	e8 78 f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorFragmentation: throw FragmentationError( message );
    5ce8:	49 89 c4             	mov    %rax,%r12
    5ceb:	48 89 df             	mov    %rbx,%rdi
    5cee:	e8 ed f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5cf3:	4c 89 e0             	mov    %r12,%rax
    5cf6:	48 89 c7             	mov    %rax,%rdi
    5cf9:	e8 62 f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorInvalidOpaqueCaptureAddress: throw InvalidOpaqueCaptureAddressError( message );
    5cfe:	49 89 c4             	mov    %rax,%r12
    5d01:	48 89 df             	mov    %rbx,%rdi
    5d04:	e8 d7 f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5d09:	4c 89 e0             	mov    %r12,%rax
    5d0c:	48 89 c7             	mov    %rax,%rdi
    5d0f:	e8 4c f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorSurfaceLostKHR: throw SurfaceLostKHRError( message );
    5d14:	49 89 c4             	mov    %rax,%r12
    5d17:	48 89 df             	mov    %rbx,%rdi
    5d1a:	e8 c1 f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5d1f:	4c 89 e0             	mov    %r12,%rax
    5d22:	48 89 c7             	mov    %rax,%rdi
    5d25:	e8 36 f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorNativeWindowInUseKHR: throw NativeWindowInUseKHRError( message );
    5d2a:	49 89 c4             	mov    %rax,%r12
    5d2d:	48 89 df             	mov    %rbx,%rdi
    5d30:	e8 ab f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5d35:	4c 89 e0             	mov    %r12,%rax
    5d38:	48 89 c7             	mov    %rax,%rdi
    5d3b:	e8 20 f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorOutOfDateKHR: throw OutOfDateKHRError( message );
    5d40:	49 89 c4             	mov    %rax,%r12
    5d43:	48 89 df             	mov    %rbx,%rdi
    5d46:	e8 95 f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5d4b:	4c 89 e0             	mov    %r12,%rax
    5d4e:	48 89 c7             	mov    %rax,%rdi
    5d51:	e8 0a f5 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorIncompatibleDisplayKHR: throw IncompatibleDisplayKHRError( message );
    5d56:	49 89 c4             	mov    %rax,%r12
    5d59:	48 89 df             	mov    %rbx,%rdi
    5d5c:	e8 7f f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5d61:	4c 89 e0             	mov    %r12,%rax
    5d64:	48 89 c7             	mov    %rax,%rdi
    5d67:	e8 f4 f4 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorValidationFailedEXT: throw ValidationFailedEXTError( message );
    5d6c:	49 89 c4             	mov    %rax,%r12
    5d6f:	48 89 df             	mov    %rbx,%rdi
    5d72:	e8 69 f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5d77:	4c 89 e0             	mov    %r12,%rax
    5d7a:	48 89 c7             	mov    %rax,%rdi
    5d7d:	e8 de f4 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorInvalidShaderNV: throw InvalidShaderNVError( message );
    5d82:	49 89 c4             	mov    %rax,%r12
    5d85:	48 89 df             	mov    %rbx,%rdi
    5d88:	e8 53 f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5d8d:	4c 89 e0             	mov    %r12,%rax
    5d90:	48 89 c7             	mov    %rax,%rdi
    5d93:	e8 c8 f4 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: throw InvalidDrmFormatModifierPlaneLayoutEXTError( message );
    5d98:	49 89 c4             	mov    %rax,%r12
    5d9b:	48 89 df             	mov    %rbx,%rdi
    5d9e:	e8 3d f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5da3:	4c 89 e0             	mov    %r12,%rax
    5da6:	48 89 c7             	mov    %rax,%rdi
    5da9:	e8 b2 f4 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorNotPermittedKHR: throw NotPermittedKHRError( message );
    5dae:	49 89 c4             	mov    %rax,%r12
    5db1:	48 89 df             	mov    %rbx,%rdi
    5db4:	e8 27 f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5db9:	4c 89 e0             	mov    %r12,%rax
    5dbc:	48 89 c7             	mov    %rax,%rdi
    5dbf:	e8 9c f4 ff ff       	call   5260 <_Unwind_Resume@plt>
        case Result::eErrorCompressionExhaustedEXT: throw CompressionExhaustedEXTError( message );
    5dc4:	49 89 c4             	mov    %rax,%r12
    5dc7:	48 89 df             	mov    %rbx,%rdi
    5dca:	e8 11 f3 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5dcf:	4c 89 e0             	mov    %r12,%rax
    5dd2:	48 89 c7             	mov    %rax,%rdi
    5dd5:	e8 86 f4 ff ff       	call   5260 <_Unwind_Resume@plt>
        default: throw SystemError( make_error_code( result ) );
    5dda:	49 89 c4             	mov    %rax,%r12
    5ddd:	48 89 df             	mov    %rbx,%rdi
    5de0:	e8 fb f2 ff ff       	call   50e0 <__cxa_free_exception@plt>
    5de5:	4c 89 e0             	mov    %r12,%rax
    5de8:	48 89 c7             	mov    %rax,%rdi
    5deb:	e8 70 f4 ff ff       	call   5260 <_Unwind_Resume@plt>

0000000000005df0 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>

int protected_main() {
    5df0:	55                   	push   %rbp
    5df1:	48 89 e5             	mov    %rsp,%rbp
    5df4:	53                   	push   %rbx
    5df5:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  rtvc::VulkanApp app{};
  vk::InstanceCreateInfo instanceInfo{
    5dfc:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    5e03:	00 00 00 
    5e06:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    5e0d:	00 00 00 00 
    5e11:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    5e18:	00 00 00 
    5e1b:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
    5e22:	00 00 00 00 
    5e26:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
    5e2d:	00 00 00 
    5e30:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    5e37:	00 00 00 00 
    5e3b:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    5e42:	00 00 00 
    5e45:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    5e4c:	00 00 00 00 
    5e50:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    5e56:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
    5e5c:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    return "{ " + result.substr( 0, result.size() - 3 ) + " }";
  }

  VULKAN_HPP_INLINE std::string to_string( InstanceCreateFlags value )
  {
    if ( !value )
    5e60:	48 8d 85 2c ff ff ff 	lea    -0xd4(%rbp),%rax
    5e67:	48 89 c7             	mov    %rax,%rdi
    5e6a:	e8 2b 35 00 00       	call   939a <_ZNK2vk5FlagsINS_22InstanceCreateFlagBitsEEntEv>
    5e6f:	84 c0                	test   %al,%al
    5e71:	74 36                	je     5ea9 <_Z14protected_mainv+0xb9>
      return "{}";
    5e73:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5e77:	48 89 c7             	mov    %rax,%rdi
    5e7a:	e8 f1 f3 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    5e7f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5e83:	48 89 c2             	mov    %rax,%rdx
    5e86:	48 8d 05 17 6b 00 00 	lea    0x6b17(%rip),%rax        # c9a4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x36c>
    5e8d:	48 89 c6             	mov    %rax,%rsi
    5e90:	48 89 df             	mov    %rbx,%rdi
    5e93:	e8 54 33 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    5e98:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5e9c:	48 89 c7             	mov    %rax,%rdi
    5e9f:	e8 ec f2 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    5ea4:	e9 4b 01 00 00       	jmp    5ff4 <_Z14protected_mainv+0x204>

    std::string result;
    5ea9:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    5eb0:	48 89 c7             	mov    %rax,%rdi
    5eb3:	e8 a2 07 00 00       	call   665a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
    if ( value & InstanceCreateFlagBits::eEnumeratePortabilityKHR )
    5eb8:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    5ebc:	be 01 00 00 00       	mov    $0x1,%esi
    5ec1:	48 89 c7             	mov    %rax,%rdi
    5ec4:	e8 bf 2f 00 00       	call   8e88 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1ES1_>
    5ec9:	48 8d 55 e4          	lea    -0x1c(%rbp),%rdx
    5ecd:	48 8d 85 2c ff ff ff 	lea    -0xd4(%rbp),%rax
    5ed4:	48 89 d6             	mov    %rdx,%rsi
    5ed7:	48 89 c7             	mov    %rax,%rdi
    5eda:	e8 d1 34 00 00       	call   93b0 <_ZNK2vk5FlagsINS_22InstanceCreateFlagBitsEEanERKS2_>
    5edf:	89 45 e8             	mov    %eax,-0x18(%rbp)
    5ee2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5ee6:	48 89 c7             	mov    %rax,%rdi
    5ee9:	e8 f4 34 00 00       	call   93e2 <_ZNK2vk5FlagsINS_22InstanceCreateFlagBitsEEcvbEv>
    5eee:	84 c0                	test   %al,%al
    5ef0:	74 19                	je     5f0b <_Z14protected_mainv+0x11b>
      result += "EnumeratePortabilityKHR | ";
    5ef2:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    5ef9:	48 8d 15 a7 6a 00 00 	lea    0x6aa7(%rip),%rdx        # c9a7 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x36f>
    5f00:	48 89 d6             	mov    %rdx,%rsi
    5f03:	48 89 c7             	mov    %rax,%rdi
    5f06:	e8 cd 33 00 00       	call   92d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>

    return "{ " + result.substr( 0, result.size() - 3 ) + " }";
    5f0b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    5f12:	48 89 c7             	mov    %rax,%rdi
    5f15:	e8 b2 03 00 00       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    5f1a:	48 8d 50 fd          	lea    -0x3(%rax),%rdx
    5f1e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5f22:	48 8d b5 00 ff ff ff 	lea    -0x100(%rbp),%rsi
    5f29:	48 89 d1             	mov    %rdx,%rcx
    5f2c:	ba 00 00 00 00       	mov    $0x0,%edx
    5f31:	48 89 c7             	mov    %rax,%rdi
    5f34:	e8 c5 33 00 00       	call   92fe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm>
    5f39:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5f3d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    5f41:	48 8d 0d 7a 6a 00 00 	lea    0x6a7a(%rip),%rcx        # c9c2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x38a>
    5f48:	48 89 ce             	mov    %rcx,%rsi
    5f4b:	48 89 c7             	mov    %rax,%rdi
    5f4e:	e8 4f 32 00 00       	call   91a2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    5f53:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5f57:	48 8d 15 67 6a 00 00 	lea    0x6a67(%rip),%rdx        # c9c5 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x38d>
    5f5e:	48 89 c6             	mov    %rax,%rsi
    5f61:	48 89 df             	mov    %rbx,%rdi
    5f64:	e8 ea 33 00 00       	call   9353 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    5f69:	90                   	nop
    5f6a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5f6e:	48 89 c7             	mov    %rax,%rdi
    5f71:	e8 e0 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    5f76:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5f7a:	48 89 c7             	mov    %rax,%rdi
    5f7d:	e8 d4 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
  }
    5f82:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    5f89:	48 89 c7             	mov    %rax,%rdi
    5f8c:	e8 c5 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    5f91:	eb 61                	jmp    5ff4 <_Z14protected_mainv+0x204>
      return "{}";
    5f93:	48 89 c3             	mov    %rax,%rbx
    5f96:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f9a:	48 89 c7             	mov    %rax,%rdi
    5f9d:	e8 ee f1 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    5fa2:	48 89 d8             	mov    %rbx,%rax
    5fa5:	48 89 c7             	mov    %rax,%rdi
    5fa8:	e8 b3 f2 ff ff       	call   5260 <_Unwind_Resume@plt>
    return "{ " + result.substr( 0, result.size() - 3 ) + " }";
    5fad:	48 89 c3             	mov    %rax,%rbx
    5fb0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5fb4:	48 89 c7             	mov    %rax,%rdi
    5fb7:	e8 9a 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    5fbc:	eb 03                	jmp    5fc1 <_Z14protected_mainv+0x1d1>
    5fbe:	48 89 c3             	mov    %rax,%rbx
    5fc1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5fc5:	48 89 c7             	mov    %rax,%rdi
    5fc8:	e8 89 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    5fcd:	48 89 d8             	mov    %rbx,%rax
    5fd0:	eb 00                	jmp    5fd2 <_Z14protected_mainv+0x1e2>
    5fd2:	48 89 c3             	mov    %rax,%rbx
    5fd5:	eb 03                	jmp    5fda <_Z14protected_mainv+0x1ea>
  }
    5fd7:	48 89 c3             	mov    %rax,%rbx
    5fda:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    5fe1:	48 89 c7             	mov    %rax,%rdi
    5fe4:	e8 6d 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    5fe9:	48 89 d8             	mov    %rbx,%rax
    5fec:	48 89 c7             	mov    %rax,%rdi
    5fef:	e8 6c f2 ff ff       	call   5260 <_Unwind_Resume@plt>
      .flags{vk::InstanceCreateFlagBits::eEnumeratePortabilityKHR},
  };
  std::cout << vk::to_string(instanceInfo.flags) << '\n';
    5ff4:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5ff8:	48 89 c6             	mov    %rax,%rsi
    5ffb:	48 8d 05 7e b1 00 00 	lea    0xb17e(%rip),%rax        # 11180 <_ZSt4cout@GLIBCXX_3.4>
    6002:	48 89 c7             	mov    %rax,%rdi
    6005:	e8 36 f1 ff ff       	call   5140 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    600a:	be 0a 00 00 00       	mov    $0xa,%esi
    600f:	48 89 c7             	mov    %rax,%rdi
    6012:	e8 89 f1 ff ff       	call   51a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    6017:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    601b:	48 89 c7             	mov    %rax,%rdi
    601e:	e8 33 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
  return EXIT_SUCCESS;
    6023:	b8 00 00 00 00       	mov    $0x0,%eax
    6028:	eb 1a                	jmp    6044 <_Z14protected_mainv+0x254>
  std::cout << vk::to_string(instanceInfo.flags) << '\n';
    602a:	48 89 c3             	mov    %rax,%rbx
    602d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6031:	48 89 c7             	mov    %rax,%rdi
    6034:	e8 1d 30 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6039:	48 89 d8             	mov    %rbx,%rax
    603c:	48 89 c7             	mov    %rax,%rdi
    603f:	e8 1c f2 ff ff       	call   5260 <_Unwind_Resume@plt>
}
    6044:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6048:	c9                   	leave
    6049:	c3                   	ret

000000000000604a <main>:

int main() {
    604a:	55                   	push   %rbp
    604b:	48 89 e5             	mov    %rsp,%rbp
    604e:	53                   	push   %rbx
    604f:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    6053:	e8 98 fd ff ff       	call   5df0 <_Z14protected_mainv>
    6058:	e9 aa 00 00 00       	jmp    6107 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    605d:	b8 01 00 00 00       	mov    $0x1,%eax
    6062:	e9 a0 00 00 00       	jmp    6107 <main+0xbd>
  } catch (const std::exception &e) {
    6067:	48 83 fa 01          	cmp    $0x1,%rdx
    606b:	75 49                	jne    60b6 <main+0x6c>
    606d:	48 89 c7             	mov    %rax,%rdi
    6070:	e8 fb ef ff ff       	call   5070 <__cxa_begin_catch@plt>
    6075:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    6079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    607d:	48 8b 00             	mov    (%rax),%rax
    6080:	48 83 c0 10          	add    $0x10,%rax
    6084:	48 8b 10             	mov    (%rax),%rdx
    6087:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    608b:	48 89 c7             	mov    %rax,%rdi
    608e:	ff d2                	call   *%rdx
    6090:	48 89 c6             	mov    %rax,%rsi
    6093:	48 8d 05 06 b2 00 00 	lea    0xb206(%rip),%rax        # 112a0 <_ZSt4cerr@GLIBCXX_3.4>
    609a:	48 89 c7             	mov    %rax,%rdi
    609d:	e8 be f0 ff ff       	call   5160 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    60a2:	be 0a 00 00 00       	mov    $0xa,%esi
    60a7:	48 89 c7             	mov    %rax,%rdi
    60aa:	e8 f1 f0 ff ff       	call   51a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    60af:	e8 7c f1 ff ff       	call   5230 <__cxa_end_catch@plt>
    60b4:	eb a7                	jmp    605d <main+0x13>
    60b6:	48 89 c7             	mov    %rax,%rdi
    60b9:	e8 b2 ef ff ff       	call   5070 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    60be:	48 8d 05 03 69 00 00 	lea    0x6903(%rip),%rax        # c9c8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x390>
    60c5:	48 89 c6             	mov    %rax,%rsi
    60c8:	48 8d 05 d1 b1 00 00 	lea    0xb1d1(%rip),%rax        # 112a0 <_ZSt4cerr@GLIBCXX_3.4>
    60cf:	48 89 c7             	mov    %rax,%rdi
    60d2:	e8 89 f0 ff ff       	call   5160 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    60d7:	e8 54 f1 ff ff       	call   5230 <__cxa_end_catch@plt>
    60dc:	e9 7c ff ff ff       	jmp    605d <main+0x13>
  } catch (...) {
    60e1:	48 89 c3             	mov    %rax,%rbx
    60e4:	e8 47 f1 ff ff       	call   5230 <__cxa_end_catch@plt>
    60e9:	48 89 d8             	mov    %rbx,%rax
    60ec:	48 89 c7             	mov    %rax,%rdi
    60ef:	e8 6c f1 ff ff       	call   5260 <_Unwind_Resume@plt>
  }
    60f4:	48 89 c3             	mov    %rax,%rbx
    60f7:	e8 34 f1 ff ff       	call   5230 <__cxa_end_catch@plt>
    60fc:	48 89 d8             	mov    %rbx,%rax
    60ff:	48 89 c7             	mov    %rax,%rdi
    6102:	e8 59 f1 ff ff       	call   5260 <_Unwind_Resume@plt>
    6107:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    610b:	c9                   	leave
    610c:	c3                   	ret

000000000000610d <_Z41__static_initialization_and_destruction_0ii>:
    610d:	55                   	push   %rbp
    610e:	48 89 e5             	mov    %rsp,%rbp
    6111:	48 83 ec 10          	sub    $0x10,%rsp
    6115:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6118:	89 75 f8             	mov    %esi,-0x8(%rbp)
    611b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    611f:	75 3b                	jne    615c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6121:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    6128:	75 32                	jne    615c <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    612a:	48 8d 05 80 b2 00 00 	lea    0xb280(%rip),%rax        # 113b1 <_ZStL8__ioinit>
    6131:	48 89 c7             	mov    %rax,%rdi
    6134:	e8 d7 f0 ff ff       	call   5210 <_ZNSt8ios_base4InitC1Ev@plt>
    6139:	48 8d 05 00 b0 00 00 	lea    0xb000(%rip),%rax        # 11140 <__dso_handle>
    6140:	48 89 c2             	mov    %rax,%rdx
    6143:	48 8d 05 67 b2 00 00 	lea    0xb267(%rip),%rax        # 113b1 <_ZStL8__ioinit>
    614a:	48 89 c6             	mov    %rax,%rsi
    614d:	48 8b 05 8c ae 00 00 	mov    0xae8c(%rip),%rax        # 10fe0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    6154:	48 89 c7             	mov    %rax,%rdi
    6157:	e8 d4 ef ff ff       	call   5130 <__cxa_atexit@plt>
    615c:	90                   	nop
    615d:	c9                   	leave
    615e:	c3                   	ret

000000000000615f <_GLOBAL__sub_I__Z14protected_mainv>:
    615f:	55                   	push   %rbp
    6160:	48 89 e5             	mov    %rsp,%rbp
    6163:	be ff ff 00 00       	mov    $0xffff,%esi
    6168:	bf 01 00 00 00       	mov    $0x1,%edi
    616d:	e8 9b ff ff ff       	call   610d <_Z41__static_initialization_and_destruction_0ii>
    6172:	5d                   	pop    %rbp
    6173:	c3                   	ret

0000000000006174 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    6174:	55                   	push   %rbp
    6175:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    6178:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    617d:	5d                   	pop    %rbp
    617e:	c3                   	ret

000000000000617f <_ZSt21is_constant_evaluatedv>:

  /// Returns true only when called during constant evaluation.
  /// @since C++20
  constexpr inline bool
  is_constant_evaluated() noexcept
  {
    617f:	55                   	push   %rbp
    6180:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
    if consteval { return true; } else { return false; }
#else
    return __builtin_is_constant_evaluated();
    6183:	b8 00 00 00 00       	mov    $0x0,%eax
#endif
  }
    6188:	5d                   	pop    %rbp
    6189:	c3                   	ret

000000000000618a <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    618a:	55                   	push   %rbp
    618b:	48 89 e5             	mov    %rsp,%rbp
    618e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6196:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    619a:	5d                   	pop    %rbp
    619b:	c3                   	ret

000000000000619c <_ZNSt11char_traitsIcE6assignERcRKc>:
#if __cpp_lib_three_way_comparison
      using comparison_category = strong_ordering;
#endif

      static _GLIBCXX17_CONSTEXPR void
      assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    619c:	55                   	push   %rbp
    619d:	48 89 e5             	mov    %rsp,%rbp
    61a0:	48 83 ec 10          	sub    $0x10,%rsp
    61a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
#if __cpp_constexpr_dynamic_alloc
	if (std::__is_constant_evaluated())
    61ac:	e8 c3 ff ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    61b1:	84 c0                	test   %al,%al
    61b3:	74 15                	je     61ca <_ZNSt11char_traitsIcE6assignERcRKc+0x2e>
	  std::construct_at(__builtin_addressof(__c1), __c2);
    61b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61bd:	48 89 d6             	mov    %rdx,%rsi
    61c0:	48 89 c7             	mov    %rax,%rdi
    61c3:	e8 d7 2c 00 00       	call   8e9f <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	else
#endif
	__c1 = __c2;
      }
    61c8:	eb 0d                	jmp    61d7 <_ZNSt11char_traitsIcE6assignERcRKc+0x3b>
	__c1 = __c2;
    61ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61ce:	0f b6 10             	movzbl (%rax),%edx
    61d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d5:	88 10                	mov    %dl,(%rax)
      }
    61d7:	90                   	nop
    61d8:	c9                   	leave
    61d9:	c3                   	ret

00000000000061da <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    61da:	55                   	push   %rbp
    61db:	48 89 e5             	mov    %rsp,%rbp
    61de:	48 83 ec 10          	sub    $0x10,%rsp
    61e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    61e6:	e8 89 ff ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    61eb:	84 c0                	test   %al,%al
    61ed:	74 0e                	je     61fd <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    61ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61f3:	48 89 c7             	mov    %rax,%rdi
    61f6:	e8 e3 2c 00 00       	call   8ede <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    61fb:	eb 0d                	jmp    620a <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    61fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6201:	48 89 c7             	mov    %rax,%rdi
    6204:	e8 77 ee ff ff       	call   5080 <strlen@plt>
    6209:	90                   	nop
      }
    620a:	c9                   	leave
    620b:	c3                   	ret

000000000000620c <_ZNSt11char_traitsIcE4moveEPcPKcm>:
#endif
	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
      }

      static _GLIBCXX20_CONSTEXPR char_type*
      move(char_type* __s1, const char_type* __s2, size_t __n)
    620c:	55                   	push   %rbp
    620d:	48 89 e5             	mov    %rsp,%rbp
    6210:	48 83 ec 20          	sub    $0x20,%rsp
    6214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6218:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    621c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    6220:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6225:	75 06                	jne    622d <_ZNSt11char_traitsIcE4moveEPcPKcm+0x21>
	  return __s1;
    6227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    622b:	eb 3a                	jmp    6267 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    622d:	e8 42 ff ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    6232:	84 c0                	test   %al,%al
    6234:	74 19                	je     624f <_ZNSt11char_traitsIcE4moveEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
    6236:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    623a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    623e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6242:	48 89 ce             	mov    %rcx,%rsi
    6245:	48 89 c7             	mov    %rax,%rdi
    6248:	e8 d7 2c 00 00       	call   8f24 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>
    624d:	eb 18                	jmp    6267 <_ZNSt11char_traitsIcE4moveEPcPKcm+0x5b>
#endif
	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
    624f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6253:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625b:	48 89 ce             	mov    %rcx,%rsi
    625e:	48 89 c7             	mov    %rax,%rdi
    6261:	e8 ba ef ff ff       	call   5220 <memmove@plt>
    6266:	90                   	nop
      }
    6267:	c9                   	leave
    6268:	c3                   	ret

0000000000006269 <_ZNSt11char_traitsIcE4copyEPcPKcm>:

      static _GLIBCXX20_CONSTEXPR char_type*
      copy(char_type* __s1, const char_type* __s2, size_t __n)
    6269:	55                   	push   %rbp
    626a:	48 89 e5             	mov    %rsp,%rbp
    626d:	48 83 ec 20          	sub    $0x20,%rsp
    6271:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6275:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6279:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	if (__n == 0)
    627d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6282:	75 06                	jne    628a <_ZNSt11char_traitsIcE4copyEPcPKcm+0x21>
	  return __s1;
    6284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6288:	eb 40                	jmp    62ca <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#if __cplusplus >= 202002L
	if (std::__is_constant_evaluated())
    628a:	e8 e5 fe ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    628f:	84 c0                	test   %al,%al
    6291:	74 19                	je     62ac <_ZNSt11char_traitsIcE4copyEPcPKcm+0x43>
	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
    6293:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6297:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    629b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    629f:	48 89 ce             	mov    %rcx,%rsi
    62a2:	48 89 c7             	mov    %rax,%rdi
    62a5:	e8 2c 2d 00 00       	call   8fd6 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
    62aa:	eb 1e                	jmp    62ca <_ZNSt11char_traitsIcE4copyEPcPKcm+0x61>
#endif
	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
    62ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    62b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    62b4:	48 89 d1             	mov    %rdx,%rcx
    62b7:	48 89 c6             	mov    %rax,%rsi
    62ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62be:	48 89 c2             	mov    %rax,%rdx
    62c1:	48 89 cf             	mov    %rcx,%rdi
    62c4:	e8 47 ee ff ff       	call   5110 <memcpy@plt>
    62c9:	90                   	nop
      }
    62ca:	c9                   	leave
    62cb:	c3                   	ret

00000000000062cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>:
      // Capacity:
      ///  Returns the number of characters in the string, not including any
      ///  null-termination.
      _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
    62cc:	55                   	push   %rbp
    62cd:	48 89 e5             	mov    %rsp,%rbp
    62d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    62d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    62dc:	5d                   	pop    %rbp
    62dd:	c3                   	ret

00000000000062de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>:
  {
  public:
    error_code() noexcept
    : _M_value(0), _M_cat(&system_category()) { }

    error_code(int __v, const error_category& __cat) noexcept
    62de:	55                   	push   %rbp
    62df:	48 89 e5             	mov    %rsp,%rbp
    62e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62e6:	89 75 f4             	mov    %esi,-0xc(%rbp)
    62e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    : _M_value(__v), _M_cat(&__cat) { }
    62ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f1:	8b 55 f4             	mov    -0xc(%rbp),%edx
    62f4:	89 10                	mov    %edx,(%rax)
    62f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62fe:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6302:	90                   	nop
    6303:	5d                   	pop    %rbp
    6304:	c3                   	ret
    6305:	90                   	nop

0000000000006306 <_ZNKSt10error_code5valueEv>:
			 error_code&>::type
      operator=(_ErrorCodeEnum __e) noexcept
      { return *this = make_error_code(__e); }

    int
    value() const noexcept { return _M_value; }
    6306:	55                   	push   %rbp
    6307:	48 89 e5             	mov    %rsp,%rbp
    630a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    630e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6312:	8b 00                	mov    (%rax),%eax
    6314:	5d                   	pop    %rbp
    6315:	c3                   	ret

0000000000006316 <_ZNKSt10error_code8categoryEv>:

    const error_category&
    category() const noexcept { return *_M_cat; }
    6316:	55                   	push   %rbp
    6317:	48 89 e5             	mov    %rsp,%rbp
    631a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    631e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6322:	48 8b 40 08          	mov    0x8(%rax),%rax
    6326:	5d                   	pop    %rbp
    6327:	c3                   	ret

0000000000006328 <_ZNKSt10error_code7messageB5cxx11Ev>:
    error_condition
    default_error_condition() const noexcept;

    _GLIBCXX_DEFAULT_ABI_TAG
    string
    message() const
    6328:	55                   	push   %rbp
    6329:	48 89 e5             	mov    %rsp,%rbp
    632c:	41 54                	push   %r12
    632e:	53                   	push   %rbx
    632f:	48 83 ec 10          	sub    $0x10,%rsp
    6333:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6337:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return category().message(value()); }
    633b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    633f:	48 89 c7             	mov    %rax,%rdi
    6342:	e8 cf ff ff ff       	call   6316 <_ZNKSt10error_code8categoryEv>
    6347:	48 89 c3             	mov    %rax,%rbx
    634a:	48 8b 03             	mov    (%rbx),%rax
    634d:	48 83 c0 20          	add    $0x20,%rax
    6351:	4c 8b 20             	mov    (%rax),%r12
    6354:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6358:	48 89 c7             	mov    %rax,%rdi
    635b:	e8 a6 ff ff ff       	call   6306 <_ZNKSt10error_code5valueEv>
    6360:	89 c2                	mov    %eax,%edx
    6362:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6366:	48 89 de             	mov    %rbx,%rsi
    6369:	48 89 c7             	mov    %rax,%rdi
    636c:	41 ff d4             	call   *%r12
    636f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6373:	48 83 c4 10          	add    $0x10,%rsp
    6377:	5b                   	pop    %rbx
    6378:	41 5c                	pop    %r12
    637a:	5d                   	pop    %rbp
    637b:	c3                   	ret

000000000000637c <_ZNSt12system_errorC1ESt10error_code>:
  {
  private:
    error_code 	_M_code;

  public:
    system_error(error_code __ec = error_code())
    637c:	55                   	push   %rbp
    637d:	48 89 e5             	mov    %rsp,%rbp
    6380:	53                   	push   %rbx
    6381:	48 83 ec 48          	sub    $0x48,%rsp
    6385:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6389:	48 89 d1             	mov    %rdx,%rcx
    638c:	48 89 f0             	mov    %rsi,%rax
    638f:	48 89 fa             	mov    %rdi,%rdx
    6392:	48 89 ca             	mov    %rcx,%rdx
    6395:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6399:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    : runtime_error(__ec.message()), _M_code(__ec) { }
    639d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    63a1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63a5:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    63a9:	48 89 d6             	mov    %rdx,%rsi
    63ac:	48 89 c7             	mov    %rax,%rdi
    63af:	e8 74 ff ff ff       	call   6328 <_ZNKSt10error_code7messageB5cxx11Ev>
    63b4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63b8:	48 89 c6             	mov    %rax,%rsi
    63bb:	48 89 df             	mov    %rbx,%rdi
    63be:	e8 ed ed ff ff       	call   51b0 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    63c3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63c7:	48 89 c7             	mov    %rax,%rdi
    63ca:	e8 87 2c 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    63cf:	48 8d 15 82 a6 00 00 	lea    0xa682(%rip),%rdx        # 10a58 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    63d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63da:	48 89 10             	mov    %rdx,(%rax)
    63dd:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    63e1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    63e5:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    63e9:	48 89 41 10          	mov    %rax,0x10(%rcx)
    63ed:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    63f1:	eb 1a                	jmp    640d <_ZNSt12system_errorC1ESt10error_code+0x91>
    63f3:	48 89 c3             	mov    %rax,%rbx
    63f6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63fa:	48 89 c7             	mov    %rax,%rdi
    63fd:	e8 54 2c 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6402:	48 89 d8             	mov    %rbx,%rax
    6405:	48 89 c7             	mov    %rax,%rdi
    6408:	e8 53 ee ff ff       	call   5260 <_Unwind_Resume@plt>
    640d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6411:	c9                   	leave
    6412:	c3                   	ret
    6413:	90                   	nop

0000000000006414 <_ZNSt12system_errorC1ESt10error_codePKc>:

    system_error(error_code __ec, const string& __what)
    : runtime_error(__what + ": " + __ec.message()), _M_code(__ec) { }

    system_error(error_code __ec, const char* __what)
    6414:	55                   	push   %rbp
    6415:	48 89 e5             	mov    %rsp,%rbp
    6418:	53                   	push   %rbx
    6419:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    6420:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    6424:	89 f0                	mov    %esi,%eax
    6426:	48 89 d6             	mov    %rdx,%rsi
    6429:	48 89 f2             	mov    %rsi,%rdx
    642c:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    6433:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    643a:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
    : runtime_error(__what + (": " + __ec.message())), _M_code(__ec) { }
    643e:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    6442:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6446:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    644d:	48 89 d6             	mov    %rdx,%rsi
    6450:	48 89 c7             	mov    %rax,%rdi
    6453:	e8 d0 fe ff ff       	call   6328 <_ZNKSt10error_code7messageB5cxx11Ev>
    6458:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    645c:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    6460:	48 8d 0d d9 61 00 00 	lea    0x61d9(%rip),%rcx        # c640 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    6467:	48 89 ce             	mov    %rcx,%rsi
    646a:	48 89 c7             	mov    %rax,%rdi
    646d:	e8 30 2d 00 00       	call   91a2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    6472:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6476:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    647a:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    647e:	48 89 ce             	mov    %rcx,%rsi
    6481:	48 89 c7             	mov    %rax,%rdi
    6484:	e8 19 2d 00 00       	call   91a2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    6489:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    648d:	48 89 c6             	mov    %rax,%rsi
    6490:	48 89 df             	mov    %rbx,%rdi
    6493:	e8 18 ed ff ff       	call   51b0 <_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    6498:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    649c:	48 89 c7             	mov    %rax,%rdi
    649f:	e8 b2 2b 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64a4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    64a8:	48 89 c7             	mov    %rax,%rdi
    64ab:	e8 a6 2b 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64b0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    64b4:	48 89 c7             	mov    %rax,%rdi
    64b7:	e8 9a 2b 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64bc:	48 8d 15 95 a5 00 00 	lea    0xa595(%rip),%rdx        # 10a58 <_ZTVSt12system_error@GLIBCXX_3.4.11+0x10>
    64c3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    64c7:	48 89 10             	mov    %rdx,(%rax)
    64ca:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    64ce:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    64d5:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    64dc:	48 89 41 10          	mov    %rax,0x10(%rcx)
    64e0:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    64e4:	eb 3c                	jmp    6522 <_ZNSt12system_errorC1ESt10error_codePKc+0x10e>
    64e6:	48 89 c3             	mov    %rax,%rbx
    64e9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    64ed:	48 89 c7             	mov    %rax,%rdi
    64f0:	e8 61 2b 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    64f5:	eb 03                	jmp    64fa <_ZNSt12system_errorC1ESt10error_codePKc+0xe6>
    64f7:	48 89 c3             	mov    %rax,%rbx
    64fa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    64fe:	48 89 c7             	mov    %rax,%rdi
    6501:	e8 50 2b 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6506:	eb 03                	jmp    650b <_ZNSt12system_errorC1ESt10error_codePKc+0xf7>
    6508:	48 89 c3             	mov    %rax,%rbx
    650b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    650f:	48 89 c7             	mov    %rax,%rdi
    6512:	e8 3f 2b 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    6517:	48 89 d8             	mov    %rbx,%rax
    651a:	48 89 c7             	mov    %rax,%rdi
    651d:	e8 3e ed ff ff       	call   5260 <_Unwind_Resume@plt>
    6522:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6526:	c9                   	leave
    6527:	c3                   	ret

0000000000006528 <_ZStanSt13_Ios_FmtflagsS_>:
      _S_ios_fmtflags_min = ~__INT_MAX__
    };

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
    6528:	55                   	push   %rbp
    6529:	48 89 e5             	mov    %rsp,%rbp
    652c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    652f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6532:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6535:	23 45 f8             	and    -0x8(%rbp),%eax
    6538:	5d                   	pop    %rbp
    6539:	c3                   	ret

000000000000653a <_ZStorSt13_Ios_FmtflagsS_>:

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
    653a:	55                   	push   %rbp
    653b:	48 89 e5             	mov    %rsp,%rbp
    653e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6541:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6544:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6547:	0b 45 f8             	or     -0x8(%rbp),%eax
    654a:	5d                   	pop    %rbp
    654b:	c3                   	ret

000000000000654c <_ZStcoSt13_Ios_Fmtflags>:
  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  operator~(_Ios_Fmtflags __a)
  { return _Ios_Fmtflags(~static_cast<int>(__a)); }
    654c:	55                   	push   %rbp
    654d:	48 89 e5             	mov    %rsp,%rbp
    6550:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6553:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6556:	f7 d0                	not    %eax
    6558:	5d                   	pop    %rbp
    6559:	c3                   	ret

000000000000655a <_ZStoRRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a | __b; }
    655a:	55                   	push   %rbp
    655b:	48 89 e5             	mov    %rsp,%rbp
    655e:	48 83 ec 10          	sub    $0x10,%rsp
    6562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6566:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656d:	8b 00                	mov    (%rax),%eax
    656f:	8b 55 f4             	mov    -0xc(%rbp),%edx
    6572:	89 d6                	mov    %edx,%esi
    6574:	89 c7                	mov    %eax,%edi
    6576:	e8 bf ff ff ff       	call   653a <_ZStorSt13_Ios_FmtflagsS_>
    657b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    657f:	89 02                	mov    %eax,(%rdx)
    6581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6585:	c9                   	leave
    6586:	c3                   	ret

0000000000006587 <_ZStaNRSt13_Ios_FmtflagsS_>:

  inline const _Ios_Fmtflags&
  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  { return __a = __a & __b; }
    6587:	55                   	push   %rbp
    6588:	48 89 e5             	mov    %rsp,%rbp
    658b:	48 83 ec 10          	sub    $0x10,%rsp
    658f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6593:	89 75 f4             	mov    %esi,-0xc(%rbp)
    6596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    659a:	8b 00                	mov    (%rax),%eax
    659c:	8b 55 f4             	mov    -0xc(%rbp),%edx
    659f:	89 d6                	mov    %edx,%esi
    65a1:	89 c7                	mov    %eax,%edi
    65a3:	e8 80 ff ff ff       	call   6528 <_ZStanSt13_Ios_FmtflagsS_>
    65a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    65ac:	89 02                	mov    %eax,(%rdx)
    65ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b2:	c9                   	leave
    65b3:	c3                   	ret

00000000000065b4 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>:
     *
     *  This function clears @a mask in the format flags, then sets
     *  @a fmtfl @c & @a mask.  An example mask is @c ios_base::adjustfield.
    */
    fmtflags
    setf(fmtflags __fmtfl, fmtflags __mask)
    65b4:	55                   	push   %rbp
    65b5:	48 89 e5             	mov    %rsp,%rbp
    65b8:	48 83 ec 20          	sub    $0x20,%rsp
    65bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65c0:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    65c3:	89 55 e0             	mov    %edx,-0x20(%rbp)
    {
      fmtflags __old = _M_flags;
    65c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65ca:	8b 40 18             	mov    0x18(%rax),%eax
    65cd:	89 45 fc             	mov    %eax,-0x4(%rbp)
      _M_flags &= ~__mask;
    65d0:	8b 45 e0             	mov    -0x20(%rbp),%eax
    65d3:	89 c7                	mov    %eax,%edi
    65d5:	e8 72 ff ff ff       	call   654c <_ZStcoSt13_Ios_Fmtflags>
    65da:	89 c2                	mov    %eax,%edx
    65dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65e0:	48 83 c0 18          	add    $0x18,%rax
    65e4:	89 d6                	mov    %edx,%esi
    65e6:	48 89 c7             	mov    %rax,%rdi
    65e9:	e8 99 ff ff ff       	call   6587 <_ZStaNRSt13_Ios_FmtflagsS_>
      _M_flags |= (__fmtfl & __mask);
    65ee:	8b 55 e0             	mov    -0x20(%rbp),%edx
    65f1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    65f4:	89 d6                	mov    %edx,%esi
    65f6:	89 c7                	mov    %eax,%edi
    65f8:	e8 2b ff ff ff       	call   6528 <_ZStanSt13_Ios_FmtflagsS_>
    65fd:	89 c2                	mov    %eax,%edx
    65ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6603:	48 83 c0 18          	add    $0x18,%rax
    6607:	89 d6                	mov    %edx,%esi
    6609:	48 89 c7             	mov    %rax,%rdi
    660c:	e8 49 ff ff ff       	call   655a <_ZStoRRSt13_Ios_FmtflagsS_>
      return __old;
    6611:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
    6614:	c9                   	leave
    6615:	c3                   	ret

0000000000006616 <_ZSt3hexRSt8ios_base>:
  }

  /// Calls base.setf(ios_base::hex, ios_base::basefield).
  inline ios_base&
  hex(ios_base& __base)
  {
    6616:	55                   	push   %rbp
    6617:	48 89 e5             	mov    %rsp,%rbp
    661a:	48 83 ec 10          	sub    $0x10,%rsp
    661e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    __base.setf(ios_base::hex, ios_base::basefield);
    6622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6626:	ba 4a 00 00 00       	mov    $0x4a,%edx
    662b:	be 08 00 00 00       	mov    $0x8,%esi
    6630:	48 89 c7             	mov    %rax,%rdi
    6633:	e8 7c ff ff ff       	call   65b4 <_ZNSt8ios_base4setfESt13_Ios_FmtflagsS0_>
    return __base;
    6638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  }
    663c:	c9                   	leave
    663d:	c3                   	ret

000000000000663e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      struct _Alloc_hider : allocator_type // TODO check __is_final
    663e:	55                   	push   %rbp
    663f:	48 89 e5             	mov    %rsp,%rbp
    6642:	48 83 ec 10          	sub    $0x10,%rsp
    6646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    664a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    664e:	48 89 c7             	mov    %rax,%rdi
    6651:	e8 ea e9 ff ff       	call   5040 <_ZNSaIcED2Ev@plt>
    6656:	90                   	nop
    6657:	c9                   	leave
    6658:	c3                   	ret
    6659:	90                   	nop

000000000000665a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
      basic_string()
    665a:	55                   	push   %rbp
    665b:	48 89 e5             	mov    %rsp,%rbp
    665e:	53                   	push   %rbx
    665f:	48 83 ec 48          	sub    $0x48,%rsp
    6663:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
      : _M_dataplus(_M_local_data())
    6667:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
    666b:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    666f:	48 89 c7             	mov    %rax,%rdi
    6672:	e8 f9 eb ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6677:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    667b:	48 89 c7             	mov    %rax,%rdi
    667e:	e8 97 00 00 00       	call   671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6683:	48 89 c1             	mov    %rax,%rcx
    6686:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    668a:	48 89 c2             	mov    %rax,%rdx
    668d:	48 89 ce             	mov    %rcx,%rsi
    6690:	48 89 df             	mov    %rbx,%rdi
    6693:	e8 e2 00 00 00       	call   677a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
    6698:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    669c:	48 89 c7             	mov    %rax,%rdi
    669f:	e8 ec ea ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    66a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    66a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (std::is_constant_evaluated())
    66ac:	e8 ce fa ff ff       	call   617f <_ZSt21is_constant_evaluatedv>
    66b1:	84 c0                	test   %al,%al
    66b3:	74 40                	je     66f5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x9b>
	  for (_CharT& __c : _M_local_buf)
    66b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66b9:	48 83 c0 10          	add    $0x10,%rax
    66bd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    66c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66c5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    66c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66cd:	48 83 c0 10          	add    $0x10,%rax
    66d1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    66d5:	eb 14                	jmp    66eb <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x91>
    66d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66db:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	    __c = _CharT();
    66df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    66e3:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    66e6:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    66eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    66ef:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    66f3:	75 e2                	jne    66d7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev+0x7d>
	return _M_local_data();
    66f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66f9:	48 89 c7             	mov    %rax,%rdi
    66fc:	e8 19 00 00 00       	call   671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    6701:	90                   	nop
	_M_set_length(0);
    6702:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6706:	be 00 00 00 00       	mov    $0x0,%esi
    670b:	48 89 c7             	mov    %rax,%rdi
    670e:	e8 79 2b 00 00       	call   928c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    6713:	90                   	nop
    6714:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6718:	c9                   	leave
    6719:	c3                   	ret

000000000000671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data()
    671a:	55                   	push   %rbp
    671b:	48 89 e5             	mov    %rsp,%rbp
    671e:	48 83 ec 10          	sub    $0x10,%rsp
    6722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
    6726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672a:	48 83 c0 10          	add    $0x10,%rax
    672e:	48 89 c7             	mov    %rax,%rdi
    6731:	e8 02 00 00 00       	call   6738 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>
      }
    6736:	c9                   	leave
    6737:	c3                   	ret

0000000000006738 <_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc>:
       *  @brief  Obtain a pointer to an object
       *  @param  __r  A reference to an object of type `element_type`
       *  @return `addressof(__r)`
      */
      static _GLIBCXX20_CONSTEXPR pointer
      pointer_to(element_type& __r) noexcept
    6738:	55                   	push   %rbp
    6739:	48 89 e5             	mov    %rsp,%rbp
    673c:	48 83 ec 10          	sub    $0x10,%rsp
    6740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    6744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6748:	48 89 c7             	mov    %rax,%rdi
    674b:	e8 02 00 00 00       	call   6752 <_ZSt9addressofIcEPT_RS0_>
    6750:	c9                   	leave
    6751:	c3                   	ret

0000000000006752 <_ZSt9addressofIcEPT_RS0_>:
   *  @return   The actual address.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR _Tp*
    addressof(_Tp& __r) noexcept
    6752:	55                   	push   %rbp
    6753:	48 89 e5             	mov    %rsp,%rbp
    6756:	48 83 ec 10          	sub    $0x10,%rsp
    675a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    675e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6762:	48 89 c7             	mov    %rax,%rdi
    6765:	e8 02 00 00 00       	call   676c <_ZSt11__addressofIcEPT_RS0_>
    676a:	c9                   	leave
    676b:	c3                   	ret

000000000000676c <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    676c:	55                   	push   %rbp
    676d:	48 89 e5             	mov    %rsp,%rbp
    6770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6778:	5d                   	pop    %rbp
    6779:	c3                   	ret

000000000000677a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>:
	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
    677a:	55                   	push   %rbp
    677b:	48 89 e5             	mov    %rsp,%rbp
    677e:	48 83 ec 20          	sub    $0x20,%rsp
    6782:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6786:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    678a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(std::move(__a)), _M_p(__dat) { }
    678e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6792:	48 89 c7             	mov    %rax,%rdi
    6795:	e8 20 00 00 00       	call   67ba <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    679a:	48 89 c2             	mov    %rax,%rdx
    679d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a1:	48 89 d6             	mov    %rdx,%rsi
    67a4:	48 89 c7             	mov    %rax,%rdi
    67a7:	e8 44 ea ff ff       	call   51f0 <_ZNSaIcEC2ERKS_@plt>
    67ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67b4:	48 89 10             	mov    %rdx,(%rax)
    67b7:	90                   	nop
    67b8:	c9                   	leave
    67b9:	c3                   	ret

00000000000067ba <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    67ba:	55                   	push   %rbp
    67bb:	48 89 e5             	mov    %rsp,%rbp
    67be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    67c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c6:	5d                   	pop    %rbp
    67c7:	c3                   	ret

00000000000067c8 <_ZNK2vk17ErrorCategoryImpl4nameEv>:
    virtual const char * name() const VULKAN_HPP_NOEXCEPT override
    67c8:	55                   	push   %rbp
    67c9:	48 89 e5             	mov    %rsp,%rbp
    67cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return VULKAN_HPP_NAMESPACE_STRING "::Result";
    67d0:	48 8d 05 6c 5e 00 00 	lea    0x5e6c(%rip),%rax        # c643 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb>
    }
    67d7:	5d                   	pop    %rbp
    67d8:	c3                   	ret
    67d9:	90                   	nop

00000000000067da <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei>:
    virtual std::string message( int ev ) const override
    67da:	55                   	push   %rbp
    67db:	48 89 e5             	mov    %rsp,%rbp
    67de:	41 54                	push   %r12
    67e0:	53                   	push   %rbx
    67e1:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
    67e8:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
    67ef:	48 89 b5 e0 fd ff ff 	mov    %rsi,-0x220(%rbp)
    67f6:	89 95 dc fd ff ff    	mov    %edx,-0x224(%rbp)
    67fc:	8b 85 dc fd ff ff    	mov    -0x224(%rbp),%eax
    6802:	89 45 ec             	mov    %eax,-0x14(%rbp)
    6805:	48 8b 9d e8 fd ff ff 	mov    -0x218(%rbp),%rbx

  //=== VK_VERSION_1_0 ===

  VULKAN_HPP_INLINE std::string to_string( Result value )
  {
    switch ( value )
    680c:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    6813:	0f 84 eb 06 00 00    	je     6f04 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x72a>
    6819:	81 7d ec 28 52 9f 3b 	cmpl   $0x3b9f5228,-0x14(%rbp)
    6820:	0f 8f 08 0a 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6826:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    682d:	0f 84 8f 09 00 00    	je     71c2 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9e8>
    6833:	81 7d ec e3 e0 9e 3b 	cmpl   $0x3b9ee0e3,-0x14(%rbp)
    683a:	0f 8f ee 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6840:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    6847:	0f 84 3f 09 00 00    	je     718c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x9b2>
    684d:	81 7d ec e2 e0 9e 3b 	cmpl   $0x3b9ee0e2,-0x14(%rbp)
    6854:	0f 8f d4 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    685a:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    6861:	0f 84 ef 08 00 00    	je     7156 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x97c>
    6867:	81 7d ec e1 e0 9e 3b 	cmpl   $0x3b9ee0e1,-0x14(%rbp)
    686e:	0f 8f ba 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6874:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    687b:	0f 84 9f 08 00 00    	je     7120 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x946>
    6881:	81 7d ec e0 e0 9e 3b 	cmpl   $0x3b9ee0e0,-0x14(%rbp)
    6888:	0f 8f a0 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    688e:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    6895:	0f 84 0b 07 00 00    	je     6fa6 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x7cc>
    689b:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    68a2:	0f 8f 86 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68a8:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    68ac:	0f 8f 7c 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68b2:	83 7d ec f3          	cmpl   $0xfffffff3,-0x14(%rbp)
    68b6:	0f 8d 3d 01 00 00    	jge    69f9 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x21f>
    68bc:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    68c3:	0f 84 71 06 00 00    	je     6f3a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x760>
    68c9:	81 7d ec 00 36 65 c4 	cmpl   $0xc4653600,-0x14(%rbp)
    68d0:	0f 8f 58 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68d6:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    68dd:	0f 84 8d 06 00 00    	je     6f70 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x796>
    68e3:	81 7d ec ff 35 65 c4 	cmpl   $0xc46535ff,-0x14(%rbp)
    68ea:	0f 8f 3e 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    68f0:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    68f7:	0f 84 df 06 00 00    	je     6fdc <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x802>
    68fd:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    6904:	0f 8f 24 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    690a:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    6911:	0f 84 fb 06 00 00    	je     7012 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x838>
    6917:	81 7d ec 47 2a 65 c4 	cmpl   $0xc4652a47,-0x14(%rbp)
    691e:	0f 8f 0a 09 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6924:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    692b:	0f 84 17 07 00 00    	je     7048 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x86e>
    6931:	81 7d ec 07 0b 65 c4 	cmpl   $0xc4650b07,-0x14(%rbp)
    6938:	0f 8f f0 08 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    693e:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    6945:	0f 84 33 07 00 00    	je     707e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8a4>
    694b:	81 7d ec 20 07 65 c4 	cmpl   $0xc4650720,-0x14(%rbp)
    6952:	0f 8f d6 08 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6958:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    695f:	0f 84 c7 04 00 00    	je     6e2c <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x652>
    6965:	81 7d ec 78 28 64 c4 	cmpl   $0xc4642878,-0x14(%rbp)
    696c:	0f 8f bc 08 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6972:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    6979:	0f 84 e3 04 00 00    	je     6e62 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x688>
    697f:	81 7d ec bd 1c 64 c4 	cmpl   $0xc4641cbd,-0x14(%rbp)
    6986:	0f 8f a2 08 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    698c:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    6993:	0f 84 1b 07 00 00    	je     70b4 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x8da>
    6999:	81 7d ec d0 cc 62 c4 	cmpl   $0xc462ccd0,-0x14(%rbp)
    69a0:	0f 8f 88 08 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69a6:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    69ad:	0f 84 e5 04 00 00    	je     6e98 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6be>
    69b3:	81 7d ec 18 c1 62 c4 	cmpl   $0xc462c118,-0x14(%rbp)
    69ba:	0f 8f 6e 08 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69c0:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    69c7:	0f 84 1d 07 00 00    	je     70ea <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x910>
    69cd:	81 7d ec 4f 8e 62 c4 	cmpl   $0xc4628e4f,-0x14(%rbp)
    69d4:	0f 8f 54 08 00 00    	jg     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69da:	81 7d ec b0 0d 60 c4 	cmpl   $0xc4600db0,-0x14(%rbp)
    69e1:	0f 84 11 08 00 00    	je     71f8 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa1e>
    69e7:	81 7d ec 18 4a 61 c4 	cmpl   $0xc4614a18,-0x14(%rbp)
    69ee:	0f 84 da 04 00 00    	je     6ece <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0x6f4>
    69f4:	e9 35 08 00 00       	jmp    722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    69f9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    69fc:	83 c0 0d             	add    $0xd,%eax
    69ff:	83 f8 12             	cmp    $0x12,%eax
    6a02:	0f 87 26 08 00 00    	ja     722e <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xa54>
    6a08:	89 c0                	mov    %eax,%eax
    6a0a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    6a11:	00 
    6a12:	48 8d 05 c3 60 00 00 	lea    0x60c3(%rip),%rax        # cadc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x4a4>
    6a19:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    6a1c:	48 98                	cltq
    6a1e:	48 8d 15 b7 60 00 00 	lea    0x60b7(%rip),%rdx        # cadc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x4a4>
    6a25:	48 01 d0             	add    %rdx,%rax
    6a28:	ff e0                	jmp    *%rax
    {
      case Result::eSuccess: return "Success";
    6a2a:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a2e:	48 89 c7             	mov    %rax,%rdi
    6a31:	e8 3a e8 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6a36:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a3a:	48 89 c2             	mov    %rax,%rdx
    6a3d:	48 8d 05 0a 5c 00 00 	lea    0x5c0a(%rip),%rax        # c64e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x16>
    6a44:	48 89 c6             	mov    %rax,%rsi
    6a47:	48 89 df             	mov    %rbx,%rdi
    6a4a:	e8 9d 27 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6a4f:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6a53:	48 89 c7             	mov    %rax,%rdi
    6a56:	e8 35 e7 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
      return VULKAN_HPP_NAMESPACE::to_string( static_cast<VULKAN_HPP_NAMESPACE::Result>( ev ) );
    6a5b:	e9 aa 0c 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eNotReady: return "NotReady";
    6a60:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a64:	48 89 c7             	mov    %rax,%rdi
    6a67:	e8 04 e8 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6a6c:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a70:	48 89 c2             	mov    %rax,%rdx
    6a73:	48 8d 05 dc 5b 00 00 	lea    0x5bdc(%rip),%rax        # c656 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1e>
    6a7a:	48 89 c6             	mov    %rax,%rsi
    6a7d:	48 89 df             	mov    %rbx,%rdi
    6a80:	e8 67 27 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6a85:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6a89:	48 89 c7             	mov    %rax,%rdi
    6a8c:	e8 ff e6 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6a91:	e9 74 0c 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eTimeout: return "Timeout";
    6a96:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6a9a:	48 89 c7             	mov    %rax,%rdi
    6a9d:	e8 ce e7 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6aa2:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6aa6:	48 89 c2             	mov    %rax,%rdx
    6aa9:	48 8d 05 af 5b 00 00 	lea    0x5baf(%rip),%rax        # c65f <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x27>
    6ab0:	48 89 c6             	mov    %rax,%rsi
    6ab3:	48 89 df             	mov    %rbx,%rdi
    6ab6:	e8 31 27 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6abb:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    6abf:	48 89 c7             	mov    %rax,%rdi
    6ac2:	e8 c9 e6 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6ac7:	e9 3e 0c 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventSet: return "EventSet";
    6acc:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6ad0:	48 89 c7             	mov    %rax,%rdi
    6ad3:	e8 98 e7 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6ad8:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6adc:	48 89 c2             	mov    %rax,%rdx
    6adf:	48 8d 05 81 5b 00 00 	lea    0x5b81(%rip),%rax        # c667 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f>
    6ae6:	48 89 c6             	mov    %rax,%rsi
    6ae9:	48 89 df             	mov    %rbx,%rdi
    6aec:	e8 fb 26 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6af1:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    6af5:	48 89 c7             	mov    %rax,%rdi
    6af8:	e8 93 e6 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6afd:	e9 08 0c 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eEventReset: return "EventReset";
    6b02:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b06:	48 89 c7             	mov    %rax,%rdi
    6b09:	e8 62 e7 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6b0e:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b12:	48 89 c2             	mov    %rax,%rdx
    6b15:	48 8d 05 54 5b 00 00 	lea    0x5b54(%rip),%rax        # c670 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x38>
    6b1c:	48 89 c6             	mov    %rax,%rsi
    6b1f:	48 89 df             	mov    %rbx,%rdi
    6b22:	e8 c5 26 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b27:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    6b2b:	48 89 c7             	mov    %rax,%rdi
    6b2e:	e8 5d e6 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6b33:	e9 d2 0b 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eIncomplete: return "Incomplete";
    6b38:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b3c:	48 89 c7             	mov    %rax,%rdi
    6b3f:	e8 2c e7 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6b44:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b48:	48 89 c2             	mov    %rax,%rdx
    6b4b:	48 8d 05 29 5b 00 00 	lea    0x5b29(%rip),%rax        # c67b <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x43>
    6b52:	48 89 c6             	mov    %rax,%rsi
    6b55:	48 89 df             	mov    %rbx,%rdi
    6b58:	e8 8f 26 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b5d:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    6b61:	48 89 c7             	mov    %rax,%rdi
    6b64:	e8 27 e6 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6b69:	e9 9c 0b 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    6b6e:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b72:	48 89 c7             	mov    %rax,%rdi
    6b75:	e8 f6 e6 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6b7a:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b7e:	48 89 c2             	mov    %rax,%rdx
    6b81:	48 8d 05 fe 5a 00 00 	lea    0x5afe(%rip),%rax        # c686 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x4e>
    6b88:	48 89 c6             	mov    %rax,%rsi
    6b8b:	48 89 df             	mov    %rbx,%rdi
    6b8e:	e8 59 26 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6b93:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    6b97:	48 89 c7             	mov    %rax,%rdi
    6b9a:	e8 f1 e5 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6b9f:	e9 66 0b 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    6ba4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6ba8:	48 89 c7             	mov    %rax,%rdi
    6bab:	e8 c0 e6 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6bb0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6bb4:	48 89 c2             	mov    %rax,%rdx
    6bb7:	48 8d 05 dd 5a 00 00 	lea    0x5add(%rip),%rax        # c69b <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x63>
    6bbe:	48 89 c6             	mov    %rax,%rsi
    6bc1:	48 89 df             	mov    %rbx,%rdi
    6bc4:	e8 23 26 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6bc9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6bcd:	48 89 c7             	mov    %rax,%rdi
    6bd0:	e8 bb e5 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6bd5:	e9 30 0b 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    6bda:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6bde:	48 89 c7             	mov    %rax,%rdi
    6be1:	e8 8a e6 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6be6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6bea:	48 89 c2             	mov    %rax,%rdx
    6bed:	48 8d 05 be 5a 00 00 	lea    0x5abe(%rip),%rax        # c6b2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x7a>
    6bf4:	48 89 c6             	mov    %rax,%rsi
    6bf7:	48 89 df             	mov    %rbx,%rdi
    6bfa:	e8 ed 25 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6bff:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6c03:	48 89 c7             	mov    %rax,%rdi
    6c06:	e8 85 e5 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6c0b:	e9 fa 0a 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    6c10:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c14:	48 89 c7             	mov    %rax,%rdi
    6c17:	e8 54 e6 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6c1c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c20:	48 89 c2             	mov    %rax,%rdx
    6c23:	48 8d 05 a2 5a 00 00 	lea    0x5aa2(%rip),%rax        # c6cc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x94>
    6c2a:	48 89 c6             	mov    %rax,%rsi
    6c2d:	48 89 df             	mov    %rbx,%rdi
    6c30:	e8 b7 25 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c35:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    6c39:	48 89 c7             	mov    %rax,%rdi
    6c3c:	e8 4f e5 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6c41:	e9 c4 0a 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    6c46:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c4a:	48 89 c7             	mov    %rax,%rdi
    6c4d:	e8 1e e6 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6c52:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c56:	48 89 c2             	mov    %rax,%rdx
    6c59:	48 8d 05 7c 5a 00 00 	lea    0x5a7c(%rip),%rax        # c6dc <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa4>
    6c60:	48 89 c6             	mov    %rax,%rsi
    6c63:	48 89 df             	mov    %rbx,%rdi
    6c66:	e8 81 25 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6c6b:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    6c6f:	48 89 c7             	mov    %rax,%rdi
    6c72:	e8 19 e5 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6c77:	e9 8e 0a 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    6c7c:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6c80:	48 89 c7             	mov    %rax,%rdi
    6c83:	e8 e8 e5 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6c88:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6c8c:	48 89 c2             	mov    %rax,%rdx
    6c8f:	48 8d 05 5b 5a 00 00 	lea    0x5a5b(%rip),%rax        # c6f1 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xb9>
    6c96:	48 89 c6             	mov    %rax,%rsi
    6c99:	48 89 df             	mov    %rbx,%rdi
    6c9c:	e8 4b 25 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ca1:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    6ca5:	48 89 c7             	mov    %rax,%rdi
    6ca8:	e8 e3 e4 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6cad:	e9 58 0a 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    6cb2:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6cb6:	48 89 c7             	mov    %rax,%rdi
    6cb9:	e8 b2 e5 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6cbe:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6cc2:	48 89 c2             	mov    %rax,%rdx
    6cc5:	48 8d 05 3a 5a 00 00 	lea    0x5a3a(%rip),%rax        # c706 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xce>
    6ccc:	48 89 c6             	mov    %rax,%rsi
    6ccf:	48 89 df             	mov    %rbx,%rdi
    6cd2:	e8 15 25 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6cd7:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    6cdb:	48 89 c7             	mov    %rax,%rdi
    6cde:	e8 ad e4 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6ce3:	e9 22 0a 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    6ce8:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6cec:	48 89 c7             	mov    %rax,%rdi
    6cef:	e8 7c e5 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6cf4:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6cf8:	48 89 c2             	mov    %rax,%rdx
    6cfb:	48 8d 05 1d 5a 00 00 	lea    0x5a1d(%rip),%rax        # c71f <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xe7>
    6d02:	48 89 c6             	mov    %rax,%rsi
    6d05:	48 89 df             	mov    %rbx,%rdi
    6d08:	e8 df 24 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d0d:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    6d11:	48 89 c7             	mov    %rax,%rdi
    6d14:	e8 77 e4 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6d19:	e9 ec 09 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    6d1e:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d22:	48 89 c7             	mov    %rax,%rdi
    6d25:	e8 46 e5 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6d2a:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d2e:	48 89 c2             	mov    %rax,%rdx
    6d31:	48 8d 05 fe 59 00 00 	lea    0x59fe(%rip),%rax        # c736 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xfe>
    6d38:	48 89 c6             	mov    %rax,%rsi
    6d3b:	48 89 df             	mov    %rbx,%rdi
    6d3e:	e8 a9 24 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d43:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    6d47:	48 89 c7             	mov    %rax,%rdi
    6d4a:	e8 41 e4 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6d4f:	e9 b6 09 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    6d54:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d58:	48 89 c7             	mov    %rax,%rdi
    6d5b:	e8 10 e5 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6d60:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d64:	48 89 c2             	mov    %rax,%rdx
    6d67:	48 8d 05 e0 59 00 00 	lea    0x59e0(%rip),%rax        # c74e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x116>
    6d6e:	48 89 c6             	mov    %rax,%rsi
    6d71:	48 89 df             	mov    %rbx,%rdi
    6d74:	e8 73 24 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6d79:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6d7d:	48 89 c7             	mov    %rax,%rdi
    6d80:	e8 0b e4 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6d85:	e9 80 09 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    6d8a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6d8e:	48 89 c7             	mov    %rax,%rdi
    6d91:	e8 da e4 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6d96:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6d9a:	48 89 c2             	mov    %rax,%rdx
    6d9d:	48 8d 05 be 59 00 00 	lea    0x59be(%rip),%rax        # c762 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x12a>
    6da4:	48 89 c6             	mov    %rax,%rsi
    6da7:	48 89 df             	mov    %rbx,%rdi
    6daa:	e8 3d 24 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6daf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    6db3:	48 89 c7             	mov    %rax,%rdi
    6db6:	e8 d5 e3 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6dbb:	e9 4a 09 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    6dc0:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6dc4:	48 89 c7             	mov    %rax,%rdi
    6dc7:	e8 a4 e4 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6dcc:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6dd0:	48 89 c2             	mov    %rax,%rdx
    6dd3:	48 8d 05 a0 59 00 00 	lea    0x59a0(%rip),%rax        # c77a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x142>
    6dda:	48 89 c6             	mov    %rax,%rsi
    6ddd:	48 89 df             	mov    %rbx,%rdi
    6de0:	e8 07 24 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6de5:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    6de9:	48 89 c7             	mov    %rax,%rdi
    6dec:	e8 9f e3 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6df1:	e9 14 09 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorUnknown: return "ErrorUnknown";
    6df6:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6dfa:	48 89 c7             	mov    %rax,%rdi
    6dfd:	e8 6e e4 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6e02:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6e06:	48 89 c2             	mov    %rax,%rdx
    6e09:	48 8d 05 7e 59 00 00 	lea    0x597e(%rip),%rax        # c78e <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x156>
    6e10:	48 89 c6             	mov    %rax,%rsi
    6e13:	48 89 df             	mov    %rbx,%rdi
    6e16:	e8 d1 23 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e1b:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    6e1f:	48 89 c7             	mov    %rax,%rdi
    6e22:	e8 69 e3 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6e27:	e9 de 08 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    6e2c:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e30:	48 89 c7             	mov    %rax,%rdi
    6e33:	e8 38 e4 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6e38:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e3c:	48 89 c2             	mov    %rax,%rdx
    6e3f:	48 8d 05 55 59 00 00 	lea    0x5955(%rip),%rax        # c79b <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x163>
    6e46:	48 89 c6             	mov    %rax,%rsi
    6e49:	48 89 df             	mov    %rbx,%rdi
    6e4c:	e8 9b 23 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e51:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    6e55:	48 89 c7             	mov    %rax,%rdi
    6e58:	e8 33 e3 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6e5d:	e9 a8 08 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    6e62:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e66:	48 89 c7             	mov    %rax,%rdi
    6e69:	e8 02 e4 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6e6e:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e72:	48 89 c2             	mov    %rax,%rdx
    6e75:	48 8d 05 34 59 00 00 	lea    0x5934(%rip),%rax        # c7b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x178>
    6e7c:	48 89 c6             	mov    %rax,%rsi
    6e7f:	48 89 df             	mov    %rbx,%rdi
    6e82:	e8 65 23 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6e87:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6e8b:	48 89 c7             	mov    %rax,%rdi
    6e8e:	e8 fd e2 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6e93:	e9 72 08 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    6e98:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6e9c:	48 89 c7             	mov    %rax,%rdi
    6e9f:	e8 cc e3 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6ea4:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6ea8:	48 89 c2             	mov    %rax,%rdx
    6eab:	48 8d 05 19 59 00 00 	lea    0x5919(%rip),%rax        # c7cb <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x193>
    6eb2:	48 89 c6             	mov    %rax,%rsi
    6eb5:	48 89 df             	mov    %rbx,%rdi
    6eb8:	e8 2f 23 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ebd:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    6ec1:	48 89 c7             	mov    %rax,%rdi
    6ec4:	e8 c7 e2 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6ec9:	e9 3c 08 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    6ece:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ed2:	48 89 c7             	mov    %rax,%rdi
    6ed5:	e8 96 e3 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6eda:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ede:	48 89 c2             	mov    %rax,%rdx
    6ee1:	48 8d 05 f8 58 00 00 	lea    0x58f8(%rip),%rax        # c7e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1a8>
    6ee8:	48 89 c6             	mov    %rax,%rsi
    6eeb:	48 89 df             	mov    %rbx,%rdi
    6eee:	e8 f9 22 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6ef3:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    6ef7:	48 89 c7             	mov    %rax,%rdi
    6efa:	e8 91 e2 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6eff:	e9 06 08 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    6f04:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f08:	48 89 c7             	mov    %rax,%rdi
    6f0b:	e8 60 e3 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6f10:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f14:	48 89 c2             	mov    %rax,%rdx
    6f17:	48 8d 05 e3 58 00 00 	lea    0x58e3(%rip),%rax        # c801 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1c9>
    6f1e:	48 89 c6             	mov    %rax,%rsi
    6f21:	48 89 df             	mov    %rbx,%rdi
    6f24:	e8 c3 22 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f29:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6f2d:	48 89 c7             	mov    %rax,%rdi
    6f30:	e8 5b e2 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6f35:	e9 d0 07 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    6f3a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f3e:	48 89 c7             	mov    %rax,%rdi
    6f41:	e8 2a e3 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6f46:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f4a:	48 89 c2             	mov    %rax,%rdx
    6f4d:	48 8d 05 c5 58 00 00 	lea    0x58c5(%rip),%rax        # c819 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1e1>
    6f54:	48 89 c6             	mov    %rax,%rsi
    6f57:	48 89 df             	mov    %rbx,%rdi
    6f5a:	e8 8d 22 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f5f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6f63:	48 89 c7             	mov    %rax,%rdi
    6f66:	e8 25 e2 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6f6b:	e9 9a 07 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    6f70:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f74:	48 89 c7             	mov    %rax,%rdi
    6f77:	e8 f4 e2 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6f7c:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f80:	48 89 c2             	mov    %rax,%rdx
    6f83:	48 8d 05 a3 58 00 00 	lea    0x58a3(%rip),%rax        # c82d <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x1f5>
    6f8a:	48 89 c6             	mov    %rax,%rsi
    6f8d:	48 89 df             	mov    %rbx,%rdi
    6f90:	e8 57 22 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f95:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    6f99:	48 89 c7             	mov    %rax,%rdi
    6f9c:	e8 ef e1 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6fa1:	e9 64 07 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    6fa6:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6faa:	48 89 c7             	mov    %rax,%rdi
    6fad:	e8 be e2 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6fb2:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6fb6:	48 89 c2             	mov    %rax,%rdx
    6fb9:	48 8d 05 87 58 00 00 	lea    0x5887(%rip),%rax        # c847 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x20f>
    6fc0:	48 89 c6             	mov    %rax,%rsi
    6fc3:	48 89 df             	mov    %rbx,%rdi
    6fc6:	e8 21 22 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6fcb:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    6fcf:	48 89 c7             	mov    %rax,%rdi
    6fd2:	e8 b9 e1 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    6fd7:	e9 2e 07 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    6fdc:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    6fe0:	48 89 c7             	mov    %rax,%rdi
    6fe3:	e8 88 e2 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    6fe8:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    6fec:	48 89 c2             	mov    %rax,%rdx
    6fef:	48 8d 05 5f 58 00 00 	lea    0x585f(%rip),%rax        # c855 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x21d>
    6ff6:	48 89 c6             	mov    %rax,%rsi
    6ff9:	48 89 df             	mov    %rbx,%rdi
    6ffc:	e8 eb 21 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7001:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    7005:	48 89 c7             	mov    %rax,%rdi
    7008:	e8 83 e1 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    700d:	e9 f8 06 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    7012:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    7016:	48 89 c7             	mov    %rax,%rdi
    7019:	e8 52 e2 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    701e:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    7022:	48 89 c2             	mov    %rax,%rdx
    7025:	48 8d 05 3b 58 00 00 	lea    0x583b(%rip),%rax        # c867 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22f>
    702c:	48 89 c6             	mov    %rax,%rsi
    702f:	48 89 df             	mov    %rbx,%rdi
    7032:	e8 b5 21 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7037:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    703b:	48 89 c7             	mov    %rax,%rdi
    703e:	e8 4d e1 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7043:	e9 c2 06 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    7048:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    704c:	48 89 c7             	mov    %rax,%rdi
    704f:	e8 1c e2 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    7054:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    7058:	48 89 c2             	mov    %rax,%rdx
    705b:	48 8d 05 21 58 00 00 	lea    0x5821(%rip),%rax        # c883 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x24b>
    7062:	48 89 c6             	mov    %rax,%rsi
    7065:	48 89 df             	mov    %rbx,%rdi
    7068:	e8 7f 21 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    706d:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    7071:	48 89 c7             	mov    %rax,%rdi
    7074:	e8 17 e1 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7079:	e9 8c 06 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    707e:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7082:	48 89 c7             	mov    %rax,%rdi
    7085:	e8 e6 e1 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    708a:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    708e:	48 89 c2             	mov    %rax,%rdx
    7091:	48 8d 05 04 58 00 00 	lea    0x5804(%rip),%rax        # c89c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x264>
    7098:	48 89 c6             	mov    %rax,%rsi
    709b:	48 89 df             	mov    %rbx,%rdi
    709e:	e8 49 21 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70a3:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    70a7:	48 89 c7             	mov    %rax,%rdi
    70aa:	e8 e1 e0 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    70af:	e9 56 06 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorVideoProfileOperationNotSupportedKHR: return "ErrorVideoProfileOperationNotSupportedKHR";
      case Result::eErrorVideoProfileFormatNotSupportedKHR: return "ErrorVideoProfileFormatNotSupportedKHR";
      case Result::eErrorVideoProfileCodecNotSupportedKHR: return "ErrorVideoProfileCodecNotSupportedKHR";
      case Result::eErrorVideoStdVersionNotSupportedKHR: return "ErrorVideoStdVersionNotSupportedKHR";
#endif /*VK_ENABLE_BETA_EXTENSIONS*/
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    70b4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70b8:	48 89 c7             	mov    %rax,%rdi
    70bb:	e8 b0 e1 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    70c0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70c4:	48 89 c2             	mov    %rax,%rdx
    70c7:	48 8d 05 ea 57 00 00 	lea    0x57ea(%rip),%rax        # c8b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x280>
    70ce:	48 89 c6             	mov    %rax,%rsi
    70d1:	48 89 df             	mov    %rbx,%rdi
    70d4:	e8 13 21 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    70d9:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    70dd:	48 89 c7             	mov    %rax,%rdi
    70e0:	e8 ab e0 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    70e5:	e9 20 06 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    70ea:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70ee:	48 89 c7             	mov    %rax,%rdi
    70f1:	e8 7a e1 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    70f6:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70fa:	48 89 c2             	mov    %rax,%rdx
    70fd:	48 8d 05 e0 57 00 00 	lea    0x57e0(%rip),%rax        # c8e4 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2ac>
    7104:	48 89 c6             	mov    %rax,%rsi
    7107:	48 89 df             	mov    %rbx,%rdi
    710a:	e8 dd 20 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    710f:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7113:	48 89 c7             	mov    %rax,%rdi
    7116:	e8 75 e0 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    711b:	e9 ea 05 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
#if defined( VK_USE_PLATFORM_WIN32_KHR )
      case Result::eErrorFullScreenExclusiveModeLostEXT: return "ErrorFullScreenExclusiveModeLostEXT";
#endif /*VK_USE_PLATFORM_WIN32_KHR*/
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    7120:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7124:	48 89 c7             	mov    %rax,%rdi
    7127:	e8 44 e1 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    712c:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7130:	48 89 c2             	mov    %rax,%rdx
    7133:	48 8d 05 bf 57 00 00 	lea    0x57bf(%rip),%rax        # c8f9 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2c1>
    713a:	48 89 c6             	mov    %rax,%rsi
    713d:	48 89 df             	mov    %rbx,%rdi
    7140:	e8 a7 20 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    7145:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7149:	48 89 c7             	mov    %rax,%rdi
    714c:	e8 3f e0 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7151:	e9 b4 05 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    7156:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    715a:	48 89 c7             	mov    %rax,%rdi
    715d:	e8 0e e1 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    7162:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    7166:	48 89 c2             	mov    %rax,%rdx
    7169:	48 8d 05 97 57 00 00 	lea    0x5797(%rip),%rax        # c907 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2cf>
    7170:	48 89 c6             	mov    %rax,%rsi
    7173:	48 89 df             	mov    %rbx,%rdi
    7176:	e8 71 20 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    717b:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    717f:	48 89 c7             	mov    %rax,%rdi
    7182:	e8 09 e0 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7187:	e9 7e 05 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    718c:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7190:	48 89 c7             	mov    %rax,%rdi
    7193:	e8 d8 e0 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    7198:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    719c:	48 89 c2             	mov    %rax,%rdx
    719f:	48 8d 05 6f 57 00 00 	lea    0x576f(%rip),%rax        # c915 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2dd>
    71a6:	48 89 c6             	mov    %rax,%rsi
    71a9:	48 89 df             	mov    %rbx,%rdi
    71ac:	e8 3b 20 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71b1:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    71b5:	48 89 c7             	mov    %rax,%rdi
    71b8:	e8 d3 df ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    71bd:	e9 48 05 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    71c2:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71c6:	48 89 c7             	mov    %rax,%rdi
    71c9:	e8 a2 e0 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    71ce:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71d2:	48 89 c2             	mov    %rax,%rdx
    71d5:	48 8d 05 4e 57 00 00 	lea    0x574e(%rip),%rax        # c92a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x2f2>
    71dc:	48 89 c6             	mov    %rax,%rsi
    71df:	48 89 df             	mov    %rbx,%rdi
    71e2:	e8 05 20 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    71e7:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    71eb:	48 89 c7             	mov    %rax,%rdi
    71ee:	e8 9d df ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    71f3:	e9 12 05 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    71f8:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    71fc:	48 89 c7             	mov    %rax,%rdi
    71ff:	e8 6c e0 ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    7204:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    7208:	48 89 c2             	mov    %rax,%rdx
    720b:	48 8d 05 30 57 00 00 	lea    0x5730(%rip),%rax        # c942 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x30a>
    7212:	48 89 c6             	mov    %rax,%rsi
    7215:	48 89 df             	mov    %rbx,%rdi
    7218:	e8 cf 1f 00 00       	call   91ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    721d:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    7221:	48 89 c7             	mov    %rax,%rdi
    7224:	e8 67 df ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7229:	e9 dc 04 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    722e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7231:	89 45 e8             	mov    %eax,-0x18(%rbp)
    7234:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    std::stringstream stream;
    7238:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    723f:	48 89 c7             	mov    %rax,%rdi
    7242:	e8 79 de ff ff       	call   50c0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    stream << std::hex << value;
    7247:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    724e:	48 83 c0 10          	add    $0x10,%rax
    7252:	48 8d 15 bd f3 ff ff 	lea    -0xc43(%rip),%rdx        # 6616 <_ZSt3hexRSt8ios_base>
    7259:	48 89 d6             	mov    %rdx,%rsi
    725c:	48 89 c7             	mov    %rax,%rdi
    725f:	e8 ec dd ff ff       	call   5050 <_ZNSolsEPFRSt8ios_baseS0_E@plt>
    7264:	48 89 c2             	mov    %rax,%rdx
    7267:	8b 45 e8             	mov    -0x18(%rbp),%eax
    726a:	89 c6                	mov    %eax,%esi
    726c:	48 89 d7             	mov    %rdx,%rdi
    726f:	e8 5c df ff ff       	call   51d0 <_ZNSolsEj@plt>
    return stream.str();
    7274:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    727b:	48 89 c6             	mov    %rax,%rsi
    727e:	4c 89 e7             	mov    %r12,%rdi
    7281:	e8 0a e0 ff ff       	call   5290 <_ZNKRSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>
    7286:	90                   	nop
  }
    7287:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    728e:	48 89 c7             	mov    %rax,%rdi
    7291:	e8 5a de ff ff       	call   50f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    return stream.str();
    7296:	90                   	nop
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    7297:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    729b:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    729f:	48 8d 0d b9 56 00 00 	lea    0x56b9(%rip),%rcx        # c95f <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x327>
    72a6:	48 89 ce             	mov    %rcx,%rsi
    72a9:	48 89 c7             	mov    %rax,%rdi
    72ac:	e8 f1 1e 00 00       	call   91a2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>
    72b1:	eb 1a                	jmp    72cd <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xaf3>
  }
    72b3:	48 89 c3             	mov    %rax,%rbx
    72b6:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    72bd:	48 89 c7             	mov    %rax,%rdi
    72c0:	e8 2b de ff ff       	call   50f0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    72c5:	48 89 d8             	mov    %rbx,%rax
    72c8:	e9 35 04 00 00       	jmp    7702 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    72cd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    72d1:	48 8d 15 92 56 00 00 	lea    0x5692(%rip),%rdx        # c96a <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x332>
    72d8:	48 89 c6             	mov    %rax,%rsi
    72db:	48 89 df             	mov    %rbx,%rdi
    72de:	e8 70 20 00 00       	call   9353 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
    72e3:	90                   	nop
    72e4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    72e8:	48 89 c7             	mov    %rax,%rdi
    72eb:	e8 66 1d 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    72f0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    72f4:	48 89 c7             	mov    %rax,%rdi
    72f7:	e8 5a 1d 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    72fc:	e9 09 04 00 00       	jmp    770a <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf30>
      case Result::eSuccess: return "Success";
    7301:	48 89 c3             	mov    %rax,%rbx
    7304:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    7308:	48 89 c7             	mov    %rax,%rdi
    730b:	e8 80 de ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7310:	48 89 d8             	mov    %rbx,%rax
    7313:	48 89 c7             	mov    %rax,%rdi
    7316:	e8 45 df ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eNotReady: return "NotReady";
    731b:	48 89 c3             	mov    %rax,%rbx
    731e:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    7322:	48 89 c7             	mov    %rax,%rdi
    7325:	e8 66 de ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    732a:	48 89 d8             	mov    %rbx,%rax
    732d:	48 89 c7             	mov    %rax,%rdi
    7330:	e8 2b df ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eTimeout: return "Timeout";
    7335:	48 89 c3             	mov    %rax,%rbx
    7338:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
    733c:	48 89 c7             	mov    %rax,%rdi
    733f:	e8 4c de ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7344:	48 89 d8             	mov    %rbx,%rax
    7347:	48 89 c7             	mov    %rax,%rdi
    734a:	e8 11 df ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eEventSet: return "EventSet";
    734f:	48 89 c3             	mov    %rax,%rbx
    7352:	48 8d 45 e4          	lea    -0x1c(%rbp),%rax
    7356:	48 89 c7             	mov    %rax,%rdi
    7359:	e8 32 de ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    735e:	48 89 d8             	mov    %rbx,%rax
    7361:	48 89 c7             	mov    %rax,%rdi
    7364:	e8 f7 de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eEventReset: return "EventReset";
    7369:	48 89 c3             	mov    %rax,%rbx
    736c:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    7370:	48 89 c7             	mov    %rax,%rdi
    7373:	e8 18 de ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7378:	48 89 d8             	mov    %rbx,%rax
    737b:	48 89 c7             	mov    %rax,%rdi
    737e:	e8 dd de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eIncomplete: return "Incomplete";
    7383:	48 89 c3             	mov    %rax,%rbx
    7386:	48 8d 45 e2          	lea    -0x1e(%rbp),%rax
    738a:	48 89 c7             	mov    %rax,%rdi
    738d:	e8 fe dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7392:	48 89 d8             	mov    %rbx,%rax
    7395:	48 89 c7             	mov    %rax,%rdi
    7398:	e8 c3 de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorOutOfHostMemory: return "ErrorOutOfHostMemory";
    739d:	48 89 c3             	mov    %rax,%rbx
    73a0:	48 8d 45 e1          	lea    -0x1f(%rbp),%rax
    73a4:	48 89 c7             	mov    %rax,%rdi
    73a7:	e8 e4 dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    73ac:	48 89 d8             	mov    %rbx,%rax
    73af:	48 89 c7             	mov    %rax,%rdi
    73b2:	e8 a9 de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDeviceMemory: return "ErrorOutOfDeviceMemory";
    73b7:	48 89 c3             	mov    %rax,%rbx
    73ba:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    73be:	48 89 c7             	mov    %rax,%rdi
    73c1:	e8 ca dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    73c6:	48 89 d8             	mov    %rbx,%rax
    73c9:	48 89 c7             	mov    %rax,%rdi
    73cc:	e8 8f de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorInitializationFailed: return "ErrorInitializationFailed";
    73d1:	48 89 c3             	mov    %rax,%rbx
    73d4:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    73d8:	48 89 c7             	mov    %rax,%rdi
    73db:	e8 b0 dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    73e0:	48 89 d8             	mov    %rbx,%rax
    73e3:	48 89 c7             	mov    %rax,%rdi
    73e6:	e8 75 de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorDeviceLost: return "ErrorDeviceLost";
    73eb:	48 89 c3             	mov    %rax,%rbx
    73ee:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    73f2:	48 89 c7             	mov    %rax,%rdi
    73f5:	e8 96 dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    73fa:	48 89 d8             	mov    %rbx,%rax
    73fd:	48 89 c7             	mov    %rax,%rdi
    7400:	e8 5b de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorMemoryMapFailed: return "ErrorMemoryMapFailed";
    7405:	48 89 c3             	mov    %rax,%rbx
    7408:	48 8d 45 dd          	lea    -0x23(%rbp),%rax
    740c:	48 89 c7             	mov    %rax,%rdi
    740f:	e8 7c dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7414:	48 89 d8             	mov    %rbx,%rax
    7417:	48 89 c7             	mov    %rax,%rdi
    741a:	e8 41 de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorLayerNotPresent: return "ErrorLayerNotPresent";
    741f:	48 89 c3             	mov    %rax,%rbx
    7422:	48 8d 45 dc          	lea    -0x24(%rbp),%rax
    7426:	48 89 c7             	mov    %rax,%rdi
    7429:	e8 62 dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    742e:	48 89 d8             	mov    %rbx,%rax
    7431:	48 89 c7             	mov    %rax,%rdi
    7434:	e8 27 de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorExtensionNotPresent: return "ErrorExtensionNotPresent";
    7439:	48 89 c3             	mov    %rax,%rbx
    743c:	48 8d 45 db          	lea    -0x25(%rbp),%rax
    7440:	48 89 c7             	mov    %rax,%rdi
    7443:	e8 48 dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7448:	48 89 d8             	mov    %rbx,%rax
    744b:	48 89 c7             	mov    %rax,%rdi
    744e:	e8 0d de ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorFeatureNotPresent: return "ErrorFeatureNotPresent";
    7453:	48 89 c3             	mov    %rax,%rbx
    7456:	48 8d 45 da          	lea    -0x26(%rbp),%rax
    745a:	48 89 c7             	mov    %rax,%rdi
    745d:	e8 2e dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7462:	48 89 d8             	mov    %rbx,%rax
    7465:	48 89 c7             	mov    %rax,%rdi
    7468:	e8 f3 dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDriver: return "ErrorIncompatibleDriver";
    746d:	48 89 c3             	mov    %rax,%rbx
    7470:	48 8d 45 d9          	lea    -0x27(%rbp),%rax
    7474:	48 89 c7             	mov    %rax,%rdi
    7477:	e8 14 dd ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    747c:	48 89 d8             	mov    %rbx,%rax
    747f:	48 89 c7             	mov    %rax,%rdi
    7482:	e8 d9 dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorTooManyObjects: return "ErrorTooManyObjects";
    7487:	48 89 c3             	mov    %rax,%rbx
    748a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    748e:	48 89 c7             	mov    %rax,%rdi
    7491:	e8 fa dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7496:	48 89 d8             	mov    %rbx,%rax
    7499:	48 89 c7             	mov    %rax,%rdi
    749c:	e8 bf dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorFormatNotSupported: return "ErrorFormatNotSupported";
    74a1:	48 89 c3             	mov    %rax,%rbx
    74a4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74a8:	48 89 c7             	mov    %rax,%rdi
    74ab:	e8 e0 dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    74b0:	48 89 d8             	mov    %rbx,%rax
    74b3:	48 89 c7             	mov    %rax,%rdi
    74b6:	e8 a5 dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorFragmentedPool: return "ErrorFragmentedPool";
    74bb:	48 89 c3             	mov    %rax,%rbx
    74be:	48 8d 45 d6          	lea    -0x2a(%rbp),%rax
    74c2:	48 89 c7             	mov    %rax,%rdi
    74c5:	e8 c6 dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    74ca:	48 89 d8             	mov    %rbx,%rax
    74cd:	48 89 c7             	mov    %rax,%rdi
    74d0:	e8 8b dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorUnknown: return "ErrorUnknown";
    74d5:	48 89 c3             	mov    %rax,%rbx
    74d8:	48 8d 45 d5          	lea    -0x2b(%rbp),%rax
    74dc:	48 89 c7             	mov    %rax,%rdi
    74df:	e8 ac dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    74e4:	48 89 d8             	mov    %rbx,%rax
    74e7:	48 89 c7             	mov    %rax,%rdi
    74ea:	e8 71 dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorOutOfPoolMemory: return "ErrorOutOfPoolMemory";
    74ef:	48 89 c3             	mov    %rax,%rbx
    74f2:	48 8d 45 d4          	lea    -0x2c(%rbp),%rax
    74f6:	48 89 c7             	mov    %rax,%rdi
    74f9:	e8 92 dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    74fe:	48 89 d8             	mov    %rbx,%rax
    7501:	48 89 c7             	mov    %rax,%rdi
    7504:	e8 57 dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorInvalidExternalHandle: return "ErrorInvalidExternalHandle";
    7509:	48 89 c3             	mov    %rax,%rbx
    750c:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    7510:	48 89 c7             	mov    %rax,%rdi
    7513:	e8 78 dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7518:	48 89 d8             	mov    %rbx,%rax
    751b:	48 89 c7             	mov    %rax,%rdi
    751e:	e8 3d dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorFragmentation: return "ErrorFragmentation";
    7523:	48 89 c3             	mov    %rax,%rbx
    7526:	48 8d 45 d2          	lea    -0x2e(%rbp),%rax
    752a:	48 89 c7             	mov    %rax,%rdi
    752d:	e8 5e dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7532:	48 89 d8             	mov    %rbx,%rax
    7535:	48 89 c7             	mov    %rax,%rdi
    7538:	e8 23 dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorInvalidOpaqueCaptureAddress: return "ErrorInvalidOpaqueCaptureAddress";
    753d:	48 89 c3             	mov    %rax,%rbx
    7540:	48 8d 45 d1          	lea    -0x2f(%rbp),%rax
    7544:	48 89 c7             	mov    %rax,%rdi
    7547:	e8 44 dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    754c:	48 89 d8             	mov    %rbx,%rax
    754f:	48 89 c7             	mov    %rax,%rdi
    7552:	e8 09 dd ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::ePipelineCompileRequired: return "PipelineCompileRequired";
    7557:	48 89 c3             	mov    %rax,%rbx
    755a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    755e:	48 89 c7             	mov    %rax,%rdi
    7561:	e8 2a dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7566:	48 89 d8             	mov    %rbx,%rax
    7569:	48 89 c7             	mov    %rax,%rdi
    756c:	e8 ef dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorSurfaceLostKHR: return "ErrorSurfaceLostKHR";
    7571:	48 89 c3             	mov    %rax,%rbx
    7574:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7578:	48 89 c7             	mov    %rax,%rdi
    757b:	e8 10 dc ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7580:	48 89 d8             	mov    %rbx,%rax
    7583:	48 89 c7             	mov    %rax,%rdi
    7586:	e8 d5 dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorNativeWindowInUseKHR: return "ErrorNativeWindowInUseKHR";
    758b:	48 89 c3             	mov    %rax,%rbx
    758e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    7592:	48 89 c7             	mov    %rax,%rdi
    7595:	e8 f6 db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    759a:	48 89 d8             	mov    %rbx,%rax
    759d:	48 89 c7             	mov    %rax,%rdi
    75a0:	e8 bb dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eSuboptimalKHR: return "SuboptimalKHR";
    75a5:	48 89 c3             	mov    %rax,%rbx
    75a8:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    75ac:	48 89 c7             	mov    %rax,%rdi
    75af:	e8 dc db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    75b4:	48 89 d8             	mov    %rbx,%rax
    75b7:	48 89 c7             	mov    %rax,%rdi
    75ba:	e8 a1 dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorOutOfDateKHR: return "ErrorOutOfDateKHR";
    75bf:	48 89 c3             	mov    %rax,%rbx
    75c2:	48 8d 45 cc          	lea    -0x34(%rbp),%rax
    75c6:	48 89 c7             	mov    %rax,%rdi
    75c9:	e8 c2 db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    75ce:	48 89 d8             	mov    %rbx,%rax
    75d1:	48 89 c7             	mov    %rax,%rdi
    75d4:	e8 87 dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorIncompatibleDisplayKHR: return "ErrorIncompatibleDisplayKHR";
    75d9:	48 89 c3             	mov    %rax,%rbx
    75dc:	48 8d 45 cb          	lea    -0x35(%rbp),%rax
    75e0:	48 89 c7             	mov    %rax,%rdi
    75e3:	e8 a8 db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    75e8:	48 89 d8             	mov    %rbx,%rax
    75eb:	48 89 c7             	mov    %rax,%rdi
    75ee:	e8 6d dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorValidationFailedEXT: return "ErrorValidationFailedEXT";
    75f3:	48 89 c3             	mov    %rax,%rbx
    75f6:	48 8d 45 ca          	lea    -0x36(%rbp),%rax
    75fa:	48 89 c7             	mov    %rax,%rdi
    75fd:	e8 8e db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7602:	48 89 d8             	mov    %rbx,%rax
    7605:	48 89 c7             	mov    %rax,%rdi
    7608:	e8 53 dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorInvalidShaderNV: return "ErrorInvalidShaderNV";
    760d:	48 89 c3             	mov    %rax,%rbx
    7610:	48 8d 45 c9          	lea    -0x37(%rbp),%rax
    7614:	48 89 c7             	mov    %rax,%rdi
    7617:	e8 74 db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    761c:	48 89 d8             	mov    %rbx,%rax
    761f:	48 89 c7             	mov    %rax,%rdi
    7622:	e8 39 dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT: return "ErrorInvalidDrmFormatModifierPlaneLayoutEXT";
    7627:	48 89 c3             	mov    %rax,%rbx
    762a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    762e:	48 89 c7             	mov    %rax,%rdi
    7631:	e8 5a db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7636:	48 89 d8             	mov    %rbx,%rax
    7639:	48 89 c7             	mov    %rax,%rdi
    763c:	e8 1f dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorNotPermittedKHR: return "ErrorNotPermittedKHR";
    7641:	48 89 c3             	mov    %rax,%rbx
    7644:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7648:	48 89 c7             	mov    %rax,%rdi
    764b:	e8 40 db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7650:	48 89 d8             	mov    %rbx,%rax
    7653:	48 89 c7             	mov    %rax,%rdi
    7656:	e8 05 dc ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eThreadIdleKHR: return "ThreadIdleKHR";
    765b:	48 89 c3             	mov    %rax,%rbx
    765e:	48 8d 45 c6          	lea    -0x3a(%rbp),%rax
    7662:	48 89 c7             	mov    %rax,%rdi
    7665:	e8 26 db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    766a:	48 89 d8             	mov    %rbx,%rax
    766d:	48 89 c7             	mov    %rax,%rdi
    7670:	e8 eb db ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eThreadDoneKHR: return "ThreadDoneKHR";
    7675:	48 89 c3             	mov    %rax,%rbx
    7678:	48 8d 45 c5          	lea    -0x3b(%rbp),%rax
    767c:	48 89 c7             	mov    %rax,%rdi
    767f:	e8 0c db ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    7684:	48 89 d8             	mov    %rbx,%rax
    7687:	48 89 c7             	mov    %rax,%rdi
    768a:	e8 d1 db ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eOperationDeferredKHR: return "OperationDeferredKHR";
    768f:	48 89 c3             	mov    %rax,%rbx
    7692:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7696:	48 89 c7             	mov    %rax,%rdi
    7699:	e8 f2 da ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    769e:	48 89 d8             	mov    %rbx,%rax
    76a1:	48 89 c7             	mov    %rax,%rdi
    76a4:	e8 b7 db ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eOperationNotDeferredKHR: return "OperationNotDeferredKHR";
    76a9:	48 89 c3             	mov    %rax,%rbx
    76ac:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    76b0:	48 89 c7             	mov    %rax,%rdi
    76b3:	e8 d8 da ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    76b8:	48 89 d8             	mov    %rbx,%rax
    76bb:	48 89 c7             	mov    %rax,%rdi
    76be:	e8 9d db ff ff       	call   5260 <_Unwind_Resume@plt>
      case Result::eErrorCompressionExhaustedEXT: return "ErrorCompressionExhaustedEXT";
    76c3:	48 89 c3             	mov    %rax,%rbx
    76c6:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    76ca:	48 89 c7             	mov    %rax,%rdi
    76cd:	e8 be da ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
    76d2:	48 89 d8             	mov    %rbx,%rax
    76d5:	48 89 c7             	mov    %rax,%rdi
    76d8:	e8 83 db ff ff       	call   5260 <_Unwind_Resume@plt>
      default: return "invalid ( " + VULKAN_HPP_NAMESPACE::toHexString( static_cast<uint32_t>( value ) ) + " )";
    76dd:	48 89 c3             	mov    %rax,%rbx
    76e0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    76e4:	48 89 c7             	mov    %rax,%rdi
    76e7:	e8 6a 19 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    76ec:	eb 03                	jmp    76f1 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf17>
    76ee:	48 89 c3             	mov    %rax,%rbx
    76f1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    76f5:	48 89 c7             	mov    %rax,%rdi
    76f8:	e8 59 19 00 00       	call   9056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    76fd:	48 89 d8             	mov    %rbx,%rax
    7700:	eb 00                	jmp    7702 <_ZNK2vk17ErrorCategoryImpl7messageB5cxx11Ei+0xf28>
    7702:	48 89 c7             	mov    %rax,%rdi
    7705:	e8 56 db ff ff       	call   5260 <_Unwind_Resume@plt>
    }
    770a:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    7711:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
    7718:	5b                   	pop    %rbx
    7719:	41 5c                	pop    %r12
    771b:	5d                   	pop    %rbp
    771c:	c3                   	ret
    771d:	90                   	nop

000000000000771e <_ZN2vk5ErrorC1Ev>:
    Error() VULKAN_HPP_NOEXCEPT                = default;
    771e:	55                   	push   %rbp
    771f:	48 89 e5             	mov    %rsp,%rbp
    7722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7726:	48 8d 15 53 93 00 00 	lea    0x9353(%rip),%rdx        # 10a80 <_ZTVN2vk5ErrorE+0x10>
    772d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7731:	48 89 10             	mov    %rdx,(%rax)
    7734:	90                   	nop
    7735:	5d                   	pop    %rbp
    7736:	c3                   	ret
    7737:	90                   	nop

0000000000007738 <_ZN2vk5ErrorD1Ev>:
    virtual ~Error() VULKAN_HPP_NOEXCEPT       = default;
    7738:	55                   	push   %rbp
    7739:	48 89 e5             	mov    %rsp,%rbp
    773c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7740:	48 8d 15 39 93 00 00 	lea    0x9339(%rip),%rdx        # 10a80 <_ZTVN2vk5ErrorE+0x10>
    7747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    774b:	48 89 10             	mov    %rdx,(%rax)
    774e:	90                   	nop
    774f:	5d                   	pop    %rbp
    7750:	c3                   	ret
    7751:	90                   	nop

0000000000007752 <_ZN2vk5ErrorD0Ev>:
    7752:	55                   	push   %rbp
    7753:	48 89 e5             	mov    %rsp,%rbp
    7756:	48 83 ec 10          	sub    $0x10,%rsp
    775a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    775e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7762:	48 89 c7             	mov    %rax,%rdi
    7765:	e8 ce ff ff ff       	call   7738 <_ZN2vk5ErrorD1Ev>
    776a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    776e:	be 08 00 00 00       	mov    $0x8,%esi
    7773:	48 89 c7             	mov    %rax,%rdi
    7776:	e8 05 da ff ff       	call   5180 <_ZdlPvm@plt>
    777b:	c9                   	leave
    777c:	c3                   	ret
    777d:	90                   	nop

000000000000777e <_ZN2vk11SystemErrorC1ESt10error_code>:
    SystemError( std::error_code ec ) : Error(), std::system_error( ec ) {}
    777e:	55                   	push   %rbp
    777f:	48 89 e5             	mov    %rsp,%rbp
    7782:	53                   	push   %rbx
    7783:	48 83 ec 28          	sub    $0x28,%rsp
    7787:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    778b:	48 89 d1             	mov    %rdx,%rcx
    778e:	48 89 f0             	mov    %rsi,%rax
    7791:	48 89 fa             	mov    %rdi,%rdx
    7794:	48 89 ca             	mov    %rcx,%rdx
    7797:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    779b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    779f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77a3:	48 89 c7             	mov    %rax,%rdi
    77a6:	e8 73 ff ff ff       	call   771e <_ZN2vk5ErrorC1Ev>
    77ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77af:	48 8d 48 08          	lea    0x8(%rax),%rcx
    77b3:	8b 55 d0             	mov    -0x30(%rbp),%edx
    77b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77ba:	89 d6                	mov    %edx,%esi
    77bc:	48 89 c2             	mov    %rax,%rdx
    77bf:	48 89 cf             	mov    %rcx,%rdi
    77c2:	e8 b5 eb ff ff       	call   637c <_ZNSt12system_errorC1ESt10error_code>
    77c7:	48 8d 15 3a 92 00 00 	lea    0x923a(%rip),%rdx        # 10a08 <_ZTVN2vk11SystemErrorE+0x10>
    77ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77d2:	48 89 10             	mov    %rdx,(%rax)
    77d5:	48 8d 15 54 92 00 00 	lea    0x9254(%rip),%rdx        # 10a30 <_ZTVN2vk11SystemErrorE+0x38>
    77dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77e0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    77e4:	eb 1a                	jmp    7800 <_ZN2vk11SystemErrorC1ESt10error_code+0x82>
    77e6:	48 89 c3             	mov    %rax,%rbx
    77e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77ed:	48 89 c7             	mov    %rax,%rdi
    77f0:	e8 43 ff ff ff       	call   7738 <_ZN2vk5ErrorD1Ev>
    77f5:	48 89 d8             	mov    %rbx,%rax
    77f8:	48 89 c7             	mov    %rax,%rdi
    77fb:	e8 60 da ff ff       	call   5260 <_Unwind_Resume@plt>
    7800:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7804:	c9                   	leave
    7805:	c3                   	ret

0000000000007806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>:
    SystemError( std::error_code ec, char const * what ) : Error(), std::system_error( ec, what ) {}
    7806:	55                   	push   %rbp
    7807:	48 89 e5             	mov    %rsp,%rbp
    780a:	53                   	push   %rbx
    780b:	48 83 ec 28          	sub    $0x28,%rsp
    780f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7813:	89 f0                	mov    %esi,%eax
    7815:	48 89 d6             	mov    %rdx,%rsi
    7818:	48 89 f2             	mov    %rsi,%rdx
    781b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    781f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7823:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    7827:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    782b:	48 89 c7             	mov    %rax,%rdi
    782e:	e8 eb fe ff ff       	call   771e <_ZN2vk5ErrorC1Ev>
    7833:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7837:	48 8d 78 08          	lea    0x8(%rax),%rdi
    783b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    783f:	8b 55 d0             	mov    -0x30(%rbp),%edx
    7842:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7846:	89 d6                	mov    %edx,%esi
    7848:	48 89 c2             	mov    %rax,%rdx
    784b:	e8 c4 eb ff ff       	call   6414 <_ZNSt12system_errorC1ESt10error_codePKc>
    7850:	48 8d 15 b1 91 00 00 	lea    0x91b1(%rip),%rdx        # 10a08 <_ZTVN2vk11SystemErrorE+0x10>
    7857:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    785b:	48 89 10             	mov    %rdx,(%rax)
    785e:	48 8d 15 cb 91 00 00 	lea    0x91cb(%rip),%rdx        # 10a30 <_ZTVN2vk11SystemErrorE+0x38>
    7865:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7869:	48 89 50 08          	mov    %rdx,0x8(%rax)
    786d:	eb 1a                	jmp    7889 <_ZN2vk11SystemErrorC1ESt10error_codePKc+0x83>
    786f:	48 89 c3             	mov    %rax,%rbx
    7872:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7876:	48 89 c7             	mov    %rax,%rdi
    7879:	e8 ba fe ff ff       	call   7738 <_ZN2vk5ErrorD1Ev>
    787e:	48 89 d8             	mov    %rbx,%rax
    7881:	48 89 c7             	mov    %rax,%rdi
    7884:	e8 d7 d9 ff ff       	call   5260 <_Unwind_Resume@plt>
    7889:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    788d:	c9                   	leave
    788e:	c3                   	ret
    788f:	90                   	nop

0000000000007890 <_ZNK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    7890:	55                   	push   %rbp
    7891:	48 89 e5             	mov    %rsp,%rbp
    7894:	48 83 ec 10          	sub    $0x10,%rsp
    7898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::system_error::what();
    789c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78a0:	48 83 c0 08          	add    $0x8,%rax
    78a4:	48 89 c7             	mov    %rax,%rdi
    78a7:	e8 34 d9 ff ff       	call   51e0 <_ZNKSt13runtime_error4whatEv@plt>
    }
    78ac:	c9                   	leave
    78ad:	c3                   	ret

00000000000078ae <_ZThn8_NK2vk11SystemError4whatEv>:
    virtual const char * what() const VULKAN_HPP_NOEXCEPT
    78ae:	48 83 ef 08          	sub    $0x8,%rdi
    78b2:	eb dc                	jmp    7890 <_ZNK2vk11SystemError4whatEv>

00000000000078b4 <_ZN2vk11SystemErrorD1Ev>:
  class SystemError
    78b4:	55                   	push   %rbp
    78b5:	48 89 e5             	mov    %rsp,%rbp
    78b8:	48 83 ec 10          	sub    $0x10,%rsp
    78bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78c0:	48 8d 15 41 91 00 00 	lea    0x9141(%rip),%rdx        # 10a08 <_ZTVN2vk11SystemErrorE+0x10>
    78c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78cb:	48 89 10             	mov    %rdx,(%rax)
    78ce:	48 8d 15 5b 91 00 00 	lea    0x915b(%rip),%rdx        # 10a30 <_ZTVN2vk11SystemErrorE+0x38>
    78d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    78dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78e1:	48 83 c0 08          	add    $0x8,%rax
    78e5:	48 89 c7             	mov    %rax,%rdi
    78e8:	e8 33 d8 ff ff       	call   5120 <_ZNSt12system_errorD2Ev@plt>
    78ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f1:	48 89 c7             	mov    %rax,%rdi
    78f4:	e8 3f fe ff ff       	call   7738 <_ZN2vk5ErrorD1Ev>
    78f9:	90                   	nop
    78fa:	c9                   	leave
    78fb:	c3                   	ret

00000000000078fc <_ZThn8_N2vk11SystemErrorD1Ev>:
    78fc:	48 83 ef 08          	sub    $0x8,%rdi
    7900:	eb b2                	jmp    78b4 <_ZN2vk11SystemErrorD1Ev>

0000000000007902 <_ZN2vk11SystemErrorD0Ev>:
    7902:	55                   	push   %rbp
    7903:	48 89 e5             	mov    %rsp,%rbp
    7906:	48 83 ec 10          	sub    $0x10,%rsp
    790a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    790e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7912:	48 89 c7             	mov    %rax,%rdi
    7915:	e8 9a ff ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    791a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    791e:	be 28 00 00 00       	mov    $0x28,%esi
    7923:	48 89 c7             	mov    %rax,%rdi
    7926:	e8 55 d8 ff ff       	call   5180 <_ZdlPvm@plt>
    792b:	c9                   	leave
    792c:	c3                   	ret

000000000000792d <_ZThn8_N2vk11SystemErrorD0Ev>:
    792d:	48 83 ef 08          	sub    $0x8,%rdi
    7931:	eb cf                	jmp    7902 <_ZN2vk11SystemErrorD0Ev>
    7933:	90                   	nop

0000000000007934 <_ZN2vk20OutOfHostMemoryErrorC1EPKc>:
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    7934:	55                   	push   %rbp
    7935:	48 89 e5             	mov    %rsp,%rbp
    7938:	53                   	push   %rbx
    7939:	48 83 ec 38          	sub    $0x38,%rsp
    793d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7941:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7945:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7949:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7950:	0f b6 05 61 9a 00 00 	movzbl 0x9a61(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7957:	84 c0                	test   %al,%al
    7959:	0f 94 c0             	sete   %al
    795c:	84 c0                	test   %al,%al
    795e:	74 4a                	je     79aa <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    7960:	48 8d 05 51 9a 00 00 	lea    0x9a51(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7967:	48 89 c7             	mov    %rax,%rdi
    796a:	e8 11 d9 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    796f:	85 c0                	test   %eax,%eax
    7971:	0f 95 c0             	setne  %al
    7974:	84 c0                	test   %al,%al
    7976:	74 32                	je     79aa <_ZN2vk20OutOfHostMemoryErrorC1EPKc+0x76>
    7978:	48 8d 05 c1 97 00 00 	lea    0x97c1(%rip),%rax        # 11140 <__dso_handle>
    797f:	48 89 c2             	mov    %rax,%rdx
    7982:	48 8d 05 bf 97 00 00 	lea    0x97bf(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7989:	48 89 c6             	mov    %rax,%rsi
    798c:	48 8d 05 61 36 00 00 	lea    0x3661(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7993:	48 89 c7             	mov    %rax,%rdi
    7996:	e8 95 d7 ff ff       	call   5130 <__cxa_atexit@plt>
    799b:	48 8d 05 16 9a 00 00 	lea    0x9a16(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    79a2:	48 89 c7             	mov    %rax,%rdi
    79a5:	e8 06 d7 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    79aa:	48 8d 15 97 97 00 00 	lea    0x9797(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    79b1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    79b4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    79b8:	89 ce                	mov    %ecx,%esi
    79ba:	48 89 c7             	mov    %rax,%rdi
    79bd:	e8 1c e9 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    79c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    79c6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfHostMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfHostMemory ), message ) {}
    79ca:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    79ce:	48 89 c6             	mov    %rax,%rsi
    79d1:	48 89 d7             	mov    %rdx,%rdi
    79d4:	48 89 d0             	mov    %rdx,%rax
    79d7:	48 89 c2             	mov    %rax,%rdx
    79da:	48 89 df             	mov    %rbx,%rdi
    79dd:	e8 24 fe ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    79e2:	48 8d 15 cf 8f 00 00 	lea    0x8fcf(%rip),%rdx        # 109b8 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    79e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79ed:	48 89 10             	mov    %rdx,(%rax)
    79f0:	48 8d 15 e9 8f 00 00 	lea    0x8fe9(%rip),%rdx        # 109e0 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    79f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79fb:	48 89 50 08          	mov    %rdx,0x8(%rax)
    79ff:	90                   	nop
    7a00:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a04:	c9                   	leave
    7a05:	c3                   	ret

0000000000007a06 <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc>:
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    7a06:	55                   	push   %rbp
    7a07:	48 89 e5             	mov    %rsp,%rbp
    7a0a:	53                   	push   %rbx
    7a0b:	48 83 ec 38          	sub    $0x38,%rsp
    7a0f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7a13:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7a17:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7a1b:	c7 45 ec fe ff ff ff 	movl   $0xfffffffe,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7a22:	0f b6 05 8f 99 00 00 	movzbl 0x998f(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a29:	84 c0                	test   %al,%al
    7a2b:	0f 94 c0             	sete   %al
    7a2e:	84 c0                	test   %al,%al
    7a30:	74 4a                	je     7a7c <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7a32:	48 8d 05 7f 99 00 00 	lea    0x997f(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a39:	48 89 c7             	mov    %rax,%rdi
    7a3c:	e8 3f d8 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7a41:	85 c0                	test   %eax,%eax
    7a43:	0f 95 c0             	setne  %al
    7a46:	84 c0                	test   %al,%al
    7a48:	74 32                	je     7a7c <_ZN2vk22OutOfDeviceMemoryErrorC1EPKc+0x76>
    7a4a:	48 8d 05 ef 96 00 00 	lea    0x96ef(%rip),%rax        # 11140 <__dso_handle>
    7a51:	48 89 c2             	mov    %rax,%rdx
    7a54:	48 8d 05 ed 96 00 00 	lea    0x96ed(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7a5b:	48 89 c6             	mov    %rax,%rsi
    7a5e:	48 8d 05 8f 35 00 00 	lea    0x358f(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7a65:	48 89 c7             	mov    %rax,%rdi
    7a68:	e8 c3 d6 ff ff       	call   5130 <__cxa_atexit@plt>
    7a6d:	48 8d 05 44 99 00 00 	lea    0x9944(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7a74:	48 89 c7             	mov    %rax,%rdi
    7a77:	e8 34 d6 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    7a7c:	48 8d 15 c5 96 00 00 	lea    0x96c5(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7a83:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7a86:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7a8a:	89 ce                	mov    %ecx,%esi
    7a8c:	48 89 c7             	mov    %rax,%rdi
    7a8f:	e8 4a e8 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7a94:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a98:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDeviceMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDeviceMemory ), message ) {}
    7a9c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7aa0:	48 89 c6             	mov    %rax,%rsi
    7aa3:	48 89 d7             	mov    %rdx,%rdi
    7aa6:	48 89 d0             	mov    %rdx,%rax
    7aa9:	48 89 c2             	mov    %rax,%rdx
    7aac:	48 89 df             	mov    %rbx,%rdi
    7aaf:	e8 52 fd ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7ab4:	48 8d 15 ad 8e 00 00 	lea    0x8ead(%rip),%rdx        # 10968 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    7abb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7abf:	48 89 10             	mov    %rdx,(%rax)
    7ac2:	48 8d 15 c7 8e 00 00 	lea    0x8ec7(%rip),%rdx        # 10990 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    7ac9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7acd:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7ad1:	90                   	nop
    7ad2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ad6:	c9                   	leave
    7ad7:	c3                   	ret

0000000000007ad8 <_ZN2vk25InitializationFailedErrorC1EPKc>:
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7ad8:	55                   	push   %rbp
    7ad9:	48 89 e5             	mov    %rsp,%rbp
    7adc:	53                   	push   %rbx
    7add:	48 83 ec 38          	sub    $0x38,%rsp
    7ae1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7ae5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7ae9:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7aed:	c7 45 ec fd ff ff ff 	movl   $0xfffffffd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7af4:	0f b6 05 bd 98 00 00 	movzbl 0x98bd(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7afb:	84 c0                	test   %al,%al
    7afd:	0f 94 c0             	sete   %al
    7b00:	84 c0                	test   %al,%al
    7b02:	74 4a                	je     7b4e <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7b04:	48 8d 05 ad 98 00 00 	lea    0x98ad(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b0b:	48 89 c7             	mov    %rax,%rdi
    7b0e:	e8 6d d7 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7b13:	85 c0                	test   %eax,%eax
    7b15:	0f 95 c0             	setne  %al
    7b18:	84 c0                	test   %al,%al
    7b1a:	74 32                	je     7b4e <_ZN2vk25InitializationFailedErrorC1EPKc+0x76>
    7b1c:	48 8d 05 1d 96 00 00 	lea    0x961d(%rip),%rax        # 11140 <__dso_handle>
    7b23:	48 89 c2             	mov    %rax,%rdx
    7b26:	48 8d 05 1b 96 00 00 	lea    0x961b(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7b2d:	48 89 c6             	mov    %rax,%rsi
    7b30:	48 8d 05 bd 34 00 00 	lea    0x34bd(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7b37:	48 89 c7             	mov    %rax,%rdi
    7b3a:	e8 f1 d5 ff ff       	call   5130 <__cxa_atexit@plt>
    7b3f:	48 8d 05 72 98 00 00 	lea    0x9872(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7b46:	48 89 c7             	mov    %rax,%rdi
    7b49:	e8 62 d5 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    7b4e:	48 8d 15 f3 95 00 00 	lea    0x95f3(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7b55:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7b58:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7b5c:	89 ce                	mov    %ecx,%esi
    7b5e:	48 89 c7             	mov    %rax,%rdi
    7b61:	e8 78 e7 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7b66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b6a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InitializationFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorInitializationFailed ), message ) {}
    7b6e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7b72:	48 89 c6             	mov    %rax,%rsi
    7b75:	48 89 d7             	mov    %rdx,%rdi
    7b78:	48 89 d0             	mov    %rdx,%rax
    7b7b:	48 89 c2             	mov    %rax,%rdx
    7b7e:	48 89 df             	mov    %rbx,%rdi
    7b81:	e8 80 fc ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7b86:	48 8d 15 8b 8d 00 00 	lea    0x8d8b(%rip),%rdx        # 10918 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    7b8d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b91:	48 89 10             	mov    %rdx,(%rax)
    7b94:	48 8d 15 a5 8d 00 00 	lea    0x8da5(%rip),%rdx        # 10940 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    7b9b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7b9f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7ba3:	90                   	nop
    7ba4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ba8:	c9                   	leave
    7ba9:	c3                   	ret

0000000000007baa <_ZN2vk15DeviceLostErrorC1EPKc>:
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7baa:	55                   	push   %rbp
    7bab:	48 89 e5             	mov    %rsp,%rbp
    7bae:	53                   	push   %rbx
    7baf:	48 83 ec 38          	sub    $0x38,%rsp
    7bb3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7bb7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7bbb:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7bbf:	c7 45 ec fc ff ff ff 	movl   $0xfffffffc,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7bc6:	0f b6 05 eb 97 00 00 	movzbl 0x97eb(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bcd:	84 c0                	test   %al,%al
    7bcf:	0f 94 c0             	sete   %al
    7bd2:	84 c0                	test   %al,%al
    7bd4:	74 4a                	je     7c20 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7bd6:	48 8d 05 db 97 00 00 	lea    0x97db(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7bdd:	48 89 c7             	mov    %rax,%rdi
    7be0:	e8 9b d6 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7be5:	85 c0                	test   %eax,%eax
    7be7:	0f 95 c0             	setne  %al
    7bea:	84 c0                	test   %al,%al
    7bec:	74 32                	je     7c20 <_ZN2vk15DeviceLostErrorC1EPKc+0x76>
    7bee:	48 8d 05 4b 95 00 00 	lea    0x954b(%rip),%rax        # 11140 <__dso_handle>
    7bf5:	48 89 c2             	mov    %rax,%rdx
    7bf8:	48 8d 05 49 95 00 00 	lea    0x9549(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7bff:	48 89 c6             	mov    %rax,%rsi
    7c02:	48 8d 05 eb 33 00 00 	lea    0x33eb(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7c09:	48 89 c7             	mov    %rax,%rdi
    7c0c:	e8 1f d5 ff ff       	call   5130 <__cxa_atexit@plt>
    7c11:	48 8d 05 a0 97 00 00 	lea    0x97a0(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7c18:	48 89 c7             	mov    %rax,%rdi
    7c1b:	e8 90 d4 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    7c20:	48 8d 15 21 95 00 00 	lea    0x9521(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7c27:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7c2a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7c2e:	89 ce                	mov    %ecx,%esi
    7c30:	48 89 c7             	mov    %rax,%rdi
    7c33:	e8 a6 e6 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7c38:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c3c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    DeviceLostError( char const * message ) : SystemError( make_error_code( Result::eErrorDeviceLost ), message ) {}
    7c40:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7c44:	48 89 c6             	mov    %rax,%rsi
    7c47:	48 89 d7             	mov    %rdx,%rdi
    7c4a:	48 89 d0             	mov    %rdx,%rax
    7c4d:	48 89 c2             	mov    %rax,%rdx
    7c50:	48 89 df             	mov    %rbx,%rdi
    7c53:	e8 ae fb ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7c58:	48 8d 15 69 8c 00 00 	lea    0x8c69(%rip),%rdx        # 108c8 <_ZTVN2vk15DeviceLostErrorE+0x10>
    7c5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c63:	48 89 10             	mov    %rdx,(%rax)
    7c66:	48 8d 15 83 8c 00 00 	lea    0x8c83(%rip),%rdx        # 108f0 <_ZTVN2vk15DeviceLostErrorE+0x38>
    7c6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7c71:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7c75:	90                   	nop
    7c76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c7a:	c9                   	leave
    7c7b:	c3                   	ret

0000000000007c7c <_ZN2vk20MemoryMapFailedErrorC1EPKc>:
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7c7c:	55                   	push   %rbp
    7c7d:	48 89 e5             	mov    %rsp,%rbp
    7c80:	53                   	push   %rbx
    7c81:	48 83 ec 38          	sub    $0x38,%rsp
    7c85:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7c89:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7c8d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7c91:	c7 45 ec fb ff ff ff 	movl   $0xfffffffb,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7c98:	0f b6 05 19 97 00 00 	movzbl 0x9719(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7c9f:	84 c0                	test   %al,%al
    7ca1:	0f 94 c0             	sete   %al
    7ca4:	84 c0                	test   %al,%al
    7ca6:	74 4a                	je     7cf2 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7ca8:	48 8d 05 09 97 00 00 	lea    0x9709(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7caf:	48 89 c7             	mov    %rax,%rdi
    7cb2:	e8 c9 d5 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7cb7:	85 c0                	test   %eax,%eax
    7cb9:	0f 95 c0             	setne  %al
    7cbc:	84 c0                	test   %al,%al
    7cbe:	74 32                	je     7cf2 <_ZN2vk20MemoryMapFailedErrorC1EPKc+0x76>
    7cc0:	48 8d 05 79 94 00 00 	lea    0x9479(%rip),%rax        # 11140 <__dso_handle>
    7cc7:	48 89 c2             	mov    %rax,%rdx
    7cca:	48 8d 05 77 94 00 00 	lea    0x9477(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7cd1:	48 89 c6             	mov    %rax,%rsi
    7cd4:	48 8d 05 19 33 00 00 	lea    0x3319(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7cdb:	48 89 c7             	mov    %rax,%rdi
    7cde:	e8 4d d4 ff ff       	call   5130 <__cxa_atexit@plt>
    7ce3:	48 8d 05 ce 96 00 00 	lea    0x96ce(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7cea:	48 89 c7             	mov    %rax,%rdi
    7ced:	e8 be d3 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    7cf2:	48 8d 15 4f 94 00 00 	lea    0x944f(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7cf9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7cfc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7d00:	89 ce                	mov    %ecx,%esi
    7d02:	48 89 c7             	mov    %rax,%rdi
    7d05:	e8 d4 e5 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7d0a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d0e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    MemoryMapFailedError( char const * message ) : SystemError( make_error_code( Result::eErrorMemoryMapFailed ), message ) {}
    7d12:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7d16:	48 89 c6             	mov    %rax,%rsi
    7d19:	48 89 d7             	mov    %rdx,%rdi
    7d1c:	48 89 d0             	mov    %rdx,%rax
    7d1f:	48 89 c2             	mov    %rax,%rdx
    7d22:	48 89 df             	mov    %rbx,%rdi
    7d25:	e8 dc fa ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7d2a:	48 8d 15 47 8b 00 00 	lea    0x8b47(%rip),%rdx        # 10878 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    7d31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d35:	48 89 10             	mov    %rdx,(%rax)
    7d38:	48 8d 15 61 8b 00 00 	lea    0x8b61(%rip),%rdx        # 108a0 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    7d3f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d43:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7d47:	90                   	nop
    7d48:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d4c:	c9                   	leave
    7d4d:	c3                   	ret

0000000000007d4e <_ZN2vk20LayerNotPresentErrorC1EPKc>:
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7d4e:	55                   	push   %rbp
    7d4f:	48 89 e5             	mov    %rsp,%rbp
    7d52:	53                   	push   %rbx
    7d53:	48 83 ec 38          	sub    $0x38,%rsp
    7d57:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7d5b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7d5f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7d63:	c7 45 ec fa ff ff ff 	movl   $0xfffffffa,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7d6a:	0f b6 05 47 96 00 00 	movzbl 0x9647(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d71:	84 c0                	test   %al,%al
    7d73:	0f 94 c0             	sete   %al
    7d76:	84 c0                	test   %al,%al
    7d78:	74 4a                	je     7dc4 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7d7a:	48 8d 05 37 96 00 00 	lea    0x9637(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7d81:	48 89 c7             	mov    %rax,%rdi
    7d84:	e8 f7 d4 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7d89:	85 c0                	test   %eax,%eax
    7d8b:	0f 95 c0             	setne  %al
    7d8e:	84 c0                	test   %al,%al
    7d90:	74 32                	je     7dc4 <_ZN2vk20LayerNotPresentErrorC1EPKc+0x76>
    7d92:	48 8d 05 a7 93 00 00 	lea    0x93a7(%rip),%rax        # 11140 <__dso_handle>
    7d99:	48 89 c2             	mov    %rax,%rdx
    7d9c:	48 8d 05 a5 93 00 00 	lea    0x93a5(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7da3:	48 89 c6             	mov    %rax,%rsi
    7da6:	48 8d 05 47 32 00 00 	lea    0x3247(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7dad:	48 89 c7             	mov    %rax,%rdi
    7db0:	e8 7b d3 ff ff       	call   5130 <__cxa_atexit@plt>
    7db5:	48 8d 05 fc 95 00 00 	lea    0x95fc(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7dbc:	48 89 c7             	mov    %rax,%rdi
    7dbf:	e8 ec d2 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    7dc4:	48 8d 15 7d 93 00 00 	lea    0x937d(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7dcb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7dce:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7dd2:	89 ce                	mov    %ecx,%esi
    7dd4:	48 89 c7             	mov    %rax,%rdi
    7dd7:	e8 02 e5 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7ddc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7de0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    LayerNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorLayerNotPresent ), message ) {}
    7de4:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7de8:	48 89 c6             	mov    %rax,%rsi
    7deb:	48 89 d7             	mov    %rdx,%rdi
    7dee:	48 89 d0             	mov    %rdx,%rax
    7df1:	48 89 c2             	mov    %rax,%rdx
    7df4:	48 89 df             	mov    %rbx,%rdi
    7df7:	e8 0a fa ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7dfc:	48 8d 15 25 8a 00 00 	lea    0x8a25(%rip),%rdx        # 10828 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    7e03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e07:	48 89 10             	mov    %rdx,(%rax)
    7e0a:	48 8d 15 3f 8a 00 00 	lea    0x8a3f(%rip),%rdx        # 10850 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    7e11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e15:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7e19:	90                   	nop
    7e1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7e1e:	c9                   	leave
    7e1f:	c3                   	ret

0000000000007e20 <_ZN2vk24ExtensionNotPresentErrorC1EPKc>:
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7e20:	55                   	push   %rbp
    7e21:	48 89 e5             	mov    %rsp,%rbp
    7e24:	53                   	push   %rbx
    7e25:	48 83 ec 38          	sub    $0x38,%rsp
    7e29:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7e2d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7e31:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7e35:	c7 45 ec f9 ff ff ff 	movl   $0xfffffff9,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7e3c:	0f b6 05 75 95 00 00 	movzbl 0x9575(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e43:	84 c0                	test   %al,%al
    7e45:	0f 94 c0             	sete   %al
    7e48:	84 c0                	test   %al,%al
    7e4a:	74 4a                	je     7e96 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7e4c:	48 8d 05 65 95 00 00 	lea    0x9565(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e53:	48 89 c7             	mov    %rax,%rdi
    7e56:	e8 25 d4 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7e5b:	85 c0                	test   %eax,%eax
    7e5d:	0f 95 c0             	setne  %al
    7e60:	84 c0                	test   %al,%al
    7e62:	74 32                	je     7e96 <_ZN2vk24ExtensionNotPresentErrorC1EPKc+0x76>
    7e64:	48 8d 05 d5 92 00 00 	lea    0x92d5(%rip),%rax        # 11140 <__dso_handle>
    7e6b:	48 89 c2             	mov    %rax,%rdx
    7e6e:	48 8d 05 d3 92 00 00 	lea    0x92d3(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7e75:	48 89 c6             	mov    %rax,%rsi
    7e78:	48 8d 05 75 31 00 00 	lea    0x3175(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7e7f:	48 89 c7             	mov    %rax,%rdi
    7e82:	e8 a9 d2 ff ff       	call   5130 <__cxa_atexit@plt>
    7e87:	48 8d 05 2a 95 00 00 	lea    0x952a(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7e8e:	48 89 c7             	mov    %rax,%rdi
    7e91:	e8 1a d2 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    7e96:	48 8d 15 ab 92 00 00 	lea    0x92ab(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7e9d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7ea0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7ea4:	89 ce                	mov    %ecx,%esi
    7ea6:	48 89 c7             	mov    %rax,%rdi
    7ea9:	e8 30 e4 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7eae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7eb2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ExtensionNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorExtensionNotPresent ), message ) {}
    7eb6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7eba:	48 89 c6             	mov    %rax,%rsi
    7ebd:	48 89 d7             	mov    %rdx,%rdi
    7ec0:	48 89 d0             	mov    %rdx,%rax
    7ec3:	48 89 c2             	mov    %rax,%rdx
    7ec6:	48 89 df             	mov    %rbx,%rdi
    7ec9:	e8 38 f9 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7ece:	48 8d 15 03 89 00 00 	lea    0x8903(%rip),%rdx        # 107d8 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    7ed5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ed9:	48 89 10             	mov    %rdx,(%rax)
    7edc:	48 8d 15 1d 89 00 00 	lea    0x891d(%rip),%rdx        # 10800 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    7ee3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ee7:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7eeb:	90                   	nop
    7eec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ef0:	c9                   	leave
    7ef1:	c3                   	ret

0000000000007ef2 <_ZN2vk22FeatureNotPresentErrorC1EPKc>:
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    7ef2:	55                   	push   %rbp
    7ef3:	48 89 e5             	mov    %rsp,%rbp
    7ef6:	53                   	push   %rbx
    7ef7:	48 83 ec 38          	sub    $0x38,%rsp
    7efb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7eff:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7f03:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7f07:	c7 45 ec f8 ff ff ff 	movl   $0xfffffff8,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7f0e:	0f b6 05 a3 94 00 00 	movzbl 0x94a3(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f15:	84 c0                	test   %al,%al
    7f17:	0f 94 c0             	sete   %al
    7f1a:	84 c0                	test   %al,%al
    7f1c:	74 4a                	je     7f68 <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7f1e:	48 8d 05 93 94 00 00 	lea    0x9493(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f25:	48 89 c7             	mov    %rax,%rdi
    7f28:	e8 53 d3 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7f2d:	85 c0                	test   %eax,%eax
    7f2f:	0f 95 c0             	setne  %al
    7f32:	84 c0                	test   %al,%al
    7f34:	74 32                	je     7f68 <_ZN2vk22FeatureNotPresentErrorC1EPKc+0x76>
    7f36:	48 8d 05 03 92 00 00 	lea    0x9203(%rip),%rax        # 11140 <__dso_handle>
    7f3d:	48 89 c2             	mov    %rax,%rdx
    7f40:	48 8d 05 01 92 00 00 	lea    0x9201(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    7f47:	48 89 c6             	mov    %rax,%rsi
    7f4a:	48 8d 05 a3 30 00 00 	lea    0x30a3(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    7f51:	48 89 c7             	mov    %rax,%rdi
    7f54:	e8 d7 d1 ff ff       	call   5130 <__cxa_atexit@plt>
    7f59:	48 8d 05 58 94 00 00 	lea    0x9458(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7f60:	48 89 c7             	mov    %rax,%rdi
    7f63:	e8 48 d1 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    7f68:	48 8d 15 d9 91 00 00 	lea    0x91d9(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    7f6f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    7f72:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7f76:	89 ce                	mov    %ecx,%esi
    7f78:	48 89 c7             	mov    %rax,%rdi
    7f7b:	e8 5e e3 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    7f80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f84:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FeatureNotPresentError( char const * message ) : SystemError( make_error_code( Result::eErrorFeatureNotPresent ), message ) {}
    7f88:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    7f8c:	48 89 c6             	mov    %rax,%rsi
    7f8f:	48 89 d7             	mov    %rdx,%rdi
    7f92:	48 89 d0             	mov    %rdx,%rax
    7f95:	48 89 c2             	mov    %rax,%rdx
    7f98:	48 89 df             	mov    %rbx,%rdi
    7f9b:	e8 66 f8 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    7fa0:	48 8d 15 e1 87 00 00 	lea    0x87e1(%rip),%rdx        # 10788 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    7fa7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7fab:	48 89 10             	mov    %rdx,(%rax)
    7fae:	48 8d 15 fb 87 00 00 	lea    0x87fb(%rip),%rdx        # 107b0 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    7fb5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7fb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7fbd:	90                   	nop
    7fbe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7fc2:	c9                   	leave
    7fc3:	c3                   	ret

0000000000007fc4 <_ZN2vk23IncompatibleDriverErrorC1EPKc>:
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    7fc4:	55                   	push   %rbp
    7fc5:	48 89 e5             	mov    %rsp,%rbp
    7fc8:	53                   	push   %rbx
    7fc9:	48 83 ec 38          	sub    $0x38,%rsp
    7fcd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7fd1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    7fd5:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    7fd9:	c7 45 ec f7 ff ff ff 	movl   $0xfffffff7,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    7fe0:	0f b6 05 d1 93 00 00 	movzbl 0x93d1(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7fe7:	84 c0                	test   %al,%al
    7fe9:	0f 94 c0             	sete   %al
    7fec:	84 c0                	test   %al,%al
    7fee:	74 4a                	je     803a <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    7ff0:	48 8d 05 c1 93 00 00 	lea    0x93c1(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    7ff7:	48 89 c7             	mov    %rax,%rdi
    7ffa:	e8 81 d2 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    7fff:	85 c0                	test   %eax,%eax
    8001:	0f 95 c0             	setne  %al
    8004:	84 c0                	test   %al,%al
    8006:	74 32                	je     803a <_ZN2vk23IncompatibleDriverErrorC1EPKc+0x76>
    8008:	48 8d 05 31 91 00 00 	lea    0x9131(%rip),%rax        # 11140 <__dso_handle>
    800f:	48 89 c2             	mov    %rax,%rdx
    8012:	48 8d 05 2f 91 00 00 	lea    0x912f(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8019:	48 89 c6             	mov    %rax,%rsi
    801c:	48 8d 05 d1 2f 00 00 	lea    0x2fd1(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8023:	48 89 c7             	mov    %rax,%rdi
    8026:	e8 05 d1 ff ff       	call   5130 <__cxa_atexit@plt>
    802b:	48 8d 05 86 93 00 00 	lea    0x9386(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8032:	48 89 c7             	mov    %rax,%rdi
    8035:	e8 76 d0 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    803a:	48 8d 15 07 91 00 00 	lea    0x9107(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8041:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8044:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8048:	89 ce                	mov    %ecx,%esi
    804a:	48 89 c7             	mov    %rax,%rdi
    804d:	e8 8c e2 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8052:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8056:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDriverError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDriver ), message ) {}
    805a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    805e:	48 89 c6             	mov    %rax,%rsi
    8061:	48 89 d7             	mov    %rdx,%rdi
    8064:	48 89 d0             	mov    %rdx,%rax
    8067:	48 89 c2             	mov    %rax,%rdx
    806a:	48 89 df             	mov    %rbx,%rdi
    806d:	e8 94 f7 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8072:	48 8d 15 bf 86 00 00 	lea    0x86bf(%rip),%rdx        # 10738 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    8079:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    807d:	48 89 10             	mov    %rdx,(%rax)
    8080:	48 8d 15 d9 86 00 00 	lea    0x86d9(%rip),%rdx        # 10760 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    8087:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    808b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    808f:	90                   	nop
    8090:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8094:	c9                   	leave
    8095:	c3                   	ret

0000000000008096 <_ZN2vk19TooManyObjectsErrorC1EPKc>:
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    8096:	55                   	push   %rbp
    8097:	48 89 e5             	mov    %rsp,%rbp
    809a:	53                   	push   %rbx
    809b:	48 83 ec 38          	sub    $0x38,%rsp
    809f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    80a3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    80a7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    80ab:	c7 45 ec f6 ff ff ff 	movl   $0xfffffff6,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    80b2:	0f b6 05 ff 92 00 00 	movzbl 0x92ff(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    80b9:	84 c0                	test   %al,%al
    80bb:	0f 94 c0             	sete   %al
    80be:	84 c0                	test   %al,%al
    80c0:	74 4a                	je     810c <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    80c2:	48 8d 05 ef 92 00 00 	lea    0x92ef(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    80c9:	48 89 c7             	mov    %rax,%rdi
    80cc:	e8 af d1 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    80d1:	85 c0                	test   %eax,%eax
    80d3:	0f 95 c0             	setne  %al
    80d6:	84 c0                	test   %al,%al
    80d8:	74 32                	je     810c <_ZN2vk19TooManyObjectsErrorC1EPKc+0x76>
    80da:	48 8d 05 5f 90 00 00 	lea    0x905f(%rip),%rax        # 11140 <__dso_handle>
    80e1:	48 89 c2             	mov    %rax,%rdx
    80e4:	48 8d 05 5d 90 00 00 	lea    0x905d(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    80eb:	48 89 c6             	mov    %rax,%rsi
    80ee:	48 8d 05 ff 2e 00 00 	lea    0x2eff(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    80f5:	48 89 c7             	mov    %rax,%rdi
    80f8:	e8 33 d0 ff ff       	call   5130 <__cxa_atexit@plt>
    80fd:	48 8d 05 b4 92 00 00 	lea    0x92b4(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8104:	48 89 c7             	mov    %rax,%rdi
    8107:	e8 a4 cf ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    810c:	48 8d 15 35 90 00 00 	lea    0x9035(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8113:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8116:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    811a:	89 ce                	mov    %ecx,%esi
    811c:	48 89 c7             	mov    %rax,%rdi
    811f:	e8 ba e1 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8124:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8128:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    TooManyObjectsError( char const * message ) : SystemError( make_error_code( Result::eErrorTooManyObjects ), message ) {}
    812c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8130:	48 89 c6             	mov    %rax,%rsi
    8133:	48 89 d7             	mov    %rdx,%rdi
    8136:	48 89 d0             	mov    %rdx,%rax
    8139:	48 89 c2             	mov    %rax,%rdx
    813c:	48 89 df             	mov    %rbx,%rdi
    813f:	e8 c2 f6 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8144:	48 8d 15 9d 85 00 00 	lea    0x859d(%rip),%rdx        # 106e8 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    814b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    814f:	48 89 10             	mov    %rdx,(%rax)
    8152:	48 8d 15 b7 85 00 00 	lea    0x85b7(%rip),%rdx        # 10710 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    8159:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    815d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8161:	90                   	nop
    8162:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8166:	c9                   	leave
    8167:	c3                   	ret

0000000000008168 <_ZN2vk23FormatNotSupportedErrorC1EPKc>:
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    8168:	55                   	push   %rbp
    8169:	48 89 e5             	mov    %rsp,%rbp
    816c:	53                   	push   %rbx
    816d:	48 83 ec 38          	sub    $0x38,%rsp
    8171:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8175:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8179:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    817d:	c7 45 ec f5 ff ff ff 	movl   $0xfffffff5,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8184:	0f b6 05 2d 92 00 00 	movzbl 0x922d(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    818b:	84 c0                	test   %al,%al
    818d:	0f 94 c0             	sete   %al
    8190:	84 c0                	test   %al,%al
    8192:	74 4a                	je     81de <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    8194:	48 8d 05 1d 92 00 00 	lea    0x921d(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    819b:	48 89 c7             	mov    %rax,%rdi
    819e:	e8 dd d0 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    81a3:	85 c0                	test   %eax,%eax
    81a5:	0f 95 c0             	setne  %al
    81a8:	84 c0                	test   %al,%al
    81aa:	74 32                	je     81de <_ZN2vk23FormatNotSupportedErrorC1EPKc+0x76>
    81ac:	48 8d 05 8d 8f 00 00 	lea    0x8f8d(%rip),%rax        # 11140 <__dso_handle>
    81b3:	48 89 c2             	mov    %rax,%rdx
    81b6:	48 8d 05 8b 8f 00 00 	lea    0x8f8b(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    81bd:	48 89 c6             	mov    %rax,%rsi
    81c0:	48 8d 05 2d 2e 00 00 	lea    0x2e2d(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    81c7:	48 89 c7             	mov    %rax,%rdi
    81ca:	e8 61 cf ff ff       	call   5130 <__cxa_atexit@plt>
    81cf:	48 8d 05 e2 91 00 00 	lea    0x91e2(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    81d6:	48 89 c7             	mov    %rax,%rdi
    81d9:	e8 d2 ce ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    81de:	48 8d 15 63 8f 00 00 	lea    0x8f63(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    81e5:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    81e8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    81ec:	89 ce                	mov    %ecx,%esi
    81ee:	48 89 c7             	mov    %rax,%rdi
    81f1:	e8 e8 e0 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    81f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    81fa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FormatNotSupportedError( char const * message ) : SystemError( make_error_code( Result::eErrorFormatNotSupported ), message ) {}
    81fe:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8202:	48 89 c6             	mov    %rax,%rsi
    8205:	48 89 d7             	mov    %rdx,%rdi
    8208:	48 89 d0             	mov    %rdx,%rax
    820b:	48 89 c2             	mov    %rax,%rdx
    820e:	48 89 df             	mov    %rbx,%rdi
    8211:	e8 f0 f5 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8216:	48 8d 15 7b 84 00 00 	lea    0x847b(%rip),%rdx        # 10698 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    821d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8221:	48 89 10             	mov    %rdx,(%rax)
    8224:	48 8d 15 95 84 00 00 	lea    0x8495(%rip),%rdx        # 106c0 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    822b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    822f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8233:	90                   	nop
    8234:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8238:	c9                   	leave
    8239:	c3                   	ret

000000000000823a <_ZN2vk19FragmentedPoolErrorC1EPKc>:
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    823a:	55                   	push   %rbp
    823b:	48 89 e5             	mov    %rsp,%rbp
    823e:	53                   	push   %rbx
    823f:	48 83 ec 38          	sub    $0x38,%rsp
    8243:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8247:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    824b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    824f:	c7 45 ec f4 ff ff ff 	movl   $0xfffffff4,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8256:	0f b6 05 5b 91 00 00 	movzbl 0x915b(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    825d:	84 c0                	test   %al,%al
    825f:	0f 94 c0             	sete   %al
    8262:	84 c0                	test   %al,%al
    8264:	74 4a                	je     82b0 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    8266:	48 8d 05 4b 91 00 00 	lea    0x914b(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    826d:	48 89 c7             	mov    %rax,%rdi
    8270:	e8 0b d0 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8275:	85 c0                	test   %eax,%eax
    8277:	0f 95 c0             	setne  %al
    827a:	84 c0                	test   %al,%al
    827c:	74 32                	je     82b0 <_ZN2vk19FragmentedPoolErrorC1EPKc+0x76>
    827e:	48 8d 05 bb 8e 00 00 	lea    0x8ebb(%rip),%rax        # 11140 <__dso_handle>
    8285:	48 89 c2             	mov    %rax,%rdx
    8288:	48 8d 05 b9 8e 00 00 	lea    0x8eb9(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    828f:	48 89 c6             	mov    %rax,%rsi
    8292:	48 8d 05 5b 2d 00 00 	lea    0x2d5b(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8299:	48 89 c7             	mov    %rax,%rdi
    829c:	e8 8f ce ff ff       	call   5130 <__cxa_atexit@plt>
    82a1:	48 8d 05 10 91 00 00 	lea    0x9110(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    82a8:	48 89 c7             	mov    %rax,%rdi
    82ab:	e8 00 ce ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    82b0:	48 8d 15 91 8e 00 00 	lea    0x8e91(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    82b7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    82ba:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    82be:	89 ce                	mov    %ecx,%esi
    82c0:	48 89 c7             	mov    %rax,%rdi
    82c3:	e8 16 e0 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    82c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    82cc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentedPoolError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentedPool ), message ) {}
    82d0:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    82d4:	48 89 c6             	mov    %rax,%rsi
    82d7:	48 89 d7             	mov    %rdx,%rdi
    82da:	48 89 d0             	mov    %rdx,%rax
    82dd:	48 89 c2             	mov    %rax,%rdx
    82e0:	48 89 df             	mov    %rbx,%rdi
    82e3:	e8 1e f5 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    82e8:	48 8d 15 59 83 00 00 	lea    0x8359(%rip),%rdx        # 10648 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    82ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    82f3:	48 89 10             	mov    %rdx,(%rax)
    82f6:	48 8d 15 73 83 00 00 	lea    0x8373(%rip),%rdx        # 10670 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    82fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8301:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8305:	90                   	nop
    8306:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    830a:	c9                   	leave
    830b:	c3                   	ret

000000000000830c <_ZN2vk12UnknownErrorC1EPKc>:
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    830c:	55                   	push   %rbp
    830d:	48 89 e5             	mov    %rsp,%rbp
    8310:	53                   	push   %rbx
    8311:	48 83 ec 38          	sub    $0x38,%rsp
    8315:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8319:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    831d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8321:	c7 45 ec f3 ff ff ff 	movl   $0xfffffff3,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8328:	0f b6 05 89 90 00 00 	movzbl 0x9089(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    832f:	84 c0                	test   %al,%al
    8331:	0f 94 c0             	sete   %al
    8334:	84 c0                	test   %al,%al
    8336:	74 4a                	je     8382 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    8338:	48 8d 05 79 90 00 00 	lea    0x9079(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    833f:	48 89 c7             	mov    %rax,%rdi
    8342:	e8 39 cf ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8347:	85 c0                	test   %eax,%eax
    8349:	0f 95 c0             	setne  %al
    834c:	84 c0                	test   %al,%al
    834e:	74 32                	je     8382 <_ZN2vk12UnknownErrorC1EPKc+0x76>
    8350:	48 8d 05 e9 8d 00 00 	lea    0x8de9(%rip),%rax        # 11140 <__dso_handle>
    8357:	48 89 c2             	mov    %rax,%rdx
    835a:	48 8d 05 e7 8d 00 00 	lea    0x8de7(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8361:	48 89 c6             	mov    %rax,%rsi
    8364:	48 8d 05 89 2c 00 00 	lea    0x2c89(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    836b:	48 89 c7             	mov    %rax,%rdi
    836e:	e8 bd cd ff ff       	call   5130 <__cxa_atexit@plt>
    8373:	48 8d 05 3e 90 00 00 	lea    0x903e(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    837a:	48 89 c7             	mov    %rax,%rdi
    837d:	e8 2e cd ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8382:	48 8d 15 bf 8d 00 00 	lea    0x8dbf(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8389:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    838c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8390:	89 ce                	mov    %ecx,%esi
    8392:	48 89 c7             	mov    %rax,%rdi
    8395:	e8 44 df ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    839a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    839e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    UnknownError( char const * message ) : SystemError( make_error_code( Result::eErrorUnknown ), message ) {}
    83a2:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    83a6:	48 89 c6             	mov    %rax,%rsi
    83a9:	48 89 d7             	mov    %rdx,%rdi
    83ac:	48 89 d0             	mov    %rdx,%rax
    83af:	48 89 c2             	mov    %rax,%rdx
    83b2:	48 89 df             	mov    %rbx,%rdi
    83b5:	e8 4c f4 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    83ba:	48 8d 15 37 82 00 00 	lea    0x8237(%rip),%rdx        # 105f8 <_ZTVN2vk12UnknownErrorE+0x10>
    83c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    83c5:	48 89 10             	mov    %rdx,(%rax)
    83c8:	48 8d 15 51 82 00 00 	lea    0x8251(%rip),%rdx        # 10620 <_ZTVN2vk12UnknownErrorE+0x38>
    83cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    83d3:	48 89 50 08          	mov    %rdx,0x8(%rax)
    83d7:	90                   	nop
    83d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    83dc:	c9                   	leave
    83dd:	c3                   	ret

00000000000083de <_ZN2vk20OutOfPoolMemoryErrorC1EPKc>:
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    83de:	55                   	push   %rbp
    83df:	48 89 e5             	mov    %rsp,%rbp
    83e2:	53                   	push   %rbx
    83e3:	48 83 ec 38          	sub    $0x38,%rsp
    83e7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    83eb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    83ef:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    83f3:	c7 45 ec 78 28 64 c4 	movl   $0xc4642878,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    83fa:	0f b6 05 b7 8f 00 00 	movzbl 0x8fb7(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8401:	84 c0                	test   %al,%al
    8403:	0f 94 c0             	sete   %al
    8406:	84 c0                	test   %al,%al
    8408:	74 4a                	je     8454 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    840a:	48 8d 05 a7 8f 00 00 	lea    0x8fa7(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8411:	48 89 c7             	mov    %rax,%rdi
    8414:	e8 67 ce ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8419:	85 c0                	test   %eax,%eax
    841b:	0f 95 c0             	setne  %al
    841e:	84 c0                	test   %al,%al
    8420:	74 32                	je     8454 <_ZN2vk20OutOfPoolMemoryErrorC1EPKc+0x76>
    8422:	48 8d 05 17 8d 00 00 	lea    0x8d17(%rip),%rax        # 11140 <__dso_handle>
    8429:	48 89 c2             	mov    %rax,%rdx
    842c:	48 8d 05 15 8d 00 00 	lea    0x8d15(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8433:	48 89 c6             	mov    %rax,%rsi
    8436:	48 8d 05 b7 2b 00 00 	lea    0x2bb7(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    843d:	48 89 c7             	mov    %rax,%rdi
    8440:	e8 eb cc ff ff       	call   5130 <__cxa_atexit@plt>
    8445:	48 8d 05 6c 8f 00 00 	lea    0x8f6c(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    844c:	48 89 c7             	mov    %rax,%rdi
    844f:	e8 5c cc ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8454:	48 8d 15 ed 8c 00 00 	lea    0x8ced(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    845b:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    845e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8462:	89 ce                	mov    %ecx,%esi
    8464:	48 89 c7             	mov    %rax,%rdi
    8467:	e8 72 de ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    846c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8470:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfPoolMemoryError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfPoolMemory ), message ) {}
    8474:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8478:	48 89 c6             	mov    %rax,%rsi
    847b:	48 89 d7             	mov    %rdx,%rdi
    847e:	48 89 d0             	mov    %rdx,%rax
    8481:	48 89 c2             	mov    %rax,%rdx
    8484:	48 89 df             	mov    %rbx,%rdi
    8487:	e8 7a f3 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    848c:	48 8d 15 15 81 00 00 	lea    0x8115(%rip),%rdx        # 105a8 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    8493:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8497:	48 89 10             	mov    %rdx,(%rax)
    849a:	48 8d 15 2f 81 00 00 	lea    0x812f(%rip),%rdx        # 105d0 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    84a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    84a5:	48 89 50 08          	mov    %rdx,0x8(%rax)
    84a9:	90                   	nop
    84aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84ae:	c9                   	leave
    84af:	c3                   	ret

00000000000084b0 <_ZN2vk26InvalidExternalHandleErrorC1EPKc>:
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    84b0:	55                   	push   %rbp
    84b1:	48 89 e5             	mov    %rsp,%rbp
    84b4:	53                   	push   %rbx
    84b5:	48 83 ec 38          	sub    $0x38,%rsp
    84b9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    84bd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    84c1:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    84c5:	c7 45 ec bd 1c 64 c4 	movl   $0xc4641cbd,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    84cc:	0f b6 05 e5 8e 00 00 	movzbl 0x8ee5(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    84d3:	84 c0                	test   %al,%al
    84d5:	0f 94 c0             	sete   %al
    84d8:	84 c0                	test   %al,%al
    84da:	74 4a                	je     8526 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    84dc:	48 8d 05 d5 8e 00 00 	lea    0x8ed5(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    84e3:	48 89 c7             	mov    %rax,%rdi
    84e6:	e8 95 cd ff ff       	call   5280 <__cxa_guard_acquire@plt>
    84eb:	85 c0                	test   %eax,%eax
    84ed:	0f 95 c0             	setne  %al
    84f0:	84 c0                	test   %al,%al
    84f2:	74 32                	je     8526 <_ZN2vk26InvalidExternalHandleErrorC1EPKc+0x76>
    84f4:	48 8d 05 45 8c 00 00 	lea    0x8c45(%rip),%rax        # 11140 <__dso_handle>
    84fb:	48 89 c2             	mov    %rax,%rdx
    84fe:	48 8d 05 43 8c 00 00 	lea    0x8c43(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8505:	48 89 c6             	mov    %rax,%rsi
    8508:	48 8d 05 e5 2a 00 00 	lea    0x2ae5(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    850f:	48 89 c7             	mov    %rax,%rdi
    8512:	e8 19 cc ff ff       	call   5130 <__cxa_atexit@plt>
    8517:	48 8d 05 9a 8e 00 00 	lea    0x8e9a(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    851e:	48 89 c7             	mov    %rax,%rdi
    8521:	e8 8a cb ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8526:	48 8d 15 1b 8c 00 00 	lea    0x8c1b(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    852d:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8530:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8534:	89 ce                	mov    %ecx,%esi
    8536:	48 89 c7             	mov    %rax,%rdi
    8539:	e8 a0 dd ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    853e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8542:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidExternalHandleError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidExternalHandle ), message ) {}
    8546:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    854a:	48 89 c6             	mov    %rax,%rsi
    854d:	48 89 d7             	mov    %rdx,%rdi
    8550:	48 89 d0             	mov    %rdx,%rax
    8553:	48 89 c2             	mov    %rax,%rdx
    8556:	48 89 df             	mov    %rbx,%rdi
    8559:	e8 a8 f2 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    855e:	48 8d 15 f3 7f 00 00 	lea    0x7ff3(%rip),%rdx        # 10558 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    8565:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8569:	48 89 10             	mov    %rdx,(%rax)
    856c:	48 8d 15 0d 80 00 00 	lea    0x800d(%rip),%rdx        # 10580 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    8573:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8577:	48 89 50 08          	mov    %rdx,0x8(%rax)
    857b:	90                   	nop
    857c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8580:	c9                   	leave
    8581:	c3                   	ret

0000000000008582 <_ZN2vk18FragmentationErrorC1EPKc>:
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    8582:	55                   	push   %rbp
    8583:	48 89 e5             	mov    %rsp,%rbp
    8586:	53                   	push   %rbx
    8587:	48 83 ec 38          	sub    $0x38,%rsp
    858b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    858f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8593:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8597:	c7 45 ec 18 c1 62 c4 	movl   $0xc462c118,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    859e:	0f b6 05 13 8e 00 00 	movzbl 0x8e13(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    85a5:	84 c0                	test   %al,%al
    85a7:	0f 94 c0             	sete   %al
    85aa:	84 c0                	test   %al,%al
    85ac:	74 4a                	je     85f8 <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    85ae:	48 8d 05 03 8e 00 00 	lea    0x8e03(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    85b5:	48 89 c7             	mov    %rax,%rdi
    85b8:	e8 c3 cc ff ff       	call   5280 <__cxa_guard_acquire@plt>
    85bd:	85 c0                	test   %eax,%eax
    85bf:	0f 95 c0             	setne  %al
    85c2:	84 c0                	test   %al,%al
    85c4:	74 32                	je     85f8 <_ZN2vk18FragmentationErrorC1EPKc+0x76>
    85c6:	48 8d 05 73 8b 00 00 	lea    0x8b73(%rip),%rax        # 11140 <__dso_handle>
    85cd:	48 89 c2             	mov    %rax,%rdx
    85d0:	48 8d 05 71 8b 00 00 	lea    0x8b71(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    85d7:	48 89 c6             	mov    %rax,%rsi
    85da:	48 8d 05 13 2a 00 00 	lea    0x2a13(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    85e1:	48 89 c7             	mov    %rax,%rdi
    85e4:	e8 47 cb ff ff       	call   5130 <__cxa_atexit@plt>
    85e9:	48 8d 05 c8 8d 00 00 	lea    0x8dc8(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    85f0:	48 89 c7             	mov    %rax,%rdi
    85f3:	e8 b8 ca ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    85f8:	48 8d 15 49 8b 00 00 	lea    0x8b49(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    85ff:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8602:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8606:	89 ce                	mov    %ecx,%esi
    8608:	48 89 c7             	mov    %rax,%rdi
    860b:	e8 ce dc ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8610:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8614:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    FragmentationError( char const * message ) : SystemError( make_error_code( Result::eErrorFragmentation ), message ) {}
    8618:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    861c:	48 89 c6             	mov    %rax,%rsi
    861f:	48 89 d7             	mov    %rdx,%rdi
    8622:	48 89 d0             	mov    %rdx,%rax
    8625:	48 89 c2             	mov    %rax,%rdx
    8628:	48 89 df             	mov    %rbx,%rdi
    862b:	e8 d6 f1 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8630:	48 8d 15 d1 7e 00 00 	lea    0x7ed1(%rip),%rdx        # 10508 <_ZTVN2vk18FragmentationErrorE+0x10>
    8637:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    863b:	48 89 10             	mov    %rdx,(%rax)
    863e:	48 8d 15 eb 7e 00 00 	lea    0x7eeb(%rip),%rdx        # 10530 <_ZTVN2vk18FragmentationErrorE+0x38>
    8645:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8649:	48 89 50 08          	mov    %rdx,0x8(%rax)
    864d:	90                   	nop
    864e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8652:	c9                   	leave
    8653:	c3                   	ret

0000000000008654 <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc>:
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    8654:	55                   	push   %rbp
    8655:	48 89 e5             	mov    %rsp,%rbp
    8658:	53                   	push   %rbx
    8659:	48 83 ec 38          	sub    $0x38,%rsp
    865d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8661:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8665:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8669:	c7 45 ec 18 4a 61 c4 	movl   $0xc4614a18,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8670:	0f b6 05 41 8d 00 00 	movzbl 0x8d41(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8677:	84 c0                	test   %al,%al
    8679:	0f 94 c0             	sete   %al
    867c:	84 c0                	test   %al,%al
    867e:	74 4a                	je     86ca <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    8680:	48 8d 05 31 8d 00 00 	lea    0x8d31(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8687:	48 89 c7             	mov    %rax,%rdi
    868a:	e8 f1 cb ff ff       	call   5280 <__cxa_guard_acquire@plt>
    868f:	85 c0                	test   %eax,%eax
    8691:	0f 95 c0             	setne  %al
    8694:	84 c0                	test   %al,%al
    8696:	74 32                	je     86ca <_ZN2vk32InvalidOpaqueCaptureAddressErrorC1EPKc+0x76>
    8698:	48 8d 05 a1 8a 00 00 	lea    0x8aa1(%rip),%rax        # 11140 <__dso_handle>
    869f:	48 89 c2             	mov    %rax,%rdx
    86a2:	48 8d 05 9f 8a 00 00 	lea    0x8a9f(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    86a9:	48 89 c6             	mov    %rax,%rsi
    86ac:	48 8d 05 41 29 00 00 	lea    0x2941(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    86b3:	48 89 c7             	mov    %rax,%rdi
    86b6:	e8 75 ca ff ff       	call   5130 <__cxa_atexit@plt>
    86bb:	48 8d 05 f6 8c 00 00 	lea    0x8cf6(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    86c2:	48 89 c7             	mov    %rax,%rdi
    86c5:	e8 e6 c9 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    86ca:	48 8d 15 77 8a 00 00 	lea    0x8a77(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    86d1:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    86d4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    86d8:	89 ce                	mov    %ecx,%esi
    86da:	48 89 c7             	mov    %rax,%rdi
    86dd:	e8 fc db ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    86e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    86e6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidOpaqueCaptureAddressError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidOpaqueCaptureAddress ), message ) {}
    86ea:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    86ee:	48 89 c6             	mov    %rax,%rsi
    86f1:	48 89 d7             	mov    %rdx,%rdi
    86f4:	48 89 d0             	mov    %rdx,%rax
    86f7:	48 89 c2             	mov    %rax,%rdx
    86fa:	48 89 df             	mov    %rbx,%rdi
    86fd:	e8 04 f1 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8702:	48 8d 15 af 7d 00 00 	lea    0x7daf(%rip),%rdx        # 104b8 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    8709:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    870d:	48 89 10             	mov    %rdx,(%rax)
    8710:	48 8d 15 c9 7d 00 00 	lea    0x7dc9(%rip),%rdx        # 104e0 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    8717:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    871b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    871f:	90                   	nop
    8720:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8724:	c9                   	leave
    8725:	c3                   	ret

0000000000008726 <_ZN2vk19SurfaceLostKHRErrorC1EPKc>:
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    8726:	55                   	push   %rbp
    8727:	48 89 e5             	mov    %rsp,%rbp
    872a:	53                   	push   %rbx
    872b:	48 83 ec 38          	sub    $0x38,%rsp
    872f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8733:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8737:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    873b:	c7 45 ec 00 36 65 c4 	movl   $0xc4653600,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8742:	0f b6 05 6f 8c 00 00 	movzbl 0x8c6f(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8749:	84 c0                	test   %al,%al
    874b:	0f 94 c0             	sete   %al
    874e:	84 c0                	test   %al,%al
    8750:	74 4a                	je     879c <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    8752:	48 8d 05 5f 8c 00 00 	lea    0x8c5f(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8759:	48 89 c7             	mov    %rax,%rdi
    875c:	e8 1f cb ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8761:	85 c0                	test   %eax,%eax
    8763:	0f 95 c0             	setne  %al
    8766:	84 c0                	test   %al,%al
    8768:	74 32                	je     879c <_ZN2vk19SurfaceLostKHRErrorC1EPKc+0x76>
    876a:	48 8d 05 cf 89 00 00 	lea    0x89cf(%rip),%rax        # 11140 <__dso_handle>
    8771:	48 89 c2             	mov    %rax,%rdx
    8774:	48 8d 05 cd 89 00 00 	lea    0x89cd(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    877b:	48 89 c6             	mov    %rax,%rsi
    877e:	48 8d 05 6f 28 00 00 	lea    0x286f(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8785:	48 89 c7             	mov    %rax,%rdi
    8788:	e8 a3 c9 ff ff       	call   5130 <__cxa_atexit@plt>
    878d:	48 8d 05 24 8c 00 00 	lea    0x8c24(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8794:	48 89 c7             	mov    %rax,%rdi
    8797:	e8 14 c9 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    879c:	48 8d 15 a5 89 00 00 	lea    0x89a5(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    87a3:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    87a6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    87aa:	89 ce                	mov    %ecx,%esi
    87ac:	48 89 c7             	mov    %rax,%rdi
    87af:	e8 2a db ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    87b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    87b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    SurfaceLostKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorSurfaceLostKHR ), message ) {}
    87bc:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    87c0:	48 89 c6             	mov    %rax,%rsi
    87c3:	48 89 d7             	mov    %rdx,%rdi
    87c6:	48 89 d0             	mov    %rdx,%rax
    87c9:	48 89 c2             	mov    %rax,%rdx
    87cc:	48 89 df             	mov    %rbx,%rdi
    87cf:	e8 32 f0 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    87d4:	48 8d 15 8d 7c 00 00 	lea    0x7c8d(%rip),%rdx        # 10468 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    87db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87df:	48 89 10             	mov    %rdx,(%rax)
    87e2:	48 8d 15 a7 7c 00 00 	lea    0x7ca7(%rip),%rdx        # 10490 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    87e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    87ed:	48 89 50 08          	mov    %rdx,0x8(%rax)
    87f1:	90                   	nop
    87f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87f6:	c9                   	leave
    87f7:	c3                   	ret

00000000000087f8 <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc>:
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    87f8:	55                   	push   %rbp
    87f9:	48 89 e5             	mov    %rsp,%rbp
    87fc:	53                   	push   %rbx
    87fd:	48 83 ec 38          	sub    $0x38,%rsp
    8801:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8805:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8809:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    880d:	c7 45 ec ff 35 65 c4 	movl   $0xc46535ff,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8814:	0f b6 05 9d 8b 00 00 	movzbl 0x8b9d(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    881b:	84 c0                	test   %al,%al
    881d:	0f 94 c0             	sete   %al
    8820:	84 c0                	test   %al,%al
    8822:	74 4a                	je     886e <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    8824:	48 8d 05 8d 8b 00 00 	lea    0x8b8d(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    882b:	48 89 c7             	mov    %rax,%rdi
    882e:	e8 4d ca ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8833:	85 c0                	test   %eax,%eax
    8835:	0f 95 c0             	setne  %al
    8838:	84 c0                	test   %al,%al
    883a:	74 32                	je     886e <_ZN2vk25NativeWindowInUseKHRErrorC1EPKc+0x76>
    883c:	48 8d 05 fd 88 00 00 	lea    0x88fd(%rip),%rax        # 11140 <__dso_handle>
    8843:	48 89 c2             	mov    %rax,%rdx
    8846:	48 8d 05 fb 88 00 00 	lea    0x88fb(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    884d:	48 89 c6             	mov    %rax,%rsi
    8850:	48 8d 05 9d 27 00 00 	lea    0x279d(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8857:	48 89 c7             	mov    %rax,%rdi
    885a:	e8 d1 c8 ff ff       	call   5130 <__cxa_atexit@plt>
    885f:	48 8d 05 52 8b 00 00 	lea    0x8b52(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8866:	48 89 c7             	mov    %rax,%rdi
    8869:	e8 42 c8 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    886e:	48 8d 15 d3 88 00 00 	lea    0x88d3(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8875:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8878:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    887c:	89 ce                	mov    %ecx,%esi
    887e:	48 89 c7             	mov    %rax,%rdi
    8881:	e8 58 da ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8886:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    888a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NativeWindowInUseKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNativeWindowInUseKHR ), message ) {}
    888e:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8892:	48 89 c6             	mov    %rax,%rsi
    8895:	48 89 d7             	mov    %rdx,%rdi
    8898:	48 89 d0             	mov    %rdx,%rax
    889b:	48 89 c2             	mov    %rax,%rdx
    889e:	48 89 df             	mov    %rbx,%rdi
    88a1:	e8 60 ef ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    88a6:	48 8d 15 6b 7b 00 00 	lea    0x7b6b(%rip),%rdx        # 10418 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    88ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    88b1:	48 89 10             	mov    %rdx,(%rax)
    88b4:	48 8d 15 85 7b 00 00 	lea    0x7b85(%rip),%rdx        # 10440 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    88bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    88bf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    88c3:	90                   	nop
    88c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88c8:	c9                   	leave
    88c9:	c3                   	ret

00000000000088ca <_ZN2vk17OutOfDateKHRErrorC1EPKc>:
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    88ca:	55                   	push   %rbp
    88cb:	48 89 e5             	mov    %rsp,%rbp
    88ce:	53                   	push   %rbx
    88cf:	48 83 ec 38          	sub    $0x38,%rsp
    88d3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    88d7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    88db:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    88df:	c7 45 ec 14 32 65 c4 	movl   $0xc4653214,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    88e6:	0f b6 05 cb 8a 00 00 	movzbl 0x8acb(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    88ed:	84 c0                	test   %al,%al
    88ef:	0f 94 c0             	sete   %al
    88f2:	84 c0                	test   %al,%al
    88f4:	74 4a                	je     8940 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    88f6:	48 8d 05 bb 8a 00 00 	lea    0x8abb(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    88fd:	48 89 c7             	mov    %rax,%rdi
    8900:	e8 7b c9 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8905:	85 c0                	test   %eax,%eax
    8907:	0f 95 c0             	setne  %al
    890a:	84 c0                	test   %al,%al
    890c:	74 32                	je     8940 <_ZN2vk17OutOfDateKHRErrorC1EPKc+0x76>
    890e:	48 8d 05 2b 88 00 00 	lea    0x882b(%rip),%rax        # 11140 <__dso_handle>
    8915:	48 89 c2             	mov    %rax,%rdx
    8918:	48 8d 05 29 88 00 00 	lea    0x8829(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    891f:	48 89 c6             	mov    %rax,%rsi
    8922:	48 8d 05 cb 26 00 00 	lea    0x26cb(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8929:	48 89 c7             	mov    %rax,%rdi
    892c:	e8 ff c7 ff ff       	call   5130 <__cxa_atexit@plt>
    8931:	48 8d 05 80 8a 00 00 	lea    0x8a80(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8938:	48 89 c7             	mov    %rax,%rdi
    893b:	e8 70 c7 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8940:	48 8d 15 01 88 00 00 	lea    0x8801(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8947:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    894a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    894e:	89 ce                	mov    %ecx,%esi
    8950:	48 89 c7             	mov    %rax,%rdi
    8953:	e8 86 d9 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8958:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    895c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    OutOfDateKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorOutOfDateKHR ), message ) {}
    8960:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8964:	48 89 c6             	mov    %rax,%rsi
    8967:	48 89 d7             	mov    %rdx,%rdi
    896a:	48 89 d0             	mov    %rdx,%rax
    896d:	48 89 c2             	mov    %rax,%rdx
    8970:	48 89 df             	mov    %rbx,%rdi
    8973:	e8 8e ee ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8978:	48 8d 15 49 7a 00 00 	lea    0x7a49(%rip),%rdx        # 103c8 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    897f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8983:	48 89 10             	mov    %rdx,(%rax)
    8986:	48 8d 15 63 7a 00 00 	lea    0x7a63(%rip),%rdx        # 103f0 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    898d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8991:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8995:	90                   	nop
    8996:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    899a:	c9                   	leave
    899b:	c3                   	ret

000000000000899c <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc>:
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    899c:	55                   	push   %rbp
    899d:	48 89 e5             	mov    %rsp,%rbp
    89a0:	53                   	push   %rbx
    89a1:	48 83 ec 38          	sub    $0x38,%rsp
    89a5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    89a9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    89ad:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    89b1:	c7 45 ec 47 2a 65 c4 	movl   $0xc4652a47,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    89b8:	0f b6 05 f9 89 00 00 	movzbl 0x89f9(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    89bf:	84 c0                	test   %al,%al
    89c1:	0f 94 c0             	sete   %al
    89c4:	84 c0                	test   %al,%al
    89c6:	74 4a                	je     8a12 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    89c8:	48 8d 05 e9 89 00 00 	lea    0x89e9(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    89cf:	48 89 c7             	mov    %rax,%rdi
    89d2:	e8 a9 c8 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    89d7:	85 c0                	test   %eax,%eax
    89d9:	0f 95 c0             	setne  %al
    89dc:	84 c0                	test   %al,%al
    89de:	74 32                	je     8a12 <_ZN2vk27IncompatibleDisplayKHRErrorC1EPKc+0x76>
    89e0:	48 8d 05 59 87 00 00 	lea    0x8759(%rip),%rax        # 11140 <__dso_handle>
    89e7:	48 89 c2             	mov    %rax,%rdx
    89ea:	48 8d 05 57 87 00 00 	lea    0x8757(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    89f1:	48 89 c6             	mov    %rax,%rsi
    89f4:	48 8d 05 f9 25 00 00 	lea    0x25f9(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    89fb:	48 89 c7             	mov    %rax,%rdi
    89fe:	e8 2d c7 ff ff       	call   5130 <__cxa_atexit@plt>
    8a03:	48 8d 05 ae 89 00 00 	lea    0x89ae(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a0a:	48 89 c7             	mov    %rax,%rdi
    8a0d:	e8 9e c6 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8a12:	48 8d 15 2f 87 00 00 	lea    0x872f(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8a19:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8a1c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8a20:	89 ce                	mov    %ecx,%esi
    8a22:	48 89 c7             	mov    %rax,%rdi
    8a25:	e8 b4 d8 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8a2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a2e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    IncompatibleDisplayKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorIncompatibleDisplayKHR ), message ) {}
    8a32:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8a36:	48 89 c6             	mov    %rax,%rsi
    8a39:	48 89 d7             	mov    %rdx,%rdi
    8a3c:	48 89 d0             	mov    %rdx,%rax
    8a3f:	48 89 c2             	mov    %rax,%rdx
    8a42:	48 89 df             	mov    %rbx,%rdi
    8a45:	e8 bc ed ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8a4a:	48 8d 15 27 79 00 00 	lea    0x7927(%rip),%rdx        # 10378 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    8a51:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a55:	48 89 10             	mov    %rdx,(%rax)
    8a58:	48 8d 15 41 79 00 00 	lea    0x7941(%rip),%rdx        # 103a0 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    8a5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a63:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8a67:	90                   	nop
    8a68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a6c:	c9                   	leave
    8a6d:	c3                   	ret

0000000000008a6e <_ZN2vk24ValidationFailedEXTErrorC1EPKc>:
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8a6e:	55                   	push   %rbp
    8a6f:	48 89 e5             	mov    %rsp,%rbp
    8a72:	53                   	push   %rbx
    8a73:	48 83 ec 38          	sub    $0x38,%rsp
    8a77:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8a7b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8a7f:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8a83:	c7 45 ec 07 0b 65 c4 	movl   $0xc4650b07,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8a8a:	0f b6 05 27 89 00 00 	movzbl 0x8927(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8a91:	84 c0                	test   %al,%al
    8a93:	0f 94 c0             	sete   %al
    8a96:	84 c0                	test   %al,%al
    8a98:	74 4a                	je     8ae4 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8a9a:	48 8d 05 17 89 00 00 	lea    0x8917(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8aa1:	48 89 c7             	mov    %rax,%rdi
    8aa4:	e8 d7 c7 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8aa9:	85 c0                	test   %eax,%eax
    8aab:	0f 95 c0             	setne  %al
    8aae:	84 c0                	test   %al,%al
    8ab0:	74 32                	je     8ae4 <_ZN2vk24ValidationFailedEXTErrorC1EPKc+0x76>
    8ab2:	48 8d 05 87 86 00 00 	lea    0x8687(%rip),%rax        # 11140 <__dso_handle>
    8ab9:	48 89 c2             	mov    %rax,%rdx
    8abc:	48 8d 05 85 86 00 00 	lea    0x8685(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8ac3:	48 89 c6             	mov    %rax,%rsi
    8ac6:	48 8d 05 27 25 00 00 	lea    0x2527(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8acd:	48 89 c7             	mov    %rax,%rdi
    8ad0:	e8 5b c6 ff ff       	call   5130 <__cxa_atexit@plt>
    8ad5:	48 8d 05 dc 88 00 00 	lea    0x88dc(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8adc:	48 89 c7             	mov    %rax,%rdi
    8adf:	e8 cc c5 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8ae4:	48 8d 15 5d 86 00 00 	lea    0x865d(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8aeb:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8aee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8af2:	89 ce                	mov    %ecx,%esi
    8af4:	48 89 c7             	mov    %rax,%rdi
    8af7:	e8 e2 d7 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8afc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b00:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ValidationFailedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorValidationFailedEXT ), message ) {}
    8b04:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8b08:	48 89 c6             	mov    %rax,%rsi
    8b0b:	48 89 d7             	mov    %rdx,%rdi
    8b0e:	48 89 d0             	mov    %rdx,%rax
    8b11:	48 89 c2             	mov    %rax,%rdx
    8b14:	48 89 df             	mov    %rbx,%rdi
    8b17:	e8 ea ec ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8b1c:	48 8d 15 05 78 00 00 	lea    0x7805(%rip),%rdx        # 10328 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    8b23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8b27:	48 89 10             	mov    %rdx,(%rax)
    8b2a:	48 8d 15 1f 78 00 00 	lea    0x781f(%rip),%rdx        # 10350 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    8b31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8b35:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8b39:	90                   	nop
    8b3a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b3e:	c9                   	leave
    8b3f:	c3                   	ret

0000000000008b40 <_ZN2vk20InvalidShaderNVErrorC1EPKc>:
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8b40:	55                   	push   %rbp
    8b41:	48 89 e5             	mov    %rsp,%rbp
    8b44:	53                   	push   %rbx
    8b45:	48 83 ec 38          	sub    $0x38,%rsp
    8b49:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8b4d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8b51:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8b55:	c7 45 ec 20 07 65 c4 	movl   $0xc4650720,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8b5c:	0f b6 05 55 88 00 00 	movzbl 0x8855(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b63:	84 c0                	test   %al,%al
    8b65:	0f 94 c0             	sete   %al
    8b68:	84 c0                	test   %al,%al
    8b6a:	74 4a                	je     8bb6 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8b6c:	48 8d 05 45 88 00 00 	lea    0x8845(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8b73:	48 89 c7             	mov    %rax,%rdi
    8b76:	e8 05 c7 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8b7b:	85 c0                	test   %eax,%eax
    8b7d:	0f 95 c0             	setne  %al
    8b80:	84 c0                	test   %al,%al
    8b82:	74 32                	je     8bb6 <_ZN2vk20InvalidShaderNVErrorC1EPKc+0x76>
    8b84:	48 8d 05 b5 85 00 00 	lea    0x85b5(%rip),%rax        # 11140 <__dso_handle>
    8b8b:	48 89 c2             	mov    %rax,%rdx
    8b8e:	48 8d 05 b3 85 00 00 	lea    0x85b3(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8b95:	48 89 c6             	mov    %rax,%rsi
    8b98:	48 8d 05 55 24 00 00 	lea    0x2455(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8b9f:	48 89 c7             	mov    %rax,%rdi
    8ba2:	e8 89 c5 ff ff       	call   5130 <__cxa_atexit@plt>
    8ba7:	48 8d 05 0a 88 00 00 	lea    0x880a(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8bae:	48 89 c7             	mov    %rax,%rdi
    8bb1:	e8 fa c4 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8bb6:	48 8d 15 8b 85 00 00 	lea    0x858b(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8bbd:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8bc0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8bc4:	89 ce                	mov    %ecx,%esi
    8bc6:	48 89 c7             	mov    %rax,%rdi
    8bc9:	e8 10 d7 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8bce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bd2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    InvalidShaderNVError( char const * message ) : SystemError( make_error_code( Result::eErrorInvalidShaderNV ), message ) {}
    8bd6:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8bda:	48 89 c6             	mov    %rax,%rsi
    8bdd:	48 89 d7             	mov    %rdx,%rdi
    8be0:	48 89 d0             	mov    %rdx,%rax
    8be3:	48 89 c2             	mov    %rax,%rdx
    8be6:	48 89 df             	mov    %rbx,%rdi
    8be9:	e8 18 ec ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8bee:	48 8d 15 e3 76 00 00 	lea    0x76e3(%rip),%rdx        # 102d8 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    8bf5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8bf9:	48 89 10             	mov    %rdx,(%rax)
    8bfc:	48 8d 15 fd 76 00 00 	lea    0x76fd(%rip),%rdx        # 10300 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    8c03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8c07:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8c0b:	90                   	nop
    8c0c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c10:	c9                   	leave
    8c11:	c3                   	ret

0000000000008c12 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc>:
    InvalidDrmFormatModifierPlaneLayoutEXTError( char const * message )
    8c12:	55                   	push   %rbp
    8c13:	48 89 e5             	mov    %rsp,%rbp
    8c16:	53                   	push   %rbx
    8c17:	48 83 ec 38          	sub    $0x38,%rsp
    8c1b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8c1f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8c23:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8c27:	c7 45 ec d0 cc 62 c4 	movl   $0xc462ccd0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8c2e:	0f b6 05 83 87 00 00 	movzbl 0x8783(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c35:	84 c0                	test   %al,%al
    8c37:	0f 94 c0             	sete   %al
    8c3a:	84 c0                	test   %al,%al
    8c3c:	74 4a                	je     8c88 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8c3e:	48 8d 05 73 87 00 00 	lea    0x8773(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c45:	48 89 c7             	mov    %rax,%rdi
    8c48:	e8 33 c6 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8c4d:	85 c0                	test   %eax,%eax
    8c4f:	0f 95 c0             	setne  %al
    8c52:	84 c0                	test   %al,%al
    8c54:	74 32                	je     8c88 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorC1EPKc+0x76>
    8c56:	48 8d 05 e3 84 00 00 	lea    0x84e3(%rip),%rax        # 11140 <__dso_handle>
    8c5d:	48 89 c2             	mov    %rax,%rdx
    8c60:	48 8d 05 e1 84 00 00 	lea    0x84e1(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8c67:	48 89 c6             	mov    %rax,%rsi
    8c6a:	48 8d 05 83 23 00 00 	lea    0x2383(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8c71:	48 89 c7             	mov    %rax,%rdi
    8c74:	e8 b7 c4 ff ff       	call   5130 <__cxa_atexit@plt>
    8c79:	48 8d 05 38 87 00 00 	lea    0x8738(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8c80:	48 89 c7             	mov    %rax,%rdi
    8c83:	e8 28 c4 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8c88:	48 8d 15 b9 84 00 00 	lea    0x84b9(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8c8f:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8c92:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8c96:	89 ce                	mov    %ecx,%esi
    8c98:	48 89 c7             	mov    %rax,%rdi
    8c9b:	e8 3e d6 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8ca0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ca4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
      : SystemError( make_error_code( Result::eErrorInvalidDrmFormatModifierPlaneLayoutEXT ), message )
    8ca8:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8cac:	48 89 c6             	mov    %rax,%rsi
    8caf:	48 89 d7             	mov    %rdx,%rdi
    8cb2:	48 89 d0             	mov    %rdx,%rax
    8cb5:	48 89 c2             	mov    %rax,%rdx
    8cb8:	48 89 df             	mov    %rbx,%rdi
    8cbb:	e8 46 eb ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8cc0:	48 8d 15 c1 75 00 00 	lea    0x75c1(%rip),%rdx        # 10288 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    8cc7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8ccb:	48 89 10             	mov    %rdx,(%rax)
    8cce:	48 8d 15 db 75 00 00 	lea    0x75db(%rip),%rdx        # 102b0 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    8cd5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8cd9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    }
    8cdd:	90                   	nop
    8cde:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ce2:	c9                   	leave
    8ce3:	c3                   	ret

0000000000008ce4 <_ZN2vk20NotPermittedKHRErrorC1EPKc>:
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8ce4:	55                   	push   %rbp
    8ce5:	48 89 e5             	mov    %rsp,%rbp
    8ce8:	53                   	push   %rbx
    8ce9:	48 83 ec 38          	sub    $0x38,%rsp
    8ced:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8cf1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8cf5:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8cf9:	c7 45 ec 4f 8e 62 c4 	movl   $0xc4628e4f,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8d00:	0f b6 05 b1 86 00 00 	movzbl 0x86b1(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d07:	84 c0                	test   %al,%al
    8d09:	0f 94 c0             	sete   %al
    8d0c:	84 c0                	test   %al,%al
    8d0e:	74 4a                	je     8d5a <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8d10:	48 8d 05 a1 86 00 00 	lea    0x86a1(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d17:	48 89 c7             	mov    %rax,%rdi
    8d1a:	e8 61 c5 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8d1f:	85 c0                	test   %eax,%eax
    8d21:	0f 95 c0             	setne  %al
    8d24:	84 c0                	test   %al,%al
    8d26:	74 32                	je     8d5a <_ZN2vk20NotPermittedKHRErrorC1EPKc+0x76>
    8d28:	48 8d 05 11 84 00 00 	lea    0x8411(%rip),%rax        # 11140 <__dso_handle>
    8d2f:	48 89 c2             	mov    %rax,%rdx
    8d32:	48 8d 05 0f 84 00 00 	lea    0x840f(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8d39:	48 89 c6             	mov    %rax,%rsi
    8d3c:	48 8d 05 b1 22 00 00 	lea    0x22b1(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8d43:	48 89 c7             	mov    %rax,%rdi
    8d46:	e8 e5 c3 ff ff       	call   5130 <__cxa_atexit@plt>
    8d4b:	48 8d 05 66 86 00 00 	lea    0x8666(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8d52:	48 89 c7             	mov    %rax,%rdi
    8d55:	e8 56 c3 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8d5a:	48 8d 15 e7 83 00 00 	lea    0x83e7(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8d61:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8d64:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8d68:	89 ce                	mov    %ecx,%esi
    8d6a:	48 89 c7             	mov    %rax,%rdi
    8d6d:	e8 6c d5 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8d72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8d76:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    NotPermittedKHRError( char const * message ) : SystemError( make_error_code( Result::eErrorNotPermittedKHR ), message ) {}
    8d7a:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8d7e:	48 89 c6             	mov    %rax,%rsi
    8d81:	48 89 d7             	mov    %rdx,%rdi
    8d84:	48 89 d0             	mov    %rdx,%rax
    8d87:	48 89 c2             	mov    %rax,%rdx
    8d8a:	48 89 df             	mov    %rbx,%rdi
    8d8d:	e8 74 ea ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8d92:	48 8d 15 9f 74 00 00 	lea    0x749f(%rip),%rdx        # 10238 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    8d99:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8d9d:	48 89 10             	mov    %rdx,(%rax)
    8da0:	48 8d 15 b9 74 00 00 	lea    0x74b9(%rip),%rdx        # 10260 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    8da7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8dab:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8daf:	90                   	nop
    8db0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8db4:	c9                   	leave
    8db5:	c3                   	ret

0000000000008db6 <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc>:
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8db6:	55                   	push   %rbp
    8db7:	48 89 e5             	mov    %rsp,%rbp
    8dba:	53                   	push   %rbx
    8dbb:	48 83 ec 38          	sub    $0x38,%rsp
    8dbf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8dc3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    8dc7:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    8dcb:	c7 45 ec b0 0d 60 c4 	movl   $0xc4600db0,-0x14(%rbp)
    static ErrorCategoryImpl instance;
    8dd2:	0f b6 05 df 85 00 00 	movzbl 0x85df(%rip),%eax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8dd9:	84 c0                	test   %al,%al
    8ddb:	0f 94 c0             	sete   %al
    8dde:	84 c0                	test   %al,%al
    8de0:	74 4a                	je     8e2c <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8de2:	48 8d 05 cf 85 00 00 	lea    0x85cf(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8de9:	48 89 c7             	mov    %rax,%rdi
    8dec:	e8 8f c4 ff ff       	call   5280 <__cxa_guard_acquire@plt>
    8df1:	85 c0                	test   %eax,%eax
    8df3:	0f 95 c0             	setne  %al
    8df6:	84 c0                	test   %al,%al
    8df8:	74 32                	je     8e2c <_ZN2vk28CompressionExhaustedEXTErrorC1EPKc+0x76>
    8dfa:	48 8d 05 3f 83 00 00 	lea    0x833f(%rip),%rax        # 11140 <__dso_handle>
    8e01:	48 89 c2             	mov    %rax,%rdx
    8e04:	48 8d 05 3d 83 00 00 	lea    0x833d(%rip),%rax        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    8e0b:	48 89 c6             	mov    %rax,%rsi
    8e0e:	48 8d 05 df 21 00 00 	lea    0x21df(%rip),%rax        # aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    8e15:	48 89 c7             	mov    %rax,%rdi
    8e18:	e8 13 c3 ff ff       	call   5130 <__cxa_atexit@plt>
    8e1d:	48 8d 05 94 85 00 00 	lea    0x8594(%rip),%rax        # 113b8 <_ZGVZN2vk13errorCategoryEvE8instance>
    8e24:	48 89 c7             	mov    %rax,%rdi
    8e27:	e8 84 c2 ff ff       	call   50b0 <__cxa_guard_release@plt>
    return instance;
    8e2c:	48 8d 15 15 83 00 00 	lea    0x8315(%rip),%rdx        # 11148 <_ZZN2vk13errorCategoryEvE8instance>
    return std::error_code( static_cast<int>( e ), errorCategory() );
    8e33:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    8e36:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8e3a:	89 ce                	mov    %ecx,%esi
    8e3c:	48 89 c7             	mov    %rax,%rdi
    8e3f:	e8 9a d4 ff ff       	call   62de <_ZNSt10error_codeC1EiRKNSt3_V214error_categoryE>
    8e44:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e48:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    CompressionExhaustedEXTError( char const * message ) : SystemError( make_error_code( Result::eErrorCompressionExhaustedEXT ), message ) {}
    8e4c:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    8e50:	48 89 c6             	mov    %rax,%rsi
    8e53:	48 89 d7             	mov    %rdx,%rdi
    8e56:	48 89 d0             	mov    %rdx,%rax
    8e59:	48 89 c2             	mov    %rax,%rdx
    8e5c:	48 89 df             	mov    %rbx,%rdi
    8e5f:	e8 a2 e9 ff ff       	call   7806 <_ZN2vk11SystemErrorC1ESt10error_codePKc>
    8e64:	48 8d 15 7d 73 00 00 	lea    0x737d(%rip),%rdx        # 101e8 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    8e6b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e6f:	48 89 10             	mov    %rdx,(%rax)
    8e72:	48 8d 15 97 73 00 00 	lea    0x7397(%rip),%rdx        # 10210 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    8e79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8e7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8e81:	90                   	nop
    8e82:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e86:	c9                   	leave
    8e87:	c3                   	ret

0000000000008e88 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1ES1_>:
    VULKAN_HPP_CONSTEXPR Flags( BitType bit ) VULKAN_HPP_NOEXCEPT : m_mask( static_cast<MaskType>( bit ) ) {}
    8e88:	55                   	push   %rbp
    8e89:	48 89 e5             	mov    %rsp,%rbp
    8e8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e90:	89 75 f4             	mov    %esi,-0xc(%rbp)
    8e93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e97:	8b 55 f4             	mov    -0xc(%rbp),%edx
    8e9a:	89 10                	mov    %edx,(%rax)
    8e9c:	90                   	nop
    8e9d:	5d                   	pop    %rbp
    8e9e:	c3                   	ret

0000000000008e9f <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>:
    }

#if __cplusplus >= 202002L
  template<typename _Tp, typename... _Args>
    constexpr auto
    construct_at(_Tp* __location, _Args&&... __args)
    8e9f:	55                   	push   %rbp
    8ea0:	48 89 e5             	mov    %rsp,%rbp
    8ea3:	53                   	push   %rbx
    8ea4:	48 83 ec 18          	sub    $0x18,%rsp
    8ea8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8eac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    noexcept(noexcept(::new((void*)0) _Tp(std::declval<_Args>()...)))
    -> decltype(::new((void*)0) _Tp(std::declval<_Args>()...))
    { return ::new((void*)__location) _Tp(std::forward<_Args>(__args)...); }
    8eb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8eb4:	48 89 c6             	mov    %rax,%rsi
    8eb7:	bf 01 00 00 00       	mov    $0x1,%edi
    8ebc:	e8 c9 d2 ff ff       	call   618a <_ZnwmPv>
    8ec1:	48 89 c3             	mov    %rax,%rbx
    8ec4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ec8:	48 89 c7             	mov    %rax,%rdi
    8ecb:	e8 27 05 00 00       	call   93f7 <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>
    8ed0:	0f b6 00             	movzbl (%rax),%eax
    8ed3:	88 03                	mov    %al,(%rbx)
    8ed5:	48 89 d8             	mov    %rbx,%rax
    8ed8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8edc:	c9                   	leave
    8edd:	c3                   	ret

0000000000008ede <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    8ede:	55                   	push   %rbp
    8edf:	48 89 e5             	mov    %rsp,%rbp
    8ee2:	48 83 ec 20          	sub    $0x20,%rsp
    8ee6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    8eea:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    8ef1:	00 
      while (!eq(__p[__i], char_type()))
    8ef2:	eb 05                	jmp    8ef9 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    8ef4:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    8ef9:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    8efd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f05:	48 01 c2             	add    %rax,%rdx
    8f08:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    8f0c:	48 89 c6             	mov    %rax,%rsi
    8f0f:	48 89 d7             	mov    %rdx,%rdi
    8f12:	e8 ee 04 00 00       	call   9405 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    8f17:	83 f0 01             	xor    $0x1,%eax
    8f1a:	84 c0                	test   %al,%al
    8f1c:	75 d6                	jne    8ef4 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    8f1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8f22:	c9                   	leave
    8f23:	c3                   	ret

0000000000008f24 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm>:
    char_traits<_CharT>::
    8f24:	55                   	push   %rbp
    8f25:	48 89 e5             	mov    %rsp,%rbp
    8f28:	48 83 ec 30          	sub    $0x30,%rsp
    8f2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f34:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__n == 0)
    8f38:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    8f3d:	75 09                	jne    8f48 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x24>
	return __s1;
    8f3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f43:	e9 8b 00 00 00       	jmp    8fd3 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      if (std::__is_constant_evaluated())
    8f48:	e8 27 d2 ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    8f4d:	84 c0                	test   %al,%al
    8f4f:	74 67                	je     8fb8 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x94>
	  if (__s1 == __s2) // unlikely, but saves a lot of work
    8f51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f55:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    8f59:	75 06                	jne    8f61 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x3d>
	    return __s1;
    8f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f5f:	eb 72                	jmp    8fd3 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
	  char_type* __tmp = new char_type[__n];
    8f61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f65:	48 89 c7             	mov    %rax,%rdi
    8f68:	e8 c3 c0 ff ff       	call   5030 <_Znam@plt>
    8f6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  copy(__tmp, __s2, __n);
    8f71:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f75:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    8f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f7d:	48 89 ce             	mov    %rcx,%rsi
    8f80:	48 89 c7             	mov    %rax,%rdi
    8f83:	e8 4e 00 00 00       	call   8fd6 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  copy(__s1, __tmp, __n);
    8f88:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f8c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8f90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f94:	48 89 ce             	mov    %rcx,%rsi
    8f97:	48 89 c7             	mov    %rax,%rdi
    8f9a:	e8 37 00 00 00       	call   8fd6 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>
	  delete[] __tmp;
    8f9f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8fa4:	74 0c                	je     8fb2 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0x8e>
    8fa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8faa:	48 89 c7             	mov    %rax,%rdi
    8fad:	e8 0e c2 ff ff       	call   51c0 <_ZdaPv@plt>
	  return __s1;
    8fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fb6:	eb 1b                	jmp    8fd3 <_ZN9__gnu_cxx11char_traitsIcE4moveEPcPKcm+0xaf>
      __builtin_memmove(__s1, __s2, __n * sizeof(char_type));
    8fb8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8fbc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    8fc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fc4:	48 89 ce             	mov    %rcx,%rsi
    8fc7:	48 89 c7             	mov    %rax,%rdi
    8fca:	e8 51 c2 ff ff       	call   5220 <memmove@plt>
      return __s1;
    8fcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    8fd3:	c9                   	leave
    8fd4:	c3                   	ret
    8fd5:	90                   	nop

0000000000008fd6 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm>:
    char_traits<_CharT>::
    8fd6:	55                   	push   %rbp
    8fd7:	48 89 e5             	mov    %rsp,%rbp
    8fda:	48 83 ec 30          	sub    $0x30,%rsp
    8fde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8fe2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8fe6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (std::__is_constant_evaluated())
    8fea:	e8 85 d1 ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    8fef:	84 c0                	test   %al,%al
    8ff1:	74 40                	je     9033 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x5d>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    8ff3:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    8ffa:	00 
    8ffb:	eb 26                	jmp    9023 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x4d>
	    std::construct_at(__s1 + __i, __s2[__i]);
    8ffd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9005:	48 01 c2             	add    %rax,%rdx
    9008:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    900c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9010:	48 01 c8             	add    %rcx,%rax
    9013:	48 89 d6             	mov    %rdx,%rsi
    9016:	48 89 c7             	mov    %rax,%rdi
    9019:	e8 81 fe ff ff       	call   8e9f <_ZSt12construct_atIcJRKcEEDTgsnwcvPvLi0E_T_pispcl7declvalIT0_EEEEPS3_DpOS4_>
	  for (std::size_t __i = 0; __i < __n; ++__i)
    901e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    9023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9027:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    902b:	72 d0                	jb     8ffd <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x27>
	  return __s1;
    902d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9031:	eb 21                	jmp    9054 <_ZN9__gnu_cxx11char_traitsIcE4copyEPcPKcm+0x7e>
      __builtin_memcpy(__s1, __s2, __n * sizeof(char_type));
    9033:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9037:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    903b:	48 89 d1             	mov    %rdx,%rcx
    903e:	48 89 c6             	mov    %rax,%rsi
    9041:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9045:	48 89 c2             	mov    %rax,%rdx
    9048:	48 89 cf             	mov    %rcx,%rdi
    904b:	e8 c0 c0 ff ff       	call   5110 <memcpy@plt>
      return __s1;
    9050:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    9054:	c9                   	leave
    9055:	c3                   	ret

0000000000009056 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
      ~basic_string()
    9056:	55                   	push   %rbp
    9057:	48 89 e5             	mov    %rsp,%rbp
    905a:	48 83 ec 10          	sub    $0x10,%rsp
    905e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_dispose(); }
    9062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9066:	48 89 c7             	mov    %rax,%rdi
    9069:	e8 00 04 00 00       	call   946e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    906e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9072:	48 89 c7             	mov    %rax,%rdi
    9075:	e8 c4 d5 ff ff       	call   663e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    907a:	90                   	nop
    907b:	c9                   	leave
    907c:	c3                   	ret
    907d:	90                   	nop

000000000000907e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>:
      basic_string(basic_string&& __str) noexcept
    907e:	55                   	push   %rbp
    907f:	48 89 e5             	mov    %rsp,%rbp
    9082:	41 54                	push   %r12
    9084:	53                   	push   %rbx
    9085:	48 83 ec 10          	sub    $0x10,%rsp
    9089:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    908d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
    9091:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9095:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9099:	48 89 c7             	mov    %rax,%rdi
    909c:	e8 07 04 00 00       	call   94a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    90a1:	48 89 c7             	mov    %rax,%rdi
    90a4:	e8 11 d7 ff ff       	call   67ba <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_>
    90a9:	49 89 c4             	mov    %rax,%r12
    90ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90b0:	48 89 c7             	mov    %rax,%rdi
    90b3:	e8 62 d6 ff ff       	call   671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    90b8:	4c 89 e2             	mov    %r12,%rdx
    90bb:	48 89 c6             	mov    %rax,%rsi
    90be:	48 89 df             	mov    %rbx,%rdi
    90c1:	e8 b4 d6 ff ff       	call   677a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
	if (__str._M_is_local())
    90c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90ca:	48 89 c7             	mov    %rax,%rdi
    90cd:	e8 e4 03 00 00       	call   94b6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    90d2:	84 c0                	test   %al,%al
    90d4:	74 2d                	je     9103 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0x85>
			      __str.length() + 1);
    90d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90da:	48 89 c7             	mov    %rax,%rdi
    90dd:	e8 ae 00 00 00       	call   9190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
	    traits_type::copy(_M_local_buf, __str._M_local_buf,
    90e2:	48 8d 50 01          	lea    0x1(%rax),%rdx
    90e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90ea:	48 8d 48 10          	lea    0x10(%rax),%rcx
    90ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90f2:	48 83 c0 10          	add    $0x10,%rax
    90f6:	48 89 ce             	mov    %rcx,%rsi
    90f9:	48 89 c7             	mov    %rax,%rdi
    90fc:	e8 68 d1 ff ff       	call   6269 <_ZNSt11char_traitsIcE4copyEPcPKcm>
    9101:	eb 35                	jmp    9138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_+0xba>
	    _M_data(__str._M_data());
    9103:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9107:	48 89 c7             	mov    %rax,%rdi
    910a:	e8 17 03 00 00       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    910f:	48 89 c2             	mov    %rax,%rdx
    9112:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9116:	48 89 d6             	mov    %rdx,%rsi
    9119:	48 89 c7             	mov    %rax,%rdi
    911c:	e8 c9 03 00 00       	call   94ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__str._M_allocated_capacity);
    9121:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9125:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9129:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    912d:	48 89 d6             	mov    %rdx,%rsi
    9130:	48 89 c7             	mov    %rax,%rdi
    9133:	e8 cc 03 00 00       	call   9504 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
	_M_length(__str.length());
    9138:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    913c:	48 89 c7             	mov    %rax,%rdi
    913f:	e8 4c 00 00 00       	call   9190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9144:	48 89 c2             	mov    %rax,%rdx
    9147:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    914b:	48 89 d6             	mov    %rdx,%rsi
    914e:	48 89 c7             	mov    %rax,%rdi
    9151:	e8 ca 03 00 00       	call   9520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	__str._M_data(__str._M_local_data());
    9156:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    915a:	48 89 c7             	mov    %rax,%rdi
    915d:	e8 b8 d5 ff ff       	call   671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9162:	48 89 c2             	mov    %rax,%rdx
    9165:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9169:	48 89 d6             	mov    %rdx,%rsi
    916c:	48 89 c7             	mov    %rax,%rdi
    916f:	e8 76 03 00 00       	call   94ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	__str._M_set_length(0);
    9174:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9178:	be 00 00 00 00       	mov    $0x0,%esi
    917d:	48 89 c7             	mov    %rax,%rdi
    9180:	e8 07 01 00 00       	call   928c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    9185:	90                   	nop
    9186:	48 83 c4 10          	add    $0x10,%rsp
    918a:	5b                   	pop    %rbx
    918b:	41 5c                	pop    %r12
    918d:	5d                   	pop    %rbp
    918e:	c3                   	ret
    918f:	90                   	nop

0000000000009190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>:

      ///  Returns the number of characters in the string, not including any
      ///  null-termination.
      _GLIBCXX20_CONSTEXPR
      size_type
      length() const _GLIBCXX_NOEXCEPT
    9190:	55                   	push   %rbp
    9191:	48 89 e5             	mov    %rsp,%rbp
    9194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_string_length; }
    9198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    919c:	48 8b 40 08          	mov    0x8(%rax),%rax
    91a0:	5d                   	pop    %rbp
    91a1:	c3                   	ret

00000000000091a2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    91a2:	55                   	push   %rbp
    91a3:	48 89 e5             	mov    %rsp,%rbp
    91a6:	48 83 ec 20          	sub    $0x20,%rsp
    91aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
    { return std::move(__rhs.insert(0, __lhs)); }
    91b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    91ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91be:	be 00 00 00 00       	mov    $0x0,%esi
    91c3:	48 89 c7             	mov    %rax,%rdi
    91c6:	e8 77 05 00 00       	call   9742 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>
    91cb:	48 89 c7             	mov    %rax,%rdi
    91ce:	e8 60 05 00 00       	call   9733 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    91d3:	48 89 c2             	mov    %rax,%rdx
    91d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91da:	48 89 d6             	mov    %rdx,%rsi
    91dd:	48 89 c7             	mov    %rax,%rdi
    91e0:	e8 99 fe ff ff       	call   907e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    91e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91e9:	c9                   	leave
    91ea:	c3                   	ret
    91eb:	90                   	nop

00000000000091ec <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    91ec:	55                   	push   %rbp
    91ed:	48 89 e5             	mov    %rsp,%rbp
    91f0:	53                   	push   %rbx
    91f1:	48 83 ec 38          	sub    $0x38,%rsp
    91f5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    91f9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    91fd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    9201:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    9205:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9209:	48 89 c7             	mov    %rax,%rdi
    920c:	e8 09 d5 ff ff       	call   671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9211:	48 89 c1             	mov    %rax,%rcx
    9214:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9218:	48 89 c2             	mov    %rax,%rdx
    921b:	48 89 ce             	mov    %rcx,%rsi
    921e:	48 89 df             	mov    %rbx,%rdi
    9221:	e8 12 02 00 00       	call   9438 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>
	if (__s == 0)
    9226:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    922b:	75 0f                	jne    923c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    922d:	48 8d 05 ac 37 00 00 	lea    0x37ac(%rip),%rax        # c9e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3a8>
    9234:	48 89 c7             	mov    %rax,%rdi
    9237:	e8 94 be ff ff       	call   50d0 <_ZSt19__throw_logic_errorPKc@plt>
	const _CharT* __end = __s + traits_type::length(__s);
    923c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9240:	48 89 c7             	mov    %rax,%rdi
    9243:	e8 92 cf ff ff       	call   61da <_ZNSt11char_traitsIcE6lengthEPKc>
    9248:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    924c:	48 01 d0             	add    %rdx,%rax
    924f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    9253:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9257:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    925b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    925f:	48 89 ce             	mov    %rcx,%rsi
    9262:	48 89 c7             	mov    %rax,%rdi
    9265:	e8 16 03 00 00       	call   9580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    926a:	eb 1a                	jmp    9286 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    926c:	48 89 c3             	mov    %rax,%rbx
    926f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9273:	48 89 c7             	mov    %rax,%rdi
    9276:	e8 c3 d3 ff ff       	call   663e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    927b:	48 89 d8             	mov    %rbx,%rax
    927e:	48 89 c7             	mov    %rax,%rdi
    9281:	e8 da bf ff ff       	call   5260 <_Unwind_Resume@plt>
    9286:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    928a:	c9                   	leave
    928b:	c3                   	ret

000000000000928c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>:
      _M_set_length(size_type __n)
    928c:	55                   	push   %rbp
    928d:	48 89 e5             	mov    %rsp,%rbp
    9290:	48 83 ec 20          	sub    $0x20,%rsp
    9294:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9298:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_length(__n);
    929c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    92a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92a4:	48 89 d6             	mov    %rdx,%rsi
    92a7:	48 89 c7             	mov    %rax,%rdi
    92aa:	e8 71 02 00 00       	call   9520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>
	traits_type::assign(_M_data()[__n], _CharT());
    92af:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    92b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92b7:	48 89 c7             	mov    %rax,%rdi
    92ba:	e8 67 01 00 00       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    92bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    92c3:	48 01 c2             	add    %rax,%rdx
    92c6:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    92ca:	48 89 c6             	mov    %rax,%rsi
    92cd:	48 89 d7             	mov    %rdx,%rdi
    92d0:	e8 c7 ce ff ff       	call   619c <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    92d5:	90                   	nop
    92d6:	c9                   	leave
    92d7:	c3                   	ret

00000000000092d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc>:
      operator+=(const _CharT* __s)
    92d8:	55                   	push   %rbp
    92d9:	48 89 e5             	mov    %rsp,%rbp
    92dc:	48 83 ec 10          	sub    $0x10,%rsp
    92e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->append(__s); }
    92e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    92ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92f0:	48 89 d6             	mov    %rdx,%rsi
    92f3:	48 89 c7             	mov    %rax,%rdi
    92f6:	e8 b5 03 00 00       	call   96b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    92fb:	c9                   	leave
    92fc:	c3                   	ret
    92fd:	90                   	nop

00000000000092fe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm>:
      substr(size_type __pos = 0, size_type __n = npos) const
    92fe:	55                   	push   %rbp
    92ff:	48 89 e5             	mov    %rsp,%rbp
    9302:	48 83 ec 20          	sub    $0x20,%rsp
    9306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    930a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    930e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    9312:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
			    _M_check(__pos, "basic_string::substr"), __n); }
    9316:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    931a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    931e:	48 8d 15 ed 36 00 00 	lea    0x36ed(%rip),%rdx        # ca12 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3da>
    9325:	48 89 ce             	mov    %rcx,%rsi
    9328:	48 89 c7             	mov    %rax,%rdi
    932b:	e8 56 04 00 00       	call   9786 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
    9330:	48 89 c7             	mov    %rax,%rdi
    9333:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9337:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    933b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    933f:	48 89 d1             	mov    %rdx,%rcx
    9342:	48 89 fa             	mov    %rdi,%rdx
    9345:	48 89 c7             	mov    %rax,%rdi
    9348:	e8 99 04 00 00       	call   97e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_mm>
    934d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9351:	c9                   	leave
    9352:	c3                   	ret

0000000000009353 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
    { return std::move(__rhs.insert(0, 1, __lhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    9353:	55                   	push   %rbp
    9354:	48 89 e5             	mov    %rsp,%rbp
    9357:	48 83 ec 20          	sub    $0x20,%rsp
    935b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    935f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9363:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	      const _CharT* __rhs)
    { return std::move(__lhs.append(__rhs)); }
    9367:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    936b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    936f:	48 89 d6             	mov    %rdx,%rsi
    9372:	48 89 c7             	mov    %rax,%rdi
    9375:	e8 36 03 00 00       	call   96b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
    937a:	48 89 c7             	mov    %rax,%rdi
    937d:	e8 b1 03 00 00       	call   9733 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    9382:	48 89 c2             	mov    %rax,%rdx
    9385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9389:	48 89 d6             	mov    %rdx,%rsi
    938c:	48 89 c7             	mov    %rax,%rdi
    938f:	e8 ea fc ff ff       	call   907e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_>
    9394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9398:	c9                   	leave
    9399:	c3                   	ret

000000000000939a <_ZNK2vk5FlagsINS_22InstanceCreateFlagBitsEEntEv>:
    VULKAN_HPP_CONSTEXPR bool operator!() const VULKAN_HPP_NOEXCEPT
    939a:	55                   	push   %rbp
    939b:	48 89 e5             	mov    %rsp,%rbp
    939e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return !m_mask;
    93a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a6:	8b 00                	mov    (%rax),%eax
    93a8:	85 c0                	test   %eax,%eax
    93aa:	0f 94 c0             	sete   %al
    }
    93ad:	5d                   	pop    %rbp
    93ae:	c3                   	ret
    93af:	90                   	nop

00000000000093b0 <_ZNK2vk5FlagsINS_22InstanceCreateFlagBitsEEanERKS2_>:
    VULKAN_HPP_CONSTEXPR Flags<BitType> operator&( Flags<BitType> const & rhs ) const VULKAN_HPP_NOEXCEPT
    93b0:	55                   	push   %rbp
    93b1:	48 89 e5             	mov    %rsp,%rbp
    93b4:	48 83 ec 20          	sub    $0x20,%rsp
    93b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    93bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return Flags<BitType>( m_mask & rhs.m_mask );
    93c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93c4:	8b 10                	mov    (%rax),%edx
    93c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    93ca:	8b 00                	mov    (%rax),%eax
    93cc:	21 c2                	and    %eax,%edx
    93ce:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
    93d2:	89 d6                	mov    %edx,%esi
    93d4:	48 89 c7             	mov    %rax,%rdi
    93d7:	e8 e4 04 00 00       	call   98c0 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ej>
    93dc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    }
    93df:	c9                   	leave
    93e0:	c3                   	ret
    93e1:	90                   	nop

00000000000093e2 <_ZNK2vk5FlagsINS_22InstanceCreateFlagBitsEEcvbEv>:
    explicit VULKAN_HPP_CONSTEXPR operator bool() const VULKAN_HPP_NOEXCEPT
    93e2:	55                   	push   %rbp
    93e3:	48 89 e5             	mov    %rsp,%rbp
    93e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return !!m_mask;
    93ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ee:	8b 00                	mov    (%rax),%eax
    93f0:	85 c0                	test   %eax,%eax
    93f2:	0f 95 c0             	setne  %al
    }
    93f5:	5d                   	pop    %rbp
    93f6:	c3                   	ret

00000000000093f7 <_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    93f7:	55                   	push   %rbp
    93f8:	48 89 e5             	mov    %rsp,%rbp
    93fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    93ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9403:	5d                   	pop    %rbp
    9404:	c3                   	ret

0000000000009405 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    9405:	55                   	push   %rbp
    9406:	48 89 e5             	mov    %rsp,%rbp
    9409:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    940d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    9411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9415:	0f b6 10             	movzbl (%rax),%edx
    9418:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    941c:	0f b6 00             	movzbl (%rax),%eax
    941f:	38 c2                	cmp    %al,%dl
    9421:	0f 94 c0             	sete   %al
    9424:	5d                   	pop    %rbp
    9425:	c3                   	ret

0000000000009426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>:
      _M_data() const
    9426:	55                   	push   %rbp
    9427:	48 89 e5             	mov    %rsp,%rbp
    942a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus._M_p; }
    942e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9432:	48 8b 00             	mov    (%rax),%rax
    9435:	5d                   	pop    %rbp
    9436:	c3                   	ret
    9437:	90                   	nop

0000000000009438 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_>:
	_Alloc_hider(pointer __dat, const _Alloc& __a)
    9438:	55                   	push   %rbp
    9439:	48 89 e5             	mov    %rsp,%rbp
    943c:	48 83 ec 20          	sub    $0x20,%rsp
    9440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9444:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9448:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: allocator_type(__a), _M_p(__dat) { }
    944c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9454:	48 89 d6             	mov    %rdx,%rsi
    9457:	48 89 c7             	mov    %rax,%rdi
    945a:	e8 91 bd ff ff       	call   51f0 <_ZNSaIcEC2ERKS_@plt>
    945f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9463:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9467:	48 89 10             	mov    %rdx,(%rax)
    946a:	90                   	nop
    946b:	c9                   	leave
    946c:	c3                   	ret
    946d:	90                   	nop

000000000000946e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
      _M_dispose()
    946e:	55                   	push   %rbp
    946f:	48 89 e5             	mov    %rsp,%rbp
    9472:	48 83 ec 10          	sub    $0x10,%rsp
    9476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (!_M_is_local())
    947a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947e:	48 89 c7             	mov    %rax,%rdi
    9481:	e8 30 00 00 00       	call   94b6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    9486:	83 f0 01             	xor    $0x1,%eax
    9489:	84 c0                	test   %al,%al
    948b:	74 17                	je     94a4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0x36>
	  _M_destroy(_M_allocated_capacity);
    948d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9491:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9495:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9499:	48 89 d6             	mov    %rdx,%rsi
    949c:	48 89 c7             	mov    %rax,%rdi
    949f:	e8 fc 04 00 00       	call   99a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>
      }
    94a4:	90                   	nop
    94a5:	c9                   	leave
    94a6:	c3                   	ret
    94a7:	90                   	nop

00000000000094a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator()
    94a8:	55                   	push   %rbp
    94a9:	48 89 e5             	mov    %rsp,%rbp
    94ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    94b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b4:	5d                   	pop    %rbp
    94b5:	c3                   	ret

00000000000094b6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>:
      _M_is_local() const
    94b6:	55                   	push   %rbp
    94b7:	48 89 e5             	mov    %rsp,%rbp
    94ba:	53                   	push   %rbx
    94bb:	48 83 ec 18          	sub    $0x18,%rsp
    94bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return _M_data() == _M_local_data(); }
    94c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94c7:	48 89 c7             	mov    %rax,%rdi
    94ca:	e8 57 ff ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    94cf:	48 89 c3             	mov    %rax,%rbx
    94d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94d6:	48 89 c7             	mov    %rax,%rdi
    94d9:	e8 10 05 00 00       	call   99ee <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    94de:	48 39 c3             	cmp    %rax,%rbx
    94e1:	0f 94 c0             	sete   %al
    94e4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    94e8:	c9                   	leave
    94e9:	c3                   	ret

00000000000094ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>:
      _M_data(pointer __p)
    94ea:	55                   	push   %rbp
    94eb:	48 89 e5             	mov    %rsp,%rbp
    94ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_dataplus._M_p = __p; }
    94f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94fe:	48 89 10             	mov    %rdx,(%rax)
    9501:	90                   	nop
    9502:	5d                   	pop    %rbp
    9503:	c3                   	ret

0000000000009504 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>:
      _M_capacity(size_type __capacity)
    9504:	55                   	push   %rbp
    9505:	48 89 e5             	mov    %rsp,%rbp
    9508:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    950c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_allocated_capacity = __capacity; }
    9510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9514:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9518:	48 89 50 10          	mov    %rdx,0x10(%rax)
    951c:	90                   	nop
    951d:	5d                   	pop    %rbp
    951e:	c3                   	ret
    951f:	90                   	nop

0000000000009520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm>:
      _M_length(size_type __length)
    9520:	55                   	push   %rbp
    9521:	48 89 e5             	mov    %rsp,%rbp
    9524:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9528:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _M_string_length = __length; }
    952c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9530:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9534:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9538:	90                   	nop
    9539:	5d                   	pop    %rbp
    953a:	c3                   	ret
    953b:	90                   	nop

000000000000953c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    953c:	55                   	push   %rbp
    953d:	48 89 e5             	mov    %rsp,%rbp
    9540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9544:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    954c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9550:	48 89 10             	mov    %rdx,(%rax)
    9553:	90                   	nop
    9554:	5d                   	pop    %rbp
    9555:	c3                   	ret

0000000000009556 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    9556:	55                   	push   %rbp
    9557:	48 89 e5             	mov    %rsp,%rbp
    955a:	48 83 ec 10          	sub    $0x10,%rsp
    955e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9566:	48 8b 00             	mov    (%rax),%rax
    9569:	48 85 c0             	test   %rax,%rax
    956c:	74 0f                	je     957d <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    956e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9572:	48 8b 00             	mov    (%rax),%rax
    9575:	48 89 c7             	mov    %rax,%rdi
    9578:	e8 f1 fe ff ff       	call   946e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
    957d:	90                   	nop
    957e:	c9                   	leave
    957f:	c3                   	ret

0000000000009580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    9580:	55                   	push   %rbp
    9581:	48 89 e5             	mov    %rsp,%rbp
    9584:	48 83 ec 60          	sub    $0x60,%rsp
    9588:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    958c:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    9590:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    9594:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9598:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    959c:	48 89 d6             	mov    %rdx,%rsi
    959f:	48 89 c7             	mov    %rax,%rdi
    95a2:	e8 65 04 00 00       	call   9a0c <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    95a7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    95ab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    95af:	48 83 f8 0f          	cmp    $0xf,%rax
    95b3:	76 3f                	jbe    95f4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    95b5:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    95b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    95bd:	ba 00 00 00 00       	mov    $0x0,%edx
    95c2:	48 89 ce             	mov    %rcx,%rsi
    95c5:	48 89 c7             	mov    %rax,%rdi
    95c8:	e8 0b 03 00 00       	call   98d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    95cd:	48 89 c2             	mov    %rax,%rdx
    95d0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    95d4:	48 89 d6             	mov    %rdx,%rsi
    95d7:	48 89 c7             	mov    %rax,%rdi
    95da:	e8 0b ff ff ff       	call   94ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
	    _M_capacity(__dnew);
    95df:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    95e3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    95e7:	48 89 d6             	mov    %rdx,%rsi
    95ea:	48 89 c7             	mov    %rax,%rdi
    95ed:	e8 12 ff ff ff       	call   9504 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    95f2:	eb 5e                	jmp    9652 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xd2>
    95f4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    95f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (std::is_constant_evaluated())
    95fc:	e8 7e cb ff ff       	call   617f <_ZSt21is_constant_evaluatedv>
    9601:	84 c0                	test   %al,%al
    9603:	74 40                	je     9645 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc5>
	  for (_CharT& __c : _M_local_buf)
    9605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9609:	48 83 c0 10          	add    $0x10,%rax
    960d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9611:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9615:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9619:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    961d:	48 83 c0 10          	add    $0x10,%rax
    9621:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9625:	eb 14                	jmp    963b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xbb>
    9627:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    962b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	    __c = _CharT();
    962f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9633:	c6 00 00             	movb   $0x0,(%rax)
	  for (_CharT& __c : _M_local_buf)
    9636:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    963b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    963f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9643:	75 e2                	jne    9627 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa7>
	return _M_local_data();
    9645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9649:	48 89 c7             	mov    %rax,%rdi
    964c:	e8 c9 d0 ff ff       	call   671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    9651:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    9652:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9656:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    965a:	48 89 d6             	mov    %rdx,%rsi
    965d:	48 89 c7             	mov    %rax,%rdi
    9660:	e8 d7 fe ff ff       	call   953c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    9665:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9669:	48 89 c7             	mov    %rax,%rdi
    966c:	e8 b5 fd ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9671:	48 89 c1             	mov    %rax,%rcx
    9674:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9678:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    967c:	48 89 c6             	mov    %rax,%rsi
    967f:	48 89 cf             	mov    %rcx,%rdi
    9682:	e8 b6 03 00 00       	call   9a3d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>

	__guard._M_guarded = 0;
    9687:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    968e:	00 

	_M_set_length(__dnew);
    968f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9693:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9697:	48 89 d6             	mov    %rdx,%rsi
    969a:	48 89 c7             	mov    %rax,%rdi
    969d:	e8 ea fb ff ff       	call   928c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      }
    96a2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    96a6:	48 89 c7             	mov    %rax,%rdi
    96a9:	e8 a8 fe ff ff       	call   9556 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    96ae:	c9                   	leave
    96af:	c3                   	ret

00000000000096b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>:
      append(const _CharT* __s)
    96b0:	55                   	push   %rbp
    96b1:	48 89 e5             	mov    %rsp,%rbp
    96b4:	48 83 ec 20          	sub    $0x20,%rsp
    96b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    96bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const size_type __n = traits_type::length(__s);
    96c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96c4:	48 89 c7             	mov    %rax,%rdi
    96c7:	e8 0e cb ff ff       	call   61da <_ZNSt11char_traitsIcE6lengthEPKc>
    96cc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_check_length(size_type(0), __n, "basic_string::append");
    96d0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    96d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96d8:	48 8d 0d 48 33 00 00 	lea    0x3348(%rip),%rcx        # ca27 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3ef>
    96df:	be 00 00 00 00       	mov    $0x0,%esi
    96e4:	48 89 c7             	mov    %rax,%rdi
    96e7:	e8 94 03 00 00       	call   9a80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>
	return _M_append(__s, __n);
    96ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    96f0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    96f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96f8:	48 89 ce             	mov    %rcx,%rsi
    96fb:	48 89 c7             	mov    %rax,%rdi
    96fe:	e8 db 03 00 00       	call   9ade <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
      }
    9703:	c9                   	leave
    9704:	c3                   	ret
    9705:	90                   	nop

0000000000009706 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>:
      capacity() const _GLIBCXX_NOEXCEPT
    9706:	55                   	push   %rbp
    9707:	48 89 e5             	mov    %rsp,%rbp
    970a:	48 83 ec 10          	sub    $0x10,%rsp
    970e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _M_is_local() ? size_type(_S_local_capacity)
    9712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9716:	48 89 c7             	mov    %rax,%rdi
    9719:	e8 98 fd ff ff       	call   94b6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv>
    971e:	84 c0                	test   %al,%al
    9720:	74 07                	je     9729 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x23>
    9722:	b8 0f 00 00 00       	mov    $0xf,%eax
	                     : _M_allocated_capacity;
    9727:	eb 08                	jmp    9731 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv+0x2b>
	return _M_is_local() ? size_type(_S_local_capacity)
    9729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    972d:	48 8b 40 10          	mov    0x10(%rax),%rax
      }
    9731:	c9                   	leave
    9732:	c3                   	ret

0000000000009733 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    9733:	55                   	push   %rbp
    9734:	48 89 e5             	mov    %rsp,%rbp
    9737:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    973b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    973f:	5d                   	pop    %rbp
    9740:	c3                   	ret
    9741:	90                   	nop

0000000000009742 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc>:
      insert(size_type __pos, const _CharT* __s)
    9742:	55                   	push   %rbp
    9743:	48 89 e5             	mov    %rsp,%rbp
    9746:	48 83 ec 20          	sub    $0x20,%rsp
    974a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    974e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9752:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	return this->replace(__pos, size_type(0), __s,
    9756:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    975a:	48 89 c7             	mov    %rax,%rdi
    975d:	e8 78 ca ff ff       	call   61da <_ZNSt11char_traitsIcE6lengthEPKc>
    9762:	48 89 c1             	mov    %rax,%rcx
    9765:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9769:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    976d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9771:	49 89 c8             	mov    %rcx,%r8
    9774:	48 89 d1             	mov    %rdx,%rcx
    9777:	ba 00 00 00 00       	mov    $0x0,%edx
    977c:	48 89 c7             	mov    %rax,%rdi
    977f:	e8 24 04 00 00       	call   9ba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
      }
    9784:	c9                   	leave
    9785:	c3                   	ret

0000000000009786 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>:
      _M_check(size_type __pos, const char* __s) const
    9786:	55                   	push   %rbp
    9787:	48 89 e5             	mov    %rsp,%rbp
    978a:	48 83 ec 20          	sub    $0x20,%rsp
    978e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9792:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9796:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__pos > this->size())
    979a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    979e:	48 89 c7             	mov    %rax,%rdi
    97a1:	e8 26 cb ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    97a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    97aa:	0f 92 c0             	setb   %al
    97ad:	84 c0                	test   %al,%al
    97af:	74 2e                	je     97df <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc+0x59>
	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
    97b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b5:	48 89 c7             	mov    %rax,%rdi
    97b8:	e8 0f cb ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    97bd:	48 89 c1             	mov    %rax,%rcx
    97c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    97c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97c8:	48 89 c6             	mov    %rax,%rsi
    97cb:	48 8d 05 6e 32 00 00 	lea    0x326e(%rip),%rax        # ca40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x408>
    97d2:	48 89 c7             	mov    %rax,%rdi
    97d5:	b8 00 00 00 00       	mov    $0x0,%eax
    97da:	e8 21 ba ff ff       	call   5200 <_ZSt24__throw_out_of_range_fmtPKcz@plt>
	return __pos;
    97df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
      }
    97e3:	c9                   	leave
    97e4:	c3                   	ret
    97e5:	90                   	nop

00000000000097e6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_mm>:
      basic_string(const basic_string& __str, size_type __pos,
    97e6:	55                   	push   %rbp
    97e7:	48 89 e5             	mov    %rsp,%rbp
    97ea:	53                   	push   %rbx
    97eb:	48 83 ec 38          	sub    $0x38,%rsp
    97ef:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    97f3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    97f7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    97fb:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      : _M_dataplus(_M_local_data())
    97ff:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    9803:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    9807:	48 89 c7             	mov    %rax,%rdi
    980a:	e8 61 ba ff ff       	call   5270 <_ZNSaIcEC1Ev@plt>
    980f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9813:	48 89 c7             	mov    %rax,%rdi
    9816:	e8 ff ce ff ff       	call   671a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>
    981b:	48 89 c1             	mov    %rax,%rcx
    981e:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    9822:	48 89 c2             	mov    %rax,%rdx
    9825:	48 89 ce             	mov    %rcx,%rsi
    9828:	48 89 df             	mov    %rbx,%rdi
    982b:	e8 4a cf ff ff       	call   677a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_>
    9830:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    9834:	48 89 c7             	mov    %rax,%rdi
    9837:	e8 54 b9 ff ff       	call   5190 <_ZNSaIcED1Ev@plt>
	const _CharT* __start = __str._M_data()
    983c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9840:	48 89 c7             	mov    %rax,%rdi
    9843:	e8 de fb ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9848:	48 89 c3             	mov    %rax,%rbx
	  + __str._M_check(__pos, "basic_string::basic_string");
    984b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    984f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9853:	48 8d 15 1d 32 00 00 	lea    0x321d(%rip),%rdx        # ca77 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x43f>
    985a:	48 89 ce             	mov    %rcx,%rsi
    985d:	48 89 c7             	mov    %rax,%rdi
    9860:	e8 21 ff ff ff       	call   9786 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
	const _CharT* __start = __str._M_data()
    9865:	48 01 d8             	add    %rbx,%rax
    9868:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__start, __start + __str._M_limit(__pos, __n),
    986c:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9870:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    9874:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9878:	48 89 ce             	mov    %rcx,%rsi
    987b:	48 89 c7             	mov    %rax,%rdi
    987e:	e8 9d 03 00 00       	call   9c20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>
    9883:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9887:	48 01 c2             	add    %rax,%rdx
    988a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    988e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9892:	48 89 ce             	mov    %rcx,%rsi
    9895:	48 89 c7             	mov    %rax,%rdi
    9898:	e8 e3 fc ff ff       	call   9580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    989d:	eb 1a                	jmp    98b9 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_mm+0xd3>
    989f:	48 89 c3             	mov    %rax,%rbx
    98a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98a6:	48 89 c7             	mov    %rax,%rdi
    98a9:	e8 90 cd ff ff       	call   663e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    98ae:	48 89 d8             	mov    %rbx,%rax
    98b1:	48 89 c7             	mov    %rax,%rdi
    98b4:	e8 a7 b9 ff ff       	call   5260 <_Unwind_Resume@plt>
    98b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98bd:	c9                   	leave
    98be:	c3                   	ret
    98bf:	90                   	nop

00000000000098c0 <_ZN2vk5FlagsINS_22InstanceCreateFlagBitsEEC1Ej>:
    VULKAN_HPP_CONSTEXPR explicit Flags( MaskType flags ) VULKAN_HPP_NOEXCEPT : m_mask( flags ) {}
    98c0:	55                   	push   %rbp
    98c1:	48 89 e5             	mov    %rsp,%rbp
    98c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98c8:	89 75 f4             	mov    %esi,-0xc(%rbp)
    98cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98cf:	8b 55 f4             	mov    -0xc(%rbp),%edx
    98d2:	89 10                	mov    %edx,(%rax)
    98d4:	90                   	nop
    98d5:	5d                   	pop    %rbp
    98d6:	c3                   	ret
    98d7:	90                   	nop

00000000000098d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>:
    basic_string<_CharT, _Traits, _Alloc>::
    98d8:	55                   	push   %rbp
    98d9:	48 89 e5             	mov    %rsp,%rbp
    98dc:	53                   	push   %rbx
    98dd:	48 83 ec 28          	sub    $0x28,%rsp
    98e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    98e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    98e9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      if (__capacity > max_size())
    98ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98f1:	48 8b 18             	mov    (%rax),%rbx
    98f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98f8:	48 89 c7             	mov    %rax,%rdi
    98fb:	e8 6c 03 00 00       	call   9c6c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    9900:	48 39 d8             	cmp    %rbx,%rax
    9903:	0f 92 c0             	setb   %al
    9906:	84 c0                	test   %al,%al
    9908:	74 0f                	je     9919 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0x41>
	std::__throw_length_error(__N("basic_string::_M_create"));
    990a:	48 8d 05 81 31 00 00 	lea    0x3181(%rip),%rax        # ca92 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x45a>
    9911:	48 89 c7             	mov    %rax,%rdi
    9914:	e8 87 b7 ff ff       	call   50a0 <_ZSt20__throw_length_errorPKc@plt>
      if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
    9919:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    991d:	48 8b 00             	mov    (%rax),%rax
    9920:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    9924:	73 52                	jae    9978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
    9926:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    992a:	48 8b 10             	mov    (%rax),%rdx
    992d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9931:	48 01 c0             	add    %rax,%rax
    9934:	48 39 c2             	cmp    %rax,%rdx
    9937:	73 3f                	jae    9978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	  __capacity = 2 * __old_capacity;
    9939:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    993d:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    9941:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9945:	48 89 10             	mov    %rdx,(%rax)
	  if (__capacity > max_size())
    9948:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    994c:	48 8b 18             	mov    (%rax),%rbx
    994f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9953:	48 89 c7             	mov    %rax,%rdi
    9956:	e8 11 03 00 00       	call   9c6c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    995b:	48 39 d8             	cmp    %rbx,%rax
    995e:	0f 92 c0             	setb   %al
    9961:	84 c0                	test   %al,%al
    9963:	74 13                	je     9978 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm+0xa0>
	    __capacity = max_size();
    9965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9969:	48 89 c7             	mov    %rax,%rdi
    996c:	e8 fb 02 00 00       	call   9c6c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    9971:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9975:	48 89 02             	mov    %rax,(%rdx)
      return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
    9978:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    997c:	48 8b 00             	mov    (%rax),%rax
    997f:	48 8d 58 01          	lea    0x1(%rax),%rbx
    9983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9987:	48 89 c7             	mov    %rax,%rdi
    998a:	e8 19 fb ff ff       	call   94a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    998f:	48 89 de             	mov    %rbx,%rsi
    9992:	48 89 c7             	mov    %rax,%rdi
    9995:	e8 fb 02 00 00       	call   9c95 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    }
    999a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    999e:	c9                   	leave
    999f:	c3                   	ret

00000000000099a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm>:
      _M_destroy(size_type __size) throw()
    99a0:	55                   	push   %rbp
    99a1:	48 89 e5             	mov    %rsp,%rbp
    99a4:	41 54                	push   %r12
    99a6:	53                   	push   %rbx
    99a7:	48 83 ec 10          	sub    $0x10,%rsp
    99ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
    99b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99b7:	48 8d 58 01          	lea    0x1(%rax),%rbx
    99bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99bf:	48 89 c7             	mov    %rax,%rdi
    99c2:	e8 5f fa ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    99c7:	49 89 c4             	mov    %rax,%r12
    99ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99ce:	48 89 c7             	mov    %rax,%rdi
    99d1:	e8 d2 fa ff ff       	call   94a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    99d6:	48 89 da             	mov    %rbx,%rdx
    99d9:	4c 89 e6             	mov    %r12,%rsi
    99dc:	48 89 c7             	mov    %rax,%rdi
    99df:	e8 1f 03 00 00       	call   9d03 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
    99e4:	90                   	nop
    99e5:	48 83 c4 10          	add    $0x10,%rsp
    99e9:	5b                   	pop    %rbx
    99ea:	41 5c                	pop    %r12
    99ec:	5d                   	pop    %rbp
    99ed:	c3                   	ret

00000000000099ee <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv>:
      _M_local_data() const
    99ee:	55                   	push   %rbp
    99ef:	48 89 e5             	mov    %rsp,%rbp
    99f2:	48 83 ec 10          	sub    $0x10,%rsp
    99f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
    99fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99fe:	48 83 c0 10          	add    $0x10,%rax
    9a02:	48 89 c7             	mov    %rax,%rdi
    9a05:	e8 57 03 00 00       	call   9d61 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>
      }
    9a0a:	c9                   	leave
    9a0b:	c3                   	ret

0000000000009a0c <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    9a0c:	55                   	push   %rbp
    9a0d:	48 89 e5             	mov    %rsp,%rbp
    9a10:	48 83 ec 10          	sub    $0x10,%rsp
    9a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    9a1c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a20:	48 89 c7             	mov    %rax,%rdi
    9a23:	e8 53 03 00 00       	call   9d7b <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    9a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a30:	48 89 d6             	mov    %rdx,%rsi
    9a33:	48 89 c7             	mov    %rax,%rdi
    9a36:	e8 4b 03 00 00       	call   9d86 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    9a3b:	c9                   	leave
    9a3c:	c3                   	ret

0000000000009a3d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
    9a3d:	55                   	push   %rbp
    9a3e:	48 89 e5             	mov    %rsp,%rbp
    9a41:	48 83 ec 20          	sub    $0x20,%rsp
    9a45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a4d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { _S_copy(__p, __k1, __k2 - __k1); }
    9a51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a55:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    9a59:	48 89 c2             	mov    %rax,%rdx
    9a5c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a64:	48 89 ce             	mov    %rcx,%rsi
    9a67:	48 89 c7             	mov    %rax,%rdi
    9a6a:	e8 2d 03 00 00       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    9a6f:	90                   	nop
    9a70:	c9                   	leave
    9a71:	c3                   	ret

0000000000009a72 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>:
      _M_get_allocator() const
    9a72:	55                   	push   %rbp
    9a73:	48 89 e5             	mov    %rsp,%rbp
    9a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_dataplus; }
    9a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a7e:	5d                   	pop    %rbp
    9a7f:	c3                   	ret

0000000000009a80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>:
      _M_check_length(size_type __n1, size_type __n2, const char* __s) const
    9a80:	55                   	push   %rbp
    9a81:	48 89 e5             	mov    %rsp,%rbp
    9a84:	53                   	push   %rbx
    9a85:	48 83 ec 28          	sub    $0x28,%rsp
    9a89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9a95:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	if (this->max_size() - (this->size() - __n1) < __n2)
    9a99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a9d:	48 89 c7             	mov    %rax,%rdi
    9aa0:	e8 c7 01 00 00       	call   9c6c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>
    9aa5:	48 89 c3             	mov    %rax,%rbx
    9aa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9aac:	48 89 c7             	mov    %rax,%rdi
    9aaf:	e8 18 c8 ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9ab4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9ab8:	48 29 c2             	sub    %rax,%rdx
    9abb:	48 8d 04 13          	lea    (%rbx,%rdx,1),%rax
    9abf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9ac3:	0f 92 c0             	setb   %al
    9ac6:	84 c0                	test   %al,%al
    9ac8:	74 0c                	je     9ad6 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc+0x56>
	  __throw_length_error(__N(__s));
    9aca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9ace:	48 89 c7             	mov    %rax,%rdi
    9ad1:	e8 ca b5 ff ff       	call   50a0 <_ZSt20__throw_length_errorPKc@plt>
      }
    9ad6:	90                   	nop
    9ad7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9adb:	c9                   	leave
    9adc:	c3                   	ret
    9add:	90                   	nop

0000000000009ade <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    9ade:	55                   	push   %rbp
    9adf:	48 89 e5             	mov    %rsp,%rbp
    9ae2:	53                   	push   %rbx
    9ae3:	48 83 ec 38          	sub    $0x38,%rsp
    9ae7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9aeb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9aef:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    _M_append(const _CharT* __s, size_type __n)
    {
      const size_type __len = __n + this->size();
    9af3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9af7:	48 89 c7             	mov    %rax,%rdi
    9afa:	e8 cd c7 ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9aff:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9b03:	48 01 d0             	add    %rdx,%rax
    9b06:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      if (__len <= this->capacity())
    9b0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b0e:	48 89 c7             	mov    %rax,%rdi
    9b11:	e8 f0 fb ff ff       	call   9706 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    9b16:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9b1a:	0f 93 c0             	setae  %al
    9b1d:	84 c0                	test   %al,%al
    9b1f:	74 3b                	je     9b5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0x7e>
	{
	  if (__n)
    9b21:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    9b26:	74 62                	je     9b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
    9b28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b2c:	48 89 c7             	mov    %rax,%rdi
    9b2f:	e8 f2 f8 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9b34:	48 89 c3             	mov    %rax,%rbx
    9b37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b3b:	48 89 c7             	mov    %rax,%rdi
    9b3e:	e8 89 c7 ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9b43:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    9b47:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9b4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9b4f:	48 89 c6             	mov    %rax,%rsi
    9b52:	48 89 cf             	mov    %rcx,%rdi
    9b55:	e8 42 02 00 00       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    9b5a:	eb 2e                	jmp    9b8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm+0xac>
	}
      else
	this->_M_mutate(this->size(), size_type(0), __s, __n);
    9b5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b60:	48 89 c7             	mov    %rax,%rdi
    9b63:	e8 64 c7 ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9b68:	48 89 c6             	mov    %rax,%rsi
    9b6b:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    9b6f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9b73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b77:	49 89 c8             	mov    %rcx,%r8
    9b7a:	48 89 d1             	mov    %rdx,%rcx
    9b7d:	ba 00 00 00 00       	mov    $0x0,%edx
    9b82:	48 89 c7             	mov    %rax,%rdi
    9b85:	e8 5c 02 00 00       	call   9de6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__len);
    9b8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b92:	48 89 d6             	mov    %rdx,%rsi
    9b95:	48 89 c7             	mov    %rax,%rdi
    9b98:	e8 ef f6 ff ff       	call   928c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    9b9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    }
    9ba1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9ba5:	c9                   	leave
    9ba6:	c3                   	ret
    9ba7:	90                   	nop

0000000000009ba8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>:
      replace(size_type __pos, size_type __n1, const _CharT* __s,
    9ba8:	55                   	push   %rbp
    9ba9:	48 89 e5             	mov    %rsp,%rbp
    9bac:	53                   	push   %rbx
    9bad:	48 83 ec 38          	sub    $0x38,%rsp
    9bb1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9bb5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9bb9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9bbd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9bc1:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	return _M_replace(_M_check(__pos, "basic_string::replace"),
    9bc5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9bc9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9bcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bd1:	48 89 ce             	mov    %rcx,%rsi
    9bd4:	48 89 c7             	mov    %rax,%rdi
    9bd7:	e8 44 00 00 00       	call   9c20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>
    9bdc:	48 89 c3             	mov    %rax,%rbx
    9bdf:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9be3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9be7:	48 8d 15 bc 2e 00 00 	lea    0x2ebc(%rip),%rdx        # caaa <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x472>
    9bee:	48 89 ce             	mov    %rcx,%rsi
    9bf1:	48 89 c7             	mov    %rax,%rdi
    9bf4:	e8 8d fb ff ff       	call   9786 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc>
    9bf9:	48 89 c6             	mov    %rax,%rsi
    9bfc:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    9c00:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9c04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c08:	49 89 c8             	mov    %rcx,%r8
    9c0b:	48 89 d1             	mov    %rdx,%rcx
    9c0e:	48 89 da             	mov    %rbx,%rdx
    9c11:	48 89 c7             	mov    %rax,%rdi
    9c14:	e8 11 03 00 00       	call   9f2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
      }
    9c19:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c1d:	c9                   	leave
    9c1e:	c3                   	ret
    9c1f:	90                   	nop

0000000000009c20 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm>:
      _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
    9c20:	55                   	push   %rbp
    9c21:	48 89 e5             	mov    %rsp,%rbp
    9c24:	48 83 ec 30          	sub    $0x30,%rsp
    9c28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9c30:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const bool __testoff =  __off < this->size() - __pos;
    9c34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c38:	48 89 c7             	mov    %rax,%rdi
    9c3b:	e8 8c c6 ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9c40:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    9c44:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    9c48:	0f 92 c0             	setb   %al
    9c4b:	88 45 ff             	mov    %al,-0x1(%rbp)
	return __testoff ? __off : this->size() - __pos;
    9c4e:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    9c52:	74 06                	je     9c5a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x3a>
    9c54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c58:	eb 10                	jmp    9c6a <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm+0x4a>
    9c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c5e:	48 89 c7             	mov    %rax,%rdi
    9c61:	e8 66 c6 ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9c66:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
      }
    9c6a:	c9                   	leave
    9c6b:	c3                   	ret

0000000000009c6c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    9c6c:	55                   	push   %rbp
    9c6d:	48 89 e5             	mov    %rsp,%rbp
    9c70:	48 83 ec 10          	sub    $0x10,%rsp
    9c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
    9c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c7c:	48 89 c7             	mov    %rax,%rdi
    9c7f:	e8 ee fd ff ff       	call   9a72 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    9c84:	48 89 c7             	mov    %rax,%rdi
    9c87:	e8 45 06 00 00       	call   a2d1 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    9c8c:	48 83 e8 01          	sub    $0x1,%rax
    9c90:	48 d1 e8             	shr    %rax
    9c93:	c9                   	leave
    9c94:	c3                   	ret

0000000000009c95 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
       *  @param  __n  The number of objects to allocate space for.
       *
       *  Calls @c a.allocate(n)
      */
      _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
      allocate(allocator_type& __a, size_type __n)
    9c95:	55                   	push   %rbp
    9c96:	48 89 e5             	mov    %rsp,%rbp
    9c99:	48 83 ec 20          	sub    $0x20,%rsp
    9c9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9ca1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ca5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ca9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9cad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9cb1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
#if __cplusplus > 201703L
      [[nodiscard,__gnu__::__always_inline__]]
      constexpr _Tp*
      allocate(size_t __n)
      {
	if (std::__is_constant_evaluated())
    9cb5:	e8 ba c4 ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    9cba:	84 c0                	test   %al,%al
    9cbc:	74 2a                	je     9ce8 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x53>
	  {
	    if (__builtin_mul_overflow(__n, sizeof(_Tp), &__n))
    9cbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9cc2:	ba 00 00 00 00       	mov    $0x0,%edx
    9cc7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9ccb:	48 89 d0             	mov    %rdx,%rax
    9cce:	83 e0 01             	and    $0x1,%eax
    9cd1:	84 c0                	test   %al,%al
    9cd3:	74 05                	je     9cda <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x45>
	      std::__throw_bad_array_new_length();
    9cd5:	e8 26 b4 ff ff       	call   5100 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    return static_cast<_Tp*>(::operator new(__n));
    9cda:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9cde:	48 89 c7             	mov    %rax,%rdi
    9ce1:	e8 8a b4 ff ff       	call   5170 <_Znwm@plt>
    9ce6:	eb 19                	jmp    9d01 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m+0x6c>
	  }

	return __allocator_base<_Tp>::allocate(__n, 0);
    9ce8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf0:	ba 00 00 00 00       	mov    $0x0,%edx
    9cf5:	48 89 ce             	mov    %rcx,%rsi
    9cf8:	48 89 c7             	mov    %rax,%rdi
    9cfb:	e8 c6 06 00 00       	call   a3c6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    9d00:	90                   	nop
      { return __a.allocate(__n); }
    9d01:	c9                   	leave
    9d02:	c3                   	ret

0000000000009d03 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
       *  @param  __n  The number of objects space was allocated for.
       *
       *  Calls <tt> a.deallocate(p, n) </tt>
      */
      static _GLIBCXX20_CONSTEXPR void
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9d03:	55                   	push   %rbp
    9d04:	48 89 e5             	mov    %rsp,%rbp
    9d07:	48 83 ec 40          	sub    $0x40,%rsp
    9d0b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9d0f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9d13:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9d17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9d1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9d23:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9d27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9d2b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

      [[__gnu__::__always_inline__]]
      constexpr void
      deallocate(_Tp* __p, size_t __n)
      {
	if (std::__is_constant_evaluated())
    9d2f:	e8 40 c4 ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    9d34:	84 c0                	test   %al,%al
    9d36:	74 0e                	je     9d46 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x43>
	  {
	    ::operator delete(__p);
    9d38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d3c:	48 89 c7             	mov    %rax,%rdi
    9d3f:	e8 0c b4 ff ff       	call   5150 <_ZdlPv@plt>
	    return;
    9d44:	eb 18                	jmp    9d5e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm+0x5b>
	  }
	__allocator_base<_Tp>::deallocate(__p, __n);
    9d46:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d4a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d52:	48 89 ce             	mov    %rcx,%rsi
    9d55:	48 89 c7             	mov    %rax,%rdi
    9d58:	e8 b1 06 00 00       	call   a40e <_ZNSt15__new_allocatorIcE10deallocateEPcm>
      { __a.deallocate(__p, __n); }
    9d5d:	90                   	nop
    9d5e:	90                   	nop
    9d5f:	c9                   	leave
    9d60:	c3                   	ret

0000000000009d61 <_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_>:
      pointer_to(element_type& __r) noexcept
    9d61:	55                   	push   %rbp
    9d62:	48 89 e5             	mov    %rsp,%rbp
    9d65:	48 83 ec 10          	sub    $0x10,%rsp
    9d69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return std::addressof(__r); }
    9d6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d71:	48 89 c7             	mov    %rax,%rdi
    9d74:	e8 69 05 00 00       	call   a2e2 <_ZSt9addressofIKcEPT_RS1_>
    9d79:	c9                   	leave
    9d7a:	c3                   	ret

0000000000009d7b <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    9d7b:	55                   	push   %rbp
    9d7c:	48 89 e5             	mov    %rsp,%rbp
    9d7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9d83:	90                   	nop
    9d84:	5d                   	pop    %rbp
    9d85:	c3                   	ret

0000000000009d86 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    9d86:	55                   	push   %rbp
    9d87:	48 89 e5             	mov    %rsp,%rbp
    9d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    9d92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d96:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    9d9a:	5d                   	pop    %rbp
    9d9b:	c3                   	ret

0000000000009d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>:
      _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
    9d9c:	55                   	push   %rbp
    9d9d:	48 89 e5             	mov    %rsp,%rbp
    9da0:	48 83 ec 20          	sub    $0x20,%rsp
    9da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9da8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    9db0:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    9db5:	75 15                	jne    9dcc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    9db7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9dbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dbf:	48 89 d6             	mov    %rdx,%rsi
    9dc2:	48 89 c7             	mov    %rax,%rdi
    9dc5:	e8 d2 c3 ff ff       	call   619c <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    9dca:	eb 17                	jmp    9de3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm+0x47>
	  traits_type::copy(__d, __s, __n);
    9dcc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9dd0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd8:	48 89 ce             	mov    %rcx,%rsi
    9ddb:	48 89 c7             	mov    %rax,%rdi
    9dde:	e8 86 c4 ff ff       	call   6269 <_ZNSt11char_traitsIcE4copyEPcPKcm>
      }
    9de3:	90                   	nop
    9de4:	c9                   	leave
    9de5:	c3                   	ret

0000000000009de6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>:
    basic_string<_CharT, _Traits, _Alloc>::
    9de6:	55                   	push   %rbp
    9de7:	48 89 e5             	mov    %rsp,%rbp
    9dea:	48 83 ec 50          	sub    $0x50,%rsp
    9dee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9df2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9df6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9dfa:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    9dfe:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      const size_type __how_much = length() - __pos - __len1;
    9e02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e06:	48 89 c7             	mov    %rax,%rdi
    9e09:	e8 82 f3 ff ff       	call   9190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9e0e:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    9e12:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    9e16:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      size_type __new_capacity = length() + __len2 - __len1;
    9e1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e1e:	48 89 c7             	mov    %rax,%rdi
    9e21:	e8 6a f3 ff ff       	call   9190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv>
    9e26:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9e2a:	48 01 d0             	add    %rdx,%rax
    9e2d:	48 2b 45 c8          	sub    -0x38(%rbp),%rax
    9e31:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __r = _M_create(__new_capacity, capacity());
    9e35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e39:	48 89 c7             	mov    %rax,%rdi
    9e3c:	e8 c5 f8 ff ff       	call   9706 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    9e41:	48 89 c2             	mov    %rax,%rdx
    9e44:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    9e48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e4c:	48 89 ce             	mov    %rcx,%rsi
    9e4f:	48 89 c7             	mov    %rax,%rdi
    9e52:	e8 81 fa ff ff       	call   98d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9e57:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      if (__pos)
    9e5b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    9e60:	74 22                	je     9e84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x9e>
	this->_S_copy(__r, _M_data(), __pos);
    9e62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e66:	48 89 c7             	mov    %rax,%rdi
    9e69:	e8 b8 f5 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9e6e:	48 89 c1             	mov    %rax,%rcx
    9e71:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9e75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e79:	48 89 ce             	mov    %rcx,%rsi
    9e7c:	48 89 c7             	mov    %rax,%rdi
    9e7f:	e8 18 ff ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__s && __len2)
    9e84:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    9e89:	74 26                	je     9eb1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
    9e8b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    9e90:	74 1f                	je     9eb1 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0xcb>
	this->_S_copy(__r + __pos, __s, __len2);
    9e92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e96:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9e9a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9e9e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9ea2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9ea6:	48 89 c6             	mov    %rax,%rsi
    9ea9:	48 89 cf             	mov    %rcx,%rdi
    9eac:	e8 eb fe ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      if (__how_much)
    9eb1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9eb6:	74 3d                	je     9ef5 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm+0x10f>
		      _M_data() + __pos + __len1, __how_much);
    9eb8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ebc:	48 89 c7             	mov    %rax,%rdi
    9ebf:	e8 62 f5 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9ec4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9ec8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9ecc:	48 01 ca             	add    %rcx,%rdx
    9ecf:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
	this->_S_copy(__r + __pos + __len2,
    9ed3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9ed7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9edb:	48 01 c2             	add    %rax,%rdx
    9ede:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ee2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eea:	48 89 c2             	mov    %rax,%rdx
    9eed:	48 89 cf             	mov    %rcx,%rdi
    9ef0:	e8 a7 fe ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
      _M_dispose();
    9ef5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ef9:	48 89 c7             	mov    %rax,%rdi
    9efc:	e8 6d f5 ff ff       	call   946e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
      _M_data(__r);
    9f01:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f09:	48 89 d6             	mov    %rdx,%rsi
    9f0c:	48 89 c7             	mov    %rax,%rdi
    9f0f:	e8 d6 f5 ff ff       	call   94ea <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc>
      _M_capacity(__new_capacity);
    9f14:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f1c:	48 89 d6             	mov    %rdx,%rsi
    9f1f:	48 89 c7             	mov    %rax,%rdi
    9f22:	e8 dd f5 ff ff       	call   9504 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm>
    }
    9f27:	90                   	nop
    9f28:	c9                   	leave
    9f29:	c3                   	ret

0000000000009f2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>:
    }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>&
    basic_string<_CharT, _Traits, _Alloc>::
    9f2a:	55                   	push   %rbp
    9f2b:	48 89 e5             	mov    %rsp,%rbp
    9f2e:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    9f32:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    9f36:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    9f3a:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    9f3e:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
    9f42:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
    _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
	       const size_type __len2)
    {
      _M_check_length(__len1, __len2, "basic_string::_M_replace");
    9f46:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    9f4a:	48 8b 75 98          	mov    -0x68(%rbp),%rsi
    9f4e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9f52:	48 8d 0d 67 2b 00 00 	lea    0x2b67(%rip),%rcx        # cac0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x488>
    9f59:	48 89 c7             	mov    %rax,%rdi
    9f5c:	e8 1f fb ff ff       	call   9a80 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc>

      const size_type __old_size = this->size();
    9f61:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9f65:	48 89 c7             	mov    %rax,%rdi
    9f68:	e8 5f c3 ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    9f6d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      const size_type __new_size = __old_size + __len2 - __len1;
    9f71:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9f75:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9f79:	48 01 d0             	add    %rdx,%rax
    9f7c:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    9f80:	48 89 45 f0          	mov    %rax,-0x10(%rbp)

      if (__new_size <= this->capacity())
    9f84:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9f88:	48 89 c7             	mov    %rax,%rdi
    9f8b:	e8 76 f7 ff ff       	call   9706 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv>
    9f90:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9f94:	0f 93 c0             	setae  %al
    9f97:	84 c0                	test   %al,%al
    9f99:	0f 84 fa 02 00 00    	je     a299 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x36f>
	{
	  pointer __p = this->_M_data() + __pos;
    9f9f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9fa3:	48 89 c7             	mov    %rax,%rdi
    9fa6:	e8 7b f4 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    9fab:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    9faf:	48 01 d0             	add    %rdx,%rax
    9fb2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

	  const size_type __how_much = __old_size - __pos - __len1;
    9fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fba:	48 2b 45 a0          	sub    -0x60(%rbp),%rax
    9fbe:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    9fc2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
#if __cpp_lib_is_constant_evaluated
	  if (std::is_constant_evaluated())
    9fc6:	e8 b4 c1 ff ff       	call   617f <_ZSt21is_constant_evaluatedv>
    9fcb:	84 c0                	test   %al,%al
    9fcd:	0f 84 09 01 00 00    	je     a0dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x1b2>
	    {
	      auto __newp = _Alloc_traits::allocate(_M_get_allocator(),
    9fd3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9fd7:	48 89 c7             	mov    %rax,%rdi
    9fda:	e8 c9 f4 ff ff       	call   94a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    9fdf:	48 89 c2             	mov    %rax,%rdx
    9fe2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9fe6:	48 89 c6             	mov    %rax,%rsi
    9fe9:	48 89 d7             	mov    %rdx,%rdi
    9fec:	e8 a4 fc ff ff       	call   9c95 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    9ff1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
						    __new_size);
	      _S_copy(__newp, this->_M_data(), __pos);
    9ff5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9ff9:	48 89 c7             	mov    %rax,%rdi
    9ffc:	e8 25 f4 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a001:	48 89 c1             	mov    %rax,%rcx
    a004:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    a008:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a00c:	48 89 ce             	mov    %rcx,%rsi
    a00f:	48 89 c7             	mov    %rax,%rdi
    a012:	e8 85 fd ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos, __s, __len2);
    a017:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a01b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a01f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a023:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a027:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a02b:	48 89 c6             	mov    %rax,%rsi
    a02e:	48 89 cf             	mov    %rcx,%rdi
    a031:	e8 66 fd ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(__newp + __pos + __len2, __p + __len1, __how_much);
    a036:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a03a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a03e:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a042:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    a046:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a04a:	48 01 c2             	add    %rax,%rdx
    a04d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a051:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a055:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a059:	48 89 c2             	mov    %rax,%rdx
    a05c:	48 89 cf             	mov    %rcx,%rdi
    a05f:	e8 38 fd ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      _S_copy(this->_M_data(), __newp, __new_size);
    a064:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a068:	48 89 c7             	mov    %rax,%rdi
    a06b:	e8 b6 f3 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a070:	48 89 c1             	mov    %rax,%rcx
    a073:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a077:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a07b:	48 89 c6             	mov    %rax,%rsi
    a07e:	48 89 cf             	mov    %rcx,%rdi
    a081:	e8 16 fd ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
	      this->_M_get_allocator().deallocate(__newp, __new_size);
    a086:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a08a:	48 89 c7             	mov    %rax,%rdi
    a08d:	e8 16 f4 ff ff       	call   94a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv>
    a092:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a096:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a09a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    a09e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0a2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
	if (std::__is_constant_evaluated())
    a0a6:	e8 c9 c0 ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    a0ab:	84 c0                	test   %al,%al
    a0ad:	74 11                	je     a0c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x196>
	    ::operator delete(__p);
    a0af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a0b3:	48 89 c7             	mov    %rax,%rdi
    a0b6:	e8 95 b0 ff ff       	call   5150 <_ZdlPv@plt>
	    return;
    a0bb:	e9 f8 01 00 00       	jmp    a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	__allocator_base<_Tp>::deallocate(__p, __n);
    a0c0:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    a0c4:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    a0c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a0cc:	48 89 ce             	mov    %rcx,%rsi
    a0cf:	48 89 c7             	mov    %rax,%rdi
    a0d2:	e8 37 03 00 00       	call   a40e <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    a0d7:	e9 dc 01 00 00       	jmp    a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
#endif
	  if (_M_disjunct(__s))
    a0dc:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    a0e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a0e4:	48 89 d6             	mov    %rdx,%rsi
    a0e7:	48 89 c7             	mov    %rax,%rdi
    a0ea:	e8 0d 02 00 00       	call   a2fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
    a0ef:	84 c0                	test   %al,%al
    a0f1:	74 5f                	je     a152 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x228>
	    {
	      if (__how_much && __len1 != __len2)
    a0f3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a0f8:	74 31                	je     a12b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
    a0fa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a0fe:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    a102:	74 27                	je     a12b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x201>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    a104:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a108:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a10c:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a110:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a114:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a118:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a11c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a120:	48 89 c2             	mov    %rax,%rdx
    a123:	48 89 cf             	mov    %rcx,%rdi
    a126:	e8 50 02 00 00       	call   a37b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2)
    a12b:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    a130:	0f 84 82 01 00 00    	je     a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		this->_S_copy(__p, __s, __len2);
    a136:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a13a:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    a13e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a142:	48 89 ce             	mov    %rcx,%rsi
    a145:	48 89 c7             	mov    %rax,%rdi
    a148:	e8 4f fc ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a14d:	e9 66 01 00 00       	jmp    a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
	    }
	  else
	    {
	      // Work in-place.
	      if (__len2 && __len2 <= __len1)
    a152:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    a157:	74 21                	je     a17a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
    a159:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a15d:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    a161:	72 17                	jb     a17a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x250>
		this->_S_move(__p, __s, __len2);
    a163:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a167:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    a16b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a16f:	48 89 ce             	mov    %rcx,%rsi
    a172:	48 89 c7             	mov    %rax,%rdi
    a175:	e8 01 02 00 00       	call   a37b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__how_much && __len1 != __len2)
    a17a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a17f:	74 31                	je     a1b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
    a181:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a185:	48 3b 45 88          	cmp    -0x78(%rbp),%rax
    a189:	74 27                	je     a1b2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x288>
		this->_S_move(__p + __len2, __p + __len1, __how_much);
    a18b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a18f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a193:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a197:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a19b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a19f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a1a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a1a7:	48 89 c2             	mov    %rax,%rdx
    a1aa:	48 89 cf             	mov    %rcx,%rdi
    a1ad:	e8 c9 01 00 00       	call   a37b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
	      if (__len2 > __len1)
    a1b2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a1b6:	48 39 45 98          	cmp    %rax,-0x68(%rbp)
    a1ba:	0f 83 f8 00 00 00    	jae    a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		{
		  if (__s + __len2 <= __p + __len1)
    a1c0:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    a1c4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a1c8:	48 01 d0             	add    %rdx,%rax
    a1cb:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a1cf:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    a1d3:	48 01 ca             	add    %rcx,%rdx
    a1d6:	48 39 c2             	cmp    %rax,%rdx
    a1d9:	72 1c                	jb     a1f7 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x2cd>
		    this->_S_move(__p, __s, __len2);
    a1db:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a1df:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    a1e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1e7:	48 89 ce             	mov    %rcx,%rsi
    a1ea:	48 89 c7             	mov    %rax,%rdi
    a1ed:	e8 89 01 00 00       	call   a37b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
    a1f2:	e9 c1 00 00 00       	jmp    a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		  else if (__s >= __p + __len1)
    a1f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a1fb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a1ff:	48 01 d0             	add    %rdx,%rax
    a202:	48 39 45 90          	cmp    %rax,-0x70(%rbp)
    a206:	72 3b                	jb     a243 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x319>
		    {
		      // Hint to middle end that __p and __s overlap
		      // (PR 98465).
		      const size_type __poff = (__s - __p) + (__len2 - __len1);
    a208:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a20c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    a210:	48 89 c2             	mov    %rax,%rdx
    a213:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a217:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    a21b:	48 01 d0             	add    %rdx,%rax
    a21e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
		      this->_S_copy(__p, __p + __poff, __len2);
    a222:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a226:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a22a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a22e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a236:	48 89 ce             	mov    %rcx,%rsi
    a239:	48 89 c7             	mov    %rax,%rdi
    a23c:	e8 5b fb ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a241:	eb 75                	jmp    a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		  else
		    {
		      const size_type __nleft = (__p + __len1) - __s;
    a243:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a247:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a24b:	48 01 d0             	add    %rdx,%rax
    a24e:	48 2b 45 90          	sub    -0x70(%rbp),%rax
    a252:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
		      this->_S_move(__p, __s, __nleft);
    a256:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a25a:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    a25e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a262:	48 89 ce             	mov    %rcx,%rsi
    a265:	48 89 c7             	mov    %rax,%rdi
    a268:	e8 0e 01 00 00       	call   a37b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>
		      this->_S_copy(__p + __nleft, __p + __len2,
    a26d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a271:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    a275:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a279:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a27d:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    a281:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a285:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a289:	48 01 d1             	add    %rdx,%rcx
    a28c:	48 89 c2             	mov    %rax,%rdx
    a28f:	48 89 cf             	mov    %rcx,%rdi
    a292:	e8 05 fb ff ff       	call   9d9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm>
    a297:	eb 1f                	jmp    a2b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm+0x38e>
		    }
		}
	    }
	}
      else
	this->_M_mutate(__pos, __len1, __s, __len2);
    a299:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
    a29d:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    a2a1:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    a2a5:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    a2a9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a2ad:	49 89 f8             	mov    %rdi,%r8
    a2b0:	48 89 c7             	mov    %rax,%rdi
    a2b3:	e8 2e fb ff ff       	call   9de6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>

      this->_M_set_length(__new_size);
    a2b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a2c0:	48 89 d6             	mov    %rdx,%rsi
    a2c3:	48 89 c7             	mov    %rax,%rdi
    a2c6:	e8 c1 ef ff ff       	call   928c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm>
      return *this;
    a2cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    }
    a2cf:	c9                   	leave
    a2d0:	c3                   	ret

000000000000a2d1 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a2d1:	55                   	push   %rbp
    a2d2:	48 89 e5             	mov    %rsp,%rbp
    a2d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus <= 201703L
	return __a.max_size();
#else
	return size_t(-1) / sizeof(value_type);
    a2d9:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
#endif
      }
    a2e0:	5d                   	pop    %rbp
    a2e1:	c3                   	ret

000000000000a2e2 <_ZSt9addressofIKcEPT_RS1_>:
    addressof(_Tp& __r) noexcept
    a2e2:	55                   	push   %rbp
    a2e3:	48 89 e5             	mov    %rsp,%rbp
    a2e6:	48 83 ec 10          	sub    $0x10,%rsp
    a2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__addressof(__r); }
    a2ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f2:	48 89 c7             	mov    %rax,%rdi
    a2f5:	e8 3d 01 00 00       	call   a437 <_ZSt11__addressofIKcEPT_RS1_>
    a2fa:	c9                   	leave
    a2fb:	c3                   	ret

000000000000a2fc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
      _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
    a2fc:	55                   	push   %rbp
    a2fd:	48 89 e5             	mov    %rsp,%rbp
    a300:	53                   	push   %rbx
    a301:	48 83 ec 28          	sub    $0x28,%rsp
    a305:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a309:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	return (less<const _CharT*>()(__s, _M_data())
    a30d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a311:	48 89 c7             	mov    %rax,%rdi
    a314:	e8 0d f1 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a319:	48 89 c2             	mov    %rax,%rdx
    a31c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a320:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    a324:	48 89 ce             	mov    %rcx,%rsi
    a327:	48 89 c7             	mov    %rax,%rdi
    a32a:	e8 17 01 00 00       	call   a446 <_ZNKSt4lessIPKcEclES1_S1_>
		|| less<const _CharT*>()(_M_data() + this->size(), __s));
    a32f:	84 c0                	test   %al,%al
    a331:	75 36                	jne    a369 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x6d>
    a333:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a337:	48 89 c7             	mov    %rax,%rdi
    a33a:	e8 e7 f0 ff ff       	call   9426 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv>
    a33f:	48 89 c3             	mov    %rax,%rbx
    a342:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a346:	48 89 c7             	mov    %rax,%rdi
    a349:	e8 7e bf ff ff       	call   62cc <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv>
    a34e:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    a352:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a356:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a35a:	48 89 ce             	mov    %rcx,%rsi
    a35d:	48 89 c7             	mov    %rax,%rdi
    a360:	e8 e1 00 00 00       	call   a446 <_ZNKSt4lessIPKcEclES1_S1_>
    a365:	84 c0                	test   %al,%al
    a367:	74 07                	je     a370 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x74>
    a369:	b8 01 00 00 00       	mov    $0x1,%eax
    a36e:	eb 05                	jmp    a375 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x79>
    a370:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a375:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a379:	c9                   	leave
    a37a:	c3                   	ret

000000000000a37b <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm>:
      _S_move(_CharT* __d, const _CharT* __s, size_type __n)
    a37b:	55                   	push   %rbp
    a37c:	48 89 e5             	mov    %rsp,%rbp
    a37f:	48 83 ec 20          	sub    $0x20,%rsp
    a383:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a387:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a38b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__n == 1)
    a38f:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    a394:	75 15                	jne    a3ab <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x30>
	  traits_type::assign(*__d, *__s);
    a396:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a39a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a39e:	48 89 d6             	mov    %rdx,%rsi
    a3a1:	48 89 c7             	mov    %rax,%rdi
    a3a4:	e8 f3 bd ff ff       	call   619c <_ZNSt11char_traitsIcE6assignERcRKc>
      }
    a3a9:	eb 17                	jmp    a3c2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm+0x47>
	  traits_type::move(__d, __s, __n);
    a3ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3b7:	48 89 ce             	mov    %rcx,%rsi
    a3ba:	48 89 c7             	mov    %rax,%rdi
    a3bd:	e8 4a be ff ff       	call   620c <_ZNSt11char_traitsIcE4moveEPcPKcm>
      }
    a3c2:	90                   	nop
    a3c3:	c9                   	leave
    a3c4:	c3                   	ret
    a3c5:	90                   	nop

000000000000a3c6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
#endif

      // NB: __n is permitted to be 0.  The C++ standard says nothing
      // about what the return value is when __n == 0.
      _GLIBCXX_NODISCARD _Tp*
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    a3c6:	55                   	push   %rbp
    a3c7:	48 89 e5             	mov    %rsp,%rbp
    a3ca:	48 83 ec 20          	sub    $0x20,%rsp
    a3ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3308. std::allocator<void>().allocate(n)
	static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
#endif

	if (__builtin_expect(__n > this->_M_max_size(), false))
    a3da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3de:	48 89 c7             	mov    %rax,%rdi
    a3e1:	e8 9a 00 00 00       	call   a480 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    a3e6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a3ea:	0f 92 c0             	setb   %al
    a3ed:	0f b6 c0             	movzbl %al,%eax
    a3f0:	48 85 c0             	test   %rax,%rax
    a3f3:	0f 95 c0             	setne  %al
    a3f6:	84 c0                	test   %al,%al
    a3f8:	74 05                	je     a3ff <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	  {
	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
	    // 3190. allocator::allocate sometimes returns too little storage
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
	      std::__throw_bad_array_new_length();
	    std::__throw_bad_alloc();
    a3fa:	e8 61 ac ff ff       	call   5060 <_ZSt17__throw_bad_allocv@plt>
	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
	    return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp),
							   __al));
	  }
#endif
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    a3ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a403:	48 89 c7             	mov    %rax,%rdi
    a406:	e8 65 ad ff ff       	call   5170 <_Znwm@plt>
    a40b:	90                   	nop
      }
    a40c:	c9                   	leave
    a40d:	c3                   	ret

000000000000a40e <_ZNSt15__new_allocatorIcE10deallocateEPcm>:

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a40e:	55                   	push   %rbp
    a40f:	48 89 e5             	mov    %rsp,%rbp
    a412:	48 83 ec 20          	sub    $0x20,%rsp
    a416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a41a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a41e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a422:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a426:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a42a:	48 89 d6             	mov    %rdx,%rsi
    a42d:	48 89 c7             	mov    %rax,%rdi
    a430:	e8 4b ad ff ff       	call   5180 <_ZdlPvm@plt>
      }
    a435:	c9                   	leave
    a436:	c3                   	ret

000000000000a437 <_ZSt11__addressofIKcEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    a437:	55                   	push   %rbp
    a438:	48 89 e5             	mov    %rsp,%rbp
    a43b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    a43f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a443:	5d                   	pop    %rbp
    a444:	c3                   	ret
    a445:	90                   	nop

000000000000a446 <_ZNKSt4lessIPKcEclES1_S1_>:
  // Partial specialization of std::less for pointers.
  template<typename _Tp>
    struct less<_Tp*> : public binary_function<_Tp*, _Tp*, bool>
    {
      _GLIBCXX14_CONSTEXPR bool
      operator()(_Tp* __x, _Tp* __y) const _GLIBCXX_NOTHROW
    a446:	55                   	push   %rbp
    a447:	48 89 e5             	mov    %rsp,%rbp
    a44a:	48 83 ec 20          	sub    $0x20,%rsp
    a44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a456:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
#if __cplusplus >= 201402L
	if (std::__is_constant_evaluated())
    a45a:	e8 15 bd ff ff       	call   6174 <_ZSt23__is_constant_evaluatedv>
    a45f:	84 c0                	test   %al,%al
    a461:	74 0d                	je     a470 <_ZNKSt4lessIPKcEclES1_S1_+0x2a>
	  return __x < __y;
    a463:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a467:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    a46b:	0f 92 c0             	setb   %al
    a46e:	eb 0e                	jmp    a47e <_ZNKSt4lessIPKcEclES1_S1_+0x38>
#endif
	return (__UINTPTR_TYPE__)__x < (__UINTPTR_TYPE__)__y;
    a470:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a474:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a478:	48 39 c2             	cmp    %rax,%rdx
    a47b:	0f 92 c0             	setb   %al
      }
    a47e:	c9                   	leave
    a47f:	c3                   	ret

000000000000a480 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a480:	55                   	push   %rbp
    a481:	48 89 e5             	mov    %rsp,%rbp
    a484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a488:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    a48f:	ff ff 7f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    a492:	5d                   	pop    %rbp
    a493:	c3                   	ret

000000000000a494 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>:
  class CompressionExhaustedEXTError : public SystemError
    a494:	55                   	push   %rbp
    a495:	48 89 e5             	mov    %rsp,%rbp
    a498:	48 83 ec 10          	sub    $0x10,%rsp
    a49c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4a0:	48 8d 15 41 5d 00 00 	lea    0x5d41(%rip),%rdx        # 101e8 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x10>
    a4a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4ab:	48 89 10             	mov    %rdx,(%rax)
    a4ae:	48 8d 15 5b 5d 00 00 	lea    0x5d5b(%rip),%rdx        # 10210 <_ZTVN2vk28CompressionExhaustedEXTErrorE+0x38>
    a4b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a4bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4c1:	48 89 c7             	mov    %rax,%rdi
    a4c4:	e8 eb d3 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a4c9:	90                   	nop
    a4ca:	c9                   	leave
    a4cb:	c3                   	ret

000000000000a4cc <_ZThn8_N2vk28CompressionExhaustedEXTErrorD1Ev>:
    a4cc:	48 83 ef 08          	sub    $0x8,%rdi
    a4d0:	eb c2                	jmp    a494 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>

000000000000a4d2 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>:
    a4d2:	55                   	push   %rbp
    a4d3:	48 89 e5             	mov    %rsp,%rbp
    a4d6:	48 83 ec 10          	sub    $0x10,%rsp
    a4da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4e2:	48 89 c7             	mov    %rax,%rdi
    a4e5:	e8 aa ff ff ff       	call   a494 <_ZN2vk28CompressionExhaustedEXTErrorD1Ev>
    a4ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4ee:	be 28 00 00 00       	mov    $0x28,%esi
    a4f3:	48 89 c7             	mov    %rax,%rdi
    a4f6:	e8 85 ac ff ff       	call   5180 <_ZdlPvm@plt>
    a4fb:	c9                   	leave
    a4fc:	c3                   	ret

000000000000a4fd <_ZThn8_N2vk28CompressionExhaustedEXTErrorD0Ev>:
    a4fd:	48 83 ef 08          	sub    $0x8,%rdi
    a501:	eb cf                	jmp    a4d2 <_ZN2vk28CompressionExhaustedEXTErrorD0Ev>
    a503:	90                   	nop

000000000000a504 <_ZN2vk20NotPermittedKHRErrorD1Ev>:
  class NotPermittedKHRError : public SystemError
    a504:	55                   	push   %rbp
    a505:	48 89 e5             	mov    %rsp,%rbp
    a508:	48 83 ec 10          	sub    $0x10,%rsp
    a50c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a510:	48 8d 15 21 5d 00 00 	lea    0x5d21(%rip),%rdx        # 10238 <_ZTVN2vk20NotPermittedKHRErrorE+0x10>
    a517:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a51b:	48 89 10             	mov    %rdx,(%rax)
    a51e:	48 8d 15 3b 5d 00 00 	lea    0x5d3b(%rip),%rdx        # 10260 <_ZTVN2vk20NotPermittedKHRErrorE+0x38>
    a525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a529:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a52d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a531:	48 89 c7             	mov    %rax,%rdi
    a534:	e8 7b d3 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a539:	90                   	nop
    a53a:	c9                   	leave
    a53b:	c3                   	ret

000000000000a53c <_ZThn8_N2vk20NotPermittedKHRErrorD1Ev>:
    a53c:	48 83 ef 08          	sub    $0x8,%rdi
    a540:	eb c2                	jmp    a504 <_ZN2vk20NotPermittedKHRErrorD1Ev>

000000000000a542 <_ZN2vk20NotPermittedKHRErrorD0Ev>:
    a542:	55                   	push   %rbp
    a543:	48 89 e5             	mov    %rsp,%rbp
    a546:	48 83 ec 10          	sub    $0x10,%rsp
    a54a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a54e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a552:	48 89 c7             	mov    %rax,%rdi
    a555:	e8 aa ff ff ff       	call   a504 <_ZN2vk20NotPermittedKHRErrorD1Ev>
    a55a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a55e:	be 28 00 00 00       	mov    $0x28,%esi
    a563:	48 89 c7             	mov    %rax,%rdi
    a566:	e8 15 ac ff ff       	call   5180 <_ZdlPvm@plt>
    a56b:	c9                   	leave
    a56c:	c3                   	ret

000000000000a56d <_ZThn8_N2vk20NotPermittedKHRErrorD0Ev>:
    a56d:	48 83 ef 08          	sub    $0x8,%rdi
    a571:	eb cf                	jmp    a542 <_ZN2vk20NotPermittedKHRErrorD0Ev>
    a573:	90                   	nop

000000000000a574 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
  class InvalidDrmFormatModifierPlaneLayoutEXTError : public SystemError
    a574:	55                   	push   %rbp
    a575:	48 89 e5             	mov    %rsp,%rbp
    a578:	48 83 ec 10          	sub    $0x10,%rsp
    a57c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a580:	48 8d 15 01 5d 00 00 	lea    0x5d01(%rip),%rdx        # 10288 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x10>
    a587:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a58b:	48 89 10             	mov    %rdx,(%rax)
    a58e:	48 8d 15 1b 5d 00 00 	lea    0x5d1b(%rip),%rdx        # 102b0 <_ZTVN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorE+0x38>
    a595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a599:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a59d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a1:	48 89 c7             	mov    %rax,%rdi
    a5a4:	e8 0b d3 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a5a9:	90                   	nop
    a5aa:	c9                   	leave
    a5ab:	c3                   	ret

000000000000a5ac <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>:
    a5ac:	48 83 ef 08          	sub    $0x8,%rdi
    a5b0:	eb c2                	jmp    a574 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>

000000000000a5b2 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    a5b2:	55                   	push   %rbp
    a5b3:	48 89 e5             	mov    %rsp,%rbp
    a5b6:	48 83 ec 10          	sub    $0x10,%rsp
    a5ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c2:	48 89 c7             	mov    %rax,%rdi
    a5c5:	e8 aa ff ff ff       	call   a574 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD1Ev>
    a5ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ce:	be 28 00 00 00       	mov    $0x28,%esi
    a5d3:	48 89 c7             	mov    %rax,%rdi
    a5d6:	e8 a5 ab ff ff       	call   5180 <_ZdlPvm@plt>
    a5db:	c9                   	leave
    a5dc:	c3                   	ret

000000000000a5dd <_ZThn8_N2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>:
    a5dd:	48 83 ef 08          	sub    $0x8,%rdi
    a5e1:	eb cf                	jmp    a5b2 <_ZN2vk43InvalidDrmFormatModifierPlaneLayoutEXTErrorD0Ev>
    a5e3:	90                   	nop

000000000000a5e4 <_ZN2vk20InvalidShaderNVErrorD1Ev>:
  class InvalidShaderNVError : public SystemError
    a5e4:	55                   	push   %rbp
    a5e5:	48 89 e5             	mov    %rsp,%rbp
    a5e8:	48 83 ec 10          	sub    $0x10,%rsp
    a5ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5f0:	48 8d 15 e1 5c 00 00 	lea    0x5ce1(%rip),%rdx        # 102d8 <_ZTVN2vk20InvalidShaderNVErrorE+0x10>
    a5f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5fb:	48 89 10             	mov    %rdx,(%rax)
    a5fe:	48 8d 15 fb 5c 00 00 	lea    0x5cfb(%rip),%rdx        # 10300 <_ZTVN2vk20InvalidShaderNVErrorE+0x38>
    a605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a609:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a60d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a611:	48 89 c7             	mov    %rax,%rdi
    a614:	e8 9b d2 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a619:	90                   	nop
    a61a:	c9                   	leave
    a61b:	c3                   	ret

000000000000a61c <_ZThn8_N2vk20InvalidShaderNVErrorD1Ev>:
    a61c:	48 83 ef 08          	sub    $0x8,%rdi
    a620:	eb c2                	jmp    a5e4 <_ZN2vk20InvalidShaderNVErrorD1Ev>

000000000000a622 <_ZN2vk20InvalidShaderNVErrorD0Ev>:
    a622:	55                   	push   %rbp
    a623:	48 89 e5             	mov    %rsp,%rbp
    a626:	48 83 ec 10          	sub    $0x10,%rsp
    a62a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a62e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a632:	48 89 c7             	mov    %rax,%rdi
    a635:	e8 aa ff ff ff       	call   a5e4 <_ZN2vk20InvalidShaderNVErrorD1Ev>
    a63a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63e:	be 28 00 00 00       	mov    $0x28,%esi
    a643:	48 89 c7             	mov    %rax,%rdi
    a646:	e8 35 ab ff ff       	call   5180 <_ZdlPvm@plt>
    a64b:	c9                   	leave
    a64c:	c3                   	ret

000000000000a64d <_ZThn8_N2vk20InvalidShaderNVErrorD0Ev>:
    a64d:	48 83 ef 08          	sub    $0x8,%rdi
    a651:	eb cf                	jmp    a622 <_ZN2vk20InvalidShaderNVErrorD0Ev>
    a653:	90                   	nop

000000000000a654 <_ZN2vk24ValidationFailedEXTErrorD1Ev>:
  class ValidationFailedEXTError : public SystemError
    a654:	55                   	push   %rbp
    a655:	48 89 e5             	mov    %rsp,%rbp
    a658:	48 83 ec 10          	sub    $0x10,%rsp
    a65c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a660:	48 8d 15 c1 5c 00 00 	lea    0x5cc1(%rip),%rdx        # 10328 <_ZTVN2vk24ValidationFailedEXTErrorE+0x10>
    a667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a66b:	48 89 10             	mov    %rdx,(%rax)
    a66e:	48 8d 15 db 5c 00 00 	lea    0x5cdb(%rip),%rdx        # 10350 <_ZTVN2vk24ValidationFailedEXTErrorE+0x38>
    a675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a679:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a67d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a681:	48 89 c7             	mov    %rax,%rdi
    a684:	e8 2b d2 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a689:	90                   	nop
    a68a:	c9                   	leave
    a68b:	c3                   	ret

000000000000a68c <_ZThn8_N2vk24ValidationFailedEXTErrorD1Ev>:
    a68c:	48 83 ef 08          	sub    $0x8,%rdi
    a690:	eb c2                	jmp    a654 <_ZN2vk24ValidationFailedEXTErrorD1Ev>

000000000000a692 <_ZN2vk24ValidationFailedEXTErrorD0Ev>:
    a692:	55                   	push   %rbp
    a693:	48 89 e5             	mov    %rsp,%rbp
    a696:	48 83 ec 10          	sub    $0x10,%rsp
    a69a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a69e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a2:	48 89 c7             	mov    %rax,%rdi
    a6a5:	e8 aa ff ff ff       	call   a654 <_ZN2vk24ValidationFailedEXTErrorD1Ev>
    a6aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ae:	be 28 00 00 00       	mov    $0x28,%esi
    a6b3:	48 89 c7             	mov    %rax,%rdi
    a6b6:	e8 c5 aa ff ff       	call   5180 <_ZdlPvm@plt>
    a6bb:	c9                   	leave
    a6bc:	c3                   	ret

000000000000a6bd <_ZThn8_N2vk24ValidationFailedEXTErrorD0Ev>:
    a6bd:	48 83 ef 08          	sub    $0x8,%rdi
    a6c1:	eb cf                	jmp    a692 <_ZN2vk24ValidationFailedEXTErrorD0Ev>
    a6c3:	90                   	nop

000000000000a6c4 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>:
  class IncompatibleDisplayKHRError : public SystemError
    a6c4:	55                   	push   %rbp
    a6c5:	48 89 e5             	mov    %rsp,%rbp
    a6c8:	48 83 ec 10          	sub    $0x10,%rsp
    a6cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6d0:	48 8d 15 a1 5c 00 00 	lea    0x5ca1(%rip),%rdx        # 10378 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x10>
    a6d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6db:	48 89 10             	mov    %rdx,(%rax)
    a6de:	48 8d 15 bb 5c 00 00 	lea    0x5cbb(%rip),%rdx        # 103a0 <_ZTVN2vk27IncompatibleDisplayKHRErrorE+0x38>
    a6e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6e9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a6ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6f1:	48 89 c7             	mov    %rax,%rdi
    a6f4:	e8 bb d1 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a6f9:	90                   	nop
    a6fa:	c9                   	leave
    a6fb:	c3                   	ret

000000000000a6fc <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD1Ev>:
    a6fc:	48 83 ef 08          	sub    $0x8,%rdi
    a700:	eb c2                	jmp    a6c4 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>

000000000000a702 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>:
    a702:	55                   	push   %rbp
    a703:	48 89 e5             	mov    %rsp,%rbp
    a706:	48 83 ec 10          	sub    $0x10,%rsp
    a70a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a70e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a712:	48 89 c7             	mov    %rax,%rdi
    a715:	e8 aa ff ff ff       	call   a6c4 <_ZN2vk27IncompatibleDisplayKHRErrorD1Ev>
    a71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a71e:	be 28 00 00 00       	mov    $0x28,%esi
    a723:	48 89 c7             	mov    %rax,%rdi
    a726:	e8 55 aa ff ff       	call   5180 <_ZdlPvm@plt>
    a72b:	c9                   	leave
    a72c:	c3                   	ret

000000000000a72d <_ZThn8_N2vk27IncompatibleDisplayKHRErrorD0Ev>:
    a72d:	48 83 ef 08          	sub    $0x8,%rdi
    a731:	eb cf                	jmp    a702 <_ZN2vk27IncompatibleDisplayKHRErrorD0Ev>
    a733:	90                   	nop

000000000000a734 <_ZN2vk17OutOfDateKHRErrorD1Ev>:
  class OutOfDateKHRError : public SystemError
    a734:	55                   	push   %rbp
    a735:	48 89 e5             	mov    %rsp,%rbp
    a738:	48 83 ec 10          	sub    $0x10,%rsp
    a73c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a740:	48 8d 15 81 5c 00 00 	lea    0x5c81(%rip),%rdx        # 103c8 <_ZTVN2vk17OutOfDateKHRErrorE+0x10>
    a747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a74b:	48 89 10             	mov    %rdx,(%rax)
    a74e:	48 8d 15 9b 5c 00 00 	lea    0x5c9b(%rip),%rdx        # 103f0 <_ZTVN2vk17OutOfDateKHRErrorE+0x38>
    a755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a759:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a75d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a761:	48 89 c7             	mov    %rax,%rdi
    a764:	e8 4b d1 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a769:	90                   	nop
    a76a:	c9                   	leave
    a76b:	c3                   	ret

000000000000a76c <_ZThn8_N2vk17OutOfDateKHRErrorD1Ev>:
    a76c:	48 83 ef 08          	sub    $0x8,%rdi
    a770:	eb c2                	jmp    a734 <_ZN2vk17OutOfDateKHRErrorD1Ev>

000000000000a772 <_ZN2vk17OutOfDateKHRErrorD0Ev>:
    a772:	55                   	push   %rbp
    a773:	48 89 e5             	mov    %rsp,%rbp
    a776:	48 83 ec 10          	sub    $0x10,%rsp
    a77a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a77e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a782:	48 89 c7             	mov    %rax,%rdi
    a785:	e8 aa ff ff ff       	call   a734 <_ZN2vk17OutOfDateKHRErrorD1Ev>
    a78a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a78e:	be 28 00 00 00       	mov    $0x28,%esi
    a793:	48 89 c7             	mov    %rax,%rdi
    a796:	e8 e5 a9 ff ff       	call   5180 <_ZdlPvm@plt>
    a79b:	c9                   	leave
    a79c:	c3                   	ret

000000000000a79d <_ZThn8_N2vk17OutOfDateKHRErrorD0Ev>:
    a79d:	48 83 ef 08          	sub    $0x8,%rdi
    a7a1:	eb cf                	jmp    a772 <_ZN2vk17OutOfDateKHRErrorD0Ev>
    a7a3:	90                   	nop

000000000000a7a4 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>:
  class NativeWindowInUseKHRError : public SystemError
    a7a4:	55                   	push   %rbp
    a7a5:	48 89 e5             	mov    %rsp,%rbp
    a7a8:	48 83 ec 10          	sub    $0x10,%rsp
    a7ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7b0:	48 8d 15 61 5c 00 00 	lea    0x5c61(%rip),%rdx        # 10418 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x10>
    a7b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7bb:	48 89 10             	mov    %rdx,(%rax)
    a7be:	48 8d 15 7b 5c 00 00 	lea    0x5c7b(%rip),%rdx        # 10440 <_ZTVN2vk25NativeWindowInUseKHRErrorE+0x38>
    a7c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a7cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d1:	48 89 c7             	mov    %rax,%rdi
    a7d4:	e8 db d0 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a7d9:	90                   	nop
    a7da:	c9                   	leave
    a7db:	c3                   	ret

000000000000a7dc <_ZThn8_N2vk25NativeWindowInUseKHRErrorD1Ev>:
    a7dc:	48 83 ef 08          	sub    $0x8,%rdi
    a7e0:	eb c2                	jmp    a7a4 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>

000000000000a7e2 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>:
    a7e2:	55                   	push   %rbp
    a7e3:	48 89 e5             	mov    %rsp,%rbp
    a7e6:	48 83 ec 10          	sub    $0x10,%rsp
    a7ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7f2:	48 89 c7             	mov    %rax,%rdi
    a7f5:	e8 aa ff ff ff       	call   a7a4 <_ZN2vk25NativeWindowInUseKHRErrorD1Ev>
    a7fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7fe:	be 28 00 00 00       	mov    $0x28,%esi
    a803:	48 89 c7             	mov    %rax,%rdi
    a806:	e8 75 a9 ff ff       	call   5180 <_ZdlPvm@plt>
    a80b:	c9                   	leave
    a80c:	c3                   	ret

000000000000a80d <_ZThn8_N2vk25NativeWindowInUseKHRErrorD0Ev>:
    a80d:	48 83 ef 08          	sub    $0x8,%rdi
    a811:	eb cf                	jmp    a7e2 <_ZN2vk25NativeWindowInUseKHRErrorD0Ev>
    a813:	90                   	nop

000000000000a814 <_ZN2vk19SurfaceLostKHRErrorD1Ev>:
  class SurfaceLostKHRError : public SystemError
    a814:	55                   	push   %rbp
    a815:	48 89 e5             	mov    %rsp,%rbp
    a818:	48 83 ec 10          	sub    $0x10,%rsp
    a81c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a820:	48 8d 15 41 5c 00 00 	lea    0x5c41(%rip),%rdx        # 10468 <_ZTVN2vk19SurfaceLostKHRErrorE+0x10>
    a827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a82b:	48 89 10             	mov    %rdx,(%rax)
    a82e:	48 8d 15 5b 5c 00 00 	lea    0x5c5b(%rip),%rdx        # 10490 <_ZTVN2vk19SurfaceLostKHRErrorE+0x38>
    a835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a839:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a83d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a841:	48 89 c7             	mov    %rax,%rdi
    a844:	e8 6b d0 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a849:	90                   	nop
    a84a:	c9                   	leave
    a84b:	c3                   	ret

000000000000a84c <_ZThn8_N2vk19SurfaceLostKHRErrorD1Ev>:
    a84c:	48 83 ef 08          	sub    $0x8,%rdi
    a850:	eb c2                	jmp    a814 <_ZN2vk19SurfaceLostKHRErrorD1Ev>

000000000000a852 <_ZN2vk19SurfaceLostKHRErrorD0Ev>:
    a852:	55                   	push   %rbp
    a853:	48 89 e5             	mov    %rsp,%rbp
    a856:	48 83 ec 10          	sub    $0x10,%rsp
    a85a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a85e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a862:	48 89 c7             	mov    %rax,%rdi
    a865:	e8 aa ff ff ff       	call   a814 <_ZN2vk19SurfaceLostKHRErrorD1Ev>
    a86a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a86e:	be 28 00 00 00       	mov    $0x28,%esi
    a873:	48 89 c7             	mov    %rax,%rdi
    a876:	e8 05 a9 ff ff       	call   5180 <_ZdlPvm@plt>
    a87b:	c9                   	leave
    a87c:	c3                   	ret

000000000000a87d <_ZThn8_N2vk19SurfaceLostKHRErrorD0Ev>:
    a87d:	48 83 ef 08          	sub    $0x8,%rdi
    a881:	eb cf                	jmp    a852 <_ZN2vk19SurfaceLostKHRErrorD0Ev>
    a883:	90                   	nop

000000000000a884 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
  class InvalidOpaqueCaptureAddressError : public SystemError
    a884:	55                   	push   %rbp
    a885:	48 89 e5             	mov    %rsp,%rbp
    a888:	48 83 ec 10          	sub    $0x10,%rsp
    a88c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a890:	48 8d 15 21 5c 00 00 	lea    0x5c21(%rip),%rdx        # 104b8 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x10>
    a897:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a89b:	48 89 10             	mov    %rdx,(%rax)
    a89e:	48 8d 15 3b 5c 00 00 	lea    0x5c3b(%rip),%rdx        # 104e0 <_ZTVN2vk32InvalidOpaqueCaptureAddressErrorE+0x38>
    a8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a8ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b1:	48 89 c7             	mov    %rax,%rdi
    a8b4:	e8 fb cf ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a8b9:	90                   	nop
    a8ba:	c9                   	leave
    a8bb:	c3                   	ret

000000000000a8bc <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD1Ev>:
    a8bc:	48 83 ef 08          	sub    $0x8,%rdi
    a8c0:	eb c2                	jmp    a884 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>

000000000000a8c2 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    a8c2:	55                   	push   %rbp
    a8c3:	48 89 e5             	mov    %rsp,%rbp
    a8c6:	48 83 ec 10          	sub    $0x10,%rsp
    a8ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8d2:	48 89 c7             	mov    %rax,%rdi
    a8d5:	e8 aa ff ff ff       	call   a884 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD1Ev>
    a8da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8de:	be 28 00 00 00       	mov    $0x28,%esi
    a8e3:	48 89 c7             	mov    %rax,%rdi
    a8e6:	e8 95 a8 ff ff       	call   5180 <_ZdlPvm@plt>
    a8eb:	c9                   	leave
    a8ec:	c3                   	ret

000000000000a8ed <_ZThn8_N2vk32InvalidOpaqueCaptureAddressErrorD0Ev>:
    a8ed:	48 83 ef 08          	sub    $0x8,%rdi
    a8f1:	eb cf                	jmp    a8c2 <_ZN2vk32InvalidOpaqueCaptureAddressErrorD0Ev>
    a8f3:	90                   	nop

000000000000a8f4 <_ZN2vk18FragmentationErrorD1Ev>:
  class FragmentationError : public SystemError
    a8f4:	55                   	push   %rbp
    a8f5:	48 89 e5             	mov    %rsp,%rbp
    a8f8:	48 83 ec 10          	sub    $0x10,%rsp
    a8fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a900:	48 8d 15 01 5c 00 00 	lea    0x5c01(%rip),%rdx        # 10508 <_ZTVN2vk18FragmentationErrorE+0x10>
    a907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a90b:	48 89 10             	mov    %rdx,(%rax)
    a90e:	48 8d 15 1b 5c 00 00 	lea    0x5c1b(%rip),%rdx        # 10530 <_ZTVN2vk18FragmentationErrorE+0x38>
    a915:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a919:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a91d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a921:	48 89 c7             	mov    %rax,%rdi
    a924:	e8 8b cf ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a929:	90                   	nop
    a92a:	c9                   	leave
    a92b:	c3                   	ret

000000000000a92c <_ZThn8_N2vk18FragmentationErrorD1Ev>:
    a92c:	48 83 ef 08          	sub    $0x8,%rdi
    a930:	eb c2                	jmp    a8f4 <_ZN2vk18FragmentationErrorD1Ev>

000000000000a932 <_ZN2vk18FragmentationErrorD0Ev>:
    a932:	55                   	push   %rbp
    a933:	48 89 e5             	mov    %rsp,%rbp
    a936:	48 83 ec 10          	sub    $0x10,%rsp
    a93a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a93e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a942:	48 89 c7             	mov    %rax,%rdi
    a945:	e8 aa ff ff ff       	call   a8f4 <_ZN2vk18FragmentationErrorD1Ev>
    a94a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a94e:	be 28 00 00 00       	mov    $0x28,%esi
    a953:	48 89 c7             	mov    %rax,%rdi
    a956:	e8 25 a8 ff ff       	call   5180 <_ZdlPvm@plt>
    a95b:	c9                   	leave
    a95c:	c3                   	ret

000000000000a95d <_ZThn8_N2vk18FragmentationErrorD0Ev>:
    a95d:	48 83 ef 08          	sub    $0x8,%rdi
    a961:	eb cf                	jmp    a932 <_ZN2vk18FragmentationErrorD0Ev>
    a963:	90                   	nop

000000000000a964 <_ZN2vk26InvalidExternalHandleErrorD1Ev>:
  class InvalidExternalHandleError : public SystemError
    a964:	55                   	push   %rbp
    a965:	48 89 e5             	mov    %rsp,%rbp
    a968:	48 83 ec 10          	sub    $0x10,%rsp
    a96c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a970:	48 8d 15 e1 5b 00 00 	lea    0x5be1(%rip),%rdx        # 10558 <_ZTVN2vk26InvalidExternalHandleErrorE+0x10>
    a977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a97b:	48 89 10             	mov    %rdx,(%rax)
    a97e:	48 8d 15 fb 5b 00 00 	lea    0x5bfb(%rip),%rdx        # 10580 <_ZTVN2vk26InvalidExternalHandleErrorE+0x38>
    a985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a989:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a98d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a991:	48 89 c7             	mov    %rax,%rdi
    a994:	e8 1b cf ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    a999:	90                   	nop
    a99a:	c9                   	leave
    a99b:	c3                   	ret

000000000000a99c <_ZThn8_N2vk26InvalidExternalHandleErrorD1Ev>:
    a99c:	48 83 ef 08          	sub    $0x8,%rdi
    a9a0:	eb c2                	jmp    a964 <_ZN2vk26InvalidExternalHandleErrorD1Ev>

000000000000a9a2 <_ZN2vk26InvalidExternalHandleErrorD0Ev>:
    a9a2:	55                   	push   %rbp
    a9a3:	48 89 e5             	mov    %rsp,%rbp
    a9a6:	48 83 ec 10          	sub    $0x10,%rsp
    a9aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9b2:	48 89 c7             	mov    %rax,%rdi
    a9b5:	e8 aa ff ff ff       	call   a964 <_ZN2vk26InvalidExternalHandleErrorD1Ev>
    a9ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9be:	be 28 00 00 00       	mov    $0x28,%esi
    a9c3:	48 89 c7             	mov    %rax,%rdi
    a9c6:	e8 b5 a7 ff ff       	call   5180 <_ZdlPvm@plt>
    a9cb:	c9                   	leave
    a9cc:	c3                   	ret

000000000000a9cd <_ZThn8_N2vk26InvalidExternalHandleErrorD0Ev>:
    a9cd:	48 83 ef 08          	sub    $0x8,%rdi
    a9d1:	eb cf                	jmp    a9a2 <_ZN2vk26InvalidExternalHandleErrorD0Ev>
    a9d3:	90                   	nop

000000000000a9d4 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>:
  class OutOfPoolMemoryError : public SystemError
    a9d4:	55                   	push   %rbp
    a9d5:	48 89 e5             	mov    %rsp,%rbp
    a9d8:	48 83 ec 10          	sub    $0x10,%rsp
    a9dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9e0:	48 8d 15 c1 5b 00 00 	lea    0x5bc1(%rip),%rdx        # 105a8 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x10>
    a9e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9eb:	48 89 10             	mov    %rdx,(%rax)
    a9ee:	48 8d 15 db 5b 00 00 	lea    0x5bdb(%rip),%rdx        # 105d0 <_ZTVN2vk20OutOfPoolMemoryErrorE+0x38>
    a9f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9f9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a9fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa01:	48 89 c7             	mov    %rax,%rdi
    aa04:	e8 ab ce ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    aa09:	90                   	nop
    aa0a:	c9                   	leave
    aa0b:	c3                   	ret

000000000000aa0c <_ZThn8_N2vk20OutOfPoolMemoryErrorD1Ev>:
    aa0c:	48 83 ef 08          	sub    $0x8,%rdi
    aa10:	eb c2                	jmp    a9d4 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>

000000000000aa12 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>:
    aa12:	55                   	push   %rbp
    aa13:	48 89 e5             	mov    %rsp,%rbp
    aa16:	48 83 ec 10          	sub    $0x10,%rsp
    aa1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa22:	48 89 c7             	mov    %rax,%rdi
    aa25:	e8 aa ff ff ff       	call   a9d4 <_ZN2vk20OutOfPoolMemoryErrorD1Ev>
    aa2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa2e:	be 28 00 00 00       	mov    $0x28,%esi
    aa33:	48 89 c7             	mov    %rax,%rdi
    aa36:	e8 45 a7 ff ff       	call   5180 <_ZdlPvm@plt>
    aa3b:	c9                   	leave
    aa3c:	c3                   	ret

000000000000aa3d <_ZThn8_N2vk20OutOfPoolMemoryErrorD0Ev>:
    aa3d:	48 83 ef 08          	sub    $0x8,%rdi
    aa41:	eb cf                	jmp    aa12 <_ZN2vk20OutOfPoolMemoryErrorD0Ev>
    aa43:	90                   	nop

000000000000aa44 <_ZN2vk12UnknownErrorD1Ev>:
  class UnknownError : public SystemError
    aa44:	55                   	push   %rbp
    aa45:	48 89 e5             	mov    %rsp,%rbp
    aa48:	48 83 ec 10          	sub    $0x10,%rsp
    aa4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa50:	48 8d 15 a1 5b 00 00 	lea    0x5ba1(%rip),%rdx        # 105f8 <_ZTVN2vk12UnknownErrorE+0x10>
    aa57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa5b:	48 89 10             	mov    %rdx,(%rax)
    aa5e:	48 8d 15 bb 5b 00 00 	lea    0x5bbb(%rip),%rdx        # 10620 <_ZTVN2vk12UnknownErrorE+0x38>
    aa65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa69:	48 89 50 08          	mov    %rdx,0x8(%rax)
    aa6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa71:	48 89 c7             	mov    %rax,%rdi
    aa74:	e8 3b ce ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    aa79:	90                   	nop
    aa7a:	c9                   	leave
    aa7b:	c3                   	ret

000000000000aa7c <_ZThn8_N2vk12UnknownErrorD1Ev>:
    aa7c:	48 83 ef 08          	sub    $0x8,%rdi
    aa80:	eb c2                	jmp    aa44 <_ZN2vk12UnknownErrorD1Ev>

000000000000aa82 <_ZN2vk12UnknownErrorD0Ev>:
    aa82:	55                   	push   %rbp
    aa83:	48 89 e5             	mov    %rsp,%rbp
    aa86:	48 83 ec 10          	sub    $0x10,%rsp
    aa8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa92:	48 89 c7             	mov    %rax,%rdi
    aa95:	e8 aa ff ff ff       	call   aa44 <_ZN2vk12UnknownErrorD1Ev>
    aa9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa9e:	be 28 00 00 00       	mov    $0x28,%esi
    aaa3:	48 89 c7             	mov    %rax,%rdi
    aaa6:	e8 d5 a6 ff ff       	call   5180 <_ZdlPvm@plt>
    aaab:	c9                   	leave
    aaac:	c3                   	ret

000000000000aaad <_ZThn8_N2vk12UnknownErrorD0Ev>:
    aaad:	48 83 ef 08          	sub    $0x8,%rdi
    aab1:	eb cf                	jmp    aa82 <_ZN2vk12UnknownErrorD0Ev>
    aab3:	90                   	nop

000000000000aab4 <_ZN2vk19FragmentedPoolErrorD1Ev>:
  class FragmentedPoolError : public SystemError
    aab4:	55                   	push   %rbp
    aab5:	48 89 e5             	mov    %rsp,%rbp
    aab8:	48 83 ec 10          	sub    $0x10,%rsp
    aabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aac0:	48 8d 15 81 5b 00 00 	lea    0x5b81(%rip),%rdx        # 10648 <_ZTVN2vk19FragmentedPoolErrorE+0x10>
    aac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aacb:	48 89 10             	mov    %rdx,(%rax)
    aace:	48 8d 15 9b 5b 00 00 	lea    0x5b9b(%rip),%rdx        # 10670 <_ZTVN2vk19FragmentedPoolErrorE+0x38>
    aad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aad9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    aadd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aae1:	48 89 c7             	mov    %rax,%rdi
    aae4:	e8 cb cd ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    aae9:	90                   	nop
    aaea:	c9                   	leave
    aaeb:	c3                   	ret

000000000000aaec <_ZThn8_N2vk19FragmentedPoolErrorD1Ev>:
    aaec:	48 83 ef 08          	sub    $0x8,%rdi
    aaf0:	eb c2                	jmp    aab4 <_ZN2vk19FragmentedPoolErrorD1Ev>

000000000000aaf2 <_ZN2vk19FragmentedPoolErrorD0Ev>:
    aaf2:	55                   	push   %rbp
    aaf3:	48 89 e5             	mov    %rsp,%rbp
    aaf6:	48 83 ec 10          	sub    $0x10,%rsp
    aafa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aafe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab02:	48 89 c7             	mov    %rax,%rdi
    ab05:	e8 aa ff ff ff       	call   aab4 <_ZN2vk19FragmentedPoolErrorD1Ev>
    ab0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab0e:	be 28 00 00 00       	mov    $0x28,%esi
    ab13:	48 89 c7             	mov    %rax,%rdi
    ab16:	e8 65 a6 ff ff       	call   5180 <_ZdlPvm@plt>
    ab1b:	c9                   	leave
    ab1c:	c3                   	ret

000000000000ab1d <_ZThn8_N2vk19FragmentedPoolErrorD0Ev>:
    ab1d:	48 83 ef 08          	sub    $0x8,%rdi
    ab21:	eb cf                	jmp    aaf2 <_ZN2vk19FragmentedPoolErrorD0Ev>
    ab23:	90                   	nop

000000000000ab24 <_ZN2vk23FormatNotSupportedErrorD1Ev>:
  class FormatNotSupportedError : public SystemError
    ab24:	55                   	push   %rbp
    ab25:	48 89 e5             	mov    %rsp,%rbp
    ab28:	48 83 ec 10          	sub    $0x10,%rsp
    ab2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab30:	48 8d 15 61 5b 00 00 	lea    0x5b61(%rip),%rdx        # 10698 <_ZTVN2vk23FormatNotSupportedErrorE+0x10>
    ab37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab3b:	48 89 10             	mov    %rdx,(%rax)
    ab3e:	48 8d 15 7b 5b 00 00 	lea    0x5b7b(%rip),%rdx        # 106c0 <_ZTVN2vk23FormatNotSupportedErrorE+0x38>
    ab45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab49:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ab4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab51:	48 89 c7             	mov    %rax,%rdi
    ab54:	e8 5b cd ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    ab59:	90                   	nop
    ab5a:	c9                   	leave
    ab5b:	c3                   	ret

000000000000ab5c <_ZThn8_N2vk23FormatNotSupportedErrorD1Ev>:
    ab5c:	48 83 ef 08          	sub    $0x8,%rdi
    ab60:	eb c2                	jmp    ab24 <_ZN2vk23FormatNotSupportedErrorD1Ev>

000000000000ab62 <_ZN2vk23FormatNotSupportedErrorD0Ev>:
    ab62:	55                   	push   %rbp
    ab63:	48 89 e5             	mov    %rsp,%rbp
    ab66:	48 83 ec 10          	sub    $0x10,%rsp
    ab6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab72:	48 89 c7             	mov    %rax,%rdi
    ab75:	e8 aa ff ff ff       	call   ab24 <_ZN2vk23FormatNotSupportedErrorD1Ev>
    ab7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab7e:	be 28 00 00 00       	mov    $0x28,%esi
    ab83:	48 89 c7             	mov    %rax,%rdi
    ab86:	e8 f5 a5 ff ff       	call   5180 <_ZdlPvm@plt>
    ab8b:	c9                   	leave
    ab8c:	c3                   	ret

000000000000ab8d <_ZThn8_N2vk23FormatNotSupportedErrorD0Ev>:
    ab8d:	48 83 ef 08          	sub    $0x8,%rdi
    ab91:	eb cf                	jmp    ab62 <_ZN2vk23FormatNotSupportedErrorD0Ev>
    ab93:	90                   	nop

000000000000ab94 <_ZN2vk19TooManyObjectsErrorD1Ev>:
  class TooManyObjectsError : public SystemError
    ab94:	55                   	push   %rbp
    ab95:	48 89 e5             	mov    %rsp,%rbp
    ab98:	48 83 ec 10          	sub    $0x10,%rsp
    ab9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aba0:	48 8d 15 41 5b 00 00 	lea    0x5b41(%rip),%rdx        # 106e8 <_ZTVN2vk19TooManyObjectsErrorE+0x10>
    aba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abab:	48 89 10             	mov    %rdx,(%rax)
    abae:	48 8d 15 5b 5b 00 00 	lea    0x5b5b(%rip),%rdx        # 10710 <_ZTVN2vk19TooManyObjectsErrorE+0x38>
    abb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abb9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    abbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc1:	48 89 c7             	mov    %rax,%rdi
    abc4:	e8 eb cc ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    abc9:	90                   	nop
    abca:	c9                   	leave
    abcb:	c3                   	ret

000000000000abcc <_ZThn8_N2vk19TooManyObjectsErrorD1Ev>:
    abcc:	48 83 ef 08          	sub    $0x8,%rdi
    abd0:	eb c2                	jmp    ab94 <_ZN2vk19TooManyObjectsErrorD1Ev>

000000000000abd2 <_ZN2vk19TooManyObjectsErrorD0Ev>:
    abd2:	55                   	push   %rbp
    abd3:	48 89 e5             	mov    %rsp,%rbp
    abd6:	48 83 ec 10          	sub    $0x10,%rsp
    abda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abe2:	48 89 c7             	mov    %rax,%rdi
    abe5:	e8 aa ff ff ff       	call   ab94 <_ZN2vk19TooManyObjectsErrorD1Ev>
    abea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abee:	be 28 00 00 00       	mov    $0x28,%esi
    abf3:	48 89 c7             	mov    %rax,%rdi
    abf6:	e8 85 a5 ff ff       	call   5180 <_ZdlPvm@plt>
    abfb:	c9                   	leave
    abfc:	c3                   	ret

000000000000abfd <_ZThn8_N2vk19TooManyObjectsErrorD0Ev>:
    abfd:	48 83 ef 08          	sub    $0x8,%rdi
    ac01:	eb cf                	jmp    abd2 <_ZN2vk19TooManyObjectsErrorD0Ev>
    ac03:	90                   	nop

000000000000ac04 <_ZN2vk23IncompatibleDriverErrorD1Ev>:
  class IncompatibleDriverError : public SystemError
    ac04:	55                   	push   %rbp
    ac05:	48 89 e5             	mov    %rsp,%rbp
    ac08:	48 83 ec 10          	sub    $0x10,%rsp
    ac0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac10:	48 8d 15 21 5b 00 00 	lea    0x5b21(%rip),%rdx        # 10738 <_ZTVN2vk23IncompatibleDriverErrorE+0x10>
    ac17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac1b:	48 89 10             	mov    %rdx,(%rax)
    ac1e:	48 8d 15 3b 5b 00 00 	lea    0x5b3b(%rip),%rdx        # 10760 <_ZTVN2vk23IncompatibleDriverErrorE+0x38>
    ac25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac29:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ac2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac31:	48 89 c7             	mov    %rax,%rdi
    ac34:	e8 7b cc ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    ac39:	90                   	nop
    ac3a:	c9                   	leave
    ac3b:	c3                   	ret

000000000000ac3c <_ZThn8_N2vk23IncompatibleDriverErrorD1Ev>:
    ac3c:	48 83 ef 08          	sub    $0x8,%rdi
    ac40:	eb c2                	jmp    ac04 <_ZN2vk23IncompatibleDriverErrorD1Ev>

000000000000ac42 <_ZN2vk23IncompatibleDriverErrorD0Ev>:
    ac42:	55                   	push   %rbp
    ac43:	48 89 e5             	mov    %rsp,%rbp
    ac46:	48 83 ec 10          	sub    $0x10,%rsp
    ac4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac52:	48 89 c7             	mov    %rax,%rdi
    ac55:	e8 aa ff ff ff       	call   ac04 <_ZN2vk23IncompatibleDriverErrorD1Ev>
    ac5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac5e:	be 28 00 00 00       	mov    $0x28,%esi
    ac63:	48 89 c7             	mov    %rax,%rdi
    ac66:	e8 15 a5 ff ff       	call   5180 <_ZdlPvm@plt>
    ac6b:	c9                   	leave
    ac6c:	c3                   	ret

000000000000ac6d <_ZThn8_N2vk23IncompatibleDriverErrorD0Ev>:
    ac6d:	48 83 ef 08          	sub    $0x8,%rdi
    ac71:	eb cf                	jmp    ac42 <_ZN2vk23IncompatibleDriverErrorD0Ev>
    ac73:	90                   	nop

000000000000ac74 <_ZN2vk22FeatureNotPresentErrorD1Ev>:
  class FeatureNotPresentError : public SystemError
    ac74:	55                   	push   %rbp
    ac75:	48 89 e5             	mov    %rsp,%rbp
    ac78:	48 83 ec 10          	sub    $0x10,%rsp
    ac7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac80:	48 8d 15 01 5b 00 00 	lea    0x5b01(%rip),%rdx        # 10788 <_ZTVN2vk22FeatureNotPresentErrorE+0x10>
    ac87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac8b:	48 89 10             	mov    %rdx,(%rax)
    ac8e:	48 8d 15 1b 5b 00 00 	lea    0x5b1b(%rip),%rdx        # 107b0 <_ZTVN2vk22FeatureNotPresentErrorE+0x38>
    ac95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac99:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ac9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aca1:	48 89 c7             	mov    %rax,%rdi
    aca4:	e8 0b cc ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    aca9:	90                   	nop
    acaa:	c9                   	leave
    acab:	c3                   	ret

000000000000acac <_ZThn8_N2vk22FeatureNotPresentErrorD1Ev>:
    acac:	48 83 ef 08          	sub    $0x8,%rdi
    acb0:	eb c2                	jmp    ac74 <_ZN2vk22FeatureNotPresentErrorD1Ev>

000000000000acb2 <_ZN2vk22FeatureNotPresentErrorD0Ev>:
    acb2:	55                   	push   %rbp
    acb3:	48 89 e5             	mov    %rsp,%rbp
    acb6:	48 83 ec 10          	sub    $0x10,%rsp
    acba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acc2:	48 89 c7             	mov    %rax,%rdi
    acc5:	e8 aa ff ff ff       	call   ac74 <_ZN2vk22FeatureNotPresentErrorD1Ev>
    acca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acce:	be 28 00 00 00       	mov    $0x28,%esi
    acd3:	48 89 c7             	mov    %rax,%rdi
    acd6:	e8 a5 a4 ff ff       	call   5180 <_ZdlPvm@plt>
    acdb:	c9                   	leave
    acdc:	c3                   	ret

000000000000acdd <_ZThn8_N2vk22FeatureNotPresentErrorD0Ev>:
    acdd:	48 83 ef 08          	sub    $0x8,%rdi
    ace1:	eb cf                	jmp    acb2 <_ZN2vk22FeatureNotPresentErrorD0Ev>
    ace3:	90                   	nop

000000000000ace4 <_ZN2vk24ExtensionNotPresentErrorD1Ev>:
  class ExtensionNotPresentError : public SystemError
    ace4:	55                   	push   %rbp
    ace5:	48 89 e5             	mov    %rsp,%rbp
    ace8:	48 83 ec 10          	sub    $0x10,%rsp
    acec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acf0:	48 8d 15 e1 5a 00 00 	lea    0x5ae1(%rip),%rdx        # 107d8 <_ZTVN2vk24ExtensionNotPresentErrorE+0x10>
    acf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acfb:	48 89 10             	mov    %rdx,(%rax)
    acfe:	48 8d 15 fb 5a 00 00 	lea    0x5afb(%rip),%rdx        # 10800 <_ZTVN2vk24ExtensionNotPresentErrorE+0x38>
    ad05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad09:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ad0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad11:	48 89 c7             	mov    %rax,%rdi
    ad14:	e8 9b cb ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    ad19:	90                   	nop
    ad1a:	c9                   	leave
    ad1b:	c3                   	ret

000000000000ad1c <_ZThn8_N2vk24ExtensionNotPresentErrorD1Ev>:
    ad1c:	48 83 ef 08          	sub    $0x8,%rdi
    ad20:	eb c2                	jmp    ace4 <_ZN2vk24ExtensionNotPresentErrorD1Ev>

000000000000ad22 <_ZN2vk24ExtensionNotPresentErrorD0Ev>:
    ad22:	55                   	push   %rbp
    ad23:	48 89 e5             	mov    %rsp,%rbp
    ad26:	48 83 ec 10          	sub    $0x10,%rsp
    ad2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad32:	48 89 c7             	mov    %rax,%rdi
    ad35:	e8 aa ff ff ff       	call   ace4 <_ZN2vk24ExtensionNotPresentErrorD1Ev>
    ad3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad3e:	be 28 00 00 00       	mov    $0x28,%esi
    ad43:	48 89 c7             	mov    %rax,%rdi
    ad46:	e8 35 a4 ff ff       	call   5180 <_ZdlPvm@plt>
    ad4b:	c9                   	leave
    ad4c:	c3                   	ret

000000000000ad4d <_ZThn8_N2vk24ExtensionNotPresentErrorD0Ev>:
    ad4d:	48 83 ef 08          	sub    $0x8,%rdi
    ad51:	eb cf                	jmp    ad22 <_ZN2vk24ExtensionNotPresentErrorD0Ev>
    ad53:	90                   	nop

000000000000ad54 <_ZN2vk20LayerNotPresentErrorD1Ev>:
  class LayerNotPresentError : public SystemError
    ad54:	55                   	push   %rbp
    ad55:	48 89 e5             	mov    %rsp,%rbp
    ad58:	48 83 ec 10          	sub    $0x10,%rsp
    ad5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad60:	48 8d 15 c1 5a 00 00 	lea    0x5ac1(%rip),%rdx        # 10828 <_ZTVN2vk20LayerNotPresentErrorE+0x10>
    ad67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad6b:	48 89 10             	mov    %rdx,(%rax)
    ad6e:	48 8d 15 db 5a 00 00 	lea    0x5adb(%rip),%rdx        # 10850 <_ZTVN2vk20LayerNotPresentErrorE+0x38>
    ad75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad79:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ad7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad81:	48 89 c7             	mov    %rax,%rdi
    ad84:	e8 2b cb ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    ad89:	90                   	nop
    ad8a:	c9                   	leave
    ad8b:	c3                   	ret

000000000000ad8c <_ZThn8_N2vk20LayerNotPresentErrorD1Ev>:
    ad8c:	48 83 ef 08          	sub    $0x8,%rdi
    ad90:	eb c2                	jmp    ad54 <_ZN2vk20LayerNotPresentErrorD1Ev>

000000000000ad92 <_ZN2vk20LayerNotPresentErrorD0Ev>:
    ad92:	55                   	push   %rbp
    ad93:	48 89 e5             	mov    %rsp,%rbp
    ad96:	48 83 ec 10          	sub    $0x10,%rsp
    ad9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada2:	48 89 c7             	mov    %rax,%rdi
    ada5:	e8 aa ff ff ff       	call   ad54 <_ZN2vk20LayerNotPresentErrorD1Ev>
    adaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adae:	be 28 00 00 00       	mov    $0x28,%esi
    adb3:	48 89 c7             	mov    %rax,%rdi
    adb6:	e8 c5 a3 ff ff       	call   5180 <_ZdlPvm@plt>
    adbb:	c9                   	leave
    adbc:	c3                   	ret

000000000000adbd <_ZThn8_N2vk20LayerNotPresentErrorD0Ev>:
    adbd:	48 83 ef 08          	sub    $0x8,%rdi
    adc1:	eb cf                	jmp    ad92 <_ZN2vk20LayerNotPresentErrorD0Ev>
    adc3:	90                   	nop

000000000000adc4 <_ZN2vk20MemoryMapFailedErrorD1Ev>:
  class MemoryMapFailedError : public SystemError
    adc4:	55                   	push   %rbp
    adc5:	48 89 e5             	mov    %rsp,%rbp
    adc8:	48 83 ec 10          	sub    $0x10,%rsp
    adcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    add0:	48 8d 15 a1 5a 00 00 	lea    0x5aa1(%rip),%rdx        # 10878 <_ZTVN2vk20MemoryMapFailedErrorE+0x10>
    add7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    addb:	48 89 10             	mov    %rdx,(%rax)
    adde:	48 8d 15 bb 5a 00 00 	lea    0x5abb(%rip),%rdx        # 108a0 <_ZTVN2vk20MemoryMapFailedErrorE+0x38>
    ade5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ade9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    aded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf1:	48 89 c7             	mov    %rax,%rdi
    adf4:	e8 bb ca ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    adf9:	90                   	nop
    adfa:	c9                   	leave
    adfb:	c3                   	ret

000000000000adfc <_ZThn8_N2vk20MemoryMapFailedErrorD1Ev>:
    adfc:	48 83 ef 08          	sub    $0x8,%rdi
    ae00:	eb c2                	jmp    adc4 <_ZN2vk20MemoryMapFailedErrorD1Ev>

000000000000ae02 <_ZN2vk20MemoryMapFailedErrorD0Ev>:
    ae02:	55                   	push   %rbp
    ae03:	48 89 e5             	mov    %rsp,%rbp
    ae06:	48 83 ec 10          	sub    $0x10,%rsp
    ae0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae12:	48 89 c7             	mov    %rax,%rdi
    ae15:	e8 aa ff ff ff       	call   adc4 <_ZN2vk20MemoryMapFailedErrorD1Ev>
    ae1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1e:	be 28 00 00 00       	mov    $0x28,%esi
    ae23:	48 89 c7             	mov    %rax,%rdi
    ae26:	e8 55 a3 ff ff       	call   5180 <_ZdlPvm@plt>
    ae2b:	c9                   	leave
    ae2c:	c3                   	ret

000000000000ae2d <_ZThn8_N2vk20MemoryMapFailedErrorD0Ev>:
    ae2d:	48 83 ef 08          	sub    $0x8,%rdi
    ae31:	eb cf                	jmp    ae02 <_ZN2vk20MemoryMapFailedErrorD0Ev>
    ae33:	90                   	nop

000000000000ae34 <_ZN2vk15DeviceLostErrorD1Ev>:
  class DeviceLostError : public SystemError
    ae34:	55                   	push   %rbp
    ae35:	48 89 e5             	mov    %rsp,%rbp
    ae38:	48 83 ec 10          	sub    $0x10,%rsp
    ae3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae40:	48 8d 15 81 5a 00 00 	lea    0x5a81(%rip),%rdx        # 108c8 <_ZTVN2vk15DeviceLostErrorE+0x10>
    ae47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae4b:	48 89 10             	mov    %rdx,(%rax)
    ae4e:	48 8d 15 9b 5a 00 00 	lea    0x5a9b(%rip),%rdx        # 108f0 <_ZTVN2vk15DeviceLostErrorE+0x38>
    ae55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae59:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ae5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae61:	48 89 c7             	mov    %rax,%rdi
    ae64:	e8 4b ca ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    ae69:	90                   	nop
    ae6a:	c9                   	leave
    ae6b:	c3                   	ret

000000000000ae6c <_ZThn8_N2vk15DeviceLostErrorD1Ev>:
    ae6c:	48 83 ef 08          	sub    $0x8,%rdi
    ae70:	eb c2                	jmp    ae34 <_ZN2vk15DeviceLostErrorD1Ev>

000000000000ae72 <_ZN2vk15DeviceLostErrorD0Ev>:
    ae72:	55                   	push   %rbp
    ae73:	48 89 e5             	mov    %rsp,%rbp
    ae76:	48 83 ec 10          	sub    $0x10,%rsp
    ae7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae82:	48 89 c7             	mov    %rax,%rdi
    ae85:	e8 aa ff ff ff       	call   ae34 <_ZN2vk15DeviceLostErrorD1Ev>
    ae8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae8e:	be 28 00 00 00       	mov    $0x28,%esi
    ae93:	48 89 c7             	mov    %rax,%rdi
    ae96:	e8 e5 a2 ff ff       	call   5180 <_ZdlPvm@plt>
    ae9b:	c9                   	leave
    ae9c:	c3                   	ret

000000000000ae9d <_ZThn8_N2vk15DeviceLostErrorD0Ev>:
    ae9d:	48 83 ef 08          	sub    $0x8,%rdi
    aea1:	eb cf                	jmp    ae72 <_ZN2vk15DeviceLostErrorD0Ev>
    aea3:	90                   	nop

000000000000aea4 <_ZN2vk25InitializationFailedErrorD1Ev>:
  class InitializationFailedError : public SystemError
    aea4:	55                   	push   %rbp
    aea5:	48 89 e5             	mov    %rsp,%rbp
    aea8:	48 83 ec 10          	sub    $0x10,%rsp
    aeac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeb0:	48 8d 15 61 5a 00 00 	lea    0x5a61(%rip),%rdx        # 10918 <_ZTVN2vk25InitializationFailedErrorE+0x10>
    aeb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aebb:	48 89 10             	mov    %rdx,(%rax)
    aebe:	48 8d 15 7b 5a 00 00 	lea    0x5a7b(%rip),%rdx        # 10940 <_ZTVN2vk25InitializationFailedErrorE+0x38>
    aec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    aecd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aed1:	48 89 c7             	mov    %rax,%rdi
    aed4:	e8 db c9 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    aed9:	90                   	nop
    aeda:	c9                   	leave
    aedb:	c3                   	ret

000000000000aedc <_ZThn8_N2vk25InitializationFailedErrorD1Ev>:
    aedc:	48 83 ef 08          	sub    $0x8,%rdi
    aee0:	eb c2                	jmp    aea4 <_ZN2vk25InitializationFailedErrorD1Ev>

000000000000aee2 <_ZN2vk25InitializationFailedErrorD0Ev>:
    aee2:	55                   	push   %rbp
    aee3:	48 89 e5             	mov    %rsp,%rbp
    aee6:	48 83 ec 10          	sub    $0x10,%rsp
    aeea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef2:	48 89 c7             	mov    %rax,%rdi
    aef5:	e8 aa ff ff ff       	call   aea4 <_ZN2vk25InitializationFailedErrorD1Ev>
    aefa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aefe:	be 28 00 00 00       	mov    $0x28,%esi
    af03:	48 89 c7             	mov    %rax,%rdi
    af06:	e8 75 a2 ff ff       	call   5180 <_ZdlPvm@plt>
    af0b:	c9                   	leave
    af0c:	c3                   	ret

000000000000af0d <_ZThn8_N2vk25InitializationFailedErrorD0Ev>:
    af0d:	48 83 ef 08          	sub    $0x8,%rdi
    af11:	eb cf                	jmp    aee2 <_ZN2vk25InitializationFailedErrorD0Ev>
    af13:	90                   	nop

000000000000af14 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>:
  class OutOfDeviceMemoryError : public SystemError
    af14:	55                   	push   %rbp
    af15:	48 89 e5             	mov    %rsp,%rbp
    af18:	48 83 ec 10          	sub    $0x10,%rsp
    af1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af20:	48 8d 15 41 5a 00 00 	lea    0x5a41(%rip),%rdx        # 10968 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x10>
    af27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af2b:	48 89 10             	mov    %rdx,(%rax)
    af2e:	48 8d 15 5b 5a 00 00 	lea    0x5a5b(%rip),%rdx        # 10990 <_ZTVN2vk22OutOfDeviceMemoryErrorE+0x38>
    af35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af39:	48 89 50 08          	mov    %rdx,0x8(%rax)
    af3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af41:	48 89 c7             	mov    %rax,%rdi
    af44:	e8 6b c9 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    af49:	90                   	nop
    af4a:	c9                   	leave
    af4b:	c3                   	ret

000000000000af4c <_ZThn8_N2vk22OutOfDeviceMemoryErrorD1Ev>:
    af4c:	48 83 ef 08          	sub    $0x8,%rdi
    af50:	eb c2                	jmp    af14 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>

000000000000af52 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>:
    af52:	55                   	push   %rbp
    af53:	48 89 e5             	mov    %rsp,%rbp
    af56:	48 83 ec 10          	sub    $0x10,%rsp
    af5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af62:	48 89 c7             	mov    %rax,%rdi
    af65:	e8 aa ff ff ff       	call   af14 <_ZN2vk22OutOfDeviceMemoryErrorD1Ev>
    af6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af6e:	be 28 00 00 00       	mov    $0x28,%esi
    af73:	48 89 c7             	mov    %rax,%rdi
    af76:	e8 05 a2 ff ff       	call   5180 <_ZdlPvm@plt>
    af7b:	c9                   	leave
    af7c:	c3                   	ret

000000000000af7d <_ZThn8_N2vk22OutOfDeviceMemoryErrorD0Ev>:
    af7d:	48 83 ef 08          	sub    $0x8,%rdi
    af81:	eb cf                	jmp    af52 <_ZN2vk22OutOfDeviceMemoryErrorD0Ev>
    af83:	90                   	nop

000000000000af84 <_ZN2vk20OutOfHostMemoryErrorD1Ev>:
  class OutOfHostMemoryError : public SystemError
    af84:	55                   	push   %rbp
    af85:	48 89 e5             	mov    %rsp,%rbp
    af88:	48 83 ec 10          	sub    $0x10,%rsp
    af8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af90:	48 8d 15 21 5a 00 00 	lea    0x5a21(%rip),%rdx        # 109b8 <_ZTVN2vk20OutOfHostMemoryErrorE+0x10>
    af97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af9b:	48 89 10             	mov    %rdx,(%rax)
    af9e:	48 8d 15 3b 5a 00 00 	lea    0x5a3b(%rip),%rdx        # 109e0 <_ZTVN2vk20OutOfHostMemoryErrorE+0x38>
    afa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afa9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    afad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afb1:	48 89 c7             	mov    %rax,%rdi
    afb4:	e8 fb c8 ff ff       	call   78b4 <_ZN2vk11SystemErrorD1Ev>
    afb9:	90                   	nop
    afba:	c9                   	leave
    afbb:	c3                   	ret

000000000000afbc <_ZThn8_N2vk20OutOfHostMemoryErrorD1Ev>:
    afbc:	48 83 ef 08          	sub    $0x8,%rdi
    afc0:	eb c2                	jmp    af84 <_ZN2vk20OutOfHostMemoryErrorD1Ev>

000000000000afc2 <_ZN2vk20OutOfHostMemoryErrorD0Ev>:
    afc2:	55                   	push   %rbp
    afc3:	48 89 e5             	mov    %rsp,%rbp
    afc6:	48 83 ec 10          	sub    $0x10,%rsp
    afca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afd2:	48 89 c7             	mov    %rax,%rdi
    afd5:	e8 aa ff ff ff       	call   af84 <_ZN2vk20OutOfHostMemoryErrorD1Ev>
    afda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afde:	be 28 00 00 00       	mov    $0x28,%esi
    afe3:	48 89 c7             	mov    %rax,%rdi
    afe6:	e8 95 a1 ff ff       	call   5180 <_ZdlPvm@plt>
    afeb:	c9                   	leave
    afec:	c3                   	ret

000000000000afed <_ZThn8_N2vk20OutOfHostMemoryErrorD0Ev>:
    afed:	48 83 ef 08          	sub    $0x8,%rdi
    aff1:	eb cf                	jmp    afc2 <_ZN2vk20OutOfHostMemoryErrorD0Ev>
    aff3:	90                   	nop

000000000000aff4 <_ZN2vk17ErrorCategoryImplD1Ev>:
  class ErrorCategoryImpl : public std::error_category
    aff4:	55                   	push   %rbp
    aff5:	48 89 e5             	mov    %rsp,%rbp
    aff8:	48 83 ec 10          	sub    $0x10,%rsp
    affc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b000:	48 8d 15 a1 5a 00 00 	lea    0x5aa1(%rip),%rdx        # 10aa8 <_ZTVN2vk17ErrorCategoryImplE+0x10>
    b007:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b00b:	48 89 10             	mov    %rdx,(%rax)
    b00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b012:	48 89 c7             	mov    %rax,%rdi
    b015:	e8 36 a2 ff ff       	call   5250 <_ZNSt3_V214error_categoryD2Ev@plt>
    b01a:	90                   	nop
    b01b:	c9                   	leave
    b01c:	c3                   	ret
    b01d:	90                   	nop

000000000000b01e <_ZN2vk17ErrorCategoryImplD0Ev>:
    b01e:	55                   	push   %rbp
    b01f:	48 89 e5             	mov    %rsp,%rbp
    b022:	48 83 ec 10          	sub    $0x10,%rsp
    b026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b02a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b02e:	48 89 c7             	mov    %rax,%rdi
    b031:	e8 be ff ff ff       	call   aff4 <_ZN2vk17ErrorCategoryImplD1Ev>
    b036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b03a:	be 08 00 00 00       	mov    $0x8,%esi
    b03f:	48 89 c7             	mov    %rax,%rdi
    b042:	e8 39 a1 ff ff       	call   5180 <_ZdlPvm@plt>
    b047:	c9                   	leave
    b048:	c3                   	ret

Disassembly of section .fini:

000000000000b04c <_fini>:
    b04c:	48 83 ec 08          	sub    $0x8,%rsp
    b050:	48 83 c4 08          	add    $0x8,%rsp
    b054:	c3                   	ret
