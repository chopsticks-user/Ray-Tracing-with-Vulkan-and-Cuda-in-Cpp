
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 1f 02 00 	mov    0x21fad(%rip),%rax        # 25fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 1f 02 00    	push   0x21fca(%rip)        # 25ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 1f 02 00    	jmp    *0x21fcc(%rip)        # 25ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 1f 02 00    	jmp    *0x21fca(%rip)        # 26000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 1f 02 00    	jmp    *0x21fc2(%rip)        # 26008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4050:	ff 25 ba 1f 02 00    	jmp    *0x21fba(%rip)        # 26010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZNSaIcED2Ev@plt>:
    4060:	ff 25 b2 1f 02 00    	jmp    *0x21fb2(%rip)        # 26018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4070:	ff 25 aa 1f 02 00    	jmp    *0x21faa(%rip)        # 26020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4080:	ff 25 a2 1f 02 00    	jmp    *0x21fa2(%rip)        # 26028 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSolsEm@plt>:
    4090:	ff 25 9a 1f 02 00    	jmp    *0x21f9a(%rip)        # 26030 <_ZNSolsEm@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <vkDeviceWaitIdle@plt>:
    40a0:	ff 25 92 1f 02 00    	jmp    *0x21f92(%rip)        # 26038 <vkDeviceWaitIdle@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40b0:	ff 25 8a 1f 02 00    	jmp    *0x21f8a(%rip)        # 26040 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDestroySwapchainKHR@plt>:
    40c0:	ff 25 82 1f 02 00    	jmp    *0x21f82(%rip)        # 26048 <vkDestroySwapchainKHR@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <glfwDestroyWindow@plt>:
    40d0:	ff 25 7a 1f 02 00    	jmp    *0x21f7a(%rip)        # 26050 <glfwDestroyWindow@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <_ZSt17__throw_bad_allocv@plt>:
    40e0:	ff 25 72 1f 02 00    	jmp    *0x21f72(%rip)        # 26058 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    40f0:	ff 25 6a 1f 02 00    	jmp    *0x21f6a(%rip)        # 26060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNSt13runtime_errorC1EPKc@plt>:
    4100:	ff 25 62 1f 02 00    	jmp    *0x21f62(%rip)        # 26068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <vkGetPhysicalDeviceProperties@plt>:
    4110:	ff 25 5a 1f 02 00    	jmp    *0x21f5a(%rip)        # 26070 <vkGetPhysicalDeviceProperties@Base>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <__cxa_begin_catch@plt>:
    4120:	ff 25 52 1f 02 00    	jmp    *0x21f52(%rip)        # 26078 <__cxa_begin_catch@CXXABI_1.3>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkCreateCommandPool@plt>:
    4130:	ff 25 4a 1f 02 00    	jmp    *0x21f4a(%rip)        # 26080 <vkCreateCommandPool@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <strlen@plt>:
    4140:	ff 25 42 1f 02 00    	jmp    *0x21f42(%rip)        # 26088 <strlen@GLIBC_2.2.5>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <memcmp@plt>:
    4150:	ff 25 3a 1f 02 00    	jmp    *0x21f3a(%rip)        # 26090 <memcmp@GLIBC_2.2.5>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <vkCreateGraphicsPipelines@plt>:
    4160:	ff 25 32 1f 02 00    	jmp    *0x21f32(%rip)        # 26098 <vkCreateGraphicsPipelines@Base>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <__cxa_allocate_exception@plt>:
    4170:	ff 25 2a 1f 02 00    	jmp    *0x21f2a(%rip)        # 260a0 <__cxa_allocate_exception@CXXABI_1.3>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <_ZSt20__throw_length_errorPKc@plt>:
    4180:	ff 25 22 1f 02 00    	jmp    *0x21f22(%rip)        # 260a8 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkEnumeratePhysicalDevices@plt>:
    4190:	ff 25 1a 1f 02 00    	jmp    *0x21f1a(%rip)        # 260b0 <vkEnumeratePhysicalDevices@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <memset@plt>:
    41a0:	ff 25 12 1f 02 00    	jmp    *0x21f12(%rip)        # 260b8 <memset@GLIBC_2.2.5>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <_ZNSaIcEC1ERKS_@plt>:
    41b0:	ff 25 0a 1f 02 00    	jmp    *0x21f0a(%rip)        # 260c0 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <vkGetSwapchainImagesKHR@plt>:
    41c0:	ff 25 02 1f 02 00    	jmp    *0x21f02(%rip)        # 260c8 <vkGetSwapchainImagesKHR@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    41d0:	ff 25 fa 1e 02 00    	jmp    *0x21efa(%rip)        # 260d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    41e0:	ff 25 f2 1e 02 00    	jmp    *0x21ef2(%rip)        # 260d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <vkCreateRenderPass@plt>:
    41f0:	ff 25 ea 1e 02 00    	jmp    *0x21eea(%rip)        # 260e0 <vkCreateRenderPass@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4200:	ff 25 e2 1e 02 00    	jmp    *0x21ee2(%rip)        # 260e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4210:	ff 25 da 1e 02 00    	jmp    *0x21eda(%rip)        # 260f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4220:	ff 25 d2 1e 02 00    	jmp    *0x21ed2(%rip)        # 260f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <_ZSt19__throw_logic_errorPKc@plt>:
    4230:	ff 25 ca 1e 02 00    	jmp    *0x21eca(%rip)        # 26100 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <__cxa_free_exception@plt>:
    4240:	ff 25 c2 1e 02 00    	jmp    *0x21ec2(%rip)        # 26108 <__cxa_free_exception@CXXABI_1.3>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4250:	ff 25 ba 1e 02 00    	jmp    *0x21eba(%rip)        # 26110 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <glfwGetRequiredInstanceExtensions@plt>:
    4260:	ff 25 b2 1e 02 00    	jmp    *0x21eb2(%rip)        # 26118 <glfwGetRequiredInstanceExtensions@Base>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4270:	ff 25 aa 1e 02 00    	jmp    *0x21eaa(%rip)        # 26120 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <vkCreateShaderModule@plt>:
    4280:	ff 25 a2 1e 02 00    	jmp    *0x21ea2(%rip)        # 26128 <vkCreateShaderModule@Base>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4290:	ff 25 9a 1e 02 00    	jmp    *0x21e9a(%rip)        # 26130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <vkDestroyDevice@plt>:
    42a0:	ff 25 92 1e 02 00    	jmp    *0x21e92(%rip)        # 26138 <vkDestroyDevice@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <vkCreatePipelineLayout@plt>:
    42b0:	ff 25 8a 1e 02 00    	jmp    *0x21e8a(%rip)        # 26140 <vkCreatePipelineLayout@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <vkEnumerateInstanceExtensionProperties@plt>:
    42c0:	ff 25 82 1e 02 00    	jmp    *0x21e82(%rip)        # 26148 <vkEnumerateInstanceExtensionProperties@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    42d0:	ff 25 7a 1e 02 00    	jmp    *0x21e7a(%rip)        # 26150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <glfwWindowHint@plt>:
    42e0:	ff 25 72 1e 02 00    	jmp    *0x21e72(%rip)        # 26158 <glfwWindowHint@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    42f0:	ff 25 6a 1e 02 00    	jmp    *0x21e6a(%rip)        # 26160 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <__cxa_atexit@plt>:
    4300:	ff 25 62 1e 02 00    	jmp    *0x21e62(%rip)        # 26168 <__cxa_atexit@GLIBC_2.2.5>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4310:	ff 25 5a 1e 02 00    	jmp    *0x21e5a(%rip)        # 26170 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkAllocateCommandBuffers@plt>:
    4320:	ff 25 52 1e 02 00    	jmp    *0x21e52(%rip)        # 26178 <vkAllocateCommandBuffers@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkGetPhysicalDeviceProperties2@plt>:
    4330:	ff 25 4a 1e 02 00    	jmp    *0x21e4a(%rip)        # 26180 <vkGetPhysicalDeviceProperties2@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkGetInstanceProcAddr@plt>:
    4340:	ff 25 42 1e 02 00    	jmp    *0x21e42(%rip)        # 26188 <vkGetInstanceProcAddr@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <glfwPollEvents@plt>:
    4350:	ff 25 3a 1e 02 00    	jmp    *0x21e3a(%rip)        # 26190 <glfwPollEvents@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkDestroyRenderPass@plt>:
    4360:	ff 25 32 1e 02 00    	jmp    *0x21e32(%rip)        # 26198 <vkDestroyRenderPass@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4370:	ff 25 2a 1e 02 00    	jmp    *0x21e2a(%rip)        # 261a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <_Znwm@plt>:
    4380:	ff 25 22 1e 02 00    	jmp    *0x21e22(%rip)        # 261a8 <_Znwm@GLIBCXX_3.4>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZdlPvm@plt>:
    4390:	ff 25 1a 1e 02 00    	jmp    *0x21e1a(%rip)        # 261b0 <_ZdlPvm@CXXABI_1.3.9>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkDestroyInstance@plt>:
    43a0:	ff 25 12 1e 02 00    	jmp    *0x21e12(%rip)        # 261b8 <vkDestroyInstance@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <glfwTerminate@plt>:
    43b0:	ff 25 0a 1e 02 00    	jmp    *0x21e0a(%rip)        # 261c0 <glfwTerminate@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkCreateImageView@plt>:
    43c0:	ff 25 02 1e 02 00    	jmp    *0x21e02(%rip)        # 261c8 <vkCreateImageView@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    43d0:	ff 25 fa 1d 02 00    	jmp    *0x21dfa(%rip)        # 261d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZNSolsEPFRSoS_E@plt>:
    43e0:	ff 25 f2 1d 02 00    	jmp    *0x21df2(%rip)        # 261d8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    43f0:	ff 25 ea 1d 02 00    	jmp    *0x21dea(%rip)        # 261e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4400:	ff 25 e2 1d 02 00    	jmp    *0x21de2(%rip)        # 261e8 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4410:	ff 25 da 1d 02 00    	jmp    *0x21dda(%rip)        # 261f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <_ZNSaIcED1Ev@plt>:
    4420:	ff 25 d2 1d 02 00    	jmp    *0x21dd2(%rip)        # 261f8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkDestroyPipeline@plt>:
    4430:	ff 25 ca 1d 02 00    	jmp    *0x21dca(%rip)        # 26200 <vkDestroyPipeline@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4440:	ff 25 c2 1d 02 00    	jmp    *0x21dc2(%rip)        # 26208 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4450:	ff 25 ba 1d 02 00    	jmp    *0x21dba(%rip)        # 26210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkEnumerateInstanceLayerProperties@plt>:
    4460:	ff 25 b2 1d 02 00    	jmp    *0x21db2(%rip)        # 26218 <vkEnumerateInstanceLayerProperties@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <glfwInit@plt>:
    4470:	ff 25 aa 1d 02 00    	jmp    *0x21daa(%rip)        # 26220 <glfwInit@Base>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4480:	ff 25 a2 1d 02 00    	jmp    *0x21da2(%rip)        # 26228 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkCreateSwapchainKHR@plt>:
    4490:	ff 25 9a 1d 02 00    	jmp    *0x21d9a(%rip)        # 26230 <vkCreateSwapchainKHR@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    44a0:	ff 25 92 1d 02 00    	jmp    *0x21d92(%rip)        # 26238 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkDestroyShaderModule@plt>:
    44b0:	ff 25 8a 1d 02 00    	jmp    *0x21d8a(%rip)        # 26240 <vkDestroyShaderModule@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkCreateInstance@plt>:
    44c0:	ff 25 82 1d 02 00    	jmp    *0x21d82(%rip)        # 26248 <vkCreateInstance@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    44d0:	ff 25 7a 1d 02 00    	jmp    *0x21d7a(%rip)        # 26250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <vkDestroyPipelineLayout@plt>:
    44e0:	ff 25 72 1d 02 00    	jmp    *0x21d72(%rip)        # 26258 <vkDestroyPipelineLayout@Base>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNSi4readEPcl@plt>:
    44f0:	ff 25 6a 1d 02 00    	jmp    *0x21d6a(%rip)        # 26260 <_ZNSi4readEPcl@GLIBCXX_3.4>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4500:	ff 25 62 1d 02 00    	jmp    *0x21d62(%rip)        # 26268 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4510:	ff 25 5a 1d 02 00    	jmp    *0x21d5a(%rip)        # 26270 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4520:	ff 25 52 1d 02 00    	jmp    *0x21d52(%rip)        # 26278 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    4530:	ff 25 4a 1d 02 00    	jmp    *0x21d4a(%rip)        # 26280 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkGetDeviceQueue@plt>:
    4540:	ff 25 42 1d 02 00    	jmp    *0x21d42(%rip)        # 26288 <vkGetDeviceQueue@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <_ZNSolsEj@plt>:
    4550:	ff 25 3a 1d 02 00    	jmp    *0x21d3a(%rip)        # 26290 <_ZNSolsEj@GLIBCXX_3.4>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkCreateFramebuffer@plt>:
    4560:	ff 25 32 1d 02 00    	jmp    *0x21d32(%rip)        # 26298 <vkCreateFramebuffer@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4570:	ff 25 2a 1d 02 00    	jmp    *0x21d2a(%rip)        # 262a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4580:	ff 25 22 1d 02 00    	jmp    *0x21d22(%rip)        # 262a8 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkEnumerateDeviceExtensionProperties@plt>:
    4590:	ff 25 1a 1d 02 00    	jmp    *0x21d1a(%rip)        # 262b0 <vkEnumerateDeviceExtensionProperties@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    45a0:	ff 25 12 1d 02 00    	jmp    *0x21d12(%rip)        # 262b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkDestroyCommandPool@plt>:
    45b0:	ff 25 0a 1d 02 00    	jmp    *0x21d0a(%rip)        # 262c0 <vkDestroyCommandPool@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <_ZNSaIcEC2ERKS_@plt>:
    45c0:	ff 25 02 1d 02 00    	jmp    *0x21d02(%rip)        # 262c8 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <__cxa_rethrow@plt>:
    45d0:	ff 25 fa 1c 02 00    	jmp    *0x21cfa(%rip)        # 262d0 <__cxa_rethrow@CXXABI_1.3>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <vkCreateDevice@plt>:
    45e0:	ff 25 f2 1c 02 00    	jmp    *0x21cf2(%rip)        # 262d8 <vkCreateDevice@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <_ZNSt8ios_base4InitC1Ev@plt>:
    45f0:	ff 25 ea 1c 02 00    	jmp    *0x21cea(%rip)        # 262e0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <glfwCreateWindowSurface@plt>:
    4600:	ff 25 e2 1c 02 00    	jmp    *0x21ce2(%rip)        # 262e8 <glfwCreateWindowSurface@Base>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <glfwCreateWindow@plt>:
    4610:	ff 25 da 1c 02 00    	jmp    *0x21cda(%rip)        # 262f0 <glfwCreateWindow@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    4620:	ff 25 d2 1c 02 00    	jmp    *0x21cd2(%rip)        # 262f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4630:	ff 25 ca 1c 02 00    	jmp    *0x21cca(%rip)        # 26300 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4640:	ff 25 c2 1c 02 00    	jmp    *0x21cc2(%rip)        # 26308 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4650:	ff 25 ba 1c 02 00    	jmp    *0x21cba(%rip)        # 26310 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <memmove@plt>:
    4660:	ff 25 b2 1c 02 00    	jmp    *0x21cb2(%rip)        # 26318 <memmove@GLIBC_2.2.5>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <__cxa_end_catch@plt>:
    4670:	ff 25 aa 1c 02 00    	jmp    *0x21caa(%rip)        # 26320 <__cxa_end_catch@CXXABI_1.3>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkDestroyFramebuffer@plt>:
    4680:	ff 25 a2 1c 02 00    	jmp    *0x21ca2(%rip)        # 26328 <vkDestroyFramebuffer@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <__cxa_throw@plt>:
    4690:	ff 25 9a 1c 02 00    	jmp    *0x21c9a(%rip)        # 26330 <__cxa_throw@CXXABI_1.3>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    46a0:	ff 25 92 1c 02 00    	jmp    *0x21c92(%rip)        # 26338 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    46b0:	ff 25 8a 1c 02 00    	jmp    *0x21c8a(%rip)        # 26340 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <_ZNSolsEi@plt>:
    46c0:	ff 25 82 1c 02 00    	jmp    *0x21c82(%rip)        # 26348 <_ZNSolsEi@GLIBCXX_3.4>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSi5tellgEv@plt>:
    46d0:	ff 25 7a 1c 02 00    	jmp    *0x21c7a(%rip)        # 26350 <_ZNSi5tellgEv@GLIBCXX_3.4>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <vkDestroySurfaceKHR@plt>:
    46e0:	ff 25 72 1c 02 00    	jmp    *0x21c72(%rip)        # 26358 <vkDestroySurfaceKHR@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_Unwind_Resume@plt>:
    46f0:	ff 25 6a 1c 02 00    	jmp    *0x21c6a(%rip)        # 26360 <_Unwind_Resume@GCC_3.0>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSaIcEC1Ev@plt>:
    4700:	ff 25 62 1c 02 00    	jmp    *0x21c62(%rip)        # 26368 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <vkDestroyImageView@plt>:
    4710:	ff 25 5a 1c 02 00    	jmp    *0x21c5a(%rip)        # 26370 <vkDestroyImageView@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4720:	ff 25 52 1c 02 00    	jmp    *0x21c52(%rip)        # 26378 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <_ZNSt9exceptionD2Ev@plt>:
    4730:	ff 25 4a 1c 02 00    	jmp    *0x21c4a(%rip)        # 26380 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <glfwWindowShouldClose@plt>:
    4740:	ff 25 42 1c 02 00    	jmp    *0x21c42(%rip)        # 26388 <glfwWindowShouldClose@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <_ZNSolsEd@plt>:
    4750:	ff 25 3a 1c 02 00    	jmp    *0x21c3a(%rip)        # 26390 <_ZNSolsEd@GLIBCXX_3.4>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4760:	ff 25 32 1c 02 00    	jmp    *0x21c32(%rip)        # 26398 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4770:	ff 25 2a 1c 02 00    	jmp    *0x21c2a(%rip)        # 263a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004780 <__cxa_finalize@plt>:
    4780:	ff 25 0a 18 02 00    	jmp    *0x2180a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4786:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004790 <_start>:
    4790:	31 ed                	xor    %ebp,%ebp
    4792:	49 89 d1             	mov    %rdx,%r9
    4795:	5e                   	pop    %rsi
    4796:	48 89 e2             	mov    %rsp,%rdx
    4799:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    479d:	50                   	push   %rax
    479e:	54                   	push   %rsp
    479f:	45 31 c0             	xor    %r8d,%r8d
    47a2:	31 c9                	xor    %ecx,%ecx
    47a4:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4954 <main>
    47ab:	ff 15 ef 17 02 00    	call   *0x217ef(%rip)        # 25fa0 <__libc_start_main@GLIBC_2.34>
    47b1:	f4                   	hlt
    47b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    47b9:	00 00 00 
    47bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000047c0 <deregister_tm_clones>:
    47c0:	48 8d 3d 01 1c 02 00 	lea    0x21c01(%rip),%rdi        # 263c8 <__TMC_END__>
    47c7:	48 8d 05 fa 1b 02 00 	lea    0x21bfa(%rip),%rax        # 263c8 <__TMC_END__>
    47ce:	48 39 f8             	cmp    %rdi,%rax
    47d1:	74 15                	je     47e8 <deregister_tm_clones+0x28>
    47d3:	48 8b 05 d6 17 02 00 	mov    0x217d6(%rip),%rax        # 25fb0 <_ITM_deregisterTMCloneTable@Base>
    47da:	48 85 c0             	test   %rax,%rax
    47dd:	74 09                	je     47e8 <deregister_tm_clones+0x28>
    47df:	ff e0                	jmp    *%rax
    47e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    47e8:	c3                   	ret
    47e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000047f0 <register_tm_clones>:
    47f0:	48 8d 3d d1 1b 02 00 	lea    0x21bd1(%rip),%rdi        # 263c8 <__TMC_END__>
    47f7:	48 8d 35 ca 1b 02 00 	lea    0x21bca(%rip),%rsi        # 263c8 <__TMC_END__>
    47fe:	48 29 fe             	sub    %rdi,%rsi
    4801:	48 89 f0             	mov    %rsi,%rax
    4804:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4808:	48 c1 f8 03          	sar    $0x3,%rax
    480c:	48 01 c6             	add    %rax,%rsi
    480f:	48 d1 fe             	sar    %rsi
    4812:	74 14                	je     4828 <register_tm_clones+0x38>
    4814:	48 8b 05 a5 17 02 00 	mov    0x217a5(%rip),%rax        # 25fc0 <_ITM_registerTMCloneTable@Base>
    481b:	48 85 c0             	test   %rax,%rax
    481e:	74 08                	je     4828 <register_tm_clones+0x38>
    4820:	ff e0                	jmp    *%rax
    4822:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4828:	c3                   	ret
    4829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004830 <__do_global_dtors_aux>:
    4830:	f3 0f 1e fa          	endbr64
    4834:	80 3d f5 1d 02 00 00 	cmpb   $0x0,0x21df5(%rip)        # 26630 <completed.0>
    483b:	75 2b                	jne    4868 <__do_global_dtors_aux+0x38>
    483d:	55                   	push   %rbp
    483e:	48 83 3d 4a 17 02 00 	cmpq   $0x0,0x2174a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4845:	00 
    4846:	48 89 e5             	mov    %rsp,%rbp
    4849:	74 0c                	je     4857 <__do_global_dtors_aux+0x27>
    484b:	48 8b 3d 5e 1b 02 00 	mov    0x21b5e(%rip),%rdi        # 263b0 <__dso_handle>
    4852:	e8 29 ff ff ff       	call   4780 <__cxa_finalize@plt>
    4857:	e8 64 ff ff ff       	call   47c0 <deregister_tm_clones>
    485c:	c6 05 cd 1d 02 00 01 	movb   $0x1,0x21dcd(%rip)        # 26630 <completed.0>
    4863:	5d                   	pop    %rbp
    4864:	c3                   	ret
    4865:	0f 1f 00             	nopl   (%rax)
    4868:	c3                   	ret
    4869:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004870 <frame_dummy>:
    4870:	f3 0f 1e fa          	endbr64
    4874:	e9 77 ff ff ff       	jmp    47f0 <register_tm_clones>

0000000000004879 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    4879:	55                   	push   %rbp
    487a:	48 89 e5             	mov    %rsp,%rbp
    487d:	53                   	push   %rbx
    487e:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
  VulkanApp app;
    4885:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    488c:	48 89 c7             	mov    %rax,%rdi
    488f:	e8 42 a4 00 00       	call   ecd6 <_ZN9VulkanAppC1Ev>
  app.run();
    4894:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    489b:	48 89 c7             	mov    %rax,%rdi
    489e:	e8 ad a8 00 00       	call   f150 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    48a3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48a7:	48 89 c7             	mov    %rax,%rdi
    48aa:	e8 51 fe ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    48af:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    48b3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48b7:	48 8d 0d 26 1d 01 00 	lea    0x11d26(%rip),%rcx        # 165e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    48be:	48 89 ce             	mov    %rcx,%rsi
    48c1:	48 89 c7             	mov    %rax,%rdi
    48c4:	e8 77 02 00 00       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    48c9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    48cd:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    48d4:	48 89 d6             	mov    %rdx,%rsi
    48d7:	48 89 c7             	mov    %rax,%rdi
    48da:	e8 b5 a9 00 00       	call   f294 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    48df:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48e3:	48 89 c7             	mov    %rax,%rdi
    48e6:	e8 f5 f8 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48eb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48ef:	48 89 c7             	mov    %rax,%rdi
    48f2:	e8 29 fb ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    48f7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    48fc:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    4903:	48 89 c7             	mov    %rax,%rdi
    4906:	e8 33 a6 00 00       	call   ef3e <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    490b:	89 d8                	mov    %ebx,%eax
    490d:	eb 3f                	jmp    494e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    490f:	48 89 c3             	mov    %rax,%rbx
    4912:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4916:	48 89 c7             	mov    %rax,%rdi
    4919:	e8 c2 f8 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    491e:	eb 03                	jmp    4923 <_Z14protected_mainv+0xaa>
    4920:	48 89 c3             	mov    %rax,%rbx
    4923:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4927:	48 89 c7             	mov    %rax,%rdi
    492a:	e8 f1 fa ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    492f:	eb 03                	jmp    4934 <_Z14protected_mainv+0xbb>
}
    4931:	48 89 c3             	mov    %rax,%rbx
    4934:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    493b:	48 89 c7             	mov    %rax,%rdi
    493e:	e8 fb a5 00 00       	call   ef3e <_ZN9VulkanAppD1Ev>
    4943:	48 89 d8             	mov    %rbx,%rax
    4946:	48 89 c7             	mov    %rax,%rdi
    4949:	e8 a2 fd ff ff       	call   46f0 <_Unwind_Resume@plt>
    494e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4952:	c9                   	leave
    4953:	c3                   	ret

0000000000004954 <main>:

int main() {
    4954:	55                   	push   %rbp
    4955:	48 89 e5             	mov    %rsp,%rbp
    4958:	53                   	push   %rbx
    4959:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    495d:	e8 17 ff ff ff       	call   4879 <_Z14protected_mainv>
    4962:	e9 aa 00 00 00       	jmp    4a11 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4967:	b8 01 00 00 00       	mov    $0x1,%eax
    496c:	e9 a0 00 00 00       	jmp    4a11 <main+0xbd>
  } catch (const std::exception &e) {
    4971:	48 83 fa 01          	cmp    $0x1,%rdx
    4975:	75 49                	jne    49c0 <main+0x6c>
    4977:	48 89 c7             	mov    %rax,%rdi
    497a:	e8 a1 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    497f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4987:	48 8b 00             	mov    (%rax),%rax
    498a:	48 83 c0 10          	add    $0x10,%rax
    498e:	48 8b 10             	mov    (%rax),%rdx
    4991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4995:	48 89 c7             	mov    %rax,%rdi
    4998:	ff d2                	call   *%rdx
    499a:	48 89 c6             	mov    %rax,%rsi
    499d:	48 8d 05 7c 1b 02 00 	lea    0x21b7c(%rip),%rax        # 26520 <_ZSt4cerr@GLIBCXX_3.4>
    49a4:	48 89 c7             	mov    %rax,%rdi
    49a7:	e8 c4 f9 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    49ac:	be 0a 00 00 00       	mov    $0xa,%esi
    49b1:	48 89 c7             	mov    %rax,%rdi
    49b4:	e8 c7 fa ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    49b9:	e8 b2 fc ff ff       	call   4670 <__cxa_end_catch@plt>
    49be:	eb a7                	jmp    4967 <main+0x13>
    49c0:	48 89 c7             	mov    %rax,%rdi
    49c3:	e8 58 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    49c8:	48 8d 05 1e 1c 01 00 	lea    0x11c1e(%rip),%rax        # 165ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    49cf:	48 89 c6             	mov    %rax,%rsi
    49d2:	48 8d 05 47 1b 02 00 	lea    0x21b47(%rip),%rax        # 26520 <_ZSt4cerr@GLIBCXX_3.4>
    49d9:	48 89 c7             	mov    %rax,%rdi
    49dc:	e8 8f f9 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    49e1:	e8 8a fc ff ff       	call   4670 <__cxa_end_catch@plt>
    49e6:	e9 7c ff ff ff       	jmp    4967 <main+0x13>
  } catch (...) {
    49eb:	48 89 c3             	mov    %rax,%rbx
    49ee:	e8 7d fc ff ff       	call   4670 <__cxa_end_catch@plt>
    49f3:	48 89 d8             	mov    %rbx,%rax
    49f6:	48 89 c7             	mov    %rax,%rdi
    49f9:	e8 f2 fc ff ff       	call   46f0 <_Unwind_Resume@plt>
  }
    49fe:	48 89 c3             	mov    %rax,%rbx
    4a01:	e8 6a fc ff ff       	call   4670 <__cxa_end_catch@plt>
    4a06:	48 89 d8             	mov    %rbx,%rax
    4a09:	48 89 c7             	mov    %rax,%rdi
    4a0c:	e8 df fc ff ff       	call   46f0 <_Unwind_Resume@plt>
    4a11:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a15:	c9                   	leave
    4a16:	c3                   	ret

0000000000004a17 <_Z41__static_initialization_and_destruction_0ii>:
    4a17:	55                   	push   %rbp
    4a18:	48 89 e5             	mov    %rsp,%rbp
    4a1b:	48 83 ec 10          	sub    $0x10,%rsp
    4a1f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4a22:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4a25:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    4a29:	75 3b                	jne    4a66 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    4a2b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    4a32:	75 32                	jne    4a66 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4a34:	48 8d 05 f6 1b 02 00 	lea    0x21bf6(%rip),%rax        # 26631 <_ZStL8__ioinit>
    4a3b:	48 89 c7             	mov    %rax,%rdi
    4a3e:	e8 ad fb ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
    4a43:	48 8d 05 66 19 02 00 	lea    0x21966(%rip),%rax        # 263b0 <__dso_handle>
    4a4a:	48 89 c2             	mov    %rax,%rdx
    4a4d:	48 8d 05 dd 1b 02 00 	lea    0x21bdd(%rip),%rax        # 26631 <_ZStL8__ioinit>
    4a54:	48 89 c6             	mov    %rax,%rsi
    4a57:	48 8b 05 6a 15 02 00 	mov    0x2156a(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4a5e:	48 89 c7             	mov    %rax,%rdi
    4a61:	e8 9a f8 ff ff       	call   4300 <__cxa_atexit@plt>
    4a66:	90                   	nop
    4a67:	c9                   	leave
    4a68:	c3                   	ret

0000000000004a69 <_GLOBAL__sub_I__Z14protected_mainv>:
    4a69:	55                   	push   %rbp
    4a6a:	48 89 e5             	mov    %rsp,%rbp
    4a6d:	be ff ff 00 00       	mov    $0xffff,%esi
    4a72:	bf 01 00 00 00       	mov    $0x1,%edi
    4a77:	e8 9b ff ff ff       	call   4a17 <_Z41__static_initialization_and_destruction_0ii>
    4a7c:	5d                   	pop    %rbp
    4a7d:	c3                   	ret

0000000000004a7e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4a7e:	55                   	push   %rbp
    4a7f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4a82:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4a87:	5d                   	pop    %rbp
    4a88:	c3                   	ret

0000000000004a89 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4a89:	55                   	push   %rbp
    4a8a:	48 89 e5             	mov    %rsp,%rbp
    4a8d:	48 83 ec 10          	sub    $0x10,%rsp
    4a91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4a95:	e8 e4 ff ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
    4a9a:	84 c0                	test   %al,%al
    4a9c:	74 0e                	je     4aac <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa2:	48 89 c7             	mov    %rax,%rdi
    4aa5:	e8 12 00 00 00       	call   4abc <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4aaa:	eb 0d                	jmp    4ab9 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4aac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab0:	48 89 c7             	mov    %rax,%rdi
    4ab3:	e8 88 f6 ff ff       	call   4140 <strlen@plt>
    4ab8:	90                   	nop
      }
    4ab9:	c9                   	leave
    4aba:	c3                   	ret
    4abb:	90                   	nop

0000000000004abc <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4abc:	55                   	push   %rbp
    4abd:	48 89 e5             	mov    %rsp,%rbp
    4ac0:	48 83 ec 20          	sub    $0x20,%rsp
    4ac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4ac8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4acf:	00 
      while (!eq(__p[__i], char_type()))
    4ad0:	eb 05                	jmp    4ad7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4ad2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4ad7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4adb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ae3:	48 01 c2             	add    %rax,%rdx
    4ae6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4aea:	48 89 c6             	mov    %rax,%rsi
    4aed:	48 89 d7             	mov    %rdx,%rdi
    4af0:	e8 0d 00 00 00       	call   4b02 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4af5:	83 f0 01             	xor    $0x1,%eax
    4af8:	84 c0                	test   %al,%al
    4afa:	75 d6                	jne    4ad2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4b00:	c9                   	leave
    4b01:	c3                   	ret

0000000000004b02 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4b02:	55                   	push   %rbp
    4b03:	48 89 e5             	mov    %rsp,%rbp
    4b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4b0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b12:	0f b6 10             	movzbl (%rax),%edx
    4b15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4b19:	0f b6 00             	movzbl (%rax),%eax
    4b1c:	38 c2                	cmp    %al,%dl
    4b1e:	0f 94 c0             	sete   %al
    4b21:	5d                   	pop    %rbp
    4b22:	c3                   	ret
    4b23:	90                   	nop

0000000000004b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4b24:	55                   	push   %rbp
    4b25:	48 89 e5             	mov    %rsp,%rbp
    4b28:	48 83 ec 10          	sub    $0x10,%rsp
    4b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b34:	48 89 c7             	mov    %rax,%rdi
    4b37:	e8 24 f5 ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    4b3c:	90                   	nop
    4b3d:	c9                   	leave
    4b3e:	c3                   	ret
    4b3f:	90                   	nop

0000000000004b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4b40:	55                   	push   %rbp
    4b41:	48 89 e5             	mov    %rsp,%rbp
    4b44:	53                   	push   %rbx
    4b45:	48 83 ec 38          	sub    $0x38,%rsp
    4b49:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b4d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b51:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4b55:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4b59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b5d:	48 89 c7             	mov    %rax,%rdi
    4b60:	e8 2b f7 ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4b65:	48 89 c1             	mov    %rax,%rcx
    4b68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b6c:	48 89 c2             	mov    %rax,%rdx
    4b6f:	48 89 ce             	mov    %rcx,%rsi
    4b72:	48 89 df             	mov    %rbx,%rdi
    4b75:	e8 76 f8 ff ff       	call   43f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4b7a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4b7f:	75 0f                	jne    4b90 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4b81:	48 8d 05 80 1a 01 00 	lea    0x11a80(%rip),%rax        # 16608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4b88:	48 89 c7             	mov    %rax,%rdi
    4b8b:	e8 a0 f6 ff ff       	call   4230 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4b90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b94:	48 89 c7             	mov    %rax,%rdi
    4b97:	e8 ed fe ff ff       	call   4a89 <_ZNSt11char_traitsIcE6lengthEPKc>
    4b9c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4ba0:	48 01 d0             	add    %rdx,%rax
    4ba3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4ba7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4bab:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4baf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bb3:	48 89 ce             	mov    %rcx,%rsi
    4bb6:	48 89 c7             	mov    %rax,%rdi
    4bb9:	e8 66 00 00 00       	call   4c24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4bbe:	eb 1a                	jmp    4bda <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4bc0:	48 89 c3             	mov    %rax,%rbx
    4bc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4bc7:	48 89 c7             	mov    %rax,%rdi
    4bca:	e8 55 ff ff ff       	call   4b24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4bcf:	48 89 d8             	mov    %rbx,%rax
    4bd2:	48 89 c7             	mov    %rax,%rdi
    4bd5:	e8 16 fb ff ff       	call   46f0 <_Unwind_Resume@plt>
    4bda:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bde:	c9                   	leave
    4bdf:	c3                   	ret

0000000000004be0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4be0:	55                   	push   %rbp
    4be1:	48 89 e5             	mov    %rsp,%rbp
    4be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4be8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bf0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4bf4:	48 89 10             	mov    %rdx,(%rax)
    4bf7:	90                   	nop
    4bf8:	5d                   	pop    %rbp
    4bf9:	c3                   	ret

0000000000004bfa <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4bfa:	55                   	push   %rbp
    4bfb:	48 89 e5             	mov    %rsp,%rbp
    4bfe:	48 83 ec 10          	sub    $0x10,%rsp
    4c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c0a:	48 8b 00             	mov    (%rax),%rax
    4c0d:	48 85 c0             	test   %rax,%rax
    4c10:	74 0f                	je     4c21 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c16:	48 8b 00             	mov    (%rax),%rax
    4c19:	48 89 c7             	mov    %rax,%rdi
    4c1c:	e8 af f8 ff ff       	call   44d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4c21:	90                   	nop
    4c22:	c9                   	leave
    4c23:	c3                   	ret

0000000000004c24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4c24:	55                   	push   %rbp
    4c25:	48 89 e5             	mov    %rsp,%rbp
    4c28:	48 83 ec 40          	sub    $0x40,%rsp
    4c2c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c30:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c34:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4c38:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c40:	48 89 d6             	mov    %rdx,%rsi
    4c43:	48 89 c7             	mov    %rax,%rdi
    4c46:	e8 c0 00 00 00       	call   4d0b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4c4b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4c4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c53:	48 83 f8 0f          	cmp    $0xf,%rax
    4c57:	76 3f                	jbe    4c98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4c59:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4c5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c61:	ba 00 00 00 00       	mov    $0x0,%edx
    4c66:	48 89 ce             	mov    %rcx,%rsi
    4c69:	48 89 c7             	mov    %rax,%rdi
    4c6c:	e8 af fa ff ff       	call   4720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4c71:	48 89 c2             	mov    %rax,%rdx
    4c74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c78:	48 89 d6             	mov    %rdx,%rsi
    4c7b:	48 89 c7             	mov    %rax,%rdi
    4c7e:	e8 4d f6 ff ff       	call   42d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4c83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c8b:	48 89 d6             	mov    %rdx,%rsi
    4c8e:	48 89 c7             	mov    %rax,%rdi
    4c91:	e8 da fa ff ff       	call   4770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4c96:	eb 15                	jmp    4cad <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4c98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ca4:	48 89 c7             	mov    %rax,%rdi
    4ca7:	e8 e4 f5 ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4cac:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4cad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4cb1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4cb5:	48 89 d6             	mov    %rdx,%rsi
    4cb8:	48 89 c7             	mov    %rax,%rdi
    4cbb:	e8 20 ff ff ff       	call   4be0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4cc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cc4:	48 89 c7             	mov    %rax,%rdi
    4cc7:	e8 74 f7 ff ff       	call   4440 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4ccc:	48 89 c1             	mov    %rax,%rcx
    4ccf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4cd3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4cd7:	48 89 c6             	mov    %rax,%rsi
    4cda:	48 89 cf             	mov    %rcx,%rdi
    4cdd:	e8 6e f7 ff ff       	call   4450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4ce2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4ce9:	00 

	_M_set_length(__dnew);
    4cea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cf2:	48 89 d6             	mov    %rdx,%rsi
    4cf5:	48 89 c7             	mov    %rax,%rdi
    4cf8:	e8 03 f5 ff ff       	call   4200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4cfd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4d01:	48 89 c7             	mov    %rax,%rdi
    4d04:	e8 f1 fe ff ff       	call   4bfa <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4d09:	c9                   	leave
    4d0a:	c3                   	ret

0000000000004d0b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4d0b:	55                   	push   %rbp
    4d0c:	48 89 e5             	mov    %rsp,%rbp
    4d0f:	48 83 ec 10          	sub    $0x10,%rsp
    4d13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4d1b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4d1f:	48 89 c7             	mov    %rax,%rdi
    4d22:	e8 15 00 00 00       	call   4d3c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d2f:	48 89 d6             	mov    %rdx,%rsi
    4d32:	48 89 c7             	mov    %rax,%rdi
    4d35:	e8 0d 00 00 00       	call   4d47 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4d3a:	c9                   	leave
    4d3b:	c3                   	ret

0000000000004d3c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4d3c:	55                   	push   %rbp
    4d3d:	48 89 e5             	mov    %rsp,%rbp
    4d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4d44:	90                   	nop
    4d45:	5d                   	pop    %rbp
    4d46:	c3                   	ret

0000000000004d47 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4d47:	55                   	push   %rbp
    4d48:	48 89 e5             	mov    %rsp,%rbp
    4d4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d4f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4d53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d57:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4d5b:	5d                   	pop    %rbp
    4d5c:	c3                   	ret

0000000000004d5d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4d5d:	55                   	push   %rbp
    4d5e:	48 89 e5             	mov    %rsp,%rbp
    4d61:	41 54                	push   %r12
    4d63:	53                   	push   %rbx
    4d64:	48 83 ec 30          	sub    $0x30,%rsp
    4d68:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d6c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d70:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4d74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d78:	8b 40 1c             	mov    0x1c(%rax),%eax
    4d7b:	89 c3                	mov    %eax,%ebx
    4d7d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d81:	48 89 c7             	mov    %rax,%rdi
    4d84:	e8 13 01 00 00       	call   4e9c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4d89:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d91:	48 89 de             	mov    %rbx,%rsi
    4d94:	48 89 c7             	mov    %rax,%rdi
    4d97:	e8 38 01 00 00       	call   4ed4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4d9c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4da0:	48 89 c7             	mov    %rax,%rdi
    4da3:	e8 10 01 00 00       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4da8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dac:	48 89 c7             	mov    %rax,%rdi
    4daf:	e8 da 01 00 00       	call   4f8e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4db4:	48 89 c2             	mov    %rax,%rdx
    4db7:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4dbb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4dbf:	48 89 ce             	mov    %rcx,%rsi
    4dc2:	48 89 c7             	mov    %rax,%rdi
    4dc5:	e8 56 f5 ff ff       	call   4320 <vkAllocateCommandBuffers@plt>
    4dca:	85 c0                	test   %eax,%eax
    4dcc:	0f 95 c0             	setne  %al
    4dcf:	84 c0                	test   %al,%al
    4dd1:	74 7f                	je     4e52 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4dd3:	bf 10 00 00 00       	mov    $0x10,%edi
    4dd8:	e8 93 f3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    4ddd:	48 89 c3             	mov    %rax,%rbx
    4de0:	48 8d 05 31 1e 01 00 	lea    0x11e31(%rip),%rax        # 16c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4de7:	48 89 c6             	mov    %rax,%rsi
    4dea:	48 89 df             	mov    %rbx,%rdi
    4ded:	e8 0e f3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4df2:	48 8b 05 af 11 02 00 	mov    0x211af(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4df9:	48 89 c2             	mov    %rax,%rdx
    4dfc:	48 8d 05 3d 0f 02 00 	lea    0x20f3d(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4e03:	48 89 c6             	mov    %rax,%rsi
    4e06:	48 89 df             	mov    %rbx,%rdi
    4e09:	e8 82 f8 ff ff       	call   4690 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4e0e:	48 89 c3             	mov    %rax,%rbx
    4e11:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4e15:	48 89 c7             	mov    %rax,%rdi
    4e18:	e8 9b 00 00 00       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e1d:	48 89 d8             	mov    %rbx,%rax
    4e20:	48 89 c7             	mov    %rax,%rdi
    4e23:	e8 c8 f8 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4e28:	49 89 c4             	mov    %rax,%r12
    4e2b:	48 89 df             	mov    %rbx,%rdi
    4e2e:	e8 0d f4 ff ff       	call   4240 <__cxa_free_exception@plt>
    4e33:	4c 89 e3             	mov    %r12,%rbx
    4e36:	eb 03                	jmp    4e3b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4e38:	48 89 c3             	mov    %rax,%rbx
    4e3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e3f:	48 89 c7             	mov    %rax,%rdi
    4e42:	e8 03 01 00 00       	call   4f4a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4e47:	48 89 d8             	mov    %rbx,%rax
    4e4a:	48 89 c7             	mov    %rax,%rdi
    4e4d:	e8 9e f8 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return commandBuffers;
    4e52:	90                   	nop
}
    4e53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e57:	48 83 c4 30          	add    $0x30,%rsp
    4e5b:	5b                   	pop    %rbx
    4e5c:	41 5c                	pop    %r12
    4e5e:	5d                   	pop    %rbp
    4e5f:	c3                   	ret

0000000000004e60 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4e60:	55                   	push   %rbp
    4e61:	48 89 e5             	mov    %rsp,%rbp
    4e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e70:	5d                   	pop    %rbp
    4e71:	c3                   	ret

0000000000004e72 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e72:	55                   	push   %rbp
    4e73:	48 89 e5             	mov    %rsp,%rbp
    4e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e7e:	5d                   	pop    %rbp
    4e7f:	c3                   	ret

0000000000004e80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4e80:	55                   	push   %rbp
    4e81:	48 89 e5             	mov    %rsp,%rbp
    4e84:	48 83 ec 10          	sub    $0x10,%rsp
    4e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e90:	48 89 c7             	mov    %rax,%rdi
    4e93:	e8 20 00 00 00       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e98:	90                   	nop
    4e99:	c9                   	leave
    4e9a:	c3                   	ret
    4e9b:	90                   	nop

0000000000004e9c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4e9c:	55                   	push   %rbp
    4e9d:	48 89 e5             	mov    %rsp,%rbp
    4ea0:	48 83 ec 10          	sub    $0x10,%rsp
    4ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eac:	48 89 c7             	mov    %rax,%rdi
    4eaf:	e8 4c 01 00 00       	call   5000 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    4eb4:	90                   	nop
    4eb5:	c9                   	leave
    4eb6:	c3                   	ret
    4eb7:	90                   	nop

0000000000004eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4eb8:	55                   	push   %rbp
    4eb9:	48 89 e5             	mov    %rsp,%rbp
    4ebc:	48 83 ec 10          	sub    $0x10,%rsp
    4ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ec8:	48 89 c7             	mov    %rax,%rdi
    4ecb:	e8 3c 01 00 00       	call   500c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    4ed0:	90                   	nop
    4ed1:	c9                   	leave
    4ed2:	c3                   	ret
    4ed3:	90                   	nop

0000000000004ed4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4ed4:	55                   	push   %rbp
    4ed5:	48 89 e5             	mov    %rsp,%rbp
    4ed8:	53                   	push   %rbx
    4ed9:	48 83 ec 28          	sub    $0x28,%rsp
    4edd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ee1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4ee5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4ee9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4eed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ef1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ef5:	48 89 d6             	mov    %rdx,%rsi
    4ef8:	48 89 c7             	mov    %rax,%rdi
    4efb:	e8 17 01 00 00       	call   5017 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4f00:	48 89 c1             	mov    %rax,%rcx
    4f03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f07:	48 89 c2             	mov    %rax,%rdx
    4f0a:	48 89 ce             	mov    %rcx,%rsi
    4f0d:	48 89 df             	mov    %rbx,%rdi
    4f10:	e8 63 01 00 00       	call   5078 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4f15:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4f19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f1d:	48 89 d6             	mov    %rdx,%rsi
    4f20:	48 89 c7             	mov    %rax,%rdi
    4f23:	e8 ae 01 00 00       	call   50d6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    4f28:	eb 1a                	jmp    4f44 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    4f2a:	48 89 c3             	mov    %rax,%rbx
    4f2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f31:	48 89 c7             	mov    %rax,%rdi
    4f34:	e8 79 00 00 00       	call   4fb2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f39:	48 89 d8             	mov    %rbx,%rax
    4f3c:	48 89 c7             	mov    %rax,%rdi
    4f3f:	e8 ac f7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    4f44:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f48:	c9                   	leave
    4f49:	c3                   	ret

0000000000004f4a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4f4a:	55                   	push   %rbp
    4f4b:	48 89 e5             	mov    %rsp,%rbp
    4f4e:	48 83 ec 10          	sub    $0x10,%rsp
    4f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5a:	48 89 c7             	mov    %rax,%rdi
    4f5d:	e8 b4 01 00 00       	call   5116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4f62:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f69:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f71:	48 8b 00             	mov    (%rax),%rax
    4f74:	48 89 ce             	mov    %rcx,%rsi
    4f77:	48 89 c7             	mov    %rax,%rdi
    4f7a:	e8 a5 01 00 00       	call   5124 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f83:	48 89 c7             	mov    %rax,%rdi
    4f86:	e8 27 00 00 00       	call   4fb2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f8b:	90                   	nop
    4f8c:	c9                   	leave
    4f8d:	c3                   	ret

0000000000004f8e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4f8e:	55                   	push   %rbp
    4f8f:	48 89 e5             	mov    %rsp,%rbp
    4f92:	48 83 ec 10          	sub    $0x10,%rsp
    4f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f9e:	48 8b 10             	mov    (%rax),%rdx
    4fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa5:	48 89 d6             	mov    %rdx,%rsi
    4fa8:	48 89 c7             	mov    %rax,%rdi
    4fab:	e8 9e 01 00 00       	call   514e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    4fb0:	c9                   	leave
    4fb1:	c3                   	ret

0000000000004fb2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4fb2:	55                   	push   %rbp
    4fb3:	48 89 e5             	mov    %rsp,%rbp
    4fb6:	48 83 ec 10          	sub    $0x10,%rsp
    4fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fca:	48 8b 00             	mov    (%rax),%rax
    4fcd:	48 29 c2             	sub    %rax,%rdx
    4fd0:	48 89 d0             	mov    %rdx,%rax
    4fd3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4fd7:	48 89 c2             	mov    %rax,%rdx
    4fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fde:	48 8b 08             	mov    (%rax),%rcx
    4fe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fe5:	48 89 ce             	mov    %rcx,%rsi
    4fe8:	48 89 c7             	mov    %rax,%rdi
    4feb:	e8 96 01 00 00       	call   5186 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ff4:	48 89 c7             	mov    %rax,%rdi
    4ff7:	e8 84 fe ff ff       	call   4e80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    4ffc:	90                   	nop
    4ffd:	c9                   	leave
    4ffe:	c3                   	ret
    4fff:	90                   	nop

0000000000005000 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5000:	55                   	push   %rbp
    5001:	48 89 e5             	mov    %rsp,%rbp
    5004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5008:	90                   	nop
    5009:	5d                   	pop    %rbp
    500a:	c3                   	ret
    500b:	90                   	nop

000000000000500c <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    500c:	55                   	push   %rbp
    500d:	48 89 e5             	mov    %rsp,%rbp
    5010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5014:	90                   	nop
    5015:	5d                   	pop    %rbp
    5016:	c3                   	ret

0000000000005017 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5017:	55                   	push   %rbp
    5018:	48 89 e5             	mov    %rsp,%rbp
    501b:	53                   	push   %rbx
    501c:	48 83 ec 28          	sub    $0x28,%rsp
    5020:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5024:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5028:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    502c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5030:	48 89 d6             	mov    %rdx,%rsi
    5033:	48 89 c7             	mov    %rax,%rdi
    5036:	e8 25 01 00 00       	call   5160 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    503b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    503f:	48 89 c7             	mov    %rax,%rdi
    5042:	e8 74 01 00 00       	call   51bb <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5047:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    504b:	0f 92 c3             	setb   %bl
    504e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5052:	48 89 c7             	mov    %rax,%rdi
    5055:	e8 5e fe ff ff       	call   4eb8 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    505a:	84 db                	test   %bl,%bl
    505c:	74 0f                	je     506d <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    505e:	48 8d 05 db 1b 01 00 	lea    0x11bdb(%rip),%rax        # 16c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    5065:	48 89 c7             	mov    %rax,%rdi
    5068:	e8 13 f1 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    506d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5071:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5075:	c9                   	leave
    5076:	c3                   	ret
    5077:	90                   	nop

0000000000005078 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5078:	55                   	push   %rbp
    5079:	48 89 e5             	mov    %rsp,%rbp
    507c:	53                   	push   %rbx
    507d:	48 83 ec 28          	sub    $0x28,%rsp
    5081:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5085:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5089:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    508d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5091:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5095:	48 89 d6             	mov    %rdx,%rsi
    5098:	48 89 c7             	mov    %rax,%rdi
    509b:	e8 5e 01 00 00       	call   51fe <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    50a0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    50a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50a8:	48 89 d6             	mov    %rdx,%rsi
    50ab:	48 89 c7             	mov    %rax,%rdi
    50ae:	e8 7d 01 00 00       	call   5230 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    50b3:	eb 1a                	jmp    50cf <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    50b5:	48 89 c3             	mov    %rax,%rbx
    50b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50bc:	48 89 c7             	mov    %rax,%rdi
    50bf:	e8 bc fd ff ff       	call   4e80 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    50c4:	48 89 d8             	mov    %rbx,%rax
    50c7:	48 89 c7             	mov    %rax,%rdi
    50ca:	e8 21 f6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    50cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50d3:	c9                   	leave
    50d4:	c3                   	ret
    50d5:	90                   	nop

00000000000050d6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    50d6:	55                   	push   %rbp
    50d7:	48 89 e5             	mov    %rsp,%rbp
    50da:	48 83 ec 10          	sub    $0x10,%rsp
    50de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    50e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ea:	48 89 c7             	mov    %rax,%rdi
    50ed:	e8 24 00 00 00       	call   5116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    50f2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    50f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f9:	48 8b 00             	mov    (%rax),%rax
    50fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5100:	48 89 ce             	mov    %rcx,%rsi
    5103:	48 89 c7             	mov    %rax,%rdi
    5106:	e8 7b 01 00 00       	call   5286 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    510b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    510f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5113:	90                   	nop
    5114:	c9                   	leave
    5115:	c3                   	ret

0000000000005116 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5116:	55                   	push   %rbp
    5117:	48 89 e5             	mov    %rsp,%rbp
    511a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    511e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5122:	5d                   	pop    %rbp
    5123:	c3                   	ret

0000000000005124 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5124:	55                   	push   %rbp
    5125:	48 89 e5             	mov    %rsp,%rbp
    5128:	48 83 ec 20          	sub    $0x20,%rsp
    512c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5130:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5134:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5138:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    513c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5140:	48 89 d6             	mov    %rdx,%rsi
    5143:	48 89 c7             	mov    %rax,%rdi
    5146:	e8 64 01 00 00       	call   52af <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    514b:	90                   	nop
    514c:	c9                   	leave
    514d:	c3                   	ret

000000000000514e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    514e:	55                   	push   %rbp
    514f:	48 89 e5             	mov    %rsp,%rbp
    5152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5156:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    515a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    515e:	5d                   	pop    %rbp
    515f:	c3                   	ret

0000000000005160 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5160:	55                   	push   %rbp
    5161:	48 89 e5             	mov    %rsp,%rbp
    5164:	48 83 ec 10          	sub    $0x10,%rsp
    5168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    516c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5170:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5178:	48 89 d6             	mov    %rdx,%rsi
    517b:	48 89 c7             	mov    %rax,%rdi
    517e:	e8 53 01 00 00       	call   52d6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5183:	90                   	nop
    5184:	c9                   	leave
    5185:	c3                   	ret

0000000000005186 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5186:	55                   	push   %rbp
    5187:	48 89 e5             	mov    %rsp,%rbp
    518a:	48 83 ec 20          	sub    $0x20,%rsp
    518e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5196:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    519a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    519f:	74 17                	je     51b8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    51a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    51a9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    51ad:	48 89 ce             	mov    %rcx,%rsi
    51b0:	48 89 c7             	mov    %rax,%rdi
    51b3:	e8 2d 01 00 00       	call   52e5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    51b8:	90                   	nop
    51b9:	c9                   	leave
    51ba:	c3                   	ret

00000000000051bb <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    51bb:	55                   	push   %rbp
    51bc:	48 89 e5             	mov    %rsp,%rbp
    51bf:	48 83 ec 20          	sub    $0x20,%rsp
    51c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    51c7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    51ce:	ff ff 0f 
    51d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    51d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51d9:	48 89 c7             	mov    %rax,%rdi
    51dc:	e8 32 01 00 00       	call   5313 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    51e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    51e5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    51e9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    51ed:	48 89 d6             	mov    %rdx,%rsi
    51f0:	48 89 c7             	mov    %rax,%rdi
    51f3:	e8 35 01 00 00       	call   532d <_ZSt3minImERKT_S2_S2_>
    51f8:	48 8b 00             	mov    (%rax),%rax
      }
    51fb:	c9                   	leave
    51fc:	c3                   	ret
    51fd:	90                   	nop

00000000000051fe <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    51fe:	55                   	push   %rbp
    51ff:	48 89 e5             	mov    %rsp,%rbp
    5202:	48 83 ec 10          	sub    $0x10,%rsp
    5206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    520a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    520e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5216:	48 89 d6             	mov    %rdx,%rsi
    5219:	48 89 c7             	mov    %rax,%rdi
    521c:	e8 3f ff ff ff       	call   5160 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5225:	48 89 c7             	mov    %rax,%rdi
    5228:	e8 2b 01 00 00       	call   5358 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    522d:	90                   	nop
    522e:	c9                   	leave
    522f:	c3                   	ret

0000000000005230 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5230:	55                   	push   %rbp
    5231:	48 89 e5             	mov    %rsp,%rbp
    5234:	48 83 ec 10          	sub    $0x10,%rsp
    5238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    523c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5240:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5248:	48 89 d6             	mov    %rdx,%rsi
    524b:	48 89 c7             	mov    %rax,%rdi
    524e:	e8 33 01 00 00       	call   5386 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    5253:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5257:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    525a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    525e:	48 8b 10             	mov    (%rax),%rdx
    5261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5265:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    526d:	48 8b 00             	mov    (%rax),%rax
    5270:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5274:	48 c1 e2 03          	shl    $0x3,%rdx
    5278:	48 01 c2             	add    %rax,%rdx
    527b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    527f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5283:	90                   	nop
    5284:	c9                   	leave
    5285:	c3                   	ret

0000000000005286 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5286:	55                   	push   %rbp
    5287:	48 89 e5             	mov    %rsp,%rbp
    528a:	48 83 ec 20          	sub    $0x20,%rsp
    528e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5296:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    529a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    529e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a2:	48 89 d6             	mov    %rdx,%rsi
    52a5:	48 89 c7             	mov    %rax,%rdi
    52a8:	e8 0c 01 00 00       	call   53b9 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    52ad:	c9                   	leave
    52ae:	c3                   	ret

00000000000052af <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    52af:	55                   	push   %rbp
    52b0:	48 89 e5             	mov    %rsp,%rbp
    52b3:	48 83 ec 10          	sub    $0x10,%rsp
    52b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    52bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c7:	48 89 d6             	mov    %rdx,%rsi
    52ca:	48 89 c7             	mov    %rax,%rdi
    52cd:	e8 10 01 00 00       	call   53e2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    52d2:	90                   	nop
    52d3:	c9                   	leave
    52d4:	c3                   	ret
    52d5:	90                   	nop

00000000000052d6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    52d6:	55                   	push   %rbp
    52d7:	48 89 e5             	mov    %rsp,%rbp
    52da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52e2:	90                   	nop
    52e3:	5d                   	pop    %rbp
    52e4:	c3                   	ret

00000000000052e5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    52e5:	55                   	push   %rbp
    52e6:	48 89 e5             	mov    %rsp,%rbp
    52e9:	48 83 ec 20          	sub    $0x20,%rsp
    52ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    52f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5305:	48 89 ce             	mov    %rcx,%rsi
    5308:	48 89 c7             	mov    %rax,%rdi
    530b:	e8 e2 00 00 00       	call   53f2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    5310:	90                   	nop
    5311:	c9                   	leave
    5312:	c3                   	ret

0000000000005313 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    5313:	55                   	push   %rbp
    5314:	48 89 e5             	mov    %rsp,%rbp
    5317:	48 83 ec 10          	sub    $0x10,%rsp
    531b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    531f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5323:	48 89 c7             	mov    %rax,%rdi
    5326:	e8 f9 00 00 00       	call   5424 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    532b:	c9                   	leave
    532c:	c3                   	ret

000000000000532d <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    532d:	55                   	push   %rbp
    532e:	48 89 e5             	mov    %rsp,%rbp
    5331:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5335:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    5339:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    533d:	48 8b 10             	mov    (%rax),%rdx
    5340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5344:	48 8b 00             	mov    (%rax),%rax
    5347:	48 39 c2             	cmp    %rax,%rdx
    534a:	73 06                	jae    5352 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    534c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5350:	eb 04                	jmp    5356 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5356:	5d                   	pop    %rbp
    5357:	c3                   	ret

0000000000005358 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5358:	55                   	push   %rbp
    5359:	48 89 e5             	mov    %rsp,%rbp
    535c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5360:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5364:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    536b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    536f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5376:	00 
    5377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    537b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5382:	00 
	{ }
    5383:	90                   	nop
    5384:	5d                   	pop    %rbp
    5385:	c3                   	ret

0000000000005386 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5386:	55                   	push   %rbp
    5387:	48 89 e5             	mov    %rsp,%rbp
    538a:	48 83 ec 10          	sub    $0x10,%rsp
    538e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5392:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5396:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    539b:	74 15                	je     53b2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    539d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53a5:	48 89 d6             	mov    %rdx,%rsi
    53a8:	48 89 c7             	mov    %rax,%rdi
    53ab:	e8 8e 00 00 00       	call   543e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    53b0:	eb 05                	jmp    53b7 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    53b2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    53b7:	c9                   	leave
    53b8:	c3                   	ret

00000000000053b9 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    53b9:	55                   	push   %rbp
    53ba:	48 89 e5             	mov    %rsp,%rbp
    53bd:	48 83 ec 20          	sub    $0x20,%rsp
    53c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    53c9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    53cd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    53d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53d5:	48 89 d6             	mov    %rdx,%rsi
    53d8:	48 89 c7             	mov    %rax,%rdi
    53db:	e8 88 00 00 00       	call   5468 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    53e0:	c9                   	leave
    53e1:	c3                   	ret

00000000000053e2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    53e2:	55                   	push   %rbp
    53e3:	48 89 e5             	mov    %rsp,%rbp
    53e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53ee:	90                   	nop
    53ef:	5d                   	pop    %rbp
    53f0:	c3                   	ret
    53f1:	90                   	nop

00000000000053f2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    53f2:	55                   	push   %rbp
    53f3:	48 89 e5             	mov    %rsp,%rbp
    53f6:	48 83 ec 20          	sub    $0x20,%rsp
    53fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5402:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    5406:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    540a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5411:	00 
    5412:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5416:	48 89 d6             	mov    %rdx,%rsi
    5419:	48 89 c7             	mov    %rax,%rdi
    541c:	e8 6f ef ff ff       	call   4390 <_ZdlPvm@plt>
      }
    5421:	c9                   	leave
    5422:	c3                   	ret
    5423:	90                   	nop

0000000000005424 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5424:	55                   	push   %rbp
    5425:	48 89 e5             	mov    %rsp,%rbp
    5428:	48 83 ec 10          	sub    $0x10,%rsp
    542c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5434:	48 89 c7             	mov    %rax,%rdi
    5437:	e8 8a 00 00 00       	call   54c6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    543c:	c9                   	leave
    543d:	c3                   	ret

000000000000543e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    543e:	55                   	push   %rbp
    543f:	48 89 e5             	mov    %rsp,%rbp
    5442:	48 83 ec 10          	sub    $0x10,%rsp
    5446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    544a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    544e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5456:	ba 00 00 00 00       	mov    $0x0,%edx
    545b:	48 89 ce             	mov    %rcx,%rsi
    545e:	48 89 c7             	mov    %rax,%rdi
    5461:	e8 74 00 00 00       	call   54da <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    5466:	c9                   	leave
    5467:	c3                   	ret

0000000000005468 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5468:	55                   	push   %rbp
    5469:	48 89 e5             	mov    %rsp,%rbp
    546c:	48 83 ec 20          	sub    $0x20,%rsp
    5470:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5474:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5478:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    547d:	74 40                	je     54bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    547f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5483:	48 89 c7             	mov    %rax,%rdi
    5486:	e8 b0 00 00 00       	call   553b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    548b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    548f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5493:	48 89 c7             	mov    %rax,%rdi
    5496:	e8 ae 00 00 00       	call   5549 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    549b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    54a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    54a4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    54a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    54ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54b0:	48 89 ce             	mov    %rcx,%rsi
    54b3:	48 89 c7             	mov    %rax,%rdi
    54b6:	e8 b5 00 00 00       	call   5570 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    54bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    54bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    54c3:	c9                   	leave
    54c4:	c3                   	ret
    54c5:	90                   	nop

00000000000054c6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    54c6:	55                   	push   %rbp
    54c7:	48 89 e5             	mov    %rsp,%rbp
    54ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    54ce:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    54d5:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    54d8:	5d                   	pop    %rbp
    54d9:	c3                   	ret

00000000000054da <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    54da:	55                   	push   %rbp
    54db:	48 89 e5             	mov    %rsp,%rbp
    54de:	48 83 ec 20          	sub    $0x20,%rsp
    54e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    54ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f2:	48 89 c7             	mov    %rax,%rdi
    54f5:	e8 cc ff ff ff       	call   54c6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    54fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54fe:	0f 92 c0             	setb   %al
    5501:	0f b6 c0             	movzbl %al,%eax
    5504:	48 85 c0             	test   %rax,%rax
    5507:	0f 95 c0             	setne  %al
    550a:	84 c0                	test   %al,%al
    550c:	74 1a                	je     5528 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    550e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    5515:	ff ff 1f 
    5518:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    551c:	73 05                	jae    5523 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    551e:	e8 4d ed ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5523:	e8 b8 eb ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5528:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    552c:	48 c1 e0 03          	shl    $0x3,%rax
    5530:	48 89 c7             	mov    %rax,%rdi
    5533:	e8 48 ee ff ff       	call   4380 <_Znwm@plt>
    5538:	90                   	nop
      }
    5539:	c9                   	leave
    553a:	c3                   	ret

000000000000553b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    553b:	55                   	push   %rbp
    553c:	48 89 e5             	mov    %rsp,%rbp
    553f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5547:	5d                   	pop    %rbp
    5548:	c3                   	ret

0000000000005549 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5549:	55                   	push   %rbp
    554a:	48 89 e5             	mov    %rsp,%rbp
    554d:	48 83 ec 10          	sub    $0x10,%rsp
    5551:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5559:	48 89 c6             	mov    %rax,%rsi
    555c:	bf 08 00 00 00       	mov    $0x8,%edi
    5561:	e8 fa f8 ff ff       	call   4e60 <_ZnwmPv>
    5566:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    556d:	90                   	nop
    556e:	c9                   	leave
    556f:	c3                   	ret

0000000000005570 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5570:	55                   	push   %rbp
    5571:	48 89 e5             	mov    %rsp,%rbp
    5574:	48 83 ec 20          	sub    $0x20,%rsp
    5578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    557c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5580:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5584:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5588:	48 89 c7             	mov    %rax,%rdi
    558b:	e8 24 00 00 00       	call   55b4 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5590:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5594:	48 89 c7             	mov    %rax,%rdi
    5597:	e8 d6 f8 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    559c:	48 89 c1             	mov    %rax,%rcx
    559f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55a7:	48 89 ce             	mov    %rcx,%rsi
    55aa:	48 89 c7             	mov    %rax,%rdi
    55ad:	e8 0d 00 00 00       	call   55bf <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    55b2:	c9                   	leave
    55b3:	c3                   	ret

00000000000055b4 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    55b4:	55                   	push   %rbp
    55b5:	48 89 e5             	mov    %rsp,%rbp
    55b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    55bc:	90                   	nop
    55bd:	5d                   	pop    %rbp
    55be:	c3                   	ret

00000000000055bf <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    55bf:	55                   	push   %rbp
    55c0:	48 89 e5             	mov    %rsp,%rbp
    55c3:	48 83 ec 20          	sub    $0x20,%rsp
    55c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    55d3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    55d8:	75 06                	jne    55e0 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    55da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55de:	eb 3a                	jmp    561a <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    55e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55e4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55eb:	00 
    55ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55f0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    55f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fc:	48 89 ce             	mov    %rcx,%rsi
    55ff:	48 89 c7             	mov    %rax,%rdi
    5602:	e8 15 00 00 00       	call   561c <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    5607:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    560b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5612:	00 
    5613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5617:	48 01 d0             	add    %rdx,%rax
    }
    561a:	c9                   	leave
    561b:	c3                   	ret

000000000000561c <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    561c:	55                   	push   %rbp
    561d:	48 89 e5             	mov    %rsp,%rbp
    5620:	48 83 ec 20          	sub    $0x20,%rsp
    5624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    562c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5630:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5634:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    563c:	48 89 ce             	mov    %rcx,%rsi
    563f:	48 89 c7             	mov    %rax,%rdi
    5642:	e8 03 00 00 00       	call   564a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5647:	90                   	nop
    5648:	c9                   	leave
    5649:	c3                   	ret

000000000000564a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    564a:	55                   	push   %rbp
    564b:	48 89 e5             	mov    %rsp,%rbp
    564e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5652:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5656:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    565a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    565e:	48 8b 00             	mov    (%rax),%rax
    5661:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5665:	eb 10                	jmp    5677 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5667:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    566b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    566f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5672:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    567b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    567f:	75 e6                	jne    5667 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5681:	90                   	nop
    5682:	90                   	nop
    5683:	5d                   	pop    %rbp
    5684:	c3                   	ret

0000000000005685 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    5685:	55                   	push   %rbp
    5686:	48 89 e5             	mov    %rsp,%rbp
    5689:	48 83 ec 20          	sub    $0x20,%rsp
    568d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5690:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5693:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5697:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    569b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    569f:	be 00 00 00 00       	mov    $0x0,%esi
    56a4:	bf 01 20 02 00       	mov    $0x22001,%edi
    56a9:	e8 32 ec ff ff       	call   42e0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    56ae:	be 00 00 00 00       	mov    $0x0,%esi
    56b3:	bf 03 00 02 00       	mov    $0x20003,%edi
    56b8:	e8 23 ec ff ff       	call   42e0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    56bd:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    56c1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    56c5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    56c9:	8b 75 f8             	mov    -0x8(%rbp),%esi
    56cc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    56cf:	49 89 f8             	mov    %rdi,%r8
    56d2:	89 c7                	mov    %eax,%edi
    56d4:	e8 37 ef ff ff       	call   4610 <glfwCreateWindow@plt>
}
    56d9:	c9                   	leave
    56da:	c3                   	ret

00000000000056db <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    56db:	55                   	push   %rbp
    56dc:	48 89 e5             	mov    %rsp,%rbp
    56df:	41 54                	push   %r12
    56e1:	53                   	push   %rbx
    56e2:	48 83 ec 20          	sub    $0x20,%rsp
    56e6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    56ea:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    56ee:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    56f2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    56f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56fa:	48 89 ce             	mov    %rcx,%rsi
    56fd:	48 89 c7             	mov    %rax,%rdi
    5700:	e8 bb ed ff ff       	call   44c0 <vkCreateInstance@plt>
    5705:	85 c0                	test   %eax,%eax
    5707:	0f 95 c0             	setne  %al
    570a:	84 c0                	test   %al,%al
    570c:	74 3b                	je     5749 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    570e:	bf 10 00 00 00       	mov    $0x10,%edi
    5713:	e8 58 ea ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5718:	48 89 c3             	mov    %rax,%rbx
    571b:	48 8d 05 2e 1b 01 00 	lea    0x11b2e(%rip),%rax        # 17250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    5722:	48 89 c6             	mov    %rax,%rsi
    5725:	48 89 df             	mov    %rbx,%rdi
    5728:	e8 d3 e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    572d:	48 8b 05 74 08 02 00 	mov    0x20874(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5734:	48 89 c2             	mov    %rax,%rdx
    5737:	48 8d 05 02 06 02 00 	lea    0x20602(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    573e:	48 89 c6             	mov    %rax,%rsi
    5741:	48 89 df             	mov    %rbx,%rdi
    5744:	e8 47 ef ff ff       	call   4690 <__cxa_throw@plt>
  }
  return instance;
    5749:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    574d:	eb 16                	jmp    5765 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    574f:	49 89 c4             	mov    %rax,%r12
    5752:	48 89 df             	mov    %rbx,%rdi
    5755:	e8 e6 ea ff ff       	call   4240 <__cxa_free_exception@plt>
    575a:	4c 89 e0             	mov    %r12,%rax
    575d:	48 89 c7             	mov    %rax,%rdi
    5760:	e8 8b ef ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5765:	48 83 c4 20          	add    $0x20,%rsp
    5769:	5b                   	pop    %rbx
    576a:	41 5c                	pop    %r12
    576c:	5d                   	pop    %rbp
    576d:	c3                   	ret

000000000000576e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    576e:	55                   	push   %rbp
    576f:	48 89 e5             	mov    %rsp,%rbp
    5772:	41 54                	push   %r12
    5774:	53                   	push   %rbx
    5775:	48 83 ec 30          	sub    $0x30,%rsp
    5779:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    577d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5781:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    5785:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5789:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    578d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5791:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5795:	48 89 c7             	mov    %rax,%rdi
    5798:	e8 43 ee ff ff       	call   45e0 <vkCreateDevice@plt>
    579d:	85 c0                	test   %eax,%eax
    579f:	0f 95 c0             	setne  %al
    57a2:	84 c0                	test   %al,%al
    57a4:	74 3b                	je     57e1 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    57a6:	bf 10 00 00 00       	mov    $0x10,%edi
    57ab:	e8 c0 e9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    57b0:	48 89 c3             	mov    %rax,%rbx
    57b3:	48 8d 05 b6 1a 01 00 	lea    0x11ab6(%rip),%rax        # 17270 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    57ba:	48 89 c6             	mov    %rax,%rsi
    57bd:	48 89 df             	mov    %rbx,%rdi
    57c0:	e8 3b e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    57c5:	48 8b 05 dc 07 02 00 	mov    0x207dc(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    57cc:	48 89 c2             	mov    %rax,%rdx
    57cf:	48 8d 05 6a 05 02 00 	lea    0x2056a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    57d6:	48 89 c6             	mov    %rax,%rsi
    57d9:	48 89 df             	mov    %rbx,%rdi
    57dc:	e8 af ee ff ff       	call   4690 <__cxa_throw@plt>
  }
  return device;
    57e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57e5:	eb 16                	jmp    57fd <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    57e7:	49 89 c4             	mov    %rax,%r12
    57ea:	48 89 df             	mov    %rbx,%rdi
    57ed:	e8 4e ea ff ff       	call   4240 <__cxa_free_exception@plt>
    57f2:	4c 89 e0             	mov    %r12,%rax
    57f5:	48 89 c7             	mov    %rax,%rdi
    57f8:	e8 f3 ee ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    57fd:	48 83 c4 30          	add    $0x30,%rsp
    5801:	5b                   	pop    %rbx
    5802:	41 5c                	pop    %r12
    5804:	5d                   	pop    %rbp
    5805:	c3                   	ret

0000000000005806 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    5806:	55                   	push   %rbp
    5807:	48 89 e5             	mov    %rsp,%rbp
    580a:	41 54                	push   %r12
    580c:	53                   	push   %rbx
    580d:	48 83 ec 30          	sub    $0x30,%rsp
    5811:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5815:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5819:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    581d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5821:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5825:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5829:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    582d:	48 89 c7             	mov    %rax,%rdi
    5830:	e8 cb ed ff ff       	call   4600 <glfwCreateWindowSurface@plt>
    5835:	85 c0                	test   %eax,%eax
    5837:	0f 95 c0             	setne  %al
    583a:	84 c0                	test   %al,%al
    583c:	74 3b                	je     5879 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    583e:	bf 10 00 00 00       	mov    $0x10,%edi
    5843:	e8 28 e9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5848:	48 89 c3             	mov    %rax,%rbx
    584b:	48 8d 05 46 1a 01 00 	lea    0x11a46(%rip),%rax        # 17298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5852:	48 89 c6             	mov    %rax,%rsi
    5855:	48 89 df             	mov    %rbx,%rdi
    5858:	e8 a3 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    585d:	48 8b 05 44 07 02 00 	mov    0x20744(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5864:	48 89 c2             	mov    %rax,%rdx
    5867:	48 8d 05 d2 04 02 00 	lea    0x204d2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    586e:	48 89 c6             	mov    %rax,%rsi
    5871:	48 89 df             	mov    %rbx,%rdi
    5874:	e8 17 ee ff ff       	call   4690 <__cxa_throw@plt>
  }
  return surface;
    5879:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    587d:	eb 16                	jmp    5895 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    587f:	49 89 c4             	mov    %rax,%r12
    5882:	48 89 df             	mov    %rbx,%rdi
    5885:	e8 b6 e9 ff ff       	call   4240 <__cxa_free_exception@plt>
    588a:	4c 89 e0             	mov    %r12,%rax
    588d:	48 89 c7             	mov    %rax,%rdi
    5890:	e8 5b ee ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5895:	48 83 c4 30          	add    $0x30,%rsp
    5899:	5b                   	pop    %rbx
    589a:	41 5c                	pop    %r12
    589c:	5d                   	pop    %rbp
    589d:	c3                   	ret

000000000000589e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    589e:	55                   	push   %rbp
    589f:	48 89 e5             	mov    %rsp,%rbp
    58a2:	41 54                	push   %r12
    58a4:	53                   	push   %rbx
    58a5:	48 83 ec 30          	sub    $0x30,%rsp
    58a9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    58ad:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    58b1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    58b5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    58bc:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    58bd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    58c1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    58c5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    58c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58cd:	48 89 c7             	mov    %rax,%rdi
    58d0:	e8 bb eb ff ff       	call   4490 <vkCreateSwapchainKHR@plt>
    58d5:	85 c0                	test   %eax,%eax
    58d7:	0f 95 c0             	setne  %al
    58da:	84 c0                	test   %al,%al
    58dc:	74 3b                	je     5919 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    58de:	bf 10 00 00 00       	mov    $0x10,%edi
    58e3:	e8 88 e8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    58e8:	48 89 c3             	mov    %rax,%rbx
    58eb:	48 8d 05 c7 19 01 00 	lea    0x119c7(%rip),%rax        # 172b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    58f2:	48 89 c6             	mov    %rax,%rsi
    58f5:	48 89 df             	mov    %rbx,%rdi
    58f8:	e8 03 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    58fd:	48 8b 05 a4 06 02 00 	mov    0x206a4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5904:	48 89 c2             	mov    %rax,%rdx
    5907:	48 8d 05 32 04 02 00 	lea    0x20432(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    590e:	48 89 c6             	mov    %rax,%rsi
    5911:	48 89 df             	mov    %rbx,%rdi
    5914:	e8 77 ed ff ff       	call   4690 <__cxa_throw@plt>
  }
  return swapchain;
    5919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    591d:	eb 16                	jmp    5935 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    591f:	49 89 c4             	mov    %rax,%r12
    5922:	48 89 df             	mov    %rbx,%rdi
    5925:	e8 16 e9 ff ff       	call   4240 <__cxa_free_exception@plt>
    592a:	4c 89 e0             	mov    %r12,%rax
    592d:	48 89 c7             	mov    %rax,%rdi
    5930:	e8 bb ed ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5935:	48 83 c4 30          	add    $0x30,%rsp
    5939:	5b                   	pop    %rbx
    593a:	41 5c                	pop    %r12
    593c:	5d                   	pop    %rbp
    593d:	c3                   	ret

000000000000593e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    593e:	55                   	push   %rbp
    593f:	48 89 e5             	mov    %rsp,%rbp
    5942:	41 54                	push   %r12
    5944:	53                   	push   %rbx
    5945:	48 83 ec 30          	sub    $0x30,%rsp
    5949:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    594d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5951:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5955:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5959:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    595d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5961:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5965:	48 89 c7             	mov    %rax,%rdi
    5968:	e8 53 ea ff ff       	call   43c0 <vkCreateImageView@plt>
    596d:	85 c0                	test   %eax,%eax
    596f:	0f 95 c0             	setne  %al
    5972:	84 c0                	test   %al,%al
    5974:	74 3b                	je     59b1 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5976:	bf 10 00 00 00       	mov    $0x10,%edi
    597b:	e8 f0 e7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5980:	48 89 c3             	mov    %rax,%rbx
    5983:	48 8d 05 4e 19 01 00 	lea    0x1194e(%rip),%rax        # 172d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    598a:	48 89 c6             	mov    %rax,%rsi
    598d:	48 89 df             	mov    %rbx,%rdi
    5990:	e8 6b e7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5995:	48 8b 05 0c 06 02 00 	mov    0x2060c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    599c:	48 89 c2             	mov    %rax,%rdx
    599f:	48 8d 05 9a 03 02 00 	lea    0x2039a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    59a6:	48 89 c6             	mov    %rax,%rsi
    59a9:	48 89 df             	mov    %rbx,%rdi
    59ac:	e8 df ec ff ff       	call   4690 <__cxa_throw@plt>
  }
  return imageView;
    59b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59b5:	eb 16                	jmp    59cd <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    59b7:	49 89 c4             	mov    %rax,%r12
    59ba:	48 89 df             	mov    %rbx,%rdi
    59bd:	e8 7e e8 ff ff       	call   4240 <__cxa_free_exception@plt>
    59c2:	4c 89 e0             	mov    %r12,%rax
    59c5:	48 89 c7             	mov    %rax,%rdi
    59c8:	e8 23 ed ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    59cd:	48 83 c4 30          	add    $0x30,%rsp
    59d1:	5b                   	pop    %rbx
    59d2:	41 5c                	pop    %r12
    59d4:	5d                   	pop    %rbp
    59d5:	c3                   	ret

00000000000059d6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    59d6:	55                   	push   %rbp
    59d7:	48 89 e5             	mov    %rsp,%rbp
    59da:	41 54                	push   %r12
    59dc:	53                   	push   %rbx
    59dd:	48 83 ec 60          	sub    $0x60,%rsp
    59e1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    59e5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    59e9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    59ed:	66 0f ef c0          	pxor   %xmm0,%xmm0
    59f1:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    59f5:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    59f9:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    59fe:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    5a05:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5a09:	48 89 c7             	mov    %rax,%rdi
    5a0c:	e8 4f 05 00 00       	call   5f60 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    5a11:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    5a15:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5a19:	48 89 c7             	mov    %rax,%rdi
    5a1c:	e8 5f 05 00 00       	call   5f80 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    5a21:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    5a25:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5a2c:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a2d:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    5a31:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5a35:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5a39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5a3d:	48 89 c7             	mov    %rax,%rdi
    5a40:	e8 3b e8 ff ff       	call   4280 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5a45:	85 c0                	test   %eax,%eax
    5a47:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a4a:	84 c0                	test   %al,%al
    5a4c:	74 3b                	je     5a89 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5a4e:	bf 10 00 00 00       	mov    $0x10,%edi
    5a53:	e8 18 e7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5a58:	48 89 c3             	mov    %rax,%rbx
    5a5b:	48 8d 05 96 18 01 00 	lea    0x11896(%rip),%rax        # 172f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5a62:	48 89 c6             	mov    %rax,%rsi
    5a65:	48 89 df             	mov    %rbx,%rdi
    5a68:	e8 93 e6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5a6d:	48 8b 05 34 05 02 00 	mov    0x20534(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a74:	48 89 c2             	mov    %rax,%rdx
    5a77:	48 8d 05 c2 02 02 00 	lea    0x202c2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a7e:	48 89 c6             	mov    %rax,%rsi
    5a81:	48 89 df             	mov    %rbx,%rdi
    5a84:	e8 07 ec ff ff       	call   4690 <__cxa_throw@plt>
  }
  return shaderModule;
    5a89:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a8d:	eb 16                	jmp    5aa5 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5a8f:	49 89 c4             	mov    %rax,%r12
    5a92:	48 89 df             	mov    %rbx,%rdi
    5a95:	e8 a6 e7 ff ff       	call   4240 <__cxa_free_exception@plt>
    5a9a:	4c 89 e0             	mov    %r12,%rax
    5a9d:	48 89 c7             	mov    %rax,%rdi
    5aa0:	e8 4b ec ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5aa5:	48 83 c4 60          	add    $0x60,%rsp
    5aa9:	5b                   	pop    %rbx
    5aaa:	41 5c                	pop    %r12
    5aac:	5d                   	pop    %rbp
    5aad:	c3                   	ret

0000000000005aae <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5aae:	55                   	push   %rbp
    5aaf:	48 89 e5             	mov    %rsp,%rbp
    5ab2:	41 54                	push   %r12
    5ab4:	53                   	push   %rbx
    5ab5:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5abc:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5ac3:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5aca:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5ad1:	be 04 00 00 00       	mov    $0x4,%esi
    5ad6:	bf 02 00 00 00       	mov    $0x2,%edi
    5adb:	e8 6e 04 00 00       	call   5f4e <_ZStorSt13_Ios_OpenmodeS_>
    5ae0:	89 c2                	mov    %eax,%edx
    5ae2:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5ae9:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5af0:	48 89 ce             	mov    %rcx,%rsi
    5af3:	48 89 c7             	mov    %rax,%rdi
    5af6:	e8 45 eb ff ff       	call   4640 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5afb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b02:	48 89 c7             	mov    %rax,%rdi
    5b05:	e8 26 eb ff ff       	call   4630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5b0a:	83 f0 01             	xor    $0x1,%eax
    5b0d:	84 c0                	test   %al,%al
    5b0f:	74 61                	je     5b72 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5b11:	bf 10 00 00 00       	mov    $0x10,%edi
    5b16:	e8 55 e6 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5b1b:	48 89 c3             	mov    %rax,%rbx
    5b1e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b22:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5b29:	48 8d 0d e8 17 01 00 	lea    0x117e8(%rip),%rcx        # 17318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5b30:	48 89 ce             	mov    %rcx,%rsi
    5b33:	48 89 c7             	mov    %rax,%rdi
    5b36:	e8 69 04 00 00       	call   5fa4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5b3b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b3f:	48 89 c6             	mov    %rax,%rsi
    5b42:	48 89 df             	mov    %rbx,%rdi
    5b45:	e8 06 eb ff ff       	call   4650 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5b4a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b4e:	48 89 c7             	mov    %rax,%rdi
    5b51:	e8 8a e6 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5b56:	48 8b 05 4b 04 02 00 	mov    0x2044b(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b5d:	48 89 c2             	mov    %rax,%rdx
    5b60:	48 8d 05 d9 01 02 00 	lea    0x201d9(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b67:	48 89 c6             	mov    %rax,%rsi
    5b6a:	48 89 df             	mov    %rbx,%rdi
    5b6d:	e8 1e eb ff ff       	call   4690 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5b72:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b79:	48 89 c7             	mov    %rax,%rdi
    5b7c:	e8 4f eb ff ff       	call   46d0 <_ZNSi5tellgEv@plt>
    5b81:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5b85:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5b89:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5b8d:	48 89 c7             	mov    %rax,%rdi
    5b90:	e8 11 05 00 00       	call   60a6 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5b95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5b99:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b9d:	48 89 c7             	mov    %rax,%rdi
    5ba0:	e8 5b eb ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    5ba5:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5ba9:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5bad:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5bb4:	48 89 ce             	mov    %rcx,%rsi
    5bb7:	48 89 c7             	mov    %rax,%rdi
    5bba:	e8 f9 04 00 00       	call   60b8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5bbf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5bc3:	48 89 c7             	mov    %rax,%rdi
    5bc6:	e8 55 e8 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5bcb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5bcf:	be 00 00 00 00       	mov    $0x0,%esi
    5bd4:	48 89 c7             	mov    %rax,%rdi
    5bd7:	e8 96 05 00 00       	call   6172 <_ZNSt4fposI11__mbstate_tEC1El>
    5bdc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5be0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5be4:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5beb:	48 89 ce             	mov    %rcx,%rsi
    5bee:	48 89 c7             	mov    %rax,%rdi
    5bf1:	e8 0a e9 ff ff       	call   4500 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5bf6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5bfa:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c01:	48 89 c7             	mov    %rax,%rdi
    5c04:	e8 99 05 00 00       	call   61a2 <_ZNSt6vectorIcSaIcEE4dataEv>
    5c09:	48 89 c1             	mov    %rax,%rcx
    5c0c:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c13:	48 89 da             	mov    %rbx,%rdx
    5c16:	48 89 ce             	mov    %rcx,%rsi
    5c19:	48 89 c7             	mov    %rax,%rdi
    5c1c:	e8 cf e8 ff ff       	call   44f0 <_ZNSi4readEPcl@plt>
  file.close();
    5c21:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c28:	48 89 c7             	mov    %rax,%rdi
    5c2b:	e8 40 e4 ff ff       	call   4070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5c30:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5c37:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5c3e:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5c45:	48 89 ce             	mov    %rcx,%rsi
    5c48:	48 89 c7             	mov    %rax,%rdi
    5c4b:	e8 86 fd ff ff       	call   59d6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5c50:	48 89 c3             	mov    %rax,%rbx
    5c53:	90                   	nop
}
    5c54:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c5b:	48 89 c7             	mov    %rax,%rdi
    5c5e:	e8 cb 04 00 00       	call   612e <_ZNSt6vectorIcSaIcEED1Ev>
    5c63:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c6a:	48 89 c7             	mov    %rax,%rdi
    5c6d:	e8 3e e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5c72:	48 89 d8             	mov    %rbx,%rax
    5c75:	eb 63                	jmp    5cda <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5c77:	49 89 c4             	mov    %rax,%r12
    5c7a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c7e:	48 89 c7             	mov    %rax,%rdi
    5c81:	e8 5a e5 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5c86:	eb 03                	jmp    5c8b <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5c88:	49 89 c4             	mov    %rax,%r12
    5c8b:	48 89 df             	mov    %rbx,%rdi
    5c8e:	e8 ad e5 ff ff       	call   4240 <__cxa_free_exception@plt>
    5c93:	4c 89 e3             	mov    %r12,%rbx
    5c96:	eb 28                	jmp    5cc0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5c98:	48 89 c3             	mov    %rax,%rbx
    5c9b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5c9f:	48 89 c7             	mov    %rax,%rdi
    5ca2:	e8 79 e7 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    5ca7:	eb 17                	jmp    5cc0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5ca9:	48 89 c3             	mov    %rax,%rbx
    5cac:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5cb3:	48 89 c7             	mov    %rax,%rdi
    5cb6:	e8 73 04 00 00       	call   612e <_ZNSt6vectorIcSaIcEED1Ev>
    5cbb:	eb 03                	jmp    5cc0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5cbd:	48 89 c3             	mov    %rax,%rbx
    5cc0:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5cc7:	48 89 c7             	mov    %rax,%rdi
    5cca:	e8 e1 e3 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5ccf:	48 89 d8             	mov    %rbx,%rax
    5cd2:	48 89 c7             	mov    %rax,%rdi
    5cd5:	e8 16 ea ff ff       	call   46f0 <_Unwind_Resume@plt>
    5cda:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5ce1:	5b                   	pop    %rbx
    5ce2:	41 5c                	pop    %r12
    5ce4:	5d                   	pop    %rbp
    5ce5:	c3                   	ret

0000000000005ce6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5ce6:	55                   	push   %rbp
    5ce7:	48 89 e5             	mov    %rsp,%rbp
    5cea:	41 54                	push   %r12
    5cec:	53                   	push   %rbx
    5ced:	48 83 ec 30          	sub    $0x30,%rsp
    5cf1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5cf5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5cf9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5cfd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5d01:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d05:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5d09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5d0d:	48 89 c7             	mov    %rax,%rdi
    5d10:	e8 9b e5 ff ff       	call   42b0 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5d15:	85 c0                	test   %eax,%eax
    5d17:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5d1a:	84 c0                	test   %al,%al
    5d1c:	74 3b                	je     5d59 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5d1e:	bf 10 00 00 00       	mov    $0x10,%edi
    5d23:	e8 48 e4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5d28:	48 89 c3             	mov    %rax,%rbx
    5d2b:	48 8d 05 f6 15 01 00 	lea    0x115f6(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5d32:	48 89 c6             	mov    %rax,%rsi
    5d35:	48 89 df             	mov    %rbx,%rdi
    5d38:	e8 c3 e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5d3d:	48 8b 05 64 02 02 00 	mov    0x20264(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d44:	48 89 c2             	mov    %rax,%rdx
    5d47:	48 8d 05 f2 ff 01 00 	lea    0x1fff2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d4e:	48 89 c6             	mov    %rax,%rsi
    5d51:	48 89 df             	mov    %rbx,%rdi
    5d54:	e8 37 e9 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5d59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d5d:	eb 16                	jmp    5d75 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5d5f:	49 89 c4             	mov    %rax,%r12
    5d62:	48 89 df             	mov    %rbx,%rdi
    5d65:	e8 d6 e4 ff ff       	call   4240 <__cxa_free_exception@plt>
    5d6a:	4c 89 e0             	mov    %r12,%rax
    5d6d:	48 89 c7             	mov    %rax,%rdi
    5d70:	e8 7b e9 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5d75:	48 83 c4 30          	add    $0x30,%rsp
    5d79:	5b                   	pop    %rbx
    5d7a:	41 5c                	pop    %r12
    5d7c:	5d                   	pop    %rbp
    5d7d:	c3                   	ret

0000000000005d7e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5d7e:	55                   	push   %rbp
    5d7f:	48 89 e5             	mov    %rsp,%rbp
    5d82:	41 54                	push   %r12
    5d84:	53                   	push   %rbx
    5d85:	48 83 ec 30          	sub    $0x30,%rsp
    5d89:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d8d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5d91:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5d95:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5d99:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d9d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5da1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5da5:	48 89 c7             	mov    %rax,%rdi
    5da8:	e8 43 e4 ff ff       	call   41f0 <vkCreateRenderPass@plt>
    5dad:	85 c0                	test   %eax,%eax
    5daf:	0f 95 c0             	setne  %al
    5db2:	84 c0                	test   %al,%al
    5db4:	74 3b                	je     5df1 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5db6:	bf 10 00 00 00       	mov    $0x10,%edi
    5dbb:	e8 b0 e3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5dc0:	48 89 c3             	mov    %rax,%rbx
    5dc3:	48 8d 05 5e 15 01 00 	lea    0x1155e(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5dca:	48 89 c6             	mov    %rax,%rsi
    5dcd:	48 89 df             	mov    %rbx,%rdi
    5dd0:	e8 2b e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5dd5:	48 8b 05 cc 01 02 00 	mov    0x201cc(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5ddc:	48 89 c2             	mov    %rax,%rdx
    5ddf:	48 8d 05 5a ff 01 00 	lea    0x1ff5a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5de6:	48 89 c6             	mov    %rax,%rsi
    5de9:	48 89 df             	mov    %rbx,%rdi
    5dec:	e8 9f e8 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return renderPass;
    5df1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5df5:	eb 16                	jmp    5e0d <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5df7:	49 89 c4             	mov    %rax,%r12
    5dfa:	48 89 df             	mov    %rbx,%rdi
    5dfd:	e8 3e e4 ff ff       	call   4240 <__cxa_free_exception@plt>
    5e02:	4c 89 e0             	mov    %r12,%rax
    5e05:	48 89 c7             	mov    %rax,%rdi
    5e08:	e8 e3 e8 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5e0d:	48 83 c4 30          	add    $0x30,%rsp
    5e11:	5b                   	pop    %rbx
    5e12:	41 5c                	pop    %r12
    5e14:	5d                   	pop    %rbp
    5e15:	c3                   	ret

0000000000005e16 <_ZN3vkh17createFrameBufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFrameBuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5e16:	55                   	push   %rbp
    5e17:	48 89 e5             	mov    %rsp,%rbp
    5e1a:	41 54                	push   %r12
    5e1c:	53                   	push   %rbx
    5e1d:	48 83 ec 30          	sub    $0x30,%rsp
    5e21:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5e25:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5e29:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    5e2d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5e31:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e35:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5e39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e3d:	48 89 c7             	mov    %rax,%rdi
    5e40:	e8 1b e7 ff ff       	call   4560 <vkCreateFramebuffer@plt>
    5e45:	85 c0                	test   %eax,%eax
    5e47:	0f 95 c0             	setne  %al
    5e4a:	84 c0                	test   %al,%al
    5e4c:	74 3b                	je     5e89 <_ZN3vkh17createFrameBufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    5e4e:	bf 10 00 00 00       	mov    $0x10,%edi
    5e53:	e8 18 e3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5e58:	48 89 c3             	mov    %rax,%rbx
    5e5b:	48 8d 05 e8 14 01 00 	lea    0x114e8(%rip),%rax        # 1734a <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x102>
    5e62:	48 89 c6             	mov    %rax,%rsi
    5e65:	48 89 df             	mov    %rbx,%rdi
    5e68:	e8 93 e2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5e6d:	48 8b 05 34 01 02 00 	mov    0x20134(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5e74:	48 89 c2             	mov    %rax,%rdx
    5e77:	48 8d 05 c2 fe 01 00 	lea    0x1fec2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5e7e:	48 89 c6             	mov    %rax,%rsi
    5e81:	48 89 df             	mov    %rbx,%rdi
    5e84:	e8 07 e8 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return framebuffer;
    5e89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e8d:	eb 16                	jmp    5ea5 <_ZN3vkh17createFrameBufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    5e8f:	49 89 c4             	mov    %rax,%r12
    5e92:	48 89 df             	mov    %rbx,%rdi
    5e95:	e8 a6 e3 ff ff       	call   4240 <__cxa_free_exception@plt>
    5e9a:	4c 89 e0             	mov    %r12,%rax
    5e9d:	48 89 c7             	mov    %rax,%rdi
    5ea0:	e8 4b e8 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5ea5:	48 83 c4 30          	add    $0x30,%rsp
    5ea9:	5b                   	pop    %rbx
    5eaa:	41 5c                	pop    %r12
    5eac:	5d                   	pop    %rbp
    5ead:	c3                   	ret

0000000000005eae <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5eae:	55                   	push   %rbp
    5eaf:	48 89 e5             	mov    %rsp,%rbp
    5eb2:	41 54                	push   %r12
    5eb4:	53                   	push   %rbx
    5eb5:	48 83 ec 30          	sub    $0x30,%rsp
    5eb9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ebd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5ec1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    5ec5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5ecc:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    5ecd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5ed1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5ed5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5ed9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5edd:	48 89 c7             	mov    %rax,%rdi
    5ee0:	e8 4b e2 ff ff       	call   4130 <vkCreateCommandPool@plt>
    5ee5:	85 c0                	test   %eax,%eax
    5ee7:	0f 95 c0             	setne  %al
    5eea:	84 c0                	test   %al,%al
    5eec:	74 3b                	je     5f29 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    5eee:	bf 10 00 00 00       	mov    $0x10,%edi
    5ef3:	e8 78 e2 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5ef8:	48 89 c3             	mov    %rax,%rbx
    5efb:	48 8d 05 66 14 01 00 	lea    0x11466(%rip),%rax        # 17368 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x120>
    5f02:	48 89 c6             	mov    %rax,%rsi
    5f05:	48 89 df             	mov    %rbx,%rdi
    5f08:	e8 f3 e1 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5f0d:	48 8b 05 94 00 02 00 	mov    0x20094(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5f14:	48 89 c2             	mov    %rax,%rdx
    5f17:	48 8d 05 22 fe 01 00 	lea    0x1fe22(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5f1e:	48 89 c6             	mov    %rax,%rsi
    5f21:	48 89 df             	mov    %rbx,%rdi
    5f24:	e8 67 e7 ff ff       	call   4690 <__cxa_throw@plt>
  }
  return commandPool;
    5f29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f2d:	eb 16                	jmp    5f45 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    5f2f:	49 89 c4             	mov    %rax,%r12
    5f32:	48 89 df             	mov    %rbx,%rdi
    5f35:	e8 06 e3 ff ff       	call   4240 <__cxa_free_exception@plt>
    5f3a:	4c 89 e0             	mov    %r12,%rax
    5f3d:	48 89 c7             	mov    %rax,%rdi
    5f40:	e8 ab e7 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    5f45:	48 83 c4 30          	add    $0x30,%rsp
    5f49:	5b                   	pop    %rbx
    5f4a:	41 5c                	pop    %r12
    5f4c:	5d                   	pop    %rbp
    5f4d:	c3                   	ret

0000000000005f4e <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    5f4e:	55                   	push   %rbp
    5f4f:	48 89 e5             	mov    %rsp,%rbp
    5f52:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5f55:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5f58:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5f5b:	0b 45 f8             	or     -0x8(%rbp),%eax
    5f5e:	5d                   	pop    %rbp
    5f5f:	c3                   	ret

0000000000005f60 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5f60:	55                   	push   %rbp
    5f61:	48 89 e5             	mov    %rsp,%rbp
    5f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5f68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f6c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f74:	48 8b 00             	mov    (%rax),%rax
    5f77:	48 29 c2             	sub    %rax,%rdx
    5f7a:	48 89 d0             	mov    %rdx,%rax
    5f7d:	5d                   	pop    %rbp
    5f7e:	c3                   	ret
    5f7f:	90                   	nop

0000000000005f80 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    5f80:	55                   	push   %rbp
    5f81:	48 89 e5             	mov    %rsp,%rbp
    5f84:	48 83 ec 10          	sub    $0x10,%rsp
    5f88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f90:	48 8b 10             	mov    (%rax),%rdx
    5f93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f97:	48 89 d6             	mov    %rdx,%rsi
    5f9a:	48 89 c7             	mov    %rax,%rdi
    5f9d:	e8 24 02 00 00       	call   61c6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    5fa2:	c9                   	leave
    5fa3:	c3                   	ret

0000000000005fa4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    5fa4:	55                   	push   %rbp
    5fa5:	48 89 e5             	mov    %rsp,%rbp
    5fa8:	53                   	push   %rbx
    5fa9:	48 83 ec 38          	sub    $0x38,%rsp
    5fad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5fb1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5fb5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    5fb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5fbd:	48 89 c7             	mov    %rax,%rdi
    5fc0:	e8 c4 ea ff ff       	call   4a89 <_ZNSt11char_traitsIcE6lengthEPKc>
    5fc5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5fc9:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5fcd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5fd1:	48 89 d6             	mov    %rdx,%rsi
    5fd4:	48 89 c7             	mov    %rax,%rdi
    5fd7:	e8 14 e1 ff ff       	call   40f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    5fdc:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5fe0:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    5fe4:	48 89 d6             	mov    %rdx,%rsi
    5fe7:	48 89 c7             	mov    %rax,%rdi
    5fea:	e8 e9 01 00 00       	call   61d8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    5fef:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    5ff3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ff7:	48 89 d6             	mov    %rdx,%rsi
    5ffa:	48 89 c7             	mov    %rax,%rdi
    5ffd:	e8 9e e6 ff ff       	call   46a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    6002:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6006:	48 89 c7             	mov    %rax,%rdi
    6009:	e8 12 e4 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    600e:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6012:	48 89 c7             	mov    %rax,%rdi
    6015:	e8 06 e4 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    601a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    601e:	48 89 c7             	mov    %rax,%rdi
    6021:	e8 fa e1 ff ff       	call   4220 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    6026:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    602a:	48 01 c2             	add    %rax,%rdx
    602d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6031:	48 89 d6             	mov    %rdx,%rsi
    6034:	48 89 c7             	mov    %rax,%rdi
    6037:	e8 e4 e5 ff ff       	call   4620 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    603c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6040:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6044:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6048:	48 89 ce             	mov    %rcx,%rsi
    604b:	48 89 c7             	mov    %rax,%rdi
    604e:	e8 ed df ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    6053:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6057:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    605b:	48 89 d6             	mov    %rdx,%rsi
    605e:	48 89 c7             	mov    %rax,%rdi
    6061:	e8 fa e6 ff ff       	call   4760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    6066:	eb 34                	jmp    609c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6068:	48 89 c3             	mov    %rax,%rbx
    606b:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    606f:	48 89 c7             	mov    %rax,%rdi
    6072:	e8 a9 e3 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    6077:	48 89 d8             	mov    %rbx,%rax
    607a:	48 89 c7             	mov    %rax,%rdi
    607d:	e8 6e e6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    }
    6082:	48 89 c3             	mov    %rax,%rbx
    6085:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6089:	48 89 c7             	mov    %rax,%rdi
    608c:	e8 4f e1 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6091:	48 89 d8             	mov    %rbx,%rax
    6094:	48 89 c7             	mov    %rax,%rdi
    6097:	e8 54 e6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    609c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    60a4:	c9                   	leave
    60a5:	c3                   	ret

00000000000060a6 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    60a6:	55                   	push   %rbp
    60a7:	48 89 e5             	mov    %rsp,%rbp
    60aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b2:	48 8b 00             	mov    (%rax),%rax
    60b5:	5d                   	pop    %rbp
    60b6:	c3                   	ret
    60b7:	90                   	nop

00000000000060b8 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    60b8:	55                   	push   %rbp
    60b9:	48 89 e5             	mov    %rsp,%rbp
    60bc:	53                   	push   %rbx
    60bd:	48 83 ec 28          	sub    $0x28,%rsp
    60c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    60c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    60c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    60cd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    60d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    60d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    60d9:	48 89 d6             	mov    %rdx,%rsi
    60dc:	48 89 c7             	mov    %rax,%rdi
    60df:	e8 1d 01 00 00       	call   6201 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    60e4:	48 89 c1             	mov    %rax,%rcx
    60e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60eb:	48 89 c2             	mov    %rax,%rdx
    60ee:	48 89 ce             	mov    %rcx,%rsi
    60f1:	48 89 df             	mov    %rbx,%rdi
    60f4:	e8 85 01 00 00       	call   627e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    60f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    60fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6101:	48 89 d6             	mov    %rdx,%rsi
    6104:	48 89 c7             	mov    %rax,%rdi
    6107:	e8 14 02 00 00       	call   6320 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    610c:	eb 1a                	jmp    6128 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    610e:	48 89 c3             	mov    %rax,%rbx
    6111:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6115:	48 89 c7             	mov    %rax,%rdi
    6118:	e8 bf 01 00 00       	call   62dc <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    611d:	48 89 d8             	mov    %rbx,%rax
    6120:	48 89 c7             	mov    %rax,%rdi
    6123:	e8 c8 e5 ff ff       	call   46f0 <_Unwind_Resume@plt>
    6128:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    612c:	c9                   	leave
    612d:	c3                   	ret

000000000000612e <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    612e:	55                   	push   %rbp
    612f:	48 89 e5             	mov    %rsp,%rbp
    6132:	48 83 ec 10          	sub    $0x10,%rsp
    6136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    613a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    613e:	48 89 c7             	mov    %rax,%rdi
    6141:	e8 1a 02 00 00       	call   6360 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6146:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6155:	48 8b 00             	mov    (%rax),%rax
    6158:	48 89 ce             	mov    %rcx,%rsi
    615b:	48 89 c7             	mov    %rax,%rdi
    615e:	e8 0b 02 00 00       	call   636e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    6163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6167:	48 89 c7             	mov    %rax,%rdi
    616a:	e8 6d 01 00 00       	call   62dc <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    616f:	90                   	nop
    6170:	c9                   	leave
    6171:	c3                   	ret

0000000000006172 <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    6172:	55                   	push   %rbp
    6173:	48 89 e5             	mov    %rsp,%rbp
    6176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    617a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    617e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6182:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6186:	48 89 10             	mov    %rdx,(%rax)
    6189:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    618d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    6194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6198:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    619f:	90                   	nop
    61a0:	5d                   	pop    %rbp
    61a1:	c3                   	ret

00000000000061a2 <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    61a2:	55                   	push   %rbp
    61a3:	48 89 e5             	mov    %rsp,%rbp
    61a6:	48 83 ec 10          	sub    $0x10,%rsp
    61aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    61ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b2:	48 8b 10             	mov    (%rax),%rdx
    61b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b9:	48 89 d6             	mov    %rdx,%rsi
    61bc:	48 89 c7             	mov    %rax,%rdi
    61bf:	e8 02 00 00 00       	call   61c6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    61c4:	c9                   	leave
    61c5:	c3                   	ret

00000000000061c6 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    61c6:	55                   	push   %rbp
    61c7:	48 89 e5             	mov    %rsp,%rbp
    61ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    61d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61d6:	5d                   	pop    %rbp
    61d7:	c3                   	ret

00000000000061d8 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    61d8:	55                   	push   %rbp
    61d9:	48 89 e5             	mov    %rsp,%rbp
    61dc:	48 83 ec 10          	sub    $0x10,%rsp
    61e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    61e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61f0:	48 89 d6             	mov    %rdx,%rsi
    61f3:	48 89 c7             	mov    %rax,%rdi
    61f6:	e8 a8 01 00 00       	call   63a3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    61fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ff:	c9                   	leave
    6200:	c3                   	ret

0000000000006201 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6201:	55                   	push   %rbp
    6202:	48 89 e5             	mov    %rsp,%rbp
    6205:	53                   	push   %rbx
    6206:	48 83 ec 28          	sub    $0x28,%rsp
    620a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    620e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6212:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6216:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    621a:	48 89 d6             	mov    %rdx,%rsi
    621d:	48 89 c7             	mov    %rax,%rdi
    6220:	e8 8b df ff ff       	call   41b0 <_ZNSaIcEC1ERKS_@plt>
    6225:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6229:	48 89 c7             	mov    %rax,%rdi
    622c:	e8 9b 01 00 00       	call   63cc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    6231:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6235:	0f 92 c3             	setb   %bl
    6238:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    623c:	48 89 c7             	mov    %rax,%rdi
    623f:	e8 dc e1 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    6244:	84 db                	test   %bl,%bl
    6246:	74 0f                	je     6257 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6248:	48 8d 05 39 11 01 00 	lea    0x11139(%rip),%rax        # 17388 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x140>
    624f:	48 89 c7             	mov    %rax,%rdi
    6252:	e8 29 df ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6257:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    625b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    625f:	c9                   	leave
    6260:	c3                   	ret
    6261:	90                   	nop

0000000000006262 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    6262:	55                   	push   %rbp
    6263:	48 89 e5             	mov    %rsp,%rbp
    6266:	48 83 ec 10          	sub    $0x10,%rsp
    626a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    626e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6272:	48 89 c7             	mov    %rax,%rdi
    6275:	e8 e6 dd ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    627a:	90                   	nop
    627b:	c9                   	leave
    627c:	c3                   	ret
    627d:	90                   	nop

000000000000627e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    627e:	55                   	push   %rbp
    627f:	48 89 e5             	mov    %rsp,%rbp
    6282:	53                   	push   %rbx
    6283:	48 83 ec 28          	sub    $0x28,%rsp
    6287:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    628b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    628f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6297:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    629b:	48 89 d6             	mov    %rdx,%rsi
    629e:	48 89 c7             	mov    %rax,%rdi
    62a1:	e8 68 01 00 00       	call   640e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    62a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    62aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62ae:	48 89 d6             	mov    %rdx,%rsi
    62b1:	48 89 c7             	mov    %rax,%rdi
    62b4:	e8 87 01 00 00       	call   6440 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    62b9:	eb 1a                	jmp    62d5 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    62bb:	48 89 c3             	mov    %rax,%rbx
    62be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62c2:	48 89 c7             	mov    %rax,%rdi
    62c5:	e8 98 ff ff ff       	call   6262 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    62ca:	48 89 d8             	mov    %rbx,%rax
    62cd:	48 89 c7             	mov    %rax,%rdi
    62d0:	e8 1b e4 ff ff       	call   46f0 <_Unwind_Resume@plt>
    62d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    62d9:	c9                   	leave
    62da:	c3                   	ret
    62db:	90                   	nop

00000000000062dc <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    62dc:	55                   	push   %rbp
    62dd:	48 89 e5             	mov    %rsp,%rbp
    62e0:	48 83 ec 10          	sub    $0x10,%rsp
    62e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    62e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ec:	48 8b 50 10          	mov    0x10(%rax),%rdx
    62f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f4:	48 8b 00             	mov    (%rax),%rax
    62f7:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    62fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62fe:	48 8b 08             	mov    (%rax),%rcx
    6301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6305:	48 89 ce             	mov    %rcx,%rsi
    6308:	48 89 c7             	mov    %rax,%rdi
    630b:	e8 82 01 00 00       	call   6492 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    6310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6314:	48 89 c7             	mov    %rax,%rdi
    6317:	e8 46 ff ff ff       	call   6262 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    631c:	90                   	nop
    631d:	c9                   	leave
    631e:	c3                   	ret
    631f:	90                   	nop

0000000000006320 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6320:	55                   	push   %rbp
    6321:	48 89 e5             	mov    %rsp,%rbp
    6324:	48 83 ec 10          	sub    $0x10,%rsp
    6328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    632c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6334:	48 89 c7             	mov    %rax,%rdi
    6337:	e8 24 00 00 00       	call   6360 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    633c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    633f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6343:	48 8b 00             	mov    (%rax),%rax
    6346:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    634a:	48 89 ce             	mov    %rcx,%rsi
    634d:	48 89 c7             	mov    %rax,%rdi
    6350:	e8 72 01 00 00       	call   64c7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6355:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6359:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    635d:	90                   	nop
    635e:	c9                   	leave
    635f:	c3                   	ret

0000000000006360 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6360:	55                   	push   %rbp
    6361:	48 89 e5             	mov    %rsp,%rbp
    6364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636c:	5d                   	pop    %rbp
    636d:	c3                   	ret

000000000000636e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    636e:	55                   	push   %rbp
    636f:	48 89 e5             	mov    %rsp,%rbp
    6372:	48 83 ec 20          	sub    $0x20,%rsp
    6376:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    637a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    637e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6382:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    638a:	48 89 d6             	mov    %rdx,%rsi
    638d:	48 89 c7             	mov    %rax,%rdi
    6390:	e8 5b 01 00 00       	call   64f0 <_ZSt8_DestroyIPcEvT_S1_>
    }
    6395:	90                   	nop
    6396:	c9                   	leave
    6397:	c3                   	ret

0000000000006398 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    6398:	55                   	push   %rbp
    6399:	48 89 e5             	mov    %rsp,%rbp
    639c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    63a0:	90                   	nop
    63a1:	5d                   	pop    %rbp
    63a2:	c3                   	ret

00000000000063a3 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    63a3:	55                   	push   %rbp
    63a4:	48 89 e5             	mov    %rsp,%rbp
    63a7:	48 83 ec 10          	sub    $0x10,%rsp
    63ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    63b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63bb:	48 89 d6             	mov    %rdx,%rsi
    63be:	48 89 c7             	mov    %rax,%rdi
    63c1:	e8 ea dd ff ff       	call   41b0 <_ZNSaIcEC1ERKS_@plt>
    63c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ca:	c9                   	leave
    63cb:	c3                   	ret

00000000000063cc <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    63cc:	55                   	push   %rbp
    63cd:	48 89 e5             	mov    %rsp,%rbp
    63d0:	48 83 ec 20          	sub    $0x20,%rsp
    63d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    63d8:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    63df:	ff ff 7f 
    63e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    63e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63ea:	48 89 c7             	mov    %rax,%rdi
    63ed:	e8 52 01 00 00       	call   6544 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    63f2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    63f6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    63fa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    63fe:	48 89 d6             	mov    %rdx,%rsi
    6401:	48 89 c7             	mov    %rax,%rdi
    6404:	e8 24 ef ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    6409:	48 8b 00             	mov    (%rax),%rax
      }
    640c:	c9                   	leave
    640d:	c3                   	ret

000000000000640e <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    640e:	55                   	push   %rbp
    640f:	48 89 e5             	mov    %rsp,%rbp
    6412:	48 83 ec 10          	sub    $0x10,%rsp
    6416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    641a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    641e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6426:	48 89 d6             	mov    %rdx,%rsi
    6429:	48 89 c7             	mov    %rax,%rdi
    642c:	e8 8f e1 ff ff       	call   45c0 <_ZNSaIcEC2ERKS_@plt>
    6431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6435:	48 89 c7             	mov    %rax,%rdi
    6438:	e8 21 01 00 00       	call   655e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    643d:	90                   	nop
    643e:	c9                   	leave
    643f:	c3                   	ret

0000000000006440 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6440:	55                   	push   %rbp
    6441:	48 89 e5             	mov    %rsp,%rbp
    6444:	48 83 ec 10          	sub    $0x10,%rsp
    6448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    644c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6450:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6458:	48 89 d6             	mov    %rdx,%rsi
    645b:	48 89 c7             	mov    %rax,%rdi
    645e:	e8 29 01 00 00       	call   658c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    6463:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6467:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    646a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646e:	48 8b 10             	mov    (%rax),%rdx
    6471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6475:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6479:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    647d:	48 8b 10             	mov    (%rax),%rdx
    6480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6484:	48 01 c2             	add    %rax,%rdx
    6487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    648b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    648f:	90                   	nop
    6490:	c9                   	leave
    6491:	c3                   	ret

0000000000006492 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    6492:	55                   	push   %rbp
    6493:	48 89 e5             	mov    %rsp,%rbp
    6496:	48 83 ec 20          	sub    $0x20,%rsp
    649a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    649e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    64a6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    64ab:	74 17                	je     64c4 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    64ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    64b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    64b9:	48 89 ce             	mov    %rcx,%rsi
    64bc:	48 89 c7             	mov    %rax,%rdi
    64bf:	e8 52 00 00 00       	call   6516 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    64c4:	90                   	nop
    64c5:	c9                   	leave
    64c6:	c3                   	ret

00000000000064c7 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    64c7:	55                   	push   %rbp
    64c8:	48 89 e5             	mov    %rsp,%rbp
    64cb:	48 83 ec 20          	sub    $0x20,%rsp
    64cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    64d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    64db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e3:	48 89 d6             	mov    %rdx,%rsi
    64e6:	48 89 c7             	mov    %rax,%rdi
    64e9:	e8 d1 00 00 00       	call   65bf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    64ee:	c9                   	leave
    64ef:	c3                   	ret

00000000000064f0 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    64f0:	55                   	push   %rbp
    64f1:	48 89 e5             	mov    %rsp,%rbp
    64f4:	48 83 ec 10          	sub    $0x10,%rsp
    64f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6500:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6508:	48 89 d6             	mov    %rdx,%rsi
    650b:	48 89 c7             	mov    %rax,%rdi
    650e:	e8 d5 00 00 00       	call   65e8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    6513:	90                   	nop
    6514:	c9                   	leave
    6515:	c3                   	ret

0000000000006516 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6516:	55                   	push   %rbp
    6517:	48 89 e5             	mov    %rsp,%rbp
    651a:	48 83 ec 20          	sub    $0x20,%rsp
    651e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6526:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    652a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    652e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6536:	48 89 ce             	mov    %rcx,%rsi
    6539:	48 89 c7             	mov    %rax,%rdi
    653c:	e8 c5 00 00 00       	call   6606 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    6541:	90                   	nop
    6542:	c9                   	leave
    6543:	c3                   	ret

0000000000006544 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6544:	55                   	push   %rbp
    6545:	48 89 e5             	mov    %rsp,%rbp
    6548:	48 83 ec 10          	sub    $0x10,%rsp
    654c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6554:	48 89 c7             	mov    %rax,%rdi
    6557:	e8 d4 00 00 00       	call   6630 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    655c:	c9                   	leave
    655d:	c3                   	ret

000000000000655e <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    655e:	55                   	push   %rbp
    655f:	48 89 e5             	mov    %rsp,%rbp
    6562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6575:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    657c:	00 
    657d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6581:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6588:	00 
	{ }
    6589:	90                   	nop
    658a:	5d                   	pop    %rbp
    658b:	c3                   	ret

000000000000658c <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    658c:	55                   	push   %rbp
    658d:	48 89 e5             	mov    %rsp,%rbp
    6590:	48 83 ec 10          	sub    $0x10,%rsp
    6594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6598:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    659c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    65a1:	74 15                	je     65b8 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    65a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    65ab:	48 89 d6             	mov    %rdx,%rsi
    65ae:	48 89 c7             	mov    %rax,%rdi
    65b1:	e8 94 00 00 00       	call   664a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    65b6:	eb 05                	jmp    65bd <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    65b8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    65bd:	c9                   	leave
    65be:	c3                   	ret

00000000000065bf <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    65bf:	55                   	push   %rbp
    65c0:	48 89 e5             	mov    %rsp,%rbp
    65c3:	48 83 ec 20          	sub    $0x20,%rsp
    65c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    65cf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    65d3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    65d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65db:	48 89 d6             	mov    %rdx,%rsi
    65de:	48 89 c7             	mov    %rax,%rdi
    65e1:	e8 8e 00 00 00       	call   6674 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    65e6:	c9                   	leave
    65e7:	c3                   	ret

00000000000065e8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    65e8:	55                   	push   %rbp
    65e9:	48 89 e5             	mov    %rsp,%rbp
    65ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65f4:	90                   	nop
    65f5:	5d                   	pop    %rbp
    65f6:	c3                   	ret

00000000000065f7 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    65f7:	55                   	push   %rbp
    65f8:	48 89 e5             	mov    %rsp,%rbp
    65fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    65ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6603:	5d                   	pop    %rbp
    6604:	c3                   	ret
    6605:	90                   	nop

0000000000006606 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6606:	55                   	push   %rbp
    6607:	48 89 e5             	mov    %rsp,%rbp
    660a:	48 83 ec 20          	sub    $0x20,%rsp
    660e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6616:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    661a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    661e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6622:	48 89 d6             	mov    %rdx,%rsi
    6625:	48 89 c7             	mov    %rax,%rdi
    6628:	e8 63 dd ff ff       	call   4390 <_ZdlPvm@plt>
      }
    662d:	c9                   	leave
    662e:	c3                   	ret
    662f:	90                   	nop

0000000000006630 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6630:	55                   	push   %rbp
    6631:	48 89 e5             	mov    %rsp,%rbp
    6634:	48 83 ec 10          	sub    $0x10,%rsp
    6638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    663c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6640:	48 89 c7             	mov    %rax,%rdi
    6643:	e8 8a 00 00 00       	call   66d2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6648:	c9                   	leave
    6649:	c3                   	ret

000000000000664a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    664a:	55                   	push   %rbp
    664b:	48 89 e5             	mov    %rsp,%rbp
    664e:	48 83 ec 10          	sub    $0x10,%rsp
    6652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6656:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    665a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    665e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6662:	ba 00 00 00 00       	mov    $0x0,%edx
    6667:	48 89 ce             	mov    %rcx,%rsi
    666a:	48 89 c7             	mov    %rax,%rdi
    666d:	e8 74 00 00 00       	call   66e6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    6672:	c9                   	leave
    6673:	c3                   	ret

0000000000006674 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    6674:	55                   	push   %rbp
    6675:	48 89 e5             	mov    %rsp,%rbp
    6678:	48 83 ec 20          	sub    $0x20,%rsp
    667c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6680:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    6684:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6689:	74 40                	je     66cb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    668b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    668f:	48 89 c7             	mov    %rax,%rdi
    6692:	e8 60 ff ff ff       	call   65f7 <_ZSt11__addressofIcEPT_RS0_>
    6697:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    669b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    669f:	48 89 c7             	mov    %rax,%rdi
    66a2:	e8 87 00 00 00       	call   672e <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    66a7:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    66ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66b0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    66b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    66b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66bc:	48 89 ce             	mov    %rcx,%rsi
    66bf:	48 89 c7             	mov    %rax,%rdi
    66c2:	e8 8a 00 00 00       	call   6751 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    66c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    66cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    66cf:	c9                   	leave
    66d0:	c3                   	ret
    66d1:	90                   	nop

00000000000066d2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    66d2:	55                   	push   %rbp
    66d3:	48 89 e5             	mov    %rsp,%rbp
    66d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    66da:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    66e1:	ff ff 7f 
      }
    66e4:	5d                   	pop    %rbp
    66e5:	c3                   	ret

00000000000066e6 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    66e6:	55                   	push   %rbp
    66e7:	48 89 e5             	mov    %rsp,%rbp
    66ea:	48 83 ec 20          	sub    $0x20,%rsp
    66ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    66fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66fe:	48 89 c7             	mov    %rax,%rdi
    6701:	e8 cc ff ff ff       	call   66d2 <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6706:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    670a:	0f 92 c0             	setb   %al
    670d:	0f b6 c0             	movzbl %al,%eax
    6710:	48 85 c0             	test   %rax,%rax
    6713:	0f 95 c0             	setne  %al
    6716:	84 c0                	test   %al,%al
    6718:	74 05                	je     671f <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    671a:	e8 c1 d9 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    671f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6723:	48 89 c7             	mov    %rax,%rdi
    6726:	e8 55 dc ff ff       	call   4380 <_Znwm@plt>
    672b:	90                   	nop
      }
    672c:	c9                   	leave
    672d:	c3                   	ret

000000000000672e <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    672e:	55                   	push   %rbp
    672f:	48 89 e5             	mov    %rsp,%rbp
    6732:	48 83 ec 10          	sub    $0x10,%rsp
    6736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    673a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    673e:	48 89 c6             	mov    %rax,%rsi
    6741:	bf 01 00 00 00       	mov    $0x1,%edi
    6746:	e8 15 e7 ff ff       	call   4e60 <_ZnwmPv>
    674b:	c6 00 00             	movb   $0x0,(%rax)
    }
    674e:	90                   	nop
    674f:	c9                   	leave
    6750:	c3                   	ret

0000000000006751 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6751:	55                   	push   %rbp
    6752:	48 89 e5             	mov    %rsp,%rbp
    6755:	48 83 ec 20          	sub    $0x20,%rsp
    6759:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    675d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6761:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    6765:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6769:	48 89 c7             	mov    %rax,%rdi
    676c:	e8 27 fc ff ff       	call   6398 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6771:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6775:	48 89 c7             	mov    %rax,%rdi
    6778:	e8 f5 e6 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    677d:	48 89 c1             	mov    %rax,%rcx
    6780:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6784:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6788:	48 89 ce             	mov    %rcx,%rsi
    678b:	48 89 c7             	mov    %rax,%rdi
    678e:	e8 02 00 00 00       	call   6795 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    6793:	c9                   	leave
    6794:	c3                   	ret

0000000000006795 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6795:	55                   	push   %rbp
    6796:	48 89 e5             	mov    %rsp,%rbp
    6799:	48 83 ec 20          	sub    $0x20,%rsp
    679d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    67a9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    67ae:	75 06                	jne    67b6 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    67b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b4:	eb 2a                	jmp    67e0 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    67b6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67be:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    67c2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ca:	48 89 ce             	mov    %rcx,%rsi
    67cd:	48 89 c7             	mov    %rax,%rdi
    67d0:	e8 0d 00 00 00       	call   67e2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    67d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67dd:	48 01 d0             	add    %rdx,%rax
    }
    67e0:	c9                   	leave
    67e1:	c3                   	ret

00000000000067e2 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    67e2:	55                   	push   %rbp
    67e3:	48 89 e5             	mov    %rsp,%rbp
    67e6:	48 83 ec 20          	sub    $0x20,%rsp
    67ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    67f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    67fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6802:	48 89 ce             	mov    %rcx,%rsi
    6805:	48 89 c7             	mov    %rax,%rdi
    6808:	e8 03 00 00 00       	call   6810 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    680d:	90                   	nop
    680e:	c9                   	leave
    680f:	c3                   	ret

0000000000006810 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    6810:	55                   	push   %rbp
    6811:	48 89 e5             	mov    %rsp,%rbp
    6814:	48 83 ec 30          	sub    $0x30,%rsp
    6818:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    681c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6820:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    6824:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6828:	0f b6 00             	movzbl (%rax),%eax
    682b:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    682e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6832:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6836:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    683a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    683f:	74 19                	je     685a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6841:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    6845:	0f b6 c8             	movzbl %al,%ecx
    6848:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    684c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6850:	89 ce                	mov    %ecx,%esi
    6852:	48 89 c7             	mov    %rax,%rdi
    6855:	e8 46 d9 ff ff       	call   41a0 <memset@plt>
    }
    685a:	90                   	nop
    685b:	c9                   	leave
    685c:	c3                   	ret

000000000000685d <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    685d:	55                   	push   %rbp
    685e:	48 89 e5             	mov    %rsp,%rbp
    6861:	48 83 ec 10          	sub    $0x10,%rsp
    6865:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    686d:	48 89 c7             	mov    %rax,%rdi
    6870:	e8 5b d8 ff ff       	call   40d0 <glfwDestroyWindow@plt>
    6875:	90                   	nop
    6876:	c9                   	leave
    6877:	c3                   	ret

0000000000006878 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    6878:	55                   	push   %rbp
    6879:	48 89 e5             	mov    %rsp,%rbp
    687c:	48 83 ec 10          	sub    $0x10,%rsp
    6880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6884:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    6888:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    688c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6890:	48 89 d6             	mov    %rdx,%rsi
    6893:	48 89 c7             	mov    %rax,%rdi
    6896:	e8 05 db ff ff       	call   43a0 <vkDestroyInstance@plt>
}
    689b:	90                   	nop
    689c:	c9                   	leave
    689d:	c3                   	ret

000000000000689e <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    689e:	55                   	push   %rbp
    689f:	48 89 e5             	mov    %rsp,%rbp
    68a2:	48 83 ec 10          	sub    $0x10,%rsp
    68a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    68ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68b6:	48 89 d6             	mov    %rdx,%rsi
    68b9:	48 89 c7             	mov    %rax,%rdi
    68bc:	e8 df d9 ff ff       	call   42a0 <vkDestroyDevice@plt>
}
    68c1:	90                   	nop
    68c2:	c9                   	leave
    68c3:	c3                   	ret

00000000000068c4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    68c4:	55                   	push   %rbp
    68c5:	48 89 e5             	mov    %rsp,%rbp
    68c8:	48 83 ec 20          	sub    $0x20,%rsp
    68cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    68d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68e4:	48 89 ce             	mov    %rcx,%rsi
    68e7:	48 89 c7             	mov    %rax,%rdi
    68ea:	e8 f1 dd ff ff       	call   46e0 <vkDestroySurfaceKHR@plt>
}
    68ef:	90                   	nop
    68f0:	c9                   	leave
    68f1:	c3                   	ret

00000000000068f2 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    68f2:	55                   	push   %rbp
    68f3:	48 89 e5             	mov    %rsp,%rbp
    68f6:	48 83 ec 20          	sub    $0x20,%rsp
    68fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6902:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    6906:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    690a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    690e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6912:	48 89 ce             	mov    %rcx,%rsi
    6915:	48 89 c7             	mov    %rax,%rdi
    6918:	e8 a3 d7 ff ff       	call   40c0 <vkDestroySwapchainKHR@plt>
}
    691d:	90                   	nop
    691e:	c9                   	leave
    691f:	c3                   	ret

0000000000006920 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6920:	55                   	push   %rbp
    6921:	48 89 e5             	mov    %rsp,%rbp
    6924:	48 83 ec 20          	sub    $0x20,%rsp
    6928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    692c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6930:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    6934:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6938:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    693c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6940:	48 89 ce             	mov    %rcx,%rsi
    6943:	48 89 c7             	mov    %rax,%rdi
    6946:	e8 c5 dd ff ff       	call   4710 <vkDestroyImageView@plt>
}
    694b:	90                   	nop
    694c:	c9                   	leave
    694d:	c3                   	ret

000000000000694e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    694e:	55                   	push   %rbp
    694f:	48 89 e5             	mov    %rsp,%rbp
    6952:	48 83 ec 20          	sub    $0x20,%rsp
    6956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    695a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    695e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    6962:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6966:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    696a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696e:	48 89 ce             	mov    %rcx,%rsi
    6971:	48 89 c7             	mov    %rax,%rdi
    6974:	e8 37 db ff ff       	call   44b0 <vkDestroyShaderModule@plt>
}
    6979:	90                   	nop
    697a:	c9                   	leave
    697b:	c3                   	ret

000000000000697c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    697c:	55                   	push   %rbp
    697d:	48 89 e5             	mov    %rsp,%rbp
    6980:	48 83 ec 20          	sub    $0x20,%rsp
    6984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6988:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    698c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    6990:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6994:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    699c:	48 89 ce             	mov    %rcx,%rsi
    699f:	48 89 c7             	mov    %rax,%rdi
    69a2:	e8 39 db ff ff       	call   44e0 <vkDestroyPipelineLayout@plt>
}
    69a7:	90                   	nop
    69a8:	c9                   	leave
    69a9:	c3                   	ret

00000000000069aa <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    69aa:	55                   	push   %rbp
    69ab:	48 89 e5             	mov    %rsp,%rbp
    69ae:	48 83 ec 20          	sub    $0x20,%rsp
    69b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    69be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69c2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ca:	48 89 ce             	mov    %rcx,%rsi
    69cd:	48 89 c7             	mov    %rax,%rdi
    69d0:	e8 8b d9 ff ff       	call   4360 <vkDestroyRenderPass@plt>
}
    69d5:	90                   	nop
    69d6:	c9                   	leave
    69d7:	c3                   	ret

00000000000069d8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    69d8:	55                   	push   %rbp
    69d9:	48 89 e5             	mov    %rsp,%rbp
    69dc:	48 83 ec 20          	sub    $0x20,%rsp
    69e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    69ec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69f8:	48 89 ce             	mov    %rcx,%rsi
    69fb:	48 89 c7             	mov    %rax,%rdi
    69fe:	e8 2d da ff ff       	call   4430 <vkDestroyPipeline@plt>
}
    6a03:	90                   	nop
    6a04:	c9                   	leave
    6a05:	c3                   	ret

0000000000006a06 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    6a06:	55                   	push   %rbp
    6a07:	48 89 e5             	mov    %rsp,%rbp
    6a0a:	48 83 ec 40          	sub    $0x40,%rsp
    6a0e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6a12:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6a16:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6a1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6a1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a26:	48 89 c7             	mov    %rax,%rdi
    6a29:	e8 c4 00 00 00       	call   6af2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    6a2e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a36:	48 89 c7             	mov    %rax,%rdi
    6a39:	e8 da 00 00 00       	call   6b18 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    6a3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6a42:	eb 36                	jmp    6a7a <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    6a44:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6a48:	48 89 c7             	mov    %rax,%rdi
    6a4b:	e8 4c 01 00 00       	call   6b9c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    6a50:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    6a54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a58:	48 8b 08             	mov    (%rax),%rcx
    6a5b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6a5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a63:	48 89 ce             	mov    %rcx,%rsi
    6a66:	48 89 c7             	mov    %rax,%rdi
    6a69:	e8 c2 d9 ff ff       	call   4430 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    6a6e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6a72:	48 89 c7             	mov    %rax,%rdi
    6a75:	e8 02 01 00 00       	call   6b7c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    6a7a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    6a7e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6a82:	48 89 d6             	mov    %rdx,%rsi
    6a85:	48 89 c7             	mov    %rax,%rdi
    6a88:	e8 b4 00 00 00       	call   6b41 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6a8d:	84 c0                	test   %al,%al
    6a8f:	75 b3                	jne    6a44 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    6a91:	90                   	nop
    6a92:	90                   	nop
    6a93:	c9                   	leave
    6a94:	c3                   	ret

0000000000006a95 <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    6a95:	55                   	push   %rbp
    6a96:	48 89 e5             	mov    %rsp,%rbp
    6a99:	48 83 ec 20          	sub    $0x20,%rsp
    6a9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aa1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6aa5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    6aa9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6aad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ab1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ab5:	48 89 ce             	mov    %rcx,%rsi
    6ab8:	48 89 c7             	mov    %rax,%rdi
    6abb:	e8 c0 db ff ff       	call   4680 <vkDestroyFramebuffer@plt>
}
    6ac0:	90                   	nop
    6ac1:	c9                   	leave
    6ac2:	c3                   	ret

0000000000006ac3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    6ac3:	55                   	push   %rbp
    6ac4:	48 89 e5             	mov    %rsp,%rbp
    6ac7:	48 83 ec 20          	sub    $0x20,%rsp
    6acb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6acf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ad3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    6ad7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6adb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ae3:	48 89 ce             	mov    %rcx,%rsi
    6ae6:	48 89 c7             	mov    %rax,%rdi
    6ae9:	e8 c2 da ff ff       	call   45b0 <vkDestroyCommandPool@plt>
}
    6aee:	90                   	nop
    6aef:	c9                   	leave
    6af0:	c3                   	ret
    6af1:	90                   	nop

0000000000006af2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6af2:	55                   	push   %rbp
    6af3:	48 89 e5             	mov    %rsp,%rbp
    6af6:	48 83 ec 20          	sub    $0x20,%rsp
    6afa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6afe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b02:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6b06:	48 89 d6             	mov    %rdx,%rsi
    6b09:	48 89 c7             	mov    %rax,%rdi
    6b0c:	e8 9d 00 00 00       	call   6bae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6b11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b15:	c9                   	leave
    6b16:	c3                   	ret
    6b17:	90                   	nop

0000000000006b18 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6b18:	55                   	push   %rbp
    6b19:	48 89 e5             	mov    %rsp,%rbp
    6b1c:	48 83 ec 20          	sub    $0x20,%rsp
    6b20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6b24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b28:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6b2c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6b30:	48 89 d6             	mov    %rdx,%rsi
    6b33:	48 89 c7             	mov    %rax,%rdi
    6b36:	e8 73 00 00 00       	call   6bae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b3f:	c9                   	leave
    6b40:	c3                   	ret

0000000000006b41 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6b41:	55                   	push   %rbp
    6b42:	48 89 e5             	mov    %rsp,%rbp
    6b45:	53                   	push   %rbx
    6b46:	48 83 ec 18          	sub    $0x18,%rsp
    6b4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b4e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6b52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b56:	48 89 c7             	mov    %rax,%rdi
    6b59:	e8 6e 00 00 00       	call   6bcc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6b5e:	48 8b 18             	mov    (%rax),%rbx
    6b61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6b65:	48 89 c7             	mov    %rax,%rdi
    6b68:	e8 5f 00 00 00       	call   6bcc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6b6d:	48 8b 00             	mov    (%rax),%rax
    6b70:	48 39 c3             	cmp    %rax,%rbx
    6b73:	0f 95 c0             	setne  %al
    6b76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b7a:	c9                   	leave
    6b7b:	c3                   	ret

0000000000006b7c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6b7c:	55                   	push   %rbp
    6b7d:	48 89 e5             	mov    %rsp,%rbp
    6b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b88:	48 8b 00             	mov    (%rax),%rax
    6b8b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b93:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6b9a:	5d                   	pop    %rbp
    6b9b:	c3                   	ret

0000000000006b9c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6b9c:	55                   	push   %rbp
    6b9d:	48 89 e5             	mov    %rsp,%rbp
    6ba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6ba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ba8:	48 8b 00             	mov    (%rax),%rax
    6bab:	5d                   	pop    %rbp
    6bac:	c3                   	ret
    6bad:	90                   	nop

0000000000006bae <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6bae:	55                   	push   %rbp
    6baf:	48 89 e5             	mov    %rsp,%rbp
    6bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6bba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6bbe:	48 8b 10             	mov    (%rax),%rdx
    6bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bc5:	48 89 10             	mov    %rdx,(%rax)
    6bc8:	90                   	nop
    6bc9:	5d                   	pop    %rbp
    6bca:	c3                   	ret
    6bcb:	90                   	nop

0000000000006bcc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6bcc:	55                   	push   %rbp
    6bcd:	48 89 e5             	mov    %rsp,%rbp
    6bd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bd8:	5d                   	pop    %rbp
    6bd9:	c3                   	ret

0000000000006bda <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6bda:	55                   	push   %rbp
    6bdb:	48 89 e5             	mov    %rsp,%rbp
    6bde:	53                   	push   %rbx
    6bdf:	48 83 ec 28          	sub    $0x28,%rsp
    6be3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6be7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6beb:	be 00 00 00 00       	mov    $0x0,%esi
    6bf0:	48 89 c7             	mov    %rax,%rdi
    6bf3:	e8 68 d8 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6bf8:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6bfb:	89 c3                	mov    %eax,%ebx
    6bfd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c01:	48 89 c7             	mov    %rax,%rdi
    6c04:	e8 47 11 00 00       	call   7d50 <_ZNSaI17VkLayerPropertiesEC1Ev>
    6c09:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c11:	48 89 de             	mov    %rbx,%rsi
    6c14:	48 89 c7             	mov    %rax,%rdi
    6c17:	e8 6c 11 00 00       	call   7d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6c1c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c20:	48 89 c7             	mov    %rax,%rdi
    6c23:	e8 44 11 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6c28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c2c:	48 89 c7             	mov    %rax,%rdi
    6c2f:	e8 0e 12 00 00       	call   7e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6c34:	48 89 c2             	mov    %rax,%rdx
    6c37:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6c3b:	48 89 d6             	mov    %rdx,%rsi
    6c3e:	48 89 c7             	mov    %rax,%rdi
    6c41:	e8 1a d8 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6c46:	eb 34                	jmp    6c7c <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6c48:	48 89 c3             	mov    %rax,%rbx
    6c4b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c4f:	48 89 c7             	mov    %rax,%rdi
    6c52:	e8 15 11 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    6c57:	48 89 d8             	mov    %rbx,%rax
    6c5a:	48 89 c7             	mov    %rax,%rdi
    6c5d:	e8 8e da ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    6c62:	48 89 c3             	mov    %rax,%rbx
    6c65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c69:	48 89 c7             	mov    %rax,%rdi
    6c6c:	e8 8d 11 00 00       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6c71:	48 89 d8             	mov    %rbx,%rax
    6c74:	48 89 c7             	mov    %rax,%rdi
    6c77:	e8 74 da ff ff       	call   46f0 <_Unwind_Resume@plt>
    6c7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6c84:	c9                   	leave
    6c85:	c3                   	ret

0000000000006c86 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    6c86:	55                   	push   %rbp
    6c87:	48 89 e5             	mov    %rsp,%rbp
    6c8a:	41 54                	push   %r12
    6c8c:	53                   	push   %rbx
    6c8d:	48 83 ec 20          	sub    $0x20,%rsp
    6c91:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6c95:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6c99:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6c9d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6ca1:	ba 00 00 00 00       	mov    $0x0,%edx
    6ca6:	48 89 ce             	mov    %rcx,%rsi
    6ca9:	48 89 c7             	mov    %rax,%rdi
    6cac:	e8 0f d6 ff ff       	call   42c0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    6cb1:	85 c0                	test   %eax,%eax
    6cb3:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6cb6:	84 c0                	test   %al,%al
    6cb8:	74 3b                	je     6cf5 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    6cba:	bf 10 00 00 00       	mov    $0x10,%edi
    6cbf:	e8 ac d4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6cc4:	48 89 c3             	mov    %rax,%rbx
    6cc7:	48 8d 05 a2 12 01 00 	lea    0x112a2(%rip),%rax        # 17f70 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6cce:	48 89 c6             	mov    %rax,%rsi
    6cd1:	48 89 df             	mov    %rbx,%rdi
    6cd4:	e8 27 d4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6cd9:	48 8b 05 c8 f2 01 00 	mov    0x1f2c8(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ce0:	48 89 c2             	mov    %rax,%rdx
    6ce3:	48 8d 05 56 f0 01 00 	lea    0x1f056(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6cea:	48 89 c6             	mov    %rax,%rsi
    6ced:	48 89 df             	mov    %rbx,%rdi
    6cf0:	e8 9b d9 ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6cf5:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6cf8:	89 c3                	mov    %eax,%ebx
    6cfa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6cfe:	48 89 c7             	mov    %rax,%rdi
    6d01:	e8 b8 11 00 00       	call   7ebe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6d06:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6d0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d0e:	48 89 de             	mov    %rbx,%rsi
    6d11:	48 89 c7             	mov    %rax,%rdi
    6d14:	e8 dd 11 00 00       	call   7ef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6d19:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d1d:	48 89 c7             	mov    %rax,%rdi
    6d20:	e8 b5 11 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6d25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d29:	48 89 c7             	mov    %rax,%rdi
    6d2c:	e8 7f 12 00 00       	call   7fb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6d31:	48 89 c2             	mov    %rax,%rdx
    6d34:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6d38:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d3c:	48 89 ce             	mov    %rcx,%rsi
    6d3f:	48 89 c7             	mov    %rax,%rdi
    6d42:	e8 79 d5 ff ff       	call   42c0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    6d47:	85 c0                	test   %eax,%eax
    6d49:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6d4c:	84 c0                	test   %al,%al
    6d4e:	0f 84 95 00 00 00    	je     6de9 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    6d54:	bf 10 00 00 00       	mov    $0x10,%edi
    6d59:	e8 12 d4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6d5e:	48 89 c3             	mov    %rax,%rbx
    6d61:	48 8d 05 08 12 01 00 	lea    0x11208(%rip),%rax        # 17f70 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6d68:	48 89 c6             	mov    %rax,%rsi
    6d6b:	48 89 df             	mov    %rbx,%rdi
    6d6e:	e8 8d d3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6d73:	48 8b 05 2e f2 01 00 	mov    0x1f22e(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6d7a:	48 89 c2             	mov    %rax,%rdx
    6d7d:	48 8d 05 bc ef 01 00 	lea    0x1efbc(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6d84:	48 89 c6             	mov    %rax,%rsi
    6d87:	48 89 df             	mov    %rbx,%rdi
    6d8a:	e8 01 d9 ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6d8f:	49 89 c4             	mov    %rax,%r12
    6d92:	48 89 df             	mov    %rbx,%rdi
    6d95:	e8 a6 d4 ff ff       	call   4240 <__cxa_free_exception@plt>
    6d9a:	4c 89 e0             	mov    %r12,%rax
    6d9d:	48 89 c7             	mov    %rax,%rdi
    6da0:	e8 4b d9 ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6da5:	48 89 c3             	mov    %rax,%rbx
    6da8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6dac:	48 89 c7             	mov    %rax,%rdi
    6daf:	e8 26 11 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    6db4:	48 89 d8             	mov    %rbx,%rax
    6db7:	48 89 c7             	mov    %rax,%rdi
    6dba:	e8 31 d9 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6dbf:	49 89 c4             	mov    %rax,%r12
    6dc2:	48 89 df             	mov    %rbx,%rdi
    6dc5:	e8 76 d4 ff ff       	call   4240 <__cxa_free_exception@plt>
    6dca:	4c 89 e3             	mov    %r12,%rbx
    6dcd:	eb 03                	jmp    6dd2 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    6dcf:	48 89 c3             	mov    %rax,%rbx
    6dd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6dd6:	48 89 c7             	mov    %rax,%rdi
    6dd9:	e8 8e 11 00 00       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6dde:	48 89 d8             	mov    %rbx,%rax
    6de1:	48 89 c7             	mov    %rax,%rdi
    6de4:	e8 07 d9 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return instanceExtensions;
    6de9:	90                   	nop
}
    6dea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6dee:	48 83 c4 20          	add    $0x20,%rsp
    6df2:	5b                   	pop    %rbx
    6df3:	41 5c                	pop    %r12
    6df5:	5d                   	pop    %rbp
    6df6:	c3                   	ret

0000000000006df7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    6df7:	55                   	push   %rbp
    6df8:	48 89 e5             	mov    %rsp,%rbp
    6dfb:	41 54                	push   %r12
    6dfd:	53                   	push   %rbx
    6dfe:	48 83 ec 30          	sub    $0x30,%rsp
    6e02:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6e06:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6e0a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    6e0e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6e12:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6e16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6e1a:	b9 00 00 00 00       	mov    $0x0,%ecx
    6e1f:	48 89 c7             	mov    %rax,%rdi
    6e22:	e8 69 d7 ff ff       	call   4590 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    6e27:	85 c0                	test   %eax,%eax
    6e29:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6e2c:	84 c0                	test   %al,%al
    6e2e:	74 3b                	je     6e6b <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    6e30:	bf 10 00 00 00       	mov    $0x10,%edi
    6e35:	e8 36 d3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6e3a:	48 89 c3             	mov    %rax,%rbx
    6e3d:	48 8d 05 54 11 01 00 	lea    0x11154(%rip),%rax        # 17f98 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6e44:	48 89 c6             	mov    %rax,%rsi
    6e47:	48 89 df             	mov    %rbx,%rdi
    6e4a:	e8 b1 d2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6e4f:	48 8b 05 52 f1 01 00 	mov    0x1f152(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6e56:	48 89 c2             	mov    %rax,%rdx
    6e59:	48 8d 05 e0 ee 01 00 	lea    0x1eee0(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6e60:	48 89 c6             	mov    %rax,%rsi
    6e63:	48 89 df             	mov    %rbx,%rdi
    6e66:	e8 25 d8 ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6e6b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6e6e:	89 c3                	mov    %eax,%ebx
    6e70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e74:	48 89 c7             	mov    %rax,%rdi
    6e77:	e8 42 10 00 00       	call   7ebe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6e7c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6e80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e84:	48 89 de             	mov    %rbx,%rsi
    6e87:	48 89 c7             	mov    %rax,%rdi
    6e8a:	e8 67 10 00 00       	call   7ef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6e8f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e93:	48 89 c7             	mov    %rax,%rdi
    6e96:	e8 3f 10 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    6e9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e9f:	48 89 c7             	mov    %rax,%rdi
    6ea2:	e8 09 11 00 00       	call   7fb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6ea7:	48 89 c1             	mov    %rax,%rcx
    6eaa:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6eae:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6eb2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6eb6:	48 89 c7             	mov    %rax,%rdi
    6eb9:	e8 d2 d6 ff ff       	call   4590 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    6ebe:	85 c0                	test   %eax,%eax
    6ec0:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6ec3:	84 c0                	test   %al,%al
    6ec5:	0f 84 95 00 00 00    	je     6f60 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    6ecb:	bf 10 00 00 00       	mov    $0x10,%edi
    6ed0:	e8 9b d2 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6ed5:	48 89 c3             	mov    %rax,%rbx
    6ed8:	48 8d 05 b9 10 01 00 	lea    0x110b9(%rip),%rax        # 17f98 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6edf:	48 89 c6             	mov    %rax,%rsi
    6ee2:	48 89 df             	mov    %rbx,%rdi
    6ee5:	e8 16 d2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6eea:	48 8b 05 b7 f0 01 00 	mov    0x1f0b7(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ef1:	48 89 c2             	mov    %rax,%rdx
    6ef4:	48 8d 05 45 ee 01 00 	lea    0x1ee45(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6efb:	48 89 c6             	mov    %rax,%rsi
    6efe:	48 89 df             	mov    %rbx,%rdi
    6f01:	e8 8a d7 ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6f06:	49 89 c4             	mov    %rax,%r12
    6f09:	48 89 df             	mov    %rbx,%rdi
    6f0c:	e8 2f d3 ff ff       	call   4240 <__cxa_free_exception@plt>
    6f11:	4c 89 e0             	mov    %r12,%rax
    6f14:	48 89 c7             	mov    %rax,%rdi
    6f17:	e8 d4 d7 ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6f1c:	48 89 c3             	mov    %rax,%rbx
    6f1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f23:	48 89 c7             	mov    %rax,%rdi
    6f26:	e8 af 0f 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    6f2b:	48 89 d8             	mov    %rbx,%rax
    6f2e:	48 89 c7             	mov    %rax,%rdi
    6f31:	e8 ba d7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6f36:	49 89 c4             	mov    %rax,%r12
    6f39:	48 89 df             	mov    %rbx,%rdi
    6f3c:	e8 ff d2 ff ff       	call   4240 <__cxa_free_exception@plt>
    6f41:	4c 89 e3             	mov    %r12,%rbx
    6f44:	eb 03                	jmp    6f49 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    6f46:	48 89 c3             	mov    %rax,%rbx
    6f49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f4d:	48 89 c7             	mov    %rax,%rdi
    6f50:	e8 17 10 00 00       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6f55:	48 89 d8             	mov    %rbx,%rax
    6f58:	48 89 c7             	mov    %rax,%rdi
    6f5b:	e8 90 d7 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return deviceExtensions;
    6f60:	90                   	nop
}
    6f61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f65:	48 83 c4 30          	add    $0x30,%rsp
    6f69:	5b                   	pop    %rbx
    6f6a:	41 5c                	pop    %r12
    6f6c:	5d                   	pop    %rbp
    6f6d:	c3                   	ret

0000000000006f6e <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    6f6e:	55                   	push   %rbp
    6f6f:	48 89 e5             	mov    %rsp,%rbp
    6f72:	53                   	push   %rbx
    6f73:	48 83 ec 38          	sub    $0x38,%rsp
    6f77:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    6f7b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6f7f:	48 89 c7             	mov    %rax,%rdi
    6f82:	e8 d9 d2 ff ff       	call   4260 <glfwGetRequiredInstanceExtensions@plt>
    6f87:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6f8b:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6f8e:	89 c3                	mov    %eax,%ebx
    6f90:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6f94:	48 89 c7             	mov    %rax,%rdi
    6f97:	e8 90 10 00 00       	call   802c <_ZNSaIPKcEC1Ev>
    6f9c:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    6fa0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6fa4:	48 89 de             	mov    %rbx,%rsi
    6fa7:	48 89 c7             	mov    %rax,%rdi
    6faa:	e8 b5 10 00 00       	call   8064 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    6faf:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6fb3:	48 89 c7             	mov    %rax,%rdi
    6fb6:	e8 8d 10 00 00       	call   8048 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6fbb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    6fc2:	eb 2e                	jmp    6ff2 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    6fc4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6fc7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6fce:	00 
    6fcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6fd3:	48 01 d0             	add    %rdx,%rax
    6fd6:	48 8b 18             	mov    (%rax),%rbx
    6fd9:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6fdc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6fe0:	48 89 d6             	mov    %rdx,%rsi
    6fe3:	48 89 c7             	mov    %rax,%rdi
    6fe6:	e8 ef 10 00 00       	call   80da <_ZNSt6vectorIPKcSaIS1_EEixEm>
    6feb:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6fee:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6ff2:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6ff5:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6ff8:	72 ca                	jb     6fc4 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    6ffa:	eb 1a                	jmp    7016 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6ffc:	48 89 c3             	mov    %rax,%rbx
    6fff:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7003:	48 89 c7             	mov    %rax,%rdi
    7006:	e8 3d 10 00 00       	call   8048 <_ZNSaIPKcED1Ev>
    700b:	48 89 d8             	mov    %rbx,%rax
    700e:	48 89 c7             	mov    %rax,%rdi
    7011:	e8 da d6 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    7016:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    701a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    701e:	c9                   	leave
    701f:	c3                   	ret

0000000000007020 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    7020:	55                   	push   %rbp
    7021:	48 89 e5             	mov    %rsp,%rbp
    7024:	53                   	push   %rbx
    7025:	48 83 ec 28          	sub    $0x28,%rsp
    7029:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    702d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7031:	be 00 00 00 00       	mov    $0x0,%esi
    7036:	48 89 c7             	mov    %rax,%rdi
    7039:	e8 22 d4 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    703e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7041:	89 c3                	mov    %eax,%ebx
    7043:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7047:	48 89 c7             	mov    %rax,%rdi
    704a:	e8 01 0d 00 00       	call   7d50 <_ZNSaI17VkLayerPropertiesEC1Ev>
    704f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7053:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7057:	48 89 de             	mov    %rbx,%rsi
    705a:	48 89 c7             	mov    %rax,%rdi
    705d:	e8 26 0d 00 00       	call   7d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    7062:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7066:	48 89 c7             	mov    %rax,%rdi
    7069:	e8 fe 0c 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    706e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7072:	48 89 c7             	mov    %rax,%rdi
    7075:	e8 c8 0d 00 00       	call   7e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    707a:	48 89 c2             	mov    %rax,%rdx
    707d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7081:	48 89 d6             	mov    %rdx,%rsi
    7084:	48 89 c7             	mov    %rax,%rdi
    7087:	e8 d4 d3 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    708c:	eb 34                	jmp    70c2 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    708e:	48 89 c3             	mov    %rax,%rbx
    7091:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7095:	48 89 c7             	mov    %rax,%rdi
    7098:	e8 cf 0c 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    709d:	48 89 d8             	mov    %rbx,%rax
    70a0:	48 89 c7             	mov    %rax,%rdi
    70a3:	e8 48 d6 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    70a8:	48 89 c3             	mov    %rax,%rbx
    70ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70af:	48 89 c7             	mov    %rax,%rdi
    70b2:	e8 47 0d 00 00       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    70b7:	48 89 d8             	mov    %rbx,%rax
    70ba:	48 89 c7             	mov    %rax,%rdi
    70bd:	e8 2e d6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    70c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    70ca:	c9                   	leave
    70cb:	c3                   	ret

00000000000070cc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    70cc:	55                   	push   %rbp
    70cd:	48 89 e5             	mov    %rsp,%rbp
    70d0:	41 54                	push   %r12
    70d2:	53                   	push   %rbx
    70d3:	48 83 ec 20          	sub    $0x20,%rsp
    70d7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    70db:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    70df:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    70e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    70e7:	ba 00 00 00 00       	mov    $0x0,%edx
    70ec:	48 89 ce             	mov    %rcx,%rsi
    70ef:	48 89 c7             	mov    %rax,%rdi
    70f2:	e8 99 d0 ff ff       	call   4190 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    70f7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    70fa:	85 c0                	test   %eax,%eax
    70fc:	75 3b                	jne    7139 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    70fe:	bf 10 00 00 00       	mov    $0x10,%edi
    7103:	e8 68 d0 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7108:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    710b:	48 8d 05 ae 0e 01 00 	lea    0x10eae(%rip),%rax        # 17fc0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    7112:	48 89 c6             	mov    %rax,%rsi
    7115:	48 89 df             	mov    %rbx,%rdi
    7118:	e8 e3 cf ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    711d:	48 8b 05 84 ee 01 00 	mov    0x1ee84(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7124:	48 89 c2             	mov    %rax,%rdx
    7127:	48 8d 05 12 ec 01 00 	lea    0x1ec12(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    712e:	48 89 c6             	mov    %rax,%rsi
    7131:	48 89 df             	mov    %rbx,%rdi
    7134:	e8 57 d5 ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7139:	8b 45 e8             	mov    -0x18(%rbp),%eax
    713c:	89 c3                	mov    %eax,%ebx
    713e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7142:	48 89 c7             	mov    %rax,%rdi
    7145:	e8 fe 0f 00 00       	call   8148 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    714a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    714e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7152:	48 89 de             	mov    %rbx,%rsi
    7155:	48 89 c7             	mov    %rax,%rdi
    7158:	e8 23 10 00 00       	call   8180 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    715d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7161:	48 89 c7             	mov    %rax,%rdi
    7164:	e8 fb 0f 00 00       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7169:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    716d:	48 89 c7             	mov    %rax,%rdi
    7170:	e8 c5 10 00 00       	call   823a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    7175:	48 89 c2             	mov    %rax,%rdx
    7178:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    717c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7180:	48 89 ce             	mov    %rcx,%rsi
    7183:	48 89 c7             	mov    %rax,%rdi
    7186:	e8 05 d0 ff ff       	call   4190 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    718b:	85 c0                	test   %eax,%eax
    718d:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7190:	84 c0                	test   %al,%al
    7192:	0f 84 95 00 00 00    	je     722d <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    7198:	bf 10 00 00 00       	mov    $0x10,%edi
    719d:	e8 ce cf ff ff       	call   4170 <__cxa_allocate_exception@plt>
    71a2:	48 89 c3             	mov    %rax,%rbx
    71a5:	48 8d 05 4c 0e 01 00 	lea    0x10e4c(%rip),%rax        # 17ff8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    71ac:	48 89 c6             	mov    %rax,%rsi
    71af:	48 89 df             	mov    %rbx,%rdi
    71b2:	e8 49 cf ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    71b7:	48 8b 05 ea ed 01 00 	mov    0x1edea(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    71be:	48 89 c2             	mov    %rax,%rdx
    71c1:	48 8d 05 78 eb 01 00 	lea    0x1eb78(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    71c8:	48 89 c6             	mov    %rax,%rsi
    71cb:	48 89 df             	mov    %rbx,%rdi
    71ce:	e8 bd d4 ff ff       	call   4690 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    71d3:	49 89 c4             	mov    %rax,%r12
    71d6:	48 89 df             	mov    %rbx,%rdi
    71d9:	e8 62 d0 ff ff       	call   4240 <__cxa_free_exception@plt>
    71de:	4c 89 e0             	mov    %r12,%rax
    71e1:	48 89 c7             	mov    %rax,%rdi
    71e4:	e8 07 d5 ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    71e9:	48 89 c3             	mov    %rax,%rbx
    71ec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71f0:	48 89 c7             	mov    %rax,%rdi
    71f3:	e8 6c 0f 00 00       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    71f8:	48 89 d8             	mov    %rbx,%rax
    71fb:	48 89 c7             	mov    %rax,%rdi
    71fe:	e8 ed d4 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    7203:	49 89 c4             	mov    %rax,%r12
    7206:	48 89 df             	mov    %rbx,%rdi
    7209:	e8 32 d0 ff ff       	call   4240 <__cxa_free_exception@plt>
    720e:	4c 89 e3             	mov    %r12,%rbx
    7211:	eb 03                	jmp    7216 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    7213:	48 89 c3             	mov    %rax,%rbx
    7216:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    721a:	48 89 c7             	mov    %rax,%rdi
    721d:	e8 d4 0f 00 00       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7222:	48 89 d8             	mov    %rbx,%rax
    7225:	48 89 c7             	mov    %rax,%rdi
    7228:	e8 c3 d4 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return physicalDevices;
    722d:	90                   	nop
}
    722e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7232:	48 83 c4 20          	add    $0x20,%rsp
    7236:	5b                   	pop    %rbx
    7237:	41 5c                	pop    %r12
    7239:	5d                   	pop    %rbp
    723a:	c3                   	ret

000000000000723b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    723b:	55                   	push   %rbp
    723c:	48 89 e5             	mov    %rsp,%rbp
    723f:	48 83 ec 10          	sub    $0x10,%rsp
    7243:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7247:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    724b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    724f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7253:	48 89 d6             	mov    %rdx,%rsi
    7256:	48 89 c7             	mov    %rax,%rdi
    7259:	e8 b2 ce ff ff       	call   4110 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    725e:	90                   	nop
}
    725f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7263:	c9                   	leave
    7264:	c3                   	ret

0000000000007265 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    7265:	55                   	push   %rbp
    7266:	48 89 e5             	mov    %rsp,%rbp
    7269:	48 83 ec 20          	sub    $0x20,%rsp
    726d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7271:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7275:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    7279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    727d:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    7283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7287:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    728b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    728f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7293:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7297:	48 89 d6             	mov    %rdx,%rsi
    729a:	48 89 c7             	mov    %rax,%rdi
    729d:	e8 8e d0 ff ff       	call   4330 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    72a2:	90                   	nop
}
    72a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72a7:	c9                   	leave
    72a8:	c3                   	ret

00000000000072a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    72a9:	55                   	push   %rbp
    72aa:	48 89 e5             	mov    %rsp,%rbp
    72ad:	53                   	push   %rbx
    72ae:	48 83 ec 28          	sub    $0x28,%rsp
    72b2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    72b6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    72ba:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    72be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    72c2:	ba 00 00 00 00       	mov    $0x0,%edx
    72c7:	48 89 ce             	mov    %rcx,%rsi
    72ca:	48 89 c7             	mov    %rax,%rdi
    72cd:	e8 7e cf ff ff       	call   4250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    72d2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    72d5:	89 c3                	mov    %eax,%ebx
    72d7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    72db:	48 89 c7             	mov    %rax,%rdi
    72de:	e8 c9 0f 00 00       	call   82ac <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    72e3:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    72e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72eb:	48 89 de             	mov    %rbx,%rsi
    72ee:	48 89 c7             	mov    %rax,%rdi
    72f1:	e8 ee 0f 00 00       	call   82e4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    72f6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    72fa:	48 89 c7             	mov    %rax,%rdi
    72fd:	e8 c6 0f 00 00       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    7302:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7306:	48 89 c7             	mov    %rax,%rdi
    7309:	e8 90 10 00 00       	call   839e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    730e:	48 89 c2             	mov    %rax,%rdx
    7311:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7315:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7319:	48 89 ce             	mov    %rcx,%rsi
    731c:	48 89 c7             	mov    %rax,%rdi
    731f:	e8 2c cf ff ff       	call   4250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    7324:	eb 34                	jmp    735a <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    7326:	48 89 c3             	mov    %rax,%rbx
    7329:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    732d:	48 89 c7             	mov    %rax,%rdi
    7330:	e8 93 0f 00 00       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7335:	48 89 d8             	mov    %rbx,%rax
    7338:	48 89 c7             	mov    %rax,%rdi
    733b:	e8 b0 d3 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    7340:	48 89 c3             	mov    %rax,%rbx
    7343:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7347:	48 89 c7             	mov    %rax,%rdi
    734a:	e8 0b 10 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    734f:	48 89 d8             	mov    %rbx,%rax
    7352:	48 89 c7             	mov    %rax,%rdi
    7355:	e8 96 d3 ff ff       	call   46f0 <_Unwind_Resume@plt>
    735a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    735e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7362:	c9                   	leave
    7363:	c3                   	ret

0000000000007364 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7364:	55                   	push   %rbp
    7365:	48 89 e5             	mov    %rsp,%rbp
    7368:	53                   	push   %rbx
    7369:	48 83 ec 68          	sub    $0x68,%rsp
    736d:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    7371:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7375:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7379:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    737d:	48 89 d6             	mov    %rdx,%rsi
    7380:	48 89 c7             	mov    %rax,%rdi
    7383:	e8 21 ff ff ff       	call   72a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    7388:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    738c:	48 89 c7             	mov    %rax,%rdi
    738f:	e8 86 10 00 00       	call   841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7394:	48 89 c3             	mov    %rax,%rbx
    7397:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    739b:	48 89 c7             	mov    %rax,%rdi
    739e:	e8 a5 10 00 00       	call   8448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    73a3:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    73a7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    73ab:	48 89 de             	mov    %rbx,%rsi
    73ae:	48 89 c7             	mov    %rax,%rdi
    73b1:	e8 ca 10 00 00       	call   8480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    73b6:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    73ba:	48 89 c7             	mov    %rax,%rdi
    73bd:	e8 a2 10 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    73c2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    73c9:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    73ca:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    73ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    73d2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73d6:	48 89 c7             	mov    %rax,%rdi
    73d9:	e8 5c 11 00 00       	call   853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    73de:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    73e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73e6:	48 89 c7             	mov    %rax,%rdi
    73e9:	e8 72 11 00 00       	call   8560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    73ee:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    73f2:	eb 4e                	jmp    7442 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    73f4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    73f8:	48 89 c7             	mov    %rax,%rdi
    73fb:	e8 e4 11 00 00       	call   85e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7400:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    7404:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7408:	8b 00                	mov    (%rax),%eax
    740a:	83 e0 01             	and    $0x1,%eax
    740d:	85 c0                	test   %eax,%eax
    740f:	74 25                	je     7436 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    7411:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7415:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7419:	48 89 d6             	mov    %rdx,%rsi
    741c:	48 89 c7             	mov    %rax,%rdi
    741f:	e8 d2 11 00 00       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7424:	48 89 c2             	mov    %rax,%rdx
    7427:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    742b:	48 89 c6             	mov    %rax,%rsi
    742e:	48 89 d7             	mov    %rdx,%rdi
    7431:	e8 ea 11 00 00       	call   8620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7436:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    743a:	48 89 c7             	mov    %rax,%rdi
    743d:	e8 82 11 00 00       	call   85c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7442:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7446:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    744a:	48 89 d6             	mov    %rdx,%rsi
    744d:	48 89 c7             	mov    %rax,%rdi
    7450:	e8 34 11 00 00       	call   8589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7455:	84 c0                	test   %al,%al
    7457:	75 9b                	jne    73f4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    7459:	90                   	nop
}
    745a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    745e:	48 89 c7             	mov    %rax,%rdi
    7461:	e8 f4 0e 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    7466:	eb 26                	jmp    748e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    7468:	48 89 c3             	mov    %rax,%rbx
    746b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    746f:	48 89 c7             	mov    %rax,%rdi
    7472:	e8 ed 0f 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    7477:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    747b:	48 89 c7             	mov    %rax,%rdi
    747e:	e8 d7 0e 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7483:	48 89 d8             	mov    %rbx,%rax
    7486:	48 89 c7             	mov    %rax,%rdi
    7489:	e8 62 d2 ff ff       	call   46f0 <_Unwind_Resume@plt>
    748e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7492:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7496:	c9                   	leave
    7497:	c3                   	ret

0000000000007498 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7498:	55                   	push   %rbp
    7499:	48 89 e5             	mov    %rsp,%rbp
    749c:	53                   	push   %rbx
    749d:	48 83 ec 68          	sub    $0x68,%rsp
    74a1:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    74a5:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    74a9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74ad:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    74b1:	48 89 d6             	mov    %rdx,%rsi
    74b4:	48 89 c7             	mov    %rax,%rdi
    74b7:	e8 ed fd ff ff       	call   72a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    74bc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74c0:	48 89 c7             	mov    %rax,%rdi
    74c3:	e8 52 0f 00 00       	call   841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    74c8:	48 89 c3             	mov    %rax,%rbx
    74cb:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74cf:	48 89 c7             	mov    %rax,%rdi
    74d2:	e8 71 0f 00 00       	call   8448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    74d7:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    74db:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    74df:	48 89 de             	mov    %rbx,%rsi
    74e2:	48 89 c7             	mov    %rax,%rdi
    74e5:	e8 96 0f 00 00       	call   8480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    74ea:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74ee:	48 89 c7             	mov    %rax,%rdi
    74f1:	e8 6e 0f 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    74f6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    74fd:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    74fe:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7502:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7506:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    750a:	48 89 c7             	mov    %rax,%rdi
    750d:	e8 28 10 00 00       	call   853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7512:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7516:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    751a:	48 89 c7             	mov    %rax,%rdi
    751d:	e8 3e 10 00 00       	call   8560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7522:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7526:	eb 53                	jmp    757b <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    7528:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    752c:	48 89 c7             	mov    %rax,%rdi
    752f:	e8 b0 10 00 00       	call   85e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7534:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    7538:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    753c:	8b 00                	mov    (%rax),%eax
    753e:	83 e0 02             	and    $0x2,%eax
    7541:	85 c0                	test   %eax,%eax
    7543:	74 25                	je     756a <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    7545:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7549:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    754d:	48 89 d6             	mov    %rdx,%rsi
    7550:	48 89 c7             	mov    %rax,%rdi
    7553:	e8 9e 10 00 00       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7558:	48 89 c2             	mov    %rax,%rdx
    755b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    755f:	48 89 c6             	mov    %rax,%rsi
    7562:	48 89 d7             	mov    %rdx,%rdi
    7565:	e8 b6 10 00 00       	call   8620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    756a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    756f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7573:	48 89 c7             	mov    %rax,%rdi
    7576:	e8 49 10 00 00       	call   85c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    757b:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    757f:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7583:	48 89 d6             	mov    %rdx,%rsi
    7586:	48 89 c7             	mov    %rax,%rdi
    7589:	e8 fb 0f 00 00       	call   8589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    758e:	84 c0                	test   %al,%al
    7590:	75 96                	jne    7528 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    7592:	90                   	nop
}
    7593:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7597:	48 89 c7             	mov    %rax,%rdi
    759a:	e8 bb 0d 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    759f:	eb 26                	jmp    75c7 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    75a1:	48 89 c3             	mov    %rax,%rbx
    75a4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    75a8:	48 89 c7             	mov    %rax,%rdi
    75ab:	e8 b4 0e 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    75b0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    75b4:	48 89 c7             	mov    %rax,%rdi
    75b7:	e8 9e 0d 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    75bc:	48 89 d8             	mov    %rbx,%rax
    75bf:	48 89 c7             	mov    %rax,%rdi
    75c2:	e8 29 d1 ff ff       	call   46f0 <_Unwind_Resume@plt>
    75c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    75cb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    75cf:	c9                   	leave
    75d0:	c3                   	ret

00000000000075d1 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    75d1:	55                   	push   %rbp
    75d2:	48 89 e5             	mov    %rsp,%rbp
    75d5:	53                   	push   %rbx
    75d6:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    75dd:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    75e1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    75e5:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    75ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    75f0:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    75f4:	48 89 d6             	mov    %rdx,%rsi
    75f7:	48 89 c7             	mov    %rax,%rdi
    75fa:	e8 aa fc ff ff       	call   72a9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    75ff:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7603:	48 89 c7             	mov    %rax,%rdi
    7606:	e8 0f 0e 00 00       	call   841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    760b:	48 89 c3             	mov    %rax,%rbx
    760e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7612:	48 89 c7             	mov    %rax,%rdi
    7615:	e8 2e 0e 00 00       	call   8448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    761a:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    761e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7622:	48 89 de             	mov    %rbx,%rsi
    7625:	48 89 c7             	mov    %rax,%rdi
    7628:	e8 53 0e 00 00       	call   8480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    762d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7631:	48 89 c7             	mov    %rax,%rdi
    7634:	e8 2b 0e 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    7639:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7640:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7644:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7648:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    764c:	48 89 c7             	mov    %rax,%rdi
    764f:	e8 e6 0e 00 00       	call   853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7654:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7658:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    765c:	48 89 c7             	mov    %rax,%rdi
    765f:	e8 fc 0e 00 00       	call   8560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7664:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7668:	eb 6c                	jmp    76d6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    766a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    766e:	48 89 c7             	mov    %rax,%rdi
    7671:	e8 6e 0f 00 00       	call   85e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7676:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    767a:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    7681:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    7685:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    768c:	8b 75 ec             	mov    -0x14(%rbp),%esi
    768f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7693:	48 89 c7             	mov    %rax,%rdi
    7696:	e8 65 cd ff ff       	call   4400 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    769b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    769e:	85 c0                	test   %eax,%eax
    76a0:	74 24                	je     76c6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    76a2:	8b 55 ec             	mov    -0x14(%rbp),%edx
    76a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    76a9:	48 89 d6             	mov    %rdx,%rsi
    76ac:	48 89 c7             	mov    %rax,%rdi
    76af:	e8 42 0f 00 00       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    76b4:	48 89 c2             	mov    %rax,%rdx
    76b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76bb:	48 89 c6             	mov    %rax,%rsi
    76be:	48 89 d7             	mov    %rdx,%rdi
    76c1:	e8 5a 0f 00 00       	call   8620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    76c6:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    76ca:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    76ce:	48 89 c7             	mov    %rax,%rdi
    76d1:	e8 ee 0e 00 00       	call   85c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    76d6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    76da:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    76de:	48 89 d6             	mov    %rdx,%rsi
    76e1:	48 89 c7             	mov    %rax,%rdi
    76e4:	e8 a0 0e 00 00       	call   8589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    76e9:	84 c0                	test   %al,%al
    76eb:	0f 85 79 ff ff ff    	jne    766a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    76f1:	90                   	nop
}
    76f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    76f6:	48 89 c7             	mov    %rax,%rdi
    76f9:	e8 5c 0c 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    76fe:	eb 37                	jmp    7737 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    7700:	48 89 c3             	mov    %rax,%rbx
    7703:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7707:	48 89 c7             	mov    %rax,%rdi
    770a:	e8 55 0d 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    770f:	eb 0f                	jmp    7720 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    7711:	48 89 c3             	mov    %rax,%rbx
    7714:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7718:	48 89 c7             	mov    %rax,%rdi
    771b:	e8 d6 0d 00 00       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7720:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7724:	48 89 c7             	mov    %rax,%rdi
    7727:	e8 2e 0c 00 00       	call   835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    772c:	48 89 d8             	mov    %rbx,%rax
    772f:	48 89 c7             	mov    %rax,%rdi
    7732:	e8 b9 cf ff ff       	call   46f0 <_Unwind_Resume@plt>
    7737:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    773b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    773f:	c9                   	leave
    7740:	c3                   	ret

0000000000007741 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    7741:	55                   	push   %rbp
    7742:	48 89 e5             	mov    %rsp,%rbp
    7745:	41 54                	push   %r12
    7747:	53                   	push   %rbx
    7748:	48 83 ec 20          	sub    $0x20,%rsp
    774c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7750:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7754:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    7758:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    775c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7760:	0f 11 00             	movups %xmm0,(%rax)
    7763:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7767:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    776b:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    7770:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7774:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7778:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    777c:	48 89 ce             	mov    %rcx,%rsi
    777f:	48 89 c7             	mov    %rax,%rdi
    7782:	e8 69 cb ff ff       	call   42f0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    7787:	85 c0                	test   %eax,%eax
    7789:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    778c:	84 c0                	test   %al,%al
    778e:	74 51                	je     77e1 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    7790:	bf 10 00 00 00       	mov    $0x10,%edi
    7795:	e8 d6 c9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    779a:	48 89 c3             	mov    %rax,%rbx
    779d:	48 8d 05 7c 08 01 00 	lea    0x1087c(%rip),%rax        # 18020 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    77a4:	48 89 c6             	mov    %rax,%rsi
    77a7:	48 89 df             	mov    %rbx,%rdi
    77aa:	e8 51 c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    77af:	48 8b 05 f2 e7 01 00 	mov    0x1e7f2(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    77b6:	48 89 c2             	mov    %rax,%rdx
    77b9:	48 8d 05 80 e5 01 00 	lea    0x1e580(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    77c0:	48 89 c6             	mov    %rax,%rsi
    77c3:	48 89 df             	mov    %rbx,%rdi
    77c6:	e8 c5 ce ff ff       	call   4690 <__cxa_throw@plt>
    77cb:	49 89 c4             	mov    %rax,%r12
    77ce:	48 89 df             	mov    %rbx,%rdi
    77d1:	e8 6a ca ff ff       	call   4240 <__cxa_free_exception@plt>
    77d6:	4c 89 e0             	mov    %r12,%rax
    77d9:	48 89 c7             	mov    %rax,%rdi
    77dc:	e8 0f cf ff ff       	call   46f0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    77e1:	90                   	nop
}
    77e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77e6:	48 83 c4 20          	add    $0x20,%rsp
    77ea:	5b                   	pop    %rbx
    77eb:	41 5c                	pop    %r12
    77ed:	5d                   	pop    %rbp
    77ee:	c3                   	ret

00000000000077ef <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    77ef:	55                   	push   %rbp
    77f0:	48 89 e5             	mov    %rsp,%rbp
    77f3:	41 54                	push   %r12
    77f5:	53                   	push   %rbx
    77f6:	48 83 ec 30          	sub    $0x30,%rsp
    77fa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    77fe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7802:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7806:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    780a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    780e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7812:	b9 00 00 00 00       	mov    $0x0,%ecx
    7817:	48 89 c7             	mov    %rax,%rdi
    781a:	e8 f1 cc ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    781f:	85 c0                	test   %eax,%eax
    7821:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7824:	84 c0                	test   %al,%al
    7826:	74 3b                	je     7863 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7828:	bf 10 00 00 00       	mov    $0x10,%edi
    782d:	e8 3e c9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7832:	48 89 c3             	mov    %rax,%rbx
    7835:	48 8d 05 0c 08 01 00 	lea    0x1080c(%rip),%rax        # 18048 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    783c:	48 89 c6             	mov    %rax,%rsi
    783f:	48 89 df             	mov    %rbx,%rdi
    7842:	e8 b9 c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7847:	48 8b 05 5a e7 01 00 	mov    0x1e75a(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    784e:	48 89 c2             	mov    %rax,%rdx
    7851:	48 8d 05 e8 e4 01 00 	lea    0x1e4e8(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7858:	48 89 c6             	mov    %rax,%rsi
    785b:	48 89 df             	mov    %rbx,%rdi
    785e:	e8 2d ce ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7863:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7866:	89 c3                	mov    %eax,%ebx
    7868:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    786c:	48 89 c7             	mov    %rax,%rdi
    786f:	e8 84 0e 00 00       	call   86f8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    7874:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7878:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    787c:	48 89 de             	mov    %rbx,%rsi
    787f:	48 89 c7             	mov    %rax,%rdi
    7882:	e8 a9 0e 00 00       	call   8730 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    7887:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    788b:	48 89 c7             	mov    %rax,%rdi
    788e:	e8 81 0e 00 00       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7893:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7897:	48 89 c7             	mov    %rax,%rdi
    789a:	e8 4b 0f 00 00       	call   87ea <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    789f:	48 89 c1             	mov    %rax,%rcx
    78a2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    78a6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    78aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78ae:	48 89 c7             	mov    %rax,%rdi
    78b1:	e8 5a cc ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    78b6:	85 c0                	test   %eax,%eax
    78b8:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    78bb:	84 c0                	test   %al,%al
    78bd:	0f 84 95 00 00 00    	je     7958 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    78c3:	bf 10 00 00 00       	mov    $0x10,%edi
    78c8:	e8 a3 c8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    78cd:	48 89 c3             	mov    %rax,%rbx
    78d0:	48 8d 05 71 07 01 00 	lea    0x10771(%rip),%rax        # 18048 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    78d7:	48 89 c6             	mov    %rax,%rsi
    78da:	48 89 df             	mov    %rbx,%rdi
    78dd:	e8 1e c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    78e2:	48 8b 05 bf e6 01 00 	mov    0x1e6bf(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    78e9:	48 89 c2             	mov    %rax,%rdx
    78ec:	48 8d 05 4d e4 01 00 	lea    0x1e44d(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    78f3:	48 89 c6             	mov    %rax,%rsi
    78f6:	48 89 df             	mov    %rbx,%rdi
    78f9:	e8 92 cd ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    78fe:	49 89 c4             	mov    %rax,%r12
    7901:	48 89 df             	mov    %rbx,%rdi
    7904:	e8 37 c9 ff ff       	call   4240 <__cxa_free_exception@plt>
    7909:	4c 89 e0             	mov    %r12,%rax
    790c:	48 89 c7             	mov    %rax,%rdi
    790f:	e8 dc cd ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7914:	48 89 c3             	mov    %rax,%rbx
    7917:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    791b:	48 89 c7             	mov    %rax,%rdi
    791e:	e8 f1 0d 00 00       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7923:	48 89 d8             	mov    %rbx,%rax
    7926:	48 89 c7             	mov    %rax,%rdi
    7929:	e8 c2 cd ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    792e:	49 89 c4             	mov    %rax,%r12
    7931:	48 89 df             	mov    %rbx,%rdi
    7934:	e8 07 c9 ff ff       	call   4240 <__cxa_free_exception@plt>
    7939:	4c 89 e3             	mov    %r12,%rbx
    793c:	eb 03                	jmp    7941 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    793e:	48 89 c3             	mov    %rax,%rbx
    7941:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7945:	48 89 c7             	mov    %rax,%rdi
    7948:	e8 59 0e 00 00       	call   87a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    794d:	48 89 d8             	mov    %rbx,%rax
    7950:	48 89 c7             	mov    %rax,%rdi
    7953:	e8 98 cd ff ff       	call   46f0 <_Unwind_Resume@plt>
  return surfaceFormats;
    7958:	90                   	nop
}
    7959:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    795d:	48 83 c4 30          	add    $0x30,%rsp
    7961:	5b                   	pop    %rbx
    7962:	41 5c                	pop    %r12
    7964:	5d                   	pop    %rbp
    7965:	c3                   	ret

0000000000007966 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7966:	55                   	push   %rbp
    7967:	48 89 e5             	mov    %rsp,%rbp
    796a:	41 54                	push   %r12
    796c:	53                   	push   %rbx
    796d:	48 83 ec 30          	sub    $0x30,%rsp
    7971:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7975:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7979:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    797d:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7981:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7985:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7989:	b9 00 00 00 00       	mov    $0x0,%ecx
    798e:	48 89 c7             	mov    %rax,%rdi
    7991:	e8 8a cb ff ff       	call   4520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7996:	85 c0                	test   %eax,%eax
    7998:	0f 95 c0             	setne  %al
    799b:	84 c0                	test   %al,%al
    799d:	74 3b                	je     79da <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    799f:	bf 10 00 00 00       	mov    $0x10,%edi
    79a4:	e8 c7 c7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    79a9:	48 89 c3             	mov    %rax,%rbx
    79ac:	48 8d 05 bd 06 01 00 	lea    0x106bd(%rip),%rax        # 18070 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    79b3:	48 89 c6             	mov    %rax,%rsi
    79b6:	48 89 df             	mov    %rbx,%rdi
    79b9:	e8 42 c7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    79be:	48 8b 05 e3 e5 01 00 	mov    0x1e5e3(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    79c5:	48 89 c2             	mov    %rax,%rdx
    79c8:	48 8d 05 71 e3 01 00 	lea    0x1e371(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    79cf:	48 89 c6             	mov    %rax,%rsi
    79d2:	48 89 df             	mov    %rbx,%rdi
    79d5:	e8 b6 cc ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    79da:	8b 45 e8             	mov    -0x18(%rbp),%eax
    79dd:	89 c3                	mov    %eax,%ebx
    79df:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79e3:	48 89 c7             	mov    %rax,%rdi
    79e6:	e8 71 0e 00 00       	call   885c <_ZNSaI16VkPresentModeKHREC1Ev>
    79eb:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    79ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79f3:	48 89 de             	mov    %rbx,%rsi
    79f6:	48 89 c7             	mov    %rax,%rdi
    79f9:	e8 96 0e 00 00       	call   8894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    79fe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a02:	48 89 c7             	mov    %rax,%rdi
    7a05:	e8 6e 0e 00 00       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7a0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a0e:	48 89 c7             	mov    %rax,%rdi
    7a11:	e8 38 0f 00 00       	call   894e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7a16:	48 89 c1             	mov    %rax,%rcx
    7a19:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a1d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7a21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a25:	48 89 c7             	mov    %rax,%rdi
    7a28:	e8 f3 ca ff ff       	call   4520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7a2d:	85 c0                	test   %eax,%eax
    7a2f:	0f 95 c0             	setne  %al
    7a32:	84 c0                	test   %al,%al
    7a34:	0f 84 95 00 00 00    	je     7acf <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7a3a:	bf 10 00 00 00       	mov    $0x10,%edi
    7a3f:	e8 2c c7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7a44:	48 89 c3             	mov    %rax,%rbx
    7a47:	48 8d 05 22 06 01 00 	lea    0x10622(%rip),%rax        # 18070 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7a4e:	48 89 c6             	mov    %rax,%rsi
    7a51:	48 89 df             	mov    %rbx,%rdi
    7a54:	e8 a7 c6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7a59:	48 8b 05 48 e5 01 00 	mov    0x1e548(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7a60:	48 89 c2             	mov    %rax,%rdx
    7a63:	48 8d 05 d6 e2 01 00 	lea    0x1e2d6(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7a6a:	48 89 c6             	mov    %rax,%rsi
    7a6d:	48 89 df             	mov    %rbx,%rdi
    7a70:	e8 1b cc ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7a75:	49 89 c4             	mov    %rax,%r12
    7a78:	48 89 df             	mov    %rbx,%rdi
    7a7b:	e8 c0 c7 ff ff       	call   4240 <__cxa_free_exception@plt>
    7a80:	4c 89 e0             	mov    %r12,%rax
    7a83:	48 89 c7             	mov    %rax,%rdi
    7a86:	e8 65 cc ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7a8b:	48 89 c3             	mov    %rax,%rbx
    7a8e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a92:	48 89 c7             	mov    %rax,%rdi
    7a95:	e8 de 0d 00 00       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
    7a9a:	48 89 d8             	mov    %rbx,%rax
    7a9d:	48 89 c7             	mov    %rax,%rdi
    7aa0:	e8 4b cc ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7aa5:	49 89 c4             	mov    %rax,%r12
    7aa8:	48 89 df             	mov    %rbx,%rdi
    7aab:	e8 90 c7 ff ff       	call   4240 <__cxa_free_exception@plt>
    7ab0:	4c 89 e3             	mov    %r12,%rbx
    7ab3:	eb 03                	jmp    7ab8 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    7ab5:	48 89 c3             	mov    %rax,%rbx
    7ab8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7abc:	48 89 c7             	mov    %rax,%rdi
    7abf:	e8 46 0e 00 00       	call   890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7ac4:	48 89 d8             	mov    %rbx,%rax
    7ac7:	48 89 c7             	mov    %rax,%rdi
    7aca:	e8 21 cc ff ff       	call   46f0 <_Unwind_Resume@plt>
  return presentModes;
    7acf:	90                   	nop
}
    7ad0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ad4:	48 83 c4 30          	add    $0x30,%rsp
    7ad8:	5b                   	pop    %rbx
    7ad9:	41 5c                	pop    %r12
    7adb:	5d                   	pop    %rbp
    7adc:	c3                   	ret

0000000000007add <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    7add:	55                   	push   %rbp
    7ade:	48 89 e5             	mov    %rsp,%rbp
    7ae1:	41 54                	push   %r12
    7ae3:	53                   	push   %rbx
    7ae4:	48 83 ec 30          	sub    $0x30,%rsp
    7ae8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7aec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7af0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7af4:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7af8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7afc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b00:	b9 00 00 00 00       	mov    $0x0,%ecx
    7b05:	48 89 c7             	mov    %rax,%rdi
    7b08:	e8 b3 c6 ff ff       	call   41c0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    7b0d:	85 c0                	test   %eax,%eax
    7b0f:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7b12:	84 c0                	test   %al,%al
    7b14:	74 3b                	je     7b51 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7b16:	bf 10 00 00 00       	mov    $0x10,%edi
    7b1b:	e8 50 c6 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7b20:	48 89 c3             	mov    %rax,%rbx
    7b23:	48 8d 05 76 05 01 00 	lea    0x10576(%rip),%rax        # 180a0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7b2a:	48 89 c6             	mov    %rax,%rsi
    7b2d:	48 89 df             	mov    %rbx,%rdi
    7b30:	e8 cb c5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7b35:	48 8b 05 6c e4 01 00 	mov    0x1e46c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b3c:	48 89 c2             	mov    %rax,%rdx
    7b3f:	48 8d 05 fa e1 01 00 	lea    0x1e1fa(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b46:	48 89 c6             	mov    %rax,%rsi
    7b49:	48 89 df             	mov    %rbx,%rdi
    7b4c:	e8 3f cb ff ff       	call   4690 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7b51:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7b54:	89 c3                	mov    %eax,%ebx
    7b56:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b5a:	48 89 c7             	mov    %rax,%rdi
    7b5d:	e8 5e 0e 00 00       	call   89c0 <_ZNSaIP9VkImage_TEC1Ev>
    7b62:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7b66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b6a:	48 89 de             	mov    %rbx,%rsi
    7b6d:	48 89 c7             	mov    %rax,%rdi
    7b70:	e8 83 0e 00 00       	call   89f8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7b75:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b79:	48 89 c7             	mov    %rax,%rdi
    7b7c:	e8 5b 0e 00 00       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7b81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b85:	48 89 c7             	mov    %rax,%rdi
    7b88:	e8 25 0f 00 00       	call   8ab2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7b8d:	48 89 c1             	mov    %rax,%rcx
    7b90:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7b94:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7b98:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b9c:	48 89 c7             	mov    %rax,%rdi
    7b9f:	e8 1c c6 ff ff       	call   41c0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7ba4:	85 c0                	test   %eax,%eax
    7ba6:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7ba9:	84 c0                	test   %al,%al
    7bab:	0f 84 95 00 00 00    	je     7c46 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7bb1:	bf 10 00 00 00       	mov    $0x10,%edi
    7bb6:	e8 b5 c5 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7bbb:	48 89 c3             	mov    %rax,%rbx
    7bbe:	48 8d 05 db 04 01 00 	lea    0x104db(%rip),%rax        # 180a0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7bc5:	48 89 c6             	mov    %rax,%rsi
    7bc8:	48 89 df             	mov    %rbx,%rdi
    7bcb:	e8 30 c5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7bd0:	48 8b 05 d1 e3 01 00 	mov    0x1e3d1(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7bd7:	48 89 c2             	mov    %rax,%rdx
    7bda:	48 8d 05 5f e1 01 00 	lea    0x1e15f(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7be1:	48 89 c6             	mov    %rax,%rsi
    7be4:	48 89 df             	mov    %rbx,%rdi
    7be7:	e8 a4 ca ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7bec:	49 89 c4             	mov    %rax,%r12
    7bef:	48 89 df             	mov    %rbx,%rdi
    7bf2:	e8 49 c6 ff ff       	call   4240 <__cxa_free_exception@plt>
    7bf7:	4c 89 e0             	mov    %r12,%rax
    7bfa:	48 89 c7             	mov    %rax,%rdi
    7bfd:	e8 ee ca ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7c02:	48 89 c3             	mov    %rax,%rbx
    7c05:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c09:	48 89 c7             	mov    %rax,%rdi
    7c0c:	e8 cb 0d 00 00       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
    7c11:	48 89 d8             	mov    %rbx,%rax
    7c14:	48 89 c7             	mov    %rax,%rdi
    7c17:	e8 d4 ca ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7c1c:	49 89 c4             	mov    %rax,%r12
    7c1f:	48 89 df             	mov    %rbx,%rdi
    7c22:	e8 19 c6 ff ff       	call   4240 <__cxa_free_exception@plt>
    7c27:	4c 89 e3             	mov    %r12,%rbx
    7c2a:	eb 03                	jmp    7c2f <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7c2c:	48 89 c3             	mov    %rax,%rbx
    7c2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c33:	48 89 c7             	mov    %rax,%rdi
    7c36:	e8 33 0e 00 00       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7c3b:	48 89 d8             	mov    %rbx,%rax
    7c3e:	48 89 c7             	mov    %rax,%rdi
    7c41:	e8 aa ca ff ff       	call   46f0 <_Unwind_Resume@plt>
  return swapchainImages;
    7c46:	90                   	nop
}
    7c47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c4b:	48 83 c4 30          	add    $0x30,%rsp
    7c4f:	5b                   	pop    %rbx
    7c50:	41 5c                	pop    %r12
    7c52:	5d                   	pop    %rbp
    7c53:	c3                   	ret

0000000000007c54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7c54:	55                   	push   %rbp
    7c55:	48 89 e5             	mov    %rsp,%rbp
    7c58:	48 83 ec 10          	sub    $0x10,%rsp
    7c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c64:	48 89 c7             	mov    %rax,%rdi
    7c67:	e8 00 01 00 00       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    7c6c:	90                   	nop
    7c6d:	c9                   	leave
    7c6e:	c3                   	ret
    7c6f:	90                   	nop

0000000000007c70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7c70:	55                   	push   %rbp
    7c71:	48 89 e5             	mov    %rsp,%rbp
    7c74:	48 83 ec 10          	sub    $0x10,%rsp
    7c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c80:	48 89 c7             	mov    %rax,%rdi
    7c83:	e8 52 02 00 00       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    7c88:	90                   	nop
    7c89:	c9                   	leave
    7c8a:	c3                   	ret
    7c8b:	90                   	nop

0000000000007c8c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    7c8c:	55                   	push   %rbp
    7c8d:	48 89 e5             	mov    %rsp,%rbp
    7c90:	48 83 ec 10          	sub    $0x10,%rsp
    7c94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c9c:	48 89 c7             	mov    %rax,%rdi
    7c9f:	e8 a4 03 00 00       	call   8048 <_ZNSaIPKcED1Ev>
    7ca4:	90                   	nop
    7ca5:	c9                   	leave
    7ca6:	c3                   	ret
    7ca7:	90                   	nop

0000000000007ca8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    7ca8:	55                   	push   %rbp
    7ca9:	48 89 e5             	mov    %rsp,%rbp
    7cac:	48 83 ec 10          	sub    $0x10,%rsp
    7cb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cb8:	48 89 c7             	mov    %rax,%rdi
    7cbb:	e8 a4 04 00 00       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7cc0:	90                   	nop
    7cc1:	c9                   	leave
    7cc2:	c3                   	ret
    7cc3:	90                   	nop

0000000000007cc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7cc4:	55                   	push   %rbp
    7cc5:	48 89 e5             	mov    %rsp,%rbp
    7cc8:	48 83 ec 10          	sub    $0x10,%rsp
    7ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cd4:	48 89 c7             	mov    %rax,%rdi
    7cd7:	e8 ec 05 00 00       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7cdc:	90                   	nop
    7cdd:	c9                   	leave
    7cde:	c3                   	ret
    7cdf:	90                   	nop

0000000000007ce0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    7ce0:	55                   	push   %rbp
    7ce1:	48 89 e5             	mov    %rsp,%rbp
    7ce4:	48 83 ec 10          	sub    $0x10,%rsp
    7ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cf0:	48 89 c7             	mov    %rax,%rdi
    7cf3:	e8 6c 07 00 00       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7cf8:	90                   	nop
    7cf9:	c9                   	leave
    7cfa:	c3                   	ret
    7cfb:	90                   	nop

0000000000007cfc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    7cfc:	55                   	push   %rbp
    7cfd:	48 89 e5             	mov    %rsp,%rbp
    7d00:	48 83 ec 10          	sub    $0x10,%rsp
    7d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d0c:	48 89 c7             	mov    %rax,%rdi
    7d0f:	e8 00 0a 00 00       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7d14:	90                   	nop
    7d15:	c9                   	leave
    7d16:	c3                   	ret
    7d17:	90                   	nop

0000000000007d18 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    7d18:	55                   	push   %rbp
    7d19:	48 89 e5             	mov    %rsp,%rbp
    7d1c:	48 83 ec 10          	sub    $0x10,%rsp
    7d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d28:	48 89 c7             	mov    %rax,%rdi
    7d2b:	e8 48 0b 00 00       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
    7d30:	90                   	nop
    7d31:	c9                   	leave
    7d32:	c3                   	ret
    7d33:	90                   	nop

0000000000007d34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    7d34:	55                   	push   %rbp
    7d35:	48 89 e5             	mov    %rsp,%rbp
    7d38:	48 83 ec 10          	sub    $0x10,%rsp
    7d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d44:	48 89 c7             	mov    %rax,%rdi
    7d47:	e8 90 0c 00 00       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
    7d4c:	90                   	nop
    7d4d:	c9                   	leave
    7d4e:	c3                   	ret
    7d4f:	90                   	nop

0000000000007d50 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7d50:	55                   	push   %rbp
    7d51:	48 89 e5             	mov    %rsp,%rbp
    7d54:	48 83 ec 10          	sub    $0x10,%rsp
    7d58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d60:	48 89 c7             	mov    %rax,%rdi
    7d63:	e8 bc 0d 00 00       	call   8b24 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    7d68:	90                   	nop
    7d69:	c9                   	leave
    7d6a:	c3                   	ret
    7d6b:	90                   	nop

0000000000007d6c <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7d6c:	55                   	push   %rbp
    7d6d:	48 89 e5             	mov    %rsp,%rbp
    7d70:	48 83 ec 10          	sub    $0x10,%rsp
    7d74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7c:	48 89 c7             	mov    %rax,%rdi
    7d7f:	e8 ac 0d 00 00       	call   8b30 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    7d84:	90                   	nop
    7d85:	c9                   	leave
    7d86:	c3                   	ret
    7d87:	90                   	nop

0000000000007d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7d88:	55                   	push   %rbp
    7d89:	48 89 e5             	mov    %rsp,%rbp
    7d8c:	53                   	push   %rbx
    7d8d:	48 83 ec 28          	sub    $0x28,%rsp
    7d91:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7d95:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7d99:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7d9d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7da1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7da5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7da9:	48 89 d6             	mov    %rdx,%rsi
    7dac:	48 89 c7             	mov    %rax,%rdi
    7daf:	e8 87 0d 00 00       	call   8b3b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7db4:	48 89 c1             	mov    %rax,%rcx
    7db7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dbb:	48 89 c2             	mov    %rax,%rdx
    7dbe:	48 89 ce             	mov    %rcx,%rsi
    7dc1:	48 89 df             	mov    %rbx,%rdi
    7dc4:	e8 d3 0d 00 00       	call   8b9c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7dc9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7dcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dd1:	48 89 d6             	mov    %rdx,%rsi
    7dd4:	48 89 c7             	mov    %rax,%rdi
    7dd7:	e8 1e 0e 00 00       	call   8bfa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    7ddc:	eb 1a                	jmp    7df8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7dde:	48 89 c3             	mov    %rax,%rbx
    7de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7de5:	48 89 c7             	mov    %rax,%rdi
    7de8:	e8 79 00 00 00       	call   7e66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7ded:	48 89 d8             	mov    %rbx,%rax
    7df0:	48 89 c7             	mov    %rax,%rdi
    7df3:	e8 f8 c8 ff ff       	call   46f0 <_Unwind_Resume@plt>
    7df8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7dfc:	c9                   	leave
    7dfd:	c3                   	ret

0000000000007dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7dfe:	55                   	push   %rbp
    7dff:	48 89 e5             	mov    %rsp,%rbp
    7e02:	48 83 ec 10          	sub    $0x10,%rsp
    7e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e0e:	48 89 c7             	mov    %rax,%rdi
    7e11:	e8 24 0e 00 00       	call   8c3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7e16:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7e19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e1d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e25:	48 8b 00             	mov    (%rax),%rax
    7e28:	48 89 ce             	mov    %rcx,%rsi
    7e2b:	48 89 c7             	mov    %rax,%rdi
    7e2e:	e8 15 0e 00 00       	call   8c48 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7e33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e37:	48 89 c7             	mov    %rax,%rdi
    7e3a:	e8 27 00 00 00       	call   7e66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7e3f:	90                   	nop
    7e40:	c9                   	leave
    7e41:	c3                   	ret

0000000000007e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7e42:	55                   	push   %rbp
    7e43:	48 89 e5             	mov    %rsp,%rbp
    7e46:	48 83 ec 10          	sub    $0x10,%rsp
    7e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e52:	48 8b 10             	mov    (%rax),%rdx
    7e55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e59:	48 89 d6             	mov    %rdx,%rsi
    7e5c:	48 89 c7             	mov    %rax,%rdi
    7e5f:	e8 0e 0e 00 00       	call   8c72 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7e64:	c9                   	leave
    7e65:	c3                   	ret

0000000000007e66 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7e66:	55                   	push   %rbp
    7e67:	48 89 e5             	mov    %rsp,%rbp
    7e6a:	48 83 ec 10          	sub    $0x10,%rsp
    7e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e76:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e7e:	48 8b 00             	mov    (%rax),%rax
    7e81:	48 29 c2             	sub    %rax,%rdx
    7e84:	48 c1 fa 03          	sar    $0x3,%rdx
    7e88:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7e8f:	fc c0 0f 
    7e92:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7e96:	48 89 c2             	mov    %rax,%rdx
    7e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e9d:	48 8b 08             	mov    (%rax),%rcx
    7ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea4:	48 89 ce             	mov    %rcx,%rsi
    7ea7:	48 89 c7             	mov    %rax,%rdi
    7eaa:	e8 fb 0d 00 00       	call   8caa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eb3:	48 89 c7             	mov    %rax,%rdi
    7eb6:	e8 99 fd ff ff       	call   7c54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    7ebb:	90                   	nop
    7ebc:	c9                   	leave
    7ebd:	c3                   	ret

0000000000007ebe <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7ebe:	55                   	push   %rbp
    7ebf:	48 89 e5             	mov    %rsp,%rbp
    7ec2:	48 83 ec 10          	sub    $0x10,%rsp
    7ec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7eca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ece:	48 89 c7             	mov    %rax,%rdi
    7ed1:	e8 0a 0e 00 00       	call   8ce0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    7ed6:	90                   	nop
    7ed7:	c9                   	leave
    7ed8:	c3                   	ret
    7ed9:	90                   	nop

0000000000007eda <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7eda:	55                   	push   %rbp
    7edb:	48 89 e5             	mov    %rsp,%rbp
    7ede:	48 83 ec 10          	sub    $0x10,%rsp
    7ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eea:	48 89 c7             	mov    %rax,%rdi
    7eed:	e8 fa 0d 00 00       	call   8cec <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    7ef2:	90                   	nop
    7ef3:	c9                   	leave
    7ef4:	c3                   	ret
    7ef5:	90                   	nop

0000000000007ef6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7ef6:	55                   	push   %rbp
    7ef7:	48 89 e5             	mov    %rsp,%rbp
    7efa:	53                   	push   %rbx
    7efb:	48 83 ec 28          	sub    $0x28,%rsp
    7eff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7f07:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7f0b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7f0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f17:	48 89 d6             	mov    %rdx,%rsi
    7f1a:	48 89 c7             	mov    %rax,%rdi
    7f1d:	e8 d5 0d 00 00       	call   8cf7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7f22:	48 89 c1             	mov    %rax,%rcx
    7f25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f29:	48 89 c2             	mov    %rax,%rdx
    7f2c:	48 89 ce             	mov    %rcx,%rsi
    7f2f:	48 89 df             	mov    %rbx,%rdi
    7f32:	e8 21 0e 00 00       	call   8d58 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7f37:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f3f:	48 89 d6             	mov    %rdx,%rsi
    7f42:	48 89 c7             	mov    %rax,%rdi
    7f45:	e8 6c 0e 00 00       	call   8db6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    7f4a:	eb 1a                	jmp    7f66 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7f4c:	48 89 c3             	mov    %rax,%rbx
    7f4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f53:	48 89 c7             	mov    %rax,%rdi
    7f56:	e8 79 00 00 00       	call   7fd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7f5b:	48 89 d8             	mov    %rbx,%rax
    7f5e:	48 89 c7             	mov    %rax,%rdi
    7f61:	e8 8a c7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    7f66:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f6a:	c9                   	leave
    7f6b:	c3                   	ret

0000000000007f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7f6c:	55                   	push   %rbp
    7f6d:	48 89 e5             	mov    %rsp,%rbp
    7f70:	48 83 ec 10          	sub    $0x10,%rsp
    7f74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f7c:	48 89 c7             	mov    %rax,%rdi
    7f7f:	e8 72 0e 00 00       	call   8df6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7f84:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f8b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f93:	48 8b 00             	mov    (%rax),%rax
    7f96:	48 89 ce             	mov    %rcx,%rsi
    7f99:	48 89 c7             	mov    %rax,%rdi
    7f9c:	e8 63 0e 00 00       	call   8e04 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa5:	48 89 c7             	mov    %rax,%rdi
    7fa8:	e8 27 00 00 00       	call   7fd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7fad:	90                   	nop
    7fae:	c9                   	leave
    7faf:	c3                   	ret

0000000000007fb0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7fb0:	55                   	push   %rbp
    7fb1:	48 89 e5             	mov    %rsp,%rbp
    7fb4:	48 83 ec 10          	sub    $0x10,%rsp
    7fb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7fbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc0:	48 8b 10             	mov    (%rax),%rdx
    7fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc7:	48 89 d6             	mov    %rdx,%rsi
    7fca:	48 89 c7             	mov    %rax,%rdi
    7fcd:	e8 5c 0e 00 00       	call   8e2e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7fd2:	c9                   	leave
    7fd3:	c3                   	ret

0000000000007fd4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7fd4:	55                   	push   %rbp
    7fd5:	48 89 e5             	mov    %rsp,%rbp
    7fd8:	48 83 ec 10          	sub    $0x10,%rsp
    7fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7fe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fe4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fec:	48 8b 00             	mov    (%rax),%rax
    7fef:	48 29 c2             	sub    %rax,%rdx
    7ff2:	48 c1 fa 02          	sar    $0x2,%rdx
    7ff6:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7ffd:	fc c0 0f 
    8000:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8004:	48 89 c2             	mov    %rax,%rdx
    8007:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800b:	48 8b 08             	mov    (%rax),%rcx
    800e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8012:	48 89 ce             	mov    %rcx,%rsi
    8015:	48 89 c7             	mov    %rax,%rdi
    8018:	e8 49 0e 00 00       	call   8e66 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    801d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8021:	48 89 c7             	mov    %rax,%rdi
    8024:	e8 47 fc ff ff       	call   7c70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8029:	90                   	nop
    802a:	c9                   	leave
    802b:	c3                   	ret

000000000000802c <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    802c:	55                   	push   %rbp
    802d:	48 89 e5             	mov    %rsp,%rbp
    8030:	48 83 ec 10          	sub    $0x10,%rsp
    8034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    803c:	48 89 c7             	mov    %rax,%rdi
    803f:	e8 58 0e 00 00       	call   8e9c <_ZNSt15__new_allocatorIPKcEC1Ev>
    8044:	90                   	nop
    8045:	c9                   	leave
    8046:	c3                   	ret
    8047:	90                   	nop

0000000000008048 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8048:	55                   	push   %rbp
    8049:	48 89 e5             	mov    %rsp,%rbp
    804c:	48 83 ec 10          	sub    $0x10,%rsp
    8050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8058:	48 89 c7             	mov    %rax,%rdi
    805b:	e8 48 0e 00 00       	call   8ea8 <_ZNSt15__new_allocatorIPKcED1Ev>
    8060:	90                   	nop
    8061:	c9                   	leave
    8062:	c3                   	ret
    8063:	90                   	nop

0000000000008064 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8064:	55                   	push   %rbp
    8065:	48 89 e5             	mov    %rsp,%rbp
    8068:	53                   	push   %rbx
    8069:	48 83 ec 28          	sub    $0x28,%rsp
    806d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8071:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8075:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8079:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    807d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8081:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8085:	48 89 d6             	mov    %rdx,%rsi
    8088:	48 89 c7             	mov    %rax,%rdi
    808b:	e8 23 0e 00 00       	call   8eb3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    8090:	48 89 c1             	mov    %rax,%rcx
    8093:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8097:	48 89 c2             	mov    %rax,%rdx
    809a:	48 89 ce             	mov    %rcx,%rsi
    809d:	48 89 df             	mov    %rbx,%rdi
    80a0:	e8 6f 0e 00 00       	call   8f14 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    80a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    80a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80ad:	48 89 d6             	mov    %rdx,%rsi
    80b0:	48 89 c7             	mov    %rax,%rdi
    80b3:	e8 ba 0e 00 00       	call   8f72 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    80b8:	eb 1a                	jmp    80d4 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    80ba:	48 89 c3             	mov    %rax,%rbx
    80bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80c1:	48 89 c7             	mov    %rax,%rdi
    80c4:	e8 31 00 00 00       	call   80fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    80c9:	48 89 d8             	mov    %rbx,%rax
    80cc:	48 89 c7             	mov    %rax,%rdi
    80cf:	e8 1c c6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    80d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    80d8:	c9                   	leave
    80d9:	c3                   	ret

00000000000080da <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    80da:	55                   	push   %rbp
    80db:	48 89 e5             	mov    %rsp,%rbp
    80de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    80e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ea:	48 8b 00             	mov    (%rax),%rax
    80ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    80f1:	48 c1 e2 03          	shl    $0x3,%rdx
    80f5:	48 01 d0             	add    %rdx,%rax
      }
    80f8:	5d                   	pop    %rbp
    80f9:	c3                   	ret

00000000000080fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    80fa:	55                   	push   %rbp
    80fb:	48 89 e5             	mov    %rsp,%rbp
    80fe:	48 83 ec 10          	sub    $0x10,%rsp
    8102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8106:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    810a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    810e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8112:	48 8b 00             	mov    (%rax),%rax
    8115:	48 29 c2             	sub    %rax,%rdx
    8118:	48 89 d0             	mov    %rdx,%rax
    811b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    811f:	48 89 c2             	mov    %rax,%rdx
    8122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8126:	48 8b 08             	mov    (%rax),%rcx
    8129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    812d:	48 89 ce             	mov    %rcx,%rsi
    8130:	48 89 c7             	mov    %rax,%rdi
    8133:	e8 ae 0e 00 00       	call   8fe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    8138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    813c:	48 89 c7             	mov    %rax,%rdi
    813f:	e8 48 fb ff ff       	call   7c8c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8144:	90                   	nop
    8145:	c9                   	leave
    8146:	c3                   	ret
    8147:	90                   	nop

0000000000008148 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8148:	55                   	push   %rbp
    8149:	48 89 e5             	mov    %rsp,%rbp
    814c:	48 83 ec 10          	sub    $0x10,%rsp
    8150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8158:	48 89 c7             	mov    %rax,%rdi
    815b:	e8 bc 0e 00 00       	call   901c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    8160:	90                   	nop
    8161:	c9                   	leave
    8162:	c3                   	ret
    8163:	90                   	nop

0000000000008164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8164:	55                   	push   %rbp
    8165:	48 89 e5             	mov    %rsp,%rbp
    8168:	48 83 ec 10          	sub    $0x10,%rsp
    816c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8174:	48 89 c7             	mov    %rax,%rdi
    8177:	e8 ac 0e 00 00       	call   9028 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    817c:	90                   	nop
    817d:	c9                   	leave
    817e:	c3                   	ret
    817f:	90                   	nop

0000000000008180 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8180:	55                   	push   %rbp
    8181:	48 89 e5             	mov    %rsp,%rbp
    8184:	53                   	push   %rbx
    8185:	48 83 ec 28          	sub    $0x28,%rsp
    8189:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    818d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8191:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8195:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8199:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    819d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81a1:	48 89 d6             	mov    %rdx,%rsi
    81a4:	48 89 c7             	mov    %rax,%rdi
    81a7:	e8 87 0e 00 00       	call   9033 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    81ac:	48 89 c1             	mov    %rax,%rcx
    81af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81b3:	48 89 c2             	mov    %rax,%rdx
    81b6:	48 89 ce             	mov    %rcx,%rsi
    81b9:	48 89 df             	mov    %rbx,%rdi
    81bc:	e8 d3 0e 00 00       	call   9094 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    81c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    81c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81c9:	48 89 d6             	mov    %rdx,%rsi
    81cc:	48 89 c7             	mov    %rax,%rdi
    81cf:	e8 1e 0f 00 00       	call   90f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    81d4:	eb 1a                	jmp    81f0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    81d6:	48 89 c3             	mov    %rax,%rbx
    81d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81dd:	48 89 c7             	mov    %rax,%rdi
    81e0:	e8 79 00 00 00       	call   825e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    81e5:	48 89 d8             	mov    %rbx,%rax
    81e8:	48 89 c7             	mov    %rax,%rdi
    81eb:	e8 00 c5 ff ff       	call   46f0 <_Unwind_Resume@plt>
    81f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    81f4:	c9                   	leave
    81f5:	c3                   	ret

00000000000081f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    81f6:	55                   	push   %rbp
    81f7:	48 89 e5             	mov    %rsp,%rbp
    81fa:	48 83 ec 10          	sub    $0x10,%rsp
    81fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8206:	48 89 c7             	mov    %rax,%rdi
    8209:	e8 24 0f 00 00       	call   9132 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    820e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8211:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8215:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    821d:	48 8b 00             	mov    (%rax),%rax
    8220:	48 89 ce             	mov    %rcx,%rsi
    8223:	48 89 c7             	mov    %rax,%rdi
    8226:	e8 15 0f 00 00       	call   9140 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    822b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    822f:	48 89 c7             	mov    %rax,%rdi
    8232:	e8 27 00 00 00       	call   825e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8237:	90                   	nop
    8238:	c9                   	leave
    8239:	c3                   	ret

000000000000823a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    823a:	55                   	push   %rbp
    823b:	48 89 e5             	mov    %rsp,%rbp
    823e:	48 83 ec 10          	sub    $0x10,%rsp
    8242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    824a:	48 8b 10             	mov    (%rax),%rdx
    824d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8251:	48 89 d6             	mov    %rdx,%rsi
    8254:	48 89 c7             	mov    %rax,%rdi
    8257:	e8 0e 0f 00 00       	call   916a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    825c:	c9                   	leave
    825d:	c3                   	ret

000000000000825e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    825e:	55                   	push   %rbp
    825f:	48 89 e5             	mov    %rsp,%rbp
    8262:	48 83 ec 10          	sub    $0x10,%rsp
    8266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    826a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    826e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8276:	48 8b 00             	mov    (%rax),%rax
    8279:	48 29 c2             	sub    %rax,%rdx
    827c:	48 89 d0             	mov    %rdx,%rax
    827f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8283:	48 89 c2             	mov    %rax,%rdx
    8286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828a:	48 8b 08             	mov    (%rax),%rcx
    828d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8291:	48 89 ce             	mov    %rcx,%rsi
    8294:	48 89 c7             	mov    %rax,%rdi
    8297:	e8 06 0f 00 00       	call   91a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    829c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82a0:	48 89 c7             	mov    %rax,%rdi
    82a3:	e8 00 fa ff ff       	call   7ca8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    82a8:	90                   	nop
    82a9:	c9                   	leave
    82aa:	c3                   	ret
    82ab:	90                   	nop

00000000000082ac <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    82ac:	55                   	push   %rbp
    82ad:	48 89 e5             	mov    %rsp,%rbp
    82b0:	48 83 ec 10          	sub    $0x10,%rsp
    82b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82bc:	48 89 c7             	mov    %rax,%rdi
    82bf:	e8 14 0f 00 00       	call   91d8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    82c4:	90                   	nop
    82c5:	c9                   	leave
    82c6:	c3                   	ret
    82c7:	90                   	nop

00000000000082c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    82c8:	55                   	push   %rbp
    82c9:	48 89 e5             	mov    %rsp,%rbp
    82cc:	48 83 ec 10          	sub    $0x10,%rsp
    82d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82d8:	48 89 c7             	mov    %rax,%rdi
    82db:	e8 04 0f 00 00       	call   91e4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    82e0:	90                   	nop
    82e1:	c9                   	leave
    82e2:	c3                   	ret
    82e3:	90                   	nop

00000000000082e4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    82e4:	55                   	push   %rbp
    82e5:	48 89 e5             	mov    %rsp,%rbp
    82e8:	53                   	push   %rbx
    82e9:	48 83 ec 28          	sub    $0x28,%rsp
    82ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    82f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    82f5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    82f9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    82fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8301:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8305:	48 89 d6             	mov    %rdx,%rsi
    8308:	48 89 c7             	mov    %rax,%rdi
    830b:	e8 df 0e 00 00       	call   91ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8310:	48 89 c1             	mov    %rax,%rcx
    8313:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8317:	48 89 c2             	mov    %rax,%rdx
    831a:	48 89 ce             	mov    %rcx,%rsi
    831d:	48 89 df             	mov    %rbx,%rdi
    8320:	e8 2b 0f 00 00       	call   9250 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8325:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8329:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    832d:	48 89 d6             	mov    %rdx,%rsi
    8330:	48 89 c7             	mov    %rax,%rdi
    8333:	e8 76 0f 00 00       	call   92ae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    8338:	eb 1a                	jmp    8354 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    833a:	48 89 c3             	mov    %rax,%rbx
    833d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8341:	48 89 c7             	mov    %rax,%rdi
    8344:	e8 79 00 00 00       	call   83c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8349:	48 89 d8             	mov    %rbx,%rax
    834c:	48 89 c7             	mov    %rax,%rdi
    834f:	e8 9c c3 ff ff       	call   46f0 <_Unwind_Resume@plt>
    8354:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8358:	c9                   	leave
    8359:	c3                   	ret

000000000000835a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    835a:	55                   	push   %rbp
    835b:	48 89 e5             	mov    %rsp,%rbp
    835e:	48 83 ec 10          	sub    $0x10,%rsp
    8362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    836a:	48 89 c7             	mov    %rax,%rdi
    836d:	e8 7c 0f 00 00       	call   92ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8372:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8379:	48 8b 48 08          	mov    0x8(%rax),%rcx
    837d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8381:	48 8b 00             	mov    (%rax),%rax
    8384:	48 89 ce             	mov    %rcx,%rsi
    8387:	48 89 c7             	mov    %rax,%rdi
    838a:	e8 6d 0f 00 00       	call   92fc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    838f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8393:	48 89 c7             	mov    %rax,%rdi
    8396:	e8 27 00 00 00       	call   83c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    839b:	90                   	nop
    839c:	c9                   	leave
    839d:	c3                   	ret

000000000000839e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    839e:	55                   	push   %rbp
    839f:	48 89 e5             	mov    %rsp,%rbp
    83a2:	48 83 ec 10          	sub    $0x10,%rsp
    83a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    83aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83ae:	48 8b 10             	mov    (%rax),%rdx
    83b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b5:	48 89 d6             	mov    %rdx,%rsi
    83b8:	48 89 c7             	mov    %rax,%rdi
    83bb:	e8 66 0f 00 00       	call   9326 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    83c0:	c9                   	leave
    83c1:	c3                   	ret

00000000000083c2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    83c2:	55                   	push   %rbp
    83c3:	48 89 e5             	mov    %rsp,%rbp
    83c6:	48 83 ec 10          	sub    $0x10,%rsp
    83ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    83ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83d2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    83d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83da:	48 8b 00             	mov    (%rax),%rax
    83dd:	48 29 c2             	sub    %rax,%rdx
    83e0:	48 c1 fa 03          	sar    $0x3,%rdx
    83e4:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    83eb:	aa aa aa 
    83ee:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    83f2:	48 89 c2             	mov    %rax,%rdx
    83f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83f9:	48 8b 08             	mov    (%rax),%rcx
    83fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8400:	48 89 ce             	mov    %rcx,%rsi
    8403:	48 89 c7             	mov    %rax,%rdi
    8406:	e8 53 0f 00 00       	call   935e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    840b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    840f:	48 89 c7             	mov    %rax,%rdi
    8412:	e8 ad f8 ff ff       	call   7cc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    8417:	90                   	nop
    8418:	c9                   	leave
    8419:	c3                   	ret

000000000000841a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    841a:	55                   	push   %rbp
    841b:	48 89 e5             	mov    %rsp,%rbp
    841e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8426:	48 8b 50 08          	mov    0x8(%rax),%rdx
    842a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    842e:	48 8b 00             	mov    (%rax),%rax
    8431:	48 29 c2             	sub    %rax,%rdx
    8434:	48 c1 fa 03          	sar    $0x3,%rdx
    8438:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    843f:	aa aa aa 
    8442:	48 0f af c2          	imul   %rdx,%rax
    8446:	5d                   	pop    %rbp
    8447:	c3                   	ret

0000000000008448 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8448:	55                   	push   %rbp
    8449:	48 89 e5             	mov    %rsp,%rbp
    844c:	48 83 ec 10          	sub    $0x10,%rsp
    8450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8458:	48 89 c7             	mov    %rax,%rdi
    845b:	e8 34 0f 00 00       	call   9394 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    8460:	90                   	nop
    8461:	c9                   	leave
    8462:	c3                   	ret
    8463:	90                   	nop

0000000000008464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8464:	55                   	push   %rbp
    8465:	48 89 e5             	mov    %rsp,%rbp
    8468:	48 83 ec 10          	sub    $0x10,%rsp
    846c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8474:	48 89 c7             	mov    %rax,%rdi
    8477:	e8 24 0f 00 00       	call   93a0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    847c:	90                   	nop
    847d:	c9                   	leave
    847e:	c3                   	ret
    847f:	90                   	nop

0000000000008480 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8480:	55                   	push   %rbp
    8481:	48 89 e5             	mov    %rsp,%rbp
    8484:	53                   	push   %rbx
    8485:	48 83 ec 28          	sub    $0x28,%rsp
    8489:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    848d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8491:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8495:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8499:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    849d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84a1:	48 89 d6             	mov    %rdx,%rsi
    84a4:	48 89 c7             	mov    %rax,%rdi
    84a7:	e8 ff 0e 00 00       	call   93ab <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    84ac:	48 89 c1             	mov    %rax,%rcx
    84af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    84b3:	48 89 c2             	mov    %rax,%rdx
    84b6:	48 89 ce             	mov    %rcx,%rsi
    84b9:	48 89 df             	mov    %rbx,%rdi
    84bc:	e8 4b 0f 00 00       	call   940c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    84c1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    84c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84c9:	48 89 d6             	mov    %rdx,%rsi
    84cc:	48 89 c7             	mov    %rax,%rdi
    84cf:	e8 96 0f 00 00       	call   946a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    84d4:	eb 1a                	jmp    84f0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    84d6:	48 89 c3             	mov    %rax,%rbx
    84d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84dd:	48 89 c7             	mov    %rax,%rdi
    84e0:	e8 bb 01 00 00       	call   86a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    84e5:	48 89 d8             	mov    %rbx,%rax
    84e8:	48 89 c7             	mov    %rax,%rdi
    84eb:	e8 00 c2 ff ff       	call   46f0 <_Unwind_Resume@plt>
    84f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84f4:	c9                   	leave
    84f5:	c3                   	ret

00000000000084f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    84f6:	55                   	push   %rbp
    84f7:	48 89 e5             	mov    %rsp,%rbp
    84fa:	48 83 ec 10          	sub    $0x10,%rsp
    84fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8506:	48 89 c7             	mov    %rax,%rdi
    8509:	e8 9c 0f 00 00       	call   94aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    850e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8515:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851d:	48 8b 00             	mov    (%rax),%rax
    8520:	48 89 ce             	mov    %rcx,%rsi
    8523:	48 89 c7             	mov    %rax,%rdi
    8526:	e8 8d 0f 00 00       	call   94b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    852b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852f:	48 89 c7             	mov    %rax,%rdi
    8532:	e8 69 01 00 00       	call   86a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8537:	90                   	nop
    8538:	c9                   	leave
    8539:	c3                   	ret

000000000000853a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    853a:	55                   	push   %rbp
    853b:	48 89 e5             	mov    %rsp,%rbp
    853e:	48 83 ec 20          	sub    $0x20,%rsp
    8542:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8546:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    854a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    854e:	48 89 d6             	mov    %rdx,%rsi
    8551:	48 89 c7             	mov    %rax,%rdi
    8554:	e8 89 0f 00 00       	call   94e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    855d:	c9                   	leave
    855e:	c3                   	ret
    855f:	90                   	nop

0000000000008560 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8560:	55                   	push   %rbp
    8561:	48 89 e5             	mov    %rsp,%rbp
    8564:	48 83 ec 20          	sub    $0x20,%rsp
    8568:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    856c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8570:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8574:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8578:	48 89 d6             	mov    %rdx,%rsi
    857b:	48 89 c7             	mov    %rax,%rdi
    857e:	e8 5f 0f 00 00       	call   94e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8587:	c9                   	leave
    8588:	c3                   	ret

0000000000008589 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8589:	55                   	push   %rbp
    858a:	48 89 e5             	mov    %rsp,%rbp
    858d:	53                   	push   %rbx
    858e:	48 83 ec 18          	sub    $0x18,%rsp
    8592:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8596:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    859a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    859e:	48 89 c7             	mov    %rax,%rdi
    85a1:	e8 5a 0f 00 00       	call   9500 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    85a6:	48 8b 18             	mov    (%rax),%rbx
    85a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85ad:	48 89 c7             	mov    %rax,%rdi
    85b0:	e8 4b 0f 00 00       	call   9500 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    85b5:	48 8b 00             	mov    (%rax),%rax
    85b8:	48 39 c3             	cmp    %rax,%rbx
    85bb:	0f 95 c0             	setne  %al
    85be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85c2:	c9                   	leave
    85c3:	c3                   	ret

00000000000085c4 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    85c4:	55                   	push   %rbp
    85c5:	48 89 e5             	mov    %rsp,%rbp
    85c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    85cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85d0:	48 8b 00             	mov    (%rax),%rax
    85d3:	48 8d 50 18          	lea    0x18(%rax),%rdx
    85d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85db:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    85de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    85e2:	5d                   	pop    %rbp
    85e3:	c3                   	ret

00000000000085e4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    85e4:	55                   	push   %rbp
    85e5:	48 89 e5             	mov    %rsp,%rbp
    85e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    85ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f0:	48 8b 00             	mov    (%rax),%rax
    85f3:	5d                   	pop    %rbp
    85f4:	c3                   	ret
    85f5:	90                   	nop

00000000000085f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    85f6:	55                   	push   %rbp
    85f7:	48 89 e5             	mov    %rsp,%rbp
    85fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8606:	48 8b 08             	mov    (%rax),%rcx
    8609:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    860d:	48 89 d0             	mov    %rdx,%rax
    8610:	48 c1 e0 03          	shl    $0x3,%rax
    8614:	48 29 d0             	sub    %rdx,%rax
    8617:	48 c1 e0 02          	shl    $0x2,%rax
    861b:	48 01 c8             	add    %rcx,%rax
      }
    861e:	5d                   	pop    %rbp
    861f:	c3                   	ret

0000000000008620 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    8620:	55                   	push   %rbp
    8621:	48 89 e5             	mov    %rsp,%rbp
    8624:	53                   	push   %rbx
    8625:	48 83 ec 18          	sub    $0x18,%rsp
    8629:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    862d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    8631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8635:	48 89 c7             	mov    %rax,%rdi
    8638:	e8 d1 0e 00 00       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    863d:	84 c0                	test   %al,%al
    863f:	74 36                	je     8677 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    8641:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8645:	48 89 c7             	mov    %rax,%rdi
    8648:	e8 17 0f 00 00       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    864d:	48 89 c3             	mov    %rax,%rbx
    8650:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8654:	48 89 c7             	mov    %rax,%rdi
    8657:	e8 c4 0e 00 00       	call   9520 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    865c:	48 89 c1             	mov    %rax,%rcx
    865f:	48 8b 03             	mov    (%rbx),%rax
    8662:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    8666:	48 89 01             	mov    %rax,(%rcx)
    8669:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    866d:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8671:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8675:	eb 1e                	jmp    8695 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    8677:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    867b:	48 89 c7             	mov    %rax,%rdi
    867e:	e8 e1 0e 00 00       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8683:	48 89 c2             	mov    %rax,%rdx
    8686:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    868a:	48 89 d6             	mov    %rdx,%rsi
    868d:	48 89 c7             	mov    %rax,%rdi
    8690:	e8 dd 0e 00 00       	call   9572 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    8695:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8699:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    869d:	c9                   	leave
    869e:	c3                   	ret
    869f:	90                   	nop

00000000000086a0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    86a0:	55                   	push   %rbp
    86a1:	48 89 e5             	mov    %rsp,%rbp
    86a4:	48 83 ec 10          	sub    $0x10,%rsp
    86a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    86ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86b0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    86b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86b8:	48 8b 00             	mov    (%rax),%rax
    86bb:	48 29 c2             	sub    %rax,%rdx
    86be:	48 c1 fa 02          	sar    $0x2,%rdx
    86c2:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    86c9:	db b6 6d 
    86cc:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    86d0:	48 89 c2             	mov    %rax,%rdx
    86d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86d7:	48 8b 08             	mov    (%rax),%rcx
    86da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86de:	48 89 ce             	mov    %rcx,%rsi
    86e1:	48 89 c7             	mov    %rax,%rdi
    86e4:	e8 e3 0e 00 00       	call   95cc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    86e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ed:	48 89 c7             	mov    %rax,%rdi
    86f0:	e8 eb f5 ff ff       	call   7ce0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    86f5:	90                   	nop
    86f6:	c9                   	leave
    86f7:	c3                   	ret

00000000000086f8 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    86f8:	55                   	push   %rbp
    86f9:	48 89 e5             	mov    %rsp,%rbp
    86fc:	48 83 ec 10          	sub    $0x10,%rsp
    8700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8708:	48 89 c7             	mov    %rax,%rdi
    870b:	e8 f2 0e 00 00       	call   9602 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    8710:	90                   	nop
    8711:	c9                   	leave
    8712:	c3                   	ret
    8713:	90                   	nop

0000000000008714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8714:	55                   	push   %rbp
    8715:	48 89 e5             	mov    %rsp,%rbp
    8718:	48 83 ec 10          	sub    $0x10,%rsp
    871c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8724:	48 89 c7             	mov    %rax,%rdi
    8727:	e8 e2 0e 00 00       	call   960e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    872c:	90                   	nop
    872d:	c9                   	leave
    872e:	c3                   	ret
    872f:	90                   	nop

0000000000008730 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8730:	55                   	push   %rbp
    8731:	48 89 e5             	mov    %rsp,%rbp
    8734:	53                   	push   %rbx
    8735:	48 83 ec 28          	sub    $0x28,%rsp
    8739:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    873d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8741:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8745:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8749:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    874d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8751:	48 89 d6             	mov    %rdx,%rsi
    8754:	48 89 c7             	mov    %rax,%rdi
    8757:	e8 bd 0e 00 00       	call   9619 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    875c:	48 89 c1             	mov    %rax,%rcx
    875f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8763:	48 89 c2             	mov    %rax,%rdx
    8766:	48 89 ce             	mov    %rcx,%rsi
    8769:	48 89 df             	mov    %rbx,%rdi
    876c:	e8 09 0f 00 00       	call   967a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8771:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8779:	48 89 d6             	mov    %rdx,%rsi
    877c:	48 89 c7             	mov    %rax,%rdi
    877f:	e8 54 0f 00 00       	call   96d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    8784:	eb 1a                	jmp    87a0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    8786:	48 89 c3             	mov    %rax,%rbx
    8789:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    878d:	48 89 c7             	mov    %rax,%rdi
    8790:	e8 79 00 00 00       	call   880e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8795:	48 89 d8             	mov    %rbx,%rax
    8798:	48 89 c7             	mov    %rax,%rdi
    879b:	e8 50 bf ff ff       	call   46f0 <_Unwind_Resume@plt>
    87a0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87a4:	c9                   	leave
    87a5:	c3                   	ret

00000000000087a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    87a6:	55                   	push   %rbp
    87a7:	48 89 e5             	mov    %rsp,%rbp
    87aa:	48 83 ec 10          	sub    $0x10,%rsp
    87ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    87b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87b6:	48 89 c7             	mov    %rax,%rdi
    87b9:	e8 5a 0f 00 00       	call   9718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    87be:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    87c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87c5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    87c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87cd:	48 8b 00             	mov    (%rax),%rax
    87d0:	48 89 ce             	mov    %rcx,%rsi
    87d3:	48 89 c7             	mov    %rax,%rdi
    87d6:	e8 4b 0f 00 00       	call   9726 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    87db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87df:	48 89 c7             	mov    %rax,%rdi
    87e2:	e8 27 00 00 00       	call   880e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    87e7:	90                   	nop
    87e8:	c9                   	leave
    87e9:	c3                   	ret

00000000000087ea <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    87ea:	55                   	push   %rbp
    87eb:	48 89 e5             	mov    %rsp,%rbp
    87ee:	48 83 ec 10          	sub    $0x10,%rsp
    87f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    87f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87fa:	48 8b 10             	mov    (%rax),%rdx
    87fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8801:	48 89 d6             	mov    %rdx,%rsi
    8804:	48 89 c7             	mov    %rax,%rdi
    8807:	e8 44 0f 00 00       	call   9750 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    880c:	c9                   	leave
    880d:	c3                   	ret

000000000000880e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    880e:	55                   	push   %rbp
    880f:	48 89 e5             	mov    %rsp,%rbp
    8812:	48 83 ec 10          	sub    $0x10,%rsp
    8816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    881a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    881e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8822:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8826:	48 8b 00             	mov    (%rax),%rax
    8829:	48 29 c2             	sub    %rax,%rdx
    882c:	48 89 d0             	mov    %rdx,%rax
    882f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8833:	48 89 c2             	mov    %rax,%rdx
    8836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    883a:	48 8b 08             	mov    (%rax),%rcx
    883d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8841:	48 89 ce             	mov    %rcx,%rsi
    8844:	48 89 c7             	mov    %rax,%rdi
    8847:	e8 3c 0f 00 00       	call   9788 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    884c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8850:	48 89 c7             	mov    %rax,%rdi
    8853:	e8 a4 f4 ff ff       	call   7cfc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    8858:	90                   	nop
    8859:	c9                   	leave
    885a:	c3                   	ret
    885b:	90                   	nop

000000000000885c <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    885c:	55                   	push   %rbp
    885d:	48 89 e5             	mov    %rsp,%rbp
    8860:	48 83 ec 10          	sub    $0x10,%rsp
    8864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886c:	48 89 c7             	mov    %rax,%rdi
    886f:	e8 4a 0f 00 00       	call   97be <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    8874:	90                   	nop
    8875:	c9                   	leave
    8876:	c3                   	ret
    8877:	90                   	nop

0000000000008878 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8878:	55                   	push   %rbp
    8879:	48 89 e5             	mov    %rsp,%rbp
    887c:	48 83 ec 10          	sub    $0x10,%rsp
    8880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8888:	48 89 c7             	mov    %rax,%rdi
    888b:	e8 3a 0f 00 00       	call   97ca <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    8890:	90                   	nop
    8891:	c9                   	leave
    8892:	c3                   	ret
    8893:	90                   	nop

0000000000008894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8894:	55                   	push   %rbp
    8895:	48 89 e5             	mov    %rsp,%rbp
    8898:	53                   	push   %rbx
    8899:	48 83 ec 28          	sub    $0x28,%rsp
    889d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    88a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    88a9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    88ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    88b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88b5:	48 89 d6             	mov    %rdx,%rsi
    88b8:	48 89 c7             	mov    %rax,%rdi
    88bb:	e8 15 0f 00 00       	call   97d5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    88c0:	48 89 c1             	mov    %rax,%rcx
    88c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88c7:	48 89 c2             	mov    %rax,%rdx
    88ca:	48 89 ce             	mov    %rcx,%rsi
    88cd:	48 89 df             	mov    %rbx,%rdi
    88d0:	e8 61 0f 00 00       	call   9836 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    88d5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    88d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88dd:	48 89 d6             	mov    %rdx,%rsi
    88e0:	48 89 c7             	mov    %rax,%rdi
    88e3:	e8 ac 0f 00 00       	call   9894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    88e8:	eb 1a                	jmp    8904 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    88ea:	48 89 c3             	mov    %rax,%rbx
    88ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88f1:	48 89 c7             	mov    %rax,%rdi
    88f4:	e8 79 00 00 00       	call   8972 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    88f9:	48 89 d8             	mov    %rbx,%rax
    88fc:	48 89 c7             	mov    %rax,%rdi
    88ff:	e8 ec bd ff ff       	call   46f0 <_Unwind_Resume@plt>
    8904:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8908:	c9                   	leave
    8909:	c3                   	ret

000000000000890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    890a:	55                   	push   %rbp
    890b:	48 89 e5             	mov    %rsp,%rbp
    890e:	48 83 ec 10          	sub    $0x10,%rsp
    8912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    891a:	48 89 c7             	mov    %rax,%rdi
    891d:	e8 b2 0f 00 00       	call   98d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8922:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8929:	48 8b 48 08          	mov    0x8(%rax),%rcx
    892d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8931:	48 8b 00             	mov    (%rax),%rax
    8934:	48 89 ce             	mov    %rcx,%rsi
    8937:	48 89 c7             	mov    %rax,%rdi
    893a:	e8 a3 0f 00 00       	call   98e2 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    893f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8943:	48 89 c7             	mov    %rax,%rdi
    8946:	e8 27 00 00 00       	call   8972 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    894b:	90                   	nop
    894c:	c9                   	leave
    894d:	c3                   	ret

000000000000894e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    894e:	55                   	push   %rbp
    894f:	48 89 e5             	mov    %rsp,%rbp
    8952:	48 83 ec 10          	sub    $0x10,%rsp
    8956:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    895a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    895e:	48 8b 10             	mov    (%rax),%rdx
    8961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8965:	48 89 d6             	mov    %rdx,%rsi
    8968:	48 89 c7             	mov    %rax,%rdi
    896b:	e8 9c 0f 00 00       	call   990c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8970:	c9                   	leave
    8971:	c3                   	ret

0000000000008972 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8972:	55                   	push   %rbp
    8973:	48 89 e5             	mov    %rsp,%rbp
    8976:	48 83 ec 10          	sub    $0x10,%rsp
    897a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    897e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8982:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    898a:	48 8b 00             	mov    (%rax),%rax
    898d:	48 29 c2             	sub    %rax,%rdx
    8990:	48 89 d0             	mov    %rdx,%rax
    8993:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    8997:	48 89 c2             	mov    %rax,%rdx
    899a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    899e:	48 8b 08             	mov    (%rax),%rcx
    89a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a5:	48 89 ce             	mov    %rcx,%rsi
    89a8:	48 89 c7             	mov    %rax,%rdi
    89ab:	e8 94 0f 00 00       	call   9944 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    89b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89b4:	48 89 c7             	mov    %rax,%rdi
    89b7:	e8 5c f3 ff ff       	call   7d18 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    89bc:	90                   	nop
    89bd:	c9                   	leave
    89be:	c3                   	ret
    89bf:	90                   	nop

00000000000089c0 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    89c0:	55                   	push   %rbp
    89c1:	48 89 e5             	mov    %rsp,%rbp
    89c4:	48 83 ec 10          	sub    $0x10,%rsp
    89c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d0:	48 89 c7             	mov    %rax,%rdi
    89d3:	e8 a2 0f 00 00       	call   997a <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    89d8:	90                   	nop
    89d9:	c9                   	leave
    89da:	c3                   	ret
    89db:	90                   	nop

00000000000089dc <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    89dc:	55                   	push   %rbp
    89dd:	48 89 e5             	mov    %rsp,%rbp
    89e0:	48 83 ec 10          	sub    $0x10,%rsp
    89e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ec:	48 89 c7             	mov    %rax,%rdi
    89ef:	e8 92 0f 00 00       	call   9986 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    89f4:	90                   	nop
    89f5:	c9                   	leave
    89f6:	c3                   	ret
    89f7:	90                   	nop

00000000000089f8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    89f8:	55                   	push   %rbp
    89f9:	48 89 e5             	mov    %rsp,%rbp
    89fc:	53                   	push   %rbx
    89fd:	48 83 ec 28          	sub    $0x28,%rsp
    8a01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8a0d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8a11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8a15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a19:	48 89 d6             	mov    %rdx,%rsi
    8a1c:	48 89 c7             	mov    %rax,%rdi
    8a1f:	e8 6d 0f 00 00       	call   9991 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8a24:	48 89 c1             	mov    %rax,%rcx
    8a27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8a2b:	48 89 c2             	mov    %rax,%rdx
    8a2e:	48 89 ce             	mov    %rcx,%rsi
    8a31:	48 89 df             	mov    %rbx,%rdi
    8a34:	e8 b9 0f 00 00       	call   99f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8a39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8a3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a41:	48 89 d6             	mov    %rdx,%rsi
    8a44:	48 89 c7             	mov    %rax,%rdi
    8a47:	e8 04 10 00 00       	call   9a50 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    8a4c:	eb 1a                	jmp    8a68 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    8a4e:	48 89 c3             	mov    %rax,%rbx
    8a51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a55:	48 89 c7             	mov    %rax,%rdi
    8a58:	e8 79 00 00 00       	call   8ad6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8a5d:	48 89 d8             	mov    %rbx,%rax
    8a60:	48 89 c7             	mov    %rax,%rdi
    8a63:	e8 88 bc ff ff       	call   46f0 <_Unwind_Resume@plt>
    8a68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a6c:	c9                   	leave
    8a6d:	c3                   	ret

0000000000008a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8a6e:	55                   	push   %rbp
    8a6f:	48 89 e5             	mov    %rsp,%rbp
    8a72:	48 83 ec 10          	sub    $0x10,%rsp
    8a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a7e:	48 89 c7             	mov    %rax,%rdi
    8a81:	e8 0a 10 00 00       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8a86:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a8d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a95:	48 8b 00             	mov    (%rax),%rax
    8a98:	48 89 ce             	mov    %rcx,%rsi
    8a9b:	48 89 c7             	mov    %rax,%rdi
    8a9e:	e8 fb 0f 00 00       	call   9a9e <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    8aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aa7:	48 89 c7             	mov    %rax,%rdi
    8aaa:	e8 27 00 00 00       	call   8ad6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8aaf:	90                   	nop
    8ab0:	c9                   	leave
    8ab1:	c3                   	ret

0000000000008ab2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8ab2:	55                   	push   %rbp
    8ab3:	48 89 e5             	mov    %rsp,%rbp
    8ab6:	48 83 ec 10          	sub    $0x10,%rsp
    8aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac2:	48 8b 10             	mov    (%rax),%rdx
    8ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac9:	48 89 d6             	mov    %rdx,%rsi
    8acc:	48 89 c7             	mov    %rax,%rdi
    8acf:	e8 f4 0f 00 00       	call   9ac8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8ad4:	c9                   	leave
    8ad5:	c3                   	ret

0000000000008ad6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8ad6:	55                   	push   %rbp
    8ad7:	48 89 e5             	mov    %rsp,%rbp
    8ada:	48 83 ec 10          	sub    $0x10,%rsp
    8ade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ae6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aee:	48 8b 00             	mov    (%rax),%rax
    8af1:	48 29 c2             	sub    %rax,%rdx
    8af4:	48 89 d0             	mov    %rdx,%rax
    8af7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8afb:	48 89 c2             	mov    %rax,%rdx
    8afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b02:	48 8b 08             	mov    (%rax),%rcx
    8b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b09:	48 89 ce             	mov    %rcx,%rsi
    8b0c:	48 89 c7             	mov    %rax,%rdi
    8b0f:	e8 ec 0f 00 00       	call   9b00 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b18:	48 89 c7             	mov    %rax,%rdi
    8b1b:	e8 14 f2 ff ff       	call   7d34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    8b20:	90                   	nop
    8b21:	c9                   	leave
    8b22:	c3                   	ret
    8b23:	90                   	nop

0000000000008b24 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8b24:	55                   	push   %rbp
    8b25:	48 89 e5             	mov    %rsp,%rbp
    8b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b2c:	90                   	nop
    8b2d:	5d                   	pop    %rbp
    8b2e:	c3                   	ret
    8b2f:	90                   	nop

0000000000008b30 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8b30:	55                   	push   %rbp
    8b31:	48 89 e5             	mov    %rsp,%rbp
    8b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b38:	90                   	nop
    8b39:	5d                   	pop    %rbp
    8b3a:	c3                   	ret

0000000000008b3b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8b3b:	55                   	push   %rbp
    8b3c:	48 89 e5             	mov    %rsp,%rbp
    8b3f:	53                   	push   %rbx
    8b40:	48 83 ec 28          	sub    $0x28,%rsp
    8b44:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8b48:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8b4c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8b50:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b54:	48 89 d6             	mov    %rdx,%rsi
    8b57:	48 89 c7             	mov    %rax,%rdi
    8b5a:	e8 25 01 00 00       	call   8c84 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    8b5f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b63:	48 89 c7             	mov    %rax,%rdi
    8b66:	e8 ca 0f 00 00       	call   9b35 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8b6b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8b6f:	0f 92 c3             	setb   %bl
    8b72:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8b76:	48 89 c7             	mov    %rax,%rdi
    8b79:	e8 ee f1 ff ff       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    8b7e:	84 db                	test   %bl,%bl
    8b80:	74 0f                	je     8b91 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8b82:	48 8d 05 37 f5 00 00 	lea    0xf537(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8b89:	48 89 c7             	mov    %rax,%rdi
    8b8c:	e8 ef b5 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8b91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8b95:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b99:	c9                   	leave
    8b9a:	c3                   	ret
    8b9b:	90                   	nop

0000000000008b9c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8b9c:	55                   	push   %rbp
    8b9d:	48 89 e5             	mov    %rsp,%rbp
    8ba0:	53                   	push   %rbx
    8ba1:	48 83 ec 28          	sub    $0x28,%rsp
    8ba5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ba9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8bad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8bb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bb5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8bb9:	48 89 d6             	mov    %rdx,%rsi
    8bbc:	48 89 c7             	mov    %rax,%rdi
    8bbf:	e8 b4 0f 00 00       	call   9b78 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8bc4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bcc:	48 89 d6             	mov    %rdx,%rsi
    8bcf:	48 89 c7             	mov    %rax,%rdi
    8bd2:	e8 d3 0f 00 00       	call   9baa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8bd7:	eb 1a                	jmp    8bf3 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8bd9:	48 89 c3             	mov    %rax,%rbx
    8bdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8be0:	48 89 c7             	mov    %rax,%rdi
    8be3:	e8 6c f0 ff ff       	call   7c54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8be8:	48 89 d8             	mov    %rbx,%rax
    8beb:	48 89 c7             	mov    %rax,%rdi
    8bee:	e8 fd ba ff ff       	call   46f0 <_Unwind_Resume@plt>
    8bf3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8bf7:	c9                   	leave
    8bf8:	c3                   	ret
    8bf9:	90                   	nop

0000000000008bfa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8bfa:	55                   	push   %rbp
    8bfb:	48 89 e5             	mov    %rsp,%rbp
    8bfe:	48 83 ec 10          	sub    $0x10,%rsp
    8c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c0e:	48 89 c7             	mov    %rax,%rdi
    8c11:	e8 24 00 00 00       	call   8c3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8c16:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8c19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c1d:	48 8b 00             	mov    (%rax),%rax
    8c20:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c24:	48 89 ce             	mov    %rcx,%rsi
    8c27:	48 89 c7             	mov    %rax,%rdi
    8c2a:	e8 dc 0f 00 00       	call   9c0b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8c2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8c33:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8c37:	90                   	nop
    8c38:	c9                   	leave
    8c39:	c3                   	ret

0000000000008c3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8c3a:	55                   	push   %rbp
    8c3b:	48 89 e5             	mov    %rsp,%rbp
    8c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c46:	5d                   	pop    %rbp
    8c47:	c3                   	ret

0000000000008c48 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8c48:	55                   	push   %rbp
    8c49:	48 89 e5             	mov    %rsp,%rbp
    8c4c:	48 83 ec 20          	sub    $0x20,%rsp
    8c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8c58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8c5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c64:	48 89 d6             	mov    %rdx,%rsi
    8c67:	48 89 c7             	mov    %rax,%rdi
    8c6a:	e8 c5 0f 00 00       	call   9c34 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    8c6f:	90                   	nop
    8c70:	c9                   	leave
    8c71:	c3                   	ret

0000000000008c72 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8c72:	55                   	push   %rbp
    8c73:	48 89 e5             	mov    %rsp,%rbp
    8c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8c7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c82:	5d                   	pop    %rbp
    8c83:	c3                   	ret

0000000000008c84 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8c84:	55                   	push   %rbp
    8c85:	48 89 e5             	mov    %rsp,%rbp
    8c88:	48 83 ec 10          	sub    $0x10,%rsp
    8c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8c94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c9c:	48 89 d6             	mov    %rdx,%rsi
    8c9f:	48 89 c7             	mov    %rax,%rdi
    8ca2:	e8 b3 0f 00 00       	call   9c5a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    8ca7:	90                   	nop
    8ca8:	c9                   	leave
    8ca9:	c3                   	ret

0000000000008caa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8caa:	55                   	push   %rbp
    8cab:	48 89 e5             	mov    %rsp,%rbp
    8cae:	48 83 ec 20          	sub    $0x20,%rsp
    8cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8cbe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8cc3:	74 17                	je     8cdc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ccd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8cd1:	48 89 ce             	mov    %rcx,%rsi
    8cd4:	48 89 c7             	mov    %rax,%rdi
    8cd7:	e8 8d 0f 00 00       	call   9c69 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    8cdc:	90                   	nop
    8cdd:	c9                   	leave
    8cde:	c3                   	ret
    8cdf:	90                   	nop

0000000000008ce0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8ce0:	55                   	push   %rbp
    8ce1:	48 89 e5             	mov    %rsp,%rbp
    8ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ce8:	90                   	nop
    8ce9:	5d                   	pop    %rbp
    8cea:	c3                   	ret
    8ceb:	90                   	nop

0000000000008cec <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8cec:	55                   	push   %rbp
    8ced:	48 89 e5             	mov    %rsp,%rbp
    8cf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cf4:	90                   	nop
    8cf5:	5d                   	pop    %rbp
    8cf6:	c3                   	ret

0000000000008cf7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8cf7:	55                   	push   %rbp
    8cf8:	48 89 e5             	mov    %rsp,%rbp
    8cfb:	53                   	push   %rbx
    8cfc:	48 83 ec 28          	sub    $0x28,%rsp
    8d00:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8d04:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8d08:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8d0c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d10:	48 89 d6             	mov    %rdx,%rsi
    8d13:	48 89 c7             	mov    %rax,%rdi
    8d16:	e8 25 01 00 00       	call   8e40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8d1b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d1f:	48 89 c7             	mov    %rax,%rdi
    8d22:	e8 70 0f 00 00       	call   9c97 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8d27:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8d2b:	0f 92 c3             	setb   %bl
    8d2e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d32:	48 89 c7             	mov    %rax,%rdi
    8d35:	e8 a0 f1 ff ff       	call   7eda <_ZNSaI21VkExtensionPropertiesED1Ev>
    8d3a:	84 db                	test   %bl,%bl
    8d3c:	74 0f                	je     8d4d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8d3e:	48 8d 05 7b f3 00 00 	lea    0xf37b(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8d45:	48 89 c7             	mov    %rax,%rdi
    8d48:	e8 33 b4 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8d4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8d51:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d55:	c9                   	leave
    8d56:	c3                   	ret
    8d57:	90                   	nop

0000000000008d58 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8d58:	55                   	push   %rbp
    8d59:	48 89 e5             	mov    %rsp,%rbp
    8d5c:	53                   	push   %rbx
    8d5d:	48 83 ec 28          	sub    $0x28,%rsp
    8d61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d69:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8d6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d71:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8d75:	48 89 d6             	mov    %rdx,%rsi
    8d78:	48 89 c7             	mov    %rax,%rdi
    8d7b:	e8 5a 0f 00 00       	call   9cda <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8d80:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d88:	48 89 d6             	mov    %rdx,%rsi
    8d8b:	48 89 c7             	mov    %rax,%rdi
    8d8e:	e8 79 0f 00 00       	call   9d0c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8d93:	eb 1a                	jmp    8daf <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8d95:	48 89 c3             	mov    %rax,%rbx
    8d98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d9c:	48 89 c7             	mov    %rax,%rdi
    8d9f:	e8 cc ee ff ff       	call   7c70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8da4:	48 89 d8             	mov    %rbx,%rax
    8da7:	48 89 c7             	mov    %rax,%rdi
    8daa:	e8 41 b9 ff ff       	call   46f0 <_Unwind_Resume@plt>
    8daf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8db3:	c9                   	leave
    8db4:	c3                   	ret
    8db5:	90                   	nop

0000000000008db6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8db6:	55                   	push   %rbp
    8db7:	48 89 e5             	mov    %rsp,%rbp
    8dba:	48 83 ec 10          	sub    $0x10,%rsp
    8dbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dca:	48 89 c7             	mov    %rax,%rdi
    8dcd:	e8 24 00 00 00       	call   8df6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8dd2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dd9:	48 8b 00             	mov    (%rax),%rax
    8ddc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8de0:	48 89 ce             	mov    %rcx,%rsi
    8de3:	48 89 c7             	mov    %rax,%rdi
    8de6:	e8 82 0f 00 00       	call   9d6d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8deb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8def:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8df3:	90                   	nop
    8df4:	c9                   	leave
    8df5:	c3                   	ret

0000000000008df6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8df6:	55                   	push   %rbp
    8df7:	48 89 e5             	mov    %rsp,%rbp
    8dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e02:	5d                   	pop    %rbp
    8e03:	c3                   	ret

0000000000008e04 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8e04:	55                   	push   %rbp
    8e05:	48 89 e5             	mov    %rsp,%rbp
    8e08:	48 83 ec 20          	sub    $0x20,%rsp
    8e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8e18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e20:	48 89 d6             	mov    %rdx,%rsi
    8e23:	48 89 c7             	mov    %rax,%rdi
    8e26:	e8 6b 0f 00 00       	call   9d96 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8e2b:	90                   	nop
    8e2c:	c9                   	leave
    8e2d:	c3                   	ret

0000000000008e2e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8e2e:	55                   	push   %rbp
    8e2f:	48 89 e5             	mov    %rsp,%rbp
    8e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8e3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e3e:	5d                   	pop    %rbp
    8e3f:	c3                   	ret

0000000000008e40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8e40:	55                   	push   %rbp
    8e41:	48 89 e5             	mov    %rsp,%rbp
    8e44:	48 83 ec 10          	sub    $0x10,%rsp
    8e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8e50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e58:	48 89 d6             	mov    %rdx,%rsi
    8e5b:	48 89 c7             	mov    %rax,%rdi
    8e5e:	e8 59 0f 00 00       	call   9dbc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8e63:	90                   	nop
    8e64:	c9                   	leave
    8e65:	c3                   	ret

0000000000008e66 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8e66:	55                   	push   %rbp
    8e67:	48 89 e5             	mov    %rsp,%rbp
    8e6a:	48 83 ec 20          	sub    $0x20,%rsp
    8e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8e7a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8e7f:	74 17                	je     8e98 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8e81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e8d:	48 89 ce             	mov    %rcx,%rsi
    8e90:	48 89 c7             	mov    %rax,%rdi
    8e93:	e8 33 0f 00 00       	call   9dcb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    8e98:	90                   	nop
    8e99:	c9                   	leave
    8e9a:	c3                   	ret
    8e9b:	90                   	nop

0000000000008e9c <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e9c:	55                   	push   %rbp
    8e9d:	48 89 e5             	mov    %rsp,%rbp
    8ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ea4:	90                   	nop
    8ea5:	5d                   	pop    %rbp
    8ea6:	c3                   	ret
    8ea7:	90                   	nop

0000000000008ea8 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8ea8:	55                   	push   %rbp
    8ea9:	48 89 e5             	mov    %rsp,%rbp
    8eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8eb0:	90                   	nop
    8eb1:	5d                   	pop    %rbp
    8eb2:	c3                   	ret

0000000000008eb3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8eb3:	55                   	push   %rbp
    8eb4:	48 89 e5             	mov    %rsp,%rbp
    8eb7:	53                   	push   %rbx
    8eb8:	48 83 ec 28          	sub    $0x28,%rsp
    8ebc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8ec0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8ec4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8ec8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8ecc:	48 89 d6             	mov    %rdx,%rsi
    8ecf:	48 89 c7             	mov    %rax,%rdi
    8ed2:	e8 e9 00 00 00       	call   8fc0 <_ZNSaIPKcEC1ERKS1_>
    8ed7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8edb:	48 89 c7             	mov    %rax,%rdi
    8ede:	e8 16 0f 00 00       	call   9df9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    8ee3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8ee7:	0f 92 c3             	setb   %bl
    8eea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8eee:	48 89 c7             	mov    %rax,%rdi
    8ef1:	e8 52 f1 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    8ef6:	84 db                	test   %bl,%bl
    8ef8:	74 0f                	je     8f09 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8efa:	48 8d 05 bf f1 00 00 	lea    0xf1bf(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8f01:	48 89 c7             	mov    %rax,%rdi
    8f04:	e8 77 b2 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8f09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8f0d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f11:	c9                   	leave
    8f12:	c3                   	ret
    8f13:	90                   	nop

0000000000008f14 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8f14:	55                   	push   %rbp
    8f15:	48 89 e5             	mov    %rsp,%rbp
    8f18:	53                   	push   %rbx
    8f19:	48 83 ec 28          	sub    $0x28,%rsp
    8f1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f25:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8f29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f2d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f31:	48 89 d6             	mov    %rdx,%rsi
    8f34:	48 89 c7             	mov    %rax,%rdi
    8f37:	e8 00 0f 00 00       	call   9e3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8f3c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f44:	48 89 d6             	mov    %rdx,%rsi
    8f47:	48 89 c7             	mov    %rax,%rdi
    8f4a:	e8 1f 0f 00 00       	call   9e6e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    8f4f:	eb 1a                	jmp    8f6b <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    8f51:	48 89 c3             	mov    %rax,%rbx
    8f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f58:	48 89 c7             	mov    %rax,%rdi
    8f5b:	e8 2c ed ff ff       	call   7c8c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8f60:	48 89 d8             	mov    %rbx,%rax
    8f63:	48 89 c7             	mov    %rax,%rdi
    8f66:	e8 85 b7 ff ff       	call   46f0 <_Unwind_Resume@plt>
    8f6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f6f:	c9                   	leave
    8f70:	c3                   	ret
    8f71:	90                   	nop

0000000000008f72 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8f72:	55                   	push   %rbp
    8f73:	48 89 e5             	mov    %rsp,%rbp
    8f76:	48 83 ec 10          	sub    $0x10,%rsp
    8f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f86:	48 89 c7             	mov    %rax,%rdi
    8f89:	e8 24 00 00 00       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    8f8e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f95:	48 8b 00             	mov    (%rax),%rax
    8f98:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f9c:	48 89 ce             	mov    %rcx,%rsi
    8f9f:	48 89 c7             	mov    %rax,%rdi
    8fa2:	e8 1d 0f 00 00       	call   9ec4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8fa7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8fab:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8faf:	90                   	nop
    8fb0:	c9                   	leave
    8fb1:	c3                   	ret

0000000000008fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8fb2:	55                   	push   %rbp
    8fb3:	48 89 e5             	mov    %rsp,%rbp
    8fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fbe:	5d                   	pop    %rbp
    8fbf:	c3                   	ret

0000000000008fc0 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8fc0:	55                   	push   %rbp
    8fc1:	48 89 e5             	mov    %rsp,%rbp
    8fc4:	48 83 ec 10          	sub    $0x10,%rsp
    8fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8fd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd8:	48 89 d6             	mov    %rdx,%rsi
    8fdb:	48 89 c7             	mov    %rax,%rdi
    8fde:	e8 0b 0f 00 00       	call   9eee <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    8fe3:	90                   	nop
    8fe4:	c9                   	leave
    8fe5:	c3                   	ret

0000000000008fe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    8fe6:	55                   	push   %rbp
    8fe7:	48 89 e5             	mov    %rsp,%rbp
    8fea:	48 83 ec 20          	sub    $0x20,%rsp
    8fee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ff2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ff6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8ffa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8fff:	74 17                	je     9018 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9005:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9009:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    900d:	48 89 ce             	mov    %rcx,%rsi
    9010:	48 89 c7             	mov    %rax,%rdi
    9013:	e8 e5 0e 00 00       	call   9efd <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    9018:	90                   	nop
    9019:	c9                   	leave
    901a:	c3                   	ret
    901b:	90                   	nop

000000000000901c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    901c:	55                   	push   %rbp
    901d:	48 89 e5             	mov    %rsp,%rbp
    9020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9024:	90                   	nop
    9025:	5d                   	pop    %rbp
    9026:	c3                   	ret
    9027:	90                   	nop

0000000000009028 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9028:	55                   	push   %rbp
    9029:	48 89 e5             	mov    %rsp,%rbp
    902c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9030:	90                   	nop
    9031:	5d                   	pop    %rbp
    9032:	c3                   	ret

0000000000009033 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9033:	55                   	push   %rbp
    9034:	48 89 e5             	mov    %rsp,%rbp
    9037:	53                   	push   %rbx
    9038:	48 83 ec 28          	sub    $0x28,%rsp
    903c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9040:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9044:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9048:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    904c:	48 89 d6             	mov    %rdx,%rsi
    904f:	48 89 c7             	mov    %rax,%rdi
    9052:	e8 25 01 00 00       	call   917c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9057:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    905b:	48 89 c7             	mov    %rax,%rdi
    905e:	e8 c8 0e 00 00       	call   9f2b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    9063:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9067:	0f 92 c3             	setb   %bl
    906a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    906e:	48 89 c7             	mov    %rax,%rdi
    9071:	e8 ee f0 ff ff       	call   8164 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    9076:	84 db                	test   %bl,%bl
    9078:	74 0f                	je     9089 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    907a:	48 8d 05 3f f0 00 00 	lea    0xf03f(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9081:	48 89 c7             	mov    %rax,%rdi
    9084:	e8 f7 b0 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9089:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    908d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9091:	c9                   	leave
    9092:	c3                   	ret
    9093:	90                   	nop

0000000000009094 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9094:	55                   	push   %rbp
    9095:	48 89 e5             	mov    %rsp,%rbp
    9098:	53                   	push   %rbx
    9099:	48 83 ec 28          	sub    $0x28,%rsp
    909d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    90a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    90a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    90b1:	48 89 d6             	mov    %rdx,%rsi
    90b4:	48 89 c7             	mov    %rax,%rdi
    90b7:	e8 b2 0e 00 00       	call   9f6e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    90bc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    90c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90c4:	48 89 d6             	mov    %rdx,%rsi
    90c7:	48 89 c7             	mov    %rax,%rdi
    90ca:	e8 d1 0e 00 00       	call   9fa0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    90cf:	eb 1a                	jmp    90eb <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    90d1:	48 89 c3             	mov    %rax,%rbx
    90d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90d8:	48 89 c7             	mov    %rax,%rdi
    90db:	e8 c8 eb ff ff       	call   7ca8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    90e0:	48 89 d8             	mov    %rbx,%rax
    90e3:	48 89 c7             	mov    %rax,%rdi
    90e6:	e8 05 b6 ff ff       	call   46f0 <_Unwind_Resume@plt>
    90eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90ef:	c9                   	leave
    90f0:	c3                   	ret
    90f1:	90                   	nop

00000000000090f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    90f2:	55                   	push   %rbp
    90f3:	48 89 e5             	mov    %rsp,%rbp
    90f6:	48 83 ec 10          	sub    $0x10,%rsp
    90fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9106:	48 89 c7             	mov    %rax,%rdi
    9109:	e8 24 00 00 00       	call   9132 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    910e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9115:	48 8b 00             	mov    (%rax),%rax
    9118:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    911c:	48 89 ce             	mov    %rcx,%rsi
    911f:	48 89 c7             	mov    %rax,%rdi
    9122:	e8 cf 0e 00 00       	call   9ff6 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9127:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    912b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    912f:	90                   	nop
    9130:	c9                   	leave
    9131:	c3                   	ret

0000000000009132 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9132:	55                   	push   %rbp
    9133:	48 89 e5             	mov    %rsp,%rbp
    9136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    913a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    913e:	5d                   	pop    %rbp
    913f:	c3                   	ret

0000000000009140 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9140:	55                   	push   %rbp
    9141:	48 89 e5             	mov    %rsp,%rbp
    9144:	48 83 ec 20          	sub    $0x20,%rsp
    9148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    914c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9150:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9154:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    915c:	48 89 d6             	mov    %rdx,%rsi
    915f:	48 89 c7             	mov    %rax,%rdi
    9162:	e8 b8 0e 00 00       	call   a01f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9167:	90                   	nop
    9168:	c9                   	leave
    9169:	c3                   	ret

000000000000916a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    916a:	55                   	push   %rbp
    916b:	48 89 e5             	mov    %rsp,%rbp
    916e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9172:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9176:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    917a:	5d                   	pop    %rbp
    917b:	c3                   	ret

000000000000917c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    917c:	55                   	push   %rbp
    917d:	48 89 e5             	mov    %rsp,%rbp
    9180:	48 83 ec 10          	sub    $0x10,%rsp
    9184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9188:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    918c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9190:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9194:	48 89 d6             	mov    %rdx,%rsi
    9197:	48 89 c7             	mov    %rax,%rdi
    919a:	e8 a7 0e 00 00       	call   a046 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    919f:	90                   	nop
    91a0:	c9                   	leave
    91a1:	c3                   	ret

00000000000091a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    91a2:	55                   	push   %rbp
    91a3:	48 89 e5             	mov    %rsp,%rbp
    91a6:	48 83 ec 20          	sub    $0x20,%rsp
    91aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    91b6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    91bb:	74 17                	je     91d4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    91bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    91c9:	48 89 ce             	mov    %rcx,%rsi
    91cc:	48 89 c7             	mov    %rax,%rdi
    91cf:	e8 81 0e 00 00       	call   a055 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    91d4:	90                   	nop
    91d5:	c9                   	leave
    91d6:	c3                   	ret
    91d7:	90                   	nop

00000000000091d8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    91d8:	55                   	push   %rbp
    91d9:	48 89 e5             	mov    %rsp,%rbp
    91dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91e0:	90                   	nop
    91e1:	5d                   	pop    %rbp
    91e2:	c3                   	ret
    91e3:	90                   	nop

00000000000091e4 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    91e4:	55                   	push   %rbp
    91e5:	48 89 e5             	mov    %rsp,%rbp
    91e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91ec:	90                   	nop
    91ed:	5d                   	pop    %rbp
    91ee:	c3                   	ret

00000000000091ef <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    91ef:	55                   	push   %rbp
    91f0:	48 89 e5             	mov    %rsp,%rbp
    91f3:	53                   	push   %rbx
    91f4:	48 83 ec 28          	sub    $0x28,%rsp
    91f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    91fc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9200:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9204:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9208:	48 89 d6             	mov    %rdx,%rsi
    920b:	48 89 c7             	mov    %rax,%rdi
    920e:	e8 25 01 00 00       	call   9338 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    9213:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9217:	48 89 c7             	mov    %rax,%rdi
    921a:	e8 64 0e 00 00       	call   a083 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    921f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9223:	0f 92 c3             	setb   %bl
    9226:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    922a:	48 89 c7             	mov    %rax,%rdi
    922d:	e8 96 f0 ff ff       	call   82c8 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9232:	84 db                	test   %bl,%bl
    9234:	74 0f                	je     9245 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9236:	48 8d 05 83 ee 00 00 	lea    0xee83(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    923d:	48 89 c7             	mov    %rax,%rdi
    9240:	e8 3b af ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9245:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9249:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    924d:	c9                   	leave
    924e:	c3                   	ret
    924f:	90                   	nop

0000000000009250 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9250:	55                   	push   %rbp
    9251:	48 89 e5             	mov    %rsp,%rbp
    9254:	53                   	push   %rbx
    9255:	48 83 ec 28          	sub    $0x28,%rsp
    9259:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    925d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9261:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9269:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    926d:	48 89 d6             	mov    %rdx,%rsi
    9270:	48 89 c7             	mov    %rax,%rdi
    9273:	e8 4e 0e 00 00       	call   a0c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9278:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    927c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9280:	48 89 d6             	mov    %rdx,%rsi
    9283:	48 89 c7             	mov    %rax,%rdi
    9286:	e8 6d 0e 00 00       	call   a0f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    928b:	eb 1a                	jmp    92a7 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    928d:	48 89 c3             	mov    %rax,%rbx
    9290:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9294:	48 89 c7             	mov    %rax,%rdi
    9297:	e8 28 ea ff ff       	call   7cc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    929c:	48 89 d8             	mov    %rbx,%rax
    929f:	48 89 c7             	mov    %rax,%rdi
    92a2:	e8 49 b4 ff ff       	call   46f0 <_Unwind_Resume@plt>
    92a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92ab:	c9                   	leave
    92ac:	c3                   	ret
    92ad:	90                   	nop

00000000000092ae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    92ae:	55                   	push   %rbp
    92af:	48 89 e5             	mov    %rsp,%rbp
    92b2:	48 83 ec 10          	sub    $0x10,%rsp
    92b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    92be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92c2:	48 89 c7             	mov    %rax,%rdi
    92c5:	e8 24 00 00 00       	call   92ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    92ca:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    92cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d1:	48 8b 00             	mov    (%rax),%rax
    92d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    92d8:	48 89 ce             	mov    %rcx,%rsi
    92db:	48 89 c7             	mov    %rax,%rdi
    92de:	e8 75 0e 00 00       	call   a158 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    92e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92e7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    92eb:	90                   	nop
    92ec:	c9                   	leave
    92ed:	c3                   	ret

00000000000092ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    92ee:	55                   	push   %rbp
    92ef:	48 89 e5             	mov    %rsp,%rbp
    92f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    92f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92fa:	5d                   	pop    %rbp
    92fb:	c3                   	ret

00000000000092fc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    92fc:	55                   	push   %rbp
    92fd:	48 89 e5             	mov    %rsp,%rbp
    9300:	48 83 ec 20          	sub    $0x20,%rsp
    9304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    930c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9310:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9318:	48 89 d6             	mov    %rdx,%rsi
    931b:	48 89 c7             	mov    %rax,%rdi
    931e:	e8 5e 0e 00 00       	call   a181 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    9323:	90                   	nop
    9324:	c9                   	leave
    9325:	c3                   	ret

0000000000009326 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9326:	55                   	push   %rbp
    9327:	48 89 e5             	mov    %rsp,%rbp
    932a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    932e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9332:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9336:	5d                   	pop    %rbp
    9337:	c3                   	ret

0000000000009338 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9338:	55                   	push   %rbp
    9339:	48 89 e5             	mov    %rsp,%rbp
    933c:	48 83 ec 10          	sub    $0x10,%rsp
    9340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9344:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9348:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    934c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9350:	48 89 d6             	mov    %rdx,%rsi
    9353:	48 89 c7             	mov    %rax,%rdi
    9356:	e8 4d 0e 00 00       	call   a1a8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    935b:	90                   	nop
    935c:	c9                   	leave
    935d:	c3                   	ret

000000000000935e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    935e:	55                   	push   %rbp
    935f:	48 89 e5             	mov    %rsp,%rbp
    9362:	48 83 ec 20          	sub    $0x20,%rsp
    9366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    936a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    936e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9372:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9377:	74 17                	je     9390 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    937d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9381:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9385:	48 89 ce             	mov    %rcx,%rsi
    9388:	48 89 c7             	mov    %rax,%rdi
    938b:	e8 27 0e 00 00       	call   a1b7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    9390:	90                   	nop
    9391:	c9                   	leave
    9392:	c3                   	ret
    9393:	90                   	nop

0000000000009394 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9394:	55                   	push   %rbp
    9395:	48 89 e5             	mov    %rsp,%rbp
    9398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    939c:	90                   	nop
    939d:	5d                   	pop    %rbp
    939e:	c3                   	ret
    939f:	90                   	nop

00000000000093a0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    93a0:	55                   	push   %rbp
    93a1:	48 89 e5             	mov    %rsp,%rbp
    93a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93a8:	90                   	nop
    93a9:	5d                   	pop    %rbp
    93aa:	c3                   	ret

00000000000093ab <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    93ab:	55                   	push   %rbp
    93ac:	48 89 e5             	mov    %rsp,%rbp
    93af:	53                   	push   %rbx
    93b0:	48 83 ec 28          	sub    $0x28,%rsp
    93b4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    93b8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    93bc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    93c0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93c4:	48 89 d6             	mov    %rdx,%rsi
    93c7:	48 89 c7             	mov    %rax,%rdi
    93ca:	e8 d7 01 00 00       	call   95a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    93cf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93d3:	48 89 c7             	mov    %rax,%rdi
    93d6:	e8 0a 0e 00 00       	call   a1e5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    93db:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    93df:	0f 92 c3             	setb   %bl
    93e2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93e6:	48 89 c7             	mov    %rax,%rdi
    93e9:	e8 76 f0 ff ff       	call   8464 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    93ee:	84 db                	test   %bl,%bl
    93f0:	74 0f                	je     9401 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    93f2:	48 8d 05 c7 ec 00 00 	lea    0xecc7(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    93f9:	48 89 c7             	mov    %rax,%rdi
    93fc:	e8 7f ad ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9401:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9405:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9409:	c9                   	leave
    940a:	c3                   	ret
    940b:	90                   	nop

000000000000940c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    940c:	55                   	push   %rbp
    940d:	48 89 e5             	mov    %rsp,%rbp
    9410:	53                   	push   %rbx
    9411:	48 83 ec 28          	sub    $0x28,%rsp
    9415:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9419:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    941d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9421:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9425:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9429:	48 89 d6             	mov    %rdx,%rsi
    942c:	48 89 c7             	mov    %rax,%rdi
    942f:	e8 f4 0d 00 00       	call   a228 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    9434:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    943c:	48 89 d6             	mov    %rdx,%rsi
    943f:	48 89 c7             	mov    %rax,%rdi
    9442:	e8 13 0e 00 00       	call   a25a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    9447:	eb 1a                	jmp    9463 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    9449:	48 89 c3             	mov    %rax,%rbx
    944c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9450:	48 89 c7             	mov    %rax,%rdi
    9453:	e8 88 e8 ff ff       	call   7ce0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    9458:	48 89 d8             	mov    %rbx,%rax
    945b:	48 89 c7             	mov    %rax,%rdi
    945e:	e8 8d b2 ff ff       	call   46f0 <_Unwind_Resume@plt>
    9463:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9467:	c9                   	leave
    9468:	c3                   	ret
    9469:	90                   	nop

000000000000946a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    946a:	55                   	push   %rbp
    946b:	48 89 e5             	mov    %rsp,%rbp
    946e:	48 83 ec 10          	sub    $0x10,%rsp
    9472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    947a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947e:	48 89 c7             	mov    %rax,%rdi
    9481:	e8 24 00 00 00       	call   94aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    9486:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    948d:	48 8b 00             	mov    (%rax),%rax
    9490:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9494:	48 89 ce             	mov    %rcx,%rsi
    9497:	48 89 c7             	mov    %rax,%rdi
    949a:	e8 1c 0e 00 00       	call   a2bb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    949f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    94a3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    94a7:	90                   	nop
    94a8:	c9                   	leave
    94a9:	c3                   	ret

00000000000094aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    94aa:	55                   	push   %rbp
    94ab:	48 89 e5             	mov    %rsp,%rbp
    94ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    94b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b6:	5d                   	pop    %rbp
    94b7:	c3                   	ret

00000000000094b8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    94b8:	55                   	push   %rbp
    94b9:	48 89 e5             	mov    %rsp,%rbp
    94bc:	48 83 ec 20          	sub    $0x20,%rsp
    94c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    94cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d4:	48 89 d6             	mov    %rdx,%rsi
    94d7:	48 89 c7             	mov    %rax,%rdi
    94da:	e8 05 0e 00 00       	call   a2e4 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    94df:	90                   	nop
    94e0:	c9                   	leave
    94e1:	c3                   	ret

00000000000094e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    94e2:	55                   	push   %rbp
    94e3:	48 89 e5             	mov    %rsp,%rbp
    94e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    94ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94f2:	48 8b 10             	mov    (%rax),%rdx
    94f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f9:	48 89 10             	mov    %rdx,(%rax)
    94fc:	90                   	nop
    94fd:	5d                   	pop    %rbp
    94fe:	c3                   	ret
    94ff:	90                   	nop

0000000000009500 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    9500:	55                   	push   %rbp
    9501:	48 89 e5             	mov    %rsp,%rbp
    9504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    950c:	5d                   	pop    %rbp
    950d:	c3                   	ret

000000000000950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    950e:	55                   	push   %rbp
    950f:	48 89 e5             	mov    %rsp,%rbp
    9512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    9516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    951a:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    951e:	5d                   	pop    %rbp
    951f:	c3                   	ret

0000000000009520 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    9520:	55                   	push   %rbp
    9521:	48 89 e5             	mov    %rsp,%rbp
    9524:	48 83 ec 10          	sub    $0x10,%rsp
    9528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    952c:	e8 4d b5 ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
    9531:	84 c0                	test   %al,%al
    9533:	74 1a                	je     954f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9539:	48 89 c7             	mov    %rax,%rdi
    953c:	e8 cd ff ff ff       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    9541:	83 f0 01             	xor    $0x1,%eax
    9544:	84 c0                	test   %al,%al
    9546:	74 07                	je     954f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9548:	b8 01 00 00 00       	mov    $0x1,%eax
    954d:	eb 05                	jmp    9554 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    954f:	b8 00 00 00 00       	mov    $0x0,%eax
    9554:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    9556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    955a:	48 89 c7             	mov    %rax,%rdi
    955d:	e8 a8 0d 00 00       	call   a30a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    9562:	c9                   	leave
    9563:	c3                   	ret

0000000000009564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9564:	55                   	push   %rbp
    9565:	48 89 e5             	mov    %rsp,%rbp
    9568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    956c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9570:	5d                   	pop    %rbp
    9571:	c3                   	ret

0000000000009572 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    9572:	55                   	push   %rbp
    9573:	48 89 e5             	mov    %rsp,%rbp
    9576:	53                   	push   %rbx
    9577:	48 83 ec 18          	sub    $0x18,%rsp
    957b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    957f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    9583:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9587:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    958b:	48 89 c7             	mov    %rax,%rdi
    958e:	e8 d1 ff ff ff       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9593:	48 89 c6             	mov    %rax,%rsi
    9596:	48 89 df             	mov    %rbx,%rdi
    9599:	e8 7a 0d 00 00       	call   a318 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    959e:	90                   	nop
    959f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95a3:	c9                   	leave
    95a4:	c3                   	ret
    95a5:	90                   	nop

00000000000095a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    95a6:	55                   	push   %rbp
    95a7:	48 89 e5             	mov    %rsp,%rbp
    95aa:	48 83 ec 10          	sub    $0x10,%rsp
    95ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    95b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    95ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95be:	48 89 d6             	mov    %rdx,%rsi
    95c1:	48 89 c7             	mov    %rax,%rdi
    95c4:	e8 95 0d 00 00       	call   a35e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    95c9:	90                   	nop
    95ca:	c9                   	leave
    95cb:	c3                   	ret

00000000000095cc <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    95cc:	55                   	push   %rbp
    95cd:	48 89 e5             	mov    %rsp,%rbp
    95d0:	48 83 ec 20          	sub    $0x20,%rsp
    95d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    95dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    95e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    95e5:	74 17                	je     95fe <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    95e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    95ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95f3:	48 89 ce             	mov    %rcx,%rsi
    95f6:	48 89 c7             	mov    %rax,%rdi
    95f9:	e8 6f 0d 00 00       	call   a36d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    95fe:	90                   	nop
    95ff:	c9                   	leave
    9600:	c3                   	ret
    9601:	90                   	nop

0000000000009602 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9602:	55                   	push   %rbp
    9603:	48 89 e5             	mov    %rsp,%rbp
    9606:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    960a:	90                   	nop
    960b:	5d                   	pop    %rbp
    960c:	c3                   	ret
    960d:	90                   	nop

000000000000960e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    960e:	55                   	push   %rbp
    960f:	48 89 e5             	mov    %rsp,%rbp
    9612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9616:	90                   	nop
    9617:	5d                   	pop    %rbp
    9618:	c3                   	ret

0000000000009619 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9619:	55                   	push   %rbp
    961a:	48 89 e5             	mov    %rsp,%rbp
    961d:	53                   	push   %rbx
    961e:	48 83 ec 28          	sub    $0x28,%rsp
    9622:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9626:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    962a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    962e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9632:	48 89 d6             	mov    %rdx,%rsi
    9635:	48 89 c7             	mov    %rax,%rdi
    9638:	e8 25 01 00 00       	call   9762 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    963d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9641:	48 89 c7             	mov    %rax,%rdi
    9644:	e8 52 0d 00 00       	call   a39b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    9649:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    964d:	0f 92 c3             	setb   %bl
    9650:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9654:	48 89 c7             	mov    %rax,%rdi
    9657:	e8 b8 f0 ff ff       	call   8714 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    965c:	84 db                	test   %bl,%bl
    965e:	74 0f                	je     966f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9660:	48 8d 05 59 ea 00 00 	lea    0xea59(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9667:	48 89 c7             	mov    %rax,%rdi
    966a:	e8 11 ab ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    966f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9673:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9677:	c9                   	leave
    9678:	c3                   	ret
    9679:	90                   	nop

000000000000967a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    967a:	55                   	push   %rbp
    967b:	48 89 e5             	mov    %rsp,%rbp
    967e:	53                   	push   %rbx
    967f:	48 83 ec 28          	sub    $0x28,%rsp
    9683:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9687:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    968b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    968f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9693:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9697:	48 89 d6             	mov    %rdx,%rsi
    969a:	48 89 c7             	mov    %rax,%rdi
    969d:	e8 3c 0d 00 00       	call   a3de <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    96a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    96a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96aa:	48 89 d6             	mov    %rdx,%rsi
    96ad:	48 89 c7             	mov    %rax,%rdi
    96b0:	e8 5b 0d 00 00       	call   a410 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    96b5:	eb 1a                	jmp    96d1 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    96b7:	48 89 c3             	mov    %rax,%rbx
    96ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96be:	48 89 c7             	mov    %rax,%rdi
    96c1:	e8 36 e6 ff ff       	call   7cfc <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    96c6:	48 89 d8             	mov    %rbx,%rax
    96c9:	48 89 c7             	mov    %rax,%rdi
    96cc:	e8 1f b0 ff ff       	call   46f0 <_Unwind_Resume@plt>
    96d1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    96d5:	c9                   	leave
    96d6:	c3                   	ret
    96d7:	90                   	nop

00000000000096d8 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    96d8:	55                   	push   %rbp
    96d9:	48 89 e5             	mov    %rsp,%rbp
    96dc:	48 83 ec 10          	sub    $0x10,%rsp
    96e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    96e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96ec:	48 89 c7             	mov    %rax,%rdi
    96ef:	e8 24 00 00 00       	call   9718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    96f4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    96f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96fb:	48 8b 00             	mov    (%rax),%rax
    96fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9702:	48 89 ce             	mov    %rcx,%rsi
    9705:	48 89 c7             	mov    %rax,%rdi
    9708:	e8 59 0d 00 00       	call   a466 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    970d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9711:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9715:	90                   	nop
    9716:	c9                   	leave
    9717:	c3                   	ret

0000000000009718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9718:	55                   	push   %rbp
    9719:	48 89 e5             	mov    %rsp,%rbp
    971c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9724:	5d                   	pop    %rbp
    9725:	c3                   	ret

0000000000009726 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9726:	55                   	push   %rbp
    9727:	48 89 e5             	mov    %rsp,%rbp
    972a:	48 83 ec 20          	sub    $0x20,%rsp
    972e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9732:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9736:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    973a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    973e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9742:	48 89 d6             	mov    %rdx,%rsi
    9745:	48 89 c7             	mov    %rax,%rdi
    9748:	e8 42 0d 00 00       	call   a48f <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    974d:	90                   	nop
    974e:	c9                   	leave
    974f:	c3                   	ret

0000000000009750 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9750:	55                   	push   %rbp
    9751:	48 89 e5             	mov    %rsp,%rbp
    9754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    975c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9760:	5d                   	pop    %rbp
    9761:	c3                   	ret

0000000000009762 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9762:	55                   	push   %rbp
    9763:	48 89 e5             	mov    %rsp,%rbp
    9766:	48 83 ec 10          	sub    $0x10,%rsp
    976a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    976e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9772:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    977a:	48 89 d6             	mov    %rdx,%rsi
    977d:	48 89 c7             	mov    %rax,%rdi
    9780:	e8 31 0d 00 00       	call   a4b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    9785:	90                   	nop
    9786:	c9                   	leave
    9787:	c3                   	ret

0000000000009788 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9788:	55                   	push   %rbp
    9789:	48 89 e5             	mov    %rsp,%rbp
    978c:	48 83 ec 20          	sub    $0x20,%rsp
    9790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9794:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9798:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    979c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    97a1:	74 17                	je     97ba <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    97a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    97ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    97af:	48 89 ce             	mov    %rcx,%rsi
    97b2:	48 89 c7             	mov    %rax,%rdi
    97b5:	e8 0b 0d 00 00       	call   a4c5 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    97ba:	90                   	nop
    97bb:	c9                   	leave
    97bc:	c3                   	ret
    97bd:	90                   	nop

00000000000097be <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    97be:	55                   	push   %rbp
    97bf:	48 89 e5             	mov    %rsp,%rbp
    97c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97c6:	90                   	nop
    97c7:	5d                   	pop    %rbp
    97c8:	c3                   	ret
    97c9:	90                   	nop

00000000000097ca <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    97ca:	55                   	push   %rbp
    97cb:	48 89 e5             	mov    %rsp,%rbp
    97ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97d2:	90                   	nop
    97d3:	5d                   	pop    %rbp
    97d4:	c3                   	ret

00000000000097d5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    97d5:	55                   	push   %rbp
    97d6:	48 89 e5             	mov    %rsp,%rbp
    97d9:	53                   	push   %rbx
    97da:	48 83 ec 28          	sub    $0x28,%rsp
    97de:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    97e2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    97e6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    97ea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    97ee:	48 89 d6             	mov    %rdx,%rsi
    97f1:	48 89 c7             	mov    %rax,%rdi
    97f4:	e8 25 01 00 00       	call   991e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    97f9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    97fd:	48 89 c7             	mov    %rax,%rdi
    9800:	e8 ee 0c 00 00       	call   a4f3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    9805:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9809:	0f 92 c3             	setb   %bl
    980c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9810:	48 89 c7             	mov    %rax,%rdi
    9813:	e8 60 f0 ff ff       	call   8878 <_ZNSaI16VkPresentModeKHRED1Ev>
    9818:	84 db                	test   %bl,%bl
    981a:	74 0f                	je     982b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    981c:	48 8d 05 9d e8 00 00 	lea    0xe89d(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9823:	48 89 c7             	mov    %rax,%rdi
    9826:	e8 55 a9 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    982b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    982f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9833:	c9                   	leave
    9834:	c3                   	ret
    9835:	90                   	nop

0000000000009836 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9836:	55                   	push   %rbp
    9837:	48 89 e5             	mov    %rsp,%rbp
    983a:	53                   	push   %rbx
    983b:	48 83 ec 28          	sub    $0x28,%rsp
    983f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9843:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9847:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    984b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    984f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9853:	48 89 d6             	mov    %rdx,%rsi
    9856:	48 89 c7             	mov    %rax,%rdi
    9859:	e8 d8 0c 00 00       	call   a536 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    985e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9862:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9866:	48 89 d6             	mov    %rdx,%rsi
    9869:	48 89 c7             	mov    %rax,%rdi
    986c:	e8 f7 0c 00 00       	call   a568 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    9871:	eb 1a                	jmp    988d <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    9873:	48 89 c3             	mov    %rax,%rbx
    9876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    987a:	48 89 c7             	mov    %rax,%rdi
    987d:	e8 96 e4 ff ff       	call   7d18 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    9882:	48 89 d8             	mov    %rbx,%rax
    9885:	48 89 c7             	mov    %rax,%rdi
    9888:	e8 63 ae ff ff       	call   46f0 <_Unwind_Resume@plt>
    988d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9891:	c9                   	leave
    9892:	c3                   	ret
    9893:	90                   	nop

0000000000009894 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9894:	55                   	push   %rbp
    9895:	48 89 e5             	mov    %rsp,%rbp
    9898:	48 83 ec 10          	sub    $0x10,%rsp
    989c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    98a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98a8:	48 89 c7             	mov    %rax,%rdi
    98ab:	e8 24 00 00 00       	call   98d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    98b0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    98b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98b7:	48 8b 00             	mov    (%rax),%rax
    98ba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    98be:	48 89 ce             	mov    %rcx,%rsi
    98c1:	48 89 c7             	mov    %rax,%rdi
    98c4:	e8 f5 0c 00 00       	call   a5be <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    98c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    98cd:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    98d1:	90                   	nop
    98d2:	c9                   	leave
    98d3:	c3                   	ret

00000000000098d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    98d4:	55                   	push   %rbp
    98d5:	48 89 e5             	mov    %rsp,%rbp
    98d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    98dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e0:	5d                   	pop    %rbp
    98e1:	c3                   	ret

00000000000098e2 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    98e2:	55                   	push   %rbp
    98e3:	48 89 e5             	mov    %rsp,%rbp
    98e6:	48 83 ec 20          	sub    $0x20,%rsp
    98ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    98f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    98f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    98fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98fe:	48 89 d6             	mov    %rdx,%rsi
    9901:	48 89 c7             	mov    %rax,%rdi
    9904:	e8 de 0c 00 00       	call   a5e7 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9909:	90                   	nop
    990a:	c9                   	leave
    990b:	c3                   	ret

000000000000990c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    990c:	55                   	push   %rbp
    990d:	48 89 e5             	mov    %rsp,%rbp
    9910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9914:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9918:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    991c:	5d                   	pop    %rbp
    991d:	c3                   	ret

000000000000991e <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    991e:	55                   	push   %rbp
    991f:	48 89 e5             	mov    %rsp,%rbp
    9922:	48 83 ec 10          	sub    $0x10,%rsp
    9926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    992a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    992e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9936:	48 89 d6             	mov    %rdx,%rsi
    9939:	48 89 c7             	mov    %rax,%rdi
    993c:	e8 cd 0c 00 00       	call   a60e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    9941:	90                   	nop
    9942:	c9                   	leave
    9943:	c3                   	ret

0000000000009944 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9944:	55                   	push   %rbp
    9945:	48 89 e5             	mov    %rsp,%rbp
    9948:	48 83 ec 20          	sub    $0x20,%rsp
    994c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9950:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9954:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9958:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    995d:	74 17                	je     9976 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    995f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9963:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9967:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    996b:	48 89 ce             	mov    %rcx,%rsi
    996e:	48 89 c7             	mov    %rax,%rdi
    9971:	e8 a7 0c 00 00       	call   a61d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9976:	90                   	nop
    9977:	c9                   	leave
    9978:	c3                   	ret
    9979:	90                   	nop

000000000000997a <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    997a:	55                   	push   %rbp
    997b:	48 89 e5             	mov    %rsp,%rbp
    997e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9982:	90                   	nop
    9983:	5d                   	pop    %rbp
    9984:	c3                   	ret
    9985:	90                   	nop

0000000000009986 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9986:	55                   	push   %rbp
    9987:	48 89 e5             	mov    %rsp,%rbp
    998a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    998e:	90                   	nop
    998f:	5d                   	pop    %rbp
    9990:	c3                   	ret

0000000000009991 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9991:	55                   	push   %rbp
    9992:	48 89 e5             	mov    %rsp,%rbp
    9995:	53                   	push   %rbx
    9996:	48 83 ec 28          	sub    $0x28,%rsp
    999a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    999e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    99a2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    99a6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99aa:	48 89 d6             	mov    %rdx,%rsi
    99ad:	48 89 c7             	mov    %rax,%rdi
    99b0:	e8 25 01 00 00       	call   9ada <_ZNSaIP9VkImage_TEC1ERKS1_>
    99b5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99b9:	48 89 c7             	mov    %rax,%rdi
    99bc:	e8 8a 0c 00 00       	call   a64b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    99c1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    99c5:	0f 92 c3             	setb   %bl
    99c8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99cc:	48 89 c7             	mov    %rax,%rdi
    99cf:	e8 08 f0 ff ff       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
    99d4:	84 db                	test   %bl,%bl
    99d6:	74 0f                	je     99e7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    99d8:	48 8d 05 e1 e6 00 00 	lea    0xe6e1(%rip),%rax        # 180c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    99df:	48 89 c7             	mov    %rax,%rdi
    99e2:	e8 99 a7 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    99e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    99eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99ef:	c9                   	leave
    99f0:	c3                   	ret
    99f1:	90                   	nop

00000000000099f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    99f2:	55                   	push   %rbp
    99f3:	48 89 e5             	mov    %rsp,%rbp
    99f6:	53                   	push   %rbx
    99f7:	48 83 ec 28          	sub    $0x28,%rsp
    99fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a03:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9a07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9a0f:	48 89 d6             	mov    %rdx,%rsi
    9a12:	48 89 c7             	mov    %rax,%rdi
    9a15:	e8 74 0c 00 00       	call   a68e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9a1a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a22:	48 89 d6             	mov    %rdx,%rsi
    9a25:	48 89 c7             	mov    %rax,%rdi
    9a28:	e8 93 0c 00 00       	call   a6c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    9a2d:	eb 1a                	jmp    9a49 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    9a2f:	48 89 c3             	mov    %rax,%rbx
    9a32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a36:	48 89 c7             	mov    %rax,%rdi
    9a39:	e8 f6 e2 ff ff       	call   7d34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9a3e:	48 89 d8             	mov    %rbx,%rax
    9a41:	48 89 c7             	mov    %rax,%rdi
    9a44:	e8 a7 ac ff ff       	call   46f0 <_Unwind_Resume@plt>
    9a49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a4d:	c9                   	leave
    9a4e:	c3                   	ret
    9a4f:	90                   	nop

0000000000009a50 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9a50:	55                   	push   %rbp
    9a51:	48 89 e5             	mov    %rsp,%rbp
    9a54:	48 83 ec 10          	sub    $0x10,%rsp
    9a58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a64:	48 89 c7             	mov    %rax,%rdi
    9a67:	e8 24 00 00 00       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9a6c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a73:	48 8b 00             	mov    (%rax),%rax
    9a76:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a7a:	48 89 ce             	mov    %rcx,%rsi
    9a7d:	48 89 c7             	mov    %rax,%rdi
    9a80:	e8 91 0c 00 00       	call   a716 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9a85:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a89:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9a8d:	90                   	nop
    9a8e:	c9                   	leave
    9a8f:	c3                   	ret

0000000000009a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9a90:	55                   	push   %rbp
    9a91:	48 89 e5             	mov    %rsp,%rbp
    9a94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a9c:	5d                   	pop    %rbp
    9a9d:	c3                   	ret

0000000000009a9e <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9a9e:	55                   	push   %rbp
    9a9f:	48 89 e5             	mov    %rsp,%rbp
    9aa2:	48 83 ec 20          	sub    $0x20,%rsp
    9aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9aaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9aae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9ab2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aba:	48 89 d6             	mov    %rdx,%rsi
    9abd:	48 89 c7             	mov    %rax,%rdi
    9ac0:	e8 7a 0c 00 00       	call   a73f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    9ac5:	90                   	nop
    9ac6:	c9                   	leave
    9ac7:	c3                   	ret

0000000000009ac8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9ac8:	55                   	push   %rbp
    9ac9:	48 89 e5             	mov    %rsp,%rbp
    9acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9ad4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ad8:	5d                   	pop    %rbp
    9ad9:	c3                   	ret

0000000000009ada <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9ada:	55                   	push   %rbp
    9adb:	48 89 e5             	mov    %rsp,%rbp
    9ade:	48 83 ec 10          	sub    $0x10,%rsp
    9ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ae6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9aea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af2:	48 89 d6             	mov    %rdx,%rsi
    9af5:	48 89 c7             	mov    %rax,%rdi
    9af8:	e8 69 0c 00 00       	call   a766 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    9afd:	90                   	nop
    9afe:	c9                   	leave
    9aff:	c3                   	ret

0000000000009b00 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9b00:	55                   	push   %rbp
    9b01:	48 89 e5             	mov    %rsp,%rbp
    9b04:	48 83 ec 20          	sub    $0x20,%rsp
    9b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9b14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9b19:	74 17                	je     9b32 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b27:	48 89 ce             	mov    %rcx,%rsi
    9b2a:	48 89 c7             	mov    %rax,%rdi
    9b2d:	e8 43 0c 00 00       	call   a775 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9b32:	90                   	nop
    9b33:	c9                   	leave
    9b34:	c3                   	ret

0000000000009b35 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9b35:	55                   	push   %rbp
    9b36:	48 89 e5             	mov    %rsp,%rbp
    9b39:	48 83 ec 20          	sub    $0x20,%rsp
    9b3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9b41:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9b48:	03 3f 00 
    9b4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b53:	48 89 c7             	mov    %rax,%rdi
    9b56:	e8 48 0c 00 00       	call   a7a3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9b5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9b5f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9b63:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9b67:	48 89 d6             	mov    %rdx,%rsi
    9b6a:	48 89 c7             	mov    %rax,%rdi
    9b6d:	e8 bb b7 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9b72:	48 8b 00             	mov    (%rax),%rax
      }
    9b75:	c9                   	leave
    9b76:	c3                   	ret
    9b77:	90                   	nop

0000000000009b78 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9b78:	55                   	push   %rbp
    9b79:	48 89 e5             	mov    %rsp,%rbp
    9b7c:	48 83 ec 10          	sub    $0x10,%rsp
    9b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9b88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b90:	48 89 d6             	mov    %rdx,%rsi
    9b93:	48 89 c7             	mov    %rax,%rdi
    9b96:	e8 e9 f0 ff ff       	call   8c84 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b9f:	48 89 c7             	mov    %rax,%rdi
    9ba2:	e8 17 0c 00 00       	call   a7be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9ba7:	90                   	nop
    9ba8:	c9                   	leave
    9ba9:	c3                   	ret

0000000000009baa <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9baa:	55                   	push   %rbp
    9bab:	48 89 e5             	mov    %rsp,%rbp
    9bae:	48 83 ec 10          	sub    $0x10,%rsp
    9bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9bba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc2:	48 89 d6             	mov    %rdx,%rsi
    9bc5:	48 89 c7             	mov    %rax,%rdi
    9bc8:	e8 1f 0c 00 00       	call   a7ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9bcd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9bd1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bd8:	48 8b 10             	mov    (%rax),%rdx
    9bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bdf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9be3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be7:	48 8b 08             	mov    (%rax),%rcx
    9bea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bee:	48 89 d0             	mov    %rdx,%rax
    9bf1:	48 c1 e0 06          	shl    $0x6,%rax
    9bf5:	48 01 d0             	add    %rdx,%rax
    9bf8:	48 c1 e0 03          	shl    $0x3,%rax
    9bfc:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c04:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9c08:	90                   	nop
    9c09:	c9                   	leave
    9c0a:	c3                   	ret

0000000000009c0b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9c0b:	55                   	push   %rbp
    9c0c:	48 89 e5             	mov    %rsp,%rbp
    9c0f:	48 83 ec 20          	sub    $0x20,%rsp
    9c13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9c1f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c27:	48 89 d6             	mov    %rdx,%rsi
    9c2a:	48 89 c7             	mov    %rax,%rdi
    9c2d:	e8 ed 0b 00 00       	call   a81f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9c32:	c9                   	leave
    9c33:	c3                   	ret

0000000000009c34 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9c34:	55                   	push   %rbp
    9c35:	48 89 e5             	mov    %rsp,%rbp
    9c38:	48 83 ec 10          	sub    $0x10,%rsp
    9c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9c44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c4c:	48 89 d6             	mov    %rdx,%rsi
    9c4f:	48 89 c7             	mov    %rax,%rdi
    9c52:	e8 f1 0b 00 00       	call   a848 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9c57:	90                   	nop
    9c58:	c9                   	leave
    9c59:	c3                   	ret

0000000000009c5a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9c5a:	55                   	push   %rbp
    9c5b:	48 89 e5             	mov    %rsp,%rbp
    9c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c66:	90                   	nop
    9c67:	5d                   	pop    %rbp
    9c68:	c3                   	ret

0000000000009c69 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9c69:	55                   	push   %rbp
    9c6a:	48 89 e5             	mov    %rsp,%rbp
    9c6d:	48 83 ec 20          	sub    $0x20,%rsp
    9c71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9c7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c89:	48 89 ce             	mov    %rcx,%rsi
    9c8c:	48 89 c7             	mov    %rax,%rdi
    9c8f:	e8 c4 0b 00 00       	call   a858 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    9c94:	90                   	nop
    9c95:	c9                   	leave
    9c96:	c3                   	ret

0000000000009c97 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9c97:	55                   	push   %rbp
    9c98:	48 89 e5             	mov    %rsp,%rbp
    9c9b:	48 83 ec 20          	sub    $0x20,%rsp
    9c9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9ca3:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9caa:	07 7e 00 
    9cad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9cb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cb5:	48 89 c7             	mov    %rax,%rdi
    9cb8:	e8 d5 0b 00 00       	call   a892 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    9cbd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9cc1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9cc5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9cc9:	48 89 d6             	mov    %rdx,%rsi
    9ccc:	48 89 c7             	mov    %rax,%rdi
    9ccf:	e8 59 b6 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9cd4:	48 8b 00             	mov    (%rax),%rax
      }
    9cd7:	c9                   	leave
    9cd8:	c3                   	ret
    9cd9:	90                   	nop

0000000000009cda <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9cda:	55                   	push   %rbp
    9cdb:	48 89 e5             	mov    %rsp,%rbp
    9cde:	48 83 ec 10          	sub    $0x10,%rsp
    9ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ce6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9cea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf2:	48 89 d6             	mov    %rdx,%rsi
    9cf5:	48 89 c7             	mov    %rax,%rdi
    9cf8:	e8 43 f1 ff ff       	call   8e40 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9cfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d01:	48 89 c7             	mov    %rax,%rdi
    9d04:	e8 a3 0b 00 00       	call   a8ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9d09:	90                   	nop
    9d0a:	c9                   	leave
    9d0b:	c3                   	ret

0000000000009d0c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9d0c:	55                   	push   %rbp
    9d0d:	48 89 e5             	mov    %rsp,%rbp
    9d10:	48 83 ec 10          	sub    $0x10,%rsp
    9d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9d1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d24:	48 89 d6             	mov    %rdx,%rsi
    9d27:	48 89 c7             	mov    %rax,%rdi
    9d2a:	e8 ab 0b 00 00       	call   a8da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    9d2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d33:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3a:	48 8b 10             	mov    (%rax),%rdx
    9d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d41:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9d45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d49:	48 8b 08             	mov    (%rax),%rcx
    9d4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d50:	48 89 d0             	mov    %rdx,%rax
    9d53:	48 c1 e0 06          	shl    $0x6,%rax
    9d57:	48 01 d0             	add    %rdx,%rax
    9d5a:	48 c1 e0 02          	shl    $0x2,%rax
    9d5e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d66:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9d6a:	90                   	nop
    9d6b:	c9                   	leave
    9d6c:	c3                   	ret

0000000000009d6d <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9d6d:	55                   	push   %rbp
    9d6e:	48 89 e5             	mov    %rsp,%rbp
    9d71:	48 83 ec 20          	sub    $0x20,%rsp
    9d75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9d81:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d89:	48 89 d6             	mov    %rdx,%rsi
    9d8c:	48 89 c7             	mov    %rax,%rdi
    9d8f:	e8 79 0b 00 00       	call   a90d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    9d94:	c9                   	leave
    9d95:	c3                   	ret

0000000000009d96 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9d96:	55                   	push   %rbp
    9d97:	48 89 e5             	mov    %rsp,%rbp
    9d9a:	48 83 ec 10          	sub    $0x10,%rsp
    9d9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9da2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9da6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dae:	48 89 d6             	mov    %rdx,%rsi
    9db1:	48 89 c7             	mov    %rax,%rdi
    9db4:	e8 7d 0b 00 00       	call   a936 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    9db9:	90                   	nop
    9dba:	c9                   	leave
    9dbb:	c3                   	ret

0000000000009dbc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    9dbc:	55                   	push   %rbp
    9dbd:	48 89 e5             	mov    %rsp,%rbp
    9dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dc8:	90                   	nop
    9dc9:	5d                   	pop    %rbp
    9dca:	c3                   	ret

0000000000009dcb <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9dcb:	55                   	push   %rbp
    9dcc:	48 89 e5             	mov    %rsp,%rbp
    9dcf:	48 83 ec 20          	sub    $0x20,%rsp
    9dd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ddb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9ddf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9de3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9de7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9deb:	48 89 ce             	mov    %rcx,%rsi
    9dee:	48 89 c7             	mov    %rax,%rdi
    9df1:	e8 50 0b 00 00       	call   a946 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    9df6:	90                   	nop
    9df7:	c9                   	leave
    9df8:	c3                   	ret

0000000000009df9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9df9:	55                   	push   %rbp
    9dfa:	48 89 e5             	mov    %rsp,%rbp
    9dfd:	48 83 ec 20          	sub    $0x20,%rsp
    9e01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9e05:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9e0c:	ff ff 0f 
    9e0f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9e13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e17:	48 89 c7             	mov    %rax,%rdi
    9e1a:	e8 61 0b 00 00       	call   a980 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    9e1f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9e23:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9e27:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9e2b:	48 89 d6             	mov    %rdx,%rsi
    9e2e:	48 89 c7             	mov    %rax,%rdi
    9e31:	e8 f7 b4 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9e36:	48 8b 00             	mov    (%rax),%rax
      }
    9e39:	c9                   	leave
    9e3a:	c3                   	ret
    9e3b:	90                   	nop

0000000000009e3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9e3c:	55                   	push   %rbp
    9e3d:	48 89 e5             	mov    %rsp,%rbp
    9e40:	48 83 ec 10          	sub    $0x10,%rsp
    9e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9e4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e54:	48 89 d6             	mov    %rdx,%rsi
    9e57:	48 89 c7             	mov    %rax,%rdi
    9e5a:	e8 61 f1 ff ff       	call   8fc0 <_ZNSaIPKcEC1ERKS1_>
    9e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e63:	48 89 c7             	mov    %rax,%rdi
    9e66:	e8 2f 0b 00 00       	call   a99a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9e6b:	90                   	nop
    9e6c:	c9                   	leave
    9e6d:	c3                   	ret

0000000000009e6e <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9e6e:	55                   	push   %rbp
    9e6f:	48 89 e5             	mov    %rsp,%rbp
    9e72:	48 83 ec 10          	sub    $0x10,%rsp
    9e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9e7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e86:	48 89 d6             	mov    %rdx,%rsi
    9e89:	48 89 c7             	mov    %rax,%rdi
    9e8c:	e8 37 0b 00 00       	call   a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9e91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e95:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9c:	48 8b 10             	mov    (%rax),%rdx
    9e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9ea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eab:	48 8b 00             	mov    (%rax),%rax
    9eae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eb2:	48 c1 e2 03          	shl    $0x3,%rdx
    9eb6:	48 01 c2             	add    %rax,%rdx
    9eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ebd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ec1:	90                   	nop
    9ec2:	c9                   	leave
    9ec3:	c3                   	ret

0000000000009ec4 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9ec4:	55                   	push   %rbp
    9ec5:	48 89 e5             	mov    %rsp,%rbp
    9ec8:	48 83 ec 20          	sub    $0x20,%rsp
    9ecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ed0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ed4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9ed8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ee0:	48 89 d6             	mov    %rdx,%rsi
    9ee3:	48 89 c7             	mov    %rax,%rdi
    9ee6:	e8 10 0b 00 00       	call   a9fb <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9eeb:	c9                   	leave
    9eec:	c3                   	ret
    9eed:	90                   	nop

0000000000009eee <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    9eee:	55                   	push   %rbp
    9eef:	48 89 e5             	mov    %rsp,%rbp
    9ef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ef6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9efa:	90                   	nop
    9efb:	5d                   	pop    %rbp
    9efc:	c3                   	ret

0000000000009efd <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9efd:	55                   	push   %rbp
    9efe:	48 89 e5             	mov    %rsp,%rbp
    9f01:	48 83 ec 20          	sub    $0x20,%rsp
    9f05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9f11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f15:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1d:	48 89 ce             	mov    %rcx,%rsi
    9f20:	48 89 c7             	mov    %rax,%rdi
    9f23:	e8 fc 0a 00 00       	call   aa24 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    9f28:	90                   	nop
    9f29:	c9                   	leave
    9f2a:	c3                   	ret

0000000000009f2b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9f2b:	55                   	push   %rbp
    9f2c:	48 89 e5             	mov    %rsp,%rbp
    9f2f:	48 83 ec 20          	sub    $0x20,%rsp
    9f33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9f37:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9f3e:	ff ff 0f 
    9f41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f49:	48 89 c7             	mov    %rax,%rdi
    9f4c:	e8 04 0b 00 00       	call   aa55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    9f51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9f55:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9f59:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f5d:	48 89 d6             	mov    %rdx,%rsi
    9f60:	48 89 c7             	mov    %rax,%rdi
    9f63:	e8 c5 b3 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    9f68:	48 8b 00             	mov    (%rax),%rax
      }
    9f6b:	c9                   	leave
    9f6c:	c3                   	ret
    9f6d:	90                   	nop

0000000000009f6e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9f6e:	55                   	push   %rbp
    9f6f:	48 89 e5             	mov    %rsp,%rbp
    9f72:	48 83 ec 10          	sub    $0x10,%rsp
    9f76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9f7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f86:	48 89 d6             	mov    %rdx,%rsi
    9f89:	48 89 c7             	mov    %rax,%rdi
    9f8c:	e8 eb f1 ff ff       	call   917c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9f91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f95:	48 89 c7             	mov    %rax,%rdi
    9f98:	e8 d3 0a 00 00       	call   aa70 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9f9d:	90                   	nop
    9f9e:	c9                   	leave
    9f9f:	c3                   	ret

0000000000009fa0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9fa0:	55                   	push   %rbp
    9fa1:	48 89 e5             	mov    %rsp,%rbp
    9fa4:	48 83 ec 10          	sub    $0x10,%rsp
    9fa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9fb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fb8:	48 89 d6             	mov    %rdx,%rsi
    9fbb:	48 89 c7             	mov    %rax,%rdi
    9fbe:	e8 db 0a 00 00       	call   aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    9fc3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fc7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9fca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fce:	48 8b 10             	mov    (%rax),%rdx
    9fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9fd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fdd:	48 8b 00             	mov    (%rax),%rax
    9fe0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fe4:	48 c1 e2 03          	shl    $0x3,%rdx
    9fe8:	48 01 c2             	add    %rax,%rdx
    9feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fef:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ff3:	90                   	nop
    9ff4:	c9                   	leave
    9ff5:	c3                   	ret

0000000000009ff6 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9ff6:	55                   	push   %rbp
    9ff7:	48 89 e5             	mov    %rsp,%rbp
    9ffa:	48 83 ec 20          	sub    $0x20,%rsp
    9ffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a00a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a012:	48 89 d6             	mov    %rdx,%rsi
    a015:	48 89 c7             	mov    %rax,%rdi
    a018:	e8 b4 0a 00 00       	call   aad1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    a01d:	c9                   	leave
    a01e:	c3                   	ret

000000000000a01f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a01f:	55                   	push   %rbp
    a020:	48 89 e5             	mov    %rsp,%rbp
    a023:	48 83 ec 10          	sub    $0x10,%rsp
    a027:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a02b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a02f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a037:	48 89 d6             	mov    %rdx,%rsi
    a03a:	48 89 c7             	mov    %rax,%rdi
    a03d:	e8 b8 0a 00 00       	call   aafa <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    a042:	90                   	nop
    a043:	c9                   	leave
    a044:	c3                   	ret
    a045:	90                   	nop

000000000000a046 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    a046:	55                   	push   %rbp
    a047:	48 89 e5             	mov    %rsp,%rbp
    a04a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a04e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a052:	90                   	nop
    a053:	5d                   	pop    %rbp
    a054:	c3                   	ret

000000000000a055 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a055:	55                   	push   %rbp
    a056:	48 89 e5             	mov    %rsp,%rbp
    a059:	48 83 ec 20          	sub    $0x20,%rsp
    a05d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a061:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a065:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a069:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a06d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a075:	48 89 ce             	mov    %rcx,%rsi
    a078:	48 89 c7             	mov    %rax,%rdi
    a07b:	e8 8a 0a 00 00       	call   ab0a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    a080:	90                   	nop
    a081:	c9                   	leave
    a082:	c3                   	ret

000000000000a083 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a083:	55                   	push   %rbp
    a084:	48 89 e5             	mov    %rsp,%rbp
    a087:	48 83 ec 20          	sub    $0x20,%rsp
    a08b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a08f:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a096:	55 55 05 
    a099:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a09d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0a1:	48 89 c7             	mov    %rax,%rdi
    a0a4:	e8 92 0a 00 00       	call   ab3b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    a0a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a0ad:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a0b1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a0b5:	48 89 d6             	mov    %rdx,%rsi
    a0b8:	48 89 c7             	mov    %rax,%rdi
    a0bb:	e8 6d b2 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a0c0:	48 8b 00             	mov    (%rax),%rax
      }
    a0c3:	c9                   	leave
    a0c4:	c3                   	ret
    a0c5:	90                   	nop

000000000000a0c6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a0c6:	55                   	push   %rbp
    a0c7:	48 89 e5             	mov    %rsp,%rbp
    a0ca:	48 83 ec 10          	sub    $0x10,%rsp
    a0ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a0d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0de:	48 89 d6             	mov    %rdx,%rsi
    a0e1:	48 89 c7             	mov    %rax,%rdi
    a0e4:	e8 4f f2 ff ff       	call   9338 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a0e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ed:	48 89 c7             	mov    %rax,%rdi
    a0f0:	e8 61 0a 00 00       	call   ab56 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a0f5:	90                   	nop
    a0f6:	c9                   	leave
    a0f7:	c3                   	ret

000000000000a0f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a0f8:	55                   	push   %rbp
    a0f9:	48 89 e5             	mov    %rsp,%rbp
    a0fc:	48 83 ec 10          	sub    $0x10,%rsp
    a100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a104:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a108:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a10c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a110:	48 89 d6             	mov    %rdx,%rsi
    a113:	48 89 c7             	mov    %rax,%rdi
    a116:	e8 69 0a 00 00       	call   ab84 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    a11b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a11f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a126:	48 8b 10             	mov    (%rax),%rdx
    a129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a12d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a135:	48 8b 08             	mov    (%rax),%rcx
    a138:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a13c:	48 89 d0             	mov    %rdx,%rax
    a13f:	48 01 c0             	add    %rax,%rax
    a142:	48 01 d0             	add    %rdx,%rax
    a145:	48 c1 e0 03          	shl    $0x3,%rax
    a149:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a14d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a151:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a155:	90                   	nop
    a156:	c9                   	leave
    a157:	c3                   	ret

000000000000a158 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a158:	55                   	push   %rbp
    a159:	48 89 e5             	mov    %rsp,%rbp
    a15c:	48 83 ec 20          	sub    $0x20,%rsp
    a160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a164:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a168:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a16c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a174:	48 89 d6             	mov    %rdx,%rsi
    a177:	48 89 c7             	mov    %rax,%rdi
    a17a:	e8 38 0a 00 00       	call   abb7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a17f:	c9                   	leave
    a180:	c3                   	ret

000000000000a181 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a181:	55                   	push   %rbp
    a182:	48 89 e5             	mov    %rsp,%rbp
    a185:	48 83 ec 10          	sub    $0x10,%rsp
    a189:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a18d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a191:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a199:	48 89 d6             	mov    %rdx,%rsi
    a19c:	48 89 c7             	mov    %rax,%rdi
    a19f:	e8 3c 0a 00 00       	call   abe0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a1a4:	90                   	nop
    a1a5:	c9                   	leave
    a1a6:	c3                   	ret
    a1a7:	90                   	nop

000000000000a1a8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a1a8:	55                   	push   %rbp
    a1a9:	48 89 e5             	mov    %rsp,%rbp
    a1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1b4:	90                   	nop
    a1b5:	5d                   	pop    %rbp
    a1b6:	c3                   	ret

000000000000a1b7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a1b7:	55                   	push   %rbp
    a1b8:	48 89 e5             	mov    %rsp,%rbp
    a1bb:	48 83 ec 20          	sub    $0x20,%rsp
    a1bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a1cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a1cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a1d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1d7:	48 89 ce             	mov    %rcx,%rsi
    a1da:	48 89 c7             	mov    %rax,%rdi
    a1dd:	e8 0e 0a 00 00       	call   abf0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a1e2:	90                   	nop
    a1e3:	c9                   	leave
    a1e4:	c3                   	ret

000000000000a1e5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a1e5:	55                   	push   %rbp
    a1e6:	48 89 e5             	mov    %rsp,%rbp
    a1e9:	48 83 ec 20          	sub    $0x20,%rsp
    a1ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a1f1:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a1f8:	49 92 04 
    a1fb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a1ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a203:	48 89 c7             	mov    %rax,%rdi
    a206:	e8 1e 0a 00 00       	call   ac29 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a20b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a20f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a213:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a217:	48 89 d6             	mov    %rdx,%rsi
    a21a:	48 89 c7             	mov    %rax,%rdi
    a21d:	e8 0b b1 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a222:	48 8b 00             	mov    (%rax),%rax
      }
    a225:	c9                   	leave
    a226:	c3                   	ret
    a227:	90                   	nop

000000000000a228 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a228:	55                   	push   %rbp
    a229:	48 89 e5             	mov    %rsp,%rbp
    a22c:	48 83 ec 10          	sub    $0x10,%rsp
    a230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a234:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a238:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a23c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a240:	48 89 d6             	mov    %rdx,%rsi
    a243:	48 89 c7             	mov    %rax,%rdi
    a246:	e8 5b f3 ff ff       	call   95a6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a24b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24f:	48 89 c7             	mov    %rax,%rdi
    a252:	e8 ed 09 00 00       	call   ac44 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a257:	90                   	nop
    a258:	c9                   	leave
    a259:	c3                   	ret

000000000000a25a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a25a:	55                   	push   %rbp
    a25b:	48 89 e5             	mov    %rsp,%rbp
    a25e:	48 83 ec 10          	sub    $0x10,%rsp
    a262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a266:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a26a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a272:	48 89 d6             	mov    %rdx,%rsi
    a275:	48 89 c7             	mov    %rax,%rdi
    a278:	e8 f5 09 00 00       	call   ac72 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a27d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a281:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a288:	48 8b 10             	mov    (%rax),%rdx
    a28b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a297:	48 8b 08             	mov    (%rax),%rcx
    a29a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a29e:	48 89 d0             	mov    %rdx,%rax
    a2a1:	48 c1 e0 03          	shl    $0x3,%rax
    a2a5:	48 29 d0             	sub    %rdx,%rax
    a2a8:	48 c1 e0 02          	shl    $0x2,%rax
    a2ac:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a2b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b4:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a2b8:	90                   	nop
    a2b9:	c9                   	leave
    a2ba:	c3                   	ret

000000000000a2bb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a2bb:	55                   	push   %rbp
    a2bc:	48 89 e5             	mov    %rsp,%rbp
    a2bf:	48 83 ec 20          	sub    $0x20,%rsp
    a2c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a2cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d7:	48 89 d6             	mov    %rdx,%rsi
    a2da:	48 89 c7             	mov    %rax,%rdi
    a2dd:	e8 c3 09 00 00       	call   aca5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a2e2:	c9                   	leave
    a2e3:	c3                   	ret

000000000000a2e4 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a2e4:	55                   	push   %rbp
    a2e5:	48 89 e5             	mov    %rsp,%rbp
    a2e8:	48 83 ec 10          	sub    $0x10,%rsp
    a2ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a2f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2fc:	48 89 d6             	mov    %rdx,%rsi
    a2ff:	48 89 c7             	mov    %rax,%rdi
    a302:	e8 c7 09 00 00       	call   acce <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a307:	90                   	nop
    a308:	c9                   	leave
    a309:	c3                   	ret

000000000000a30a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a30a:	55                   	push   %rbp
    a30b:	48 89 e5             	mov    %rsp,%rbp
    a30e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a316:	5d                   	pop    %rbp
    a317:	c3                   	ret

000000000000a318 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a318:	55                   	push   %rbp
    a319:	48 89 e5             	mov    %rsp,%rbp
    a31c:	53                   	push   %rbx
    a31d:	48 83 ec 18          	sub    $0x18,%rsp
    a321:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a325:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a329:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a32d:	48 89 c7             	mov    %rax,%rdi
    a330:	e8 2f f2 ff ff       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a335:	48 89 c3             	mov    %rax,%rbx
    a338:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a33c:	48 89 c7             	mov    %rax,%rdi
    a33f:	e8 99 09 00 00       	call   acdd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a344:	48 89 de             	mov    %rbx,%rsi
    a347:	48 89 c7             	mov    %rax,%rdi
    a34a:	e8 9c 09 00 00       	call   aceb <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a34f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a353:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a357:	90                   	nop
    a358:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a35c:	c9                   	leave
    a35d:	c3                   	ret

000000000000a35e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a35e:	55                   	push   %rbp
    a35f:	48 89 e5             	mov    %rsp,%rbp
    a362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a366:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a36a:	90                   	nop
    a36b:	5d                   	pop    %rbp
    a36c:	c3                   	ret

000000000000a36d <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a36d:	55                   	push   %rbp
    a36e:	48 89 e5             	mov    %rsp,%rbp
    a371:	48 83 ec 20          	sub    $0x20,%rsp
    a375:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a379:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a37d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a381:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a385:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a38d:	48 89 ce             	mov    %rcx,%rsi
    a390:	48 89 c7             	mov    %rax,%rdi
    a393:	e8 a4 09 00 00       	call   ad3c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a398:	90                   	nop
    a399:	c9                   	leave
    a39a:	c3                   	ret

000000000000a39b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a39b:	55                   	push   %rbp
    a39c:	48 89 e5             	mov    %rsp,%rbp
    a39f:	48 83 ec 20          	sub    $0x20,%rsp
    a3a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a3a7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a3ae:	ff ff 0f 
    a3b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a3b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3b9:	48 89 c7             	mov    %rax,%rdi
    a3bc:	e8 b5 09 00 00       	call   ad76 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a3c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a3c5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a3c9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a3cd:	48 89 d6             	mov    %rdx,%rsi
    a3d0:	48 89 c7             	mov    %rax,%rdi
    a3d3:	e8 55 af ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a3d8:	48 8b 00             	mov    (%rax),%rax
      }
    a3db:	c9                   	leave
    a3dc:	c3                   	ret
    a3dd:	90                   	nop

000000000000a3de <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a3de:	55                   	push   %rbp
    a3df:	48 89 e5             	mov    %rsp,%rbp
    a3e2:	48 83 ec 10          	sub    $0x10,%rsp
    a3e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a3ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f6:	48 89 d6             	mov    %rdx,%rsi
    a3f9:	48 89 c7             	mov    %rax,%rdi
    a3fc:	e8 61 f3 ff ff       	call   9762 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a405:	48 89 c7             	mov    %rax,%rdi
    a408:	e8 83 09 00 00       	call   ad90 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a40d:	90                   	nop
    a40e:	c9                   	leave
    a40f:	c3                   	ret

000000000000a410 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a410:	55                   	push   %rbp
    a411:	48 89 e5             	mov    %rsp,%rbp
    a414:	48 83 ec 10          	sub    $0x10,%rsp
    a418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a41c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a420:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a428:	48 89 d6             	mov    %rdx,%rsi
    a42b:	48 89 c7             	mov    %rax,%rdi
    a42e:	e8 8b 09 00 00       	call   adbe <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a433:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a437:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a43a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a43e:	48 8b 10             	mov    (%rax),%rdx
    a441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a445:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a44d:	48 8b 00             	mov    (%rax),%rax
    a450:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a454:	48 c1 e2 03          	shl    $0x3,%rdx
    a458:	48 01 c2             	add    %rax,%rdx
    a45b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a45f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a463:	90                   	nop
    a464:	c9                   	leave
    a465:	c3                   	ret

000000000000a466 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a466:	55                   	push   %rbp
    a467:	48 89 e5             	mov    %rsp,%rbp
    a46a:	48 83 ec 20          	sub    $0x20,%rsp
    a46e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a472:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a476:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a47a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a482:	48 89 d6             	mov    %rdx,%rsi
    a485:	48 89 c7             	mov    %rax,%rdi
    a488:	e8 64 09 00 00       	call   adf1 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a48d:	c9                   	leave
    a48e:	c3                   	ret

000000000000a48f <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a48f:	55                   	push   %rbp
    a490:	48 89 e5             	mov    %rsp,%rbp
    a493:	48 83 ec 10          	sub    $0x10,%rsp
    a497:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a49b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a49f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a7:	48 89 d6             	mov    %rdx,%rsi
    a4aa:	48 89 c7             	mov    %rax,%rdi
    a4ad:	e8 68 09 00 00       	call   ae1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a4b2:	90                   	nop
    a4b3:	c9                   	leave
    a4b4:	c3                   	ret
    a4b5:	90                   	nop

000000000000a4b6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a4b6:	55                   	push   %rbp
    a4b7:	48 89 e5             	mov    %rsp,%rbp
    a4ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4c2:	90                   	nop
    a4c3:	5d                   	pop    %rbp
    a4c4:	c3                   	ret

000000000000a4c5 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a4c5:	55                   	push   %rbp
    a4c6:	48 89 e5             	mov    %rsp,%rbp
    a4c9:	48 83 ec 20          	sub    $0x20,%rsp
    a4cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a4d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4e5:	48 89 ce             	mov    %rcx,%rsi
    a4e8:	48 89 c7             	mov    %rax,%rdi
    a4eb:	e8 3a 09 00 00       	call   ae2a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a4f0:	90                   	nop
    a4f1:	c9                   	leave
    a4f2:	c3                   	ret

000000000000a4f3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a4f3:	55                   	push   %rbp
    a4f4:	48 89 e5             	mov    %rsp,%rbp
    a4f7:	48 83 ec 20          	sub    $0x20,%rsp
    a4fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a4ff:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a506:	ff ff 1f 
    a509:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a50d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a511:	48 89 c7             	mov    %rax,%rdi
    a514:	e8 42 09 00 00       	call   ae5b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a519:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a51d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a521:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a525:	48 89 d6             	mov    %rdx,%rsi
    a528:	48 89 c7             	mov    %rax,%rdi
    a52b:	e8 fd ad ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a530:	48 8b 00             	mov    (%rax),%rax
      }
    a533:	c9                   	leave
    a534:	c3                   	ret
    a535:	90                   	nop

000000000000a536 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a536:	55                   	push   %rbp
    a537:	48 89 e5             	mov    %rsp,%rbp
    a53a:	48 83 ec 10          	sub    $0x10,%rsp
    a53e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a542:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a546:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a54a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a54e:	48 89 d6             	mov    %rdx,%rsi
    a551:	48 89 c7             	mov    %rax,%rdi
    a554:	e8 c5 f3 ff ff       	call   991e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a55d:	48 89 c7             	mov    %rax,%rdi
    a560:	e8 11 09 00 00       	call   ae76 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a565:	90                   	nop
    a566:	c9                   	leave
    a567:	c3                   	ret

000000000000a568 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a568:	55                   	push   %rbp
    a569:	48 89 e5             	mov    %rsp,%rbp
    a56c:	48 83 ec 10          	sub    $0x10,%rsp
    a570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a574:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a578:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a57c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a580:	48 89 d6             	mov    %rdx,%rsi
    a583:	48 89 c7             	mov    %rax,%rdi
    a586:	e8 19 09 00 00       	call   aea4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a58b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a58f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a596:	48 8b 10             	mov    (%rax),%rdx
    a599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a59d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a5a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a5:	48 8b 00             	mov    (%rax),%rax
    a5a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5ac:	48 c1 e2 02          	shl    $0x2,%rdx
    a5b0:	48 01 c2             	add    %rax,%rdx
    a5b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a5bb:	90                   	nop
    a5bc:	c9                   	leave
    a5bd:	c3                   	ret

000000000000a5be <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a5be:	55                   	push   %rbp
    a5bf:	48 89 e5             	mov    %rsp,%rbp
    a5c2:	48 83 ec 20          	sub    $0x20,%rsp
    a5c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a5d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5da:	48 89 d6             	mov    %rdx,%rsi
    a5dd:	48 89 c7             	mov    %rax,%rdi
    a5e0:	e8 f2 08 00 00       	call   aed7 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a5e5:	c9                   	leave
    a5e6:	c3                   	ret

000000000000a5e7 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a5e7:	55                   	push   %rbp
    a5e8:	48 89 e5             	mov    %rsp,%rbp
    a5eb:	48 83 ec 10          	sub    $0x10,%rsp
    a5ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a5f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ff:	48 89 d6             	mov    %rdx,%rsi
    a602:	48 89 c7             	mov    %rax,%rdi
    a605:	e8 f6 08 00 00       	call   af00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a60a:	90                   	nop
    a60b:	c9                   	leave
    a60c:	c3                   	ret
    a60d:	90                   	nop

000000000000a60e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a60e:	55                   	push   %rbp
    a60f:	48 89 e5             	mov    %rsp,%rbp
    a612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a616:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a61a:	90                   	nop
    a61b:	5d                   	pop    %rbp
    a61c:	c3                   	ret

000000000000a61d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a61d:	55                   	push   %rbp
    a61e:	48 89 e5             	mov    %rsp,%rbp
    a621:	48 83 ec 20          	sub    $0x20,%rsp
    a625:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a629:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a62d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a631:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a635:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63d:	48 89 ce             	mov    %rcx,%rsi
    a640:	48 89 c7             	mov    %rax,%rdi
    a643:	e8 c8 08 00 00       	call   af10 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a648:	90                   	nop
    a649:	c9                   	leave
    a64a:	c3                   	ret

000000000000a64b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a64b:	55                   	push   %rbp
    a64c:	48 89 e5             	mov    %rsp,%rbp
    a64f:	48 83 ec 20          	sub    $0x20,%rsp
    a653:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a657:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a65e:	ff ff 0f 
    a661:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a665:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a669:	48 89 c7             	mov    %rax,%rdi
    a66c:	e8 d0 08 00 00       	call   af41 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a671:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a675:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a679:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a67d:	48 89 d6             	mov    %rdx,%rsi
    a680:	48 89 c7             	mov    %rax,%rdi
    a683:	e8 a5 ac ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    a688:	48 8b 00             	mov    (%rax),%rax
      }
    a68b:	c9                   	leave
    a68c:	c3                   	ret
    a68d:	90                   	nop

000000000000a68e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a68e:	55                   	push   %rbp
    a68f:	48 89 e5             	mov    %rsp,%rbp
    a692:	48 83 ec 10          	sub    $0x10,%rsp
    a696:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a69a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a69e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a6:	48 89 d6             	mov    %rdx,%rsi
    a6a9:	48 89 c7             	mov    %rax,%rdi
    a6ac:	e8 29 f4 ff ff       	call   9ada <_ZNSaIP9VkImage_TEC1ERKS1_>
    a6b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b5:	48 89 c7             	mov    %rax,%rdi
    a6b8:	e8 9f 08 00 00       	call   af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a6bd:	90                   	nop
    a6be:	c9                   	leave
    a6bf:	c3                   	ret

000000000000a6c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a6c0:	55                   	push   %rbp
    a6c1:	48 89 e5             	mov    %rsp,%rbp
    a6c4:	48 83 ec 10          	sub    $0x10,%rsp
    a6c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a6d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6d8:	48 89 d6             	mov    %rdx,%rsi
    a6db:	48 89 c7             	mov    %rax,%rdi
    a6de:	e8 a7 08 00 00       	call   af8a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a6e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a6e7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ee:	48 8b 10             	mov    (%rax),%rdx
    a6f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a6f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6fd:	48 8b 00             	mov    (%rax),%rax
    a700:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a704:	48 c1 e2 03          	shl    $0x3,%rdx
    a708:	48 01 c2             	add    %rax,%rdx
    a70b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a70f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a713:	90                   	nop
    a714:	c9                   	leave
    a715:	c3                   	ret

000000000000a716 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a716:	55                   	push   %rbp
    a717:	48 89 e5             	mov    %rsp,%rbp
    a71a:	48 83 ec 20          	sub    $0x20,%rsp
    a71e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a726:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a72a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a732:	48 89 d6             	mov    %rdx,%rsi
    a735:	48 89 c7             	mov    %rax,%rdi
    a738:	e8 80 08 00 00       	call   afbd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    a73d:	c9                   	leave
    a73e:	c3                   	ret

000000000000a73f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a73f:	55                   	push   %rbp
    a740:	48 89 e5             	mov    %rsp,%rbp
    a743:	48 83 ec 10          	sub    $0x10,%rsp
    a747:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a74b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a74f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a757:	48 89 d6             	mov    %rdx,%rsi
    a75a:	48 89 c7             	mov    %rax,%rdi
    a75d:	e8 84 08 00 00       	call   afe6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    a762:	90                   	nop
    a763:	c9                   	leave
    a764:	c3                   	ret
    a765:	90                   	nop

000000000000a766 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    a766:	55                   	push   %rbp
    a767:	48 89 e5             	mov    %rsp,%rbp
    a76a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a76e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a772:	90                   	nop
    a773:	5d                   	pop    %rbp
    a774:	c3                   	ret

000000000000a775 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a775:	55                   	push   %rbp
    a776:	48 89 e5             	mov    %rsp,%rbp
    a779:	48 83 ec 20          	sub    $0x20,%rsp
    a77d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a781:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a785:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a789:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a78d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a795:	48 89 ce             	mov    %rcx,%rsi
    a798:	48 89 c7             	mov    %rax,%rdi
    a79b:	e8 56 08 00 00       	call   aff6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    a7a0:	90                   	nop
    a7a1:	c9                   	leave
    a7a2:	c3                   	ret

000000000000a7a3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a7a3:	55                   	push   %rbp
    a7a4:	48 89 e5             	mov    %rsp,%rbp
    a7a7:	48 83 ec 10          	sub    $0x10,%rsp
    a7ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a7af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7b3:	48 89 c7             	mov    %rax,%rdi
    a7b6:	e8 6d 08 00 00       	call   b028 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    a7bb:	c9                   	leave
    a7bc:	c3                   	ret
    a7bd:	90                   	nop

000000000000a7be <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a7be:	55                   	push   %rbp
    a7bf:	48 89 e5             	mov    %rsp,%rbp
    a7c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a7c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a7d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a7dc:	00 
    a7dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a7e8:	00 
	{ }
    a7e9:	90                   	nop
    a7ea:	5d                   	pop    %rbp
    a7eb:	c3                   	ret

000000000000a7ec <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a7ec:	55                   	push   %rbp
    a7ed:	48 89 e5             	mov    %rsp,%rbp
    a7f0:	48 83 ec 10          	sub    $0x10,%rsp
    a7f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a7fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a801:	74 15                	je     a818 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a807:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a80b:	48 89 d6             	mov    %rdx,%rsi
    a80e:	48 89 c7             	mov    %rax,%rdi
    a811:	e8 2c 08 00 00       	call   b042 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    a816:	eb 05                	jmp    a81d <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a818:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a81d:	c9                   	leave
    a81e:	c3                   	ret

000000000000a81f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a81f:	55                   	push   %rbp
    a820:	48 89 e5             	mov    %rsp,%rbp
    a823:	48 83 ec 20          	sub    $0x20,%rsp
    a827:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a82b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a82f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a833:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a83b:	48 89 d6             	mov    %rdx,%rsi
    a83e:	48 89 c7             	mov    %rax,%rdi
    a841:	e8 26 08 00 00       	call   b06c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    a846:	c9                   	leave
    a847:	c3                   	ret

000000000000a848 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    a848:	55                   	push   %rbp
    a849:	48 89 e5             	mov    %rsp,%rbp
    a84c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a854:	90                   	nop
    a855:	5d                   	pop    %rbp
    a856:	c3                   	ret
    a857:	90                   	nop

000000000000a858 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a858:	55                   	push   %rbp
    a859:	48 89 e5             	mov    %rsp,%rbp
    a85c:	48 83 ec 20          	sub    $0x20,%rsp
    a860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a864:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a868:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a86c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a870:	48 89 d0             	mov    %rdx,%rax
    a873:	48 c1 e0 06          	shl    $0x6,%rax
    a877:	48 01 d0             	add    %rdx,%rax
    a87a:	48 c1 e0 03          	shl    $0x3,%rax
    a87e:	48 89 c2             	mov    %rax,%rdx
    a881:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a885:	48 89 d6             	mov    %rdx,%rsi
    a888:	48 89 c7             	mov    %rax,%rdi
    a88b:	e8 00 9b ff ff       	call   4390 <_ZdlPvm@plt>
      }
    a890:	c9                   	leave
    a891:	c3                   	ret

000000000000a892 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a892:	55                   	push   %rbp
    a893:	48 89 e5             	mov    %rsp,%rbp
    a896:	48 83 ec 10          	sub    $0x10,%rsp
    a89a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a89e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a2:	48 89 c7             	mov    %rax,%rdi
    a8a5:	e8 22 08 00 00       	call   b0cc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    a8aa:	c9                   	leave
    a8ab:	c3                   	ret

000000000000a8ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a8ac:	55                   	push   %rbp
    a8ad:	48 89 e5             	mov    %rsp,%rbp
    a8b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a8bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a8ca:	00 
    a8cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8cf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a8d6:	00 
	{ }
    a8d7:	90                   	nop
    a8d8:	5d                   	pop    %rbp
    a8d9:	c3                   	ret

000000000000a8da <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a8da:	55                   	push   %rbp
    a8db:	48 89 e5             	mov    %rsp,%rbp
    a8de:	48 83 ec 10          	sub    $0x10,%rsp
    a8e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a8ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a8ef:	74 15                	je     a906 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a8f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8f9:	48 89 d6             	mov    %rdx,%rsi
    a8fc:	48 89 c7             	mov    %rax,%rdi
    a8ff:	e8 e2 07 00 00       	call   b0e6 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    a904:	eb 05                	jmp    a90b <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a906:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a90b:	c9                   	leave
    a90c:	c3                   	ret

000000000000a90d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a90d:	55                   	push   %rbp
    a90e:	48 89 e5             	mov    %rsp,%rbp
    a911:	48 83 ec 20          	sub    $0x20,%rsp
    a915:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a919:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a91d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a921:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a929:	48 89 d6             	mov    %rdx,%rsi
    a92c:	48 89 c7             	mov    %rax,%rdi
    a92f:	e8 dc 07 00 00       	call   b110 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    a934:	c9                   	leave
    a935:	c3                   	ret

000000000000a936 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    a936:	55                   	push   %rbp
    a937:	48 89 e5             	mov    %rsp,%rbp
    a93a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a93e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a942:	90                   	nop
    a943:	5d                   	pop    %rbp
    a944:	c3                   	ret
    a945:	90                   	nop

000000000000a946 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a946:	55                   	push   %rbp
    a947:	48 89 e5             	mov    %rsp,%rbp
    a94a:	48 83 ec 20          	sub    $0x20,%rsp
    a94e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a952:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a956:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a95a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a95e:	48 89 d0             	mov    %rdx,%rax
    a961:	48 c1 e0 06          	shl    $0x6,%rax
    a965:	48 01 d0             	add    %rdx,%rax
    a968:	48 c1 e0 02          	shl    $0x2,%rax
    a96c:	48 89 c2             	mov    %rax,%rdx
    a96f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a973:	48 89 d6             	mov    %rdx,%rsi
    a976:	48 89 c7             	mov    %rax,%rdi
    a979:	e8 12 9a ff ff       	call   4390 <_ZdlPvm@plt>
      }
    a97e:	c9                   	leave
    a97f:	c3                   	ret

000000000000a980 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a980:	55                   	push   %rbp
    a981:	48 89 e5             	mov    %rsp,%rbp
    a984:	48 83 ec 10          	sub    $0x10,%rsp
    a988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a98c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a990:	48 89 c7             	mov    %rax,%rdi
    a993:	e8 d8 07 00 00       	call   b170 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    a998:	c9                   	leave
    a999:	c3                   	ret

000000000000a99a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a99a:	55                   	push   %rbp
    a99b:	48 89 e5             	mov    %rsp,%rbp
    a99e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a9a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a9ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9b1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a9b8:	00 
    a9b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9bd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a9c4:	00 
	{ }
    a9c5:	90                   	nop
    a9c6:	5d                   	pop    %rbp
    a9c7:	c3                   	ret

000000000000a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a9c8:	55                   	push   %rbp
    a9c9:	48 89 e5             	mov    %rsp,%rbp
    a9cc:	48 83 ec 10          	sub    $0x10,%rsp
    a9d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a9d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a9dd:	74 15                	je     a9f4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    a9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9e3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9e7:	48 89 d6             	mov    %rdx,%rsi
    a9ea:	48 89 c7             	mov    %rax,%rdi
    a9ed:	e8 98 07 00 00       	call   b18a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    a9f2:	eb 05                	jmp    a9f9 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    a9f4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a9f9:	c9                   	leave
    a9fa:	c3                   	ret

000000000000a9fb <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a9fb:	55                   	push   %rbp
    a9fc:	48 89 e5             	mov    %rsp,%rbp
    a9ff:	48 83 ec 20          	sub    $0x20,%rsp
    aa03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aa0b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aa0f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa17:	48 89 d6             	mov    %rdx,%rsi
    aa1a:	48 89 c7             	mov    %rax,%rdi
    aa1d:	e8 92 07 00 00       	call   b1b4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    aa22:	c9                   	leave
    aa23:	c3                   	ret

000000000000aa24 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aa24:	55                   	push   %rbp
    aa25:	48 89 e5             	mov    %rsp,%rbp
    aa28:	48 83 ec 20          	sub    $0x20,%rsp
    aa2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aa38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa3c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aa43:	00 
    aa44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa48:	48 89 d6             	mov    %rdx,%rsi
    aa4b:	48 89 c7             	mov    %rax,%rdi
    aa4e:	e8 3d 99 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    aa53:	c9                   	leave
    aa54:	c3                   	ret

000000000000aa55 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aa55:	55                   	push   %rbp
    aa56:	48 89 e5             	mov    %rsp,%rbp
    aa59:	48 83 ec 10          	sub    $0x10,%rsp
    aa5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aa61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa65:	48 89 c7             	mov    %rax,%rdi
    aa68:	e8 a5 07 00 00       	call   b212 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    aa6d:	c9                   	leave
    aa6e:	c3                   	ret
    aa6f:	90                   	nop

000000000000aa70 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aa70:	55                   	push   %rbp
    aa71:	48 89 e5             	mov    %rsp,%rbp
    aa74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aa78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aa83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa87:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aa8e:	00 
    aa8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa93:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aa9a:	00 
	{ }
    aa9b:	90                   	nop
    aa9c:	5d                   	pop    %rbp
    aa9d:	c3                   	ret

000000000000aa9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aa9e:	55                   	push   %rbp
    aa9f:	48 89 e5             	mov    %rsp,%rbp
    aaa2:	48 83 ec 10          	sub    $0x10,%rsp
    aaa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aaae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aab3:	74 15                	je     aaca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    aab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aab9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aabd:	48 89 d6             	mov    %rdx,%rsi
    aac0:	48 89 c7             	mov    %rax,%rdi
    aac3:	e8 64 07 00 00       	call   b22c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    aac8:	eb 05                	jmp    aacf <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    aaca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aacf:	c9                   	leave
    aad0:	c3                   	ret

000000000000aad1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aad1:	55                   	push   %rbp
    aad2:	48 89 e5             	mov    %rsp,%rbp
    aad5:	48 83 ec 20          	sub    $0x20,%rsp
    aad9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aadd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aae1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aae5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aae9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aaed:	48 89 d6             	mov    %rdx,%rsi
    aaf0:	48 89 c7             	mov    %rax,%rdi
    aaf3:	e8 5e 07 00 00       	call   b256 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    aaf8:	c9                   	leave
    aaf9:	c3                   	ret

000000000000aafa <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    aafa:	55                   	push   %rbp
    aafb:	48 89 e5             	mov    %rsp,%rbp
    aafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab06:	90                   	nop
    ab07:	5d                   	pop    %rbp
    ab08:	c3                   	ret
    ab09:	90                   	nop

000000000000ab0a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ab0a:	55                   	push   %rbp
    ab0b:	48 89 e5             	mov    %rsp,%rbp
    ab0e:	48 83 ec 20          	sub    $0x20,%rsp
    ab12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ab1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab22:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ab29:	00 
    ab2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab2e:	48 89 d6             	mov    %rdx,%rsi
    ab31:	48 89 c7             	mov    %rax,%rdi
    ab34:	e8 57 98 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ab39:	c9                   	leave
    ab3a:	c3                   	ret

000000000000ab3b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ab3b:	55                   	push   %rbp
    ab3c:	48 89 e5             	mov    %rsp,%rbp
    ab3f:	48 83 ec 10          	sub    $0x10,%rsp
    ab43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ab47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab4b:	48 89 c7             	mov    %rax,%rdi
    ab4e:	e8 61 07 00 00       	call   b2b4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    ab53:	c9                   	leave
    ab54:	c3                   	ret
    ab55:	90                   	nop

000000000000ab56 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ab56:	55                   	push   %rbp
    ab57:	48 89 e5             	mov    %rsp,%rbp
    ab5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ab5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab62:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ab69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab6d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab74:	00 
    ab75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab79:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab80:	00 
	{ }
    ab81:	90                   	nop
    ab82:	5d                   	pop    %rbp
    ab83:	c3                   	ret

000000000000ab84 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab84:	55                   	push   %rbp
    ab85:	48 89 e5             	mov    %rsp,%rbp
    ab88:	48 83 ec 10          	sub    $0x10,%rsp
    ab8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab94:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab99:	74 15                	je     abb0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ab9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab9f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aba3:	48 89 d6             	mov    %rdx,%rsi
    aba6:	48 89 c7             	mov    %rax,%rdi
    aba9:	e8 20 07 00 00       	call   b2ce <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    abae:	eb 05                	jmp    abb5 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    abb0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    abb5:	c9                   	leave
    abb6:	c3                   	ret

000000000000abb7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    abb7:	55                   	push   %rbp
    abb8:	48 89 e5             	mov    %rsp,%rbp
    abbb:	48 83 ec 20          	sub    $0x20,%rsp
    abbf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abc3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    abc7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    abcb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    abcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abd3:	48 89 d6             	mov    %rdx,%rsi
    abd6:	48 89 c7             	mov    %rax,%rdi
    abd9:	e8 1a 07 00 00       	call   b2f8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    abde:	c9                   	leave
    abdf:	c3                   	ret

000000000000abe0 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    abe0:	55                   	push   %rbp
    abe1:	48 89 e5             	mov    %rsp,%rbp
    abe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abe8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abec:	90                   	nop
    abed:	5d                   	pop    %rbp
    abee:	c3                   	ret
    abef:	90                   	nop

000000000000abf0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    abf0:	55                   	push   %rbp
    abf1:	48 89 e5             	mov    %rsp,%rbp
    abf4:	48 83 ec 20          	sub    $0x20,%rsp
    abf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abfc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ac04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac08:	48 89 d0             	mov    %rdx,%rax
    ac0b:	48 01 c0             	add    %rax,%rax
    ac0e:	48 01 d0             	add    %rdx,%rax
    ac11:	48 c1 e0 03          	shl    $0x3,%rax
    ac15:	48 89 c2             	mov    %rax,%rdx
    ac18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac1c:	48 89 d6             	mov    %rdx,%rsi
    ac1f:	48 89 c7             	mov    %rax,%rdi
    ac22:	e8 69 97 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ac27:	c9                   	leave
    ac28:	c3                   	ret

000000000000ac29 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ac29:	55                   	push   %rbp
    ac2a:	48 89 e5             	mov    %rsp,%rbp
    ac2d:	48 83 ec 10          	sub    $0x10,%rsp
    ac31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac39:	48 89 c7             	mov    %rax,%rdi
    ac3c:	e8 15 07 00 00       	call   b356 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    ac41:	c9                   	leave
    ac42:	c3                   	ret
    ac43:	90                   	nop

000000000000ac44 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ac44:	55                   	push   %rbp
    ac45:	48 89 e5             	mov    %rsp,%rbp
    ac48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ac4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac50:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ac57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac5b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ac62:	00 
    ac63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac67:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ac6e:	00 
	{ }
    ac6f:	90                   	nop
    ac70:	5d                   	pop    %rbp
    ac71:	c3                   	ret

000000000000ac72 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ac72:	55                   	push   %rbp
    ac73:	48 89 e5             	mov    %rsp,%rbp
    ac76:	48 83 ec 10          	sub    $0x10,%rsp
    ac7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ac82:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ac87:	74 15                	je     ac9e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    ac89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac8d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac91:	48 89 d6             	mov    %rdx,%rsi
    ac94:	48 89 c7             	mov    %rax,%rdi
    ac97:	e8 d4 06 00 00       	call   b370 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    ac9c:	eb 05                	jmp    aca3 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    ac9e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aca3:	c9                   	leave
    aca4:	c3                   	ret

000000000000aca5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aca5:	55                   	push   %rbp
    aca6:	48 89 e5             	mov    %rsp,%rbp
    aca9:	48 83 ec 20          	sub    $0x20,%rsp
    acad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    acb1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    acb5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    acb9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    acbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acc1:	48 89 d6             	mov    %rdx,%rsi
    acc4:	48 89 c7             	mov    %rax,%rdi
    acc7:	e8 ce 06 00 00       	call   b39a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    accc:	c9                   	leave
    accd:	c3                   	ret

000000000000acce <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    acce:	55                   	push   %rbp
    accf:	48 89 e5             	mov    %rsp,%rbp
    acd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acda:	90                   	nop
    acdb:	5d                   	pop    %rbp
    acdc:	c3                   	ret

000000000000acdd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    acdd:	55                   	push   %rbp
    acde:	48 89 e5             	mov    %rsp,%rbp
    ace1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ace5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace9:	5d                   	pop    %rbp
    acea:	c3                   	ret

000000000000aceb <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    aceb:	55                   	push   %rbp
    acec:	48 89 e5             	mov    %rsp,%rbp
    acef:	53                   	push   %rbx
    acf0:	48 83 ec 18          	sub    $0x18,%rsp
    acf4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    acf8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    acfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad00:	48 89 c6             	mov    %rax,%rsi
    ad03:	bf 18 00 00 00       	mov    $0x18,%edi
    ad08:	e8 53 a1 ff ff       	call   4e60 <_ZnwmPv>
    ad0d:	48 89 c3             	mov    %rax,%rbx
    ad10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad14:	48 89 c7             	mov    %rax,%rdi
    ad17:	e8 48 e8 ff ff       	call   9564 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    ad1c:	48 89 c1             	mov    %rax,%rcx
    ad1f:	48 8b 01             	mov    (%rcx),%rax
    ad22:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    ad26:	48 89 03             	mov    %rax,(%rbx)
    ad29:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    ad2d:	48 8b 41 10          	mov    0x10(%rcx),%rax
    ad31:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    ad35:	90                   	nop
    ad36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad3a:	c9                   	leave
    ad3b:	c3                   	ret

000000000000ad3c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ad3c:	55                   	push   %rbp
    ad3d:	48 89 e5             	mov    %rsp,%rbp
    ad40:	48 83 ec 20          	sub    $0x20,%rsp
    ad44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ad54:	48 89 d0             	mov    %rdx,%rax
    ad57:	48 c1 e0 03          	shl    $0x3,%rax
    ad5b:	48 29 d0             	sub    %rdx,%rax
    ad5e:	48 c1 e0 02          	shl    $0x2,%rax
    ad62:	48 89 c2             	mov    %rax,%rdx
    ad65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad69:	48 89 d6             	mov    %rdx,%rsi
    ad6c:	48 89 c7             	mov    %rax,%rdi
    ad6f:	e8 1c 96 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ad74:	c9                   	leave
    ad75:	c3                   	ret

000000000000ad76 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ad76:	55                   	push   %rbp
    ad77:	48 89 e5             	mov    %rsp,%rbp
    ad7a:	48 83 ec 10          	sub    $0x10,%rsp
    ad7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ad82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad86:	48 89 c7             	mov    %rax,%rdi
    ad89:	e8 52 06 00 00       	call   b3e0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    ad8e:	c9                   	leave
    ad8f:	c3                   	ret

000000000000ad90 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ad90:	55                   	push   %rbp
    ad91:	48 89 e5             	mov    %rsp,%rbp
    ad94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ad98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad9c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ada3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    adae:	00 
    adaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adb3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    adba:	00 
	{ }
    adbb:	90                   	nop
    adbc:	5d                   	pop    %rbp
    adbd:	c3                   	ret

000000000000adbe <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    adbe:	55                   	push   %rbp
    adbf:	48 89 e5             	mov    %rsp,%rbp
    adc2:	48 83 ec 10          	sub    $0x10,%rsp
    adc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    adce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    add3:	74 15                	je     adea <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    add5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    addd:	48 89 d6             	mov    %rdx,%rsi
    ade0:	48 89 c7             	mov    %rax,%rdi
    ade3:	e8 12 06 00 00       	call   b3fa <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    ade8:	eb 05                	jmp    adef <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    adea:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    adef:	c9                   	leave
    adf0:	c3                   	ret

000000000000adf1 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    adf1:	55                   	push   %rbp
    adf2:	48 89 e5             	mov    %rsp,%rbp
    adf5:	48 83 ec 20          	sub    $0x20,%rsp
    adf9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    adfd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ae01:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ae05:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae0d:	48 89 d6             	mov    %rdx,%rsi
    ae10:	48 89 c7             	mov    %rax,%rdi
    ae13:	e8 0c 06 00 00       	call   b424 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    ae18:	c9                   	leave
    ae19:	c3                   	ret

000000000000ae1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    ae1a:	55                   	push   %rbp
    ae1b:	48 89 e5             	mov    %rsp,%rbp
    ae1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae26:	90                   	nop
    ae27:	5d                   	pop    %rbp
    ae28:	c3                   	ret
    ae29:	90                   	nop

000000000000ae2a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ae2a:	55                   	push   %rbp
    ae2b:	48 89 e5             	mov    %rsp,%rbp
    ae2e:	48 83 ec 20          	sub    $0x20,%rsp
    ae32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ae3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae42:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ae49:	00 
    ae4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae4e:	48 89 d6             	mov    %rdx,%rsi
    ae51:	48 89 c7             	mov    %rax,%rdi
    ae54:	e8 37 95 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ae59:	c9                   	leave
    ae5a:	c3                   	ret

000000000000ae5b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ae5b:	55                   	push   %rbp
    ae5c:	48 89 e5             	mov    %rsp,%rbp
    ae5f:	48 83 ec 10          	sub    $0x10,%rsp
    ae63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ae67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae6b:	48 89 c7             	mov    %rax,%rdi
    ae6e:	e8 0f 06 00 00       	call   b482 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    ae73:	c9                   	leave
    ae74:	c3                   	ret
    ae75:	90                   	nop

000000000000ae76 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ae76:	55                   	push   %rbp
    ae77:	48 89 e5             	mov    %rsp,%rbp
    ae7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ae7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae82:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ae89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae8d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ae94:	00 
    ae95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae99:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aea0:	00 
	{ }
    aea1:	90                   	nop
    aea2:	5d                   	pop    %rbp
    aea3:	c3                   	ret

000000000000aea4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aea4:	55                   	push   %rbp
    aea5:	48 89 e5             	mov    %rsp,%rbp
    aea8:	48 83 ec 10          	sub    $0x10,%rsp
    aeac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aeb4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aeb9:	74 15                	je     aed0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    aebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aebf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aec3:	48 89 d6             	mov    %rdx,%rsi
    aec6:	48 89 c7             	mov    %rax,%rdi
    aec9:	e8 ce 05 00 00       	call   b49c <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    aece:	eb 05                	jmp    aed5 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    aed0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aed5:	c9                   	leave
    aed6:	c3                   	ret

000000000000aed7 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aed7:	55                   	push   %rbp
    aed8:	48 89 e5             	mov    %rsp,%rbp
    aedb:	48 83 ec 20          	sub    $0x20,%rsp
    aedf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aee3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aee7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aeeb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aeef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aef3:	48 89 d6             	mov    %rdx,%rsi
    aef6:	48 89 c7             	mov    %rax,%rdi
    aef9:	e8 c8 05 00 00       	call   b4c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    aefe:	c9                   	leave
    aeff:	c3                   	ret

000000000000af00 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    af00:	55                   	push   %rbp
    af01:	48 89 e5             	mov    %rsp,%rbp
    af04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af0c:	90                   	nop
    af0d:	5d                   	pop    %rbp
    af0e:	c3                   	ret
    af0f:	90                   	nop

000000000000af10 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af10:	55                   	push   %rbp
    af11:	48 89 e5             	mov    %rsp,%rbp
    af14:	48 83 ec 20          	sub    $0x20,%rsp
    af18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    af24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af28:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    af2f:	00 
    af30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af34:	48 89 d6             	mov    %rdx,%rsi
    af37:	48 89 c7             	mov    %rax,%rdi
    af3a:	e8 51 94 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    af3f:	c9                   	leave
    af40:	c3                   	ret

000000000000af41 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    af41:	55                   	push   %rbp
    af42:	48 89 e5             	mov    %rsp,%rbp
    af45:	48 83 ec 10          	sub    $0x10,%rsp
    af49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    af4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af51:	48 89 c7             	mov    %rax,%rdi
    af54:	e8 cb 05 00 00       	call   b524 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    af59:	c9                   	leave
    af5a:	c3                   	ret
    af5b:	90                   	nop

000000000000af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    af5c:	55                   	push   %rbp
    af5d:	48 89 e5             	mov    %rsp,%rbp
    af60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    af64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af68:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    af6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af73:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    af7a:	00 
    af7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af7f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    af86:	00 
	{ }
    af87:	90                   	nop
    af88:	5d                   	pop    %rbp
    af89:	c3                   	ret

000000000000af8a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    af8a:	55                   	push   %rbp
    af8b:	48 89 e5             	mov    %rsp,%rbp
    af8e:	48 83 ec 10          	sub    $0x10,%rsp
    af92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    af9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    af9f:	74 15                	je     afb6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    afa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afa5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    afa9:	48 89 d6             	mov    %rdx,%rsi
    afac:	48 89 c7             	mov    %rax,%rdi
    afaf:	e8 8a 05 00 00       	call   b53e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    afb4:	eb 05                	jmp    afbb <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    afb6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    afbb:	c9                   	leave
    afbc:	c3                   	ret

000000000000afbd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    afbd:	55                   	push   %rbp
    afbe:	48 89 e5             	mov    %rsp,%rbp
    afc1:	48 83 ec 20          	sub    $0x20,%rsp
    afc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    afc9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    afcd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    afd1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    afd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afd9:	48 89 d6             	mov    %rdx,%rsi
    afdc:	48 89 c7             	mov    %rax,%rdi
    afdf:	e8 84 05 00 00       	call   b568 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    afe4:	c9                   	leave
    afe5:	c3                   	ret

000000000000afe6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    afe6:	55                   	push   %rbp
    afe7:	48 89 e5             	mov    %rsp,%rbp
    afea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aff2:	90                   	nop
    aff3:	5d                   	pop    %rbp
    aff4:	c3                   	ret
    aff5:	90                   	nop

000000000000aff6 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aff6:	55                   	push   %rbp
    aff7:	48 89 e5             	mov    %rsp,%rbp
    affa:	48 83 ec 20          	sub    $0x20,%rsp
    affe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b00a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b00e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b015:	00 
    b016:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b01a:	48 89 d6             	mov    %rdx,%rsi
    b01d:	48 89 c7             	mov    %rax,%rdi
    b020:	e8 6b 93 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    b025:	c9                   	leave
    b026:	c3                   	ret
    b027:	90                   	nop

000000000000b028 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b028:	55                   	push   %rbp
    b029:	48 89 e5             	mov    %rsp,%rbp
    b02c:	48 83 ec 10          	sub    $0x10,%rsp
    b030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b038:	48 89 c7             	mov    %rax,%rdi
    b03b:	e8 86 05 00 00       	call   b5c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b040:	c9                   	leave
    b041:	c3                   	ret

000000000000b042 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b042:	55                   	push   %rbp
    b043:	48 89 e5             	mov    %rsp,%rbp
    b046:	48 83 ec 10          	sub    $0x10,%rsp
    b04a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b04e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b052:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b05a:	ba 00 00 00 00       	mov    $0x0,%edx
    b05f:	48 89 ce             	mov    %rcx,%rsi
    b062:	48 89 c7             	mov    %rax,%rdi
    b065:	e8 70 05 00 00       	call   b5da <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    b06a:	c9                   	leave
    b06b:	c3                   	ret

000000000000b06c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b06c:	55                   	push   %rbp
    b06d:	48 89 e5             	mov    %rsp,%rbp
    b070:	48 83 ec 20          	sub    $0x20,%rsp
    b074:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b078:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b07c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b081:	74 43                	je     b0c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b087:	48 89 c7             	mov    %rax,%rdi
    b08a:	e8 b6 05 00 00       	call   b645 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    b08f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b093:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b097:	48 89 c7             	mov    %rax,%rdi
    b09a:	e8 b4 05 00 00       	call   b653 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b09f:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    b0a6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b0a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0ab:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b0af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b0b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0b7:	48 89 ce             	mov    %rcx,%rsi
    b0ba:	48 89 c7             	mov    %rax,%rdi
    b0bd:	e8 eb 05 00 00       	call   b6ad <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    b0c2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b0c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b0ca:	c9                   	leave
    b0cb:	c3                   	ret

000000000000b0cc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b0cc:	55                   	push   %rbp
    b0cd:	48 89 e5             	mov    %rsp,%rbp
    b0d0:	48 83 ec 10          	sub    $0x10,%rsp
    b0d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b0d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0dc:	48 89 c7             	mov    %rax,%rdi
    b0df:	e8 0e 06 00 00       	call   b6f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b0e4:	c9                   	leave
    b0e5:	c3                   	ret

000000000000b0e6 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b0e6:	55                   	push   %rbp
    b0e7:	48 89 e5             	mov    %rsp,%rbp
    b0ea:	48 83 ec 10          	sub    $0x10,%rsp
    b0ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b0f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b0fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0fe:	ba 00 00 00 00       	mov    $0x0,%edx
    b103:	48 89 ce             	mov    %rcx,%rsi
    b106:	48 89 c7             	mov    %rax,%rdi
    b109:	e8 f8 05 00 00       	call   b706 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    b10e:	c9                   	leave
    b10f:	c3                   	ret

000000000000b110 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b110:	55                   	push   %rbp
    b111:	48 89 e5             	mov    %rsp,%rbp
    b114:	48 83 ec 20          	sub    $0x20,%rsp
    b118:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b11c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b120:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b125:	74 43                	je     b16a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b12b:	48 89 c7             	mov    %rax,%rdi
    b12e:	e8 3e 06 00 00       	call   b771 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    b133:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b13b:	48 89 c7             	mov    %rax,%rdi
    b13e:	e8 3c 06 00 00       	call   b77f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b143:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    b14a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b14b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b14f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b153:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b157:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b15b:	48 89 ce             	mov    %rcx,%rsi
    b15e:	48 89 c7             	mov    %rax,%rdi
    b161:	e8 73 06 00 00       	call   b7d9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b166:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b16a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b16e:	c9                   	leave
    b16f:	c3                   	ret

000000000000b170 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b170:	55                   	push   %rbp
    b171:	48 89 e5             	mov    %rsp,%rbp
    b174:	48 83 ec 10          	sub    $0x10,%rsp
    b178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b17c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b180:	48 89 c7             	mov    %rax,%rdi
    b183:	e8 96 06 00 00       	call   b81e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b188:	c9                   	leave
    b189:	c3                   	ret

000000000000b18a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b18a:	55                   	push   %rbp
    b18b:	48 89 e5             	mov    %rsp,%rbp
    b18e:	48 83 ec 10          	sub    $0x10,%rsp
    b192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b196:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b19a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1a2:	ba 00 00 00 00       	mov    $0x0,%edx
    b1a7:	48 89 ce             	mov    %rcx,%rsi
    b1aa:	48 89 c7             	mov    %rax,%rdi
    b1ad:	e8 80 06 00 00       	call   b832 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b1b2:	c9                   	leave
    b1b3:	c3                   	ret

000000000000b1b4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b1b4:	55                   	push   %rbp
    b1b5:	48 89 e5             	mov    %rsp,%rbp
    b1b8:	48 83 ec 20          	sub    $0x20,%rsp
    b1bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b1c4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b1c9:	74 40                	je     b20b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b1cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1cf:	48 89 c7             	mov    %rax,%rdi
    b1d2:	e8 bc 06 00 00       	call   b893 <_ZSt11__addressofIPKcEPT_RS2_>
    b1d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b1db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1df:	48 89 c7             	mov    %rax,%rdi
    b1e2:	e8 ba 06 00 00       	call   b8a1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b1e7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b1ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b1f0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b1f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b1f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1fc:	48 89 ce             	mov    %rcx,%rsi
    b1ff:	48 89 c7             	mov    %rax,%rdi
    b202:	e8 c1 06 00 00       	call   b8c8 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b207:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b20b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b20f:	c9                   	leave
    b210:	c3                   	ret
    b211:	90                   	nop

000000000000b212 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b212:	55                   	push   %rbp
    b213:	48 89 e5             	mov    %rsp,%rbp
    b216:	48 83 ec 10          	sub    $0x10,%rsp
    b21a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b21e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b222:	48 89 c7             	mov    %rax,%rdi
    b225:	e8 e2 06 00 00       	call   b90c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b22a:	c9                   	leave
    b22b:	c3                   	ret

000000000000b22c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b22c:	55                   	push   %rbp
    b22d:	48 89 e5             	mov    %rsp,%rbp
    b230:	48 83 ec 10          	sub    $0x10,%rsp
    b234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b238:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b23c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b244:	ba 00 00 00 00       	mov    $0x0,%edx
    b249:	48 89 ce             	mov    %rcx,%rsi
    b24c:	48 89 c7             	mov    %rax,%rdi
    b24f:	e8 cc 06 00 00       	call   b920 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b254:	c9                   	leave
    b255:	c3                   	ret

000000000000b256 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b256:	55                   	push   %rbp
    b257:	48 89 e5             	mov    %rsp,%rbp
    b25a:	48 83 ec 20          	sub    $0x20,%rsp
    b25e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b262:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b266:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b26b:	74 40                	je     b2ad <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b26d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b271:	48 89 c7             	mov    %rax,%rdi
    b274:	e8 08 07 00 00       	call   b981 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b279:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b27d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b281:	48 89 c7             	mov    %rax,%rdi
    b284:	e8 06 07 00 00       	call   b98f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b289:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b28e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b292:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b296:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b29a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b29e:	48 89 ce             	mov    %rcx,%rsi
    b2a1:	48 89 c7             	mov    %rax,%rdi
    b2a4:	e8 0d 07 00 00       	call   b9b6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b2a9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b2ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b2b1:	c9                   	leave
    b2b2:	c3                   	ret
    b2b3:	90                   	nop

000000000000b2b4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b2b4:	55                   	push   %rbp
    b2b5:	48 89 e5             	mov    %rsp,%rbp
    b2b8:	48 83 ec 10          	sub    $0x10,%rsp
    b2bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b2c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c4:	48 89 c7             	mov    %rax,%rdi
    b2c7:	e8 2e 07 00 00       	call   b9fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b2cc:	c9                   	leave
    b2cd:	c3                   	ret

000000000000b2ce <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b2ce:	55                   	push   %rbp
    b2cf:	48 89 e5             	mov    %rsp,%rbp
    b2d2:	48 83 ec 10          	sub    $0x10,%rsp
    b2d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b2de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b2e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e6:	ba 00 00 00 00       	mov    $0x0,%edx
    b2eb:	48 89 ce             	mov    %rcx,%rsi
    b2ee:	48 89 c7             	mov    %rax,%rdi
    b2f1:	e8 18 07 00 00       	call   ba0e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b2f6:	c9                   	leave
    b2f7:	c3                   	ret

000000000000b2f8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b2f8:	55                   	push   %rbp
    b2f9:	48 89 e5             	mov    %rsp,%rbp
    b2fc:	48 83 ec 20          	sub    $0x20,%rsp
    b300:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b304:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b308:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b30d:	74 40                	je     b34f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b30f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b313:	48 89 c7             	mov    %rax,%rdi
    b316:	e8 c2 f9 ff ff       	call   acdd <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b31b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b31f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b323:	48 89 c7             	mov    %rax,%rdi
    b326:	e8 4d 07 00 00       	call   ba78 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b32b:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b330:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b334:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b338:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b33c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b340:	48 89 ce             	mov    %rcx,%rsi
    b343:	48 89 c7             	mov    %rax,%rdi
    b346:	e8 76 07 00 00       	call   bac1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b34b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b34f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b353:	c9                   	leave
    b354:	c3                   	ret
    b355:	90                   	nop

000000000000b356 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b356:	55                   	push   %rbp
    b357:	48 89 e5             	mov    %rsp,%rbp
    b35a:	48 83 ec 10          	sub    $0x10,%rsp
    b35e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b362:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b366:	48 89 c7             	mov    %rax,%rdi
    b369:	e8 98 07 00 00       	call   bb06 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b36e:	c9                   	leave
    b36f:	c3                   	ret

000000000000b370 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b370:	55                   	push   %rbp
    b371:	48 89 e5             	mov    %rsp,%rbp
    b374:	48 83 ec 10          	sub    $0x10,%rsp
    b378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b37c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b380:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b388:	ba 00 00 00 00       	mov    $0x0,%edx
    b38d:	48 89 ce             	mov    %rcx,%rsi
    b390:	48 89 c7             	mov    %rax,%rdi
    b393:	e8 82 07 00 00       	call   bb1a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b398:	c9                   	leave
    b399:	c3                   	ret

000000000000b39a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b39a:	55                   	push   %rbp
    b39b:	48 89 e5             	mov    %rsp,%rbp
    b39e:	48 83 ec 20          	sub    $0x20,%rsp
    b3a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b3a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b3aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b3b2:	eb 1e                	jmp    b3d2 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b3b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3b8:	48 89 c7             	mov    %rax,%rdi
    b3bb:	e8 c5 07 00 00       	call   bb85 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b3c0:	48 89 c7             	mov    %rax,%rdi
    b3c3:	e8 cb 07 00 00       	call   bb93 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b3c8:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b3cd:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b3d2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b3d7:	75 db                	jne    b3b4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b3d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b3dd:	c9                   	leave
    b3de:	c3                   	ret
    b3df:	90                   	nop

000000000000b3e0 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b3e0:	55                   	push   %rbp
    b3e1:	48 89 e5             	mov    %rsp,%rbp
    b3e4:	48 83 ec 10          	sub    $0x10,%rsp
    b3e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b3ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f0:	48 89 c7             	mov    %rax,%rdi
    b3f3:	e8 c4 07 00 00       	call   bbbc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b3f8:	c9                   	leave
    b3f9:	c3                   	ret

000000000000b3fa <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b3fa:	55                   	push   %rbp
    b3fb:	48 89 e5             	mov    %rsp,%rbp
    b3fe:	48 83 ec 10          	sub    $0x10,%rsp
    b402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b406:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b40a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b40e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b412:	ba 00 00 00 00       	mov    $0x0,%edx
    b417:	48 89 ce             	mov    %rcx,%rsi
    b41a:	48 89 c7             	mov    %rax,%rdi
    b41d:	e8 ae 07 00 00       	call   bbd0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b422:	c9                   	leave
    b423:	c3                   	ret

000000000000b424 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b424:	55                   	push   %rbp
    b425:	48 89 e5             	mov    %rsp,%rbp
    b428:	48 83 ec 20          	sub    $0x20,%rsp
    b42c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b430:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b434:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b439:	74 40                	je     b47b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b43b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b43f:	48 89 c7             	mov    %rax,%rdi
    b442:	e8 ea 07 00 00       	call   bc31 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b447:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b44b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44f:	48 89 c7             	mov    %rax,%rdi
    b452:	e8 e8 07 00 00       	call   bc3f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b457:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b45c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b460:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b464:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b468:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b46c:	48 89 ce             	mov    %rcx,%rsi
    b46f:	48 89 c7             	mov    %rax,%rdi
    b472:	e8 f5 07 00 00       	call   bc6c <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b477:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b47b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b47f:	c9                   	leave
    b480:	c3                   	ret
    b481:	90                   	nop

000000000000b482 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b482:	55                   	push   %rbp
    b483:	48 89 e5             	mov    %rsp,%rbp
    b486:	48 83 ec 10          	sub    $0x10,%rsp
    b48a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b48e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b492:	48 89 c7             	mov    %rax,%rdi
    b495:	e8 16 08 00 00       	call   bcb0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b49a:	c9                   	leave
    b49b:	c3                   	ret

000000000000b49c <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b49c:	55                   	push   %rbp
    b49d:	48 89 e5             	mov    %rsp,%rbp
    b4a0:	48 83 ec 10          	sub    $0x10,%rsp
    b4a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b4ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b4b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4b4:	ba 00 00 00 00       	mov    $0x0,%edx
    b4b9:	48 89 ce             	mov    %rcx,%rsi
    b4bc:	48 89 c7             	mov    %rax,%rdi
    b4bf:	e8 00 08 00 00       	call   bcc4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b4c4:	c9                   	leave
    b4c5:	c3                   	ret

000000000000b4c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b4c6:	55                   	push   %rbp
    b4c7:	48 89 e5             	mov    %rsp,%rbp
    b4ca:	48 83 ec 20          	sub    $0x20,%rsp
    b4ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b4d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b4d6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b4db:	74 40                	je     b51d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b4dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4e1:	48 89 c7             	mov    %rax,%rdi
    b4e4:	e8 3c 08 00 00       	call   bd25 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b4e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b4ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4f1:	48 89 c7             	mov    %rax,%rdi
    b4f4:	e8 3a 08 00 00       	call   bd33 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b4f9:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b4fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b502:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b506:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b50a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b50e:	48 89 ce             	mov    %rcx,%rsi
    b511:	48 89 c7             	mov    %rax,%rdi
    b514:	e8 40 08 00 00       	call   bd59 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b519:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b51d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b521:	c9                   	leave
    b522:	c3                   	ret
    b523:	90                   	nop

000000000000b524 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b524:	55                   	push   %rbp
    b525:	48 89 e5             	mov    %rsp,%rbp
    b528:	48 83 ec 10          	sub    $0x10,%rsp
    b52c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b530:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b534:	48 89 c7             	mov    %rax,%rdi
    b537:	e8 62 08 00 00       	call   bd9e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b53c:	c9                   	leave
    b53d:	c3                   	ret

000000000000b53e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b53e:	55                   	push   %rbp
    b53f:	48 89 e5             	mov    %rsp,%rbp
    b542:	48 83 ec 10          	sub    $0x10,%rsp
    b546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b54a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b54e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b556:	ba 00 00 00 00       	mov    $0x0,%edx
    b55b:	48 89 ce             	mov    %rcx,%rsi
    b55e:	48 89 c7             	mov    %rax,%rdi
    b561:	e8 4c 08 00 00       	call   bdb2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b566:	c9                   	leave
    b567:	c3                   	ret

000000000000b568 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b568:	55                   	push   %rbp
    b569:	48 89 e5             	mov    %rsp,%rbp
    b56c:	48 83 ec 20          	sub    $0x20,%rsp
    b570:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b574:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b578:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b57d:	74 40                	je     b5bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b57f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b583:	48 89 c7             	mov    %rax,%rdi
    b586:	e8 88 08 00 00       	call   be13 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b58b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b593:	48 89 c7             	mov    %rax,%rdi
    b596:	e8 86 08 00 00       	call   be21 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b59b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b5a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b5a4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b5a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b5ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5b0:	48 89 ce             	mov    %rcx,%rsi
    b5b3:	48 89 c7             	mov    %rax,%rdi
    b5b6:	e8 8d 08 00 00       	call   be48 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b5bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b5bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b5c3:	c9                   	leave
    b5c4:	c3                   	ret
    b5c5:	90                   	nop

000000000000b5c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b5c6:	55                   	push   %rbp
    b5c7:	48 89 e5             	mov    %rsp,%rbp
    b5ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b5ce:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b5d5:	03 3f 00 
      }
    b5d8:	5d                   	pop    %rbp
    b5d9:	c3                   	ret

000000000000b5da <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b5da:	55                   	push   %rbp
    b5db:	48 89 e5             	mov    %rsp,%rbp
    b5de:	48 83 ec 20          	sub    $0x20,%rsp
    b5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b5ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5f2:	48 89 c7             	mov    %rax,%rdi
    b5f5:	e8 cc ff ff ff       	call   b5c6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b5fa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b5fe:	0f 92 c0             	setb   %al
    b601:	0f b6 c0             	movzbl %al,%eax
    b604:	48 85 c0             	test   %rax,%rax
    b607:	0f 95 c0             	setne  %al
    b60a:	84 c0                	test   %al,%al
    b60c:	74 1a                	je     b628 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b60e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b615:	07 7e 00 
    b618:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b61c:	73 05                	jae    b623 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b61e:	e8 4d 8c ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b623:	e8 b8 8a ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b628:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b62c:	48 89 d0             	mov    %rdx,%rax
    b62f:	48 c1 e0 06          	shl    $0x6,%rax
    b633:	48 01 d0             	add    %rdx,%rax
    b636:	48 c1 e0 03          	shl    $0x3,%rax
    b63a:	48 89 c7             	mov    %rax,%rdi
    b63d:	e8 3e 8d ff ff       	call   4380 <_Znwm@plt>
    b642:	90                   	nop
      }
    b643:	c9                   	leave
    b644:	c3                   	ret

000000000000b645 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b645:	55                   	push   %rbp
    b646:	48 89 e5             	mov    %rsp,%rbp
    b649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b651:	5d                   	pop    %rbp
    b652:	c3                   	ret

000000000000b653 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b653:	55                   	push   %rbp
    b654:	48 89 e5             	mov    %rsp,%rbp
    b657:	48 83 ec 10          	sub    $0x10,%rsp
    b65b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b65f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b663:	48 89 c6             	mov    %rax,%rsi
    b666:	bf 08 02 00 00       	mov    $0x208,%edi
    b66b:	e8 f0 97 ff ff       	call   4e60 <_ZnwmPv>
    b670:	b9 08 02 00 00       	mov    $0x208,%ecx
    b675:	be 00 00 00 00       	mov    $0x0,%esi
    b67a:	48 89 30             	mov    %rsi,(%rax)
    b67d:	89 ca                	mov    %ecx,%edx
    b67f:	48 01 c2             	add    %rax,%rdx
    b682:	48 83 c2 08          	add    $0x8,%rdx
    b686:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b68a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b68e:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b692:	48 29 d0             	sub    %rdx,%rax
    b695:	01 c1                	add    %eax,%ecx
    b697:	83 e1 f8             	and    $0xfffffff8,%ecx
    b69a:	89 c8                	mov    %ecx,%eax
    b69c:	c1 e8 03             	shr    $0x3,%eax
    b69f:	89 c1                	mov    %eax,%ecx
    b6a1:	48 89 d7             	mov    %rdx,%rdi
    b6a4:	48 89 f0             	mov    %rsi,%rax
    b6a7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b6aa:	90                   	nop
    b6ab:	c9                   	leave
    b6ac:	c3                   	ret

000000000000b6ad <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b6ad:	55                   	push   %rbp
    b6ae:	48 89 e5             	mov    %rsp,%rbp
    b6b1:	48 83 ec 20          	sub    $0x20,%rsp
    b6b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6bd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b6c1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b6c5:	48 89 c7             	mov    %rax,%rdi
    b6c8:	e8 bf 07 00 00       	call   be8c <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b6cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b6d1:	48 89 c7             	mov    %rax,%rdi
    b6d4:	e8 99 97 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b6d9:	48 89 c1             	mov    %rax,%rcx
    b6dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b6e4:	48 89 ce             	mov    %rcx,%rsi
    b6e7:	48 89 c7             	mov    %rax,%rdi
    b6ea:	e8 a8 07 00 00       	call   be97 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b6ef:	c9                   	leave
    b6f0:	c3                   	ret
    b6f1:	90                   	nop

000000000000b6f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b6f2:	55                   	push   %rbp
    b6f3:	48 89 e5             	mov    %rsp,%rbp
    b6f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b6fa:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b701:	07 7e 00 
      }
    b704:	5d                   	pop    %rbp
    b705:	c3                   	ret

000000000000b706 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b706:	55                   	push   %rbp
    b707:	48 89 e5             	mov    %rsp,%rbp
    b70a:	48 83 ec 20          	sub    $0x20,%rsp
    b70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b712:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b716:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b71e:	48 89 c7             	mov    %rax,%rdi
    b721:	e8 cc ff ff ff       	call   b6f2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b726:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b72a:	0f 92 c0             	setb   %al
    b72d:	0f b6 c0             	movzbl %al,%eax
    b730:	48 85 c0             	test   %rax,%rax
    b733:	0f 95 c0             	setne  %al
    b736:	84 c0                	test   %al,%al
    b738:	74 1a                	je     b754 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b73a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    b741:	0f fc 00 
    b744:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b748:	73 05                	jae    b74f <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b74a:	e8 21 8b ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b74f:	e8 8c 89 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b754:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b758:	48 89 d0             	mov    %rdx,%rax
    b75b:	48 c1 e0 06          	shl    $0x6,%rax
    b75f:	48 01 d0             	add    %rdx,%rax
    b762:	48 c1 e0 02          	shl    $0x2,%rax
    b766:	48 89 c7             	mov    %rax,%rdi
    b769:	e8 12 8c ff ff       	call   4380 <_Znwm@plt>
    b76e:	90                   	nop
      }
    b76f:	c9                   	leave
    b770:	c3                   	ret

000000000000b771 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b771:	55                   	push   %rbp
    b772:	48 89 e5             	mov    %rsp,%rbp
    b775:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b77d:	5d                   	pop    %rbp
    b77e:	c3                   	ret

000000000000b77f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b77f:	55                   	push   %rbp
    b780:	48 89 e5             	mov    %rsp,%rbp
    b783:	48 83 ec 10          	sub    $0x10,%rsp
    b787:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b78b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b78f:	48 89 c6             	mov    %rax,%rsi
    b792:	bf 04 01 00 00       	mov    $0x104,%edi
    b797:	e8 c4 96 ff ff       	call   4e60 <_ZnwmPv>
    b79c:	b9 04 01 00 00       	mov    $0x104,%ecx
    b7a1:	be 00 00 00 00       	mov    $0x0,%esi
    b7a6:	48 89 30             	mov    %rsi,(%rax)
    b7a9:	89 ca                	mov    %ecx,%edx
    b7ab:	48 01 c2             	add    %rax,%rdx
    b7ae:	48 83 c2 08          	add    $0x8,%rdx
    b7b2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b7b6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b7ba:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b7be:	48 29 d0             	sub    %rdx,%rax
    b7c1:	01 c1                	add    %eax,%ecx
    b7c3:	83 e1 f8             	and    $0xfffffff8,%ecx
    b7c6:	89 c8                	mov    %ecx,%eax
    b7c8:	c1 e8 03             	shr    $0x3,%eax
    b7cb:	89 c1                	mov    %eax,%ecx
    b7cd:	48 89 d7             	mov    %rdx,%rdi
    b7d0:	48 89 f0             	mov    %rsi,%rax
    b7d3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b7d6:	90                   	nop
    b7d7:	c9                   	leave
    b7d8:	c3                   	ret

000000000000b7d9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b7d9:	55                   	push   %rbp
    b7da:	48 89 e5             	mov    %rsp,%rbp
    b7dd:	48 83 ec 20          	sub    $0x20,%rsp
    b7e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b7ed:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b7f1:	48 89 c7             	mov    %rax,%rdi
    b7f4:	e8 0d 07 00 00       	call   bf06 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b7f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7fd:	48 89 c7             	mov    %rax,%rdi
    b800:	e8 6d 96 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b805:	48 89 c1             	mov    %rax,%rcx
    b808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b80c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b810:	48 89 ce             	mov    %rcx,%rsi
    b813:	48 89 c7             	mov    %rax,%rdi
    b816:	e8 f6 06 00 00       	call   bf11 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b81b:	c9                   	leave
    b81c:	c3                   	ret
    b81d:	90                   	nop

000000000000b81e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b81e:	55                   	push   %rbp
    b81f:	48 89 e5             	mov    %rsp,%rbp
    b822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b826:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b82d:	ff ff 0f 
      }
    b830:	5d                   	pop    %rbp
    b831:	c3                   	ret

000000000000b832 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b832:	55                   	push   %rbp
    b833:	48 89 e5             	mov    %rsp,%rbp
    b836:	48 83 ec 20          	sub    $0x20,%rsp
    b83a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b83e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b842:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b84a:	48 89 c7             	mov    %rax,%rdi
    b84d:	e8 cc ff ff ff       	call   b81e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b852:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b856:	0f 92 c0             	setb   %al
    b859:	0f b6 c0             	movzbl %al,%eax
    b85c:	48 85 c0             	test   %rax,%rax
    b85f:	0f 95 c0             	setne  %al
    b862:	84 c0                	test   %al,%al
    b864:	74 1a                	je     b880 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b866:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b86d:	ff ff 1f 
    b870:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b874:	73 05                	jae    b87b <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b876:	e8 f5 89 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b87b:	e8 60 88 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b880:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b884:	48 c1 e0 03          	shl    $0x3,%rax
    b888:	48 89 c7             	mov    %rax,%rdi
    b88b:	e8 f0 8a ff ff       	call   4380 <_Znwm@plt>
    b890:	90                   	nop
      }
    b891:	c9                   	leave
    b892:	c3                   	ret

000000000000b893 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b893:	55                   	push   %rbp
    b894:	48 89 e5             	mov    %rsp,%rbp
    b897:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b89b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b89f:	5d                   	pop    %rbp
    b8a0:	c3                   	ret

000000000000b8a1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b8a1:	55                   	push   %rbp
    b8a2:	48 89 e5             	mov    %rsp,%rbp
    b8a5:	48 83 ec 10          	sub    $0x10,%rsp
    b8a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b8ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8b1:	48 89 c6             	mov    %rax,%rsi
    b8b4:	bf 08 00 00 00       	mov    $0x8,%edi
    b8b9:	e8 a2 95 ff ff       	call   4e60 <_ZnwmPv>
    b8be:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b8c5:	90                   	nop
    b8c6:	c9                   	leave
    b8c7:	c3                   	ret

000000000000b8c8 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b8c8:	55                   	push   %rbp
    b8c9:	48 89 e5             	mov    %rsp,%rbp
    b8cc:	48 83 ec 20          	sub    $0x20,%rsp
    b8d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b8dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8e0:	48 89 c7             	mov    %rax,%rdi
    b8e3:	e8 98 06 00 00       	call   bf80 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b8e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8ec:	48 89 c7             	mov    %rax,%rdi
    b8ef:	e8 7e 95 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b8f4:	48 89 c1             	mov    %rax,%rcx
    b8f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b8ff:	48 89 ce             	mov    %rcx,%rsi
    b902:	48 89 c7             	mov    %rax,%rdi
    b905:	e8 81 06 00 00       	call   bf8b <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b90a:	c9                   	leave
    b90b:	c3                   	ret

000000000000b90c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b90c:	55                   	push   %rbp
    b90d:	48 89 e5             	mov    %rsp,%rbp
    b910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b914:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b91b:	ff ff 0f 
      }
    b91e:	5d                   	pop    %rbp
    b91f:	c3                   	ret

000000000000b920 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b920:	55                   	push   %rbp
    b921:	48 89 e5             	mov    %rsp,%rbp
    b924:	48 83 ec 20          	sub    $0x20,%rsp
    b928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b92c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b930:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b938:	48 89 c7             	mov    %rax,%rdi
    b93b:	e8 cc ff ff ff       	call   b90c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b940:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b944:	0f 92 c0             	setb   %al
    b947:	0f b6 c0             	movzbl %al,%eax
    b94a:	48 85 c0             	test   %rax,%rax
    b94d:	0f 95 c0             	setne  %al
    b950:	84 c0                	test   %al,%al
    b952:	74 1a                	je     b96e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b954:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b95b:	ff ff 1f 
    b95e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b962:	73 05                	jae    b969 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b964:	e8 07 89 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b969:	e8 72 87 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b96e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b972:	48 c1 e0 03          	shl    $0x3,%rax
    b976:	48 89 c7             	mov    %rax,%rdi
    b979:	e8 02 8a ff ff       	call   4380 <_Znwm@plt>
    b97e:	90                   	nop
      }
    b97f:	c9                   	leave
    b980:	c3                   	ret

000000000000b981 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b981:	55                   	push   %rbp
    b982:	48 89 e5             	mov    %rsp,%rbp
    b985:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b98d:	5d                   	pop    %rbp
    b98e:	c3                   	ret

000000000000b98f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b98f:	55                   	push   %rbp
    b990:	48 89 e5             	mov    %rsp,%rbp
    b993:	48 83 ec 10          	sub    $0x10,%rsp
    b997:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b99b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b99f:	48 89 c6             	mov    %rax,%rsi
    b9a2:	bf 08 00 00 00       	mov    $0x8,%edi
    b9a7:	e8 b4 94 ff ff       	call   4e60 <_ZnwmPv>
    b9ac:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b9b3:	90                   	nop
    b9b4:	c9                   	leave
    b9b5:	c3                   	ret

000000000000b9b6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b9b6:	55                   	push   %rbp
    b9b7:	48 89 e5             	mov    %rsp,%rbp
    b9ba:	48 83 ec 20          	sub    $0x20,%rsp
    b9be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b9ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b9ce:	48 89 c7             	mov    %rax,%rdi
    b9d1:	e8 12 06 00 00       	call   bfe8 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b9d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9da:	48 89 c7             	mov    %rax,%rdi
    b9dd:	e8 90 94 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    b9e2:	48 89 c1             	mov    %rax,%rcx
    b9e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b9ed:	48 89 ce             	mov    %rcx,%rsi
    b9f0:	48 89 c7             	mov    %rax,%rdi
    b9f3:	e8 fb 05 00 00       	call   bff3 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b9f8:	c9                   	leave
    b9f9:	c3                   	ret

000000000000b9fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b9fa:	55                   	push   %rbp
    b9fb:	48 89 e5             	mov    %rsp,%rbp
    b9fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ba02:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    ba09:	55 55 05 
      }
    ba0c:	5d                   	pop    %rbp
    ba0d:	c3                   	ret

000000000000ba0e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba0e:	55                   	push   %rbp
    ba0f:	48 89 e5             	mov    %rsp,%rbp
    ba12:	48 83 ec 20          	sub    $0x20,%rsp
    ba16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba26:	48 89 c7             	mov    %rax,%rdi
    ba29:	e8 cc ff ff ff       	call   b9fa <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    ba2e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba32:	0f 92 c0             	setb   %al
    ba35:	0f b6 c0             	movzbl %al,%eax
    ba38:	48 85 c0             	test   %rax,%rax
    ba3b:	0f 95 c0             	setne  %al
    ba3e:	84 c0                	test   %al,%al
    ba40:	74 1a                	je     ba5c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ba42:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    ba49:	aa aa 0a 
    ba4c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba50:	73 05                	jae    ba57 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ba52:	e8 19 88 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ba57:	e8 84 86 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ba5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba60:	48 89 d0             	mov    %rdx,%rax
    ba63:	48 01 c0             	add    %rax,%rax
    ba66:	48 01 d0             	add    %rdx,%rax
    ba69:	48 c1 e0 03          	shl    $0x3,%rax
    ba6d:	48 89 c7             	mov    %rax,%rdi
    ba70:	e8 0b 89 ff ff       	call   4380 <_Znwm@plt>
    ba75:	90                   	nop
      }
    ba76:	c9                   	leave
    ba77:	c3                   	ret

000000000000ba78 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ba78:	55                   	push   %rbp
    ba79:	48 89 e5             	mov    %rsp,%rbp
    ba7c:	48 83 ec 10          	sub    $0x10,%rsp
    ba80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ba84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba88:	48 89 c6             	mov    %rax,%rsi
    ba8b:	bf 18 00 00 00       	mov    $0x18,%edi
    ba90:	e8 cb 93 ff ff       	call   4e60 <_ZnwmPv>
    ba95:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ba9b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    baa2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    baa9:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    bab0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    bab7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    babe:	90                   	nop
    babf:	c9                   	leave
    bac0:	c3                   	ret

000000000000bac1 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bac1:	55                   	push   %rbp
    bac2:	48 89 e5             	mov    %rsp,%rbp
    bac5:	48 83 ec 20          	sub    $0x20,%rsp
    bac9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bacd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bad1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bad5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bad9:	48 89 c7             	mov    %rax,%rdi
    badc:	e8 6f 05 00 00       	call   c050 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bae1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bae5:	48 89 c7             	mov    %rax,%rdi
    bae8:	e8 85 93 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    baed:	48 89 c1             	mov    %rax,%rcx
    baf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baf4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    baf8:	48 89 ce             	mov    %rcx,%rsi
    bafb:	48 89 c7             	mov    %rax,%rdi
    bafe:	e8 58 05 00 00       	call   c05b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bb03:	c9                   	leave
    bb04:	c3                   	ret
    bb05:	90                   	nop

000000000000bb06 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bb06:	55                   	push   %rbp
    bb07:	48 89 e5             	mov    %rsp,%rbp
    bb0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bb0e:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    bb15:	49 92 04 
      }
    bb18:	5d                   	pop    %rbp
    bb19:	c3                   	ret

000000000000bb1a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bb1a:	55                   	push   %rbp
    bb1b:	48 89 e5             	mov    %rsp,%rbp
    bb1e:	48 83 ec 20          	sub    $0x20,%rsp
    bb22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bb2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb32:	48 89 c7             	mov    %rax,%rdi
    bb35:	e8 cc ff ff ff       	call   bb06 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    bb3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb3e:	0f 92 c0             	setb   %al
    bb41:	0f b6 c0             	movzbl %al,%eax
    bb44:	48 85 c0             	test   %rax,%rax
    bb47:	0f 95 c0             	setne  %al
    bb4a:	84 c0                	test   %al,%al
    bb4c:	74 1a                	je     bb68 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bb4e:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    bb55:	92 24 09 
    bb58:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb5c:	73 05                	jae    bb63 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bb5e:	e8 0d 87 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bb63:	e8 78 85 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bb68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bb6c:	48 89 d0             	mov    %rdx,%rax
    bb6f:	48 c1 e0 03          	shl    $0x3,%rax
    bb73:	48 29 d0             	sub    %rdx,%rax
    bb76:	48 c1 e0 02          	shl    $0x2,%rax
    bb7a:	48 89 c7             	mov    %rax,%rdi
    bb7d:	e8 fe 87 ff ff       	call   4380 <_Znwm@plt>
    bb82:	90                   	nop
      }
    bb83:	c9                   	leave
    bb84:	c3                   	ret

000000000000bb85 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bb85:	55                   	push   %rbp
    bb86:	48 89 e5             	mov    %rsp,%rbp
    bb89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bb8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb91:	5d                   	pop    %rbp
    bb92:	c3                   	ret

000000000000bb93 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bb93:	55                   	push   %rbp
    bb94:	48 89 e5             	mov    %rsp,%rbp
    bb97:	48 83 ec 10          	sub    $0x10,%rsp
    bb9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bba3:	48 89 c6             	mov    %rax,%rsi
    bba6:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bbab:	e8 b0 92 ff ff       	call   4e60 <_ZnwmPv>
    bbb0:	48 89 c7             	mov    %rax,%rdi
    bbb3:	e8 6c 05 00 00       	call   c124 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    bbb8:	90                   	nop
    bbb9:	c9                   	leave
    bbba:	c3                   	ret
    bbbb:	90                   	nop

000000000000bbbc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bbbc:	55                   	push   %rbp
    bbbd:	48 89 e5             	mov    %rsp,%rbp
    bbc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bbc4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bbcb:	ff ff 0f 
      }
    bbce:	5d                   	pop    %rbp
    bbcf:	c3                   	ret

000000000000bbd0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bbd0:	55                   	push   %rbp
    bbd1:	48 89 e5             	mov    %rsp,%rbp
    bbd4:	48 83 ec 20          	sub    $0x20,%rsp
    bbd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbe0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bbe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe8:	48 89 c7             	mov    %rax,%rdi
    bbeb:	e8 cc ff ff ff       	call   bbbc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    bbf0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bbf4:	0f 92 c0             	setb   %al
    bbf7:	0f b6 c0             	movzbl %al,%eax
    bbfa:	48 85 c0             	test   %rax,%rax
    bbfd:	0f 95 c0             	setne  %al
    bc00:	84 c0                	test   %al,%al
    bc02:	74 1a                	je     bc1e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bc04:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bc0b:	ff ff 1f 
    bc0e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc12:	73 05                	jae    bc19 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bc14:	e8 57 86 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bc19:	e8 c2 84 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bc1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc22:	48 c1 e0 03          	shl    $0x3,%rax
    bc26:	48 89 c7             	mov    %rax,%rdi
    bc29:	e8 52 87 ff ff       	call   4380 <_Znwm@plt>
    bc2e:	90                   	nop
      }
    bc2f:	c9                   	leave
    bc30:	c3                   	ret

000000000000bc31 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bc31:	55                   	push   %rbp
    bc32:	48 89 e5             	mov    %rsp,%rbp
    bc35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bc39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3d:	5d                   	pop    %rbp
    bc3e:	c3                   	ret

000000000000bc3f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bc3f:	55                   	push   %rbp
    bc40:	48 89 e5             	mov    %rsp,%rbp
    bc43:	48 83 ec 10          	sub    $0x10,%rsp
    bc47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bc4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc4f:	48 89 c6             	mov    %rax,%rsi
    bc52:	bf 08 00 00 00       	mov    $0x8,%edi
    bc57:	e8 04 92 ff ff       	call   4e60 <_ZnwmPv>
    bc5c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bc62:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    bc69:	90                   	nop
    bc6a:	c9                   	leave
    bc6b:	c3                   	ret

000000000000bc6c <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bc6c:	55                   	push   %rbp
    bc6d:	48 89 e5             	mov    %rsp,%rbp
    bc70:	48 83 ec 20          	sub    $0x20,%rsp
    bc74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc80:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc84:	48 89 c7             	mov    %rax,%rdi
    bc87:	e8 b3 04 00 00       	call   c13f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc90:	48 89 c7             	mov    %rax,%rdi
    bc93:	e8 da 91 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    bc98:	48 89 c1             	mov    %rax,%rcx
    bc9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bca3:	48 89 ce             	mov    %rcx,%rsi
    bca6:	48 89 c7             	mov    %rax,%rdi
    bca9:	e8 9c 04 00 00       	call   c14a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bcae:	c9                   	leave
    bcaf:	c3                   	ret

000000000000bcb0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bcb0:	55                   	push   %rbp
    bcb1:	48 89 e5             	mov    %rsp,%rbp
    bcb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bcb8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bcbf:	ff ff 1f 
      }
    bcc2:	5d                   	pop    %rbp
    bcc3:	c3                   	ret

000000000000bcc4 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bcc4:	55                   	push   %rbp
    bcc5:	48 89 e5             	mov    %rsp,%rbp
    bcc8:	48 83 ec 20          	sub    $0x20,%rsp
    bccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcd4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bcd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcdc:	48 89 c7             	mov    %rax,%rdi
    bcdf:	e8 cc ff ff ff       	call   bcb0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    bce4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bce8:	0f 92 c0             	setb   %al
    bceb:	0f b6 c0             	movzbl %al,%eax
    bcee:	48 85 c0             	test   %rax,%rax
    bcf1:	0f 95 c0             	setne  %al
    bcf4:	84 c0                	test   %al,%al
    bcf6:	74 1a                	je     bd12 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bcf8:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    bcff:	ff ff 3f 
    bd02:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bd06:	73 05                	jae    bd0d <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bd08:	e8 63 85 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bd0d:	e8 ce 83 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bd12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd16:	48 c1 e0 02          	shl    $0x2,%rax
    bd1a:	48 89 c7             	mov    %rax,%rdi
    bd1d:	e8 5e 86 ff ff       	call   4380 <_Znwm@plt>
    bd22:	90                   	nop
      }
    bd23:	c9                   	leave
    bd24:	c3                   	ret

000000000000bd25 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bd25:	55                   	push   %rbp
    bd26:	48 89 e5             	mov    %rsp,%rbp
    bd29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bd2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd31:	5d                   	pop    %rbp
    bd32:	c3                   	ret

000000000000bd33 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bd33:	55                   	push   %rbp
    bd34:	48 89 e5             	mov    %rsp,%rbp
    bd37:	48 83 ec 10          	sub    $0x10,%rsp
    bd3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd43:	48 89 c6             	mov    %rax,%rsi
    bd46:	bf 04 00 00 00       	mov    $0x4,%edi
    bd4b:	e8 10 91 ff ff       	call   4e60 <_ZnwmPv>
    bd50:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    bd56:	90                   	nop
    bd57:	c9                   	leave
    bd58:	c3                   	ret

000000000000bd59 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bd59:	55                   	push   %rbp
    bd5a:	48 89 e5             	mov    %rsp,%rbp
    bd5d:	48 83 ec 20          	sub    $0x20,%rsp
    bd61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd65:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd69:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bd6d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd71:	48 89 c7             	mov    %rax,%rdi
    bd74:	e8 2e 04 00 00       	call   c1a7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bd79:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd7d:	48 89 c7             	mov    %rax,%rdi
    bd80:	e8 ed 90 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    bd85:	48 89 c1             	mov    %rax,%rcx
    bd88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd90:	48 89 ce             	mov    %rcx,%rsi
    bd93:	48 89 c7             	mov    %rax,%rdi
    bd96:	e8 17 04 00 00       	call   c1b2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bd9b:	c9                   	leave
    bd9c:	c3                   	ret
    bd9d:	90                   	nop

000000000000bd9e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bd9e:	55                   	push   %rbp
    bd9f:	48 89 e5             	mov    %rsp,%rbp
    bda2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bda6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bdad:	ff ff 0f 
      }
    bdb0:	5d                   	pop    %rbp
    bdb1:	c3                   	ret

000000000000bdb2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bdb2:	55                   	push   %rbp
    bdb3:	48 89 e5             	mov    %rsp,%rbp
    bdb6:	48 83 ec 20          	sub    $0x20,%rsp
    bdba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bdc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdca:	48 89 c7             	mov    %rax,%rdi
    bdcd:	e8 cc ff ff ff       	call   bd9e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    bdd2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bdd6:	0f 92 c0             	setb   %al
    bdd9:	0f b6 c0             	movzbl %al,%eax
    bddc:	48 85 c0             	test   %rax,%rax
    bddf:	0f 95 c0             	setne  %al
    bde2:	84 c0                	test   %al,%al
    bde4:	74 1a                	je     be00 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bde6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bded:	ff ff 1f 
    bdf0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bdf4:	73 05                	jae    bdfb <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bdf6:	e8 75 84 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bdfb:	e8 e0 82 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    be00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be04:	48 c1 e0 03          	shl    $0x3,%rax
    be08:	48 89 c7             	mov    %rax,%rdi
    be0b:	e8 70 85 ff ff       	call   4380 <_Znwm@plt>
    be10:	90                   	nop
      }
    be11:	c9                   	leave
    be12:	c3                   	ret

000000000000be13 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    be13:	55                   	push   %rbp
    be14:	48 89 e5             	mov    %rsp,%rbp
    be17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    be1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be1f:	5d                   	pop    %rbp
    be20:	c3                   	ret

000000000000be21 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    be21:	55                   	push   %rbp
    be22:	48 89 e5             	mov    %rsp,%rbp
    be25:	48 83 ec 10          	sub    $0x10,%rsp
    be29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    be2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be31:	48 89 c6             	mov    %rax,%rsi
    be34:	bf 08 00 00 00       	mov    $0x8,%edi
    be39:	e8 22 90 ff ff       	call   4e60 <_ZnwmPv>
    be3e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    be45:	90                   	nop
    be46:	c9                   	leave
    be47:	c3                   	ret

000000000000be48 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    be48:	55                   	push   %rbp
    be49:	48 89 e5             	mov    %rsp,%rbp
    be4c:	48 83 ec 20          	sub    $0x20,%rsp
    be50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    be5c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be60:	48 89 c7             	mov    %rax,%rdi
    be63:	e8 a7 03 00 00       	call   c20f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    be68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be6c:	48 89 c7             	mov    %rax,%rdi
    be6f:	e8 fe 8f ff ff       	call   4e72 <_ZSt17__size_to_integerm>
    be74:	48 89 c1             	mov    %rax,%rcx
    be77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be7f:	48 89 ce             	mov    %rcx,%rsi
    be82:	48 89 c7             	mov    %rax,%rdi
    be85:	e8 90 03 00 00       	call   c21a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    be8a:	c9                   	leave
    be8b:	c3                   	ret

000000000000be8c <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    be8c:	55                   	push   %rbp
    be8d:	48 89 e5             	mov    %rsp,%rbp
    be90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be94:	90                   	nop
    be95:	5d                   	pop    %rbp
    be96:	c3                   	ret

000000000000be97 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be97:	55                   	push   %rbp
    be98:	48 89 e5             	mov    %rsp,%rbp
    be9b:	48 83 ec 20          	sub    $0x20,%rsp
    be9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bea3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bea7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    beab:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    beb0:	75 06                	jne    beb8 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    beb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beb6:	eb 4c                	jmp    bf04 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    beb8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bebc:	48 89 d0             	mov    %rdx,%rax
    bebf:	48 c1 e0 06          	shl    $0x6,%rax
    bec3:	48 01 d0             	add    %rdx,%rax
    bec6:	48 c1 e0 03          	shl    $0x3,%rax
    beca:	48 89 c2             	mov    %rax,%rdx
    becd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bed5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bedd:	48 89 ce             	mov    %rcx,%rsi
    bee0:	48 89 c7             	mov    %rax,%rdi
    bee3:	e8 8f 03 00 00       	call   c277 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bee8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    beec:	48 89 d0             	mov    %rdx,%rax
    beef:	48 c1 e0 06          	shl    $0x6,%rax
    bef3:	48 01 d0             	add    %rdx,%rax
    bef6:	48 c1 e0 03          	shl    $0x3,%rax
    befa:	48 89 c2             	mov    %rax,%rdx
    befd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf01:	48 01 d0             	add    %rdx,%rax
    }
    bf04:	c9                   	leave
    bf05:	c3                   	ret

000000000000bf06 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bf06:	55                   	push   %rbp
    bf07:	48 89 e5             	mov    %rsp,%rbp
    bf0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf0e:	90                   	nop
    bf0f:	5d                   	pop    %rbp
    bf10:	c3                   	ret

000000000000bf11 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf11:	55                   	push   %rbp
    bf12:	48 89 e5             	mov    %rsp,%rbp
    bf15:	48 83 ec 20          	sub    $0x20,%rsp
    bf19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf25:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf2a:	75 06                	jne    bf32 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf30:	eb 4c                	jmp    bf7e <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bf32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf36:	48 89 d0             	mov    %rdx,%rax
    bf39:	48 c1 e0 06          	shl    $0x6,%rax
    bf3d:	48 01 d0             	add    %rdx,%rax
    bf40:	48 c1 e0 02          	shl    $0x2,%rax
    bf44:	48 89 c2             	mov    %rax,%rdx
    bf47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf4b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bf4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf57:	48 89 ce             	mov    %rcx,%rsi
    bf5a:	48 89 c7             	mov    %rax,%rdi
    bf5d:	e8 43 03 00 00       	call   c2a5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bf62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf66:	48 89 d0             	mov    %rdx,%rax
    bf69:	48 c1 e0 06          	shl    $0x6,%rax
    bf6d:	48 01 d0             	add    %rdx,%rax
    bf70:	48 c1 e0 02          	shl    $0x2,%rax
    bf74:	48 89 c2             	mov    %rax,%rdx
    bf77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf7b:	48 01 d0             	add    %rdx,%rax
    }
    bf7e:	c9                   	leave
    bf7f:	c3                   	ret

000000000000bf80 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bf80:	55                   	push   %rbp
    bf81:	48 89 e5             	mov    %rsp,%rbp
    bf84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf88:	90                   	nop
    bf89:	5d                   	pop    %rbp
    bf8a:	c3                   	ret

000000000000bf8b <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf8b:	55                   	push   %rbp
    bf8c:	48 89 e5             	mov    %rsp,%rbp
    bf8f:	48 83 ec 20          	sub    $0x20,%rsp
    bf93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf97:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf9b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf9f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bfa4:	75 06                	jne    bfac <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bfa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfaa:	eb 3a                	jmp    bfe6 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bfac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfb0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bfb7:	00 
    bfb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfbc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bfc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfc8:	48 89 ce             	mov    %rcx,%rsi
    bfcb:	48 89 c7             	mov    %rax,%rdi
    bfce:	e8 00 03 00 00       	call   c2d3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    bfd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bfd7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bfde:	00 
    bfdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe3:	48 01 d0             	add    %rdx,%rax
    }
    bfe6:	c9                   	leave
    bfe7:	c3                   	ret

000000000000bfe8 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bfe8:	55                   	push   %rbp
    bfe9:	48 89 e5             	mov    %rsp,%rbp
    bfec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bff0:	90                   	nop
    bff1:	5d                   	pop    %rbp
    bff2:	c3                   	ret

000000000000bff3 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bff3:	55                   	push   %rbp
    bff4:	48 89 e5             	mov    %rsp,%rbp
    bff7:	48 83 ec 20          	sub    $0x20,%rsp
    bffb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c003:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c007:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c00c:	75 06                	jne    c014 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c012:	eb 3a                	jmp    c04e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c014:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c018:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c01f:	00 
    c020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c024:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c028:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c02c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c030:	48 89 ce             	mov    %rcx,%rsi
    c033:	48 89 c7             	mov    %rax,%rdi
    c036:	e8 c6 02 00 00       	call   c301 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c03b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c03f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c046:	00 
    c047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c04b:	48 01 d0             	add    %rdx,%rax
    }
    c04e:	c9                   	leave
    c04f:	c3                   	ret

000000000000c050 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c050:	55                   	push   %rbp
    c051:	48 89 e5             	mov    %rsp,%rbp
    c054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c058:	90                   	nop
    c059:	5d                   	pop    %rbp
    c05a:	c3                   	ret

000000000000c05b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c05b:	55                   	push   %rbp
    c05c:	48 89 e5             	mov    %rsp,%rbp
    c05f:	48 83 ec 20          	sub    $0x20,%rsp
    c063:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c067:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c06b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c06f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c074:	75 06                	jne    c07c <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c07a:	eb 4a                	jmp    c0c6 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    c07c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c080:	48 89 d0             	mov    %rdx,%rax
    c083:	48 01 c0             	add    %rax,%rax
    c086:	48 01 d0             	add    %rdx,%rax
    c089:	48 c1 e0 03          	shl    $0x3,%rax
    c08d:	48 89 c2             	mov    %rax,%rdx
    c090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c094:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c098:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c09c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a0:	48 89 ce             	mov    %rcx,%rsi
    c0a3:	48 89 c7             	mov    %rax,%rdi
    c0a6:	e8 84 02 00 00       	call   c32f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c0ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c0af:	48 89 d0             	mov    %rdx,%rax
    c0b2:	48 01 c0             	add    %rax,%rax
    c0b5:	48 01 d0             	add    %rdx,%rax
    c0b8:	48 c1 e0 03          	shl    $0x3,%rax
    c0bc:	48 89 c2             	mov    %rax,%rdx
    c0bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c3:	48 01 d0             	add    %rdx,%rax
    }
    c0c6:	c9                   	leave
    c0c7:	c3                   	ret

000000000000c0c8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    c0c8:	55                   	push   %rbp
    c0c9:	48 89 e5             	mov    %rsp,%rbp
    c0cc:	48 83 ec 10          	sub    $0x10,%rsp
    c0d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0d8:	48 89 c7             	mov    %rax,%rdi
    c0db:	e8 7e 02 00 00       	call   c35e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    c0e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0e4:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    c0e8:	90                   	nop
    c0e9:	c9                   	leave
    c0ea:	c3                   	ret
    c0eb:	90                   	nop

000000000000c0ec <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    c0ec:	55                   	push   %rbp
    c0ed:	48 89 e5             	mov    %rsp,%rbp
    c0f0:	48 83 ec 10          	sub    $0x10,%rsp
    c0f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0fc:	48 89 c7             	mov    %rax,%rdi
    c0ff:	e8 c4 ff ff ff       	call   c0c8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    c104:	90                   	nop
    c105:	c9                   	leave
    c106:	c3                   	ret
    c107:	90                   	nop

000000000000c108 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    c108:	55                   	push   %rbp
    c109:	48 89 e5             	mov    %rsp,%rbp
    c10c:	48 83 ec 10          	sub    $0x10,%rsp
    c110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c118:	48 89 c7             	mov    %rax,%rdi
    c11b:	e8 cc ff ff ff       	call   c0ec <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    c120:	90                   	nop
    c121:	c9                   	leave
    c122:	c3                   	ret
    c123:	90                   	nop

000000000000c124 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    c124:	55                   	push   %rbp
    c125:	48 89 e5             	mov    %rsp,%rbp
    c128:	48 83 ec 10          	sub    $0x10,%rsp
    c12c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c134:	48 89 c7             	mov    %rax,%rdi
    c137:	e8 cc ff ff ff       	call   c108 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    c13c:	90                   	nop
    c13d:	c9                   	leave
    c13e:	c3                   	ret

000000000000c13f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c13f:	55                   	push   %rbp
    c140:	48 89 e5             	mov    %rsp,%rbp
    c143:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c147:	90                   	nop
    c148:	5d                   	pop    %rbp
    c149:	c3                   	ret

000000000000c14a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c14a:	55                   	push   %rbp
    c14b:	48 89 e5             	mov    %rsp,%rbp
    c14e:	48 83 ec 20          	sub    $0x20,%rsp
    c152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c156:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c15a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c15e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c163:	75 06                	jne    c16b <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c169:	eb 3a                	jmp    c1a5 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c16b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c16f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c176:	00 
    c177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c17b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c17f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c187:	48 89 ce             	mov    %rcx,%rsi
    c18a:	48 89 c7             	mov    %rax,%rdi
    c18d:	e8 d7 01 00 00       	call   c369 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c192:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c196:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c19d:	00 
    c19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1a2:	48 01 d0             	add    %rdx,%rax
    }
    c1a5:	c9                   	leave
    c1a6:	c3                   	ret

000000000000c1a7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c1a7:	55                   	push   %rbp
    c1a8:	48 89 e5             	mov    %rsp,%rbp
    c1ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c1af:	90                   	nop
    c1b0:	5d                   	pop    %rbp
    c1b1:	c3                   	ret

000000000000c1b2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c1b2:	55                   	push   %rbp
    c1b3:	48 89 e5             	mov    %rsp,%rbp
    c1b6:	48 83 ec 20          	sub    $0x20,%rsp
    c1ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c1c6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c1cb:	75 06                	jne    c1d3 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c1cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1d1:	eb 3a                	jmp    c20d <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c1d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1d7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c1de:	00 
    c1df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1e3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c1e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1ef:	48 89 ce             	mov    %rcx,%rsi
    c1f2:	48 89 c7             	mov    %rax,%rdi
    c1f5:	e8 9d 01 00 00       	call   c397 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c1fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1fe:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c205:	00 
    c206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20a:	48 01 d0             	add    %rdx,%rax
    }
    c20d:	c9                   	leave
    c20e:	c3                   	ret

000000000000c20f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c20f:	55                   	push   %rbp
    c210:	48 89 e5             	mov    %rsp,%rbp
    c213:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c217:	90                   	nop
    c218:	5d                   	pop    %rbp
    c219:	c3                   	ret

000000000000c21a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c21a:	55                   	push   %rbp
    c21b:	48 89 e5             	mov    %rsp,%rbp
    c21e:	48 83 ec 20          	sub    $0x20,%rsp
    c222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c226:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c22a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c22e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c233:	75 06                	jne    c23b <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c239:	eb 3a                	jmp    c275 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c23b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c23f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c246:	00 
    c247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c24b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c24f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c257:	48 89 ce             	mov    %rcx,%rsi
    c25a:	48 89 c7             	mov    %rax,%rdi
    c25d:	e8 63 01 00 00       	call   c3c5 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c262:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c266:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c26d:	00 
    c26e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c272:	48 01 d0             	add    %rdx,%rax
    }
    c275:	c9                   	leave
    c276:	c3                   	ret

000000000000c277 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c277:	55                   	push   %rbp
    c278:	48 89 e5             	mov    %rsp,%rbp
    c27b:	48 83 ec 20          	sub    $0x20,%rsp
    c27f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c283:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c287:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c28b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c28f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c297:	48 89 ce             	mov    %rcx,%rsi
    c29a:	48 89 c7             	mov    %rax,%rdi
    c29d:	e8 51 01 00 00       	call   c3f3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c2a2:	90                   	nop
    c2a3:	c9                   	leave
    c2a4:	c3                   	ret

000000000000c2a5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2a5:	55                   	push   %rbp
    c2a6:	48 89 e5             	mov    %rsp,%rbp
    c2a9:	48 83 ec 20          	sub    $0x20,%rsp
    c2ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2c5:	48 89 ce             	mov    %rcx,%rsi
    c2c8:	48 89 c7             	mov    %rax,%rdi
    c2cb:	e8 9b 01 00 00       	call   c46b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c2d0:	90                   	nop
    c2d1:	c9                   	leave
    c2d2:	c3                   	ret

000000000000c2d3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2d3:	55                   	push   %rbp
    c2d4:	48 89 e5             	mov    %rsp,%rbp
    c2d7:	48 83 ec 20          	sub    $0x20,%rsp
    c2db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f3:	48 89 ce             	mov    %rcx,%rsi
    c2f6:	48 89 c7             	mov    %rax,%rdi
    c2f9:	e8 e5 01 00 00       	call   c4e3 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c2fe:	90                   	nop
    c2ff:	c9                   	leave
    c300:	c3                   	ret

000000000000c301 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c301:	55                   	push   %rbp
    c302:	48 89 e5             	mov    %rsp,%rbp
    c305:	48 83 ec 20          	sub    $0x20,%rsp
    c309:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c30d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c311:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c315:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c319:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c31d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c321:	48 89 ce             	mov    %rcx,%rsi
    c324:	48 89 c7             	mov    %rax,%rdi
    c327:	e8 f2 01 00 00       	call   c51e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c32c:	90                   	nop
    c32d:	c9                   	leave
    c32e:	c3                   	ret

000000000000c32f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c32f:	55                   	push   %rbp
    c330:	48 89 e5             	mov    %rsp,%rbp
    c333:	48 83 ec 20          	sub    $0x20,%rsp
    c337:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c33b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c33f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c343:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c347:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c34b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34f:	48 89 ce             	mov    %rcx,%rsi
    c352:	48 89 c7             	mov    %rax,%rdi
    c355:	e8 ff 01 00 00       	call   c559 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c35a:	90                   	nop
    c35b:	c9                   	leave
    c35c:	c3                   	ret
    c35d:	90                   	nop

000000000000c35e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c35e:	55                   	push   %rbp
    c35f:	48 89 e5             	mov    %rsp,%rbp
    c362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c366:	90                   	nop
    c367:	5d                   	pop    %rbp
    c368:	c3                   	ret

000000000000c369 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c369:	55                   	push   %rbp
    c36a:	48 89 e5             	mov    %rsp,%rbp
    c36d:	48 83 ec 20          	sub    $0x20,%rsp
    c371:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c375:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c379:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c37d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c381:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c389:	48 89 ce             	mov    %rcx,%rsi
    c38c:	48 89 c7             	mov    %rax,%rdi
    c38f:	e8 08 02 00 00       	call   c59c <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c394:	90                   	nop
    c395:	c9                   	leave
    c396:	c3                   	ret

000000000000c397 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c397:	55                   	push   %rbp
    c398:	48 89 e5             	mov    %rsp,%rbp
    c39b:	48 83 ec 20          	sub    $0x20,%rsp
    c39f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c3ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3af:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c3b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3b7:	48 89 ce             	mov    %rcx,%rsi
    c3ba:	48 89 c7             	mov    %rax,%rdi
    c3bd:	e8 0d 02 00 00       	call   c5cf <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c3c2:	90                   	nop
    c3c3:	c9                   	leave
    c3c4:	c3                   	ret

000000000000c3c5 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c3c5:	55                   	push   %rbp
    c3c6:	48 89 e5             	mov    %rsp,%rbp
    c3c9:	48 83 ec 20          	sub    $0x20,%rsp
    c3cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c3d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c3dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c3e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e5:	48 89 ce             	mov    %rcx,%rsi
    c3e8:	48 89 c7             	mov    %rax,%rdi
    c3eb:	e8 10 02 00 00       	call   c600 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c3f0:	90                   	nop
    c3f1:	c9                   	leave
    c3f2:	c3                   	ret

000000000000c3f3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c3f3:	55                   	push   %rbp
    c3f4:	48 89 e5             	mov    %rsp,%rbp
    c3f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c403:	eb 58                	jmp    c45d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c409:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c40d:	b9 08 02 00 00       	mov    $0x208,%ecx
    c412:	48 8b 32             	mov    (%rdx),%rsi
    c415:	48 89 30             	mov    %rsi,(%rax)
    c418:	89 ce                	mov    %ecx,%esi
    c41a:	48 01 c6             	add    %rax,%rsi
    c41d:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c421:	89 ce                	mov    %ecx,%esi
    c423:	48 01 d6             	add    %rdx,%rsi
    c426:	48 83 c6 08          	add    $0x8,%rsi
    c42a:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c42e:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c432:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c436:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c43a:	48 29 f8             	sub    %rdi,%rax
    c43d:	48 29 c2             	sub    %rax,%rdx
    c440:	01 c1                	add    %eax,%ecx
    c442:	83 e1 f8             	and    $0xfffffff8,%ecx
    c445:	89 c8                	mov    %ecx,%eax
    c447:	c1 e8 03             	shr    $0x3,%eax
    c44a:	89 c0                	mov    %eax,%eax
    c44c:	48 89 d6             	mov    %rdx,%rsi
    c44f:	48 89 c1             	mov    %rax,%rcx
    c452:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c455:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c45c:	00 
    c45d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c461:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c465:	75 9e                	jne    c405 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c467:	90                   	nop
    c468:	90                   	nop
    c469:	5d                   	pop    %rbp
    c46a:	c3                   	ret

000000000000c46b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c46b:	55                   	push   %rbp
    c46c:	48 89 e5             	mov    %rsp,%rbp
    c46f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c473:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c477:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c47b:	eb 58                	jmp    c4d5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c47d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c481:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c485:	b9 04 01 00 00       	mov    $0x104,%ecx
    c48a:	48 8b 32             	mov    (%rdx),%rsi
    c48d:	48 89 30             	mov    %rsi,(%rax)
    c490:	89 ce                	mov    %ecx,%esi
    c492:	48 01 c6             	add    %rax,%rsi
    c495:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c499:	89 ce                	mov    %ecx,%esi
    c49b:	48 01 d6             	add    %rdx,%rsi
    c49e:	48 83 c6 08          	add    $0x8,%rsi
    c4a2:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c4a6:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c4aa:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c4ae:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c4b2:	48 29 f8             	sub    %rdi,%rax
    c4b5:	48 29 c2             	sub    %rax,%rdx
    c4b8:	01 c1                	add    %eax,%ecx
    c4ba:	83 e1 f8             	and    $0xfffffff8,%ecx
    c4bd:	89 c8                	mov    %ecx,%eax
    c4bf:	c1 e8 03             	shr    $0x3,%eax
    c4c2:	89 c0                	mov    %eax,%eax
    c4c4:	48 89 d6             	mov    %rdx,%rsi
    c4c7:	48 89 c1             	mov    %rax,%rcx
    c4ca:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c4cd:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c4d4:	00 
    c4d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4d9:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4dd:	75 9e                	jne    c47d <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c4df:	90                   	nop
    c4e0:	90                   	nop
    c4e1:	5d                   	pop    %rbp
    c4e2:	c3                   	ret

000000000000c4e3 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c4e3:	55                   	push   %rbp
    c4e4:	48 89 e5             	mov    %rsp,%rbp
    c4e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c4eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c4ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c4f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4f7:	48 8b 00             	mov    (%rax),%rax
    c4fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c4fe:	eb 10                	jmp    c510 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c500:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c504:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c508:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c50b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c510:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c514:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c518:	75 e6                	jne    c500 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c51a:	90                   	nop
    c51b:	90                   	nop
    c51c:	5d                   	pop    %rbp
    c51d:	c3                   	ret

000000000000c51e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c51e:	55                   	push   %rbp
    c51f:	48 89 e5             	mov    %rsp,%rbp
    c522:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c526:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c52a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c52e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c532:	48 8b 00             	mov    (%rax),%rax
    c535:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c539:	eb 10                	jmp    c54b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c53b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c543:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c546:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c54b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c54f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c553:	75 e6                	jne    c53b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c555:	90                   	nop
    c556:	90                   	nop
    c557:	5d                   	pop    %rbp
    c558:	c3                   	ret

000000000000c559 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c559:	55                   	push   %rbp
    c55a:	48 89 e5             	mov    %rsp,%rbp
    c55d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c561:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c565:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c569:	eb 23                	jmp    c58e <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c56b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c56f:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c573:	48 8b 06             	mov    (%rsi),%rax
    c576:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c57a:	48 89 01             	mov    %rax,(%rcx)
    c57d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c581:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c585:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c589:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c58e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c592:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c596:	75 d3                	jne    c56b <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c598:	90                   	nop
    c599:	90                   	nop
    c59a:	5d                   	pop    %rbp
    c59b:	c3                   	ret

000000000000c59c <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c59c:	55                   	push   %rbp
    c59d:	48 89 e5             	mov    %rsp,%rbp
    c5a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c5ac:	eb 13                	jmp    c5c1 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c5ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c5b6:	48 8b 12             	mov    (%rdx),%rdx
    c5b9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c5bc:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c5c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c5c9:	75 e3                	jne    c5ae <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c5cb:	90                   	nop
    c5cc:	90                   	nop
    c5cd:	5d                   	pop    %rbp
    c5ce:	c3                   	ret

000000000000c5cf <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c5cf:	55                   	push   %rbp
    c5d0:	48 89 e5             	mov    %rsp,%rbp
    c5d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c5df:	eb 11                	jmp    c5f2 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c5e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5e5:	8b 10                	mov    (%rax),%edx
    c5e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5eb:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c5ed:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c5f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c5fa:	75 e5                	jne    c5e1 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c5fc:	90                   	nop
    c5fd:	90                   	nop
    c5fe:	5d                   	pop    %rbp
    c5ff:	c3                   	ret

000000000000c600 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c600:	55                   	push   %rbp
    c601:	48 89 e5             	mov    %rsp,%rbp
    c604:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c608:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c60c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c610:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c614:	48 8b 00             	mov    (%rax),%rax
    c617:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c61b:	eb 10                	jmp    c62d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c61d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c621:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c625:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c628:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c62d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c631:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c635:	75 e6                	jne    c61d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c637:	90                   	nop
    c638:	90                   	nop
    c639:	5d                   	pop    %rbp
    c63a:	c3                   	ret

000000000000c63b <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c63b:	55                   	push   %rbp
    c63c:	48 89 e5             	mov    %rsp,%rbp
    c63f:	53                   	push   %rbx
    c640:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c644:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c648:	be 00 00 00 00       	mov    $0x0,%esi
    c64d:	48 89 c7             	mov    %rax,%rdi
    c650:	e8 0b 7e ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c655:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c658:	89 c3                	mov    %eax,%ebx
    c65a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c65e:	48 89 c7             	mov    %rax,%rdi
    c661:	e8 ea b6 ff ff       	call   7d50 <_ZNSaI17VkLayerPropertiesEC1Ev>
    c666:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c66a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c66e:	48 89 de             	mov    %rbx,%rsi
    c671:	48 89 c7             	mov    %rax,%rdi
    c674:	e8 0f b7 ff ff       	call   7d88 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c679:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c67d:	48 89 c7             	mov    %rax,%rdi
    c680:	e8 e7 b6 ff ff       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c685:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c689:	48 89 c7             	mov    %rax,%rdi
    c68c:	e8 b1 b7 ff ff       	call   7e42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c691:	48 89 c2             	mov    %rax,%rdx
    c694:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c698:	48 89 d6             	mov    %rdx,%rsi
    c69b:	48 89 c7             	mov    %rax,%rdi
    c69e:	e8 bd 7d ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    c6a3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c6a7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c6ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6af:	48 89 c7             	mov    %rax,%rdi
    c6b2:	e8 63 04 00 00       	call   cb1a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    c6b7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c6bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6bf:	48 89 c7             	mov    %rax,%rdi
    c6c2:	e8 79 04 00 00       	call   cb40 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    c6c7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c6cb:	eb 5b                	jmp    c728 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    c6cd:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c6d1:	48 89 c7             	mov    %rax,%rdi
    c6d4:	e8 ef 04 00 00       	call   cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c6d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    c6dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c6e1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c6e5:	48 89 d6             	mov    %rdx,%rsi
    c6e8:	48 89 c7             	mov    %rax,%rdi
    c6eb:	e8 f8 03 00 00       	call   cae8 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    c6f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c6f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c6f8:	48 8b 3d a1 95 01 00 	mov    0x195a1(%rip),%rdi        # 25ca0 <_ZN3vkh19validationLayerNameE>
    c6ff:	48 8b 35 a2 95 01 00 	mov    0x195a2(%rip),%rsi        # 25ca8 <_ZN3vkh19validationLayerNameE+0x8>
    c706:	48 89 d1             	mov    %rdx,%rcx
    c709:	48 89 c2             	mov    %rax,%rdx
    c70c:	e8 da 04 00 00       	call   cbeb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    c711:	84 c0                	test   %al,%al
    c713:	74 07                	je     c71c <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    c715:	bb 01 00 00 00       	mov    $0x1,%ebx
    c71a:	eb 28                	jmp    c744 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    c71c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c720:	48 89 c7             	mov    %rax,%rdi
    c723:	e8 7c 04 00 00       	call   cba4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c728:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    c72c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c730:	48 89 d6             	mov    %rdx,%rsi
    c733:	48 89 c7             	mov    %rax,%rdi
    c736:	e8 2e 04 00 00       	call   cb69 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c73b:	84 c0                	test   %al,%al
    c73d:	75 8e                	jne    c6cd <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    c73f:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    c744:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c748:	48 89 c7             	mov    %rax,%rdi
    c74b:	e8 ae b6 ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c750:	89 d8                	mov    %ebx,%eax
    c752:	eb 34                	jmp    c788 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c754:	48 89 c3             	mov    %rax,%rbx
    c757:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c75b:	48 89 c7             	mov    %rax,%rdi
    c75e:	e8 09 b6 ff ff       	call   7d6c <_ZNSaI17VkLayerPropertiesED1Ev>
    c763:	48 89 d8             	mov    %rbx,%rax
    c766:	48 89 c7             	mov    %rax,%rdi
    c769:	e8 82 7f ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    c76e:	48 89 c3             	mov    %rax,%rbx
    c771:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c775:	48 89 c7             	mov    %rax,%rdi
    c778:	e8 81 b6 ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c77d:	48 89 d8             	mov    %rbx,%rax
    c780:	48 89 c7             	mov    %rax,%rdi
    c783:	e8 68 7f ff ff       	call   46f0 <_Unwind_Resume@plt>
    c788:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c78c:	c9                   	leave
    c78d:	c3                   	ret

000000000000c78e <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c78e:	55                   	push   %rbp
    c78f:	48 89 e5             	mov    %rsp,%rbp
    c792:	48 83 ec 20          	sub    $0x20,%rsp
    c796:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c799:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c79c:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c7a0:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c7a4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c7a7:	83 f8 01             	cmp    $0x1,%eax
    c7aa:	7e 3c                	jle    c7e8 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c7ac:	be 0a 00 00 00       	mov    $0xa,%esi
    c7b1:	48 8d 05 68 9d 01 00 	lea    0x19d68(%rip),%rax        # 26520 <_ZSt4cerr@GLIBCXX_3.4>
    c7b8:	48 89 c7             	mov    %rax,%rdi
    c7bb:	e8 c0 7c ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c7c0:	48 89 c2             	mov    %rax,%rdx
    c7c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c7c7:	48 8b 40 28          	mov    0x28(%rax),%rax
    c7cb:	48 89 c6             	mov    %rax,%rsi
    c7ce:	48 89 d7             	mov    %rdx,%rdi
    c7d1:	e8 9a 7b ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c7d6:	48 8b 15 bb 97 01 00 	mov    0x197bb(%rip),%rdx        # 25f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c7dd:	48 89 d6             	mov    %rdx,%rsi
    c7e0:	48 89 c7             	mov    %rax,%rdi
    c7e3:	e8 f8 7b ff ff       	call   43e0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c7e8:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c7ed:	c9                   	leave
    c7ee:	c3                   	ret

000000000000c7ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    c7ef:	55                   	push   %rbp
    c7f0:	48 89 e5             	mov    %rsp,%rbp
    c7f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    c7f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7fb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c7ff:	0f 11 00             	movups %xmm0,(%rax)
    c802:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c806:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    c80a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c80e:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    c814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c818:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    c81f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c823:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    c82a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82e:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # c78e <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c835:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    c839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c83d:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c844:	00 
}
    c845:	90                   	nop
    c846:	5d                   	pop    %rbp
    c847:	c3                   	ret

000000000000c848 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    c848:	55                   	push   %rbp
    c849:	48 89 e5             	mov    %rsp,%rbp
    c84c:	48 83 ec 30          	sub    $0x30,%rsp
    c850:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c854:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c858:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c85c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c860:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c864:	48 8d 15 85 be 00 00 	lea    0xbe85(%rip),%rdx        # 186f0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    c86b:	48 89 d6             	mov    %rdx,%rsi
    c86e:	48 89 c7             	mov    %rax,%rdi
    c871:	e8 ca 7a ff ff       	call   4340 <vkGetInstanceProcAddr@plt>
    c876:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    c87a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c87f:	75 07                	jne    c888 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    c881:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    c886:	eb 1b                	jmp    c8a3 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    c888:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c88c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c890:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c894:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c89c:	48 89 c7             	mov    %rax,%rdi
    c89f:	41 ff d0             	call   *%r8
    c8a2:	90                   	nop
}
    c8a3:	c9                   	leave
    c8a4:	c3                   	ret

000000000000c8a5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    c8a5:	55                   	push   %rbp
    c8a6:	48 89 e5             	mov    %rsp,%rbp
    c8a9:	41 54                	push   %r12
    c8ab:	53                   	push   %rbx
    c8ac:	48 83 ec 50          	sub    $0x50,%rsp
    c8b0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    c8b4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c8b8:	48 89 c7             	mov    %rax,%rdi
    c8bb:	e8 2f ff ff ff       	call   c7ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    c8c0:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c8c7:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c8c8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    c8cc:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    c8d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c8d4:	48 89 d1             	mov    %rdx,%rcx
    c8d7:	ba 00 00 00 00       	mov    $0x0,%edx
    c8dc:	48 89 c7             	mov    %rax,%rdi
    c8df:	e8 64 ff ff ff       	call   c848 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    c8e4:	85 c0                	test   %eax,%eax
    c8e6:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c8e9:	84 c0                	test   %al,%al
    c8eb:	74 3b                	je     c928 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    c8ed:	bf 10 00 00 00       	mov    $0x10,%edi
    c8f2:	e8 79 78 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    c8f7:	48 89 c3             	mov    %rax,%rbx
    c8fa:	48 8d 05 0f be 00 00 	lea    0xbe0f(%rip),%rax        # 18710 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    c901:	48 89 c6             	mov    %rax,%rsi
    c904:	48 89 df             	mov    %rbx,%rdi
    c907:	e8 f4 77 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    c90c:	48 8b 05 95 96 01 00 	mov    0x19695(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    c913:	48 89 c2             	mov    %rax,%rdx
    c916:	48 8d 05 23 94 01 00 	lea    0x19423(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    c91d:	48 89 c6             	mov    %rax,%rsi
    c920:	48 89 df             	mov    %rbx,%rdi
    c923:	e8 68 7d ff ff       	call   4690 <__cxa_throw@plt>
  }
  return debugMessenger;
    c928:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c92c:	eb 16                	jmp    c944 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    c92e:	49 89 c4             	mov    %rax,%r12
    c931:	48 89 df             	mov    %rbx,%rdi
    c934:	e8 07 79 ff ff       	call   4240 <__cxa_free_exception@plt>
    c939:	4c 89 e0             	mov    %r12,%rax
    c93c:	48 89 c7             	mov    %rax,%rdi
    c93f:	e8 ac 7d ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    c944:	48 83 c4 50          	add    $0x50,%rsp
    c948:	5b                   	pop    %rbx
    c949:	41 5c                	pop    %r12
    c94b:	5d                   	pop    %rbp
    c94c:	c3                   	ret

000000000000c94d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    c94d:	55                   	push   %rbp
    c94e:	48 89 e5             	mov    %rsp,%rbp
    c951:	48 83 ec 30          	sub    $0x30,%rsp
    c955:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c959:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c95d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c965:	48 8d 15 c4 bd 00 00 	lea    0xbdc4(%rip),%rdx        # 18730 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    c96c:	48 89 d6             	mov    %rdx,%rsi
    c96f:	48 89 c7             	mov    %rax,%rdi
    c972:	e8 c9 79 ff ff       	call   4340 <vkGetInstanceProcAddr@plt>
    c977:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    c97b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c980:	74 19                	je     c99b <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    c982:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c986:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c98a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c98e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c992:	48 89 ce             	mov    %rcx,%rsi
    c995:	48 89 c7             	mov    %rax,%rdi
    c998:	41 ff d0             	call   *%r8
  }
}
    c99b:	90                   	nop
    c99c:	c9                   	leave
    c99d:	c3                   	ret

000000000000c99e <_Z41__static_initialization_and_destruction_0ii>:

    c99e:	55                   	push   %rbp
    c99f:	48 89 e5             	mov    %rsp,%rbp
    c9a2:	48 83 ec 10          	sub    $0x10,%rsp
    c9a6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c9a9:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c9ac:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    c9b0:	75 3b                	jne    c9ed <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c9b2:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    c9b9:	75 32                	jne    c9ed <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c9bb:	48 8d 05 70 9c 01 00 	lea    0x19c70(%rip),%rax        # 26632 <_ZStL8__ioinit>
    c9c2:	48 89 c7             	mov    %rax,%rdi
    c9c5:	e8 26 7c ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
    c9ca:	48 8d 05 df 99 01 00 	lea    0x199df(%rip),%rax        # 263b0 <__dso_handle>
    c9d1:	48 89 c2             	mov    %rax,%rdx
    c9d4:	48 8d 05 57 9c 01 00 	lea    0x19c57(%rip),%rax        # 26632 <_ZStL8__ioinit>
    c9db:	48 89 c6             	mov    %rax,%rsi
    c9de:	48 8b 05 e3 95 01 00 	mov    0x195e3(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    c9e5:	48 89 c7             	mov    %rax,%rdi
    c9e8:	e8 13 79 ff ff       	call   4300 <__cxa_atexit@plt>
    c9ed:	90                   	nop
    c9ee:	c9                   	leave
    c9ef:	c3                   	ret

000000000000c9f0 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    c9f0:	55                   	push   %rbp
    c9f1:	48 89 e5             	mov    %rsp,%rbp
    c9f4:	be ff ff 00 00       	mov    $0xffff,%esi
    c9f9:	bf 01 00 00 00       	mov    $0x1,%edi
    c9fe:	e8 9b ff ff ff       	call   c99e <_Z41__static_initialization_and_destruction_0ii>
    ca03:	5d                   	pop    %rbp
    ca04:	c3                   	ret

000000000000ca05 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    ca05:	55                   	push   %rbp
    ca06:	48 89 e5             	mov    %rsp,%rbp
    ca09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    ca11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca15:	0f b6 00             	movzbl (%rax),%eax
    ca18:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    ca1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca1e:	0f b6 00             	movzbl (%rax),%eax
    ca21:	38 c2                	cmp    %al,%dl
    ca23:	0f 92 c0             	setb   %al
      }
    ca26:	5d                   	pop    %rbp
    ca27:	c3                   	ret

000000000000ca28 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    ca28:	55                   	push   %rbp
    ca29:	48 89 e5             	mov    %rsp,%rbp
    ca2c:	48 83 ec 30          	sub    $0x30,%rsp
    ca30:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca34:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ca38:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    ca3c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    ca41:	75 0a                	jne    ca4d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    ca43:	b8 00 00 00 00       	mov    $0x0,%eax
    ca48:	e9 99 00 00 00       	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    ca4d:	e8 2c 80 ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
    ca52:	84 c0                	test   %al,%al
    ca54:	74 78                	je     cace <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    ca56:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    ca5d:	00 
    ca5e:	eb 5d                	jmp    cabd <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    ca60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ca64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca68:	48 01 c2             	add    %rax,%rdx
    ca6b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    ca6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca73:	48 01 c8             	add    %rcx,%rax
    ca76:	48 89 d6             	mov    %rdx,%rsi
    ca79:	48 89 c7             	mov    %rax,%rdi
    ca7c:	e8 84 ff ff ff       	call   ca05 <_ZNSt11char_traitsIcE2ltERKcS2_>
    ca81:	84 c0                	test   %al,%al
    ca83:	74 07                	je     ca8c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    ca85:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ca8a:	eb 5a                	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    ca8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ca90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca94:	48 01 c2             	add    %rax,%rdx
    ca97:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ca9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca9f:	48 01 c8             	add    %rcx,%rax
    caa2:	48 89 d6             	mov    %rdx,%rsi
    caa5:	48 89 c7             	mov    %rax,%rdi
    caa8:	e8 58 ff ff ff       	call   ca05 <_ZNSt11char_traitsIcE2ltERKcS2_>
    caad:	84 c0                	test   %al,%al
    caaf:	74 07                	je     cab8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    cab1:	b8 01 00 00 00       	mov    $0x1,%eax
    cab6:	eb 2e                	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    cab8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    cabd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cac1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    cac5:	72 99                	jb     ca60 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    cac7:	b8 00 00 00 00       	mov    $0x0,%eax
    cacc:	eb 18                	jmp    cae6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    cace:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cad2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cad6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cada:	48 89 ce             	mov    %rcx,%rsi
    cadd:	48 89 c7             	mov    %rax,%rdi
    cae0:	e8 6b 76 ff ff       	call   4150 <memcmp@plt>
    cae5:	90                   	nop
      }
    cae6:	c9                   	leave
    cae7:	c3                   	ret

000000000000cae8 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    cae8:	55                   	push   %rbp
    cae9:	48 89 e5             	mov    %rsp,%rbp
    caec:	48 83 ec 10          	sub    $0x10,%rsp
    caf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    caf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    caf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cafc:	48 89 c7             	mov    %rax,%rdi
    caff:	e8 85 7f ff ff       	call   4a89 <_ZNSt11char_traitsIcE6lengthEPKc>
    cb04:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cb08:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    cb0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb0f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb13:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    cb17:	90                   	nop
    cb18:	c9                   	leave
    cb19:	c3                   	ret

000000000000cb1a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cb1a:	55                   	push   %rbp
    cb1b:	48 89 e5             	mov    %rsp,%rbp
    cb1e:	48 83 ec 20          	sub    $0x20,%rsp
    cb22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cb26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb2a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb2e:	48 89 d6             	mov    %rdx,%rsi
    cb31:	48 89 c7             	mov    %rax,%rdi
    cb34:	e8 27 01 00 00       	call   cc60 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cb39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb3d:	c9                   	leave
    cb3e:	c3                   	ret
    cb3f:	90                   	nop

000000000000cb40 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cb40:	55                   	push   %rbp
    cb41:	48 89 e5             	mov    %rsp,%rbp
    cb44:	48 83 ec 20          	sub    $0x20,%rsp
    cb48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    cb4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb50:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cb54:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb58:	48 89 d6             	mov    %rdx,%rsi
    cb5b:	48 89 c7             	mov    %rax,%rdi
    cb5e:	e8 fd 00 00 00       	call   cc60 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cb63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb67:	c9                   	leave
    cb68:	c3                   	ret

000000000000cb69 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cb69:	55                   	push   %rbp
    cb6a:	48 89 e5             	mov    %rsp,%rbp
    cb6d:	53                   	push   %rbx
    cb6e:	48 83 ec 18          	sub    $0x18,%rsp
    cb72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cb7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb7e:	48 89 c7             	mov    %rax,%rdi
    cb81:	e8 f8 00 00 00       	call   cc7e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cb86:	48 8b 18             	mov    (%rax),%rbx
    cb89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb8d:	48 89 c7             	mov    %rax,%rdi
    cb90:	e8 e9 00 00 00       	call   cc7e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cb95:	48 8b 00             	mov    (%rax),%rax
    cb98:	48 39 c3             	cmp    %rax,%rbx
    cb9b:	0f 95 c0             	setne  %al
    cb9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cba2:	c9                   	leave
    cba3:	c3                   	ret

000000000000cba4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cba4:	55                   	push   %rbp
    cba5:	48 89 e5             	mov    %rsp,%rbp
    cba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb0:	48 8b 00             	mov    (%rax),%rax
    cbb3:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cbba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbbe:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cbc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cbc5:	5d                   	pop    %rbp
    cbc6:	c3                   	ret
    cbc7:	90                   	nop

000000000000cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cbc8:	55                   	push   %rbp
    cbc9:	48 89 e5             	mov    %rsp,%rbp
    cbcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cbd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbd4:	48 8b 00             	mov    (%rax),%rax
    cbd7:	5d                   	pop    %rbp
    cbd8:	c3                   	ret
    cbd9:	90                   	nop

000000000000cbda <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    cbda:	55                   	push   %rbp
    cbdb:	48 89 e5             	mov    %rsp,%rbp
    cbde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    cbe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe6:	48 8b 00             	mov    (%rax),%rax
    cbe9:	5d                   	pop    %rbp
    cbea:	c3                   	ret

000000000000cbeb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    cbeb:	55                   	push   %rbp
    cbec:	48 89 e5             	mov    %rsp,%rbp
    cbef:	53                   	push   %rbx
    cbf0:	48 83 ec 28          	sub    $0x28,%rsp
    cbf4:	48 89 f0             	mov    %rsi,%rax
    cbf7:	49 89 f8             	mov    %rdi,%r8
    cbfa:	4c 89 c6             	mov    %r8,%rsi
    cbfd:	4c 89 cf             	mov    %r9,%rdi
    cc00:	48 89 c7             	mov    %rax,%rdi
    cc03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cc07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc0b:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    cc0f:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cc13:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cc17:	48 89 c7             	mov    %rax,%rdi
    cc1a:	e8 bb ff ff ff       	call   cbda <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cc1f:	48 89 c3             	mov    %rax,%rbx
    cc22:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cc26:	48 89 c7             	mov    %rax,%rdi
    cc29:	e8 ac ff ff ff       	call   cbda <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cc2e:	48 39 c3             	cmp    %rax,%rbx
    cc31:	75 22                	jne    cc55 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cc33:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cc37:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cc3b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cc3f:	48 89 ce             	mov    %rcx,%rsi
    cc42:	48 89 c7             	mov    %rax,%rdi
    cc45:	e8 42 00 00 00       	call   cc8c <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cc4a:	85 c0                	test   %eax,%eax
    cc4c:	75 07                	jne    cc55 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cc4e:	b8 01 00 00 00       	mov    $0x1,%eax
    cc53:	eb 05                	jmp    cc5a <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    cc55:	b8 00 00 00 00       	mov    $0x0,%eax
    cc5a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cc5e:	c9                   	leave
    cc5f:	c3                   	ret

000000000000cc60 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cc60:	55                   	push   %rbp
    cc61:	48 89 e5             	mov    %rsp,%rbp
    cc64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cc6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc70:	48 8b 10             	mov    (%rax),%rdx
    cc73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc77:	48 89 10             	mov    %rdx,(%rax)
    cc7a:	90                   	nop
    cc7b:	5d                   	pop    %rbp
    cc7c:	c3                   	ret
    cc7d:	90                   	nop

000000000000cc7e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cc7e:	55                   	push   %rbp
    cc7f:	48 89 e5             	mov    %rsp,%rbp
    cc82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cc86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc8a:	5d                   	pop    %rbp
    cc8b:	c3                   	ret

000000000000cc8c <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    cc8c:	55                   	push   %rbp
    cc8d:	48 89 e5             	mov    %rsp,%rbp
    cc90:	48 83 ec 30          	sub    $0x30,%rsp
    cc94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc98:	48 89 d1             	mov    %rdx,%rcx
    cc9b:	48 89 f0             	mov    %rsi,%rax
    cc9e:	48 89 fa             	mov    %rdi,%rdx
    cca1:	48 89 ca             	mov    %rcx,%rdx
    cca4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cca8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    ccac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccb0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    ccb4:	48 89 d6             	mov    %rdx,%rsi
    ccb7:	48 89 c7             	mov    %rax,%rdi
    ccba:	e8 6e 86 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
    ccbf:	48 8b 00             	mov    (%rax),%rax
    ccc2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    ccc6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    ccca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccce:	48 8b 40 08          	mov    0x8(%rax),%rax
    ccd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ccd6:	48 89 ce             	mov    %rcx,%rsi
    ccd9:	48 89 c7             	mov    %rax,%rdi
    ccdc:	e8 47 fd ff ff       	call   ca28 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    cce1:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    cce4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    cce8:	75 19                	jne    cd03 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    ccea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ccee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccf2:	48 8b 00             	mov    (%rax),%rax
    ccf5:	48 89 d6             	mov    %rdx,%rsi
    ccf8:	48 89 c7             	mov    %rax,%rdi
    ccfb:	e8 08 00 00 00       	call   cd08 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    cd00:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    cd03:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    cd06:	c9                   	leave
    cd07:	c3                   	ret

000000000000cd08 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    cd08:	55                   	push   %rbp
    cd09:	48 89 e5             	mov    %rsp,%rbp
    cd0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    cd14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd18:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    cd1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    cd20:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cd25:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cd29:	7c 07                	jl     cd32 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    cd2b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    cd30:	eb 1b                	jmp    cd4d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    cd32:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    cd39:	ff ff ff 
    cd3c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cd40:	7f 07                	jg     cd49 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    cd42:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cd47:	eb 04                	jmp    cd4d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    cd49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cd4d:	5d                   	pop    %rbp
    cd4e:	c3                   	ret

000000000000cd4f <_Z41__static_initialization_and_destruction_0ii>:
  VkPipeline self = nullptr;
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};
} /* namespace vkh */
    cd4f:	55                   	push   %rbp
    cd50:	48 89 e5             	mov    %rsp,%rbp
    cd53:	48 83 ec 10          	sub    $0x10,%rsp
    cd57:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cd5a:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cd5d:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cd61:	75 3b                	jne    cd9e <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd63:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cd6a:	75 32                	jne    cd9e <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd6c:	48 8d 05 c0 98 01 00 	lea    0x198c0(%rip),%rax        # 26633 <_ZStL8__ioinit>
    cd73:	48 89 c7             	mov    %rax,%rdi
    cd76:	e8 75 78 ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
    cd7b:	48 8d 05 2e 96 01 00 	lea    0x1962e(%rip),%rax        # 263b0 <__dso_handle>
    cd82:	48 89 c2             	mov    %rax,%rdx
    cd85:	48 8d 05 a7 98 01 00 	lea    0x198a7(%rip),%rax        # 26633 <_ZStL8__ioinit>
    cd8c:	48 89 c6             	mov    %rax,%rsi
    cd8f:	48 8b 05 32 92 01 00 	mov    0x19232(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cd96:	48 89 c7             	mov    %rax,%rdi
    cd99:	e8 62 75 ff ff       	call   4300 <__cxa_atexit@plt>
    cd9e:	90                   	nop
    cd9f:	c9                   	leave
    cda0:	c3                   	ret

000000000000cda1 <_GLOBAL__sub_I_vkh.cpp>:
    cda1:	55                   	push   %rbp
    cda2:	48 89 e5             	mov    %rsp,%rbp
    cda5:	be ff ff 00 00       	mov    $0xffff,%esi
    cdaa:	bf 01 00 00 00       	mov    $0x1,%edi
    cdaf:	e8 9b ff ff ff       	call   cd4f <_Z41__static_initialization_and_destruction_0ii>
    cdb4:	5d                   	pop    %rbp
    cdb5:	c3                   	ret

000000000000cdb6 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    cdb6:	55                   	push   %rbp
    cdb7:	48 89 e5             	mov    %rsp,%rbp
    cdba:	48 83 ec 10          	sub    $0x10,%rsp
    cdbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    cdc2:	e8 a9 76 ff ff       	call   4470 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    cdc7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    cdcd:	b9 00 00 00 00       	mov    $0x0,%ecx
    cdd2:	48 8d 05 57 cb 00 00 	lea    0xcb57(%rip),%rax        # 19930 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cdd9:	48 89 c2             	mov    %rax,%rdx
    cddc:	be 58 02 00 00       	mov    $0x258,%esi
    cde1:	bf 20 03 00 00       	mov    $0x320,%edi
    cde6:	e8 9a 88 ff ff       	call   5685 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    cdeb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cdef:	48 89 02             	mov    %rax,(%rdx)
}
    cdf2:	90                   	nop
    cdf3:	c9                   	leave
    cdf4:	c3                   	ret
    cdf5:	90                   	nop

000000000000cdf6 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    cdf6:	55                   	push   %rbp
    cdf7:	48 89 e5             	mov    %rsp,%rbp
    cdfa:	53                   	push   %rbx
    cdfb:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    ce02:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    ce09:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ce0d:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    ce11:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    ce15:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    ce19:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    ce20:	48 8d 05 09 cb 00 00 	lea    0xcb09(%rip),%rax        # 19930 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    ce27:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    ce2b:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    ce32:	48 8d 05 0a cb 00 00 	lea    0xcb0a(%rip),%rax        # 19943 <_ZN6__pstl9execution2v1L5unseqE+0x14>
    ce39:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    ce3d:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    ce44:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    ce4b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ce4f:	48 89 c7             	mov    %rax,%rdi
    ce52:	e8 17 a1 ff ff       	call   6f6e <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    ce57:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ce5b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ce5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce63:	48 89 c7             	mov    %rax,%rdi
    ce66:	e8 01 37 00 00       	call   1056c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    ce6b:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    ce72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce76:	48 89 c7             	mov    %rax,%rdi
    ce79:	e8 14 37 00 00       	call   10592 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    ce7e:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    ce85:	eb 3c                	jmp    cec3 <_ZN9VulkanApp14createInstanceEv+0xcd>
    ce87:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    ce8e:	48 89 c7             	mov    %rax,%rdi
    ce91:	e8 80 37 00 00       	call   10616 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    ce96:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    ce9a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cea1:	48 8d 50 10          	lea    0x10(%rax),%rdx
    cea5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cea9:	48 89 c6             	mov    %rax,%rsi
    ceac:	48 89 d7             	mov    %rdx,%rdi
    ceaf:	e8 74 37 00 00       	call   10628 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    ceb4:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cebb:	48 89 c7             	mov    %rax,%rdi
    cebe:	e8 33 37 00 00       	call   105f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    cec3:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    ceca:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    ced1:	48 89 d6             	mov    %rdx,%rsi
    ced4:	48 89 c7             	mov    %rax,%rdi
    ced7:	e8 df 36 00 00       	call   105bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cedc:	84 c0                	test   %al,%al
    cede:	75 a7                	jne    ce87 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    cee0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cee4:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    ceeb:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    cef2:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    cef6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cefd:	48 89 c7             	mov    %rax,%rdi
    cf00:	e8 ea f8 ff ff       	call   c7ef <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    cf05:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    cf0c:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    cf0f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cf16:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    cf1d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cf21:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    cf28:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf2f:	48 83 c0 28          	add    $0x28,%rax
    cf33:	48 89 c7             	mov    %rax,%rdi
    cf36:	e8 91 37 00 00       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    cf3b:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    cf41:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf48:	48 83 c0 28          	add    $0x28,%rax
    cf4c:	48 89 c7             	mov    %rax,%rdi
    cf4f:	e8 9c 37 00 00       	call   106f0 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    cf54:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    cf5b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf62:	48 83 c0 10          	add    $0x10,%rax
    cf66:	48 89 c7             	mov    %rax,%rdi
    cf69:	e8 5e 37 00 00       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    cf6e:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    cf74:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cf7b:	48 83 c0 10          	add    $0x10,%rax
    cf7f:	48 89 c7             	mov    %rax,%rdi
    cf82:	e8 8d 37 00 00       	call   10714 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    cf87:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    cf8e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    cf95:	be 00 00 00 00       	mov    $0x0,%esi
    cf9a:	48 89 c7             	mov    %rax,%rdi
    cf9d:	e8 39 87 ff ff       	call   56db <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    cfa2:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    cfa9:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    cfad:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cfb1:	48 89 c7             	mov    %rax,%rdi
    cfb4:	e8 6f 35 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cfb9:	eb 1a                	jmp    cfd5 <_ZN9VulkanApp14createInstanceEv+0x1df>
    cfbb:	48 89 c3             	mov    %rax,%rbx
    cfbe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cfc2:	48 89 c7             	mov    %rax,%rdi
    cfc5:	e8 5e 35 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cfca:	48 89 d8             	mov    %rbx,%rax
    cfcd:	48 89 c7             	mov    %rax,%rdi
    cfd0:	e8 1b 77 ff ff       	call   46f0 <_Unwind_Resume@plt>
    cfd5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cfd9:	c9                   	leave
    cfda:	c3                   	ret
    cfdb:	90                   	nop

000000000000cfdc <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    cfdc:	55                   	push   %rbp
    cfdd:	48 89 e5             	mov    %rsp,%rbp
    cfe0:	41 54                	push   %r12
    cfe2:	53                   	push   %rbx
    cfe3:	48 83 ec 10          	sub    $0x10,%rsp
    cfe7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    cfeb:	e8 4b f6 ff ff       	call   c63b <_ZN3vkh27checkValidationLayerSupportEv>
    cff0:	0f b6 c0             	movzbl %al,%eax
    cff3:	85 c0                	test   %eax,%eax
    cff5:	0f 94 c0             	sete   %al
    cff8:	84 c0                	test   %al,%al
    cffa:	74 3b                	je     d037 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    cffc:	bf 10 00 00 00       	mov    $0x10,%edi
    d001:	e8 6a 71 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    d006:	48 89 c3             	mov    %rax,%rbx
    d009:	48 8d 05 40 c9 00 00 	lea    0xc940(%rip),%rax        # 19950 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    d010:	48 89 c6             	mov    %rax,%rsi
    d013:	48 89 df             	mov    %rbx,%rdi
    d016:	e8 e5 70 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d01b:	48 8b 05 86 8f 01 00 	mov    0x18f86(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d022:	48 89 c2             	mov    %rax,%rdx
    d025:	48 8d 05 14 8d 01 00 	lea    0x18d14(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d02c:	48 89 c6             	mov    %rax,%rsi
    d02f:	48 89 df             	mov    %rbx,%rdi
    d032:	e8 59 76 ff ff       	call   4690 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    d037:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d03b:	48 8b 40 08          	mov    0x8(%rax),%rax
    d03f:	48 89 c7             	mov    %rax,%rdi
    d042:	e8 5e f8 ff ff       	call   c8a5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    d047:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d04b:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    d04f:	eb 16                	jmp    d067 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    d051:	49 89 c4             	mov    %rax,%r12
    d054:	48 89 df             	mov    %rbx,%rdi
    d057:	e8 e4 71 ff ff       	call   4240 <__cxa_free_exception@plt>
    d05c:	4c 89 e0             	mov    %r12,%rax
    d05f:	48 89 c7             	mov    %rax,%rdi
    d062:	e8 89 76 ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    d067:	48 83 c4 10          	add    $0x10,%rsp
    d06b:	5b                   	pop    %rbx
    d06c:	41 5c                	pop    %r12
    d06e:	5d                   	pop    %rbp
    d06f:	c3                   	ret

000000000000d070 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    d070:	55                   	push   %rbp
    d071:	48 89 e5             	mov    %rsp,%rbp
    d074:	48 83 ec 10          	sub    $0x10,%rsp
    d078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    d07c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d080:	48 8b 08             	mov    (%rax),%rcx
    d083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d087:	48 8b 40 08          	mov    0x8(%rax),%rax
    d08b:	ba 00 00 00 00       	mov    $0x0,%edx
    d090:	48 89 ce             	mov    %rcx,%rsi
    d093:	48 89 c7             	mov    %rax,%rdi
    d096:	e8 6b 87 ff ff       	call   5806 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    d09b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d09f:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    d0a3:	90                   	nop
    d0a4:	c9                   	leave
    d0a5:	c3                   	ret

000000000000d0a6 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    d0a6:	55                   	push   %rbp
    d0a7:	48 89 e5             	mov    %rsp,%rbp
    d0aa:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    d0b1:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    d0b8:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    d0bf:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    d0c6:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    d0cd:	48 89 d6             	mov    %rdx,%rsi
    d0d0:	48 89 c7             	mov    %rax,%rdi
    d0d3:	e8 63 a1 ff ff       	call   723b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    d0d8:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    d0de:	83 f8 02             	cmp    $0x2,%eax
    d0e1:	0f 94 c0             	sete   %al
}
    d0e4:	c9                   	leave
    d0e5:	c3                   	ret

000000000000d0e6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    d0e6:	55                   	push   %rbp
    d0e7:	48 89 e5             	mov    %rsp,%rbp
    d0ea:	53                   	push   %rbx
    d0eb:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    d0f2:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    d0f9:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    d100:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    d107:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d10b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d112:	48 89 d6             	mov    %rdx,%rsi
    d115:	48 89 c7             	mov    %rax,%rdi
    d118:	e8 47 a2 ff ff       	call   7364 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    d11d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d121:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d128:	48 89 d6             	mov    %rdx,%rsi
    d12b:	48 89 c7             	mov    %rax,%rdi
    d12e:	e8 65 a3 ff ff       	call   7498 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    d133:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d13a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d13e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d145:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    d14c:	48 89 ce             	mov    %rcx,%rsi
    d14f:	48 89 c7             	mov    %rax,%rdi
    d152:	e8 7a a4 ff ff       	call   75d1 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d157:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d15e:	00 
    d15f:	e9 c5 00 00 00       	jmp    d229 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d164:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d168:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d16c:	48 89 d6             	mov    %rdx,%rsi
    d16f:	48 89 c7             	mov    %rax,%rdi
    d172:	e8 7f b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d177:	48 89 c7             	mov    %rax,%rdi
    d17a:	e8 e7 35 00 00       	call   10766 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d17f:	84 c0                	test   %al,%al
    d181:	74 48                	je     d1cb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d183:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d187:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d18b:	48 89 d6             	mov    %rdx,%rsi
    d18e:	48 89 c7             	mov    %rax,%rdi
    d191:	e8 60 b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d196:	48 89 c7             	mov    %rax,%rdi
    d199:	e8 c8 35 00 00       	call   10766 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d19e:	84 c0                	test   %al,%al
    d1a0:	74 29                	je     d1cb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d1a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1a6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d1ad:	48 89 d6             	mov    %rdx,%rsi
    d1b0:	48 89 c7             	mov    %rax,%rdi
    d1b3:	e8 3e b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d1b8:	48 89 c7             	mov    %rax,%rdi
    d1bb:	e8 a6 35 00 00       	call   10766 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d1c0:	84 c0                	test   %al,%al
    d1c2:	74 07                	je     d1cb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d1c4:	b8 01 00 00 00       	mov    $0x1,%eax
    d1c9:	eb 05                	jmp    d1d0 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d1cb:	b8 00 00 00 00       	mov    $0x0,%eax
    d1d0:	84 c0                	test   %al,%al
    d1d2:	74 50                	je     d224 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d1d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1d8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d1db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1df:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d1e3:	48 89 d6             	mov    %rdx,%rsi
    d1e6:	48 89 c7             	mov    %rax,%rdi
    d1e9:	e8 08 b4 ff ff       	call   85f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d1ee:	48 89 c7             	mov    %rax,%rdi
    d1f1:	e8 8a 35 00 00       	call   10780 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d1f6:	48 89 c2             	mov    %rax,%rdx
    d1f9:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d1fd:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d201:	48 89 ce             	mov    %rcx,%rsi
    d204:	48 89 c7             	mov    %rax,%rdi
    d207:	e8 a6 35 00 00       	call   107b2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d20c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d210:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d217:	48 89 d6             	mov    %rdx,%rsi
    d21a:	48 89 c7             	mov    %rax,%rdi
    d21d:	e8 e6 35 00 00       	call   10808 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d222:	eb 2f                	jmp    d253 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d224:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d229:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d22d:	48 89 c7             	mov    %rax,%rdi
    d230:	e8 03 35 00 00       	call   10738 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d235:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d239:	0f 92 c0             	setb   %al
    d23c:	84 c0                	test   %al,%al
    d23e:	0f 85 20 ff ff ff    	jne    d164 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d244:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d24b:	48 89 c7             	mov    %rax,%rdi
    d24e:	e8 07 30 00 00       	call   1025a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d253:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d25a:	48 89 c7             	mov    %rax,%rdi
    d25d:	e8 94 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d262:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d266:	48 89 c7             	mov    %rax,%rdi
    d269:	e8 88 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d26e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d272:	48 89 c7             	mov    %rax,%rdi
    d275:	e8 7c b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d27a:	eb 3f                	jmp    d2bb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d27c:	48 89 c3             	mov    %rax,%rbx
    d27f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d286:	48 89 c7             	mov    %rax,%rdi
    d289:	e8 68 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d28e:	eb 03                	jmp    d293 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d290:	48 89 c3             	mov    %rax,%rbx
    d293:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d297:	48 89 c7             	mov    %rax,%rdi
    d29a:	e8 57 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d29f:	eb 03                	jmp    d2a4 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d2a1:	48 89 c3             	mov    %rax,%rbx
    d2a4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d2a8:	48 89 c7             	mov    %rax,%rdi
    d2ab:	e8 46 b2 ff ff       	call   84f6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d2b0:	48 89 d8             	mov    %rbx,%rax
    d2b3:	48 89 c7             	mov    %rax,%rdi
    d2b6:	e8 35 74 ff ff       	call   46f0 <_Unwind_Resume@plt>
    d2bb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d2c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d2c6:	c9                   	leave
    d2c7:	c3                   	ret

000000000000d2c8 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d2c8:	55                   	push   %rbp
    d2c9:	48 89 e5             	mov    %rsp,%rbp
    d2cc:	41 54                	push   %r12
    d2ce:	53                   	push   %rbx
    d2cf:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d2d6:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d2dd:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d2e4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d2e8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d2ec:	48 89 d6             	mov    %rdx,%rsi
    d2ef:	48 89 c7             	mov    %rax,%rdi
    d2f2:	e8 d5 9d ff ff       	call   70cc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d2f7:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d2fe:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d2ff:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d303:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d307:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d30b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d30f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d313:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d317:	48 89 c7             	mov    %rax,%rdi
    d31a:	e8 1d 35 00 00       	call   1083c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d31f:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d326:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d32a:	48 89 c7             	mov    %rax,%rdi
    d32d:	e8 30 35 00 00       	call   10862 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d332:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d339:	e9 dd 00 00 00       	jmp    d41b <_ZN9VulkanApp12createDeviceEv+0x153>
    d33e:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d345:	48 89 c7             	mov    %rax,%rdi
    d348:	e8 99 35 00 00       	call   108e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d34d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d351:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d355:	48 8b 10             	mov    (%rax),%rdx
    d358:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d35f:	48 89 d6             	mov    %rdx,%rsi
    d362:	48 89 c7             	mov    %rax,%rdi
    d365:	e8 3c fd ff ff       	call   d0a6 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d36a:	84 c0                	test   %al,%al
    d36c:	74 41                	je     d3af <_ZN9VulkanApp12createDeviceEv+0xe7>
    d36e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d372:	48 8b 10             	mov    (%rax),%rdx
    d375:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d37c:	48 89 d6             	mov    %rdx,%rsi
    d37f:	48 89 c7             	mov    %rax,%rdi
    d382:	e8 f9 02 00 00       	call   d680 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d387:	84 c0                	test   %al,%al
    d389:	74 24                	je     d3af <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d38b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d38f:	48 8b 10             	mov    (%rax),%rdx
    d392:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d399:	48 89 d6             	mov    %rdx,%rsi
    d39c:	48 89 c7             	mov    %rax,%rdi
    d39f:	e8 16 06 00 00       	call   d9ba <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d3a4:	84 c0                	test   %al,%al
    d3a6:	74 07                	je     d3af <_ZN9VulkanApp12createDeviceEv+0xe7>
    d3a8:	b8 01 00 00 00       	mov    $0x1,%eax
    d3ad:	eb 05                	jmp    d3b4 <_ZN9VulkanApp12createDeviceEv+0xec>
    d3af:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d3b4:	84 c0                	test   %al,%al
    d3b6:	74 54                	je     d40c <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d3b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d3bc:	48 8b 10             	mov    (%rax),%rdx
    d3bf:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d3c6:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d3cd:	48 89 ce             	mov    %rcx,%rsi
    d3d0:	48 89 c7             	mov    %rax,%rdi
    d3d3:	e8 0e fd ff ff       	call   d0e6 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d3d8:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d3df:	48 89 c7             	mov    %rax,%rdi
    d3e2:	e8 11 35 00 00       	call   108f8 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d3e7:	84 c0                	test   %al,%al
    d3e9:	74 21                	je     d40c <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d3eb:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d3f2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d3f6:	48 89 d6             	mov    %rdx,%rsi
    d3f9:	48 89 c7             	mov    %rax,%rdi
    d3fc:	e8 ab 2e 00 00       	call   102ac <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d401:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d405:	48 8b 00             	mov    (%rax),%rax
    d408:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d40c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d413:	48 89 c7             	mov    %rax,%rdi
    d416:	e8 ab 34 00 00       	call   108c6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d41b:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d422:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d429:	48 89 d6             	mov    %rdx,%rsi
    d42c:	48 89 c7             	mov    %rax,%rdi
    d42f:	e8 57 34 00 00       	call   1088b <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d434:	84 c0                	test   %al,%al
    d436:	0f 85 02 ff ff ff    	jne    d33e <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d43c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d441:	75 3b                	jne    d47e <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d443:	bf 10 00 00 00       	mov    $0x10,%edi
    d448:	e8 23 6d ff ff       	call   4170 <__cxa_allocate_exception@plt>
    d44d:	48 89 c3             	mov    %rax,%rbx
    d450:	48 8d 05 21 c5 00 00 	lea    0xc521(%rip),%rax        # 19978 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d457:	48 89 c6             	mov    %rax,%rsi
    d45a:	48 89 df             	mov    %rbx,%rdi
    d45d:	e8 9e 6c ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d462:	48 8b 05 3f 8b 01 00 	mov    0x18b3f(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d469:	48 89 c2             	mov    %rax,%rdx
    d46c:	48 8d 05 cd 88 01 00 	lea    0x188cd(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d473:	48 89 c6             	mov    %rax,%rsi
    d476:	48 89 df             	mov    %rbx,%rdi
    d479:	e8 12 72 ff ff       	call   4690 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d47e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d482:	48 89 c7             	mov    %rax,%rdi
    d485:	e8 4c 2e 00 00       	call   102d6 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d48a:	8b 00                	mov    (%rax),%eax
    d48c:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d48f:	f3 0f 10 05 f9 c8 00 	movss  0xc8f9(%rip),%xmm0        # 19d90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    d496:	00 
    d497:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d49c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d4a0:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d4a7:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d4ae:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d4b3:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d4ba:	00 00 00 
  queueInfo.pNext = nullptr;
    d4bd:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d4c4:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d4c8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d4cb:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d4d1:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d4d8:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d4db:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d4df:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d4e3:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d4ea:	b8 00 00 00 00       	mov    $0x0,%eax
    d4ef:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d4f4:	48 89 d7             	mov    %rdx,%rdi
    d4f7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d4fa:	48 89 fa             	mov    %rdi,%rdx
    d4fd:	89 02                	mov    %eax,(%rdx)
    d4ff:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d503:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d507:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d50e:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d515:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d51c:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d523:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d52a:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d52b:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d532:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d535:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d53c:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d540:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d547:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d54a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d551:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d558:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d55f:	48 05 88 00 00 00    	add    $0x88,%rax
    d565:	48 89 c7             	mov    %rax,%rdi
    d568:	e8 5f 31 00 00       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d56d:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d573:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d57a:	48 05 88 00 00 00    	add    $0x88,%rax
    d580:	48 89 c7             	mov    %rax,%rdi
    d583:	e8 8c 31 00 00       	call   10714 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d588:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d58f:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d596:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d59d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d5a4:	48 83 c0 28          	add    $0x28,%rax
    d5a8:	48 89 c7             	mov    %rax,%rdi
    d5ab:	e8 1c 31 00 00       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d5b0:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d5b6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d5bd:	48 83 c0 28          	add    $0x28,%rax
    d5c1:	48 89 c7             	mov    %rax,%rdi
    d5c4:	e8 27 31 00 00       	call   106f0 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d5c9:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d5d0:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d5d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5db:	ba 00 00 00 00       	mov    $0x0,%edx
    d5e0:	48 89 ce             	mov    %rcx,%rsi
    d5e3:	48 89 c7             	mov    %rax,%rdi
    d5e6:	e8 83 81 ff ff       	call   576e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d5eb:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d5f2:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d5f6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d5fd:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d601:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d608:	48 8b 40 50          	mov    0x50(%rax),%rax
    d60c:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d60f:	48 89 d1             	mov    %rdx,%rcx
    d612:	ba 00 00 00 00       	mov    $0x0,%edx
    d617:	48 89 c7             	mov    %rax,%rdi
    d61a:	e8 21 6f ff ff       	call   4540 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d61f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d626:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d62a:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d62e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d635:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d638:	89 50 68             	mov    %edx,0x68(%rax)
}
    d63b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d63f:	48 89 c7             	mov    %rax,%rdi
    d642:	e8 af ab ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d647:	eb 2a                	jmp    d673 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d649:	49 89 c4             	mov    %rax,%r12
    d64c:	48 89 df             	mov    %rbx,%rdi
    d64f:	e8 ec 6b ff ff       	call   4240 <__cxa_free_exception@plt>
    d654:	4c 89 e3             	mov    %r12,%rbx
    d657:	eb 03                	jmp    d65c <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d659:	48 89 c3             	mov    %rax,%rbx
    d65c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d660:	48 89 c7             	mov    %rax,%rdi
    d663:	e8 8e ab ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d668:	48 89 d8             	mov    %rbx,%rax
    d66b:	48 89 c7             	mov    %rax,%rdi
    d66e:	e8 7d 70 ff ff       	call   46f0 <_Unwind_Resume@plt>
    d673:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d67a:	5b                   	pop    %rbx
    d67b:	41 5c                	pop    %r12
    d67d:	5d                   	pop    %rbp
    d67e:	c3                   	ret
    d67f:	90                   	nop

000000000000d680 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d680:	55                   	push   %rbp
    d681:	48 89 e5             	mov    %rsp,%rbp
    d684:	53                   	push   %rbx
    d685:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d68c:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d693:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    d69a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d6a1:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    d6a8:	ba 00 00 00 00       	mov    $0x0,%edx
    d6ad:	48 89 ce             	mov    %rcx,%rsi
    d6b0:	48 89 c7             	mov    %rax,%rdi
    d6b3:	e8 3f 97 ff ff       	call   6df7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    d6b8:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d6bf:	48 89 c7             	mov    %rax,%rdi
    d6c2:	e8 8b 2c 00 00       	call   10352 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    d6c7:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d6ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d6d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6d6:	48 89 c7             	mov    %rax,%rdi
    d6d9:	e8 30 33 00 00       	call   10a0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d6de:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    d6e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6e9:	48 89 c7             	mov    %rax,%rdi
    d6ec:	e8 43 33 00 00       	call   10a34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d6f1:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    d6f8:	e9 8c 00 00 00       	jmp    d789 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    d6fd:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d704:	48 89 c7             	mov    %rax,%rdi
    d707:	e8 b0 33 00 00       	call   10abc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d70c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    d710:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d717:	48 89 c7             	mov    %rax,%rdi
    d71a:	e8 e1 6f ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    d71f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d723:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    d72a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d731:	48 89 ce             	mov    %rcx,%rsi
    d734:	48 89 c7             	mov    %rax,%rdi
    d737:	e8 04 74 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d73c:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    d743:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d74a:	48 89 d6             	mov    %rdx,%rsi
    d74d:	48 89 c7             	mov    %rax,%rdi
    d750:	e8 79 33 00 00       	call   10ace <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d755:	8b 10                	mov    (%rax),%edx
    d757:	83 c2 01             	add    $0x1,%edx
    d75a:	89 10                	mov    %edx,(%rax)
    d75c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d763:	48 89 c7             	mov    %rax,%rdi
    d766:	e8 75 6a ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d76b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d772:	48 89 c7             	mov    %rax,%rdi
    d775:	e8 a6 6c ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    d77a:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d781:	48 89 c7             	mov    %rax,%rdi
    d784:	e8 0f 33 00 00       	call   10a98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d789:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    d790:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d797:	48 89 d6             	mov    %rdx,%rsi
    d79a:	48 89 c7             	mov    %rax,%rdi
    d79d:	e8 bb 32 00 00       	call   10a5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d7a2:	84 c0                	test   %al,%al
    d7a4:	0f 85 53 ff ff ff    	jne    d6fd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    d7aa:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    d7b1:	48 05 88 00 00 00    	add    $0x88,%rax
    d7b7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d7bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d7bf:	48 89 c7             	mov    %rax,%rdi
    d7c2:	e8 a5 2d 00 00       	call   1056c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d7c7:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    d7ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d7d2:	48 89 c7             	mov    %rax,%rdi
    d7d5:	e8 b8 2d 00 00       	call   10592 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d7da:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    d7e1:	e9 ed 00 00 00       	jmp    d8d3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    d7e6:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d7ed:	48 89 c7             	mov    %rax,%rdi
    d7f0:	e8 21 2e 00 00       	call   10616 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d7f5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    d7f9:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d7fd:	48 89 c7             	mov    %rax,%rdi
    d800:	e8 fb 6e ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    d805:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d809:	48 8b 08             	mov    (%rax),%rcx
    d80c:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    d810:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d817:	48 89 ce             	mov    %rcx,%rsi
    d81a:	48 89 c7             	mov    %rax,%rdi
    d81d:	e8 1e 73 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d822:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d829:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d830:	48 89 d6             	mov    %rdx,%rsi
    d833:	48 89 c7             	mov    %rax,%rdi
    d836:	e8 93 32 00 00       	call   10ace <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d83b:	8b 10                	mov    (%rax),%edx
    d83d:	83 c2 01             	add    $0x1,%edx
    d840:	89 10                	mov    %edx,(%rax)
    d842:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d849:	48 89 c7             	mov    %rax,%rdi
    d84c:	e8 8f 69 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d851:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d855:	48 89 c7             	mov    %rax,%rdi
    d858:	e8 c3 6b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    d85d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d861:	48 89 c7             	mov    %rax,%rdi
    d864:	e8 97 6e ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    d869:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d86d:	48 8b 08             	mov    (%rax),%rcx
    d870:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d874:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d878:	48 89 ce             	mov    %rcx,%rsi
    d87b:	48 89 c7             	mov    %rax,%rdi
    d87e:	e8 bd 72 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d883:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d887:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d88e:	48 89 d6             	mov    %rdx,%rsi
    d891:	48 89 c7             	mov    %rax,%rdi
    d894:	e8 35 32 00 00       	call   10ace <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d899:	8b 00                	mov    (%rax),%eax
    d89b:	83 f8 01             	cmp    $0x1,%eax
    d89e:	0f 96 c3             	setbe  %bl
    d8a1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d8a5:	48 89 c7             	mov    %rax,%rdi
    d8a8:	e8 33 69 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d8ad:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d8b1:	48 89 c7             	mov    %rax,%rdi
    d8b4:	e8 67 6b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d8b9:	84 db                	test   %bl,%bl
    d8bb:	74 07                	je     d8c4 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    d8bd:	bb 00 00 00 00       	mov    $0x0,%ebx
    d8c2:	eb 35                	jmp    d8f9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    d8c4:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d8cb:	48 89 c7             	mov    %rax,%rdi
    d8ce:	e8 23 2d 00 00       	call   105f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d8d3:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    d8da:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d8e1:	48 89 d6             	mov    %rdx,%rsi
    d8e4:	48 89 c7             	mov    %rax,%rdi
    d8e7:	e8 cf 2c 00 00       	call   105bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d8ec:	84 c0                	test   %al,%al
    d8ee:	0f 85 f2 fe ff ff    	jne    d7e6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    d8f4:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    d8f9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d900:	48 89 c7             	mov    %rax,%rdi
    d903:	e8 66 2a 00 00       	call   1036e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d908:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d90f:	48 89 c7             	mov    %rax,%rdi
    d912:	e8 55 a6 ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d917:	89 d8                	mov    %ebx,%eax
    d919:	e9 96 00 00 00       	jmp    d9b4 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    d91e:	48 89 c3             	mov    %rax,%rbx
    d921:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d928:	48 89 c7             	mov    %rax,%rdi
    d92b:	e8 b0 68 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d930:	eb 03                	jmp    d935 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    d932:	48 89 c3             	mov    %rax,%rbx
    d935:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d93c:	48 89 c7             	mov    %rax,%rdi
    d93f:	e8 dc 6a ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d944:	eb 45                	jmp    d98b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    d946:	48 89 c3             	mov    %rax,%rbx
    d949:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d950:	48 89 c7             	mov    %rax,%rdi
    d953:	e8 88 68 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d958:	eb 03                	jmp    d95d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    d95a:	48 89 c3             	mov    %rax,%rbx
    d95d:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d961:	48 89 c7             	mov    %rax,%rdi
    d964:	e8 b7 6a ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d969:	eb 20                	jmp    d98b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    d96b:	48 89 c3             	mov    %rax,%rbx
    d96e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d972:	48 89 c7             	mov    %rax,%rdi
    d975:	e8 66 68 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d97a:	eb 03                	jmp    d97f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    d97c:	48 89 c3             	mov    %rax,%rbx
    d97f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d983:	48 89 c7             	mov    %rax,%rdi
    d986:	e8 95 6a ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
}
    d98b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d992:	48 89 c7             	mov    %rax,%rdi
    d995:	e8 d4 29 00 00       	call   1036e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d99a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d9a1:	48 89 c7             	mov    %rax,%rdi
    d9a4:	e8 c3 a5 ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d9a9:	48 89 d8             	mov    %rbx,%rax
    d9ac:	48 89 c7             	mov    %rax,%rdi
    d9af:	e8 3c 6d ff ff       	call   46f0 <_Unwind_Resume@plt>
    d9b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d9b8:	c9                   	leave
    d9b9:	c3                   	ret

000000000000d9ba <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    d9ba:	55                   	push   %rbp
    d9bb:	48 89 e5             	mov    %rsp,%rbp
    d9be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    d9c6:	b8 01 00 00 00       	mov    $0x1,%eax
}
    d9cb:	5d                   	pop    %rbp
    d9cc:	c3                   	ret
    d9cd:	90                   	nop

000000000000d9ce <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    d9ce:	55                   	push   %rbp
    d9cf:	48 89 e5             	mov    %rsp,%rbp
    d9d2:	41 54                	push   %r12
    d9d4:	53                   	push   %rbx
    d9d5:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    d9dc:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    d9e3:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    d9ea:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d9f1:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d9f5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d9fc:	48 8b 48 58          	mov    0x58(%rax),%rcx
    da00:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    da04:	48 89 ce             	mov    %rcx,%rsi
    da07:	48 89 c7             	mov    %rax,%rdi
    da0a:	e8 32 9d ff ff       	call   7741 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    da0f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da16:	48 8b 50 48          	mov    0x48(%rax),%rdx
    da1a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da21:	48 8b 48 58          	mov    0x58(%rax),%rcx
    da25:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da2c:	48 89 ce             	mov    %rcx,%rsi
    da2f:	48 89 c7             	mov    %rax,%rdi
    da32:	e8 b8 9d ff ff       	call   77ef <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    da37:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da3e:	48 8b 50 48          	mov    0x48(%rax),%rdx
    da42:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da49:	48 8b 48 58          	mov    0x58(%rax),%rcx
    da4d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    da54:	48 89 ce             	mov    %rcx,%rsi
    da57:	48 89 c7             	mov    %rax,%rdi
    da5a:	e8 07 9f ff ff       	call   7966 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    da5f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da66:	48 89 c6             	mov    %rax,%rsi
    da69:	b8 00 00 00 00       	mov    $0x0,%eax
    da6e:	ba 0d 00 00 00       	mov    $0xd,%edx
    da73:	48 89 f7             	mov    %rsi,%rdi
    da76:	48 89 d1             	mov    %rdx,%rcx
    da79:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    da7c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da83:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    da89:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da90:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    da97:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    da98:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    da9f:	48 8b 50 48          	mov    0x48(%rax),%rdx
    daa3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    daaa:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    daae:	8b 45 80             	mov    -0x80(%rbp),%eax
    dab1:	83 c0 01             	add    $0x1,%eax
    dab4:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    dab7:	8b 45 84             	mov    -0x7c(%rbp),%eax
    daba:	85 c0                	test   %eax,%eax
    dabc:	74 0e                	je     dacc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    dabe:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    dac1:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    dac4:	73 06                	jae    dacc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    dac6:	8b 45 84             	mov    -0x7c(%rbp),%eax
    dac9:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    dacc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dad3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    dad6:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    dad9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dae0:	48 89 c7             	mov    %rax,%rdi
    dae3:	e8 ea 30 00 00       	call   10bd2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    dae8:	84 c0                	test   %al,%al
    daea:	74 3b                	je     db27 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    daec:	bf 10 00 00 00       	mov    $0x10,%edi
    daf1:	e8 7a 66 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    daf6:	48 89 c3             	mov    %rax,%rbx
    daf9:	48 8d 05 9c be 00 00 	lea    0xbe9c(%rip),%rax        # 1999c <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    db00:	48 89 c6             	mov    %rax,%rsi
    db03:	48 89 df             	mov    %rbx,%rdi
    db06:	e8 f5 65 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    db0b:	48 8b 05 96 84 01 00 	mov    0x18496(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    db12:	48 89 c2             	mov    %rax,%rdx
    db15:	48 8d 05 24 82 01 00 	lea    0x18224(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    db1c:	48 89 c6             	mov    %rax,%rsi
    db1f:	48 89 df             	mov    %rbx,%rdi
    db22:	e8 69 6b ff ff       	call   4690 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    db27:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db2e:	be 00 00 00 00       	mov    $0x0,%esi
    db33:	48 89 c7             	mov    %rax,%rdi
    db36:	e8 d9 30 00 00       	call   10c14 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    db3b:	8b 10                	mov    (%rax),%edx
    db3d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db44:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    db47:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db4e:	be 00 00 00 00       	mov    $0x0,%esi
    db53:	48 89 c7             	mov    %rax,%rdi
    db56:	e8 b9 30 00 00       	call   10c14 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    db5b:	8b 50 04             	mov    0x4(%rax),%edx
    db5e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db65:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    db68:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    db6f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    db73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db77:	48 89 c7             	mov    %rax,%rdi
    db7a:	e8 b5 30 00 00       	call   10c34 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    db7f:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    db86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db8a:	48 89 c7             	mov    %rax,%rdi
    db8d:	e8 c8 30 00 00       	call   10c5a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    db92:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    db99:	eb 5b                	jmp    dbf6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    db9b:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dba2:	48 89 c7             	mov    %rax,%rdi
    dba5:	e8 34 31 00 00       	call   10cde <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dbaa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dbae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbb2:	8b 00                	mov    (%rax),%eax
    dbb4:	83 f8 2b             	cmp    $0x2b,%eax
    dbb7:	75 2e                	jne    dbe7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    dbb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbbd:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dbc0:	85 c0                	test   %eax,%eax
    dbc2:	75 23                	jne    dbe7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    dbc4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbc8:	8b 10                	mov    (%rax),%edx
    dbca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbd1:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    dbd4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dbd8:	8b 50 04             	mov    0x4(%rax),%edx
    dbdb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbe2:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    dbe5:	eb 2c                	jmp    dc13 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    dbe7:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dbee:	48 89 c7             	mov    %rax,%rdi
    dbf1:	e8 c8 30 00 00       	call   10cbe <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    dbf6:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    dbfd:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dc04:	48 89 d6             	mov    %rdx,%rsi
    dc07:	48 89 c7             	mov    %rax,%rdi
    dc0a:	e8 74 30 00 00       	call   10c83 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dc0f:	84 c0                	test   %al,%al
    dc11:	75 88                	jne    db9b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    dc13:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc1a:	8b 50 24             	mov    0x24(%rax),%edx
    dc1d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dc24:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    dc27:	8b 45 88             	mov    -0x78(%rbp),%eax
    dc2a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    dc2d:	8b 45 8c             	mov    -0x74(%rbp),%eax
    dc30:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    dc33:	8b 45 98             	mov    -0x68(%rbp),%eax
    dc36:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    dc39:	73 06                	jae    dc41 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    dc3b:	8b 45 98             	mov    -0x68(%rbp),%eax
    dc3e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    dc41:	8b 45 9c             	mov    -0x64(%rbp),%eax
    dc44:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    dc47:	73 06                	jae    dc4f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    dc49:	8b 45 9c             	mov    -0x64(%rbp),%eax
    dc4c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    dc4f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc56:	8b 55 e8             	mov    -0x18(%rbp),%edx
    dc59:	89 50 2c             	mov    %edx,0x2c(%rax)
    dc5c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc63:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    dc66:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    dc69:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dc70:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    dc77:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    dc7b:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    dc7f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc86:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    dc8d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc94:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    dc9b:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    dca2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dca9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    dcad:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dcb1:	48 89 c7             	mov    %rax,%rdi
    dcb4:	e8 37 30 00 00       	call   10cf0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    dcb9:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    dcc0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dcc4:	48 89 c7             	mov    %rax,%rdi
    dcc7:	e8 4a 30 00 00       	call   10d16 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    dccc:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    dcd3:	eb 3c                	jmp    dd11 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    dcd5:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dcdc:	48 89 c7             	mov    %rax,%rdi
    dcdf:	e8 b6 30 00 00       	call   10d9a <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dce4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    dce8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dcec:	8b 00                	mov    (%rax),%eax
    dcee:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    dcf1:	75 0f                	jne    dd02 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    dcf3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dcfa:	8b 55 cc             	mov    -0x34(%rbp),%edx
    dcfd:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    dd00:	eb 2c                	jmp    dd2e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    dd02:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dd09:	48 89 c7             	mov    %rax,%rdi
    dd0c:	e8 69 30 00 00       	call   10d7a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    dd11:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    dd18:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dd1f:	48 89 d6             	mov    %rdx,%rsi
    dd22:	48 89 c7             	mov    %rax,%rdi
    dd25:	e8 15 30 00 00       	call   10d3f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dd2a:	84 c0                	test   %al,%al
    dd2c:	75 a7                	jne    dcd5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    dd2e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd35:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    dd3c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd43:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    dd4a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd51:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    dd58:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd5f:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    dd66:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    dd67:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    dd6a:	83 e0 01             	and    $0x1,%eax
    dd6d:	85 c0                	test   %eax,%eax
    dd6f:	74 1e                	je     dd8f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    dd71:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd78:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    dd7f:	8b 45 ac             	mov    -0x54(%rbp),%eax
    dd82:	83 e0 01             	and    $0x1,%eax
    dd85:	85 c0                	test   %eax,%eax
    dd87:	0f 84 9b 00 00 00    	je     de28 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    dd8d:	eb 3b                	jmp    ddca <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dd8f:	bf 10 00 00 00       	mov    $0x10,%edi
    dd94:	e8 d7 63 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    dd99:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dd9c:	48 8d 05 1d bc 00 00 	lea    0xbc1d(%rip),%rax        # 199c0 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    dda3:	48 89 c6             	mov    %rax,%rsi
    dda6:	48 89 df             	mov    %rbx,%rdi
    dda9:	e8 52 63 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    ddae:	48 8b 05 f3 81 01 00 	mov    0x181f3(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ddb5:	48 89 c2             	mov    %rax,%rdx
    ddb8:	48 8d 05 81 7f 01 00 	lea    0x17f81(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ddbf:	48 89 c6             	mov    %rax,%rsi
    ddc2:	48 89 df             	mov    %rbx,%rdi
    ddc5:	e8 c6 68 ff ff       	call   4690 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    ddca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddd1:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    ddd8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dddf:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    dde6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dded:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ddf4:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    ddf5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddfc:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    de03:	00 

  return swapchainCreateInfo;
    de04:	90                   	nop
}
    de05:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    de0c:	48 89 c7             	mov    %rax,%rdi
    de0f:	e8 f6 aa ff ff       	call   890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    de14:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    de1b:	48 89 c7             	mov    %rax,%rdi
    de1e:	e8 83 a9 ff ff       	call   87a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    de23:	e9 9c 00 00 00       	jmp    dec4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    de28:	bf 10 00 00 00       	mov    $0x10,%edi
    de2d:	e8 3e 63 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    de32:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    de35:	48 8d 05 bc bb 00 00 	lea    0xbbbc(%rip),%rax        # 199f8 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    de3c:	48 89 c6             	mov    %rax,%rsi
    de3f:	48 89 df             	mov    %rbx,%rdi
    de42:	e8 b9 62 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    de47:	48 8b 05 5a 81 01 00 	mov    0x1815a(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    de4e:	48 89 c2             	mov    %rax,%rdx
    de51:	48 8d 05 e8 7e 01 00 	lea    0x17ee8(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    de58:	48 89 c6             	mov    %rax,%rsi
    de5b:	48 89 df             	mov    %rbx,%rdi
    de5e:	e8 2d 68 ff ff       	call   4690 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    de63:	49 89 c4             	mov    %rax,%r12
    de66:	48 89 df             	mov    %rbx,%rdi
    de69:	e8 d2 63 ff ff       	call   4240 <__cxa_free_exception@plt>
    de6e:	4c 89 e3             	mov    %r12,%rbx
    de71:	eb 23                	jmp    de96 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    de73:	49 89 c4             	mov    %rax,%r12
    de76:	48 89 df             	mov    %rbx,%rdi
    de79:	e8 c2 63 ff ff       	call   4240 <__cxa_free_exception@plt>
    de7e:	4c 89 e3             	mov    %r12,%rbx
    de81:	eb 13                	jmp    de96 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    de83:	49 89 c4             	mov    %rax,%r12
    de86:	48 89 df             	mov    %rbx,%rdi
    de89:	e8 b2 63 ff ff       	call   4240 <__cxa_free_exception@plt>
    de8e:	4c 89 e3             	mov    %r12,%rbx
    de91:	eb 03                	jmp    de96 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    de93:	48 89 c3             	mov    %rax,%rbx
    de96:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    de9d:	48 89 c7             	mov    %rax,%rdi
    dea0:	e8 65 aa ff ff       	call   890a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    dea5:	eb 03                	jmp    deaa <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    dea7:	48 89 c3             	mov    %rax,%rbx
    deaa:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    deb1:	48 89 c7             	mov    %rax,%rdi
    deb4:	e8 ed a8 ff ff       	call   87a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    deb9:	48 89 d8             	mov    %rbx,%rax
    debc:	48 89 c7             	mov    %rax,%rdi
    debf:	e8 2c 68 ff ff       	call   46f0 <_Unwind_Resume@plt>
    dec4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    decb:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    ded2:	5b                   	pop    %rbx
    ded3:	41 5c                	pop    %r12
    ded5:	5d                   	pop    %rbp
    ded6:	c3                   	ret
    ded7:	90                   	nop

000000000000ded8 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    ded8:	55                   	push   %rbp
    ded9:	48 89 e5             	mov    %rsp,%rbp
    dedc:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    dee0:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    dee4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dee8:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    deec:	48 89 d6             	mov    %rdx,%rsi
    deef:	48 89 c7             	mov    %rax,%rdi
    def2:	e8 d7 fa ff ff       	call   d9ce <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    def7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    defb:	48 8b 40 50          	mov    0x50(%rax),%rax
    deff:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    df03:	ba 00 00 00 00       	mov    $0x0,%edx
    df08:	48 89 ce             	mov    %rcx,%rsi
    df0b:	48 89 c7             	mov    %rax,%rdi
    df0e:	e8 8b 79 ff ff       	call   589e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    df13:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    df17:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    df1b:	90                   	nop
    df1c:	c9                   	leave
    df1d:	c3                   	ret

000000000000df1e <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    df1e:	55                   	push   %rbp
    df1f:	48 89 e5             	mov    %rsp,%rbp
    df22:	53                   	push   %rbx
    df23:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    df2a:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    df31:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df38:	48 8b 50 70          	mov    0x70(%rax),%rdx
    df3c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df43:	48 8b 48 50          	mov    0x50(%rax),%rcx
    df47:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df4b:	48 89 ce             	mov    %rcx,%rsi
    df4e:	48 89 c7             	mov    %rax,%rdi
    df51:	e8 87 9b ff ff       	call   7add <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    df56:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df5d:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    df64:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df68:	48 89 c6             	mov    %rax,%rsi
    df6b:	48 89 d7             	mov    %rdx,%rdi
    df6e:	e8 39 2e 00 00       	call   10dac <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    df73:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df77:	48 89 c7             	mov    %rax,%rdi
    df7a:	e8 ef aa ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    df7f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df86:	48 05 b8 00 00 00    	add    $0xb8,%rax
    df8c:	48 89 c7             	mov    %rax,%rdi
    df8f:	e8 50 2e 00 00       	call   10de4 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    df94:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    df98:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df9f:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    dfa6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dfaa:	48 89 c6             	mov    %rax,%rsi
    dfad:	48 89 d7             	mov    %rdx,%rdi
    dfb0:	e8 53 2e 00 00       	call   10e08 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    dfb5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    dfbc:	00 
    dfbd:	e9 f1 00 00 00       	jmp    e0b3 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    dfc2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dfc6:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    dfcd:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    dfd1:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    dfd5:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    dfd9:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    dfdd:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    dfe4:	00 00 00 
    imageViewInfo.pNext = nullptr;
    dfe7:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    dfee:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    dff2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dff9:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    e000:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e004:	48 89 c6             	mov    %rax,%rsi
    e007:	48 89 d7             	mov    %rdx,%rdi
    e00a:	e8 7f 2e 00 00       	call   10e8e <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    e00f:	48 8b 00             	mov    (%rax),%rax
    e012:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    e016:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    e01d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e024:	8b 40 78             	mov    0x78(%rax),%eax
    e027:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    e02a:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    e031:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    e038:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    e03f:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    e046:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    e04d:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    e054:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    e05b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    e062:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    e069:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e070:	48 8b 40 50          	mov    0x50(%rax),%rax
    e074:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    e07b:	ba 00 00 00 00       	mov    $0x0,%edx
    e080:	48 89 ce             	mov    %rcx,%rsi
    e083:	48 89 c7             	mov    %rax,%rdi
    e086:	e8 b3 78 ff ff       	call   593e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    e08b:	48 89 c3             	mov    %rax,%rbx
    e08e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e095:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    e09c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0a0:	48 89 c6             	mov    %rax,%rsi
    e0a3:	48 89 d7             	mov    %rdx,%rdi
    e0a6:	e8 03 2e 00 00       	call   10eae <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    e0ab:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    e0ae:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    e0b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0b7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    e0bb:	0f 82 01 ff ff ff    	jb     dfc2 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    e0c1:	90                   	nop
    e0c2:	90                   	nop
    e0c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e0c7:	c9                   	leave
    e0c8:	c3                   	ret
    e0c9:	90                   	nop

000000000000e0ca <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    e0ca:	55                   	push   %rbp
    e0cb:	48 89 e5             	mov    %rsp,%rbp
    e0ce:	41 55                	push   %r13
    e0d0:	41 54                	push   %r12
    e0d2:	53                   	push   %rbx
    e0d3:	48 81 ec 28 05 00 00 	sub    $0x528,%rsp
    e0da:	48 89 bd c8 fa ff ff 	mov    %rdi,-0x538(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    e0e1:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    e0e8:	00 00 00 00 
    e0ec:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    e0f3:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    e0f7:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e0fe:	48 89 c7             	mov    %rax,%rdi
    e101:	e8 fa 65 ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    e106:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    e10d:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e114:	48 8d 0d 15 b9 00 00 	lea    0xb915(%rip),%rcx        # 19a30 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    e11b:	48 89 ce             	mov    %rcx,%rsi
    e11e:	48 89 c7             	mov    %rax,%rdi
    e121:	e8 1a 6a ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e126:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e12d:	48 8b 40 50          	mov    0x50(%rax),%rax
    e131:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    e138:	ba 00 00 00 00       	mov    $0x0,%edx
    e13d:	48 89 ce             	mov    %rcx,%rsi
    e140:	48 89 c7             	mov    %rax,%rdi
    e143:	e8 66 79 ff ff       	call   5aae <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e148:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    e14f:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e156:	48 89 c7             	mov    %rax,%rdi
    e159:	e8 82 60 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e15e:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e165:	48 89 c7             	mov    %rax,%rdi
    e168:	e8 b3 62 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
                                                        "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    e16d:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e174:	48 89 c7             	mov    %rax,%rdi
    e177:	e8 84 65 ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    e17c:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    e183:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e18a:	48 8d 0d bf b8 00 00 	lea    0xb8bf(%rip),%rcx        # 19a50 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    e191:	48 89 ce             	mov    %rcx,%rsi
    e194:	48 89 c7             	mov    %rax,%rdi
    e197:	e8 a4 69 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e19c:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e1a3:	48 8b 40 50          	mov    0x50(%rax),%rax
    e1a7:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    e1ae:	ba 00 00 00 00       	mov    $0x0,%edx
    e1b3:	48 89 ce             	mov    %rcx,%rsi
    e1b6:	48 89 c7             	mov    %rax,%rdi
    e1b9:	e8 f0 78 ff ff       	call   5aae <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e1be:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    e1c5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e1cc:	48 89 c7             	mov    %rax,%rdi
    e1cf:	e8 0c 60 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e1d4:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e1db:	48 89 c7             	mov    %rax,%rdi
    e1de:	e8 3d 62 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e1e3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e1e7:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    e1ee:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    e1f5:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    e1fc:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    e203:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e206:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    e20d:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    e210:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e217:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    e21e:	48 8d 05 4b b8 00 00 	lea    0xb84b(%rip),%rax        # 19a70 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e225:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    e22c:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    e233:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e237:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e23b:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e242:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e249:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    e250:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    e257:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e25a:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    e261:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    e264:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e26b:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    e272:	48 8d 05 f7 b7 00 00 	lea    0xb7f7(%rip),%rax        # 19a70 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e279:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    e280:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    e287:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    e28b:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    e292:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    e299:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e2a0:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e2a7:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    e2ae:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    e2b5:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e2bc:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e2c3:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    e2ca:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    e2d1:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e2d8:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e2df:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    e2e6:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    e2ed:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e2f4:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e2fb:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    e302:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    e309:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e310:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e317:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    e31e:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    e325:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e32c:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e333:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e337:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e33e:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e345:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
  vertInputInfo.sType =
    e34c:	c7 85 c0 fd ff ff 13 	movl   $0x13,-0x240(%rbp)
    e353:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 0;
    e356:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%rbp)
    e35d:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = nullptr;
    e360:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
    e367:	00 00 00 00 
  vertInputInfo.vertexAttributeDescriptionCount = 0;
    e36b:	c7 85 e0 fd ff ff 00 	movl   $0x0,-0x220(%rbp)
    e372:	00 00 00 
  vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e375:	48 c7 85 e8 fd ff ff 	movq   $0x0,-0x218(%rbp)
    e37c:	00 00 00 00 

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e380:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e384:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    e38b:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  inputAssemblyInfo.sType =
    e392:	c7 85 a0 fd ff ff 14 	movl   $0x14,-0x260(%rbp)
    e399:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e39c:	c7 85 b4 fd ff ff 03 	movl   $0x3,-0x24c(%rbp)
    e3a3:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e3a6:	c7 85 b8 fd ff ff 00 	movl   $0x0,-0x248(%rbp)
    e3ad:	00 00 00 

  /*  */
  VkViewport viewport{};
    e3b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3b4:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e3bb:	66 0f d6 85 90 fd ff 	movq   %xmm0,-0x270(%rbp)
    e3c2:	ff 
  viewport.x = 0.0f;
    e3c3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3c7:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    e3ce:	ff 
  viewport.y = 0.0f;
    e3cf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3d3:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    e3da:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    e3db:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e3e2:	8b 40 7c             	mov    0x7c(%rax),%eax
    e3e5:	89 c0                	mov    %eax,%eax
    e3e7:	48 85 c0             	test   %rax,%rax
    e3ea:	78 0b                	js     e3f7 <_ZN9VulkanApp22createGraphicsPipelineEv+0x32d>
    e3ec:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3f0:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e3f5:	eb 19                	jmp    e410 <_ZN9VulkanApp22createGraphicsPipelineEv+0x346>
    e3f7:	48 89 c2             	mov    %rax,%rdx
    e3fa:	48 d1 ea             	shr    %rdx
    e3fd:	83 e0 01             	and    $0x1,%eax
    e400:	48 09 c2             	or     %rax,%rdx
    e403:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e407:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e40c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e410:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    e417:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    e418:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e41f:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e425:	89 c0                	mov    %eax,%eax
    e427:	48 85 c0             	test   %rax,%rax
    e42a:	78 0b                	js     e437 <_ZN9VulkanApp22createGraphicsPipelineEv+0x36d>
    e42c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e430:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e435:	eb 19                	jmp    e450 <_ZN9VulkanApp22createGraphicsPipelineEv+0x386>
    e437:	48 89 c2             	mov    %rax,%rdx
    e43a:	48 d1 ea             	shr    %rdx
    e43d:	83 e0 01             	and    $0x1,%eax
    e440:	48 09 c2             	or     %rax,%rdx
    e443:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e447:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e44c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e450:	f3 0f 11 85 8c fd ff 	movss  %xmm0,-0x274(%rbp)
    e457:	ff 
  viewport.minDepth = 0.0f;
    e458:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e45c:	f3 0f 11 85 90 fd ff 	movss  %xmm0,-0x270(%rbp)
    e463:	ff 
  viewport.maxDepth = 1.0f;
    e464:	f3 0f 10 05 24 b9 00 	movss  0xb924(%rip),%xmm0        # 19d90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e46b:	00 
    e46c:	f3 0f 11 85 94 fd ff 	movss  %xmm0,-0x26c(%rbp)
    e473:	ff 

  VkRect2D scissor{};
    e474:	48 c7 85 70 fd ff ff 	movq   $0x0,-0x290(%rbp)
    e47b:	00 00 00 00 
    e47f:	48 c7 85 78 fd ff ff 	movq   $0x0,-0x288(%rbp)
    e486:	00 00 00 00 
  scissor.offset = {0, 0};
    e48a:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
    e491:	00 00 00 
    e494:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
    e49b:	00 00 00 
  scissor.extent = swapchain.extent;
    e49e:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e4a5:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e4a9:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e4b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4b4:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e4bb:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e4c2:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
  viewportStateInfo.sType =
    e4c9:	c7 85 40 fd ff ff 16 	movl   $0x16,-0x2c0(%rbp)
    e4d0:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    e4d3:	c7 85 54 fd ff ff 01 	movl   $0x1,-0x2ac(%rbp)
    e4da:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    e4dd:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    e4e4:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  viewportStateInfo.scissorCount = 1;
    e4eb:	c7 85 60 fd ff ff 01 	movl   $0x1,-0x2a0(%rbp)
    e4f2:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    e4f5:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    e4fc:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e503:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e507:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    e50e:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e515:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e51c:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  rastStateInfo.sType =
    e523:	c7 85 00 fd ff ff 17 	movl   $0x17,-0x300(%rbp)
    e52a:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    e52d:	48 c7 85 08 fd ff ff 	movq   $0x0,-0x2f8(%rbp)
    e534:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    e538:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    e53f:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e542:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    e549:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e54c:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
    e553:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    e556:	f3 0f 10 05 32 b8 00 	movss  0xb832(%rip),%xmm0        # 19d90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e55d:	00 
    e55e:	f3 0f 11 85 38 fd ff 	movss  %xmm0,-0x2c8(%rbp)
    e565:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e566:	c7 85 20 fd ff ff 02 	movl   $0x2,-0x2e0(%rbp)
    e56d:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e570:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e577:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    e57a:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e581:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    e584:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e588:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e58f:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    e590:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e594:	f3 0f 11 85 30 fd ff 	movss  %xmm0,-0x2d0(%rbp)
    e59b:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e59c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5a0:	f3 0f 11 85 34 fd ff 	movss  %xmm0,-0x2cc(%rbp)
    e5a7:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e5a8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5ac:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    e5b3:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e5ba:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
  multisampleStateInfo.sType =
    e5c1:	c7 85 d0 fc ff ff 18 	movl   $0x18,-0x330(%rbp)
    e5c8:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e5cb:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    e5d2:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e5d5:	c7 85 e4 fc ff ff 01 	movl   $0x1,-0x31c(%rbp)
    e5dc:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    e5df:	f3 0f 10 05 a9 b7 00 	movss  0xb7a9(%rip),%xmm0        # 19d90 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e5e6:	00 
    e5e7:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    e5ee:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    e5ef:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
    e5f6:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e5fa:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    e601:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e604:	c7 85 fc fc ff ff 00 	movl   $0x0,-0x304(%rbp)
    e60b:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e60e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e612:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e619:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  colorBlendAttachment.colorWriteMask =
    e620:	c7 85 cc fc ff ff 0f 	movl   $0xf,-0x334(%rbp)
    e627:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    e62a:	c7 85 b0 fc ff ff 01 	movl   $0x1,-0x350(%rbp)
    e631:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    e634:	c7 85 b4 fc ff ff 06 	movl   $0x6,-0x34c(%rbp)
    e63b:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    e63e:	c7 85 b8 fc ff ff 07 	movl   $0x7,-0x348(%rbp)
    e645:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    e648:	c7 85 bc fc ff ff 00 	movl   $0x0,-0x344(%rbp)
    e64f:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    e652:	c7 85 c0 fc ff ff 01 	movl   $0x1,-0x340(%rbp)
    e659:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    e65c:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    e663:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    e666:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    e66d:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    e670:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e674:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    e67b:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    e682:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    e689:	66 0f d6 85 a0 fc ff 	movq   %xmm0,-0x360(%rbp)
    e690:	ff 
  colorBlendState.sType =
    e691:	c7 85 70 fc ff ff 1a 	movl   $0x1a,-0x390(%rbp)
    e698:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    e69b:	c7 85 84 fc ff ff 00 	movl   $0x0,-0x37c(%rbp)
    e6a2:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    e6a5:	c7 85 88 fc ff ff 03 	movl   $0x3,-0x378(%rbp)
    e6ac:	00 00 00 
  colorBlendState.attachmentCount = 1;
    e6af:	c7 85 8c fc ff ff 01 	movl   $0x1,-0x374(%rbp)
    e6b6:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    e6b9:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    e6c0:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    e6c7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6cb:	f3 0f 11 85 98 fc ff 	movss  %xmm0,-0x368(%rbp)
    e6d2:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    e6d3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6d7:	f3 0f 11 85 9c fc ff 	movss  %xmm0,-0x364(%rbp)
    e6de:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    e6df:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6e3:	f3 0f 11 85 a0 fc ff 	movss  %xmm0,-0x360(%rbp)
    e6ea:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    e6eb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6ef:	f3 0f 11 85 a4 fc ff 	movss  %xmm0,-0x35c(%rbp)
    e6f6:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    e6f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6fb:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    e702:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    e709:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    e710:	c7 85 40 fc ff ff 1e 	movl   $0x1e,-0x3c0(%rbp)
    e717:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    e71a:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    e721:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    e724:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
    e72b:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    e72f:	c7 85 60 fc ff ff 00 	movl   $0x0,-0x3a0(%rbp)
    e736:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    e739:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    e740:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    e744:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e74b:	48 8b 40 50          	mov    0x50(%rax),%rax
    e74f:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
    e756:	ba 00 00 00 00       	mov    $0x0,%edx
    e75b:	48 89 ce             	mov    %rcx,%rsi
    e75e:	48 89 c7             	mov    %rax,%rdi
    e761:	e8 80 75 ff ff       	call   5ce6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    e766:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    e76d:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    e774:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e778:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    e77f:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    e786:	66 0f 7e 85 30 fc ff 	movd   %xmm0,-0x3d0(%rbp)
    e78d:	ff 
  colorAttachment.format = swapchain.format;
    e78e:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e795:	8b 40 78             	mov    0x78(%rax),%eax
    e798:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    e79e:	c7 85 18 fc ff ff 01 	movl   $0x1,-0x3e8(%rbp)
    e7a5:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    e7a8:	c7 85 1c fc ff ff 01 	movl   $0x1,-0x3e4(%rbp)
    e7af:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    e7b2:	c7 85 20 fc ff ff 00 	movl   $0x0,-0x3e0(%rbp)
    e7b9:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    e7bc:	c7 85 24 fc ff ff 02 	movl   $0x2,-0x3dc(%rbp)
    e7c3:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    e7c6:	c7 85 28 fc ff ff 01 	movl   $0x1,-0x3d8(%rbp)
    e7cd:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    e7d0:	c7 85 2c fc ff ff 00 	movl   $0x0,-0x3d4(%rbp)
    e7d7:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    e7da:	c7 85 30 fc ff ff ea 	movl   $0x3b9acdea,-0x3d0(%rbp)
    e7e1:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    e7e4:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
    e7eb:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    e7ef:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    e7f6:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    e7f9:	c7 85 0c fc ff ff 02 	movl   $0x2,-0x3f4(%rbp)
    e800:	00 00 00 

  VkSubpassDescription subpass{};
    e803:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e807:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    e80e:	0f 29 85 d0 fb ff ff 	movaps %xmm0,-0x430(%rbp)
    e815:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    e81c:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    e823:	66 0f d6 85 00 fc ff 	movq   %xmm0,-0x400(%rbp)
    e82a:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    e82b:	c7 85 c4 fb ff ff 00 	movl   $0x0,-0x43c(%rbp)
    e832:	00 00 00 
  subpass.colorAttachmentCount = 1;
    e835:	c7 85 d8 fb ff ff 01 	movl   $0x1,-0x428(%rbp)
    e83c:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    e83f:	48 8d 85 08 fc ff ff 	lea    -0x3f8(%rbp),%rax
    e846:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)

  VkRenderPassCreateInfo renderPassInfo{};
    e84d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e851:	0f 29 85 80 fb ff ff 	movaps %xmm0,-0x480(%rbp)
    e858:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
    e85f:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    e866:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    e86d:	c7 85 80 fb ff ff 26 	movl   $0x26,-0x480(%rbp)
    e874:	00 00 00 
  renderPassInfo.pNext = nullptr;
    e877:	48 c7 85 88 fb ff ff 	movq   $0x0,-0x478(%rbp)
    e87e:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    e882:	c7 85 94 fb ff ff 01 	movl   $0x1,-0x46c(%rbp)
    e889:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    e88c:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    e893:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  renderPassInfo.subpassCount = 1;
    e89a:	c7 85 a0 fb ff ff 01 	movl   $0x1,-0x460(%rbp)
    e8a1:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    e8a4:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
    e8ab:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    e8b2:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e8b9:	48 8b 40 50          	mov    0x50(%rax),%rax
    e8bd:	48 8d 8d 80 fb ff ff 	lea    -0x480(%rbp),%rcx
    e8c4:	ba 00 00 00 00       	mov    $0x0,%edx
    e8c9:	48 89 ce             	mov    %rcx,%rsi
    e8cc:	48 89 c7             	mov    %rax,%rdi
    e8cf:	e8 aa 74 ff ff       	call   5d7e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    e8d4:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    e8db:	48 89 82 e8 00 00 00 	mov    %rax,0xe8(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    e8e2:	48 8d 95 f0 fa ff ff 	lea    -0x510(%rbp),%rdx
    e8e9:	b8 00 00 00 00       	mov    $0x0,%eax
    e8ee:	b9 12 00 00 00       	mov    $0x12,%ecx
    e8f3:	48 89 d7             	mov    %rdx,%rdi
    e8f6:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    e8f9:	c7 85 f0 fa ff ff 1c 	movl   $0x1c,-0x510(%rbp)
    e900:	00 00 00 
  pipelineInfo.pNext = nullptr;
    e903:	48 c7 85 f8 fa ff ff 	movq   $0x0,-0x508(%rbp)
    e90a:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    e90e:	c7 85 04 fb ff ff 02 	movl   $0x2,-0x4fc(%rbp)
    e915:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    e918:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    e91f:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    e926:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    e92d:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    e934:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    e93b:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    e942:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    e949:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    e950:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    e957:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    e95e:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    e965:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    e96c:	48 c7 85 40 fb ff ff 	movq   $0x0,-0x4c0(%rbp)
    e973:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    e977:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    e97e:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    e985:	48 c7 85 50 fb ff ff 	movq   $0x0,-0x4b0(%rbp)
    e98c:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    e990:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e997:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
    e99e:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    e9a5:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e9ac:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
    e9b3:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  pipelineInfo.subpass = 0;
    e9ba:	c7 85 68 fb ff ff 00 	movl   $0x0,-0x498(%rbp)
    e9c1:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    e9c4:	48 c7 85 70 fb ff ff 	movq   $0x0,-0x490(%rbp)
    e9cb:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    e9cf:	c7 85 78 fb ff ff ff 	movl   $0xffffffff,-0x488(%rbp)
    e9d6:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    e9d9:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    e9e0:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    e9e7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    e9ee:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    e9f5:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    e9fc:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    ea03:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    ea0a:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    ea11:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    ea18:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    ea1f:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    ea26:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    ea2d:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    ea34:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    ea3b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    ea42:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    ea49:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    ea50:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
    ea57:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    ea5e:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    ea65:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
    ea6c:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
    ea73:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    ea7a:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    ea81:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    ea88:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    ea8f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    ea93:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    ea97:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
    ea9e:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
    eaa5:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    eaa9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    eaad:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
    eab4:	48 8b 95 78 fb ff ff 	mov    -0x488(%rbp),%rdx
    eabb:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    eabf:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    eac3:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    eaca:	49 89 c4             	mov    %rax,%r12
    eacd:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ead3:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ead7:	48 89 c7             	mov    %rax,%rdi
    eada:	e8 ef 23 00 00       	call   10ece <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    eadf:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    eae3:	4c 89 e6             	mov    %r12,%rsi
    eae6:	4c 89 ef             	mov    %r13,%rdi
    eae9:	4c 89 e1             	mov    %r12,%rcx
    eaec:	4c 89 eb             	mov    %r13,%rbx
    eaef:	48 89 df             	mov    %rbx,%rdi
    eaf2:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    eaf9:	48 89 d1             	mov    %rdx,%rcx
    eafc:	48 89 fa             	mov    %rdi,%rdx
    eaff:	48 89 c7             	mov    %rax,%rdi
    eb02:	e8 ff 23 00 00       	call   10f06 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    eb07:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    eb0b:	48 89 c7             	mov    %rax,%rdi
    eb0e:	e8 d7 23 00 00       	call   10eea <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    eb13:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb1a:	48 8b 90 e0 00 00 00 	mov    0xe0(%rax),%rdx
    eb21:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb28:	48 8b 70 50          	mov    0x50(%rax),%rsi
    eb2c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb30:	48 8d 8d d0 fa ff ff 	lea    -0x530(%rbp),%rcx
    eb37:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    eb3d:	48 89 c7             	mov    %rax,%rdi
    eb40:	e8 a8 24 00 00       	call   10fed <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
    eb45:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb49:	be 00 00 00 00       	mov    $0x0,%esi
    eb4e:	48 89 c7             	mov    %rax,%rdi
    eb51:	e8 08 26 00 00       	call   1115e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    eb56:	48 8b 10             	mov    (%rax),%rdx
    eb59:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb60:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
    eb67:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eb6b:	48 89 c7             	mov    %rax,%rdi
    eb6e:	e8 a7 25 00 00       	call   1111a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    eb73:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    eb7a:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eb81:	48 8b 40 50          	mov    0x50(%rax),%rax
    eb85:	ba 00 00 00 00       	mov    $0x0,%edx
    eb8a:	48 89 ce             	mov    %rcx,%rsi
    eb8d:	48 89 c7             	mov    %rax,%rdi
    eb90:	e8 b9 7d ff ff       	call   694e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    eb95:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    eb9c:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eba3:	48 8b 40 50          	mov    0x50(%rax),%rax
    eba7:	ba 00 00 00 00       	mov    $0x0,%edx
    ebac:	48 89 ce             	mov    %rcx,%rsi
    ebaf:	48 89 c7             	mov    %rax,%rdi
    ebb2:	e8 97 7d ff ff       	call   694e <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    ebb7:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ebbe:	48 89 c7             	mov    %rax,%rdi
    ebc1:	e8 c8 23 00 00       	call   10f8e <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    ebc6:	e9 99 00 00 00       	jmp    ec64 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb9a>
  shaderModule.vertex = vkh::createShaderModule(device, "build/shaders/"
    ebcb:	48 89 c3             	mov    %rax,%rbx
    ebce:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    ebd5:	48 89 c7             	mov    %rax,%rdi
    ebd8:	e8 03 56 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ebdd:	eb 03                	jmp    ebe2 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb18>
    ebdf:	48 89 c3             	mov    %rax,%rbx
    ebe2:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    ebe9:	48 89 c7             	mov    %rax,%rdi
    ebec:	e8 2f 58 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    ebf1:	48 89 d8             	mov    %rbx,%rax
    ebf4:	48 89 c7             	mov    %rax,%rdi
    ebf7:	e8 f4 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(device, "build/shaders/"
    ebfc:	48 89 c3             	mov    %rax,%rbx
    ebff:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    ec06:	48 89 c7             	mov    %rax,%rdi
    ec09:	e8 d2 55 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ec0e:	eb 03                	jmp    ec13 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb49>
    ec10:	48 89 c3             	mov    %rax,%rbx
    ec13:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    ec1a:	48 89 c7             	mov    %rax,%rdi
    ec1d:	e8 fe 57 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    ec22:	48 89 d8             	mov    %rbx,%rax
    ec25:	48 89 c7             	mov    %rax,%rdi
    ec28:	e8 c3 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    ec2d:	48 89 c3             	mov    %rax,%rbx
    ec30:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ec34:	48 89 c7             	mov    %rax,%rdi
    ec37:	e8 ae 22 00 00       	call   10eea <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    ec3c:	48 89 d8             	mov    %rbx,%rax
    ec3f:	48 89 c7             	mov    %rax,%rdi
    ec42:	e8 a9 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
}
    ec47:	48 89 c3             	mov    %rax,%rbx
    ec4a:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ec51:	48 89 c7             	mov    %rax,%rdi
    ec54:	e8 35 23 00 00       	call   10f8e <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    ec59:	48 89 d8             	mov    %rbx,%rax
    ec5c:	48 89 c7             	mov    %rax,%rdi
    ec5f:	e8 8c 5a ff ff       	call   46f0 <_Unwind_Resume@plt>
    ec64:	48 81 c4 28 05 00 00 	add    $0x528,%rsp
    ec6b:	5b                   	pop    %rbx
    ec6c:	41 5c                	pop    %r12
    ec6e:	41 5d                	pop    %r13
    ec70:	5d                   	pop    %rbp
    ec71:	c3                   	ret

000000000000ec72 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    ec72:	55                   	push   %rbp
    ec73:	48 89 e5             	mov    %rsp,%rbp
    ec76:	48 83 ec 30          	sub    $0x30,%rsp
    ec7a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    ec7e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ec82:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    ec86:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    ec8b:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    ec92:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ec99:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    ec9a:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    eca1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eca5:	8b 40 68             	mov    0x68(%rax),%eax
    eca8:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    ecab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ecaf:	48 8b 40 50          	mov    0x50(%rax),%rax
    ecb3:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    ecb7:	ba 00 00 00 00       	mov    $0x0,%edx
    ecbc:	48 89 ce             	mov    %rcx,%rsi
    ecbf:	48 89 c7             	mov    %rax,%rdi
    ecc2:	e8 e7 71 ff ff       	call   5eae <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    ecc7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    eccb:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)
}
    ecd2:	90                   	nop
    ecd3:	c9                   	leave
    ecd4:	c3                   	ret
    ecd5:	90                   	nop

000000000000ecd6 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    ecd6:	55                   	push   %rbp
    ecd7:	48 89 e5             	mov    %rsp,%rbp
    ecda:	41 57                	push   %r15
    ecdc:	41 56                	push   %r14
    ecde:	41 55                	push   %r13
    ece0:	41 54                	push   %r12
    ece2:	53                   	push   %rbx
    ece3:	48 83 ec 38          	sub    $0x38,%rsp
    ece7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    eceb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ecef:	48 8d 58 10          	lea    0x10(%rax),%rbx
    ecf3:	48 8d 05 7b ad 00 00 	lea    0xad7b(%rip),%rax        # 19a75 <_ZN6__pstl9execution2v1L5unseqE+0x146>
    ecfa:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ecfe:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ed02:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ed06:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    ed0d:	00 
    ed0e:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ed12:	48 89 c7             	mov    %rax,%rdi
    ed15:	e8 12 93 ff ff       	call   802c <_ZNSaIPKcEC1Ev>
    ed1a:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ed1e:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    ed22:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    ed26:	49 89 f0             	mov    %rsi,%r8
    ed29:	49 89 f9             	mov    %rdi,%r9
    ed2c:	48 89 fa             	mov    %rdi,%rdx
    ed2f:	48 89 c1             	mov    %rax,%rcx
    ed32:	4c 89 c6             	mov    %r8,%rsi
    ed35:	48 89 df             	mov    %rbx,%rdi
    ed38:	e8 63 17 00 00       	call   104a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ed3d:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ed41:	48 89 c7             	mov    %rax,%rdi
    ed44:	e8 ff 92 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    ed49:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed4d:	48 8d 58 28          	lea    0x28(%rax),%rbx
    ed51:	4c 8d 35 88 6f 01 00 	lea    0x16f88(%rip),%r14        # 25ce0 <C.84.0>
    ed58:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    ed5e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ed62:	48 89 c7             	mov    %rax,%rdi
    ed65:	e8 c2 92 ff ff       	call   802c <_ZNSaIPKcEC1Ev>
    ed6a:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ed6e:	4d 89 f0             	mov    %r14,%r8
    ed71:	4d 89 f9             	mov    %r15,%r9
    ed74:	4c 89 f6             	mov    %r14,%rsi
    ed77:	4c 89 ff             	mov    %r15,%rdi
    ed7a:	48 89 fa             	mov    %rdi,%rdx
    ed7d:	48 89 c1             	mov    %rax,%rcx
    ed80:	4c 89 c6             	mov    %r8,%rsi
    ed83:	48 89 df             	mov    %rbx,%rdi
    ed86:	e8 15 17 00 00       	call   104a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ed8b:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ed8f:	48 89 c7             	mov    %rax,%rdi
    ed92:	e8 b1 92 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    ed97:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed9b:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    eda2:	4c 8d 25 47 6f 01 00 	lea    0x16f47(%rip),%r12        # 25cf0 <C.85.1>
    eda9:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    edaf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    edb3:	48 89 c7             	mov    %rax,%rdi
    edb6:	e8 71 92 ff ff       	call   802c <_ZNSaIPKcEC1Ev>
    edbb:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    edbf:	4d 89 e0             	mov    %r12,%r8
    edc2:	4d 89 e9             	mov    %r13,%r9
    edc5:	4c 89 e6             	mov    %r12,%rsi
    edc8:	4c 89 ef             	mov    %r13,%rdi
    edcb:	48 89 fa             	mov    %rdi,%rdx
    edce:	48 89 c1             	mov    %rax,%rcx
    edd1:	4c 89 c6             	mov    %r8,%rsi
    edd4:	48 89 df             	mov    %rbx,%rdi
    edd7:	e8 c4 16 00 00       	call   104a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    eddc:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ede0:	48 89 c7             	mov    %rax,%rdi
    ede3:	e8 60 92 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    ede8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    edec:	48 05 a0 00 00 00    	add    $0xa0,%rax
    edf2:	48 89 c7             	mov    %rax,%rdi
    edf5:	e8 c8 15 00 00       	call   103c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    edfa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    edfe:	48 05 b8 00 00 00    	add    $0xb8,%rax
    ee04:	48 89 c7             	mov    %rax,%rdi
    ee07:	e8 ee 15 00 00       	call   103fa <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    ee0c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee10:	48 05 d0 00 00 00    	add    $0xd0,%rax
    ee16:	48 89 c7             	mov    %rax,%rdi
    ee19:	e8 f8 15 00 00       	call   10416 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
  createWindow();
    ee1e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee22:	48 89 c7             	mov    %rax,%rdi
    ee25:	e8 8c df ff ff       	call   cdb6 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    ee2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee2e:	48 89 c7             	mov    %rax,%rdi
    ee31:	e8 c0 df ff ff       	call   cdf6 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    ee36:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee3a:	48 89 c7             	mov    %rax,%rdi
    ee3d:	e8 9a e1 ff ff       	call   cfdc <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    ee42:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee46:	48 89 c7             	mov    %rax,%rdi
    ee49:	e8 22 e2 ff ff       	call   d070 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    ee4e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee52:	48 89 c7             	mov    %rax,%rdi
    ee55:	e8 6e e4 ff ff       	call   d2c8 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    ee5a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee5e:	48 89 c7             	mov    %rax,%rdi
    ee61:	e8 72 f0 ff ff       	call   ded8 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    ee66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee6a:	48 89 c7             	mov    %rax,%rdi
    ee6d:	e8 ac f0 ff ff       	call   df1e <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    ee72:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee76:	48 89 c7             	mov    %rax,%rdi
    ee79:	e8 4c f2 ff ff       	call   e0ca <_ZN9VulkanApp22createGraphicsPipelineEv>

  createCommandPool();
    ee7e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee82:	48 89 c7             	mov    %rax,%rdi
    ee85:	e8 e8 fd ff ff       	call   ec72 <_ZN9VulkanApp17createCommandPoolEv>
}
    ee8a:	e9 a0 00 00 00       	jmp    ef2f <_ZN9VulkanAppC1Ev+0x259>
VulkanApp::VulkanApp() {
    ee8f:	48 89 c3             	mov    %rax,%rbx
    ee92:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ee96:	48 89 c7             	mov    %rax,%rdi
    ee99:	e8 aa 91 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    ee9e:	48 89 d8             	mov    %rbx,%rax
    eea1:	48 89 c7             	mov    %rax,%rdi
    eea4:	e8 47 58 ff ff       	call   46f0 <_Unwind_Resume@plt>
    eea9:	48 89 c3             	mov    %rax,%rbx
    eeac:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    eeb0:	48 89 c7             	mov    %rax,%rdi
    eeb3:	e8 90 91 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    eeb8:	eb 5a                	jmp    ef14 <_ZN9VulkanAppC1Ev+0x23e>
    eeba:	48 89 c3             	mov    %rax,%rbx
    eebd:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    eec1:	48 89 c7             	mov    %rax,%rdi
    eec4:	e8 7f 91 ff ff       	call   8048 <_ZNSaIPKcED1Ev>
    eec9:	eb 39                	jmp    ef04 <_ZN9VulkanAppC1Ev+0x22e>
}
    eecb:	48 89 c3             	mov    %rax,%rbx
    eece:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eed2:	48 05 b8 00 00 00    	add    $0xb8,%rax
    eed8:	48 89 c7             	mov    %rax,%rdi
    eedb:	e8 8e 9b ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    eee0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eee4:	48 05 a0 00 00 00    	add    $0xa0,%rax
    eeea:	48 89 c7             	mov    %rax,%rdi
    eeed:	e8 1e 23 00 00       	call   11210 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    eef2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eef6:	48 05 88 00 00 00    	add    $0x88,%rax
    eefc:	48 89 c7             	mov    %rax,%rdi
    eeff:	e8 24 16 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    ef04:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef08:	48 83 c0 28          	add    $0x28,%rax
}
    ef0c:	48 89 c7             	mov    %rax,%rdi
    ef0f:	e8 14 16 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ef14:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef18:	48 83 c0 10          	add    $0x10,%rax
    ef1c:	48 89 c7             	mov    %rax,%rdi
    ef1f:	e8 04 16 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ef24:	48 89 d8             	mov    %rbx,%rax
    ef27:	48 89 c7             	mov    %rax,%rdi
    ef2a:	e8 c1 57 ff ff       	call   46f0 <_Unwind_Resume@plt>
    ef2f:	48 83 c4 38          	add    $0x38,%rsp
    ef33:	5b                   	pop    %rbx
    ef34:	41 5c                	pop    %r12
    ef36:	41 5d                	pop    %r13
    ef38:	41 5e                	pop    %r14
    ef3a:	41 5f                	pop    %r15
    ef3c:	5d                   	pop    %rbp
    ef3d:	c3                   	ret

000000000000ef3e <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    ef3e:	55                   	push   %rbp
    ef3f:	48 89 e5             	mov    %rsp,%rbp
    ef42:	48 83 ec 30          	sub    $0x30,%rsp
    ef46:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    ef4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef4e:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    ef55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef59:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef5d:	ba 00 00 00 00       	mov    $0x0,%edx
    ef62:	48 89 ce             	mov    %rcx,%rsi
    ef65:	48 89 c7             	mov    %rax,%rdi
    ef68:	e8 56 7b ff ff       	call   6ac3 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>

  vkh::destroyPipeline(device, graphicsPipeline.self);
    ef6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef71:	48 8b 88 d0 00 00 00 	mov    0xd0(%rax),%rcx
    ef78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef7c:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef80:	ba 00 00 00 00       	mov    $0x0,%edx
    ef85:	48 89 ce             	mov    %rcx,%rsi
    ef88:	48 89 c7             	mov    %rax,%rdi
    ef8b:	e8 48 7a ff ff       	call   69d8 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    ef90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef94:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    ef9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef9f:	48 8b 40 50          	mov    0x50(%rax),%rax
    efa3:	ba 00 00 00 00       	mov    $0x0,%edx
    efa8:	48 89 ce             	mov    %rcx,%rsi
    efab:	48 89 c7             	mov    %rax,%rdi
    efae:	e8 c9 79 ff ff       	call   697c <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    efb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efb7:	48 8b 88 e8 00 00 00 	mov    0xe8(%rax),%rcx
    efbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efc2:	48 8b 40 50          	mov    0x50(%rax),%rax
    efc6:	ba 00 00 00 00       	mov    $0x0,%edx
    efcb:	48 89 ce             	mov    %rcx,%rsi
    efce:	48 89 c7             	mov    %rax,%rdi
    efd1:	e8 d4 79 ff ff       	call   69aa <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    efd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efda:	48 05 a0 00 00 00    	add    $0xa0,%rax
    efe0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    efe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efe8:	48 89 c7             	mov    %rax,%rdi
    efeb:	e8 8c 22 00 00       	call   1127c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    eff0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    eff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eff8:	48 89 c7             	mov    %rax,%rdi
    effb:	e8 a2 22 00 00       	call   112a2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    f000:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f004:	eb 3b                	jmp    f041 <_ZN9VulkanAppD1Ev+0x103>
    f006:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f00a:	48 89 c7             	mov    %rax,%rdi
    f00d:	e8 14 23 00 00       	call   11326 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    f012:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkh::destroyImageView(device, imageView);
    f016:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f01a:	48 8b 08             	mov    (%rax),%rcx
    f01d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f021:	48 8b 40 50          	mov    0x50(%rax),%rax
    f025:	ba 00 00 00 00       	mov    $0x0,%edx
    f02a:	48 89 ce             	mov    %rcx,%rsi
    f02d:	48 89 c7             	mov    %rax,%rdi
    f030:	e8 eb 78 ff ff       	call   6920 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    f035:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f039:	48 89 c7             	mov    %rax,%rdi
    f03c:	e8 c5 22 00 00       	call   11306 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    f041:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    f045:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f049:	48 89 d6             	mov    %rdx,%rsi
    f04c:	48 89 c7             	mov    %rax,%rdi
    f04f:	e8 77 22 00 00       	call   112cb <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f054:	84 c0                	test   %al,%al
    f056:	75 ae                	jne    f006 <_ZN9VulkanAppD1Ev+0xc8>
  }
  vkh::destroySwapchain(device, swapchain.self);
    f058:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f05c:	48 8b 48 70          	mov    0x70(%rax),%rcx
    f060:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f064:	48 8b 40 50          	mov    0x50(%rax),%rax
    f068:	ba 00 00 00 00       	mov    $0x0,%edx
    f06d:	48 89 ce             	mov    %rcx,%rsi
    f070:	48 89 c7             	mov    %rax,%rdi
    f073:	e8 7a 78 ff ff       	call   68f2 <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    f078:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f07c:	48 8b 40 50          	mov    0x50(%rax),%rax
    f080:	be 00 00 00 00       	mov    $0x0,%esi
    f085:	48 89 c7             	mov    %rax,%rdi
    f088:	e8 11 78 ff ff       	call   689e <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    f08d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f091:	48 8b 48 40          	mov    0x40(%rax),%rcx
    f095:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f099:	48 8b 40 08          	mov    0x8(%rax),%rax
    f09d:	ba 00 00 00 00       	mov    $0x0,%edx
    f0a2:	48 89 ce             	mov    %rcx,%rsi
    f0a5:	48 89 c7             	mov    %rax,%rdi
    f0a8:	e8 a0 d8 ff ff       	call   c94d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    f0ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0b1:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f0b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0b9:	48 8b 40 08          	mov    0x8(%rax),%rax
    f0bd:	ba 00 00 00 00       	mov    $0x0,%edx
    f0c2:	48 89 ce             	mov    %rcx,%rsi
    f0c5:	48 89 c7             	mov    %rax,%rdi
    f0c8:	e8 f7 77 ff ff       	call   68c4 <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    f0cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0d1:	48 8b 40 08          	mov    0x8(%rax),%rax
    f0d5:	be 00 00 00 00       	mov    $0x0,%esi
    f0da:	48 89 c7             	mov    %rax,%rdi
    f0dd:	e8 96 77 ff ff       	call   6878 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    f0e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0e6:	48 8b 00             	mov    (%rax),%rax
    f0e9:	48 89 c7             	mov    %rax,%rdi
    f0ec:	e8 6c 77 ff ff       	call   685d <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    f0f1:	e8 ba 52 ff ff       	call   43b0 <glfwTerminate@plt>
}
    f0f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0fa:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f100:	48 89 c7             	mov    %rax,%rdi
    f103:	e8 66 99 ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    f108:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f10c:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f112:	48 89 c7             	mov    %rax,%rdi
    f115:	e8 f6 20 00 00       	call   11210 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f11a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f11e:	48 05 88 00 00 00    	add    $0x88,%rax
    f124:	48 89 c7             	mov    %rax,%rdi
    f127:	e8 fc 13 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    f12c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f130:	48 83 c0 28          	add    $0x28,%rax
}
    f134:	48 89 c7             	mov    %rax,%rdi
    f137:	e8 ec 13 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f13c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f140:	48 83 c0 10          	add    $0x10,%rax
    f144:	48 89 c7             	mov    %rax,%rdi
    f147:	e8 dc 13 00 00       	call   10528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f14c:	90                   	nop
    f14d:	c9                   	leave
    f14e:	c3                   	ret
    f14f:	90                   	nop

000000000000f150 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    f150:	55                   	push   %rbp
    f151:	48 89 e5             	mov    %rsp,%rbp
    f154:	53                   	push   %rbx
    f155:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    f15c:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    f163:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f167:	48 89 c7             	mov    %rax,%rdi
    f16a:	e8 c9 21 00 00       	call   11338 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    f16f:	f2 0f 10 05 21 ac 00 	movsd  0xac21(%rip),%xmm0        # 19d98 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f176:	00 
    f177:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    f17c:	e9 a1 00 00 00       	jmp    f222 <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    f181:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f185:	48 89 c7             	mov    %rax,%rdi
    f188:	e8 ab 21 00 00       	call   11338 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    f18d:	e8 be 51 ff ff       	call   4350 <glfwPollEvents@plt>

    // for (int i = 0; i < 1'000'000; ++i) {
    // }

    double current = static_cast<double>(time_total.current());
    f192:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f196:	48 89 c7             	mov    %rax,%rdi
    f199:	e8 b2 12 00 00       	call   10450 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f19e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f1a2:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f1a7:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    f1ac:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    f1b1:	66 0f 2f 05 df ab 00 	comisd 0xabdf(%rip),%xmm0        # 19d98 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f1b8:	00 
    f1b9:	72 5b                	jb     f216 <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    f1bb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f1bf:	48 89 c7             	mov    %rax,%rdi
    f1c2:	e8 89 12 00 00       	call   10450 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f1c7:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f1cb:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f1d0:	f2 0f 10 05 c0 ab 00 	movsd  0xabc0(%rip),%xmm0        # 19d98 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f1d7:	00 
    f1d8:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    f1dc:	66 48 0f 7e c0       	movq   %xmm0,%rax
    f1e1:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f1e6:	48 8d 05 13 72 01 00 	lea    0x17213(%rip),%rax        # 26400 <_ZSt4cout@GLIBCXX_3.4>
    f1ed:	48 89 c7             	mov    %rax,%rdi
    f1f0:	e8 5b 55 ff ff       	call   4750 <_ZNSolsEd@plt>
    f1f5:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    f1f8:	48 8d 05 89 a8 00 00 	lea    0xa889(%rip),%rax        # 19a88 <_ZN6__pstl9execution2v1L5unseqE+0x159>
    f1ff:	48 89 c6             	mov    %rax,%rsi
    f202:	48 89 d7             	mov    %rdx,%rdi
    f205:	e8 66 51 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    f20a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f20e:	48 89 c7             	mov    %rax,%rdi
    f211:	e8 32 22 00 00       	call   11448 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    f216:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f21a:	48 89 c7             	mov    %rax,%rdi
    f21d:	e8 8c 21 00 00       	call   113ae <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    f222:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f229:	48 8b 00             	mov    (%rax),%rax
    f22c:	48 89 c7             	mov    %rax,%rdi
    f22f:	e8 0c 55 ff ff       	call   4740 <glfwWindowShouldClose@plt>
    f234:	85 c0                	test   %eax,%eax
    f236:	0f 94 c0             	sete   %al
    f239:	84 c0                	test   %al,%al
    f23b:	0f 85 40 ff ff ff    	jne    f181 <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    f241:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f248:	48 8b 40 50          	mov    0x50(%rax),%rax
    f24c:	48 89 c7             	mov    %rax,%rdi
    f24f:	e8 4c 4e ff ff       	call   40a0 <vkDeviceWaitIdle@plt>
}
    f254:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f258:	48 89 c7             	mov    %rax,%rdi
    f25b:	e8 4e 21 00 00       	call   113ae <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f260:	eb 2b                	jmp    f28d <_ZN9VulkanApp3runEv+0x13d>
  }
    f262:	48 89 c3             	mov    %rax,%rbx
    f265:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f269:	48 89 c7             	mov    %rax,%rdi
    f26c:	e8 3d 21 00 00       	call   113ae <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f271:	eb 03                	jmp    f276 <_ZN9VulkanApp3runEv+0x126>
}
    f273:	48 89 c3             	mov    %rax,%rbx
    f276:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f27a:	48 89 c7             	mov    %rax,%rdi
    f27d:	e8 2c 21 00 00       	call   113ae <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f282:	48 89 d8             	mov    %rbx,%rax
    f285:	48 89 c7             	mov    %rax,%rdi
    f288:	e8 63 54 ff ff       	call   46f0 <_Unwind_Resume@plt>
    f28d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f291:	c9                   	leave
    f292:	c3                   	ret
    f293:	90                   	nop

000000000000f294 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    f294:	55                   	push   %rbp
    f295:	48 89 e5             	mov    %rsp,%rbp
    f298:	41 54                	push   %r12
    f29a:	53                   	push   %rbx
    f29b:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    f2a2:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    f2a9:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    f2b0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2b7:	48 89 c7             	mov    %rax,%rdi
    f2ba:	e8 e1 51 ff ff       	call   44a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    f2bf:	be 10 00 00 00       	mov    $0x10,%esi
    f2c4:	bf 08 00 00 00       	mov    $0x8,%edi
    f2c9:	e8 80 6c ff ff       	call   5f4e <_ZStorSt13_Ios_OpenmodeS_>
    f2ce:	89 c2                	mov    %eax,%edx
    f2d0:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    f2d7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2de:	48 89 ce             	mov    %rcx,%rsi
    f2e1:	48 89 c7             	mov    %rax,%rdi
    f2e4:	e8 97 52 ff ff       	call   4580 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    f2e9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2f0:	48 89 c7             	mov    %rax,%rdi
    f2f3:	e8 b8 53 ff ff       	call   46b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    f2f8:	83 f0 01             	xor    $0x1,%eax
    f2fb:	84 c0                	test   %al,%al
    f2fd:	0f 84 97 00 00 00    	je     f39a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    f303:	bf 10 00 00 00       	mov    $0x10,%edi
    f308:	e8 63 4e ff ff       	call   4170 <__cxa_allocate_exception@plt>
    f30d:	48 89 c3             	mov    %rax,%rbx
    f310:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f317:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    f31e:	48 8d 0d 69 a7 00 00 	lea    0xa769(%rip),%rcx        # 19a8e <_ZN6__pstl9execution2v1L5unseqE+0x15f>
    f325:	48 89 ce             	mov    %rcx,%rsi
    f328:	48 89 c7             	mov    %rax,%rdi
    f32b:	e8 74 6c ff ff       	call   5fa4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    f330:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f337:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    f33e:	ba 0a 00 00 00       	mov    $0xa,%edx
    f343:	48 89 ce             	mov    %rcx,%rsi
    f346:	48 89 c7             	mov    %rax,%rdi
    f349:	e8 1a 21 00 00       	call   11468 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    f34e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f355:	48 89 c6             	mov    %rax,%rsi
    f358:	48 89 df             	mov    %rbx,%rdi
    f35b:	e8 f0 52 ff ff       	call   4650 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    f360:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f367:	48 89 c7             	mov    %rax,%rdi
    f36a:	e8 71 4e ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f36f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f376:	48 89 c7             	mov    %rax,%rdi
    f379:	e8 62 4e ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f37e:	48 8b 05 23 6c 01 00 	mov    0x16c23(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f385:	48 89 c2             	mov    %rax,%rdx
    f388:	48 8d 05 b1 69 01 00 	lea    0x169b1(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f38f:	48 89 c6             	mov    %rax,%rsi
    f392:	48 89 df             	mov    %rbx,%rdi
    f395:	e8 f6 52 ff ff       	call   4690 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    f39a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f3a1:	48 83 c0 10          	add    $0x10,%rax
    f3a5:	48 8d 15 f2 a6 00 00 	lea    0xa6f2(%rip),%rdx        # 19a9e <_ZN6__pstl9execution2v1L5unseqE+0x16f>
    f3ac:	48 89 d6             	mov    %rdx,%rsi
    f3af:	48 89 c7             	mov    %rax,%rdi
    f3b2:	e8 b9 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    f3b7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f3be:	48 83 c0 10          	add    $0x10,%rax
    f3c2:	48 8d 15 ee a6 00 00 	lea    0xa6ee(%rip),%rdx        # 19ab7 <_ZN6__pstl9execution2v1L5unseqE+0x188>
    f3c9:	48 89 d6             	mov    %rdx,%rsi
    f3cc:	48 89 c7             	mov    %rax,%rdi
    f3cf:	e8 9c 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    f3d4:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f3db:	be 00 00 00 00       	mov    $0x0,%esi
    f3e0:	48 89 c7             	mov    %rax,%rdi
    f3e3:	e8 9e 78 ff ff       	call   6c86 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    f3e8:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f3ef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f3f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f3f7:	48 89 c7             	mov    %rax,%rdi
    f3fa:	e8 0f 16 00 00       	call   10a0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f3ff:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    f406:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f40a:	48 89 c7             	mov    %rax,%rdi
    f40d:	e8 22 16 00 00       	call   10a34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f412:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    f419:	eb 64                	jmp    f47f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    f41b:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f422:	48 89 c7             	mov    %rax,%rdi
    f425:	e8 92 16 00 00       	call   10abc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f42a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    f431:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f438:	48 83 c0 10          	add    $0x10,%rax
    f43c:	48 8d 15 85 a6 00 00 	lea    0xa685(%rip),%rdx        # 19ac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f443:	48 89 d6             	mov    %rdx,%rsi
    f446:	48 89 c7             	mov    %rax,%rdi
    f449:	e8 22 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f44e:	48 89 c2             	mov    %rax,%rdx
    f451:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f458:	48 89 c6             	mov    %rax,%rsi
    f45b:	48 89 d7             	mov    %rdx,%rdi
    f45e:	e8 0d 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f463:	be 0a 00 00 00       	mov    $0xa,%esi
    f468:	48 89 c7             	mov    %rax,%rdi
    f46b:	e8 10 50 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    f470:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f477:	48 89 c7             	mov    %rax,%rdi
    f47a:	e8 19 16 00 00       	call   10a98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f47f:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    f486:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f48d:	48 89 d6             	mov    %rdx,%rsi
    f490:	48 89 c7             	mov    %rax,%rdi
    f493:	e8 c5 15 00 00       	call   10a5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f498:	84 c0                	test   %al,%al
    f49a:	0f 85 7b ff ff ff    	jne    f41b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    f4a0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f4a7:	48 83 c0 10          	add    $0x10,%rax
    f4ab:	48 8d 15 19 a6 00 00 	lea    0xa619(%rip),%rdx        # 19acb <_ZN6__pstl9execution2v1L5unseqE+0x19c>
    f4b2:	48 89 d6             	mov    %rdx,%rsi
    f4b5:	48 89 c7             	mov    %rax,%rdi
    f4b8:	e8 b3 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    f4bd:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f4c4:	48 83 c0 10          	add    $0x10,%rax
    f4c8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f4cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4d0:	48 89 c7             	mov    %rax,%rdi
    f4d3:	e8 94 10 00 00       	call   1056c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f4d8:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    f4df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4e3:	48 89 c7             	mov    %rax,%rdi
    f4e6:	e8 a7 10 00 00       	call   10592 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f4eb:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    f4f2:	eb 67                	jmp    f55b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    f4f4:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f4fb:	48 89 c7             	mov    %rax,%rdi
    f4fe:	e8 13 11 00 00       	call   10616 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f503:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    f50a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f511:	48 83 c0 10          	add    $0x10,%rax
    f515:	48 8d 15 ac a5 00 00 	lea    0xa5ac(%rip),%rdx        # 19ac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f51c:	48 89 d6             	mov    %rdx,%rsi
    f51f:	48 89 c7             	mov    %rax,%rdi
    f522:	e8 49 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f527:	48 89 c2             	mov    %rax,%rdx
    f52a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f531:	48 8b 00             	mov    (%rax),%rax
    f534:	48 89 c6             	mov    %rax,%rsi
    f537:	48 89 d7             	mov    %rdx,%rdi
    f53a:	e8 31 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f53f:	be 0a 00 00 00       	mov    $0xa,%esi
    f544:	48 89 c7             	mov    %rax,%rdi
    f547:	e8 34 4f ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    f54c:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f553:	48 89 c7             	mov    %rax,%rdi
    f556:	e8 9b 10 00 00       	call   105f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f55b:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    f562:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f569:	48 89 d6             	mov    %rdx,%rsi
    f56c:	48 89 c7             	mov    %rax,%rdi
    f56f:	e8 47 10 00 00       	call   105bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f574:	84 c0                	test   %al,%al
    f576:	0f 85 78 ff ff ff    	jne    f4f4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    f57c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f583:	48 83 c0 10          	add    $0x10,%rax
    f587:	be 0a 00 00 00       	mov    $0xa,%esi
    f58c:	48 89 c7             	mov    %rax,%rdi
    f58f:	e8 ec 4e ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    f594:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f59b:	48 83 c0 10          	add    $0x10,%rax
    f59f:	48 8d 15 35 a5 00 00 	lea    0xa535(%rip),%rdx        # 19adb <_ZN6__pstl9execution2v1L5unseqE+0x1ac>
    f5a6:	48 89 d6             	mov    %rdx,%rsi
    f5a9:	48 89 c7             	mov    %rax,%rdi
    f5ac:	e8 bf 4d ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    f5b1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f5b8:	48 83 c0 10          	add    $0x10,%rax
    f5bc:	48 8d 15 2d a5 00 00 	lea    0xa52d(%rip),%rdx        # 19af0 <_ZN6__pstl9execution2v1L5unseqE+0x1c1>
    f5c3:	48 89 d6             	mov    %rdx,%rsi
    f5c6:	48 89 c7             	mov    %rax,%rdi
    f5c9:	e8 a2 4d ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    f5ce:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f5d5:	48 89 c7             	mov    %rax,%rdi
    f5d8:	e8 43 7a ff ff       	call   7020 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    f5dd:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f5e4:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f5e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5ec:	48 89 c7             	mov    %rax,%rdi
    f5ef:	e8 26 d5 ff ff       	call   cb1a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    f5f4:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    f5fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5ff:	48 89 c7             	mov    %rax,%rdi
    f602:	e8 39 d5 ff ff       	call   cb40 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    f607:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    f60e:	eb 5e                	jmp    f66e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    f610:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f617:	48 89 c7             	mov    %rax,%rdi
    f61a:	e8 a9 d5 ff ff       	call   cbc8 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f61f:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    f623:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f62a:	48 83 c0 10          	add    $0x10,%rax
    f62e:	48 8d 15 93 a4 00 00 	lea    0xa493(%rip),%rdx        # 19ac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f635:	48 89 d6             	mov    %rdx,%rsi
    f638:	48 89 c7             	mov    %rax,%rdi
    f63b:	e8 30 4d ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f640:	48 89 c2             	mov    %rax,%rdx
    f643:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f647:	48 89 c6             	mov    %rax,%rsi
    f64a:	48 89 d7             	mov    %rdx,%rdi
    f64d:	e8 1e 4d ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f652:	be 0a 00 00 00       	mov    $0xa,%esi
    f657:	48 89 c7             	mov    %rax,%rdi
    f65a:	e8 21 4e ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    f65f:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f666:	48 89 c7             	mov    %rax,%rdi
    f669:	e8 36 d5 ff ff       	call   cba4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f66e:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    f675:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f67c:	48 89 d6             	mov    %rdx,%rsi
    f67f:	48 89 c7             	mov    %rax,%rdi
    f682:	e8 e2 d4 ff ff       	call   cb69 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f687:	84 c0                	test   %al,%al
    f689:	75 85                	jne    f610 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    f68b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f692:	48 83 c0 10          	add    $0x10,%rax
    f696:	48 8d 15 64 a4 00 00 	lea    0xa464(%rip),%rdx        # 19b01 <_ZN6__pstl9execution2v1L5unseqE+0x1d2>
    f69d:	48 89 d6             	mov    %rdx,%rsi
    f6a0:	48 89 c7             	mov    %rax,%rdi
    f6a3:	e8 c8 4c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    f6a8:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f6af:	48 83 c0 28          	add    $0x28,%rax
    f6b3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f6b7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f6bb:	48 89 c7             	mov    %rax,%rdi
    f6be:	e8 ef 1d 00 00       	call   114b2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    f6c3:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    f6ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f6ce:	48 89 c7             	mov    %rax,%rdi
    f6d1:	e8 02 1e 00 00       	call   114d8 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    f6d6:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    f6dd:	eb 61                	jmp    f740 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    f6df:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f6e6:	48 89 c7             	mov    %rax,%rdi
    f6e9:	e8 6e 1e 00 00       	call   1155c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f6ee:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    f6f2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f6f9:	48 83 c0 10          	add    $0x10,%rax
    f6fd:	48 8d 15 c4 a3 00 00 	lea    0xa3c4(%rip),%rdx        # 19ac8 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f704:	48 89 d6             	mov    %rdx,%rsi
    f707:	48 89 c7             	mov    %rax,%rdi
    f70a:	e8 61 4c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f70f:	48 89 c2             	mov    %rax,%rdx
    f712:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f716:	48 8b 00             	mov    (%rax),%rax
    f719:	48 89 c6             	mov    %rax,%rsi
    f71c:	48 89 d7             	mov    %rdx,%rdi
    f71f:	e8 4c 4c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f724:	be 0a 00 00 00       	mov    $0xa,%esi
    f729:	48 89 c7             	mov    %rax,%rdi
    f72c:	e8 4f 4d ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    f731:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f738:	48 89 c7             	mov    %rax,%rdi
    f73b:	e8 fc 1d 00 00       	call   1153c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    f740:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    f747:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f74e:	48 89 d6             	mov    %rdx,%rsi
    f751:	48 89 c7             	mov    %rax,%rdi
    f754:	e8 a8 1d 00 00       	call   11501 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    f759:	84 c0                	test   %al,%al
    f75b:	75 82                	jne    f6df <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    f75d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f764:	48 83 c0 10          	add    $0x10,%rax
    f768:	be 0a 00 00 00       	mov    $0xa,%esi
    f76d:	48 89 c7             	mov    %rax,%rdi
    f770:	e8 0b 4d ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    f775:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f77c:	48 83 c0 10          	add    $0x10,%rax
    f780:	48 8d 15 8a a3 00 00 	lea    0xa38a(%rip),%rdx        # 19b11 <_ZN6__pstl9execution2v1L5unseqE+0x1e2>
    f787:	48 89 d6             	mov    %rdx,%rsi
    f78a:	48 89 c7             	mov    %rax,%rdi
    f78d:	e8 de 4b ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    f792:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f799:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f79d:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f7a4:	48 89 d6             	mov    %rdx,%rsi
    f7a7:	48 89 c7             	mov    %rax,%rdi
    f7aa:	e8 1d 79 ff ff       	call   70cc <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    f7af:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f7b6:	48 8b 50 58          	mov    0x58(%rax),%rdx
    f7ba:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    f7c1:	48 89 d6             	mov    %rdx,%rsi
    f7c4:	48 89 c7             	mov    %rax,%rdi
    f7c7:	e8 6f 7a ff ff       	call   723b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    f7cc:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    f7d3:	00 
  size_t selectedDeviceIndex = 0;
    f7d4:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f7db:	00 
  for (const auto &physDev : physicalDeviceList) {
    f7dc:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f7e3:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f7e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f7eb:	48 89 c7             	mov    %rax,%rdi
    f7ee:	e8 49 10 00 00       	call   1083c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    f7f3:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    f7fa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f7fe:	48 89 c7             	mov    %rax,%rdi
    f801:	e8 5c 10 00 00       	call   10862 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    f806:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    f80d:	e9 c7 06 00 00       	jmp    fed9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    f812:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    f819:	48 89 c7             	mov    %rax,%rdi
    f81c:	e8 c5 10 00 00       	call   108e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    f821:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    f825:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f82c:	48 89 c7             	mov    %rax,%rdi
    f82f:	e8 cc 4e ff ff       	call   4700 <_ZNSaIcEC1Ev@plt>
    f834:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    f83b:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f842:	48 8d 0d de a2 00 00 	lea    0xa2de(%rip),%rcx        # 19b27 <_ZN6__pstl9execution2v1L5unseqE+0x1f8>
    f849:	48 89 ce             	mov    %rcx,%rsi
    f84c:	48 89 c7             	mov    %rax,%rdi
    f84f:	e8 ec 52 ff ff       	call   4b40 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f854:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f85b:	48 89 c7             	mov    %rax,%rdi
    f85e:	e8 bd 4b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    f863:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    f86a:	b8 00 00 00 00       	mov    $0x0,%eax
    f86f:	b9 0e 00 00 00       	mov    $0xe,%ecx
    f874:	48 89 d7             	mov    %rdx,%rdi
    f877:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    f87a:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    f881:	00 00 00 
    vk11Props.pNext = nullptr;
    f884:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    f88b:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    f88f:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    f896:	b8 00 00 00 00       	mov    $0x0,%eax
    f89b:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    f8a0:	48 89 d7             	mov    %rdx,%rdi
    f8a3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    f8a6:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    f8ad:	00 00 00 
    vk12Props.pNext = &vk11Props;
    f8b0:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    f8b7:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    f8be:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f8c5:	b8 00 00 00 00       	mov    $0x0,%eax
    f8ca:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    f8cf:	48 89 d7             	mov    %rdx,%rdi
    f8d2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    f8d5:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    f8dc:	00 00 00 
    vk13Props.pNext = &vk12Props;
    f8df:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f8e6:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    f8ed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f8f1:	48 8b 08             	mov    (%rax),%rcx
    f8f4:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    f8fb:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f902:	48 89 ce             	mov    %rcx,%rsi
    f905:	48 89 c7             	mov    %rax,%rdi
    f908:	e8 58 79 ff ff       	call   7265 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    f90d:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    f913:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    f919:	39 c2                	cmp    %eax,%edx
    f91b:	75 08                	jne    f925 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    f91d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f921:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    f925:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f929:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f92d:	75 19                	jne    f948 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    f92f:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f936:	48 8d 15 eb a1 00 00 	lea    0xa1eb(%rip),%rdx        # 19b28 <_ZN6__pstl9execution2v1L5unseqE+0x1f9>
    f93d:	48 89 d6             	mov    %rdx,%rsi
    f940:	48 89 c7             	mov    %rax,%rdi
    f943:	e8 28 4c ff ff       	call   4570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    f948:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f94f:	48 83 c0 10          	add    $0x10,%rax
    f953:	48 8d 15 da a1 00 00 	lea    0xa1da(%rip),%rdx        # 19b34 <_ZN6__pstl9execution2v1L5unseqE+0x205>
    f95a:	48 89 d6             	mov    %rdx,%rsi
    f95d:	48 89 c7             	mov    %rax,%rdi
    f960:	e8 0b 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f965:	48 89 c2             	mov    %rax,%rdx
    f968:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f96c:	48 89 c6             	mov    %rax,%rsi
    f96f:	48 89 d7             	mov    %rdx,%rdi
    f972:	e8 19 47 ff ff       	call   4090 <_ZNSolsEm@plt>
    f977:	48 89 c2             	mov    %rax,%rdx
    f97a:	48 8d 05 b7 a1 00 00 	lea    0xa1b7(%rip),%rax        # 19b38 <_ZN6__pstl9execution2v1L5unseqE+0x209>
    f981:	48 89 c6             	mov    %rax,%rsi
    f984:	48 89 d7             	mov    %rdx,%rdi
    f987:	e8 e4 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f98c:	48 89 c2             	mov    %rax,%rdx
    f98f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f993:	48 89 c6             	mov    %rax,%rsi
    f996:	48 89 d7             	mov    %rdx,%rdi
    f999:	e8 f2 46 ff ff       	call   4090 <_ZNSolsEm@plt>
    f99e:	48 89 c2             	mov    %rax,%rdx
    f9a1:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f9a8:	48 89 c6             	mov    %rax,%rsi
    f9ab:	48 89 d7             	mov    %rdx,%rdi
    f9ae:	e8 5d 49 ff ff       	call   4310 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    f9b3:	48 89 c2             	mov    %rax,%rdx
    f9b6:	48 8d 05 84 a1 00 00 	lea    0xa184(%rip),%rax        # 19b41 <_ZN6__pstl9execution2v1L5unseqE+0x212>
    f9bd:	48 89 c6             	mov    %rax,%rsi
    f9c0:	48 89 d7             	mov    %rdx,%rdi
    f9c3:	e8 a8 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    f9c8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9cf:	48 83 c0 10          	add    $0x10,%rax
    f9d3:	48 8d 15 6a a1 00 00 	lea    0xa16a(%rip),%rdx        # 19b44 <_ZN6__pstl9execution2v1L5unseqE+0x215>
    f9da:	48 89 d6             	mov    %rdx,%rsi
    f9dd:	48 89 c7             	mov    %rax,%rdi
    f9e0:	e8 8b 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f9e5:	48 89 c2             	mov    %rax,%rdx
    f9e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9ec:	48 89 c6             	mov    %rax,%rsi
    f9ef:	48 89 d7             	mov    %rdx,%rdi
    f9f2:	e8 99 46 ff ff       	call   4090 <_ZNSolsEm@plt>
    f9f7:	48 89 c2             	mov    %rax,%rdx
    f9fa:	48 8d 05 48 a1 00 00 	lea    0xa148(%rip),%rax        # 19b49 <_ZN6__pstl9execution2v1L5unseqE+0x21a>
    fa01:	48 89 c6             	mov    %rax,%rsi
    fa04:	48 89 d7             	mov    %rdx,%rdi
    fa07:	e8 64 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    fa0c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa13:	48 83 c0 10          	add    $0x10,%rax
    fa17:	48 8d 15 42 a1 00 00 	lea    0xa142(%rip),%rdx        # 19b60 <_ZN6__pstl9execution2v1L5unseqE+0x231>
    fa1e:	48 89 d6             	mov    %rdx,%rsi
    fa21:	48 89 c7             	mov    %rax,%rdi
    fa24:	e8 47 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa29:	48 89 c2             	mov    %rax,%rdx
    fa2c:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    fa32:	89 c6                	mov    %eax,%esi
    fa34:	48 89 d7             	mov    %rdx,%rdi
    fa37:	e8 14 4b ff ff       	call   4550 <_ZNSolsEj@plt>
    fa3c:	be 0a 00 00 00       	mov    $0xa,%esi
    fa41:	48 89 c7             	mov    %rax,%rdi
    fa44:	e8 37 4a ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    fa49:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa50:	48 83 c0 10          	add    $0x10,%rax
    fa54:	48 8d 15 14 a1 00 00 	lea    0xa114(%rip),%rdx        # 19b6f <_ZN6__pstl9execution2v1L5unseqE+0x240>
    fa5b:	48 89 d6             	mov    %rdx,%rsi
    fa5e:	48 89 c7             	mov    %rax,%rdi
    fa61:	e8 0a 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa66:	48 89 c2             	mov    %rax,%rdx
    fa69:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    fa70:	48 83 c0 24          	add    $0x24,%rax
    fa74:	48 89 c6             	mov    %rax,%rsi
    fa77:	48 89 d7             	mov    %rdx,%rdi
    fa7a:	e8 f1 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa7f:	be 0a 00 00 00       	mov    $0xa,%esi
    fa84:	48 89 c7             	mov    %rax,%rdi
    fa87:	e8 f4 49 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    fa8c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa93:	48 83 c0 10          	add    $0x10,%rax
    fa97:	48 8d 15 e2 a0 00 00 	lea    0xa0e2(%rip),%rdx        # 19b80 <_ZN6__pstl9execution2v1L5unseqE+0x251>
    fa9e:	48 89 d6             	mov    %rdx,%rsi
    faa1:	48 89 c7             	mov    %rax,%rdi
    faa4:	e8 c7 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    faa9:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    faaf:	83 f8 04             	cmp    $0x4,%eax
    fab2:	0f 84 80 00 00 00    	je     fb38 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    fab8:	83 f8 04             	cmp    $0x4,%eax
    fabb:	0f 8f 96 00 00 00    	jg     fb57 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    fac1:	83 f8 03             	cmp    $0x3,%eax
    fac4:	74 53                	je     fb19 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    fac6:	83 f8 03             	cmp    $0x3,%eax
    fac9:	0f 8f 88 00 00 00    	jg     fb57 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    facf:	83 f8 01             	cmp    $0x1,%eax
    fad2:	74 07                	je     fadb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    fad4:	83 f8 02             	cmp    $0x2,%eax
    fad7:	74 21                	je     fafa <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    fad9:	eb 7c                	jmp    fb57 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    fadb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fae2:	48 83 c0 10          	add    $0x10,%rax
    fae6:	48 8d 15 a4 a0 00 00 	lea    0xa0a4(%rip),%rdx        # 19b91 <_ZN6__pstl9execution2v1L5unseqE+0x262>
    faed:	48 89 d6             	mov    %rdx,%rsi
    faf0:	48 89 c7             	mov    %rax,%rdi
    faf3:	e8 78 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    faf8:	eb 7b                	jmp    fb75 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    fafa:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb01:	48 83 c0 10          	add    $0x10,%rax
    fb05:	48 8d 15 95 a0 00 00 	lea    0xa095(%rip),%rdx        # 19ba1 <_ZN6__pstl9execution2v1L5unseqE+0x272>
    fb0c:	48 89 d6             	mov    %rdx,%rsi
    fb0f:	48 89 c7             	mov    %rax,%rdi
    fb12:	e8 59 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fb17:	eb 5c                	jmp    fb75 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    fb19:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb20:	48 83 c0 10          	add    $0x10,%rax
    fb24:	48 8d 15 84 a0 00 00 	lea    0xa084(%rip),%rdx        # 19baf <_ZN6__pstl9execution2v1L5unseqE+0x280>
    fb2b:	48 89 d6             	mov    %rdx,%rsi
    fb2e:	48 89 c7             	mov    %rax,%rdi
    fb31:	e8 3a 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fb36:	eb 3d                	jmp    fb75 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    fb38:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb3f:	48 83 c0 10          	add    $0x10,%rax
    fb43:	48 8d 15 72 a0 00 00 	lea    0xa072(%rip),%rdx        # 19bbc <_ZN6__pstl9execution2v1L5unseqE+0x28d>
    fb4a:	48 89 d6             	mov    %rdx,%rsi
    fb4d:	48 89 c7             	mov    %rax,%rdi
    fb50:	e8 1b 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fb55:	eb 1e                	jmp    fb75 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    fb57:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb5e:	48 83 c0 10          	add    $0x10,%rax
    fb62:	48 8d 15 58 a0 00 00 	lea    0xa058(%rip),%rdx        # 19bc1 <_ZN6__pstl9execution2v1L5unseqE+0x292>
    fb69:	48 89 d6             	mov    %rdx,%rsi
    fb6c:	48 89 c7             	mov    %rax,%rdi
    fb6f:	e8 fc 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fb74:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    fb75:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb7c:	48 83 c0 10          	add    $0x10,%rax
    fb80:	48 8d 15 41 a0 00 00 	lea    0xa041(%rip),%rdx        # 19bc8 <_ZN6__pstl9execution2v1L5unseqE+0x299>
    fb87:	48 89 d6             	mov    %rdx,%rsi
    fb8a:	48 89 c7             	mov    %rax,%rdi
    fb8d:	e8 de 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb92:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    fb98:	89 d6                	mov    %edx,%esi
    fb9a:	48 89 c7             	mov    %rax,%rdi
    fb9d:	e8 1e 4b ff ff       	call   46c0 <_ZNSolsEi@plt>
    fba2:	be 0a 00 00 00       	mov    $0xa,%esi
    fba7:	48 89 c7             	mov    %rax,%rdi
    fbaa:	e8 d1 48 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    fbaf:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fbb6:	48 83 c0 10          	add    $0x10,%rax
    fbba:	48 8d 15 16 a0 00 00 	lea    0xa016(%rip),%rdx        # 19bd7 <_ZN6__pstl9execution2v1L5unseqE+0x2a8>
    fbc1:	48 89 d6             	mov    %rdx,%rsi
    fbc4:	48 89 c7             	mov    %rax,%rdi
    fbc7:	e8 a4 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fbcc:	48 89 c2             	mov    %rax,%rdx
    fbcf:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    fbd6:	48 83 c0 14          	add    $0x14,%rax
    fbda:	48 89 c6             	mov    %rax,%rsi
    fbdd:	48 89 d7             	mov    %rdx,%rdi
    fbe0:	e8 8b 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fbe5:	be 0a 00 00 00       	mov    $0xa,%esi
    fbea:	48 89 c7             	mov    %rax,%rdi
    fbed:	e8 8e 48 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    fbf2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fbf9:	48 83 c0 10          	add    $0x10,%rax
    fbfd:	48 8d 15 e4 9f 00 00 	lea    0x9fe4(%rip),%rdx        # 19be8 <_ZN6__pstl9execution2v1L5unseqE+0x2b9>
    fc04:	48 89 d6             	mov    %rdx,%rsi
    fc07:	48 89 c7             	mov    %rax,%rdi
    fc0a:	e8 61 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc0f:	48 89 c2             	mov    %rax,%rdx
    fc12:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    fc19:	48 05 14 01 00 00    	add    $0x114,%rax
    fc1f:	48 89 c6             	mov    %rax,%rsi
    fc22:	48 89 d7             	mov    %rdx,%rdi
    fc25:	e8 46 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc2a:	be 0a 00 00 00       	mov    $0xa,%esi
    fc2f:	48 89 c7             	mov    %rax,%rdi
    fc32:	e8 49 48 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    fc37:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc3e:	48 83 c0 10          	add    $0x10,%rax
    fc42:	48 8d 15 b7 9f 00 00 	lea    0x9fb7(%rip),%rdx        # 19c00 <_ZN6__pstl9execution2v1L5unseqE+0x2d1>
    fc49:	48 89 d6             	mov    %rdx,%rsi
    fc4c:	48 89 c7             	mov    %rax,%rdi
    fc4f:	e8 1c 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc54:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    fc57:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    fc5e:	48 89 c6             	mov    %rax,%rsi
    fc61:	48 89 d7             	mov    %rdx,%rdi
    fc64:	e8 27 44 ff ff       	call   4090 <_ZNSolsEm@plt>
    fc69:	be 0a 00 00 00       	mov    $0xa,%esi
    fc6e:	48 89 c7             	mov    %rax,%rdi
    fc71:	e8 0a 48 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    fc76:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc7d:	48 83 c0 10          	add    $0x10,%rax
    fc81:	48 8d 15 bc 9e 00 00 	lea    0x9ebc(%rip),%rdx        # 19b44 <_ZN6__pstl9execution2v1L5unseqE+0x215>
    fc88:	48 89 d6             	mov    %rdx,%rsi
    fc8b:	48 89 c7             	mov    %rax,%rdi
    fc8e:	e8 dd 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc93:	48 89 c2             	mov    %rax,%rdx
    fc96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc9a:	48 89 c6             	mov    %rax,%rsi
    fc9d:	48 89 d7             	mov    %rdx,%rdi
    fca0:	e8 eb 43 ff ff       	call   4090 <_ZNSolsEm@plt>
    fca5:	48 89 c2             	mov    %rax,%rdx
    fca8:	48 8d 05 79 9f 00 00 	lea    0x9f79(%rip),%rax        # 19c28 <_ZN6__pstl9execution2v1L5unseqE+0x2f9>
    fcaf:	48 89 c6             	mov    %rax,%rsi
    fcb2:	48 89 d7             	mov    %rdx,%rdi
    fcb5:	e8 b6 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    fcba:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fcbe:	48 8b 08             	mov    (%rax),%rcx
    fcc1:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fcc8:	ba 00 00 00 00       	mov    $0x0,%edx
    fccd:	48 89 ce             	mov    %rcx,%rsi
    fcd0:	48 89 c7             	mov    %rax,%rdi
    fcd3:	e8 1f 71 ff ff       	call   6df7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    fcd8:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fcdf:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    fce3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fce7:	48 89 c7             	mov    %rax,%rdi
    fcea:	e8 1f 0d 00 00       	call   10a0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    fcef:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
    fcf6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fcfa:	48 89 c7             	mov    %rax,%rdi
    fcfd:	e8 32 0d 00 00       	call   10a34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    fd02:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
    fd09:	eb 5e                	jmp    fd69 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
    fd0b:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fd12:	48 89 c7             	mov    %rax,%rdi
    fd15:	e8 a2 0d 00 00       	call   10abc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    fd1a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
    fd1e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd25:	48 83 c0 10          	add    $0x10,%rax
    fd29:	48 8d 15 19 9f 00 00 	lea    0x9f19(%rip),%rdx        # 19c49 <_ZN6__pstl9execution2v1L5unseqE+0x31a>
    fd30:	48 89 d6             	mov    %rdx,%rsi
    fd33:	48 89 c7             	mov    %rax,%rdi
    fd36:	e8 35 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd3b:	48 89 c2             	mov    %rax,%rdx
    fd3e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    fd42:	48 89 c6             	mov    %rax,%rsi
    fd45:	48 89 d7             	mov    %rdx,%rdi
    fd48:	e8 23 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd4d:	be 0a 00 00 00       	mov    $0xa,%esi
    fd52:	48 89 c7             	mov    %rax,%rdi
    fd55:	e8 26 47 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
    fd5a:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fd61:	48 89 c7             	mov    %rax,%rdi
    fd64:	e8 2f 0d 00 00       	call   10a98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    fd69:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
    fd70:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fd77:	48 89 d6             	mov    %rdx,%rsi
    fd7a:	48 89 c7             	mov    %rax,%rdi
    fd7d:	e8 db 0c 00 00       	call   10a5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    fd82:	84 c0                	test   %al,%al
    fd84:	75 85                	jne    fd0b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
    fd86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd8a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    fd8e:	0f 85 fb 00 00 00    	jne    fe8f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
    fd94:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd9b:	48 83 c0 10          	add    $0x10,%rax
    fd9f:	48 8d 15 9e 9d 00 00 	lea    0x9d9e(%rip),%rdx        # 19b44 <_ZN6__pstl9execution2v1L5unseqE+0x215>
    fda6:	48 89 d6             	mov    %rdx,%rsi
    fda9:	48 89 c7             	mov    %rax,%rdi
    fdac:	e8 bf 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fdb1:	48 89 c2             	mov    %rax,%rdx
    fdb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdb8:	48 89 c6             	mov    %rax,%rsi
    fdbb:	48 89 d7             	mov    %rdx,%rdi
    fdbe:	e8 cd 42 ff ff       	call   4090 <_ZNSolsEm@plt>
    fdc3:	48 89 c2             	mov    %rax,%rdx
    fdc6:	48 8d 05 83 9e 00 00 	lea    0x9e83(%rip),%rax        # 19c50 <_ZN6__pstl9execution2v1L5unseqE+0x321>
    fdcd:	48 89 c6             	mov    %rax,%rsi
    fdd0:	48 89 d7             	mov    %rdx,%rdi
    fdd3:	e8 98 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
    fdd8:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fddf:	48 05 88 00 00 00    	add    $0x88,%rax
    fde5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    fde9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fded:	48 89 c7             	mov    %rax,%rdi
    fdf0:	e8 77 07 00 00       	call   1056c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    fdf5:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
    fdfc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fe00:	48 89 c7             	mov    %rax,%rdi
    fe03:	e8 8a 07 00 00       	call   10592 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    fe08:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
    fe0f:	eb 61                	jmp    fe72 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
    fe11:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fe18:	48 89 c7             	mov    %rax,%rdi
    fe1b:	e8 f6 07 00 00       	call   10616 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fe20:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
    fe24:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe2b:	48 83 c0 10          	add    $0x10,%rax
    fe2f:	48 8d 15 13 9e 00 00 	lea    0x9e13(%rip),%rdx        # 19c49 <_ZN6__pstl9execution2v1L5unseqE+0x31a>
    fe36:	48 89 d6             	mov    %rdx,%rsi
    fe39:	48 89 c7             	mov    %rax,%rdi
    fe3c:	e8 2f 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fe41:	48 89 c2             	mov    %rax,%rdx
    fe44:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    fe48:	48 8b 00             	mov    (%rax),%rax
    fe4b:	48 89 c6             	mov    %rax,%rsi
    fe4e:	48 89 d7             	mov    %rdx,%rdi
    fe51:	e8 1a 45 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fe56:	be 0a 00 00 00       	mov    $0xa,%esi
    fe5b:	48 89 c7             	mov    %rax,%rdi
    fe5e:	e8 1d 46 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
    fe63:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fe6a:	48 89 c7             	mov    %rax,%rdi
    fe6d:	e8 84 07 00 00       	call   105f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    fe72:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
    fe79:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fe80:	48 89 d6             	mov    %rdx,%rsi
    fe83:	48 89 c7             	mov    %rax,%rdi
    fe86:	e8 30 07 00 00       	call   105bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fe8b:	84 c0                	test   %al,%al
    fe8d:	75 82                	jne    fe11 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
    fe8f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe96:	48 83 c0 10          	add    $0x10,%rax
    fe9a:	be 0a 00 00 00       	mov    $0xa,%esi
    fe9f:	48 89 c7             	mov    %rax,%rdi
    fea2:	e8 d9 45 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
    fea7:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
    feac:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    feb3:	48 89 c7             	mov    %rax,%rdi
    feb6:	e8 b1 80 ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    febb:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fec2:	48 89 c7             	mov    %rax,%rdi
    fec5:	e8 16 43 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
    feca:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fed1:	48 89 c7             	mov    %rax,%rdi
    fed4:	e8 ed 09 00 00       	call   108c6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    fed9:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    fee0:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fee7:	48 89 d6             	mov    %rdx,%rsi
    feea:	48 89 c7             	mov    %rax,%rdi
    feed:	e8 99 09 00 00       	call   1088b <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fef2:	84 c0                	test   %al,%al
    fef4:	0f 85 18 f9 ff ff    	jne    f812 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
    fefa:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ff01:	48 83 c0 10          	add    $0x10,%rax
    ff05:	be 0a 00 00 00       	mov    $0xa,%esi
    ff0a:	48 89 c7             	mov    %rax,%rdi
    ff0d:	e8 6e 45 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ff12:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    ff19:	48 89 c7             	mov    %rax,%rdi
    ff1c:	e8 d5 82 ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ff21:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    ff28:	48 89 c7             	mov    %rax,%rdi
    ff2b:	e8 ce 7e ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    ff30:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    ff37:	48 89 c7             	mov    %rax,%rdi
    ff3a:	e8 2d 80 ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    ff3f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ff46:	48 89 c7             	mov    %rax,%rdi
    ff49:	e8 32 41 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    ff4e:	e9 cd 00 00 00       	jmp    10020 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    ff53:	49 89 c4             	mov    %rax,%r12
    ff56:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ff5d:	48 89 c7             	mov    %rax,%rdi
    ff60:	e8 7b 42 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ff65:	eb 03                	jmp    ff6a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
    ff67:	49 89 c4             	mov    %rax,%r12
    ff6a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ff71:	48 89 c7             	mov    %rax,%rdi
    ff74:	e8 67 42 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ff79:	eb 03                	jmp    ff7e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
    ff7b:	49 89 c4             	mov    %rax,%r12
    ff7e:	48 89 df             	mov    %rbx,%rdi
    ff81:	e8 ba 42 ff ff       	call   4240 <__cxa_free_exception@plt>
    ff86:	4c 89 e3             	mov    %r12,%rbx
    ff89:	eb 7b                	jmp    10006 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
    ff8b:	48 89 c3             	mov    %rax,%rbx
    ff8e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    ff95:	48 89 c7             	mov    %rax,%rdi
    ff98:	e8 83 44 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    ff9d:	eb 2b                	jmp    ffca <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
    ff9f:	48 89 c3             	mov    %rax,%rbx
    ffa2:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    ffa9:	48 89 c7             	mov    %rax,%rdi
    ffac:	e8 bb 7f ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    ffb1:	eb 03                	jmp    ffb6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
    ffb3:	48 89 c3             	mov    %rax,%rbx
    ffb6:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    ffbd:	48 89 c7             	mov    %rax,%rdi
    ffc0:	e8 1b 42 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ffc5:	eb 03                	jmp    ffca <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
    ffc7:	48 89 c3             	mov    %rax,%rbx
    ffca:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    ffd1:	48 89 c7             	mov    %rax,%rdi
    ffd4:	e8 1d 82 ff ff       	call   81f6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ffd9:	eb 03                	jmp    ffde <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
    ffdb:	48 89 c3             	mov    %rax,%rbx
    ffde:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    ffe5:	48 89 c7             	mov    %rax,%rdi
    ffe8:	e8 11 7e ff ff       	call   7dfe <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    ffed:	eb 03                	jmp    fff2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
    ffef:	48 89 c3             	mov    %rax,%rbx
    fff2:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    fff9:	48 89 c7             	mov    %rax,%rdi
    fffc:	e8 6b 7f ff ff       	call   7f6c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10001:	eb 03                	jmp    10006 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   10003:	48 89 c3             	mov    %rax,%rbx
   10006:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1000d:	48 89 c7             	mov    %rax,%rdi
   10010:	e8 6b 40 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   10015:	48 89 d8             	mov    %rbx,%rax
   10018:	48 89 c7             	mov    %rax,%rdi
   1001b:	e8 d0 46 ff ff       	call   46f0 <_Unwind_Resume@plt>
   10020:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   10027:	5b                   	pop    %rbx
   10028:	41 5c                	pop    %r12
   1002a:	5d                   	pop    %rbp
   1002b:	c3                   	ret

000000000001002c <_Z41__static_initialization_and_destruction_0ii>:
   1002c:	55                   	push   %rbp
   1002d:	48 89 e5             	mov    %rsp,%rbp
   10030:	48 83 ec 10          	sub    $0x10,%rsp
   10034:	89 7d fc             	mov    %edi,-0x4(%rbp)
   10037:	89 75 f8             	mov    %esi,-0x8(%rbp)
   1003a:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   1003e:	75 3b                	jne    1007b <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10040:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   10047:	75 32                	jne    1007b <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10049:	48 8d 05 e4 65 01 00 	lea    0x165e4(%rip),%rax        # 26634 <_ZStL8__ioinit>
   10050:	48 89 c7             	mov    %rax,%rdi
   10053:	e8 98 45 ff ff       	call   45f0 <_ZNSt8ios_base4InitC1Ev@plt>
   10058:	48 8d 05 51 63 01 00 	lea    0x16351(%rip),%rax        # 263b0 <__dso_handle>
   1005f:	48 89 c2             	mov    %rax,%rdx
   10062:	48 8d 05 cb 65 01 00 	lea    0x165cb(%rip),%rax        # 26634 <_ZStL8__ioinit>
   10069:	48 89 c6             	mov    %rax,%rsi
   1006c:	48 8b 05 55 5f 01 00 	mov    0x15f55(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   10073:	48 89 c7             	mov    %rax,%rdi
   10076:	e8 85 42 ff ff       	call   4300 <__cxa_atexit@plt>
   1007b:	90                   	nop
   1007c:	c9                   	leave
   1007d:	c3                   	ret

000000000001007e <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   1007e:	55                   	push   %rbp
   1007f:	48 89 e5             	mov    %rsp,%rbp
   10082:	be ff ff 00 00       	mov    $0xffff,%esi
   10087:	bf 01 00 00 00       	mov    $0x1,%edi
   1008c:	e8 9b ff ff ff       	call   1002c <_Z41__static_initialization_and_destruction_0ii>
   10091:	5d                   	pop    %rbp
   10092:	c3                   	ret
   10093:	90                   	nop

0000000000010094 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   10094:	55                   	push   %rbp
   10095:	48 89 e5             	mov    %rsp,%rbp
   10098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1009c:	48 8d 15 6d 5c 01 00 	lea    0x15c6d(%rip),%rdx        # 25d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   100a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100a7:	48 89 10             	mov    %rdx,(%rax)
   100aa:	90                   	nop
   100ab:	5d                   	pop    %rbp
   100ac:	c3                   	ret

00000000000100ad <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   100ad:	55                   	push   %rbp
   100ae:	48 89 e5             	mov    %rsp,%rbp
   100b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   100b9:	90                   	nop
   100ba:	5d                   	pop    %rbp
   100bb:	c3                   	ret

00000000000100bc <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   100bc:	55                   	push   %rbp
   100bd:	48 89 e5             	mov    %rsp,%rbp
   100c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   100c4:	48 8d 05 4d 98 00 00 	lea    0x984d(%rip),%rax        # 19918 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
   100cb:	5d                   	pop    %rbp
   100cc:	c3                   	ret
   100cd:	90                   	nop

00000000000100ce <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   100ce:	55                   	push   %rbp
   100cf:	48 89 e5             	mov    %rsp,%rbp
   100d2:	48 83 ec 10          	sub    $0x10,%rsp
   100d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100de:	48 89 c7             	mov    %rax,%rdi
   100e1:	e8 ae ff ff ff       	call   10094 <_ZNSt9exceptionC1Ev>
   100e6:	48 8d 15 d3 5b 01 00 	lea    0x15bd3(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
   100ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100f1:	48 89 10             	mov    %rdx,(%rax)
   100f4:	90                   	nop
   100f5:	c9                   	leave
   100f6:	c3                   	ret

00000000000100f7 <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   100f7:	55                   	push   %rbp
   100f8:	48 89 e5             	mov    %rsp,%rbp
   100fb:	53                   	push   %rbx
   100fc:	48 83 ec 08          	sub    $0x8,%rsp
   10100:	bf 08 00 00 00       	mov    $0x8,%edi
   10105:	e8 66 40 ff ff       	call   4170 <__cxa_allocate_exception@plt>
   1010a:	48 89 c3             	mov    %rax,%rbx
   1010d:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10114:	48 89 df             	mov    %rbx,%rdi
   10117:	e8 b2 ff ff ff       	call   100ce <_ZNSt19bad_optional_accessC1Ev>
   1011c:	48 8d 05 d1 53 00 00 	lea    0x53d1(%rip),%rax        # 154f4 <_ZNSt19bad_optional_accessD1Ev>
   10123:	48 89 c2             	mov    %rax,%rdx
   10126:	48 8d 05 2b 5c 01 00 	lea    0x15c2b(%rip),%rax        # 25d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   1012d:	48 89 c6             	mov    %rax,%rsi
   10130:	48 89 df             	mov    %rbx,%rdi
   10133:	e8 58 45 ff ff       	call   4690 <__cxa_throw@plt>

0000000000010138 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
   10138:	55                   	push   %rbp
   10139:	48 89 e5             	mov    %rsp,%rbp
   1013c:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
   10140:	e8 3a 00 00 00       	call   1017f <_ZNSt6chrono15duration_valuesIlE4zeroEv>
   10145:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10149:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1014d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   10151:	48 89 d6             	mov    %rdx,%rsi
   10154:	48 89 c7             	mov    %rax,%rdi
   10157:	e8 06 00 00 00       	call   10162 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   1015c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10160:	c9                   	leave
   10161:	c3                   	ret

0000000000010162 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   10162:	55                   	push   %rbp
   10163:	48 89 e5             	mov    %rsp,%rbp
   10166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1016a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   1016e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10172:	48 8b 10             	mov    (%rax),%rdx
   10175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10179:	48 89 10             	mov    %rdx,(%rax)
   1017c:	90                   	nop
   1017d:	5d                   	pop    %rbp
   1017e:	c3                   	ret

000000000001017f <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
   1017f:	55                   	push   %rbp
   10180:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
   10183:	b8 00 00 00 00       	mov    $0x0,%eax
   10188:	5d                   	pop    %rbp
   10189:	c3                   	ret

000000000001018a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
   1018a:	55                   	push   %rbp
   1018b:	48 89 e5             	mov    %rsp,%rbp
   1018e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   10192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10196:	48 8b 00             	mov    (%rax),%rax
   10199:	5d                   	pop    %rbp
   1019a:	c3                   	ret
   1019b:	90                   	nop

000000000001019c <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   1019c:	55                   	push   %rbp
   1019d:	48 89 e5             	mov    %rsp,%rbp
   101a0:	48 83 ec 10          	sub    $0x10,%rsp
   101a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   101a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ac:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   101b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101b6:	48 89 c7             	mov    %rax,%rdi
   101b9:	e8 04 00 00 00       	call   101c2 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   101be:	90                   	nop
   101bf:	c9                   	leave
   101c0:	c3                   	ret
   101c1:	90                   	nop

00000000000101c2 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   101c2:	55                   	push   %rbp
   101c3:	48 89 e5             	mov    %rsp,%rbp
   101c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   101ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ce:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   101d5:	00 
      _M_header._M_left = &_M_header;
   101d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   101da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101de:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   101e2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   101e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ea:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   101ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101f2:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   101f9:	00 
    }
   101fa:	90                   	nop
   101fb:	5d                   	pop    %rbp
   101fc:	c3                   	ret
   101fd:	90                   	nop

00000000000101fe <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   101fe:	55                   	push   %rbp
   101ff:	48 89 e5             	mov    %rsp,%rbp
   10202:	48 83 ec 10          	sub    $0x10,%rsp
   10206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1020a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1020e:	48 89 c7             	mov    %rax,%rdi
   10211:	e8 60 00 00 00       	call   10276 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   10216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1021a:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   1021e:	90                   	nop
   1021f:	c9                   	leave
   10220:	c3                   	ret
   10221:	90                   	nop

0000000000010222 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   10222:	55                   	push   %rbp
   10223:	48 89 e5             	mov    %rsp,%rbp
   10226:	48 83 ec 10          	sub    $0x10,%rsp
   1022a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1022e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10232:	48 89 c7             	mov    %rax,%rdi
   10235:	e8 c4 ff ff ff       	call   101fe <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   1023a:	90                   	nop
   1023b:	c9                   	leave
   1023c:	c3                   	ret
   1023d:	90                   	nop

000000000001023e <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   1023e:	55                   	push   %rbp
   1023f:	48 89 e5             	mov    %rsp,%rbp
   10242:	48 83 ec 10          	sub    $0x10,%rsp
   10246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1024a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1024e:	48 89 c7             	mov    %rax,%rdi
   10251:	e8 cc ff ff ff       	call   10222 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   10256:	90                   	nop
   10257:	c9                   	leave
   10258:	c3                   	ret
   10259:	90                   	nop

000000000001025a <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   1025a:	55                   	push   %rbp
   1025b:	48 89 e5             	mov    %rsp,%rbp
   1025e:	48 83 ec 10          	sub    $0x10,%rsp
   10262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1026a:	48 89 c7             	mov    %rax,%rdi
   1026d:	e8 cc ff ff ff       	call   1023e <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   10272:	90                   	nop
   10273:	c9                   	leave
   10274:	c3                   	ret
   10275:	90                   	nop

0000000000010276 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   10276:	55                   	push   %rbp
   10277:	48 89 e5             	mov    %rsp,%rbp
   1027a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1027e:	90                   	nop
   1027f:	5d                   	pop    %rbp
   10280:	c3                   	ret
   10281:	90                   	nop

0000000000010282 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   10282:	55                   	push   %rbp
   10283:	48 89 e5             	mov    %rsp,%rbp
   10286:	48 83 ec 10          	sub    $0x10,%rsp
   1028a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1028e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10292:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1029a:	48 89 d6             	mov    %rdx,%rsi
   1029d:	48 89 c7             	mov    %rax,%rdi
   102a0:	e8 6d 06 00 00       	call   10912 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   102a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102a9:	c9                   	leave
   102aa:	c3                   	ret
   102ab:	90                   	nop

00000000000102ac <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   102ac:	55                   	push   %rbp
   102ad:	48 89 e5             	mov    %rsp,%rbp
   102b0:	48 83 ec 10          	sub    $0x10,%rsp
   102b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   102bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   102c4:	48 89 d6             	mov    %rdx,%rsi
   102c7:	48 89 c7             	mov    %rax,%rdi
   102ca:	e8 b3 ff ff ff       	call   10282 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   102cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102d3:	c9                   	leave
   102d4:	c3                   	ret
   102d5:	90                   	nop

00000000000102d6 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   102d6:	55                   	push   %rbp
   102d7:	48 89 e5             	mov    %rsp,%rbp
   102da:	48 83 ec 10          	sub    $0x10,%rsp
   102de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   102e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102e6:	48 89 c7             	mov    %rax,%rdi
   102e9:	e8 1a 00 00 00       	call   10308 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   102ee:	84 c0                	test   %al,%al
   102f0:	74 0e                	je     10300 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   102f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102f6:	48 89 c7             	mov    %rax,%rdi
   102f9:	e8 3e 06 00 00       	call   1093c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   102fe:	eb 05                	jmp    10305 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   10300:	e8 f2 fd ff ff       	call   100f7 <_ZSt27__throw_bad_optional_accessv>
      }
   10305:	c9                   	leave
   10306:	c3                   	ret
   10307:	90                   	nop

0000000000010308 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   10308:	55                   	push   %rbp
   10309:	48 89 e5             	mov    %rsp,%rbp
   1030c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   10310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10314:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   10318:	5d                   	pop    %rbp
   10319:	c3                   	ret

000000000001031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   1031a:	55                   	push   %rbp
   1031b:	48 89 e5             	mov    %rsp,%rbp
   1031e:	48 83 ec 10          	sub    $0x10,%rsp
   10322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1032a:	48 89 c7             	mov    %rax,%rdi
   1032d:	e8 86 06 00 00       	call   109b8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   10332:	90                   	nop
   10333:	c9                   	leave
   10334:	c3                   	ret
   10335:	90                   	nop

0000000000010336 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   10336:	55                   	push   %rbp
   10337:	48 89 e5             	mov    %rsp,%rbp
   1033a:	48 83 ec 10          	sub    $0x10,%rsp
   1033e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10342:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10346:	48 89 c7             	mov    %rax,%rdi
   10349:	e8 32 06 00 00       	call   10980 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   1034e:	90                   	nop
   1034f:	c9                   	leave
   10350:	c3                   	ret
   10351:	90                   	nop

0000000000010352 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   10352:	55                   	push   %rbp
   10353:	48 89 e5             	mov    %rsp,%rbp
   10356:	48 83 ec 10          	sub    $0x10,%rsp
   1035a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1035e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10362:	48 89 c7             	mov    %rax,%rdi
   10365:	e8 cc ff ff ff       	call   10336 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   1036a:	90                   	nop
   1036b:	c9                   	leave
   1036c:	c3                   	ret
   1036d:	90                   	nop

000000000001036e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   1036e:	55                   	push   %rbp
   1036f:	48 89 e5             	mov    %rsp,%rbp
   10372:	48 83 ec 10          	sub    $0x10,%rsp
   10376:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1037a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1037e:	48 89 c7             	mov    %rax,%rdi
   10381:	e8 4e 06 00 00       	call   109d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   10386:	90                   	nop
   10387:	c9                   	leave
   10388:	c3                   	ret
   10389:	90                   	nop

000000000001038a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1038a:	55                   	push   %rbp
   1038b:	48 89 e5             	mov    %rsp,%rbp
   1038e:	48 83 ec 10          	sub    $0x10,%rsp
   10392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1039a:	48 89 c7             	mov    %rax,%rdi
   1039d:	e8 04 0e 00 00       	call   111a6 <_ZNSaIP13VkImageView_TED1Ev>
   103a2:	90                   	nop
   103a3:	c9                   	leave
   103a4:	c3                   	ret
   103a5:	90                   	nop

00000000000103a6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   103a6:	55                   	push   %rbp
   103a7:	48 89 e5             	mov    %rsp,%rbp
   103aa:	48 83 ec 10          	sub    $0x10,%rsp
   103ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103b6:	48 89 c7             	mov    %rax,%rdi
   103b9:	e8 c0 0d 00 00       	call   1117e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   103be:	90                   	nop
   103bf:	c9                   	leave
   103c0:	c3                   	ret
   103c1:	90                   	nop

00000000000103c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   103c2:	55                   	push   %rbp
   103c3:	48 89 e5             	mov    %rsp,%rbp
   103c6:	48 83 ec 10          	sub    $0x10,%rsp
   103ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103d2:	48 89 c7             	mov    %rax,%rdi
   103d5:	e8 cc ff ff ff       	call   103a6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   103da:	90                   	nop
   103db:	c9                   	leave
   103dc:	c3                   	ret
   103dd:	90                   	nop

00000000000103de <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   103de:	55                   	push   %rbp
   103df:	48 89 e5             	mov    %rsp,%rbp
   103e2:	48 83 ec 10          	sub    $0x10,%rsp
   103e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103ee:	48 89 c7             	mov    %rax,%rdi
   103f1:	e8 5e 0e 00 00       	call   11254 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   103f6:	90                   	nop
   103f7:	c9                   	leave
   103f8:	c3                   	ret
   103f9:	90                   	nop

00000000000103fa <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   103fa:	55                   	push   %rbp
   103fb:	48 89 e5             	mov    %rsp,%rbp
   103fe:	48 83 ec 10          	sub    $0x10,%rsp
   10402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1040a:	48 89 c7             	mov    %rax,%rdi
   1040d:	e8 cc ff ff ff       	call   103de <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   10412:	90                   	nop
   10413:	c9                   	leave
   10414:	c3                   	ret
   10415:	90                   	nop

0000000000010416 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   10416:	55                   	push   %rbp
   10417:	48 89 e5             	mov    %rsp,%rbp
   1041a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1041e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10422:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   10429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1042d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   10434:	00 
   10435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10439:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   10440:	00 
   10441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10445:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1044c:	00 
   1044d:	90                   	nop
   1044e:	5d                   	pop    %rbp
   1044f:	c3                   	ret

0000000000010450 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
   10450:	55                   	push   %rbp
   10451:	48 89 e5             	mov    %rsp,%rbp
   10454:	53                   	push   %rbx
   10455:	48 83 ec 38          	sub    $0x38,%rsp
   10459:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
   1045d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   10461:	e8 ca 40 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   10466:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1046a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1046e:	48 89 de             	mov    %rbx,%rsi
   10471:	48 89 c7             	mov    %rax,%rdi
   10474:	e8 5d 0f 00 00       	call   113d6 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
   10479:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
   1047d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10481:	48 89 c7             	mov    %rax,%rdi
   10484:	e8 92 0f 00 00       	call   1141b <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
   10489:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
   1048d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10491:	48 89 c7             	mov    %rax,%rdi
   10494:	e8 9d 0f 00 00       	call   11436 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
   10499:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1049d:	c9                   	leave
   1049e:	c3                   	ret
   1049f:	90                   	nop

00000000000104a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   104a0:	55                   	push   %rbp
   104a1:	48 89 e5             	mov    %rsp,%rbp
   104a4:	53                   	push   %rbx
   104a5:	48 83 ec 38          	sub    $0x38,%rsp
   104a9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   104ad:	48 89 f0             	mov    %rsi,%rax
   104b0:	48 89 d6             	mov    %rdx,%rsi
   104b3:	48 89 f2             	mov    %rsi,%rdx
   104b6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   104ba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   104be:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   104c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   104c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   104ca:	48 89 d6             	mov    %rdx,%rsi
   104cd:	48 89 c7             	mov    %rax,%rdi
   104d0:	e8 a7 10 00 00       	call   1157c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   104d5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   104d9:	48 89 c7             	mov    %rax,%rdi
   104dc:	e8 d3 10 00 00       	call   115b4 <_ZNKSt16initializer_listIPKcE3endEv>
   104e1:	48 89 c3             	mov    %rax,%rbx
   104e4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   104e8:	48 89 c7             	mov    %rax,%rdi
   104eb:	e8 b2 10 00 00       	call   115a2 <_ZNKSt16initializer_listIPKcE5beginEv>
   104f0:	48 89 c1             	mov    %rax,%rcx
   104f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   104f7:	48 89 da             	mov    %rbx,%rdx
   104fa:	48 89 ce             	mov    %rcx,%rsi
   104fd:	48 89 c7             	mov    %rax,%rdi
   10500:	e8 15 11 00 00       	call   1161a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   10505:	eb 1a                	jmp    10521 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   10507:	48 89 c3             	mov    %rax,%rbx
   1050a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1050e:	48 89 c7             	mov    %rax,%rdi
   10511:	e8 e4 7b ff ff       	call   80fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   10516:	48 89 d8             	mov    %rbx,%rax
   10519:	48 89 c7             	mov    %rax,%rdi
   1051c:	e8 cf 41 ff ff       	call   46f0 <_Unwind_Resume@plt>
   10521:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10525:	c9                   	leave
   10526:	c3                   	ret
   10527:	90                   	nop

0000000000010528 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10528:	55                   	push   %rbp
   10529:	48 89 e5             	mov    %rsp,%rbp
   1052c:	48 83 ec 10          	sub    $0x10,%rsp
   10530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10538:	48 89 c7             	mov    %rax,%rdi
   1053b:	e8 72 8a ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10540:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10547:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1054b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1054f:	48 8b 00             	mov    (%rax),%rax
   10552:	48 89 ce             	mov    %rcx,%rsi
   10555:	48 89 c7             	mov    %rax,%rdi
   10558:	e8 6c 11 00 00       	call   116c9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   1055d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10561:	48 89 c7             	mov    %rax,%rdi
   10564:	e8 91 7b ff ff       	call   80fa <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   10569:	90                   	nop
   1056a:	c9                   	leave
   1056b:	c3                   	ret

000000000001056c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1056c:	55                   	push   %rbp
   1056d:	48 89 e5             	mov    %rsp,%rbp
   10570:	48 83 ec 20          	sub    $0x20,%rsp
   10574:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10578:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1057c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10580:	48 89 d6             	mov    %rdx,%rsi
   10583:	48 89 c7             	mov    %rax,%rdi
   10586:	e8 69 11 00 00       	call   116f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1058b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1058f:	c9                   	leave
   10590:	c3                   	ret
   10591:	90                   	nop

0000000000010592 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10592:	55                   	push   %rbp
   10593:	48 89 e5             	mov    %rsp,%rbp
   10596:	48 83 ec 20          	sub    $0x20,%rsp
   1059a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1059e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105a2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   105a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   105aa:	48 89 d6             	mov    %rdx,%rsi
   105ad:	48 89 c7             	mov    %rax,%rdi
   105b0:	e8 3f 11 00 00       	call   116f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   105b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105b9:	c9                   	leave
   105ba:	c3                   	ret

00000000000105bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   105bb:	55                   	push   %rbp
   105bc:	48 89 e5             	mov    %rsp,%rbp
   105bf:	53                   	push   %rbx
   105c0:	48 83 ec 18          	sub    $0x18,%rsp
   105c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   105c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   105cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105d0:	48 89 c7             	mov    %rax,%rdi
   105d3:	e8 3a 11 00 00       	call   11712 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   105d8:	48 8b 18             	mov    (%rax),%rbx
   105db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   105df:	48 89 c7             	mov    %rax,%rdi
   105e2:	e8 2b 11 00 00       	call   11712 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   105e7:	48 8b 00             	mov    (%rax),%rax
   105ea:	48 39 c3             	cmp    %rax,%rbx
   105ed:	0f 95 c0             	setne  %al
   105f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   105f4:	c9                   	leave
   105f5:	c3                   	ret

00000000000105f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   105f6:	55                   	push   %rbp
   105f7:	48 89 e5             	mov    %rsp,%rbp
   105fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   105fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10602:	48 8b 00             	mov    (%rax),%rax
   10605:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1060d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10614:	5d                   	pop    %rbp
   10615:	c3                   	ret

0000000000010616 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10616:	55                   	push   %rbp
   10617:	48 89 e5             	mov    %rsp,%rbp
   1061a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1061e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10622:	48 8b 00             	mov    (%rax),%rax
   10625:	5d                   	pop    %rbp
   10626:	c3                   	ret
   10627:	90                   	nop

0000000000010628 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   10628:	55                   	push   %rbp
   10629:	48 89 e5             	mov    %rsp,%rbp
   1062c:	53                   	push   %rbx
   1062d:	48 83 ec 18          	sub    $0x18,%rsp
   10631:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10635:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   10639:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1063d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10641:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10645:	48 8b 40 10          	mov    0x10(%rax),%rax
   10649:	48 39 c2             	cmp    %rax,%rdx
   1064c:	74 3c                	je     1068a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   1064e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10652:	48 89 c7             	mov    %rax,%rdi
   10655:	e8 c6 10 00 00       	call   11720 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1065a:	48 89 c2             	mov    %rax,%rdx
   1065d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10661:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10665:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10669:	48 89 ce             	mov    %rcx,%rsi
   1066c:	48 89 c7             	mov    %rax,%rdi
   1066f:	e8 ba 10 00 00       	call   1172e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   10674:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10678:	48 8b 40 08          	mov    0x8(%rax),%rax
   1067c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10680:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10684:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10688:	eb 30                	jmp    106ba <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   1068a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1068e:	48 89 c7             	mov    %rax,%rdi
   10691:	e8 8a 10 00 00       	call   11720 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   10696:	48 89 c3             	mov    %rax,%rbx
   10699:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1069d:	48 89 c7             	mov    %rax,%rdi
   106a0:	e8 ed fe ff ff       	call   10592 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   106a5:	48 89 c1             	mov    %rax,%rcx
   106a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106ac:	48 89 da             	mov    %rbx,%rdx
   106af:	48 89 ce             	mov    %rcx,%rsi
   106b2:	48 89 c7             	mov    %rax,%rdi
   106b5:	e8 ae 10 00 00       	call   11768 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   106ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106be:	48 89 c7             	mov    %rax,%rdi
   106c1:	e8 34 12 00 00       	call   118fa <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   106c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   106ca:	c9                   	leave
   106cb:	c3                   	ret

00000000000106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   106cc:	55                   	push   %rbp
   106cd:	48 89 e5             	mov    %rsp,%rbp
   106d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   106d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106d8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   106dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106e0:	48 8b 00             	mov    (%rax),%rax
   106e3:	48 29 c2             	sub    %rax,%rdx
   106e6:	48 89 d0             	mov    %rdx,%rax
   106e9:	48 c1 f8 03          	sar    $0x3,%rax
   106ed:	5d                   	pop    %rbp
   106ee:	c3                   	ret
   106ef:	90                   	nop

00000000000106f0 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   106f0:	55                   	push   %rbp
   106f1:	48 89 e5             	mov    %rsp,%rbp
   106f4:	48 83 ec 10          	sub    $0x10,%rsp
   106f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   106fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10700:	48 8b 10             	mov    (%rax),%rdx
   10703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10707:	48 89 d6             	mov    %rdx,%rsi
   1070a:	48 89 c7             	mov    %rax,%rdi
   1070d:	e8 28 12 00 00       	call   1193a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10712:	c9                   	leave
   10713:	c3                   	ret

0000000000010714 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10714:	55                   	push   %rbp
   10715:	48 89 e5             	mov    %rsp,%rbp
   10718:	48 83 ec 10          	sub    $0x10,%rsp
   1071c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10724:	48 8b 10             	mov    (%rax),%rdx
   10727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1072b:	48 89 d6             	mov    %rdx,%rsi
   1072e:	48 89 c7             	mov    %rax,%rdi
   10731:	e8 04 12 00 00       	call   1193a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10736:	c9                   	leave
   10737:	c3                   	ret

0000000000010738 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10738:	55                   	push   %rbp
   10739:	48 89 e5             	mov    %rsp,%rbp
   1073c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10744:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1074c:	48 8b 00             	mov    (%rax),%rax
   1074f:	48 29 c2             	sub    %rax,%rdx
   10752:	48 c1 fa 02          	sar    $0x2,%rdx
   10756:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   1075d:	db b6 6d 
   10760:	48 0f af c2          	imul   %rdx,%rax
   10764:	5d                   	pop    %rbp
   10765:	c3                   	ret

0000000000010766 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   10766:	55                   	push   %rbp
   10767:	48 89 e5             	mov    %rsp,%rbp
   1076a:	48 83 ec 10          	sub    $0x10,%rsp
   1076e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10776:	48 89 c7             	mov    %rax,%rdi
   10779:	e8 90 8d ff ff       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   1077e:	c9                   	leave
   1077f:	c3                   	ret

0000000000010780 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   10780:	55                   	push   %rbp
   10781:	48 89 e5             	mov    %rsp,%rbp
   10784:	48 83 ec 10          	sub    $0x10,%rsp
   10788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   1078c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10790:	48 89 c7             	mov    %rax,%rdi
   10793:	e8 76 8d ff ff       	call   950e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   10798:	84 c0                	test   %al,%al
   1079a:	74 0e                	je     107aa <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   1079c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107a0:	48 89 c7             	mov    %rax,%rdi
   107a3:	e8 78 8d ff ff       	call   9520 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   107a8:	eb 05                	jmp    107af <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   107aa:	e8 48 f9 ff ff       	call   100f7 <_ZSt27__throw_bad_optional_accessv>
      }
   107af:	c9                   	leave
   107b0:	c3                   	ret
   107b1:	90                   	nop

00000000000107b2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   107b2:	55                   	push   %rbp
   107b3:	48 89 e5             	mov    %rsp,%rbp
   107b6:	48 83 ec 20          	sub    $0x20,%rsp
   107ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   107c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   107c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   107ca:	48 89 c7             	mov    %rax,%rdi
   107cd:	e8 7a 11 00 00       	call   1194c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   107d2:	8b 10                	mov    (%rax),%edx
   107d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107d8:	89 10                	mov    %edx,(%rax)
   107da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107de:	48 89 c7             	mov    %rax,%rdi
   107e1:	e8 74 11 00 00       	call   1195a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   107e6:	48 89 c1             	mov    %rax,%rcx
   107e9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   107ed:	48 8b 01             	mov    (%rcx),%rax
   107f0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   107f4:	48 89 46 04          	mov    %rax,0x4(%rsi)
   107f8:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   107fc:	48 8b 41 10          	mov    0x10(%rcx),%rax
   10800:	48 89 46 14          	mov    %rax,0x14(%rsi)
   10804:	90                   	nop
   10805:	c9                   	leave
   10806:	c3                   	ret
   10807:	90                   	nop

0000000000010808 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   10808:	55                   	push   %rbp
   10809:	48 89 e5             	mov    %rsp,%rbp
   1080c:	53                   	push   %rbx
   1080d:	48 83 ec 18          	sub    $0x18,%rsp
   10811:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10815:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   10819:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1081d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10821:	48 89 c7             	mov    %rax,%rdi
   10824:	e8 3f 11 00 00       	call   11968 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   10829:	48 89 c6             	mov    %rax,%rsi
   1082c:	48 89 df             	mov    %rbx,%rdi
   1082f:	e8 68 11 00 00       	call   1199c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   10834:	90                   	nop
   10835:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10839:	c9                   	leave
   1083a:	c3                   	ret
   1083b:	90                   	nop

000000000001083c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1083c:	55                   	push   %rbp
   1083d:	48 89 e5             	mov    %rsp,%rbp
   10840:	48 83 ec 20          	sub    $0x20,%rsp
   10844:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10848:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1084c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10850:	48 89 d6             	mov    %rdx,%rsi
   10853:	48 89 c7             	mov    %rax,%rdi
   10856:	e8 75 11 00 00       	call   119d0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1085b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1085f:	c9                   	leave
   10860:	c3                   	ret
   10861:	90                   	nop

0000000000010862 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10862:	55                   	push   %rbp
   10863:	48 89 e5             	mov    %rsp,%rbp
   10866:	48 83 ec 20          	sub    $0x20,%rsp
   1086a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1086e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10872:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10876:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1087a:	48 89 d6             	mov    %rdx,%rsi
   1087d:	48 89 c7             	mov    %rax,%rdi
   10880:	e8 4b 11 00 00       	call   119d0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10889:	c9                   	leave
   1088a:	c3                   	ret

000000000001088b <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1088b:	55                   	push   %rbp
   1088c:	48 89 e5             	mov    %rsp,%rbp
   1088f:	53                   	push   %rbx
   10890:	48 83 ec 18          	sub    $0x18,%rsp
   10894:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10898:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1089c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108a0:	48 89 c7             	mov    %rax,%rdi
   108a3:	e8 46 11 00 00       	call   119ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   108a8:	48 8b 18             	mov    (%rax),%rbx
   108ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   108af:	48 89 c7             	mov    %rax,%rdi
   108b2:	e8 37 11 00 00       	call   119ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   108b7:	48 8b 00             	mov    (%rax),%rax
   108ba:	48 39 c3             	cmp    %rax,%rbx
   108bd:	0f 95 c0             	setne  %al
   108c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   108c4:	c9                   	leave
   108c5:	c3                   	ret

00000000000108c6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   108c6:	55                   	push   %rbp
   108c7:	48 89 e5             	mov    %rsp,%rbp
   108ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   108ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108d2:	48 8b 00             	mov    (%rax),%rax
   108d5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   108d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108dd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   108e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   108e4:	5d                   	pop    %rbp
   108e5:	c3                   	ret

00000000000108e6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   108e6:	55                   	push   %rbp
   108e7:	48 89 e5             	mov    %rsp,%rbp
   108ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   108ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108f2:	48 8b 00             	mov    (%rax),%rax
   108f5:	5d                   	pop    %rbp
   108f6:	c3                   	ret
   108f7:	90                   	nop

00000000000108f8 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   108f8:	55                   	push   %rbp
   108f9:	48 89 e5             	mov    %rsp,%rbp
   108fc:	48 83 ec 10          	sub    $0x10,%rsp
   10900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10908:	48 89 c7             	mov    %rax,%rdi
   1090b:	e8 f8 f9 ff ff       	call   10308 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10910:	c9                   	leave
   10911:	c3                   	ret

0000000000010912 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   10912:	55                   	push   %rbp
   10913:	48 89 e5             	mov    %rsp,%rbp
   10916:	48 83 ec 10          	sub    $0x10,%rsp
   1091a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1091e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   10922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10926:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1092a:	48 89 d6             	mov    %rdx,%rsi
   1092d:	48 89 c7             	mov    %rax,%rdi
   10930:	e8 c7 10 00 00       	call   119fc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   10935:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10939:	c9                   	leave
   1093a:	c3                   	ret
   1093b:	90                   	nop

000000000001093c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   1093c:	55                   	push   %rbp
   1093d:	48 89 e5             	mov    %rsp,%rbp
   10940:	48 83 ec 10          	sub    $0x10,%rsp
   10944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   10948:	e8 31 41 ff ff       	call   4a7e <_ZSt23__is_constant_evaluatedv>
   1094d:	84 c0                	test   %al,%al
   1094f:	74 1a                	je     1096b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10955:	48 89 c7             	mov    %rax,%rdi
   10958:	e8 ab f9 ff ff       	call   10308 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1095d:	83 f0 01             	xor    $0x1,%eax
   10960:	84 c0                	test   %al,%al
   10962:	74 07                	je     1096b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10964:	b8 01 00 00 00       	mov    $0x1,%eax
   10969:	eb 05                	jmp    10970 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   1096b:	b8 00 00 00 00       	mov    $0x0,%eax
   10970:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   10972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10976:	48 89 c7             	mov    %rax,%rdi
   10979:	e8 10 11 00 00       	call   11a8e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   1097e:	c9                   	leave
   1097f:	c3                   	ret

0000000000010980 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   10980:	55                   	push   %rbp
   10981:	48 89 e5             	mov    %rsp,%rbp
   10984:	48 83 ec 10          	sub    $0x10,%rsp
   10988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   1098c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10990:	48 89 c7             	mov    %rax,%rdi
   10993:	e8 04 11 00 00       	call   11a9c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   10998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1099c:	48 89 c7             	mov    %rax,%rdi
   1099f:	e8 14 11 00 00       	call   11ab8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   109a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109a8:	48 83 c0 08          	add    $0x8,%rax
   109ac:	48 89 c7             	mov    %rax,%rdi
   109af:	e8 e8 f7 ff ff       	call   1019c <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   109b4:	90                   	nop
   109b5:	c9                   	leave
   109b6:	c3                   	ret
   109b7:	90                   	nop

00000000000109b8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   109b8:	55                   	push   %rbp
   109b9:	48 89 e5             	mov    %rsp,%rbp
   109bc:	48 83 ec 10          	sub    $0x10,%rsp
   109c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109c8:	48 89 c7             	mov    %rax,%rdi
   109cb:	e8 f4 10 00 00       	call   11ac4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   109d0:	90                   	nop
   109d1:	c9                   	leave
   109d2:	c3                   	ret
   109d3:	90                   	nop

00000000000109d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   109d4:	55                   	push   %rbp
   109d5:	48 89 e5             	mov    %rsp,%rbp
   109d8:	48 83 ec 10          	sub    $0x10,%rsp
   109dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   109e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109e4:	48 89 c7             	mov    %rax,%rdi
   109e7:	e8 4a 11 00 00       	call   11b36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   109ec:	48 89 c2             	mov    %rax,%rdx
   109ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109f3:	48 89 d6             	mov    %rdx,%rsi
   109f6:	48 89 c7             	mov    %rax,%rdi
   109f9:	e8 d2 10 00 00       	call   11ad0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   109fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a02:	48 89 c7             	mov    %rax,%rdi
   10a05:	e8 10 f9 ff ff       	call   1031a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   10a0a:	90                   	nop
   10a0b:	c9                   	leave
   10a0c:	c3                   	ret
   10a0d:	90                   	nop

0000000000010a0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10a0e:	55                   	push   %rbp
   10a0f:	48 89 e5             	mov    %rsp,%rbp
   10a12:	48 83 ec 20          	sub    $0x20,%rsp
   10a16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10a1a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10a1e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10a22:	48 89 d6             	mov    %rdx,%rsi
   10a25:	48 89 c7             	mov    %rax,%rdi
   10a28:	e8 23 11 00 00       	call   11b50 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a31:	c9                   	leave
   10a32:	c3                   	ret
   10a33:	90                   	nop

0000000000010a34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10a34:	55                   	push   %rbp
   10a35:	48 89 e5             	mov    %rsp,%rbp
   10a38:	48 83 ec 20          	sub    $0x20,%rsp
   10a3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10a40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a44:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10a48:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10a4c:	48 89 d6             	mov    %rdx,%rsi
   10a4f:	48 89 c7             	mov    %rax,%rdi
   10a52:	e8 f9 10 00 00       	call   11b50 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a5b:	c9                   	leave
   10a5c:	c3                   	ret

0000000000010a5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10a5d:	55                   	push   %rbp
   10a5e:	48 89 e5             	mov    %rsp,%rbp
   10a61:	53                   	push   %rbx
   10a62:	48 83 ec 18          	sub    $0x18,%rsp
   10a66:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a6a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10a6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a72:	48 89 c7             	mov    %rax,%rdi
   10a75:	e8 f4 10 00 00       	call   11b6e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   10a7a:	48 8b 18             	mov    (%rax),%rbx
   10a7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a81:	48 89 c7             	mov    %rax,%rdi
   10a84:	e8 e5 10 00 00       	call   11b6e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   10a89:	48 8b 00             	mov    (%rax),%rax
   10a8c:	48 39 c3             	cmp    %rax,%rbx
   10a8f:	0f 95 c0             	setne  %al
   10a92:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10a96:	c9                   	leave
   10a97:	c3                   	ret

0000000000010a98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10a98:	55                   	push   %rbp
   10a99:	48 89 e5             	mov    %rsp,%rbp
   10a9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aa4:	48 8b 00             	mov    (%rax),%rax
   10aa7:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   10aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ab2:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10ab9:	5d                   	pop    %rbp
   10aba:	c3                   	ret
   10abb:	90                   	nop

0000000000010abc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10abc:	55                   	push   %rbp
   10abd:	48 89 e5             	mov    %rsp,%rbp
   10ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ac8:	48 8b 00             	mov    (%rax),%rax
   10acb:	5d                   	pop    %rbp
   10acc:	c3                   	ret
   10acd:	90                   	nop

0000000000010ace <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   10ace:	55                   	push   %rbp
   10acf:	48 89 e5             	mov    %rsp,%rbp
   10ad2:	53                   	push   %rbx
   10ad3:	48 83 ec 48          	sub    $0x48,%rsp
   10ad7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   10adb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   10adf:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   10ae3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10ae7:	48 89 d6             	mov    %rdx,%rsi
   10aea:	48 89 c7             	mov    %rax,%rdi
   10aed:	e8 8a 10 00 00       	call   11b7c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   10af2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   10af6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10afa:	48 89 c7             	mov    %rax,%rdi
   10afd:	e8 a0 10 00 00       	call   11ba2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   10b02:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10b06:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10b0a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10b0e:	48 89 d6             	mov    %rdx,%rsi
   10b11:	48 89 c7             	mov    %rax,%rdi
   10b14:	e8 a3 10 00 00       	call   11bbc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   10b19:	84 c0                	test   %al,%al
   10b1b:	75 32                	jne    10b4f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   10b1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10b21:	48 89 c7             	mov    %rax,%rdi
   10b24:	e8 b5 10 00 00       	call   11bde <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   10b29:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10b2d:	48 89 c7             	mov    %rax,%rdi
   10b30:	e8 c5 10 00 00       	call   11bfa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10b35:	48 89 c2             	mov    %rax,%rdx
   10b38:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   10b3c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   10b40:	48 89 ce             	mov    %rcx,%rsi
   10b43:	48 89 c7             	mov    %rax,%rdi
   10b46:	e8 cd 10 00 00       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10b4b:	84 c0                	test   %al,%al
   10b4d:	74 07                	je     10b56 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   10b4f:	b8 01 00 00 00       	mov    $0x1,%eax
   10b54:	eb 05                	jmp    10b5b <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   10b56:	b8 00 00 00 00       	mov    $0x0,%eax
   10b5b:	84 c0                	test   %al,%al
   10b5d:	74 5d                	je     10bbc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10b5f:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   10b63:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10b67:	48 89 c7             	mov    %rax,%rdi
   10b6a:	e8 fe 09 00 00       	call   1156d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   10b6f:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10b72:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10b76:	48 89 d6             	mov    %rdx,%rsi
   10b79:	48 89 c7             	mov    %rax,%rdi
   10b7c:	e8 c0 10 00 00       	call   11c41 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   10b81:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   10b85:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10b89:	48 89 d6             	mov    %rdx,%rsi
   10b8c:	48 89 c7             	mov    %rax,%rdi
   10b8f:	e8 e2 10 00 00       	call   11c76 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   10b94:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   10b98:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10b9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ba0:	49 89 c8             	mov    %rcx,%r8
   10ba3:	48 89 d1             	mov    %rdx,%rcx
   10ba6:	48 8d 15 f3 91 00 00 	lea    0x91f3(%rip),%rdx        # 19da0 <_ZSt19piecewise_construct>
   10bad:	48 89 c6             	mov    %rax,%rsi
   10bb0:	48 89 df             	mov    %rbx,%rdi
   10bb3:	e8 dc 10 00 00       	call   11c94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   10bb8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   10bbc:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10bc0:	48 89 c7             	mov    %rax,%rdi
   10bc3:	e8 32 10 00 00       	call   11bfa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10bc8:	48 83 c0 20          	add    $0x20,%rax
      }
   10bcc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10bd0:	c9                   	leave
   10bd1:	c3                   	ret

0000000000010bd2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   10bd2:	55                   	push   %rbp
   10bd3:	48 89 e5             	mov    %rsp,%rbp
   10bd6:	48 83 ec 20          	sub    $0x20,%rsp
   10bda:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   10bde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10be2:	48 89 c7             	mov    %rax,%rdi
   10be5:	e8 cc 11 00 00       	call   11db6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   10bea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10bee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10bf2:	48 89 c7             	mov    %rax,%rdi
   10bf5:	e8 96 11 00 00       	call   11d90 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   10bfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10bfe:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10c02:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c06:	48 89 d6             	mov    %rdx,%rsi
   10c09:	48 89 c7             	mov    %rax,%rdi
   10c0c:	e8 ce 11 00 00       	call   11ddf <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10c11:	c9                   	leave
   10c12:	c3                   	ret
   10c13:	90                   	nop

0000000000010c14 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10c14:	55                   	push   %rbp
   10c15:	48 89 e5             	mov    %rsp,%rbp
   10c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c24:	48 8b 00             	mov    (%rax),%rax
   10c27:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10c2b:	48 c1 e2 03          	shl    $0x3,%rdx
   10c2f:	48 01 d0             	add    %rdx,%rax
      }
   10c32:	5d                   	pop    %rbp
   10c33:	c3                   	ret

0000000000010c34 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10c34:	55                   	push   %rbp
   10c35:	48 89 e5             	mov    %rsp,%rbp
   10c38:	48 83 ec 20          	sub    $0x20,%rsp
   10c3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10c40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c44:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c48:	48 89 d6             	mov    %rdx,%rsi
   10c4b:	48 89 c7             	mov    %rax,%rdi
   10c4e:	e8 c7 11 00 00       	call   11e1a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c57:	c9                   	leave
   10c58:	c3                   	ret
   10c59:	90                   	nop

0000000000010c5a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10c5a:	55                   	push   %rbp
   10c5b:	48 89 e5             	mov    %rsp,%rbp
   10c5e:	48 83 ec 20          	sub    $0x20,%rsp
   10c62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10c66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c6a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10c6e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c72:	48 89 d6             	mov    %rdx,%rsi
   10c75:	48 89 c7             	mov    %rax,%rdi
   10c78:	e8 9d 11 00 00       	call   11e1a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10c7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c81:	c9                   	leave
   10c82:	c3                   	ret

0000000000010c83 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10c83:	55                   	push   %rbp
   10c84:	48 89 e5             	mov    %rsp,%rbp
   10c87:	53                   	push   %rbx
   10c88:	48 83 ec 18          	sub    $0x18,%rsp
   10c8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c90:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10c94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c98:	48 89 c7             	mov    %rax,%rdi
   10c9b:	e8 98 11 00 00       	call   11e38 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10ca0:	48 8b 18             	mov    (%rax),%rbx
   10ca3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ca7:	48 89 c7             	mov    %rax,%rdi
   10caa:	e8 89 11 00 00       	call   11e38 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10caf:	48 8b 00             	mov    (%rax),%rax
   10cb2:	48 39 c3             	cmp    %rax,%rbx
   10cb5:	0f 95 c0             	setne  %al
   10cb8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10cbc:	c9                   	leave
   10cbd:	c3                   	ret

0000000000010cbe <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10cbe:	55                   	push   %rbp
   10cbf:	48 89 e5             	mov    %rsp,%rbp
   10cc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10cc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cca:	48 8b 00             	mov    (%rax),%rax
   10ccd:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cd5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10cdc:	5d                   	pop    %rbp
   10cdd:	c3                   	ret

0000000000010cde <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10cde:	55                   	push   %rbp
   10cdf:	48 89 e5             	mov    %rsp,%rbp
   10ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cea:	48 8b 00             	mov    (%rax),%rax
   10ced:	5d                   	pop    %rbp
   10cee:	c3                   	ret
   10cef:	90                   	nop

0000000000010cf0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10cf0:	55                   	push   %rbp
   10cf1:	48 89 e5             	mov    %rsp,%rbp
   10cf4:	48 83 ec 20          	sub    $0x20,%rsp
   10cf8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10cfc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10d00:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10d04:	48 89 d6             	mov    %rdx,%rsi
   10d07:	48 89 c7             	mov    %rax,%rdi
   10d0a:	e8 37 11 00 00       	call   11e46 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d13:	c9                   	leave
   10d14:	c3                   	ret
   10d15:	90                   	nop

0000000000010d16 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10d16:	55                   	push   %rbp
   10d17:	48 89 e5             	mov    %rsp,%rbp
   10d1a:	48 83 ec 20          	sub    $0x20,%rsp
   10d1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10d22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d26:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10d2a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10d2e:	48 89 d6             	mov    %rdx,%rsi
   10d31:	48 89 c7             	mov    %rax,%rdi
   10d34:	e8 0d 11 00 00       	call   11e46 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10d39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d3d:	c9                   	leave
   10d3e:	c3                   	ret

0000000000010d3f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10d3f:	55                   	push   %rbp
   10d40:	48 89 e5             	mov    %rsp,%rbp
   10d43:	53                   	push   %rbx
   10d44:	48 83 ec 18          	sub    $0x18,%rsp
   10d48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10d4c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10d50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d54:	48 89 c7             	mov    %rax,%rdi
   10d57:	e8 08 11 00 00       	call   11e64 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10d5c:	48 8b 18             	mov    (%rax),%rbx
   10d5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d63:	48 89 c7             	mov    %rax,%rdi
   10d66:	e8 f9 10 00 00       	call   11e64 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10d6b:	48 8b 00             	mov    (%rax),%rax
   10d6e:	48 39 c3             	cmp    %rax,%rbx
   10d71:	0f 95 c0             	setne  %al
   10d74:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10d78:	c9                   	leave
   10d79:	c3                   	ret

0000000000010d7a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10d7a:	55                   	push   %rbp
   10d7b:	48 89 e5             	mov    %rsp,%rbp
   10d7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d86:	48 8b 00             	mov    (%rax),%rax
   10d89:	48 8d 50 04          	lea    0x4(%rax),%rdx
   10d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d91:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10d98:	5d                   	pop    %rbp
   10d99:	c3                   	ret

0000000000010d9a <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10d9a:	55                   	push   %rbp
   10d9b:	48 89 e5             	mov    %rsp,%rbp
   10d9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10da6:	48 8b 00             	mov    (%rax),%rax
   10da9:	5d                   	pop    %rbp
   10daa:	c3                   	ret
   10dab:	90                   	nop

0000000000010dac <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   10dac:	55                   	push   %rbp
   10dad:	48 89 e5             	mov    %rsp,%rbp
   10db0:	48 83 ec 20          	sub    $0x20,%rsp
   10db4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10db8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   10dbc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   10dc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10dc4:	48 89 c7             	mov    %rax,%rdi
   10dc7:	e8 a6 10 00 00       	call   11e72 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   10dcc:	48 89 c2             	mov    %rax,%rdx
   10dcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10dd3:	48 89 d6             	mov    %rdx,%rsi
   10dd6:	48 89 c7             	mov    %rax,%rdi
   10dd9:	e8 a2 10 00 00       	call   11e80 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   10dde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   10de2:	c9                   	leave
   10de3:	c3                   	ret

0000000000010de4 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10de4:	55                   	push   %rbp
   10de5:	48 89 e5             	mov    %rsp,%rbp
   10de8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10df0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10df4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10df8:	48 8b 00             	mov    (%rax),%rax
   10dfb:	48 29 c2             	sub    %rax,%rdx
   10dfe:	48 89 d0             	mov    %rdx,%rax
   10e01:	48 c1 f8 03          	sar    $0x3,%rax
   10e05:	5d                   	pop    %rbp
   10e06:	c3                   	ret
   10e07:	90                   	nop

0000000000010e08 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   10e08:	55                   	push   %rbp
   10e09:	48 89 e5             	mov    %rsp,%rbp
   10e0c:	48 83 ec 10          	sub    $0x10,%rsp
   10e10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   10e18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e1c:	48 89 c7             	mov    %rax,%rdi
   10e1f:	e8 fe 10 00 00       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10e24:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10e28:	0f 92 c0             	setb   %al
   10e2b:	84 c0                	test   %al,%al
   10e2d:	74 24                	je     10e53 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   10e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e33:	48 89 c7             	mov    %rax,%rdi
   10e36:	e8 e7 10 00 00       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10e3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10e3f:	48 29 c2             	sub    %rax,%rdx
   10e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e46:	48 89 d6             	mov    %rdx,%rsi
   10e49:	48 89 c7             	mov    %rax,%rdi
   10e4c:	e8 f5 10 00 00       	call   11f46 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   10e51:	eb 38                	jmp    10e8b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   10e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e57:	48 89 c7             	mov    %rax,%rdi
   10e5a:	e8 c3 10 00 00       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10e5f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   10e63:	0f 92 c0             	setb   %al
   10e66:	84 c0                	test   %al,%al
   10e68:	74 21                	je     10e8b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   10e6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e6e:	48 8b 00             	mov    (%rax),%rax
   10e71:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10e75:	48 c1 e2 03          	shl    $0x3,%rdx
   10e79:	48 01 c2             	add    %rax,%rdx
   10e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e80:	48 89 d6             	mov    %rdx,%rsi
   10e83:	48 89 c7             	mov    %rax,%rdi
   10e86:	e8 c5 12 00 00       	call   12150 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   10e8b:	90                   	nop
   10e8c:	c9                   	leave
   10e8d:	c3                   	ret

0000000000010e8e <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10e8e:	55                   	push   %rbp
   10e8f:	48 89 e5             	mov    %rsp,%rbp
   10e92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e9e:	48 8b 00             	mov    (%rax),%rax
   10ea1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10ea5:	48 c1 e2 03          	shl    $0x3,%rdx
   10ea9:	48 01 d0             	add    %rdx,%rax
      }
   10eac:	5d                   	pop    %rbp
   10ead:	c3                   	ret

0000000000010eae <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10eae:	55                   	push   %rbp
   10eaf:	48 89 e5             	mov    %rsp,%rbp
   10eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10eb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ebe:	48 8b 00             	mov    (%rax),%rax
   10ec1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10ec5:	48 c1 e2 03          	shl    $0x3,%rdx
   10ec9:	48 01 d0             	add    %rdx,%rax
      }
   10ecc:	5d                   	pop    %rbp
   10ecd:	c3                   	ret

0000000000010ece <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   10ece:	55                   	push   %rbp
   10ecf:	48 89 e5             	mov    %rsp,%rbp
   10ed2:	48 83 ec 10          	sub    $0x10,%rsp
   10ed6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ede:	48 89 c7             	mov    %rax,%rdi
   10ee1:	e8 ca 12 00 00       	call   121b0 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   10ee6:	90                   	nop
   10ee7:	c9                   	leave
   10ee8:	c3                   	ret
   10ee9:	90                   	nop

0000000000010eea <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10eea:	55                   	push   %rbp
   10eeb:	48 89 e5             	mov    %rsp,%rbp
   10eee:	48 83 ec 10          	sub    $0x10,%rsp
   10ef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10efa:	48 89 c7             	mov    %rax,%rdi
   10efd:	e8 ba 12 00 00       	call   121bc <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   10f02:	90                   	nop
   10f03:	c9                   	leave
   10f04:	c3                   	ret
   10f05:	90                   	nop

0000000000010f06 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   10f06:	55                   	push   %rbp
   10f07:	48 89 e5             	mov    %rsp,%rbp
   10f0a:	53                   	push   %rbx
   10f0b:	48 83 ec 38          	sub    $0x38,%rsp
   10f0f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10f13:	48 89 f0             	mov    %rsi,%rax
   10f16:	48 89 d6             	mov    %rdx,%rsi
   10f19:	48 89 f2             	mov    %rsi,%rdx
   10f1c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10f20:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10f24:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   10f28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f2c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10f30:	48 89 d6             	mov    %rdx,%rsi
   10f33:	48 89 c7             	mov    %rax,%rdi
   10f36:	e8 a9 12 00 00       	call   121e4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   10f3b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10f3f:	48 89 c7             	mov    %rax,%rdi
   10f42:	e8 2d 13 00 00       	call   12274 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   10f47:	48 89 c3             	mov    %rax,%rbx
   10f4a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10f4e:	48 89 c7             	mov    %rax,%rdi
   10f51:	e8 0c 13 00 00       	call   12262 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   10f56:	48 89 c1             	mov    %rax,%rcx
   10f59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f5d:	48 89 da             	mov    %rbx,%rdx
   10f60:	48 89 ce             	mov    %rcx,%rsi
   10f63:	48 89 c7             	mov    %rax,%rdi
   10f66:	e8 7d 13 00 00       	call   122e8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   10f6b:	eb 1a                	jmp    10f87 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   10f6d:	48 89 c3             	mov    %rax,%rbx
   10f70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f74:	48 89 c7             	mov    %rax,%rdi
   10f77:	e8 8e 12 00 00       	call   1220a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   10f7c:	48 89 d8             	mov    %rbx,%rax
   10f7f:	48 89 c7             	mov    %rax,%rdi
   10f82:	e8 69 37 ff ff       	call   46f0 <_Unwind_Resume@plt>
   10f87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10f8b:	c9                   	leave
   10f8c:	c3                   	ret
   10f8d:	90                   	nop

0000000000010f8e <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10f8e:	55                   	push   %rbp
   10f8f:	48 89 e5             	mov    %rsp,%rbp
   10f92:	48 83 ec 10          	sub    $0x10,%rsp
   10f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f9e:	48 89 c7             	mov    %rax,%rdi
   10fa1:	e8 fc 13 00 00       	call   123a2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   10fa6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10fa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fad:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10fb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fb5:	48 8b 00             	mov    (%rax),%rax
   10fb8:	48 89 ce             	mov    %rcx,%rsi
   10fbb:	48 89 c7             	mov    %rax,%rdi
   10fbe:	e8 ed 13 00 00       	call   123b0 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   10fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fc7:	48 89 c7             	mov    %rax,%rdi
   10fca:	e8 3b 12 00 00       	call   1220a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   10fcf:	90                   	nop
   10fd0:	c9                   	leave
   10fd1:	c3                   	ret

0000000000010fd2 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   10fd2:	55                   	push   %rbp
   10fd3:	48 89 e5             	mov    %rsp,%rbp
   10fd6:	48 83 ec 10          	sub    $0x10,%rsp
   10fda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fe2:	48 89 c7             	mov    %rax,%rdi
   10fe5:	e8 3a 14 00 00       	call   12424 <_ZNSaIP12VkPipeline_TED1Ev>
   10fea:	90                   	nop
   10feb:	c9                   	leave
   10fec:	c3                   	ret

0000000000010fed <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   10fed:	55                   	push   %rbp
   10fee:	48 89 e5             	mov    %rsp,%rbp
   10ff1:	41 54                	push   %r12
   10ff3:	53                   	push   %rbx
   10ff4:	48 83 ec 40          	sub    $0x40,%rsp
   10ff8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10ffc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11000:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11004:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   11008:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   1100c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11010:	48 89 c7             	mov    %rax,%rdi
   11013:	e8 c2 13 00 00       	call   123da <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   11018:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   1101b:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   1101e:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11022:	48 89 c7             	mov    %rax,%rdi
   11025:	e8 de 13 00 00       	call   12408 <_ZNSaIP12VkPipeline_TEC1Ev>
   1102a:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   1102e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11032:	48 89 de             	mov    %rbx,%rsi
   11035:	48 89 c7             	mov    %rax,%rdi
   11038:	e8 03 14 00 00       	call   12440 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   1103d:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11041:	48 89 c7             	mov    %rax,%rdi
   11044:	e8 db 13 00 00       	call   12424 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   11049:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1104d:	48 89 c7             	mov    %rax,%rdi
   11050:	e8 85 14 00 00       	call   124da <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   11055:	48 89 c3             	mov    %rax,%rbx
   11058:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1105c:	48 89 c7             	mov    %rax,%rdi
   1105f:	e8 52 14 00 00       	call   124b6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   11064:	48 89 c1             	mov    %rax,%rcx
   11067:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   1106b:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1106e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   11072:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11076:	49 89 d9             	mov    %rbx,%r9
   11079:	49 89 f8             	mov    %rdi,%r8
   1107c:	48 89 c7             	mov    %rax,%rdi
   1107f:	e8 dc 30 ff ff       	call   4160 <vkCreateGraphicsPipelines@plt>
   11084:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   11087:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   1108b:	74 7f                	je     1110c <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   1108d:	bf 10 00 00 00       	mov    $0x10,%edi
   11092:	e8 d9 30 ff ff       	call   4170 <__cxa_allocate_exception@plt>
   11097:	48 89 c3             	mov    %rax,%rbx
   1109a:	48 8d 05 01 8c 00 00 	lea    0x8c01(%rip),%rax        # 19ca2 <_ZN6__pstl9execution2v1L5unseqE+0x373>
   110a1:	48 89 c6             	mov    %rax,%rsi
   110a4:	48 89 df             	mov    %rbx,%rdi
   110a7:	e8 54 30 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
   110ac:	48 8b 05 f5 4e 01 00 	mov    0x14ef5(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   110b3:	48 89 c2             	mov    %rax,%rdx
   110b6:	48 8d 05 83 4c 01 00 	lea    0x14c83(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   110bd:	48 89 c6             	mov    %rax,%rsi
   110c0:	48 89 df             	mov    %rbx,%rdi
   110c3:	e8 c8 35 ff ff       	call   4690 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   110c8:	48 89 c3             	mov    %rax,%rbx
   110cb:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   110cf:	48 89 c7             	mov    %rax,%rdi
   110d2:	e8 4d 13 00 00       	call   12424 <_ZNSaIP12VkPipeline_TED1Ev>
   110d7:	48 89 d8             	mov    %rbx,%rax
   110da:	48 89 c7             	mov    %rax,%rdi
   110dd:	e8 0e 36 ff ff       	call   46f0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   110e2:	49 89 c4             	mov    %rax,%r12
   110e5:	48 89 df             	mov    %rbx,%rdi
   110e8:	e8 53 31 ff ff       	call   4240 <__cxa_free_exception@plt>
   110ed:	4c 89 e3             	mov    %r12,%rbx
   110f0:	eb 03                	jmp    110f5 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   110f2:	48 89 c3             	mov    %rax,%rbx
   110f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   110f9:	48 89 c7             	mov    %rax,%rdi
   110fc:	e8 19 00 00 00       	call   1111a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   11101:	48 89 d8             	mov    %rbx,%rax
   11104:	48 89 c7             	mov    %rax,%rdi
   11107:	e8 e4 35 ff ff       	call   46f0 <_Unwind_Resume@plt>
  return pipelines;
   1110c:	90                   	nop
}
   1110d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11111:	48 83 c4 40          	add    $0x40,%rsp
   11115:	5b                   	pop    %rbx
   11116:	41 5c                	pop    %r12
   11118:	5d                   	pop    %rbp
   11119:	c3                   	ret

000000000001111a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1111a:	55                   	push   %rbp
   1111b:	48 89 e5             	mov    %rsp,%rbp
   1111e:	48 83 ec 10          	sub    $0x10,%rsp
   11122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1112a:	48 89 c7             	mov    %rax,%rdi
   1112d:	e8 1a 14 00 00       	call   1254c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11132:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11139:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1113d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11141:	48 8b 00             	mov    (%rax),%rax
   11144:	48 89 ce             	mov    %rcx,%rsi
   11147:	48 89 c7             	mov    %rax,%rdi
   1114a:	e8 0b 14 00 00       	call   1255a <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   1114f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11153:	48 89 c7             	mov    %rax,%rdi
   11156:	e8 a3 13 00 00       	call   124fe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   1115b:	90                   	nop
   1115c:	c9                   	leave
   1115d:	c3                   	ret

000000000001115e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   1115e:	55                   	push   %rbp
   1115f:	48 89 e5             	mov    %rsp,%rbp
   11162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11166:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1116a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1116e:	48 8b 00             	mov    (%rax),%rax
   11171:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11175:	48 c1 e2 03          	shl    $0x3,%rdx
   11179:	48 01 d0             	add    %rdx,%rax
      }
   1117c:	5d                   	pop    %rbp
   1117d:	c3                   	ret

000000000001117e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1117e:	55                   	push   %rbp
   1117f:	48 89 e5             	mov    %rsp,%rbp
   11182:	48 83 ec 10          	sub    $0x10,%rsp
   11186:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1118a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1118e:	48 89 c7             	mov    %rax,%rdi
   11191:	e8 ee 13 00 00       	call   12584 <_ZNSaIP13VkImageView_TEC1Ev>
   11196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1119a:	48 89 c7             	mov    %rax,%rdi
   1119d:	e8 fe 13 00 00       	call   125a0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   111a2:	90                   	nop
   111a3:	c9                   	leave
   111a4:	c3                   	ret
   111a5:	90                   	nop

00000000000111a6 <_ZNSaIP13VkImageView_TED1Ev>:
   111a6:	55                   	push   %rbp
   111a7:	48 89 e5             	mov    %rsp,%rbp
   111aa:	48 83 ec 10          	sub    $0x10,%rsp
   111ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111b6:	48 89 c7             	mov    %rax,%rdi
   111b9:	e8 10 14 00 00       	call   125ce <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   111be:	90                   	nop
   111bf:	c9                   	leave
   111c0:	c3                   	ret
   111c1:	90                   	nop

00000000000111c2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   111c2:	55                   	push   %rbp
   111c3:	48 89 e5             	mov    %rsp,%rbp
   111c6:	48 83 ec 10          	sub    $0x10,%rsp
   111ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   111ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111d2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   111d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111da:	48 8b 00             	mov    (%rax),%rax
   111dd:	48 29 c2             	sub    %rax,%rdx
   111e0:	48 89 d0             	mov    %rdx,%rax
   111e3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   111e7:	48 89 c2             	mov    %rax,%rdx
   111ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111ee:	48 8b 08             	mov    (%rax),%rcx
   111f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111f5:	48 89 ce             	mov    %rcx,%rsi
   111f8:	48 89 c7             	mov    %rax,%rdi
   111fb:	e8 da 13 00 00       	call   125da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   11200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11204:	48 89 c7             	mov    %rax,%rdi
   11207:	e8 7e f1 ff ff       	call   1038a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   1120c:	90                   	nop
   1120d:	c9                   	leave
   1120e:	c3                   	ret
   1120f:	90                   	nop

0000000000011210 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11210:	55                   	push   %rbp
   11211:	48 89 e5             	mov    %rsp,%rbp
   11214:	48 83 ec 10          	sub    $0x10,%rsp
   11218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1121c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11220:	48 89 c7             	mov    %rax,%rdi
   11223:	e8 e8 13 00 00       	call   12610 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11228:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1122b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1122f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11237:	48 8b 00             	mov    (%rax),%rax
   1123a:	48 89 ce             	mov    %rcx,%rsi
   1123d:	48 89 c7             	mov    %rax,%rdi
   11240:	e8 d9 13 00 00       	call   1261e <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   11245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11249:	48 89 c7             	mov    %rax,%rdi
   1124c:	e8 71 ff ff ff       	call   111c2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   11251:	90                   	nop
   11252:	c9                   	leave
   11253:	c3                   	ret

0000000000011254 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11254:	55                   	push   %rbp
   11255:	48 89 e5             	mov    %rsp,%rbp
   11258:	48 83 ec 10          	sub    $0x10,%rsp
   1125c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11264:	48 89 c7             	mov    %rax,%rdi
   11267:	e8 54 77 ff ff       	call   89c0 <_ZNSaIP9VkImage_TEC1Ev>
   1126c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11270:	48 89 c7             	mov    %rax,%rdi
   11273:	e8 e4 9c ff ff       	call   af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11278:	90                   	nop
   11279:	c9                   	leave
   1127a:	c3                   	ret
   1127b:	90                   	nop

000000000001127c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1127c:	55                   	push   %rbp
   1127d:	48 89 e5             	mov    %rsp,%rbp
   11280:	48 83 ec 20          	sub    $0x20,%rsp
   11284:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11288:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1128c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11290:	48 89 d6             	mov    %rdx,%rsi
   11293:	48 89 c7             	mov    %rax,%rdi
   11296:	e8 ad 13 00 00       	call   12648 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1129b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1129f:	c9                   	leave
   112a0:	c3                   	ret
   112a1:	90                   	nop

00000000000112a2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   112a2:	55                   	push   %rbp
   112a3:	48 89 e5             	mov    %rsp,%rbp
   112a6:	48 83 ec 20          	sub    $0x20,%rsp
   112aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   112ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112b2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   112b6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   112ba:	48 89 d6             	mov    %rdx,%rsi
   112bd:	48 89 c7             	mov    %rax,%rdi
   112c0:	e8 83 13 00 00       	call   12648 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   112c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112c9:	c9                   	leave
   112ca:	c3                   	ret

00000000000112cb <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   112cb:	55                   	push   %rbp
   112cc:	48 89 e5             	mov    %rsp,%rbp
   112cf:	53                   	push   %rbx
   112d0:	48 83 ec 18          	sub    $0x18,%rsp
   112d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   112d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   112dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112e0:	48 89 c7             	mov    %rax,%rdi
   112e3:	e8 7e 13 00 00       	call   12666 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   112e8:	48 8b 18             	mov    (%rax),%rbx
   112eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   112ef:	48 89 c7             	mov    %rax,%rdi
   112f2:	e8 6f 13 00 00       	call   12666 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   112f7:	48 8b 00             	mov    (%rax),%rax
   112fa:	48 39 c3             	cmp    %rax,%rbx
   112fd:	0f 95 c0             	setne  %al
   11300:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11304:	c9                   	leave
   11305:	c3                   	ret

0000000000011306 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11306:	55                   	push   %rbp
   11307:	48 89 e5             	mov    %rsp,%rbp
   1130a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1130e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11312:	48 8b 00             	mov    (%rax),%rax
   11315:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11319:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1131d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11324:	5d                   	pop    %rbp
   11325:	c3                   	ret

0000000000011326 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11326:	55                   	push   %rbp
   11327:	48 89 e5             	mov    %rsp,%rbp
   1132a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1132e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11332:	48 8b 00             	mov    (%rax),%rax
   11335:	5d                   	pop    %rbp
   11336:	c3                   	ret
   11337:	90                   	nop

0000000000011338 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
   11338:	55                   	push   %rbp
   11339:	48 89 e5             	mov    %rsp,%rbp
   1133c:	53                   	push   %rbx
   1133d:	48 83 ec 18          	sub    $0x18,%rsp
   11341:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11345:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11349:	48 89 c7             	mov    %rax,%rdi
   1134c:	e8 23 13 00 00       	call   12674 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
   11351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11355:	48 83 c0 08          	add    $0x8,%rax
   11359:	48 89 c7             	mov    %rax,%rdi
   1135c:	e8 3f 32 ff ff       	call   45a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
   11361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11365:	48 83 c0 08          	add    $0x8,%rax
   11369:	48 8d 15 4e 89 00 00 	lea    0x894e(%rip),%rdx        # 19cbe <_ZN6__pstl9execution2v1L5unseqE+0x38f>
   11370:	48 89 d6             	mov    %rdx,%rsi
   11373:	48 89 c7             	mov    %rax,%rdi
   11376:	e8 f5 31 ff ff       	call   4570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
   1137b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1137f:	e8 ac 31 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11384:	48 89 03             	mov    %rax,(%rbx)
  }
   11387:	eb 1e                	jmp    113a7 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
   11389:	48 89 c3             	mov    %rax,%rbx
   1138c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11390:	48 83 c0 08          	add    $0x8,%rax
   11394:	48 89 c7             	mov    %rax,%rdi
   11397:	e8 44 2e ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1139c:	48 89 d8             	mov    %rbx,%rax
   1139f:	48 89 c7             	mov    %rax,%rdi
   113a2:	e8 49 33 ff ff       	call   46f0 <_Unwind_Resume@plt>
   113a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   113ab:	c9                   	leave
   113ac:	c3                   	ret
   113ad:	90                   	nop

00000000000113ae <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
   113ae:	55                   	push   %rbp
   113af:	48 89 e5             	mov    %rsp,%rbp
   113b2:	48 83 ec 20          	sub    $0x20,%rsp
   113b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
   113ba:	e8 71 31 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   113bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
   113c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113c7:	48 83 c0 08          	add    $0x8,%rax
   113cb:	48 89 c7             	mov    %rax,%rdi
   113ce:	e8 0d 2e ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   113d3:	90                   	nop
   113d4:	c9                   	leave
   113d5:	c3                   	ret

00000000000113d6 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   113d6:	55                   	push   %rbp
   113d7:	48 89 e5             	mov    %rsp,%rbp
   113da:	48 83 ec 20          	sub    $0x20,%rsp
   113de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   113e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   113ea:	48 89 c7             	mov    %rax,%rdi
   113ed:	e8 a2 12 00 00       	call   12694 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   113f2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   113f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113fa:	48 89 c7             	mov    %rax,%rdi
   113fd:	e8 92 12 00 00       	call   12694 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11402:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11406:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1140a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1140e:	48 89 d6             	mov    %rdx,%rsi
   11411:	48 89 c7             	mov    %rax,%rdi
   11414:	e8 8c 12 00 00       	call   126a5 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   11419:	c9                   	leave
   1141a:	c3                   	ret

000000000001141b <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   1141b:	55                   	push   %rbp
   1141c:	48 89 e5             	mov    %rsp,%rbp
   1141f:	48 83 ec 10          	sub    $0x10,%rsp
   11423:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   11427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1142b:	48 89 c7             	mov    %rax,%rdi
   1142e:	e8 db 12 00 00       	call   1270e <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   11433:	c9                   	leave
   11434:	c3                   	ret
   11435:	90                   	nop

0000000000011436 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   11436:	55                   	push   %rbp
   11437:	48 89 e5             	mov    %rsp,%rbp
   1143a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   1143e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11442:	48 8b 00             	mov    (%rax),%rax
   11445:	5d                   	pop    %rbp
   11446:	c3                   	ret
   11447:	90                   	nop

0000000000011448 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
   11448:	55                   	push   %rbp
   11449:	48 89 e5             	mov    %rsp,%rbp
   1144c:	53                   	push   %rbx
   1144d:	48 83 ec 18          	sub    $0x18,%rsp
   11451:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11455:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11459:	e8 d2 30 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   1145e:	48 89 03             	mov    %rax,(%rbx)
   11461:	90                   	nop
   11462:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11466:	c9                   	leave
   11467:	c3                   	ret

0000000000011468 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   11468:	55                   	push   %rbp
   11469:	48 89 e5             	mov    %rsp,%rbp
   1146c:	48 83 ec 20          	sub    $0x20,%rsp
   11470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11474:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11478:	89 d0                	mov    %edx,%eax
   1147a:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   1147d:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   11481:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11485:	be 01 00 00 00       	mov    $0x1,%esi
   1148a:	48 89 c7             	mov    %rax,%rdi
   1148d:	e8 7e 2f ff ff       	call   4410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   11492:	48 89 c7             	mov    %rax,%rdi
   11495:	e8 d3 00 00 00       	call   1156d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1149a:	48 89 c2             	mov    %rax,%rdx
   1149d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114a1:	48 89 d6             	mov    %rdx,%rsi
   114a4:	48 89 c7             	mov    %rax,%rdi
   114a7:	e8 24 2d ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   114ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114b0:	c9                   	leave
   114b1:	c3                   	ret

00000000000114b2 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   114b2:	55                   	push   %rbp
   114b3:	48 89 e5             	mov    %rsp,%rbp
   114b6:	48 83 ec 20          	sub    $0x20,%rsp
   114ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   114be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   114c2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   114c6:	48 89 d6             	mov    %rdx,%rsi
   114c9:	48 89 c7             	mov    %rax,%rdi
   114cc:	e8 97 12 00 00       	call   12768 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   114d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114d5:	c9                   	leave
   114d6:	c3                   	ret
   114d7:	90                   	nop

00000000000114d8 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   114d8:	55                   	push   %rbp
   114d9:	48 89 e5             	mov    %rsp,%rbp
   114dc:	48 83 ec 20          	sub    $0x20,%rsp
   114e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   114e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114e8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   114ec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   114f0:	48 89 d6             	mov    %rdx,%rsi
   114f3:	48 89 c7             	mov    %rax,%rdi
   114f6:	e8 6d 12 00 00       	call   12768 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   114fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114ff:	c9                   	leave
   11500:	c3                   	ret

0000000000011501 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11501:	55                   	push   %rbp
   11502:	48 89 e5             	mov    %rsp,%rbp
   11505:	53                   	push   %rbx
   11506:	48 83 ec 18          	sub    $0x18,%rsp
   1150a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1150e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11512:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11516:	48 89 c7             	mov    %rax,%rdi
   11519:	e8 68 12 00 00       	call   12786 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1151e:	48 8b 18             	mov    (%rax),%rbx
   11521:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11525:	48 89 c7             	mov    %rax,%rdi
   11528:	e8 59 12 00 00       	call   12786 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1152d:	48 8b 00             	mov    (%rax),%rax
   11530:	48 39 c3             	cmp    %rax,%rbx
   11533:	0f 95 c0             	setne  %al
   11536:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1153a:	c9                   	leave
   1153b:	c3                   	ret

000000000001153c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1153c:	55                   	push   %rbp
   1153d:	48 89 e5             	mov    %rsp,%rbp
   11540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11548:	48 8b 00             	mov    (%rax),%rax
   1154b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1154f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11553:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1155a:	5d                   	pop    %rbp
   1155b:	c3                   	ret

000000000001155c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1155c:	55                   	push   %rbp
   1155d:	48 89 e5             	mov    %rsp,%rbp
   11560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11568:	48 8b 00             	mov    (%rax),%rax
   1156b:	5d                   	pop    %rbp
   1156c:	c3                   	ret

000000000001156d <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   1156d:	55                   	push   %rbp
   1156e:	48 89 e5             	mov    %rsp,%rbp
   11571:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11575:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11579:	5d                   	pop    %rbp
   1157a:	c3                   	ret
   1157b:	90                   	nop

000000000001157c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1157c:	55                   	push   %rbp
   1157d:	48 89 e5             	mov    %rsp,%rbp
   11580:	48 83 ec 10          	sub    $0x10,%rsp
   11584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11588:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1158c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11590:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11594:	48 89 d6             	mov    %rdx,%rsi
   11597:	48 89 c7             	mov    %rax,%rdi
   1159a:	e8 9d 88 ff ff       	call   9e3c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   1159f:	90                   	nop
   115a0:	c9                   	leave
   115a1:	c3                   	ret

00000000000115a2 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   115a2:	55                   	push   %rbp
   115a3:	48 89 e5             	mov    %rsp,%rbp
   115a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115ae:	48 8b 00             	mov    (%rax),%rax
   115b1:	5d                   	pop    %rbp
   115b2:	c3                   	ret
   115b3:	90                   	nop

00000000000115b4 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   115b4:	55                   	push   %rbp
   115b5:	48 89 e5             	mov    %rsp,%rbp
   115b8:	53                   	push   %rbx
   115b9:	48 83 ec 18          	sub    $0x18,%rsp
   115bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   115c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115c5:	48 89 c7             	mov    %rax,%rdi
   115c8:	e8 d5 ff ff ff       	call   115a2 <_ZNKSt16initializer_listIPKcE5beginEv>
   115cd:	48 89 c3             	mov    %rax,%rbx
   115d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115d4:	48 89 c7             	mov    %rax,%rdi
   115d7:	e8 b8 11 00 00       	call   12794 <_ZNKSt16initializer_listIPKcE4sizeEv>
   115dc:	48 c1 e0 03          	shl    $0x3,%rax
   115e0:	48 01 d8             	add    %rbx,%rax
   115e3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   115e7:	c9                   	leave
   115e8:	c3                   	ret

00000000000115e9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   115e9:	55                   	push   %rbp
   115ea:	48 89 e5             	mov    %rsp,%rbp
   115ed:	48 83 ec 10          	sub    $0x10,%rsp
   115f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   115f9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   115fd:	48 89 c7             	mov    %rax,%rdi
   11600:	e8 a1 11 00 00       	call   127a6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   11605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11609:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1160d:	48 89 d6             	mov    %rdx,%rsi
   11610:	48 89 c7             	mov    %rax,%rdi
   11613:	e8 99 11 00 00       	call   127b1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   11618:	c9                   	leave
   11619:	c3                   	ret

000000000001161a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1161a:	55                   	push   %rbp
   1161b:	48 89 e5             	mov    %rsp,%rbp
   1161e:	53                   	push   %rbx
   1161f:	48 83 ec 38          	sub    $0x38,%rsp
   11623:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11627:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1162b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1162f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11633:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11637:	48 89 d6             	mov    %rdx,%rsi
   1163a:	48 89 c7             	mov    %rax,%rdi
   1163d:	e8 a7 ff ff ff       	call   115e9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   11642:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   11646:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1164a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1164e:	48 89 c7             	mov    %rax,%rdi
   11651:	e8 5c 79 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11656:	48 89 c2             	mov    %rax,%rdx
   11659:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1165d:	48 89 d6             	mov    %rdx,%rsi
   11660:	48 89 c7             	mov    %rax,%rdi
   11663:	e8 4b 78 ff ff       	call   8eb3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   11668:	48 89 c6             	mov    %rax,%rsi
   1166b:	48 89 df             	mov    %rbx,%rdi
   1166e:	e8 55 93 ff ff       	call   a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   11673:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11677:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1167a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1167e:	48 8b 00             	mov    (%rax),%rax
   11681:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11685:	48 c1 e2 03          	shl    $0x3,%rdx
   11689:	48 01 c2             	add    %rax,%rdx
   1168c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11690:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   11694:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11698:	48 89 c7             	mov    %rax,%rdi
   1169b:	e8 12 79 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   116a0:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   116a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116a7:	48 8b 10             	mov    (%rax),%rdx
   116aa:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   116ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   116b2:	48 89 c7             	mov    %rax,%rdi
   116b5:	e8 11 11 00 00       	call   127cb <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   116ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   116be:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   116c2:	90                   	nop
   116c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   116c7:	c9                   	leave
   116c8:	c3                   	ret

00000000000116c9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   116c9:	55                   	push   %rbp
   116ca:	48 89 e5             	mov    %rsp,%rbp
   116cd:	48 83 ec 20          	sub    $0x20,%rsp
   116d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   116d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   116d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   116dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   116e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116e5:	48 89 d6             	mov    %rdx,%rsi
   116e8:	48 89 c7             	mov    %rax,%rdi
   116eb:	e8 0c 11 00 00       	call   127fc <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   116f0:	90                   	nop
   116f1:	c9                   	leave
   116f2:	c3                   	ret
   116f3:	90                   	nop

00000000000116f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   116f4:	55                   	push   %rbp
   116f5:	48 89 e5             	mov    %rsp,%rbp
   116f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   116fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11700:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11704:	48 8b 10             	mov    (%rax),%rdx
   11707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1170b:	48 89 10             	mov    %rdx,(%rax)
   1170e:	90                   	nop
   1170f:	5d                   	pop    %rbp
   11710:	c3                   	ret
   11711:	90                   	nop

0000000000011712 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11712:	55                   	push   %rbp
   11713:	48 89 e5             	mov    %rsp,%rbp
   11716:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1171a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1171e:	5d                   	pop    %rbp
   1171f:	c3                   	ret

0000000000011720 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11720:	55                   	push   %rbp
   11721:	48 89 e5             	mov    %rsp,%rbp
   11724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1172c:	5d                   	pop    %rbp
   1172d:	c3                   	ret

000000000001172e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1172e:	55                   	push   %rbp
   1172f:	48 89 e5             	mov    %rsp,%rbp
   11732:	48 83 ec 20          	sub    $0x20,%rsp
   11736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1173a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1173e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   11742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11746:	48 89 c7             	mov    %rax,%rdi
   11749:	e8 d2 ff ff ff       	call   11720 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1174e:	48 89 c2             	mov    %rax,%rdx
   11751:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11759:	48 89 ce             	mov    %rcx,%rsi
   1175c:	48 89 c7             	mov    %rax,%rdi
   1175f:	e8 be 10 00 00       	call   12822 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   11764:	90                   	nop
   11765:	c9                   	leave
   11766:	c3                   	ret
   11767:	90                   	nop

0000000000011768 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   11768:	55                   	push   %rbp
   11769:	48 89 e5             	mov    %rsp,%rbp
   1176c:	53                   	push   %rbx
   1176d:	48 83 ec 68          	sub    $0x68,%rsp
   11771:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   11775:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   11779:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1177d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11781:	48 8d 15 3a 85 00 00 	lea    0x853a(%rip),%rdx        # 19cc2 <_ZN6__pstl9execution2v1L5unseqE+0x393>
   11788:	be 01 00 00 00       	mov    $0x1,%esi
   1178d:	48 89 c7             	mov    %rax,%rdi
   11790:	e8 cf 10 00 00       	call   12864 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   11795:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   11799:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1179d:	48 8b 00             	mov    (%rax),%rax
   117a0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   117a4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   117ac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   117b0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117b4:	48 89 c7             	mov    %rax,%rdi
   117b7:	e8 b0 ed ff ff       	call   1056c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   117bc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   117c0:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   117c4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   117c8:	48 89 d6             	mov    %rdx,%rsi
   117cb:	48 89 c7             	mov    %rax,%rdi
   117ce:	e8 59 11 00 00       	call   1292c <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   117d3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   117d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   117df:	48 89 d6             	mov    %rdx,%rsi
   117e2:	48 89 c7             	mov    %rax,%rdi
   117e5:	e8 de 91 ff ff       	call   a9c8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   117ea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   117ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   117f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   117f6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   117fa:	48 89 c7             	mov    %rax,%rdi
   117fd:	e8 1e ff ff ff       	call   11720 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11802:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   11805:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11809:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11810:	00 
	  _Alloc_traits::construct(this->_M_impl,
   11811:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11815:	48 01 c1             	add    %rax,%rcx
   11818:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1181c:	48 89 ce             	mov    %rcx,%rsi
   1181f:	48 89 c7             	mov    %rax,%rdi
   11822:	e8 07 ff ff ff       	call   1172e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   11827:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   1182e:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   1182f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11833:	48 89 c7             	mov    %rax,%rdi
   11836:	e8 77 77 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1183b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   1183e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11842:	48 89 c7             	mov    %rax,%rdi
   11845:	e8 c8 fe ff ff       	call   11712 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1184a:	48 8b 30             	mov    (%rax),%rsi
   1184d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11851:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11855:	48 89 d9             	mov    %rbx,%rcx
   11858:	48 89 c7             	mov    %rax,%rdi
   1185b:	e8 0e 11 00 00       	call   1296e <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11860:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   11864:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   11869:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1186d:	48 89 c7             	mov    %rax,%rdi
   11870:	e8 3d 77 ff ff       	call   8fb2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11875:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   11878:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1187c:	48 89 c7             	mov    %rax,%rdi
   1187f:	e8 8e fe ff ff       	call   11712 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11884:	48 8b 00             	mov    (%rax),%rax
   11887:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1188b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1188f:	48 89 d9             	mov    %rbx,%rcx
   11892:	48 89 c7             	mov    %rax,%rdi
   11895:	e8 d4 10 00 00       	call   1296e <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1189a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   1189e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   118a2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   118a6:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   118aa:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   118ae:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   118b2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   118b6:	48 89 ce             	mov    %rcx,%rsi
   118b9:	48 89 c7             	mov    %rax,%rdi
   118bc:	e8 25 77 ff ff       	call   8fe6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   118c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   118c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   118c9:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   118cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   118d0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   118d4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   118d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118dc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   118e3:	00 
   118e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   118e8:	48 01 c2             	add    %rax,%rdx
   118eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   118ef:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   118f3:	90                   	nop
   118f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   118f8:	c9                   	leave
   118f9:	c3                   	ret

00000000000118fa <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   118fa:	55                   	push   %rbp
   118fb:	48 89 e5             	mov    %rsp,%rbp
   118fe:	48 83 ec 20          	sub    $0x20,%rsp
   11902:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   11906:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1190a:	48 89 c7             	mov    %rax,%rdi
   1190d:	e8 80 ec ff ff       	call   10592 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11912:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11916:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1191a:	be 01 00 00 00       	mov    $0x1,%esi
   1191f:	48 89 c7             	mov    %rax,%rdi
   11922:	e8 79 10 00 00       	call   129a0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   11927:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1192b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1192f:	48 89 c7             	mov    %rax,%rdi
   11932:	e8 df ec ff ff       	call   10616 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   11937:	c9                   	leave
   11938:	c3                   	ret
   11939:	90                   	nop

000000000001193a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1193a:	55                   	push   %rbp
   1193b:	48 89 e5             	mov    %rsp,%rbp
   1193e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11942:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   11946:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1194a:	5d                   	pop    %rbp
   1194b:	c3                   	ret

000000000001194c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1194c:	55                   	push   %rbp
   1194d:	48 89 e5             	mov    %rsp,%rbp
   11950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11958:	5d                   	pop    %rbp
   11959:	c3                   	ret

000000000001195a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1195a:	55                   	push   %rbp
   1195b:	48 89 e5             	mov    %rsp,%rbp
   1195e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11966:	5d                   	pop    %rbp
   11967:	c3                   	ret

0000000000011968 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11968:	55                   	push   %rbp
   11969:	48 89 e5             	mov    %rsp,%rbp
   1196c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11974:	5d                   	pop    %rbp
   11975:	c3                   	ret

0000000000011976 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   11976:	55                   	push   %rbp
   11977:	48 89 e5             	mov    %rsp,%rbp
   1197a:	48 83 ec 20          	sub    $0x20,%rsp
   1197e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11982:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   11986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1198a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1198e:	48 89 d6             	mov    %rdx,%rsi
   11991:	48 89 c7             	mov    %rax,%rdi
   11994:	e8 49 10 00 00       	call   129e2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   11999:	90                   	nop
   1199a:	c9                   	leave
   1199b:	c3                   	ret

000000000001199c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   1199c:	55                   	push   %rbp
   1199d:	48 89 e5             	mov    %rsp,%rbp
   119a0:	53                   	push   %rbx
   119a1:	48 83 ec 18          	sub    $0x18,%rsp
   119a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   119a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   119ad:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   119b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119b5:	48 89 c7             	mov    %rax,%rdi
   119b8:	e8 ab ff ff ff       	call   11968 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   119bd:	48 89 c6             	mov    %rax,%rsi
   119c0:	48 89 df             	mov    %rbx,%rdi
   119c3:	e8 ae ff ff ff       	call   11976 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   119c8:	90                   	nop
   119c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   119cd:	c9                   	leave
   119ce:	c3                   	ret
   119cf:	90                   	nop

00000000000119d0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   119d0:	55                   	push   %rbp
   119d1:	48 89 e5             	mov    %rsp,%rbp
   119d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   119dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   119e0:	48 8b 10             	mov    (%rax),%rdx
   119e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119e7:	48 89 10             	mov    %rdx,(%rax)
   119ea:	90                   	nop
   119eb:	5d                   	pop    %rbp
   119ec:	c3                   	ret
   119ed:	90                   	nop

00000000000119ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   119ee:	55                   	push   %rbp
   119ef:	48 89 e5             	mov    %rsp,%rbp
   119f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   119f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119fa:	5d                   	pop    %rbp
   119fb:	c3                   	ret

00000000000119fc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   119fc:	55                   	push   %rbp
   119fd:	48 89 e5             	mov    %rsp,%rbp
   11a00:	53                   	push   %rbx
   11a01:	48 83 ec 18          	sub    $0x18,%rsp
   11a05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11a09:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   11a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a11:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   11a15:	84 c0                	test   %al,%al
   11a17:	74 35                	je     11a4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   11a19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a1d:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   11a21:	84 c0                	test   %al,%al
   11a23:	74 29                	je     11a4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   11a25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a29:	48 89 c7             	mov    %rax,%rdi
   11a2c:	e8 ed 0f 00 00       	call   12a1e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   11a31:	48 89 c3             	mov    %rax,%rbx
   11a34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a38:	48 89 c7             	mov    %rax,%rdi
   11a3b:	e8 4e 00 00 00       	call   11a8e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   11a40:	48 89 de             	mov    %rbx,%rsi
   11a43:	48 89 c7             	mov    %rax,%rdi
   11a46:	e8 e1 0f 00 00       	call   12a2c <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   11a4b:	90                   	nop
      }
   11a4c:	eb 38                	jmp    11a86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   11a4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a52:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   11a56:	84 c0                	test   %al,%al
   11a58:	74 20                	je     11a7a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   11a5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a5e:	48 89 c7             	mov    %rax,%rdi
   11a61:	e8 b8 0f 00 00       	call   12a1e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   11a66:	48 89 c2             	mov    %rax,%rdx
   11a69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a6d:	48 89 d6             	mov    %rdx,%rsi
   11a70:	48 89 c7             	mov    %rax,%rdi
   11a73:	e8 f2 0f 00 00       	call   12a6a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   11a78:	eb 0c                	jmp    11a86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   11a7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a7e:	48 89 c7             	mov    %rax,%rdi
   11a81:	e8 2a 10 00 00       	call   12ab0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   11a86:	90                   	nop
   11a87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11a8b:	c9                   	leave
   11a8c:	c3                   	ret
   11a8d:	90                   	nop

0000000000011a8e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   11a8e:	55                   	push   %rbp
   11a8f:	48 89 e5             	mov    %rsp,%rbp
   11a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   11a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a9a:	5d                   	pop    %rbp
   11a9b:	c3                   	ret

0000000000011a9c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   11a9c:	55                   	push   %rbp
   11a9d:	48 89 e5             	mov    %rsp,%rbp
   11aa0:	48 83 ec 10          	sub    $0x10,%rsp
   11aa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aac:	48 89 c7             	mov    %rax,%rdi
   11aaf:	e8 24 10 00 00       	call   12ad8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   11ab4:	90                   	nop
   11ab5:	c9                   	leave
   11ab6:	c3                   	ret
   11ab7:	90                   	nop

0000000000011ab8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   11ab8:	55                   	push   %rbp
   11ab9:	48 89 e5             	mov    %rsp,%rbp
   11abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   11ac0:	90                   	nop
   11ac1:	5d                   	pop    %rbp
   11ac2:	c3                   	ret
   11ac3:	90                   	nop

0000000000011ac4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   11ac4:	55                   	push   %rbp
   11ac5:	48 89 e5             	mov    %rsp,%rbp
   11ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11acc:	90                   	nop
   11acd:	5d                   	pop    %rbp
   11ace:	c3                   	ret
   11acf:	90                   	nop

0000000000011ad0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11ad0:	55                   	push   %rbp
   11ad1:	48 89 e5             	mov    %rsp,%rbp
   11ad4:	48 83 ec 20          	sub    $0x20,%rsp
   11ad8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11adc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   11ae0:	eb 49                	jmp    11b2b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   11ae2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ae6:	48 89 c7             	mov    %rax,%rdi
   11ae9:	e8 f5 0f 00 00       	call   12ae3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   11aee:	48 89 c2             	mov    %rax,%rdx
   11af1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11af5:	48 89 d6             	mov    %rdx,%rsi
   11af8:	48 89 c7             	mov    %rax,%rdi
   11afb:	e8 d0 ff ff ff       	call   11ad0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   11b00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b04:	48 89 c7             	mov    %rax,%rdi
   11b07:	e8 e9 0f 00 00       	call   12af5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   11b0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   11b10:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11b14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b18:	48 89 d6             	mov    %rdx,%rsi
   11b1b:	48 89 c7             	mov    %rax,%rdi
   11b1e:	e8 e5 0f 00 00       	call   12b08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   11b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b27:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   11b2b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   11b30:	75 b0                	jne    11ae2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   11b32:	90                   	nop
   11b33:	90                   	nop
   11b34:	c9                   	leave
   11b35:	c3                   	ret

0000000000011b36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   11b36:	55                   	push   %rbp
   11b37:	48 89 e5             	mov    %rsp,%rbp
   11b3a:	48 83 ec 10          	sub    $0x10,%rsp
   11b3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   11b42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b46:	48 89 c7             	mov    %rax,%rdi
   11b49:	e8 f4 0f 00 00       	call   12b42 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   11b4e:	c9                   	leave
   11b4f:	c3                   	ret

0000000000011b50 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11b50:	55                   	push   %rbp
   11b51:	48 89 e5             	mov    %rsp,%rbp
   11b54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11b5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b60:	48 8b 10             	mov    (%rax),%rdx
   11b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b67:	48 89 10             	mov    %rdx,(%rax)
   11b6a:	90                   	nop
   11b6b:	5d                   	pop    %rbp
   11b6c:	c3                   	ret
   11b6d:	90                   	nop

0000000000011b6e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11b6e:	55                   	push   %rbp
   11b6f:	48 89 e5             	mov    %rsp,%rbp
   11b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b7a:	5d                   	pop    %rbp
   11b7b:	c3                   	ret

0000000000011b7c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   11b7c:	55                   	push   %rbp
   11b7d:	48 89 e5             	mov    %rsp,%rbp
   11b80:	48 83 ec 10          	sub    $0x10,%rsp
   11b84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   11b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11b94:	48 89 d6             	mov    %rdx,%rsi
   11b97:	48 89 c7             	mov    %rax,%rdi
   11b9a:	e8 b5 0f 00 00       	call   12b54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   11b9f:	c9                   	leave
   11ba0:	c3                   	ret
   11ba1:	90                   	nop

0000000000011ba2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11ba2:	55                   	push   %rbp
   11ba3:	48 89 e5             	mov    %rsp,%rbp
   11ba6:	48 83 ec 10          	sub    $0x10,%rsp
   11baa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   11bae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bb2:	48 89 c7             	mov    %rax,%rdi
   11bb5:	e8 e6 0f 00 00       	call   12ba0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   11bba:	c9                   	leave
   11bbb:	c3                   	ret

0000000000011bbc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   11bbc:	55                   	push   %rbp
   11bbd:	48 89 e5             	mov    %rsp,%rbp
   11bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11bc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   11bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bcc:	48 8b 10             	mov    (%rax),%rdx
   11bcf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11bd3:	48 8b 00             	mov    (%rax),%rax
   11bd6:	48 39 c2             	cmp    %rax,%rdx
   11bd9:	0f 94 c0             	sete   %al
   11bdc:	5d                   	pop    %rbp
   11bdd:	c3                   	ret

0000000000011bde <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   11bde:	55                   	push   %rbp
   11bdf:	48 89 e5             	mov    %rsp,%rbp
   11be2:	48 83 ec 10          	sub    $0x10,%rsp
   11be6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   11bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bee:	48 89 c7             	mov    %rax,%rdi
   11bf1:	e8 d4 0f 00 00       	call   12bca <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   11bf6:	90                   	nop
   11bf7:	c9                   	leave
   11bf8:	c3                   	ret
   11bf9:	90                   	nop

0000000000011bfa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11bfa:	55                   	push   %rbp
   11bfb:	48 89 e5             	mov    %rsp,%rbp
   11bfe:	48 83 ec 10          	sub    $0x10,%rsp
   11c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   11c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c0a:	48 8b 00             	mov    (%rax),%rax
   11c0d:	48 89 c7             	mov    %rax,%rdi
   11c10:	e8 c1 0f 00 00       	call   12bd6 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   11c15:	c9                   	leave
   11c16:	c3                   	ret
   11c17:	90                   	nop

0000000000011c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   11c18:	55                   	push   %rbp
   11c19:	48 89 e5             	mov    %rsp,%rbp
   11c1c:	48 83 ec 20          	sub    $0x20,%rsp
   11c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11c28:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   11c2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11c30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c34:	48 89 d6             	mov    %rdx,%rsi
   11c37:	48 89 c7             	mov    %rax,%rdi
   11c3a:	e8 b5 0f 00 00       	call   12bf4 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   11c3f:	c9                   	leave
   11c40:	c3                   	ret

0000000000011c41 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   11c41:	55                   	push   %rbp
   11c42:	48 89 e5             	mov    %rsp,%rbp
   11c45:	48 83 ec 10          	sub    $0x10,%rsp
   11c49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   11c51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c55:	48 89 c7             	mov    %rax,%rdi
   11c58:	e8 bf 0f 00 00       	call   12c1c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   11c5d:	48 89 c2             	mov    %rax,%rdx
   11c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c64:	48 89 d6             	mov    %rdx,%rsi
   11c67:	48 89 c7             	mov    %rax,%rdi
   11c6a:	e8 bb 0f 00 00       	call   12c2a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   11c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c73:	c9                   	leave
   11c74:	c3                   	ret
   11c75:	90                   	nop

0000000000011c76 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   11c76:	55                   	push   %rbp
   11c77:	48 89 e5             	mov    %rsp,%rbp
   11c7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   11c82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c86:	48 8b 10             	mov    (%rax),%rdx
   11c89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c8d:	48 89 10             	mov    %rdx,(%rax)
   11c90:	90                   	nop
   11c91:	5d                   	pop    %rbp
   11c92:	c3                   	ret
   11c93:	90                   	nop

0000000000011c94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11c94:	55                   	push   %rbp
   11c95:	48 89 e5             	mov    %rsp,%rbp
   11c98:	41 54                	push   %r12
   11c9a:	53                   	push   %rbx
   11c9b:	48 83 ec 60          	sub    $0x60,%rsp
   11c9f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11ca3:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   11ca7:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   11cab:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   11caf:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   11cb3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11cb7:	48 89 c7             	mov    %rax,%rdi
   11cba:	e8 ba 0f 00 00       	call   12c79 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   11cbf:	49 89 c4             	mov    %rax,%r12
   11cc2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11cc6:	48 89 c7             	mov    %rax,%rdi
   11cc9:	e8 9d 0f 00 00       	call   12c6b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   11cce:	48 89 c3             	mov    %rax,%rbx
   11cd1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11cd5:	48 89 c7             	mov    %rax,%rdi
   11cd8:	e8 80 0f 00 00       	call   12c5d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   11cdd:	48 89 c2             	mov    %rax,%rdx
   11ce0:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   11ce4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11ce8:	4d 89 e0             	mov    %r12,%r8
   11ceb:	48 89 d9             	mov    %rbx,%rcx
   11cee:	48 89 c7             	mov    %rax,%rdi
   11cf1:	e8 92 0f 00 00       	call   12c88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   11cf6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11cfa:	48 89 c7             	mov    %rax,%rdi
   11cfd:	e8 86 14 00 00       	call   13188 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   11d02:	48 89 c2             	mov    %rax,%rdx
   11d05:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   11d09:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11d0d:	48 89 ce             	mov    %rcx,%rsi
   11d10:	48 89 c7             	mov    %rax,%rdi
   11d13:	e8 22 10 00 00       	call   12d3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   11d18:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11d1c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   11d20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11d24:	48 85 c0             	test   %rax,%rax
   11d27:	74 1c                	je     11d45 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   11d29:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11d2d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11d31:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11d35:	48 89 ce             	mov    %rcx,%rsi
   11d38:	48 89 c7             	mov    %rax,%rdi
   11d3b:	e8 66 14 00 00       	call   131a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   11d40:	48 89 c3             	mov    %rax,%rbx
   11d43:	eb 17                	jmp    11d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   11d45:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11d49:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   11d4d:	48 89 d6             	mov    %rdx,%rsi
   11d50:	48 89 c7             	mov    %rax,%rdi
   11d53:	e8 a4 14 00 00       	call   131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   11d58:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   11d5c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11d60:	48 89 c7             	mov    %rax,%rdi
   11d63:	e8 9c 0f 00 00       	call   12d04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11d68:	48 89 d8             	mov    %rbx,%rax
   11d6b:	eb 1a                	jmp    11d87 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   11d6d:	48 89 c3             	mov    %rax,%rbx
   11d70:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11d74:	48 89 c7             	mov    %rax,%rdi
   11d77:	e8 88 0f 00 00       	call   12d04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11d7c:	48 89 d8             	mov    %rbx,%rax
   11d7f:	48 89 c7             	mov    %rax,%rdi
   11d82:	e8 69 29 ff ff       	call   46f0 <_Unwind_Resume@plt>
   11d87:	48 83 c4 60          	add    $0x60,%rsp
   11d8b:	5b                   	pop    %rbx
   11d8c:	41 5c                	pop    %r12
   11d8e:	5d                   	pop    %rbp
   11d8f:	c3                   	ret

0000000000011d90 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   11d90:	55                   	push   %rbp
   11d91:	48 89 e5             	mov    %rsp,%rbp
   11d94:	48 83 ec 20          	sub    $0x20,%rsp
   11d98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   11d9c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11da0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11da4:	48 89 d6             	mov    %rdx,%rsi
   11da7:	48 89 c7             	mov    %rax,%rdi
   11daa:	e8 67 14 00 00       	call   13216 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11db3:	c9                   	leave
   11db4:	c3                   	ret
   11db5:	90                   	nop

0000000000011db6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   11db6:	55                   	push   %rbp
   11db7:	48 89 e5             	mov    %rsp,%rbp
   11dba:	48 83 ec 20          	sub    $0x20,%rsp
   11dbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   11dc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11dc6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11dca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11dce:	48 89 d6             	mov    %rdx,%rsi
   11dd1:	48 89 c7             	mov    %rax,%rdi
   11dd4:	e8 3d 14 00 00       	call   13216 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11dd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ddd:	c9                   	leave
   11dde:	c3                   	ret

0000000000011ddf <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   11ddf:	55                   	push   %rbp
   11de0:	48 89 e5             	mov    %rsp,%rbp
   11de3:	53                   	push   %rbx
   11de4:	48 83 ec 18          	sub    $0x18,%rsp
   11de8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11dec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   11df0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11df4:	48 89 c7             	mov    %rax,%rdi
   11df7:	e8 38 14 00 00       	call   13234 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11dfc:	48 8b 18             	mov    (%rax),%rbx
   11dff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11e03:	48 89 c7             	mov    %rax,%rdi
   11e06:	e8 29 14 00 00       	call   13234 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11e0b:	48 8b 00             	mov    (%rax),%rax
   11e0e:	48 39 c3             	cmp    %rax,%rbx
   11e11:	0f 94 c0             	sete   %al
   11e14:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11e18:	c9                   	leave
   11e19:	c3                   	ret

0000000000011e1a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11e1a:	55                   	push   %rbp
   11e1b:	48 89 e5             	mov    %rsp,%rbp
   11e1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11e26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11e2a:	48 8b 10             	mov    (%rax),%rdx
   11e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e31:	48 89 10             	mov    %rdx,(%rax)
   11e34:	90                   	nop
   11e35:	5d                   	pop    %rbp
   11e36:	c3                   	ret
   11e37:	90                   	nop

0000000000011e38 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11e38:	55                   	push   %rbp
   11e39:	48 89 e5             	mov    %rsp,%rbp
   11e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e44:	5d                   	pop    %rbp
   11e45:	c3                   	ret

0000000000011e46 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11e46:	55                   	push   %rbp
   11e47:	48 89 e5             	mov    %rsp,%rbp
   11e4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11e52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11e56:	48 8b 10             	mov    (%rax),%rdx
   11e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e5d:	48 89 10             	mov    %rdx,(%rax)
   11e60:	90                   	nop
   11e61:	5d                   	pop    %rbp
   11e62:	c3                   	ret
   11e63:	90                   	nop

0000000000011e64 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11e64:	55                   	push   %rbp
   11e65:	48 89 e5             	mov    %rsp,%rbp
   11e68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e70:	5d                   	pop    %rbp
   11e71:	c3                   	ret

0000000000011e72 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   11e72:	55                   	push   %rbp
   11e73:	48 89 e5             	mov    %rsp,%rbp
   11e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e7e:	5d                   	pop    %rbp
   11e7f:	c3                   	ret

0000000000011e80 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   11e80:	55                   	push   %rbp
   11e81:	48 89 e5             	mov    %rsp,%rbp
   11e84:	53                   	push   %rbx
   11e85:	48 83 ec 38          	sub    $0x38,%rsp
   11e89:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11e8d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   11e91:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11e95:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11e99:	48 89 d6             	mov    %rdx,%rsi
   11e9c:	48 89 c7             	mov    %rax,%rdi
   11e9f:	e8 9e 13 00 00       	call   13242 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   11ea4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   11ea8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11eac:	48 89 d6             	mov    %rdx,%rsi
   11eaf:	48 89 c7             	mov    %rax,%rdi
   11eb2:	e8 bf 13 00 00       	call   13276 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   11eb7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11ebb:	48 89 c7             	mov    %rax,%rdi
   11ebe:	e8 19 6b ff ff       	call   89dc <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   11ec3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ec7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11ecb:	48 89 d6             	mov    %rdx,%rsi
   11ece:	48 89 c7             	mov    %rax,%rdi
   11ed1:	e8 c6 13 00 00       	call   1329c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   11ed6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11eda:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11ede:	48 89 d6             	mov    %rdx,%rsi
   11ee1:	48 89 c7             	mov    %rax,%rdi
   11ee4:	e8 b3 13 00 00       	call   1329c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   11ee9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11eed:	48 89 c7             	mov    %rax,%rdi
   11ef0:	e8 9b 7b ff ff       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11ef5:	48 89 c3             	mov    %rax,%rbx
   11ef8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11efc:	48 89 c7             	mov    %rax,%rdi
   11eff:	e8 8c 7b ff ff       	call   9a90 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11f04:	48 89 de             	mov    %rbx,%rsi
   11f07:	48 89 c7             	mov    %rax,%rdi
   11f0a:	e8 e5 13 00 00       	call   132f4 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   11f0f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11f13:	48 89 c7             	mov    %rax,%rdi
   11f16:	e8 53 6b ff ff       	call   8a6e <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   11f1b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11f1f:	c9                   	leave
   11f20:	c3                   	ret
   11f21:	90                   	nop

0000000000011f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11f22:	55                   	push   %rbp
   11f23:	48 89 e5             	mov    %rsp,%rbp
   11f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f2e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11f32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f36:	48 8b 00             	mov    (%rax),%rax
   11f39:	48 29 c2             	sub    %rax,%rdx
   11f3c:	48 89 d0             	mov    %rdx,%rax
   11f3f:	48 c1 f8 03          	sar    $0x3,%rax
   11f43:	5d                   	pop    %rbp
   11f44:	c3                   	ret
   11f45:	90                   	nop

0000000000011f46 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   11f46:	55                   	push   %rbp
   11f47:	48 89 e5             	mov    %rsp,%rbp
   11f4a:	53                   	push   %rbx
   11f4b:	48 83 ec 38          	sub    $0x38,%rsp
   11f4f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11f53:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   11f57:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   11f5c:	0f 84 e7 01 00 00    	je     12149 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   11f62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f66:	48 89 c7             	mov    %rax,%rdi
   11f69:	e8 b4 ff ff ff       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11f6e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11f72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f76:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   11f7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f7e:	48 8b 40 08          	mov    0x8(%rax),%rax
   11f82:	48 29 c2             	sub    %rax,%rdx
   11f85:	48 89 d0             	mov    %rdx,%rax
   11f88:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11f8c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   11f90:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f94:	48 89 c7             	mov    %rax,%rdi
   11f97:	e8 78 13 00 00       	call   13314 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11f9c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11fa0:	72 16                	jb     11fb8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   11fa2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fa6:	48 89 c7             	mov    %rax,%rdi
   11fa9:	e8 66 13 00 00       	call   13314 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11fae:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11fb2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   11fb6:	73 07                	jae    11fbf <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   11fb8:	b8 01 00 00 00       	mov    $0x1,%eax
   11fbd:	eb 05                	jmp    11fc4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   11fbf:	b8 00 00 00 00       	mov    $0x0,%eax
   11fc4:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   11fc6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11fca:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   11fce:	72 33                	jb     12003 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   11fd0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fd4:	48 89 c7             	mov    %rax,%rdi
   11fd7:	e8 34 06 00 00       	call   12610 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11fdc:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   11fdf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fe3:	48 8b 40 08          	mov    0x8(%rax),%rax
   11fe7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11feb:	48 89 ce             	mov    %rcx,%rsi
   11fee:	48 89 c7             	mov    %rax,%rdi
   11ff1:	e8 40 13 00 00       	call   13336 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   11ff6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11ffa:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   11ffe:	e9 46 01 00 00       	jmp    12149 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   12003:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   12007:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1200b:	48 8d 15 ca 7c 00 00 	lea    0x7cca(%rip),%rdx        # 19cdc <_ZN6__pstl9execution2v1L5unseqE+0x3ad>
   12012:	48 89 ce             	mov    %rcx,%rsi
   12015:	48 89 c7             	mov    %rax,%rdi
   12018:	e8 43 13 00 00       	call   13360 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   1201d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   12021:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12025:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12029:	48 89 d6             	mov    %rdx,%rsi
   1202c:	48 89 c7             	mov    %rax,%rdi
   1202f:	e8 f4 13 00 00       	call   13428 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   12034:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   12038:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1203c:	48 89 c7             	mov    %rax,%rdi
   1203f:	e8 cc 05 00 00       	call   12610 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12044:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   12047:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1204b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   12052:	00 
   12053:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12057:	48 01 c1             	add    %rax,%rcx
   1205a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1205e:	48 89 c6             	mov    %rax,%rsi
   12061:	48 89 cf             	mov    %rcx,%rdi
   12064:	e8 cd 12 00 00       	call   13336 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   12069:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1206d:	48 89 c7             	mov    %rax,%rdi
   12070:	e8 9b 05 00 00       	call   12610 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12075:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   12078:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1207c:	48 8b 70 08          	mov    0x8(%rax),%rsi
   12080:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12084:	48 8b 00             	mov    (%rax),%rax
   12087:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1208b:	48 89 c7             	mov    %rax,%rdi
   1208e:	e8 c8 13 00 00       	call   1345b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   12093:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   12097:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1209b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1209f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   120a3:	48 8b 12             	mov    (%rdx),%rdx
   120a6:	48 29 d1             	sub    %rdx,%rcx
   120a9:	48 c1 f9 03          	sar    $0x3,%rcx
   120ad:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   120b0:	48 89 d6             	mov    %rdx,%rsi
   120b3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   120b7:	48 8b 0a             	mov    (%rdx),%rcx
   120ba:	48 89 f2             	mov    %rsi,%rdx
   120bd:	48 89 ce             	mov    %rcx,%rsi
   120c0:	48 89 c7             	mov    %rax,%rdi
   120c3:	e8 12 05 00 00       	call   125da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   120c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   120cc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   120d0:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   120d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   120d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   120db:	48 01 d0             	add    %rdx,%rax
   120de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   120e5:	00 
   120e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   120ea:	48 01 c2             	add    %rax,%rdx
   120ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   120f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   120f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   120f9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12100:	00 
   12101:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12105:	48 01 c2             	add    %rax,%rdx
   12108:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1210c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12110:	eb 37                	jmp    12149 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   12112:	48 89 c7             	mov    %rax,%rdi
   12115:	e8 06 20 ff ff       	call   4120 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1211a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1211e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12122:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   12126:	48 89 ce             	mov    %rcx,%rsi
   12129:	48 89 c7             	mov    %rax,%rdi
   1212c:	e8 a9 04 00 00       	call   125da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   12131:	e8 9a 24 ff ff       	call   45d0 <__cxa_rethrow@plt>
		  __catch(...)
   12136:	48 89 c3             	mov    %rax,%rbx
   12139:	e8 32 25 ff ff       	call   4670 <__cxa_end_catch@plt>
   1213e:	48 89 d8             	mov    %rbx,%rax
   12141:	48 89 c7             	mov    %rax,%rdi
   12144:	e8 a7 25 ff ff       	call   46f0 <_Unwind_Resume@plt>
    }
   12149:	90                   	nop
   1214a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1214e:	c9                   	leave
   1214f:	c3                   	ret

0000000000012150 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   12150:	55                   	push   %rbp
   12151:	48 89 e5             	mov    %rsp,%rbp
   12154:	48 83 ec 20          	sub    $0x20,%rsp
   12158:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1215c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   12160:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12164:	48 8b 40 08          	mov    0x8(%rax),%rax
   12168:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1216c:	48 c1 f8 03          	sar    $0x3,%rax
   12170:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12174:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12179:	74 32                	je     121ad <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1217b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1217f:	48 89 c7             	mov    %rax,%rdi
   12182:	e8 89 04 00 00       	call   12610 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12187:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1218a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1218e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12192:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12196:	48 89 ce             	mov    %rcx,%rsi
   12199:	48 89 c7             	mov    %rax,%rdi
   1219c:	e8 7d 04 00 00       	call   1261e <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   121a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121a5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   121a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   121ad:	90                   	nop
   121ae:	c9                   	leave
   121af:	c3                   	ret

00000000000121b0 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   121b0:	55                   	push   %rbp
   121b1:	48 89 e5             	mov    %rsp,%rbp
   121b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121b8:	90                   	nop
   121b9:	5d                   	pop    %rbp
   121ba:	c3                   	ret
   121bb:	90                   	nop

00000000000121bc <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   121bc:	55                   	push   %rbp
   121bd:	48 89 e5             	mov    %rsp,%rbp
   121c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121c4:	90                   	nop
   121c5:	5d                   	pop    %rbp
   121c6:	c3                   	ret
   121c7:	90                   	nop

00000000000121c8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   121c8:	55                   	push   %rbp
   121c9:	48 89 e5             	mov    %rsp,%rbp
   121cc:	48 83 ec 10          	sub    $0x10,%rsp
   121d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121d8:	48 89 c7             	mov    %rax,%rdi
   121db:	e8 0a ed ff ff       	call   10eea <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   121e0:	90                   	nop
   121e1:	c9                   	leave
   121e2:	c3                   	ret
   121e3:	90                   	nop

00000000000121e4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   121e4:	55                   	push   %rbp
   121e5:	48 89 e5             	mov    %rsp,%rbp
   121e8:	48 83 ec 10          	sub    $0x10,%rsp
   121ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   121f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   121fc:	48 89 d6             	mov    %rdx,%rsi
   121ff:	48 89 c7             	mov    %rax,%rdi
   12202:	e8 87 12 00 00       	call   1348e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   12207:	90                   	nop
   12208:	c9                   	leave
   12209:	c3                   	ret

000000000001220a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1220a:	55                   	push   %rbp
   1220b:	48 89 e5             	mov    %rsp,%rbp
   1220e:	48 83 ec 10          	sub    $0x10,%rsp
   12212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1221a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1221e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12222:	48 8b 00             	mov    (%rax),%rax
   12225:	48 29 c2             	sub    %rax,%rdx
   12228:	48 c1 fa 04          	sar    $0x4,%rdx
   1222c:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   12233:	e3 38 8e 
   12236:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   1223a:	48 89 c2             	mov    %rax,%rdx
   1223d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12241:	48 8b 08             	mov    (%rax),%rcx
   12244:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12248:	48 89 ce             	mov    %rcx,%rsi
   1224b:	48 89 c7             	mov    %rax,%rdi
   1224e:	e8 6d 12 00 00       	call   134c0 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   12253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12257:	48 89 c7             	mov    %rax,%rdi
   1225a:	e8 69 ff ff ff       	call   121c8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   1225f:	90                   	nop
   12260:	c9                   	leave
   12261:	c3                   	ret

0000000000012262 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   12262:	55                   	push   %rbp
   12263:	48 89 e5             	mov    %rsp,%rbp
   12266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1226a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1226e:	48 8b 00             	mov    (%rax),%rax
   12271:	5d                   	pop    %rbp
   12272:	c3                   	ret
   12273:	90                   	nop

0000000000012274 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   12274:	55                   	push   %rbp
   12275:	48 89 e5             	mov    %rsp,%rbp
   12278:	53                   	push   %rbx
   12279:	48 83 ec 18          	sub    $0x18,%rsp
   1227d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12281:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12285:	48 89 c7             	mov    %rax,%rdi
   12288:	e8 d5 ff ff ff       	call   12262 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   1228d:	48 89 c3             	mov    %rax,%rbx
   12290:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12294:	48 89 c7             	mov    %rax,%rdi
   12297:	e8 5a 12 00 00       	call   134f6 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   1229c:	48 89 c2             	mov    %rax,%rdx
   1229f:	48 89 d0             	mov    %rdx,%rax
   122a2:	48 c1 e0 03          	shl    $0x3,%rax
   122a6:	48 01 d0             	add    %rdx,%rax
   122a9:	48 c1 e0 04          	shl    $0x4,%rax
   122ad:	48 01 d8             	add    %rbx,%rax
   122b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   122b4:	c9                   	leave
   122b5:	c3                   	ret

00000000000122b6 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   122b6:	55                   	push   %rbp
   122b7:	48 89 e5             	mov    %rsp,%rbp
   122ba:	48 83 ec 10          	sub    $0x10,%rsp
   122be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   122c6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   122ca:	48 89 c7             	mov    %rax,%rdi
   122cd:	e8 36 12 00 00       	call   13508 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   122d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   122da:	48 89 d6             	mov    %rdx,%rsi
   122dd:	48 89 c7             	mov    %rax,%rdi
   122e0:	e8 2e 12 00 00       	call   13513 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   122e5:	c9                   	leave
   122e6:	c3                   	ret
   122e7:	90                   	nop

00000000000122e8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   122e8:	55                   	push   %rbp
   122e9:	48 89 e5             	mov    %rsp,%rbp
   122ec:	53                   	push   %rbx
   122ed:	48 83 ec 38          	sub    $0x38,%rsp
   122f1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   122f5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   122f9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   122fd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12301:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12305:	48 89 d6             	mov    %rdx,%rsi
   12308:	48 89 c7             	mov    %rax,%rdi
   1230b:	e8 a6 ff ff ff       	call   122b6 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   12310:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   12314:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   12318:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1231c:	48 89 c7             	mov    %rax,%rdi
   1231f:	e8 7e 00 00 00       	call   123a2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   12324:	48 89 c2             	mov    %rax,%rdx
   12327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1232b:	48 89 d6             	mov    %rdx,%rsi
   1232e:	48 89 c7             	mov    %rax,%rdi
   12331:	e8 08 12 00 00       	call   1353e <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   12336:	48 89 c6             	mov    %rax,%rsi
   12339:	48 89 df             	mov    %rbx,%rdi
   1233c:	e8 5d 12 00 00       	call   1359e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   12341:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12345:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   12348:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1234c:	48 8b 08             	mov    (%rax),%rcx
   1234f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12353:	48 89 d0             	mov    %rdx,%rax
   12356:	48 c1 e0 03          	shl    $0x3,%rax
   1235a:	48 01 d0             	add    %rdx,%rax
   1235d:	48 c1 e0 04          	shl    $0x4,%rax
   12361:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   12365:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12369:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1236d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12371:	48 89 c7             	mov    %rax,%rdi
   12374:	e8 29 00 00 00       	call   123a2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   12379:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1237c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12380:	48 8b 10             	mov    (%rax),%rdx
   12383:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   12387:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1238b:	48 89 c7             	mov    %rax,%rdi
   1238e:	e8 3e 12 00 00       	call   135d1 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   12393:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12397:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1239b:	90                   	nop
   1239c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   123a0:	c9                   	leave
   123a1:	c3                   	ret

00000000000123a2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   123a2:	55                   	push   %rbp
   123a3:	48 89 e5             	mov    %rsp,%rbp
   123a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   123aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123ae:	5d                   	pop    %rbp
   123af:	c3                   	ret

00000000000123b0 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   123b0:	55                   	push   %rbp
   123b1:	48 89 e5             	mov    %rsp,%rbp
   123b4:	48 83 ec 20          	sub    $0x20,%rsp
   123b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   123c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   123c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   123c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123cc:	48 89 d6             	mov    %rdx,%rsi
   123cf:	48 89 c7             	mov    %rax,%rdi
   123d2:	e8 2b 12 00 00       	call   13602 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   123d7:	90                   	nop
   123d8:	c9                   	leave
   123d9:	c3                   	ret

00000000000123da <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   123da:	55                   	push   %rbp
   123db:	48 89 e5             	mov    %rsp,%rbp
   123de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   123e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123e6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   123ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123ee:	48 8b 00             	mov    (%rax),%rax
   123f1:	48 29 c2             	sub    %rax,%rdx
   123f4:	48 c1 fa 04          	sar    $0x4,%rdx
   123f8:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   123ff:	e3 38 8e 
   12402:	48 0f af c2          	imul   %rdx,%rax
   12406:	5d                   	pop    %rbp
   12407:	c3                   	ret

0000000000012408 <_ZNSaIP12VkPipeline_TEC1Ev>:
   12408:	55                   	push   %rbp
   12409:	48 89 e5             	mov    %rsp,%rbp
   1240c:	48 83 ec 10          	sub    $0x10,%rsp
   12410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12418:	48 89 c7             	mov    %rax,%rdi
   1241b:	e8 08 12 00 00       	call   13628 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   12420:	90                   	nop
   12421:	c9                   	leave
   12422:	c3                   	ret
   12423:	90                   	nop

0000000000012424 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12424:	55                   	push   %rbp
   12425:	48 89 e5             	mov    %rsp,%rbp
   12428:	48 83 ec 10          	sub    $0x10,%rsp
   1242c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12434:	48 89 c7             	mov    %rax,%rdi
   12437:	e8 f8 11 00 00       	call   13634 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   1243c:	90                   	nop
   1243d:	c9                   	leave
   1243e:	c3                   	ret
   1243f:	90                   	nop

0000000000012440 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   12440:	55                   	push   %rbp
   12441:	48 89 e5             	mov    %rsp,%rbp
   12444:	53                   	push   %rbx
   12445:	48 83 ec 28          	sub    $0x28,%rsp
   12449:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1244d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12451:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   12455:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12459:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1245d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12461:	48 89 d6             	mov    %rdx,%rsi
   12464:	48 89 c7             	mov    %rax,%rdi
   12467:	e8 d3 11 00 00       	call   1363f <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   1246c:	48 89 c1             	mov    %rax,%rcx
   1246f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12473:	48 89 c2             	mov    %rax,%rdx
   12476:	48 89 ce             	mov    %rcx,%rsi
   12479:	48 89 df             	mov    %rbx,%rdi
   1247c:	e8 1f 12 00 00       	call   136a0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   12481:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12489:	48 89 d6             	mov    %rdx,%rsi
   1248c:	48 89 c7             	mov    %rax,%rdi
   1248f:	e8 6a 12 00 00       	call   136fe <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   12494:	eb 1a                	jmp    124b0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   12496:	48 89 c3             	mov    %rax,%rbx
   12499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1249d:	48 89 c7             	mov    %rax,%rdi
   124a0:	e8 59 00 00 00       	call   124fe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   124a5:	48 89 d8             	mov    %rbx,%rax
   124a8:	48 89 c7             	mov    %rax,%rdi
   124ab:	e8 40 22 ff ff       	call   46f0 <_Unwind_Resume@plt>
   124b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   124b4:	c9                   	leave
   124b5:	c3                   	ret

00000000000124b6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   124b6:	55                   	push   %rbp
   124b7:	48 89 e5             	mov    %rsp,%rbp
   124ba:	48 83 ec 10          	sub    $0x10,%rsp
   124be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   124c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124c6:	48 8b 10             	mov    (%rax),%rdx
   124c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124cd:	48 89 d6             	mov    %rdx,%rsi
   124d0:	48 89 c7             	mov    %rax,%rdi
   124d3:	e8 66 12 00 00       	call   1373e <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   124d8:	c9                   	leave
   124d9:	c3                   	ret

00000000000124da <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   124da:	55                   	push   %rbp
   124db:	48 89 e5             	mov    %rsp,%rbp
   124de:	48 83 ec 10          	sub    $0x10,%rsp
   124e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   124e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124ea:	48 8b 10             	mov    (%rax),%rdx
   124ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124f1:	48 89 d6             	mov    %rdx,%rsi
   124f4:	48 89 c7             	mov    %rax,%rdi
   124f7:	e8 54 12 00 00       	call   13750 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   124fc:	c9                   	leave
   124fd:	c3                   	ret

00000000000124fe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   124fe:	55                   	push   %rbp
   124ff:	48 89 e5             	mov    %rsp,%rbp
   12502:	48 83 ec 10          	sub    $0x10,%rsp
   12506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1250a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1250e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12516:	48 8b 00             	mov    (%rax),%rax
   12519:	48 29 c2             	sub    %rax,%rdx
   1251c:	48 89 d0             	mov    %rdx,%rax
   1251f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12523:	48 89 c2             	mov    %rax,%rdx
   12526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1252a:	48 8b 08             	mov    (%rax),%rcx
   1252d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12531:	48 89 ce             	mov    %rcx,%rsi
   12534:	48 89 c7             	mov    %rax,%rdi
   12537:	e8 4c 12 00 00       	call   13788 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1253c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12540:	48 89 c7             	mov    %rax,%rdi
   12543:	e8 8a ea ff ff       	call   10fd2 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   12548:	90                   	nop
   12549:	c9                   	leave
   1254a:	c3                   	ret
   1254b:	90                   	nop

000000000001254c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1254c:	55                   	push   %rbp
   1254d:	48 89 e5             	mov    %rsp,%rbp
   12550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12558:	5d                   	pop    %rbp
   12559:	c3                   	ret

000000000001255a <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1255a:	55                   	push   %rbp
   1255b:	48 89 e5             	mov    %rsp,%rbp
   1255e:	48 83 ec 20          	sub    $0x20,%rsp
   12562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12566:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1256a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1256e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12576:	48 89 d6             	mov    %rdx,%rsi
   12579:	48 89 c7             	mov    %rax,%rdi
   1257c:	e8 3c 12 00 00       	call   137bd <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   12581:	90                   	nop
   12582:	c9                   	leave
   12583:	c3                   	ret

0000000000012584 <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12584:	55                   	push   %rbp
   12585:	48 89 e5             	mov    %rsp,%rbp
   12588:	48 83 ec 10          	sub    $0x10,%rsp
   1258c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12594:	48 89 c7             	mov    %rax,%rdi
   12597:	e8 48 12 00 00       	call   137e4 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   1259c:	90                   	nop
   1259d:	c9                   	leave
   1259e:	c3                   	ret
   1259f:	90                   	nop

00000000000125a0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   125a0:	55                   	push   %rbp
   125a1:	48 89 e5             	mov    %rsp,%rbp
   125a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   125a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125ac:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   125b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125b7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   125be:	00 
   125bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125c3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   125ca:	00 
	{ }
   125cb:	90                   	nop
   125cc:	5d                   	pop    %rbp
   125cd:	c3                   	ret

00000000000125ce <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
   125ce:	55                   	push   %rbp
   125cf:	48 89 e5             	mov    %rsp,%rbp
   125d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125d6:	90                   	nop
   125d7:	5d                   	pop    %rbp
   125d8:	c3                   	ret
   125d9:	90                   	nop

00000000000125da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   125da:	55                   	push   %rbp
   125db:	48 89 e5             	mov    %rsp,%rbp
   125de:	48 83 ec 20          	sub    $0x20,%rsp
   125e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   125ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   125ee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   125f3:	74 17                	je     1260c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   125f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   125fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12601:	48 89 ce             	mov    %rcx,%rsi
   12604:	48 89 c7             	mov    %rax,%rdi
   12607:	e8 e3 11 00 00       	call   137ef <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   1260c:	90                   	nop
   1260d:	c9                   	leave
   1260e:	c3                   	ret
   1260f:	90                   	nop

0000000000012610 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12610:	55                   	push   %rbp
   12611:	48 89 e5             	mov    %rsp,%rbp
   12614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1261c:	5d                   	pop    %rbp
   1261d:	c3                   	ret

000000000001261e <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1261e:	55                   	push   %rbp
   1261f:	48 89 e5             	mov    %rsp,%rbp
   12622:	48 83 ec 20          	sub    $0x20,%rsp
   12626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1262a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1262e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12632:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1263a:	48 89 d6             	mov    %rdx,%rsi
   1263d:	48 89 c7             	mov    %rax,%rdi
   12640:	e8 d8 11 00 00       	call   1381d <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   12645:	90                   	nop
   12646:	c9                   	leave
   12647:	c3                   	ret

0000000000012648 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12648:	55                   	push   %rbp
   12649:	48 89 e5             	mov    %rsp,%rbp
   1264c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12650:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12654:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12658:	48 8b 10             	mov    (%rax),%rdx
   1265b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1265f:	48 89 10             	mov    %rdx,(%rax)
   12662:	90                   	nop
   12663:	5d                   	pop    %rbp
   12664:	c3                   	ret
   12665:	90                   	nop

0000000000012666 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12666:	55                   	push   %rbp
   12667:	48 89 e5             	mov    %rsp,%rbp
   1266a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1266e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12672:	5d                   	pop    %rbp
   12673:	c3                   	ret

0000000000012674 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   12674:	55                   	push   %rbp
   12675:	48 89 e5             	mov    %rsp,%rbp
   12678:	53                   	push   %rbx
   12679:	48 83 ec 18          	sub    $0x18,%rsp
   1267d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12681:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12685:	e8 ae da ff ff       	call   10138 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   1268a:	48 89 03             	mov    %rax,(%rbx)
	{ }
   1268d:	90                   	nop
   1268e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12692:	c9                   	leave
   12693:	c3                   	ret

0000000000012694 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   12694:	55                   	push   %rbp
   12695:	48 89 e5             	mov    %rsp,%rbp
   12698:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   1269c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126a0:	48 8b 00             	mov    (%rax),%rax
   126a3:	5d                   	pop    %rbp
   126a4:	c3                   	ret

00000000000126a5 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   126a5:	55                   	push   %rbp
   126a6:	48 89 e5             	mov    %rsp,%rbp
   126a9:	53                   	push   %rbx
   126aa:	48 83 ec 38          	sub    $0x38,%rsp
   126ae:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   126b2:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   126b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126ba:	48 8b 00             	mov    (%rax),%rax
   126bd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   126c1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   126c5:	48 89 c7             	mov    %rax,%rdi
   126c8:	e8 bd da ff ff       	call   1018a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   126cd:	48 89 c3             	mov    %rax,%rbx
   126d0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   126d4:	48 8b 00             	mov    (%rax),%rax
   126d7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   126db:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   126df:	48 89 c7             	mov    %rax,%rdi
   126e2:	e8 a3 da ff ff       	call   1018a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   126e7:	48 29 c3             	sub    %rax,%rbx
   126ea:	48 89 da             	mov    %rbx,%rdx
   126ed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   126f1:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   126f5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   126f9:	48 89 d6             	mov    %rdx,%rsi
   126fc:	48 89 c7             	mov    %rax,%rdi
   126ff:	e8 5e da ff ff       	call   10162 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   12704:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   12708:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1270c:	c9                   	leave
   1270d:	c3                   	ret

000000000001270e <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   1270e:	55                   	push   %rbp
   1270f:	48 89 e5             	mov    %rsp,%rbp
   12712:	48 83 ec 20          	sub    $0x20,%rsp
   12716:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1271a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1271e:	48 89 c7             	mov    %rax,%rdi
   12721:	e8 64 da ff ff       	call   1018a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   12726:	48 89 c1             	mov    %rax,%rcx
   12729:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   12730:	9b c4 20 
   12733:	48 89 c8             	mov    %rcx,%rax
   12736:	48 f7 ea             	imul   %rdx
   12739:	48 89 d0             	mov    %rdx,%rax
   1273c:	48 c1 f8 07          	sar    $0x7,%rax
   12740:	48 c1 f9 3f          	sar    $0x3f,%rcx
   12744:	48 89 ca             	mov    %rcx,%rdx
   12747:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   1274a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1274e:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   12752:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   12756:	48 89 d6             	mov    %rdx,%rsi
   12759:	48 89 c7             	mov    %rax,%rdi
   1275c:	e8 e3 10 00 00       	call   13844 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   12761:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   12765:	c9                   	leave
   12766:	c3                   	ret
   12767:	90                   	nop

0000000000012768 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12768:	55                   	push   %rbp
   12769:	48 89 e5             	mov    %rsp,%rbp
   1276c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12770:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12774:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12778:	48 8b 10             	mov    (%rax),%rdx
   1277b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1277f:	48 89 10             	mov    %rdx,(%rax)
   12782:	90                   	nop
   12783:	5d                   	pop    %rbp
   12784:	c3                   	ret
   12785:	90                   	nop

0000000000012786 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12786:	55                   	push   %rbp
   12787:	48 89 e5             	mov    %rsp,%rbp
   1278a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1278e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12792:	5d                   	pop    %rbp
   12793:	c3                   	ret

0000000000012794 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   12794:	55                   	push   %rbp
   12795:	48 89 e5             	mov    %rsp,%rbp
   12798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1279c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127a0:	48 8b 40 08          	mov    0x8(%rax),%rax
   127a4:	5d                   	pop    %rbp
   127a5:	c3                   	ret

00000000000127a6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   127a6:	55                   	push   %rbp
   127a7:	48 89 e5             	mov    %rsp,%rbp
   127aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   127ae:	90                   	nop
   127af:	5d                   	pop    %rbp
   127b0:	c3                   	ret

00000000000127b1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   127b1:	55                   	push   %rbp
   127b2:	48 89 e5             	mov    %rsp,%rbp
   127b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   127bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127c1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   127c5:	48 c1 f8 03          	sar    $0x3,%rax
    }
   127c9:	5d                   	pop    %rbp
   127ca:	c3                   	ret

00000000000127cb <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   127cb:	55                   	push   %rbp
   127cc:	48 89 e5             	mov    %rsp,%rbp
   127cf:	48 83 ec 20          	sub    $0x20,%rsp
   127d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   127db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   127df:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   127e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   127e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   127eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127ef:	48 89 ce             	mov    %rcx,%rsi
   127f2:	48 89 c7             	mov    %rax,%rdi
   127f5:	e8 92 10 00 00       	call   1388c <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   127fa:	c9                   	leave
   127fb:	c3                   	ret

00000000000127fc <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   127fc:	55                   	push   %rbp
   127fd:	48 89 e5             	mov    %rsp,%rbp
   12800:	48 83 ec 10          	sub    $0x10,%rsp
   12804:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12808:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1280c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12814:	48 89 d6             	mov    %rdx,%rsi
   12817:	48 89 c7             	mov    %rax,%rdi
   1281a:	e8 a2 10 00 00       	call   138c1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   1281f:	90                   	nop
   12820:	c9                   	leave
   12821:	c3                   	ret

0000000000012822 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   12822:	55                   	push   %rbp
   12823:	48 89 e5             	mov    %rsp,%rbp
   12826:	53                   	push   %rbx
   12827:	48 83 ec 28          	sub    $0x28,%rsp
   1282b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1282f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12833:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   12837:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1283b:	48 89 c6             	mov    %rax,%rsi
   1283e:	bf 08 00 00 00       	mov    $0x8,%edi
   12843:	e8 18 26 ff ff       	call   4e60 <_ZnwmPv>
   12848:	48 89 c3             	mov    %rax,%rbx
   1284b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1284f:	48 89 c7             	mov    %rax,%rdi
   12852:	e8 c9 ee ff ff       	call   11720 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   12857:	48 8b 00             	mov    (%rax),%rax
   1285a:	48 89 03             	mov    %rax,(%rbx)
   1285d:	90                   	nop
   1285e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12862:	c9                   	leave
   12863:	c3                   	ret

0000000000012864 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   12864:	55                   	push   %rbp
   12865:	48 89 e5             	mov    %rsp,%rbp
   12868:	53                   	push   %rbx
   12869:	48 83 ec 38          	sub    $0x38,%rsp
   1286d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12871:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12875:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12879:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1287d:	48 89 c7             	mov    %rax,%rdi
   12880:	e8 4b 10 00 00       	call   138d0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   12885:	48 89 c3             	mov    %rax,%rbx
   12888:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1288c:	48 89 c7             	mov    %rax,%rdi
   1288f:	e8 38 de ff ff       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   12894:	48 29 c3             	sub    %rax,%rbx
   12897:	48 89 da             	mov    %rbx,%rdx
   1289a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1289e:	48 39 c2             	cmp    %rax,%rdx
   128a1:	0f 92 c0             	setb   %al
   128a4:	84 c0                	test   %al,%al
   128a6:	74 0c                	je     128b4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   128a8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   128ac:	48 89 c7             	mov    %rax,%rdi
   128af:	e8 cc 18 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   128b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128b8:	48 89 c7             	mov    %rax,%rdi
   128bb:	e8 0c de ff ff       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   128c0:	48 89 c3             	mov    %rax,%rbx
   128c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128c7:	48 89 c7             	mov    %rax,%rdi
   128ca:	e8 fd dd ff ff       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   128cf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   128d3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   128d7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   128db:	48 89 d6             	mov    %rdx,%rsi
   128de:	48 89 c7             	mov    %rax,%rdi
   128e1:	e8 7b 0f 00 00       	call   13861 <_ZSt3maxImERKT_S2_S2_>
   128e6:	48 8b 00             	mov    (%rax),%rax
   128e9:	48 01 d8             	add    %rbx,%rax
   128ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   128f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128f4:	48 89 c7             	mov    %rax,%rdi
   128f7:	e8 d0 dd ff ff       	call   106cc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   128fc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12900:	72 12                	jb     12914 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   12902:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12906:	48 89 c7             	mov    %rax,%rdi
   12909:	e8 c2 0f 00 00       	call   138d0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1290e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12912:	73 0e                	jae    12922 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   12914:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12918:	48 89 c7             	mov    %rax,%rdi
   1291b:	e8 b0 0f 00 00       	call   138d0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   12920:	eb 04                	jmp    12926 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   12922:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12926:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1292a:	c9                   	leave
   1292b:	c3                   	ret

000000000001292c <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   1292c:	55                   	push   %rbp
   1292d:	48 89 e5             	mov    %rsp,%rbp
   12930:	53                   	push   %rbx
   12931:	48 83 ec 18          	sub    $0x18,%rsp
   12935:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12939:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   1293d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12941:	48 89 c7             	mov    %rax,%rdi
   12944:	e8 c9 ed ff ff       	call   11712 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12949:	48 8b 18             	mov    (%rax),%rbx
   1294c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12950:	48 89 c7             	mov    %rax,%rdi
   12953:	e8 ba ed ff ff       	call   11712 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12958:	48 8b 00             	mov    (%rax),%rax
   1295b:	48 89 da             	mov    %rbx,%rdx
   1295e:	48 29 c2             	sub    %rax,%rdx
   12961:	48 89 d0             	mov    %rdx,%rax
   12964:	48 c1 f8 03          	sar    $0x3,%rax
   12968:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1296c:	c9                   	leave
   1296d:	c3                   	ret

000000000001296e <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1296e:	55                   	push   %rbp
   1296f:	48 89 e5             	mov    %rsp,%rbp
   12972:	48 83 ec 20          	sub    $0x20,%rsp
   12976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1297a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1297e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12982:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12986:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1298a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1298e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12996:	48 89 c7             	mov    %rax,%rdi
   12999:	e8 54 0f 00 00       	call   138f2 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1299e:	c9                   	leave
   1299f:	c3                   	ret

00000000000129a0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   129a0:	55                   	push   %rbp
   129a1:	48 89 e5             	mov    %rsp,%rbp
   129a4:	48 83 ec 20          	sub    $0x20,%rsp
   129a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   129b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129b4:	48 8b 00             	mov    (%rax),%rax
   129b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   129bb:	48 c1 e2 03          	shl    $0x3,%rdx
   129bf:	48 f7 da             	neg    %rdx
   129c2:	48 01 d0             	add    %rdx,%rax
   129c5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   129c9:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   129cd:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   129d1:	48 89 d6             	mov    %rdx,%rsi
   129d4:	48 89 c7             	mov    %rax,%rdi
   129d7:	e8 18 ed ff ff       	call   116f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   129dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   129e0:	c9                   	leave
   129e1:	c3                   	ret

00000000000129e2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   129e2:	55                   	push   %rbp
   129e3:	48 89 e5             	mov    %rsp,%rbp
   129e6:	53                   	push   %rbx
   129e7:	48 83 ec 28          	sub    $0x28,%rsp
   129eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129ef:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   129f3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   129f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129fb:	48 89 c7             	mov    %rax,%rdi
   129fe:	e8 65 ef ff ff       	call   11968 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12a03:	48 89 c6             	mov    %rax,%rsi
   12a06:	48 89 df             	mov    %rbx,%rdi
   12a09:	e8 48 0f 00 00       	call   13956 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   12a0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a12:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   12a16:	90                   	nop
   12a17:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12a1b:	c9                   	leave
   12a1c:	c3                   	ret
   12a1d:	90                   	nop

0000000000012a1e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   12a1e:	55                   	push   %rbp
   12a1f:	48 89 e5             	mov    %rsp,%rbp
   12a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   12a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a2a:	5d                   	pop    %rbp
   12a2b:	c3                   	ret

0000000000012a2c <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   12a2c:	55                   	push   %rbp
   12a2d:	48 89 e5             	mov    %rsp,%rbp
   12a30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   12a38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a3c:	8b 10                	mov    (%rax),%edx
   12a3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a42:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   12a44:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12a48:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12a4c:	48 8b 46 04          	mov    0x4(%rsi),%rax
   12a50:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   12a54:	48 89 41 04          	mov    %rax,0x4(%rcx)
   12a58:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   12a5c:	48 8b 46 14          	mov    0x14(%rsi),%rax
   12a60:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   12a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12a68:	5d                   	pop    %rbp
   12a69:	c3                   	ret

0000000000012a6a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   12a6a:	55                   	push   %rbp
   12a6b:	48 89 e5             	mov    %rsp,%rbp
   12a6e:	53                   	push   %rbx
   12a6f:	48 83 ec 18          	sub    $0x18,%rsp
   12a73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12a77:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   12a7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12a7f:	48 89 c7             	mov    %rax,%rdi
   12a82:	e8 21 0f 00 00       	call   139a8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   12a87:	48 89 c3             	mov    %rax,%rbx
   12a8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a8e:	48 89 c7             	mov    %rax,%rdi
   12a91:	e8 04 0f 00 00       	call   1399a <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   12a96:	48 89 de             	mov    %rbx,%rsi
   12a99:	48 89 c7             	mov    %rax,%rdi
   12a9c:	e8 15 0f 00 00       	call   139b6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   12aa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12aa5:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   12aa9:	90                   	nop
   12aaa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12aae:	c9                   	leave
   12aaf:	c3                   	ret

0000000000012ab0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   12ab0:	55                   	push   %rbp
   12ab1:	48 89 e5             	mov    %rsp,%rbp
   12ab4:	48 83 ec 10          	sub    $0x10,%rsp
   12ab8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   12abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ac0:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12ac4:	84 c0                	test   %al,%al
   12ac6:	74 0c                	je     12ad4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   12ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12acc:	48 89 c7             	mov    %rax,%rdi
   12acf:	e8 3c 0f 00 00       	call   13a10 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   12ad4:	90                   	nop
   12ad5:	c9                   	leave
   12ad6:	c3                   	ret
   12ad7:	90                   	nop

0000000000012ad8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12ad8:	55                   	push   %rbp
   12ad9:	48 89 e5             	mov    %rsp,%rbp
   12adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ae0:	90                   	nop
   12ae1:	5d                   	pop    %rbp
   12ae2:	c3                   	ret

0000000000012ae3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12ae3:	55                   	push   %rbp
   12ae4:	48 89 e5             	mov    %rsp,%rbp
   12ae7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   12aeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aef:	48 8b 40 18          	mov    0x18(%rax),%rax
   12af3:	5d                   	pop    %rbp
   12af4:	c3                   	ret

0000000000012af5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12af5:	55                   	push   %rbp
   12af6:	48 89 e5             	mov    %rsp,%rbp
   12af9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   12afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b01:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b05:	5d                   	pop    %rbp
   12b06:	c3                   	ret
   12b07:	90                   	nop

0000000000012b08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12b08:	55                   	push   %rbp
   12b09:	48 89 e5             	mov    %rsp,%rbp
   12b0c:	48 83 ec 10          	sub    $0x10,%rsp
   12b10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   12b18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b20:	48 89 d6             	mov    %rdx,%rsi
   12b23:	48 89 c7             	mov    %rax,%rdi
   12b26:	e8 f9 0e 00 00       	call   13a24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   12b2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b33:	48 89 d6             	mov    %rdx,%rsi
   12b36:	48 89 c7             	mov    %rax,%rdi
   12b39:	e8 24 0f 00 00       	call   13a62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   12b3e:	90                   	nop
   12b3f:	c9                   	leave
   12b40:	c3                   	ret
   12b41:	90                   	nop

0000000000012b42 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   12b42:	55                   	push   %rbp
   12b43:	48 89 e5             	mov    %rsp,%rbp
   12b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   12b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b4e:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b52:	5d                   	pop    %rbp
   12b53:	c3                   	ret

0000000000012b54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   12b54:	55                   	push   %rbp
   12b55:	48 89 e5             	mov    %rsp,%rbp
   12b58:	53                   	push   %rbx
   12b59:	48 83 ec 18          	sub    $0x18,%rsp
   12b5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   12b65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b69:	48 89 c7             	mov    %rax,%rdi
   12b6c:	e8 27 0f 00 00       	call   13a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12b71:	48 89 c3             	mov    %rax,%rbx
   12b74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b78:	48 89 c7             	mov    %rax,%rdi
   12b7b:	e8 b6 ef ff ff       	call   11b36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   12b80:	48 89 c6             	mov    %rax,%rsi
   12b83:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12b87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b8b:	48 89 d1             	mov    %rdx,%rcx
   12b8e:	48 89 da             	mov    %rbx,%rdx
   12b91:	48 89 c7             	mov    %rax,%rdi
   12b94:	e8 11 0f 00 00       	call   13aaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   12b99:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12b9d:	c9                   	leave
   12b9e:	c3                   	ret
   12b9f:	90                   	nop

0000000000012ba0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12ba0:	55                   	push   %rbp
   12ba1:	48 89 e5             	mov    %rsp,%rbp
   12ba4:	48 83 ec 20          	sub    $0x20,%rsp
   12ba8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   12bac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bb0:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12bb4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12bb8:	48 89 d6             	mov    %rdx,%rsi
   12bbb:	48 89 c7             	mov    %rax,%rdi
   12bbe:	e8 39 06 00 00       	call   131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   12bc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bc7:	c9                   	leave
   12bc8:	c3                   	ret
   12bc9:	90                   	nop

0000000000012bca <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   12bca:	55                   	push   %rbp
   12bcb:	48 89 e5             	mov    %rsp,%rbp
   12bce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   12bd2:	90                   	nop
   12bd3:	5d                   	pop    %rbp
   12bd4:	c3                   	ret
   12bd5:	90                   	nop

0000000000012bd6 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   12bd6:	55                   	push   %rbp
   12bd7:	48 89 e5             	mov    %rsp,%rbp
   12bda:	48 83 ec 10          	sub    $0x10,%rsp
   12bde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   12be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be6:	48 83 c0 20          	add    $0x20,%rax
   12bea:	48 89 c7             	mov    %rax,%rdi
   12bed:	e8 4e 0f 00 00       	call   13b40 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   12bf2:	c9                   	leave
   12bf3:	c3                   	ret

0000000000012bf4 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   12bf4:	55                   	push   %rbp
   12bf5:	48 89 e5             	mov    %rsp,%rbp
   12bf8:	48 83 ec 10          	sub    $0x10,%rsp
   12bfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   12c04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c0c:	48 89 d6             	mov    %rdx,%rsi
   12c0f:	48 89 c7             	mov    %rax,%rdi
   12c12:	e8 19 14 ff ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   12c17:	c1 e8 1f             	shr    $0x1f,%eax
   12c1a:	c9                   	leave
   12c1b:	c3                   	ret

0000000000012c1c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c1c:	55                   	push   %rbp
   12c1d:	48 89 e5             	mov    %rsp,%rbp
   12c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c28:	5d                   	pop    %rbp
   12c29:	c3                   	ret

0000000000012c2a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   12c2a:	55                   	push   %rbp
   12c2b:	48 89 e5             	mov    %rsp,%rbp
   12c2e:	53                   	push   %rbx
   12c2f:	48 83 ec 18          	sub    $0x18,%rsp
   12c33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12c37:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   12c3b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12c3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c43:	48 89 c7             	mov    %rax,%rdi
   12c46:	e8 d1 ff ff ff       	call   12c1c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   12c4b:	48 89 c6             	mov    %rax,%rsi
   12c4e:	48 89 df             	mov    %rbx,%rdi
   12c51:	e8 04 0f 00 00       	call   13b5a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   12c56:	90                   	nop
   12c57:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12c5b:	c9                   	leave
   12c5c:	c3                   	ret

0000000000012c5d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c5d:	55                   	push   %rbp
   12c5e:	48 89 e5             	mov    %rsp,%rbp
   12c61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c69:	5d                   	pop    %rbp
   12c6a:	c3                   	ret

0000000000012c6b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c6b:	55                   	push   %rbp
   12c6c:	48 89 e5             	mov    %rsp,%rbp
   12c6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c77:	5d                   	pop    %rbp
   12c78:	c3                   	ret

0000000000012c79 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c79:	55                   	push   %rbp
   12c7a:	48 89 e5             	mov    %rsp,%rbp
   12c7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c85:	5d                   	pop    %rbp
   12c86:	c3                   	ret
   12c87:	90                   	nop

0000000000012c88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   12c88:	55                   	push   %rbp
   12c89:	48 89 e5             	mov    %rsp,%rbp
   12c8c:	41 54                	push   %r12
   12c8e:	53                   	push   %rbx
   12c8f:	48 83 ec 30          	sub    $0x30,%rsp
   12c93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12c97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12c9b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12c9f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   12ca3:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   12ca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12caf:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   12cb2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12cb6:	48 89 c7             	mov    %rax,%rdi
   12cb9:	e8 bb ff ff ff       	call   12c79 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12cbe:	49 89 c4             	mov    %rax,%r12
   12cc1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12cc5:	48 89 c7             	mov    %rax,%rdi
   12cc8:	e8 9e ff ff ff       	call   12c6b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12ccd:	48 89 c3             	mov    %rax,%rbx
   12cd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cd4:	48 89 c7             	mov    %rax,%rdi
   12cd7:	e8 81 ff ff ff       	call   12c5d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12cdc:	48 89 c6             	mov    %rax,%rsi
   12cdf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12ce3:	4c 89 e1             	mov    %r12,%rcx
   12ce6:	48 89 da             	mov    %rbx,%rdx
   12ce9:	48 89 c7             	mov    %rax,%rdi
   12cec:	e8 9d 0e 00 00       	call   13b8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   12cf1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12cf5:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   12cf9:	90                   	nop
   12cfa:	48 83 c4 30          	add    $0x30,%rsp
   12cfe:	5b                   	pop    %rbx
   12cff:	41 5c                	pop    %r12
   12d01:	5d                   	pop    %rbp
   12d02:	c3                   	ret
   12d03:	90                   	nop

0000000000012d04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   12d04:	55                   	push   %rbp
   12d05:	48 89 e5             	mov    %rsp,%rbp
   12d08:	48 83 ec 10          	sub    $0x10,%rsp
   12d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   12d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d14:	48 8b 40 08          	mov    0x8(%rax),%rax
   12d18:	48 85 c0             	test   %rax,%rax
   12d1b:	74 1a                	je     12d37 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   12d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d21:	48 8b 00             	mov    (%rax),%rax
   12d24:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d28:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   12d2c:	48 89 d6             	mov    %rdx,%rsi
   12d2f:	48 89 c7             	mov    %rax,%rdi
   12d32:	e8 d1 fd ff ff       	call   12b08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   12d37:	90                   	nop
   12d38:	c9                   	leave
   12d39:	c3                   	ret

0000000000012d3a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12d3a:	55                   	push   %rbp
   12d3b:	48 89 e5             	mov    %rsp,%rbp
   12d3e:	53                   	push   %rbx
   12d3f:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   12d46:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   12d4d:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   12d54:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   12d5b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   12d62:	48 89 c7             	mov    %rax,%rdi
   12d65:	e8 a0 0e 00 00       	call   13c0a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   12d6a:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   12d71:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12d78:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12d7f:	48 89 c7             	mov    %rax,%rdi
   12d82:	e8 11 0d 00 00       	call   13a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12d87:	48 39 c3             	cmp    %rax,%rbx
   12d8a:	0f 94 c0             	sete   %al
   12d8d:	84 c0                	test   %al,%al
   12d8f:	0f 84 c8 00 00 00    	je     12e5d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   12d95:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12d9c:	48 89 c7             	mov    %rax,%rdi
   12d9f:	e8 8e 0e 00 00       	call   13c32 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   12da4:	48 85 c0             	test   %rax,%rax
   12da7:	74 44                	je     12ded <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12da9:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12db0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12db7:	48 89 c7             	mov    %rax,%rdi
   12dba:	e8 85 0e 00 00       	call   13c44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12dbf:	48 8b 00             	mov    (%rax),%rax
   12dc2:	48 89 c7             	mov    %rax,%rdi
   12dc5:	e8 8c 0e 00 00       	call   13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12dca:	48 89 c1             	mov    %rax,%rcx
   12dcd:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12dd4:	48 89 c2             	mov    %rax,%rdx
   12dd7:	48 89 ce             	mov    %rcx,%rsi
   12dda:	48 89 df             	mov    %rbx,%rdi
   12ddd:	e8 36 ee ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12de2:	84 c0                	test   %al,%al
   12de4:	74 07                	je     12ded <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12de6:	b8 01 00 00 00       	mov    $0x1,%eax
   12deb:	eb 05                	jmp    12df2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   12ded:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   12df2:	84 c0                	test   %al,%al
   12df4:	74 49                	je     12e3f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   12df6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12dfd:	48 89 c7             	mov    %rax,%rdi
   12e00:	e8 3f 0e 00 00       	call   13c44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12e05:	48 89 c2             	mov    %rax,%rdx
   12e08:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   12e0f:	00 00 00 00 
   12e13:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   12e1a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   12e21:	48 89 ce             	mov    %rcx,%rsi
   12e24:	48 89 c7             	mov    %rax,%rdi
   12e27:	e8 44 0e 00 00       	call   13c70 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12e2c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12e33:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12e3a:	e9 43 03 00 00       	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   12e3f:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   12e46:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12e4d:	48 89 d6             	mov    %rdx,%rsi
   12e50:	48 89 c7             	mov    %rax,%rdi
   12e53:	e8 48 0e 00 00       	call   13ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   12e58:	e9 25 03 00 00       	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   12e5d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12e64:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12e6b:	48 89 c7             	mov    %rax,%rdi
   12e6e:	e8 e3 0d 00 00       	call   13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12e73:	48 89 c2             	mov    %rax,%rdx
   12e76:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12e7d:	48 89 c6             	mov    %rax,%rsi
   12e80:	48 89 df             	mov    %rbx,%rdi
   12e83:	e8 90 ed ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12e88:	84 c0                	test   %al,%al
   12e8a:	0f 84 66 01 00 00    	je     12ff6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   12e90:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12e97:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   12e9e:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12ea5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12eac:	48 89 c7             	mov    %rax,%rdi
   12eaf:	e8 62 0f 00 00       	call   13e16 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12eb4:	48 8b 00             	mov    (%rax),%rax
   12eb7:	48 39 c3             	cmp    %rax,%rbx
   12eba:	0f 94 c0             	sete   %al
   12ebd:	84 c0                	test   %al,%al
   12ebf:	74 4c                	je     12f0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   12ec1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12ec8:	48 89 c7             	mov    %rax,%rdi
   12ecb:	e8 46 0f 00 00       	call   13e16 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12ed0:	48 89 c3             	mov    %rax,%rbx
   12ed3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12eda:	48 89 c7             	mov    %rax,%rdi
   12edd:	e8 34 0f 00 00       	call   13e16 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12ee2:	48 89 c1             	mov    %rax,%rcx
   12ee5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   12eec:	48 89 da             	mov    %rbx,%rdx
   12eef:	48 89 ce             	mov    %rcx,%rsi
   12ef2:	48 89 c7             	mov    %rax,%rdi
   12ef5:	e8 2e 0f 00 00       	call   13e28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   12efa:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   12f01:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   12f08:	e9 75 02 00 00       	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   12f0d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12f14:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   12f1b:	48 89 c7             	mov    %rax,%rdi
   12f1e:	e8 49 0f 00 00       	call   13e6c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   12f23:	48 8b 00             	mov    (%rax),%rax
   12f26:	48 89 c7             	mov    %rax,%rdi
   12f29:	e8 28 0d 00 00       	call   13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12f2e:	48 89 c1             	mov    %rax,%rcx
   12f31:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12f38:	48 89 c2             	mov    %rax,%rdx
   12f3b:	48 89 ce             	mov    %rcx,%rsi
   12f3e:	48 89 df             	mov    %rbx,%rdi
   12f41:	e8 d2 ec ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12f46:	84 c0                	test   %al,%al
   12f48:	0f 84 8a 00 00 00    	je     12fd8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   12f4e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   12f55:	48 89 c7             	mov    %rax,%rdi
   12f58:	e8 86 fb ff ff       	call   12ae3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12f5d:	48 85 c0             	test   %rax,%rax
   12f60:	0f 94 c0             	sete   %al
   12f63:	84 c0                	test   %al,%al
   12f65:	74 3e                	je     12fa5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   12f67:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   12f6e:	00 00 00 00 
   12f72:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   12f79:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   12f80:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   12f87:	48 89 ce             	mov    %rcx,%rsi
   12f8a:	48 89 c7             	mov    %rax,%rdi
   12f8d:	e8 de 0c 00 00       	call   13c70 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12f92:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12f99:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   12fa0:	e9 dd 01 00 00       	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   12fa5:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   12fac:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   12fb3:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   12fba:	48 89 ce             	mov    %rcx,%rsi
   12fbd:	48 89 c7             	mov    %rax,%rdi
   12fc0:	e8 63 0e 00 00       	call   13e28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   12fc5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12fcc:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   12fd3:	e9 aa 01 00 00       	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   12fd8:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   12fdf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12fe6:	48 89 d6             	mov    %rdx,%rsi
   12fe9:	48 89 c7             	mov    %rax,%rdi
   12fec:	e8 af 0c 00 00       	call   13ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   12ff1:	e9 8c 01 00 00       	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   12ff6:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12ffd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13004:	48 89 c7             	mov    %rax,%rdi
   13007:	e8 4a 0c 00 00       	call   13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1300c:	48 89 c1             	mov    %rax,%rcx
   1300f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13016:	48 89 c2             	mov    %rax,%rdx
   13019:	48 89 ce             	mov    %rcx,%rsi
   1301c:	48 89 df             	mov    %rbx,%rdi
   1301f:	e8 f4 eb ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13024:	84 c0                	test   %al,%al
   13026:	0f 84 2c 01 00 00    	je     13158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   1302c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13033:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   1303a:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   13041:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13048:	48 89 c7             	mov    %rax,%rdi
   1304b:	e8 f4 0b 00 00       	call   13c44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13050:	48 8b 00             	mov    (%rax),%rax
   13053:	48 39 c3             	cmp    %rax,%rbx
   13056:	0f 94 c0             	sete   %al
   13059:	84 c0                	test   %al,%al
   1305b:	74 3a                	je     13097 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   1305d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13064:	48 89 c7             	mov    %rax,%rdi
   13067:	e8 d8 0b 00 00       	call   13c44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1306c:	48 89 c2             	mov    %rax,%rdx
   1306f:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   13076:	00 
   13077:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   1307b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   1307f:	48 89 ce             	mov    %rcx,%rsi
   13082:	48 89 c7             	mov    %rax,%rdi
   13085:	e8 e6 0b 00 00       	call   13c70 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1308a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1308e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   13092:	e9 eb 00 00 00       	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   13097:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   1309e:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   130a5:	48 89 c7             	mov    %rax,%rdi
   130a8:	e8 e7 0d 00 00       	call   13e94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   130ad:	48 8b 00             	mov    (%rax),%rax
   130b0:	48 89 c7             	mov    %rax,%rdi
   130b3:	e8 9e 0b 00 00       	call   13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   130b8:	48 89 c2             	mov    %rax,%rdx
   130bb:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   130c2:	48 89 c6             	mov    %rax,%rsi
   130c5:	48 89 df             	mov    %rbx,%rdi
   130c8:	e8 4b eb ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   130cd:	84 c0                	test   %al,%al
   130cf:	74 6c                	je     1313d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   130d1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   130d8:	48 89 c7             	mov    %rax,%rdi
   130db:	e8 03 fa ff ff       	call   12ae3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   130e0:	48 85 c0             	test   %rax,%rax
   130e3:	0f 94 c0             	sete   %al
   130e6:	84 c0                	test   %al,%al
   130e8:	74 2c                	je     13116 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   130ea:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   130f1:	00 
   130f2:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   130f9:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   130fd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13101:	48 89 ce             	mov    %rcx,%rsi
   13104:	48 89 c7             	mov    %rax,%rdi
   13107:	e8 64 0b 00 00       	call   13c70 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1310c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13110:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13114:	eb 6c                	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   13116:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   1311d:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   13124:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13128:	48 89 ce             	mov    %rcx,%rsi
   1312b:	48 89 c7             	mov    %rax,%rdi
   1312e:	e8 f5 0c 00 00       	call   13e28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13133:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13137:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1313b:	eb 45                	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1313d:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13144:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1314b:	48 89 d6             	mov    %rdx,%rsi
   1314e:	48 89 c7             	mov    %rax,%rdi
   13151:	e8 4a 0b 00 00       	call   13ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13156:	eb 2a                	jmp    13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   13158:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   1315f:	00 
   13160:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   13164:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   1316b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1316f:	48 89 ce             	mov    %rcx,%rsi
   13172:	48 89 c7             	mov    %rax,%rdi
   13175:	e8 f6 0a 00 00       	call   13c70 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1317a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1317e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   13182:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13186:	c9                   	leave
   13187:	c3                   	ret

0000000000013188 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   13188:	55                   	push   %rbp
   13189:	48 89 e5             	mov    %rsp,%rbp
   1318c:	48 83 ec 10          	sub    $0x10,%rsp
   13190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   13194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13198:	48 8b 40 08          	mov    0x8(%rax),%rax
   1319c:	48 89 c7             	mov    %rax,%rdi
   1319f:	e8 18 0d 00 00       	call   13ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   131a4:	c9                   	leave
   131a5:	c3                   	ret

00000000000131a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   131a6:	55                   	push   %rbp
   131a7:	48 89 e5             	mov    %rsp,%rbp
   131aa:	48 83 ec 30          	sub    $0x30,%rsp
   131ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   131b2:	48 89 d1             	mov    %rdx,%rcx
   131b5:	48 89 f0             	mov    %rsi,%rax
   131b8:	48 89 fa             	mov    %rdi,%rdx
   131bb:	48 89 ca             	mov    %rcx,%rdx
   131be:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   131c2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   131c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131ca:	48 8b 00             	mov    (%rax),%rax
   131cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131d1:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   131d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   131d9:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   131dd:	48 89 c7             	mov    %rax,%rdi
   131e0:	e8 03 0d 00 00       	call   13ee8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   131e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   131e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131ed:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   131f4:	00 
	  return __it;
   131f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   131f9:	c9                   	leave
   131fa:	c3                   	ret
   131fb:	90                   	nop

00000000000131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   131fc:	55                   	push   %rbp
   131fd:	48 89 e5             	mov    %rsp,%rbp
   13200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13204:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   13208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1320c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13210:	48 89 10             	mov    %rdx,(%rax)
   13213:	90                   	nop
   13214:	5d                   	pop    %rbp
   13215:	c3                   	ret

0000000000013216 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13216:	55                   	push   %rbp
   13217:	48 89 e5             	mov    %rsp,%rbp
   1321a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1321e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13222:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13226:	48 8b 10             	mov    (%rax),%rdx
   13229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1322d:	48 89 10             	mov    %rdx,(%rax)
   13230:	90                   	nop
   13231:	5d                   	pop    %rbp
   13232:	c3                   	ret
   13233:	90                   	nop

0000000000013234 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   13234:	55                   	push   %rbp
   13235:	48 89 e5             	mov    %rsp,%rbp
   13238:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1323c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13240:	5d                   	pop    %rbp
   13241:	c3                   	ret

0000000000013242 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   13242:	55                   	push   %rbp
   13243:	48 89 e5             	mov    %rsp,%rbp
   13246:	48 83 ec 10          	sub    $0x10,%rsp
   1324a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1324e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   13252:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13256:	48 89 c7             	mov    %rax,%rdi
   13259:	e8 4e 0d 00 00       	call   13fac <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1325e:	48 89 c2             	mov    %rax,%rdx
   13261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13265:	48 89 d6             	mov    %rdx,%rsi
   13268:	48 89 c7             	mov    %rax,%rdi
   1326b:	e8 6a 68 ff ff       	call   9ada <_ZNSaIP9VkImage_TEC1ERKS1_>
   13270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13274:	c9                   	leave
   13275:	c3                   	ret

0000000000013276 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13276:	55                   	push   %rbp
   13277:	48 89 e5             	mov    %rsp,%rbp
   1327a:	48 83 ec 10          	sub    $0x10,%rsp
   1327e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13282:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   13286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1328a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1328e:	48 89 d6             	mov    %rdx,%rsi
   13291:	48 89 c7             	mov    %rax,%rdi
   13294:	e8 21 0d 00 00       	call   13fba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   13299:	90                   	nop
   1329a:	c9                   	leave
   1329b:	c3                   	ret

000000000001329c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   1329c:	55                   	push   %rbp
   1329d:	48 89 e5             	mov    %rsp,%rbp
   132a0:	48 83 ec 30          	sub    $0x30,%rsp
   132a4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   132a8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   132ac:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   132b0:	48 89 c7             	mov    %rax,%rdi
   132b3:	e8 a4 7c ff ff       	call   af5c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   132b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   132bc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   132c0:	48 89 d6             	mov    %rdx,%rsi
   132c3:	48 89 c7             	mov    %rax,%rdi
   132c6:	e8 15 0d 00 00       	call   13fe0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   132cb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   132cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132d3:	48 89 d6             	mov    %rdx,%rsi
   132d6:	48 89 c7             	mov    %rax,%rdi
   132d9:	e8 02 0d 00 00       	call   13fe0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   132de:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   132e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   132e6:	48 89 d6             	mov    %rdx,%rsi
   132e9:	48 89 c7             	mov    %rax,%rdi
   132ec:	e8 ef 0c 00 00       	call   13fe0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   132f1:	90                   	nop
   132f2:	c9                   	leave
   132f3:	c3                   	ret

00000000000132f4 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   132f4:	55                   	push   %rbp
   132f5:	48 89 e5             	mov    %rsp,%rbp
   132f8:	48 83 ec 10          	sub    $0x10,%rsp
   132fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13300:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   13304:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13308:	48 89 c7             	mov    %rax,%rdi
   1330b:	e8 0d 0d 00 00       	call   1401d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   13310:	90                   	nop
   13311:	c9                   	leave
   13312:	c3                   	ret
   13313:	90                   	nop

0000000000013314 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   13314:	55                   	push   %rbp
   13315:	48 89 e5             	mov    %rsp,%rbp
   13318:	48 83 ec 10          	sub    $0x10,%rsp
   1331c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   13320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13324:	48 89 c7             	mov    %rax,%rdi
   13327:	e8 42 0d 00 00       	call   1406e <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1332c:	48 89 c7             	mov    %rax,%rdi
   1332f:	e8 f7 0c 00 00       	call   1402b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   13334:	c9                   	leave
   13335:	c3                   	ret

0000000000013336 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   13336:	55                   	push   %rbp
   13337:	48 89 e5             	mov    %rsp,%rbp
   1333a:	48 83 ec 20          	sub    $0x20,%rsp
   1333e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13342:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13346:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1334a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1334e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13352:	48 89 d6             	mov    %rdx,%rsi
   13355:	48 89 c7             	mov    %rax,%rdi
   13358:	e8 1f 0d 00 00       	call   1407c <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   1335d:	c9                   	leave
   1335e:	c3                   	ret
   1335f:	90                   	nop

0000000000013360 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   13360:	55                   	push   %rbp
   13361:	48 89 e5             	mov    %rsp,%rbp
   13364:	53                   	push   %rbx
   13365:	48 83 ec 38          	sub    $0x38,%rsp
   13369:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1336d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13371:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   13375:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13379:	48 89 c7             	mov    %rax,%rdi
   1337c:	e8 93 ff ff ff       	call   13314 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13381:	48 89 c3             	mov    %rax,%rbx
   13384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13388:	48 89 c7             	mov    %rax,%rdi
   1338b:	e8 92 eb ff ff       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13390:	48 29 c3             	sub    %rax,%rbx
   13393:	48 89 da             	mov    %rbx,%rdx
   13396:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1339a:	48 39 c2             	cmp    %rax,%rdx
   1339d:	0f 92 c0             	setb   %al
   133a0:	84 c0                	test   %al,%al
   133a2:	74 0c                	je     133b0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   133a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133a8:	48 89 c7             	mov    %rax,%rdi
   133ab:	e8 d0 0d ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   133b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133b4:	48 89 c7             	mov    %rax,%rdi
   133b7:	e8 66 eb ff ff       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   133bc:	48 89 c3             	mov    %rax,%rbx
   133bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133c3:	48 89 c7             	mov    %rax,%rdi
   133c6:	e8 57 eb ff ff       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   133cb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   133cf:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   133d3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   133d7:	48 89 d6             	mov    %rdx,%rsi
   133da:	48 89 c7             	mov    %rax,%rdi
   133dd:	e8 7f 04 00 00       	call   13861 <_ZSt3maxImERKT_S2_S2_>
   133e2:	48 8b 00             	mov    (%rax),%rax
   133e5:	48 01 d8             	add    %rbx,%rax
   133e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   133ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133f0:	48 89 c7             	mov    %rax,%rdi
   133f3:	e8 2a eb ff ff       	call   11f22 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   133f8:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   133fc:	72 12                	jb     13410 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   133fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13402:	48 89 c7             	mov    %rax,%rdi
   13405:	e8 0a ff ff ff       	call   13314 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1340a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1340e:	73 0e                	jae    1341e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   13410:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13414:	48 89 c7             	mov    %rax,%rdi
   13417:	e8 f8 fe ff ff       	call   13314 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1341c:	eb 04                	jmp    13422 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1341e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13422:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13426:	c9                   	leave
   13427:	c3                   	ret

0000000000013428 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13428:	55                   	push   %rbp
   13429:	48 89 e5             	mov    %rsp,%rbp
   1342c:	48 83 ec 10          	sub    $0x10,%rsp
   13430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13434:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13438:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1343d:	74 15                	je     13454 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   1343f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13443:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13447:	48 89 d6             	mov    %rdx,%rsi
   1344a:	48 89 c7             	mov    %rax,%rdi
   1344d:	e8 53 0c 00 00       	call   140a5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   13452:	eb 05                	jmp    13459 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   13454:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13459:	c9                   	leave
   1345a:	c3                   	ret

000000000001345b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1345b:	55                   	push   %rbp
   1345c:	48 89 e5             	mov    %rsp,%rbp
   1345f:	48 83 ec 20          	sub    $0x20,%rsp
   13463:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13467:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1346b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1346f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   13473:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13477:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1347b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1347f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13483:	48 89 c7             	mov    %rax,%rdi
   13486:	e8 44 0c 00 00       	call   140cf <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1348b:	c9                   	leave
   1348c:	c3                   	ret
   1348d:	90                   	nop

000000000001348e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1348e:	55                   	push   %rbp
   1348f:	48 89 e5             	mov    %rsp,%rbp
   13492:	48 83 ec 10          	sub    $0x10,%rsp
   13496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1349a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1349e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   134a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134a6:	48 89 d6             	mov    %rdx,%rsi
   134a9:	48 89 c7             	mov    %rax,%rdi
   134ac:	e8 81 0c 00 00       	call   14132 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   134b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134b5:	48 89 c7             	mov    %rax,%rdi
   134b8:	e8 9b 0c 00 00       	call   14158 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   134bd:	90                   	nop
   134be:	c9                   	leave
   134bf:	c3                   	ret

00000000000134c0 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   134c0:	55                   	push   %rbp
   134c1:	48 89 e5             	mov    %rsp,%rbp
   134c4:	48 83 ec 20          	sub    $0x20,%rsp
   134c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   134d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   134d4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   134d9:	74 17                	je     134f2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   134db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   134e3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   134e7:	48 89 ce             	mov    %rcx,%rsi
   134ea:	48 89 c7             	mov    %rax,%rdi
   134ed:	e8 94 0c 00 00       	call   14186 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   134f2:	90                   	nop
   134f3:	c9                   	leave
   134f4:	c3                   	ret
   134f5:	90                   	nop

00000000000134f6 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   134f6:	55                   	push   %rbp
   134f7:	48 89 e5             	mov    %rsp,%rbp
   134fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13502:	48 8b 40 08          	mov    0x8(%rax),%rax
   13506:	5d                   	pop    %rbp
   13507:	c3                   	ret

0000000000013508 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   13508:	55                   	push   %rbp
   13509:	48 89 e5             	mov    %rsp,%rbp
   1350c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   13510:	90                   	nop
   13511:	5d                   	pop    %rbp
   13512:	c3                   	ret

0000000000013513 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   13513:	55                   	push   %rbp
   13514:	48 89 e5             	mov    %rsp,%rbp
   13517:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1351b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1351f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13523:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   13527:	48 c1 f8 04          	sar    $0x4,%rax
   1352b:	48 89 c2             	mov    %rax,%rdx
   1352e:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   13535:	e3 38 8e 
   13538:	48 0f af c2          	imul   %rdx,%rax
    }
   1353c:	5d                   	pop    %rbp
   1353d:	c3                   	ret

000000000001353e <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1353e:	55                   	push   %rbp
   1353f:	48 89 e5             	mov    %rsp,%rbp
   13542:	53                   	push   %rbx
   13543:	48 83 ec 28          	sub    $0x28,%rsp
   13547:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1354b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1354f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13553:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13557:	48 89 d6             	mov    %rdx,%rsi
   1355a:	48 89 c7             	mov    %rax,%rdi
   1355d:	e8 d0 0b 00 00       	call   14132 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   13562:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13566:	48 89 c7             	mov    %rax,%rdi
   13569:	e8 46 0c 00 00       	call   141b4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   1356e:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   13572:	0f 92 c3             	setb   %bl
   13575:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13579:	48 89 c7             	mov    %rax,%rdi
   1357c:	e8 69 d9 ff ff       	call   10eea <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   13581:	84 db                	test   %bl,%bl
   13583:	74 0f                	je     13594 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   13585:	48 8d 05 6c 67 00 00 	lea    0x676c(%rip),%rax        # 19cf8 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
   1358c:	48 89 c7             	mov    %rax,%rdi
   1358f:	e8 ec 0b ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   13594:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   13598:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1359c:	c9                   	leave
   1359d:	c3                   	ret

000000000001359e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1359e:	55                   	push   %rbp
   1359f:	48 89 e5             	mov    %rsp,%rbp
   135a2:	48 83 ec 10          	sub    $0x10,%rsp
   135a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   135ae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   135b3:	74 15                	je     135ca <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   135b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135bd:	48 89 d6             	mov    %rdx,%rsi
   135c0:	48 89 c7             	mov    %rax,%rdi
   135c3:	e8 2e 0c 00 00       	call   141f6 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   135c8:	eb 05                	jmp    135cf <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   135ca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   135cf:	c9                   	leave
   135d0:	c3                   	ret

00000000000135d1 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   135d1:	55                   	push   %rbp
   135d2:	48 89 e5             	mov    %rsp,%rbp
   135d5:	48 83 ec 20          	sub    $0x20,%rsp
   135d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   135e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   135e5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   135e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   135ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   135f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135f5:	48 89 ce             	mov    %rcx,%rsi
   135f8:	48 89 c7             	mov    %rax,%rdi
   135fb:	e8 20 0c 00 00       	call   14220 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   13600:	c9                   	leave
   13601:	c3                   	ret

0000000000013602 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13602:	55                   	push   %rbp
   13603:	48 89 e5             	mov    %rsp,%rbp
   13606:	48 83 ec 10          	sub    $0x10,%rsp
   1360a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1360e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13612:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1361a:	48 89 d6             	mov    %rdx,%rsi
   1361d:	48 89 c7             	mov    %rax,%rdi
   13620:	e8 30 0c 00 00       	call   14255 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   13625:	90                   	nop
   13626:	c9                   	leave
   13627:	c3                   	ret

0000000000013628 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   13628:	55                   	push   %rbp
   13629:	48 89 e5             	mov    %rsp,%rbp
   1362c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13630:	90                   	nop
   13631:	5d                   	pop    %rbp
   13632:	c3                   	ret
   13633:	90                   	nop

0000000000013634 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13634:	55                   	push   %rbp
   13635:	48 89 e5             	mov    %rsp,%rbp
   13638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1363c:	90                   	nop
   1363d:	5d                   	pop    %rbp
   1363e:	c3                   	ret

000000000001363f <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1363f:	55                   	push   %rbp
   13640:	48 89 e5             	mov    %rsp,%rbp
   13643:	53                   	push   %rbx
   13644:	48 83 ec 28          	sub    $0x28,%rsp
   13648:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1364c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   13650:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13654:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13658:	48 89 d6             	mov    %rdx,%rsi
   1365b:	48 89 c7             	mov    %rax,%rdi
   1365e:	e8 ff 00 00 00       	call   13762 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   13663:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13667:	48 89 c7             	mov    %rax,%rdi
   1366a:	e8 f5 0b 00 00       	call   14264 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   1366f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   13673:	0f 92 c3             	setb   %bl
   13676:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1367a:	48 89 c7             	mov    %rax,%rdi
   1367d:	e8 a2 ed ff ff       	call   12424 <_ZNSaIP12VkPipeline_TED1Ev>
   13682:	84 db                	test   %bl,%bl
   13684:	74 0f                	je     13695 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   13686:	48 8d 05 6b 66 00 00 	lea    0x666b(%rip),%rax        # 19cf8 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
   1368d:	48 89 c7             	mov    %rax,%rdi
   13690:	e8 eb 0a ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   13695:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   13699:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1369d:	c9                   	leave
   1369e:	c3                   	ret
   1369f:	90                   	nop

00000000000136a0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   136a0:	55                   	push   %rbp
   136a1:	48 89 e5             	mov    %rsp,%rbp
   136a4:	53                   	push   %rbx
   136a5:	48 83 ec 28          	sub    $0x28,%rsp
   136a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   136ad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   136b1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   136b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136b9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   136bd:	48 89 d6             	mov    %rdx,%rsi
   136c0:	48 89 c7             	mov    %rax,%rdi
   136c3:	e8 de 0b 00 00       	call   142a6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   136c8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   136cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136d0:	48 89 d6             	mov    %rdx,%rsi
   136d3:	48 89 c7             	mov    %rax,%rdi
   136d6:	e8 fd 0b 00 00       	call   142d8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   136db:	eb 1a                	jmp    136f7 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   136dd:	48 89 c3             	mov    %rax,%rbx
   136e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   136e4:	48 89 c7             	mov    %rax,%rdi
   136e7:	e8 e6 d8 ff ff       	call   10fd2 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   136ec:	48 89 d8             	mov    %rbx,%rax
   136ef:	48 89 c7             	mov    %rax,%rdi
   136f2:	e8 f9 0f ff ff       	call   46f0 <_Unwind_Resume@plt>
   136f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   136fb:	c9                   	leave
   136fc:	c3                   	ret
   136fd:	90                   	nop

00000000000136fe <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   136fe:	55                   	push   %rbp
   136ff:	48 89 e5             	mov    %rsp,%rbp
   13702:	48 83 ec 10          	sub    $0x10,%rsp
   13706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1370a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   1370e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13712:	48 89 c7             	mov    %rax,%rdi
   13715:	e8 32 ee ff ff       	call   1254c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1371a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   1371d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13721:	48 8b 00             	mov    (%rax),%rax
   13724:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13728:	48 89 ce             	mov    %rcx,%rsi
   1372b:	48 89 c7             	mov    %rax,%rdi
   1372e:	e8 fb 0b 00 00       	call   1432e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   13733:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13737:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   1373b:	90                   	nop
   1373c:	c9                   	leave
   1373d:	c3                   	ret

000000000001373e <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1373e:	55                   	push   %rbp
   1373f:	48 89 e5             	mov    %rsp,%rbp
   13742:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13746:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1374a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1374e:	5d                   	pop    %rbp
   1374f:	c3                   	ret

0000000000013750 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   13750:	55                   	push   %rbp
   13751:	48 89 e5             	mov    %rsp,%rbp
   13754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1375c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13760:	5d                   	pop    %rbp
   13761:	c3                   	ret

0000000000013762 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   13762:	55                   	push   %rbp
   13763:	48 89 e5             	mov    %rsp,%rbp
   13766:	48 83 ec 10          	sub    $0x10,%rsp
   1376a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1376e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   13772:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1377a:	48 89 d6             	mov    %rdx,%rsi
   1377d:	48 89 c7             	mov    %rax,%rdi
   13780:	e8 d3 0b 00 00       	call   14358 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   13785:	90                   	nop
   13786:	c9                   	leave
   13787:	c3                   	ret

0000000000013788 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   13788:	55                   	push   %rbp
   13789:	48 89 e5             	mov    %rsp,%rbp
   1378c:	48 83 ec 20          	sub    $0x20,%rsp
   13790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13794:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13798:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1379c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   137a1:	74 17                	je     137ba <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   137a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   137ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   137af:	48 89 ce             	mov    %rcx,%rsi
   137b2:	48 89 c7             	mov    %rax,%rdi
   137b5:	e8 ad 0b 00 00       	call   14367 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   137ba:	90                   	nop
   137bb:	c9                   	leave
   137bc:	c3                   	ret

00000000000137bd <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   137bd:	55                   	push   %rbp
   137be:	48 89 e5             	mov    %rsp,%rbp
   137c1:	48 83 ec 10          	sub    $0x10,%rsp
   137c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   137cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   137d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137d5:	48 89 d6             	mov    %rdx,%rsi
   137d8:	48 89 c7             	mov    %rax,%rdi
   137db:	e8 b5 0b 00 00       	call   14395 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   137e0:	90                   	nop
   137e1:	c9                   	leave
   137e2:	c3                   	ret
   137e3:	90                   	nop

00000000000137e4 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   137e4:	55                   	push   %rbp
   137e5:	48 89 e5             	mov    %rsp,%rbp
   137e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137ec:	90                   	nop
   137ed:	5d                   	pop    %rbp
   137ee:	c3                   	ret

00000000000137ef <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   137ef:	55                   	push   %rbp
   137f0:	48 89 e5             	mov    %rsp,%rbp
   137f3:	48 83 ec 20          	sub    $0x20,%rsp
   137f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   137ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13803:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13807:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1380b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1380f:	48 89 ce             	mov    %rcx,%rsi
   13812:	48 89 c7             	mov    %rax,%rdi
   13815:	e8 8a 0b 00 00       	call   143a4 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   1381a:	90                   	nop
   1381b:	c9                   	leave
   1381c:	c3                   	ret

000000000001381d <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1381d:	55                   	push   %rbp
   1381e:	48 89 e5             	mov    %rsp,%rbp
   13821:	48 83 ec 10          	sub    $0x10,%rsp
   13825:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13829:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1382d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13835:	48 89 d6             	mov    %rdx,%rsi
   13838:	48 89 c7             	mov    %rax,%rdi
   1383b:	e8 95 0b 00 00       	call   143d5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   13840:	90                   	nop
   13841:	c9                   	leave
   13842:	c3                   	ret
   13843:	90                   	nop

0000000000013844 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   13844:	55                   	push   %rbp
   13845:	48 89 e5             	mov    %rsp,%rbp
   13848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1384c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   13850:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13854:	48 8b 10             	mov    (%rax),%rdx
   13857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1385b:	48 89 10             	mov    %rdx,(%rax)
   1385e:	90                   	nop
   1385f:	5d                   	pop    %rbp
   13860:	c3                   	ret

0000000000013861 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   13861:	55                   	push   %rbp
   13862:	48 89 e5             	mov    %rsp,%rbp
   13865:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13869:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   1386d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13871:	48 8b 10             	mov    (%rax),%rdx
   13874:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13878:	48 8b 00             	mov    (%rax),%rax
   1387b:	48 39 c2             	cmp    %rax,%rdx
   1387e:	73 06                	jae    13886 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   13880:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13884:	eb 04                	jmp    1388a <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   13886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   1388a:	5d                   	pop    %rbp
   1388b:	c3                   	ret

000000000001388c <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1388c:	55                   	push   %rbp
   1388d:	48 89 e5             	mov    %rsp,%rbp
   13890:	48 83 ec 30          	sub    $0x30,%rsp
   13894:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13898:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1389c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   138a0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   138a4:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   138a8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   138ac:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   138b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138b4:	48 89 ce             	mov    %rcx,%rsi
   138b7:	48 89 c7             	mov    %rax,%rdi
   138ba:	e8 25 0b 00 00       	call   143e4 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   138bf:	c9                   	leave
   138c0:	c3                   	ret

00000000000138c1 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   138c1:	55                   	push   %rbp
   138c2:	48 89 e5             	mov    %rsp,%rbp
   138c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   138cd:	90                   	nop
   138ce:	5d                   	pop    %rbp
   138cf:	c3                   	ret

00000000000138d0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   138d0:	55                   	push   %rbp
   138d1:	48 89 e5             	mov    %rsp,%rbp
   138d4:	48 83 ec 10          	sub    $0x10,%rsp
   138d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   138dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138e0:	48 89 c7             	mov    %rax,%rdi
   138e3:	e8 2a 0b 00 00       	call   14412 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   138e8:	48 89 c7             	mov    %rax,%rdi
   138eb:	e8 09 65 ff ff       	call   9df9 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   138f0:	c9                   	leave
   138f1:	c3                   	ret

00000000000138f2 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   138f2:	55                   	push   %rbp
   138f3:	48 89 e5             	mov    %rsp,%rbp
   138f6:	41 54                	push   %r12
   138f8:	53                   	push   %rbx
   138f9:	48 83 ec 20          	sub    $0x20,%rsp
   138fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13901:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13905:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13909:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   1390d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13911:	48 89 c7             	mov    %rax,%rdi
   13914:	e8 07 0b 00 00       	call   14420 <_ZSt12__niter_baseIPPKcET_S3_>
   13919:	49 89 c4             	mov    %rax,%r12
   1391c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13920:	48 89 c7             	mov    %rax,%rdi
   13923:	e8 f8 0a 00 00       	call   14420 <_ZSt12__niter_baseIPPKcET_S3_>
   13928:	48 89 c3             	mov    %rax,%rbx
   1392b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1392f:	48 89 c7             	mov    %rax,%rdi
   13932:	e8 e9 0a 00 00       	call   14420 <_ZSt12__niter_baseIPPKcET_S3_>
   13937:	48 89 c7             	mov    %rax,%rdi
   1393a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1393e:	48 89 c1             	mov    %rax,%rcx
   13941:	4c 89 e2             	mov    %r12,%rdx
   13944:	48 89 de             	mov    %rbx,%rsi
   13947:	e8 e2 0a 00 00       	call   1442e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   1394c:	48 83 c4 20          	add    $0x20,%rsp
   13950:	5b                   	pop    %rbx
   13951:	41 5c                	pop    %r12
   13953:	5d                   	pop    %rbp
   13954:	c3                   	ret
   13955:	90                   	nop

0000000000013956 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   13956:	55                   	push   %rbp
   13957:	48 89 e5             	mov    %rsp,%rbp
   1395a:	48 83 ec 10          	sub    $0x10,%rsp
   1395e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13962:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   13966:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1396a:	48 89 c7             	mov    %rax,%rdi
   1396d:	e8 f6 df ff ff       	call   11968 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13972:	48 89 c1             	mov    %rax,%rcx
   13975:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   13979:	48 8b 01             	mov    (%rcx),%rax
   1397c:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13980:	48 89 06             	mov    %rax,(%rsi)
   13983:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   13987:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   1398b:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   1398f:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   13993:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   13997:	90                   	nop
   13998:	c9                   	leave
   13999:	c3                   	ret

000000000001399a <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1399a:	55                   	push   %rbp
   1399b:	48 89 e5             	mov    %rsp,%rbp
   1399e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   139a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139a6:	5d                   	pop    %rbp
   139a7:	c3                   	ret

00000000000139a8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   139a8:	55                   	push   %rbp
   139a9:	48 89 e5             	mov    %rsp,%rbp
   139ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   139b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139b4:	5d                   	pop    %rbp
   139b5:	c3                   	ret

00000000000139b6 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   139b6:	55                   	push   %rbp
   139b7:	48 89 e5             	mov    %rsp,%rbp
   139ba:	53                   	push   %rbx
   139bb:	48 83 ec 18          	sub    $0x18,%rsp
   139bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   139c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   139c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139cb:	48 89 c6             	mov    %rax,%rsi
   139ce:	bf 1c 00 00 00       	mov    $0x1c,%edi
   139d3:	e8 88 14 ff ff       	call   4e60 <_ZnwmPv>
   139d8:	48 89 c3             	mov    %rax,%rbx
   139db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   139df:	48 89 c7             	mov    %rax,%rdi
   139e2:	e8 c1 ff ff ff       	call   139a8 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   139e7:	48 89 c1             	mov    %rax,%rcx
   139ea:	48 8b 01             	mov    (%rcx),%rax
   139ed:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   139f1:	48 89 03             	mov    %rax,(%rbx)
   139f4:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   139f8:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   139fc:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   13a00:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   13a04:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   13a08:	90                   	nop
   13a09:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a0d:	c9                   	leave
   13a0e:	c3                   	ret
   13a0f:	90                   	nop

0000000000013a10 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   13a10:	55                   	push   %rbp
   13a11:	48 89 e5             	mov    %rsp,%rbp
   13a14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   13a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a1c:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   13a20:	90                   	nop
   13a21:	5d                   	pop    %rbp
   13a22:	c3                   	ret
   13a23:	90                   	nop

0000000000013a24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13a24:	55                   	push   %rbp
   13a25:	48 89 e5             	mov    %rsp,%rbp
   13a28:	53                   	push   %rbx
   13a29:	48 83 ec 18          	sub    $0x18,%rsp
   13a2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13a31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   13a35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13a39:	48 89 c7             	mov    %rax,%rdi
   13a3c:	e8 95 f1 ff ff       	call   12bd6 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   13a41:	48 89 c3             	mov    %rax,%rbx
   13a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a48:	48 89 c7             	mov    %rax,%rdi
   13a4b:	e8 42 0a 00 00       	call   14492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13a50:	48 89 de             	mov    %rbx,%rsi
   13a53:	48 89 c7             	mov    %rax,%rdi
   13a56:	e8 45 0a 00 00       	call   144a0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   13a5b:	90                   	nop
   13a5c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a60:	c9                   	leave
   13a61:	c3                   	ret

0000000000013a62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13a62:	55                   	push   %rbp
   13a63:	48 89 e5             	mov    %rsp,%rbp
   13a66:	48 83 ec 10          	sub    $0x10,%rsp
   13a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   13a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a76:	48 89 c7             	mov    %rax,%rdi
   13a79:	e8 14 0a 00 00       	call   14492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13a7e:	48 89 c1             	mov    %rax,%rcx
   13a81:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13a85:	ba 01 00 00 00       	mov    $0x1,%edx
   13a8a:	48 89 c6             	mov    %rax,%rsi
   13a8d:	48 89 cf             	mov    %rcx,%rdi
   13a90:	e8 31 0a 00 00       	call   144c6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   13a95:	90                   	nop
   13a96:	c9                   	leave
   13a97:	c3                   	ret

0000000000013a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   13a98:	55                   	push   %rbp
   13a99:	48 89 e5             	mov    %rsp,%rbp
   13a9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   13aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aa4:	48 83 c0 08          	add    $0x8,%rax
   13aa8:	5d                   	pop    %rbp
   13aa9:	c3                   	ret

0000000000013aaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13aaa:	55                   	push   %rbp
   13aab:	48 89 e5             	mov    %rsp,%rbp
   13aae:	53                   	push   %rbx
   13aaf:	48 83 ec 38          	sub    $0x38,%rsp
   13ab3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13ab7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13abb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13abf:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   13ac3:	eb 56                	jmp    13b1b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   13ac5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13ac9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13acd:	48 89 c7             	mov    %rax,%rdi
   13ad0:	e8 e7 03 00 00       	call   13ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13ad5:	48 89 c1             	mov    %rax,%rcx
   13ad8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13adc:	48 89 c2             	mov    %rax,%rdx
   13adf:	48 89 ce             	mov    %rcx,%rsi
   13ae2:	48 89 df             	mov    %rbx,%rdi
   13ae5:	e8 2e e1 ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13aea:	83 f0 01             	xor    $0x1,%eax
   13aed:	84 c0                	test   %al,%al
   13aef:	74 1a                	je     13b0b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   13af1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13af5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   13af9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13afd:	48 89 c7             	mov    %rax,%rdi
   13b00:	e8 f0 ef ff ff       	call   12af5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13b05:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13b09:	eb 10                	jmp    13b1b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   13b0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13b0f:	48 89 c7             	mov    %rax,%rdi
   13b12:	e8 cc ef ff ff       	call   12ae3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13b17:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   13b1b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13b20:	75 a3                	jne    13ac5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   13b22:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13b26:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13b2a:	48 89 d6             	mov    %rdx,%rsi
   13b2d:	48 89 c7             	mov    %rax,%rdi
   13b30:	e8 c7 f6 ff ff       	call   131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13b35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   13b39:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13b3d:	c9                   	leave
   13b3e:	c3                   	ret
   13b3f:	90                   	nop

0000000000013b40 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   13b40:	55                   	push   %rbp
   13b41:	48 89 e5             	mov    %rsp,%rbp
   13b44:	48 83 ec 10          	sub    $0x10,%rsp
   13b48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   13b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b50:	48 89 c7             	mov    %rax,%rdi
   13b53:	e8 9c 09 00 00       	call   144f4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   13b58:	c9                   	leave
   13b59:	c3                   	ret

0000000000013b5a <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   13b5a:	55                   	push   %rbp
   13b5b:	48 89 e5             	mov    %rsp,%rbp
   13b5e:	53                   	push   %rbx
   13b5f:	48 83 ec 18          	sub    $0x18,%rsp
   13b63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13b67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   13b6b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13b6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b73:	48 89 c7             	mov    %rax,%rdi
   13b76:	e8 a1 f0 ff ff       	call   12c1c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   13b7b:	48 89 c6             	mov    %rax,%rsi
   13b7e:	48 89 df             	mov    %rbx,%rdi
   13b81:	e8 7c 09 00 00       	call   14502 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   13b86:	90                   	nop
   13b87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13b8b:	c9                   	leave
   13b8c:	c3                   	ret
   13b8d:	90                   	nop

0000000000013b8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   13b8e:	55                   	push   %rbp
   13b8f:	48 89 e5             	mov    %rsp,%rbp
   13b92:	41 54                	push   %r12
   13b94:	53                   	push   %rbx
   13b95:	48 83 ec 30          	sub    $0x30,%rsp
   13b99:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13b9d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13ba1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13ba5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   13ba9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13bad:	48 89 c7             	mov    %rax,%rdi
   13bb0:	e8 73 09 00 00       	call   14528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   13bb5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   13bb9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13bbd:	48 89 c7             	mov    %rax,%rdi
   13bc0:	e8 b4 f0 ff ff       	call   12c79 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   13bc5:	49 89 c4             	mov    %rax,%r12
   13bc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bcc:	48 89 c7             	mov    %rax,%rdi
   13bcf:	e8 97 f0 ff ff       	call   12c6b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   13bd4:	48 89 c3             	mov    %rax,%rbx
   13bd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13bdb:	48 89 c7             	mov    %rax,%rdi
   13bde:	e8 7a f0 ff ff       	call   12c5d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   13be3:	48 89 c2             	mov    %rax,%rdx
   13be6:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   13bea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13bee:	4d 89 e0             	mov    %r12,%r8
   13bf1:	48 89 d9             	mov    %rbx,%rcx
   13bf4:	48 89 c7             	mov    %rax,%rdi
   13bf7:	e8 54 09 00 00       	call   14550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   13bfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   13c00:	48 83 c4 30          	add    $0x30,%rsp
   13c04:	5b                   	pop    %rbx
   13c05:	41 5c                	pop    %r12
   13c07:	5d                   	pop    %rbp
   13c08:	c3                   	ret
   13c09:	90                   	nop

0000000000013c0a <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   13c0a:	55                   	push   %rbp
   13c0b:	48 89 e5             	mov    %rsp,%rbp
   13c0e:	48 83 ec 20          	sub    $0x20,%rsp
   13c12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   13c16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c1a:	48 8b 10             	mov    (%rax),%rdx
   13c1d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13c21:	48 89 d6             	mov    %rdx,%rsi
   13c24:	48 89 c7             	mov    %rax,%rdi
   13c27:	e8 d0 f5 ff ff       	call   131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c30:	c9                   	leave
   13c31:	c3                   	ret

0000000000013c32 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13c32:	55                   	push   %rbp
   13c33:	48 89 e5             	mov    %rsp,%rbp
   13c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   13c3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c3e:	48 8b 40 28          	mov    0x28(%rax),%rax
   13c42:	5d                   	pop    %rbp
   13c43:	c3                   	ret

0000000000013c44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   13c44:	55                   	push   %rbp
   13c45:	48 89 e5             	mov    %rsp,%rbp
   13c48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   13c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c50:	48 83 c0 20          	add    $0x20,%rax
   13c54:	5d                   	pop    %rbp
   13c55:	c3                   	ret

0000000000013c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   13c56:	55                   	push   %rbp
   13c57:	48 89 e5             	mov    %rsp,%rbp
   13c5a:	48 83 ec 10          	sub    $0x10,%rsp
   13c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   13c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c66:	48 89 c7             	mov    %rax,%rdi
   13c69:	e8 4e 02 00 00       	call   13ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13c6e:	c9                   	leave
   13c6f:	c3                   	ret

0000000000013c70 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   13c70:	55                   	push   %rbp
   13c71:	48 89 e5             	mov    %rsp,%rbp
   13c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13c7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   13c80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c84:	48 8b 10             	mov    (%rax),%rdx
   13c87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c8b:	48 89 10             	mov    %rdx,(%rax)
   13c8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c92:	48 8b 10             	mov    (%rax),%rdx
   13c95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c99:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13c9d:	90                   	nop
   13c9e:	5d                   	pop    %rbp
   13c9f:	c3                   	ret

0000000000013ca0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13ca0:	55                   	push   %rbp
   13ca1:	48 89 e5             	mov    %rsp,%rbp
   13ca4:	53                   	push   %rbx
   13ca5:	48 83 ec 78          	sub    $0x78,%rsp
   13ca9:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   13cad:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   13cb1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13cb5:	48 89 c7             	mov    %rax,%rdi
   13cb8:	e8 79 de ff ff       	call   11b36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   13cbd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   13cc1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13cc5:	48 89 c7             	mov    %rax,%rdi
   13cc8:	e8 cb fd ff ff       	call   13a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   13ccd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   13cd1:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   13cd5:	eb 51                	jmp    13d28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   13cd7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13cdb:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   13cdf:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13ce3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13ce7:	48 89 c7             	mov    %rax,%rdi
   13cea:	e8 cd 01 00 00       	call   13ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13cef:	48 89 c2             	mov    %rax,%rdx
   13cf2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13cf6:	48 89 c6             	mov    %rax,%rsi
   13cf9:	48 89 df             	mov    %rbx,%rdi
   13cfc:	e8 17 df ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13d01:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   13d04:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   13d08:	74 0e                	je     13d18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   13d0a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13d0e:	48 89 c7             	mov    %rax,%rdi
   13d11:	e8 df ed ff ff       	call   12af5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13d16:	eb 0c                	jmp    13d24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   13d18:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13d1c:	48 89 c7             	mov    %rax,%rdi
   13d1f:	e8 bf ed ff ff       	call   12ae3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13d24:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   13d28:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13d2c:	48 85 c0             	test   %rax,%rax
   13d2f:	75 a6                	jne    13cd7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   13d31:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   13d35:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13d39:	48 89 d6             	mov    %rdx,%rsi
   13d3c:	48 89 c7             	mov    %rax,%rdi
   13d3f:	e8 b8 f4 ff ff       	call   131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   13d44:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   13d48:	74 54                	je     13d9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   13d4a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13d4e:	48 89 c7             	mov    %rax,%rdi
   13d51:	e8 cc 08 00 00       	call   14622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   13d56:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   13d5a:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   13d5e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13d62:	48 89 d6             	mov    %rdx,%rsi
   13d65:	48 89 c7             	mov    %rax,%rdi
   13d68:	e8 4f de ff ff       	call   11bbc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   13d6d:	84 c0                	test   %al,%al
   13d6f:	74 21                	je     13d92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   13d71:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   13d75:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   13d79:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   13d7d:	48 89 ce             	mov    %rcx,%rsi
   13d80:	48 89 c7             	mov    %rax,%rdi
   13d83:	e8 c4 08 00 00       	call   1464c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   13d88:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13d8c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13d90:	eb 7d                	jmp    13e0f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   13d92:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13d96:	48 89 c7             	mov    %rax,%rdi
   13d99:	e8 ce 00 00 00       	call   13e6c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   13d9e:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13da2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   13da6:	48 89 c7             	mov    %rax,%rdi
   13da9:	e8 a8 fe ff ff       	call   13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13dae:	48 89 c1             	mov    %rax,%rcx
   13db1:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13db5:	48 89 c2             	mov    %rax,%rdx
   13db8:	48 89 ce             	mov    %rcx,%rsi
   13dbb:	48 89 df             	mov    %rbx,%rdi
   13dbe:	e8 55 de ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13dc3:	84 c0                	test   %al,%al
   13dc5:	74 21                	je     13de8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   13dc7:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   13dcb:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   13dcf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13dd3:	48 89 ce             	mov    %rcx,%rsi
   13dd6:	48 89 c7             	mov    %rax,%rdi
   13dd9:	e8 6e 08 00 00       	call   1464c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   13dde:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13de2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13de6:	eb 27                	jmp    13e0f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   13de8:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   13def:	00 
   13df0:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13df4:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   13df8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13dfc:	48 89 ce             	mov    %rcx,%rsi
   13dff:	48 89 c7             	mov    %rax,%rdi
   13e02:	e8 69 fe ff ff       	call   13c70 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13e07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13e0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   13e0f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13e13:	c9                   	leave
   13e14:	c3                   	ret
   13e15:	90                   	nop

0000000000013e16 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   13e16:	55                   	push   %rbp
   13e17:	48 89 e5             	mov    %rsp,%rbp
   13e1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   13e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e22:	48 83 c0 18          	add    $0x18,%rax
   13e26:	5d                   	pop    %rbp
   13e27:	c3                   	ret

0000000000013e28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   13e28:	55                   	push   %rbp
   13e29:	48 89 e5             	mov    %rsp,%rbp
   13e2c:	48 83 ec 20          	sub    $0x20,%rsp
   13e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13e38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   13e3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13e40:	48 89 c7             	mov    %rax,%rdi
   13e43:	e8 48 08 00 00       	call   14690 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   13e48:	48 8b 10             	mov    (%rax),%rdx
   13e4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e4f:	48 89 10             	mov    %rdx,(%rax)
   13e52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e56:	48 89 c7             	mov    %rax,%rdi
   13e59:	e8 32 08 00 00       	call   14690 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   13e5e:	48 8b 10             	mov    (%rax),%rdx
   13e61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e65:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13e69:	90                   	nop
   13e6a:	c9                   	leave
   13e6b:	c3                   	ret

0000000000013e6c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   13e6c:	55                   	push   %rbp
   13e6d:	48 89 e5             	mov    %rsp,%rbp
   13e70:	48 83 ec 10          	sub    $0x10,%rsp
   13e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   13e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e7c:	48 8b 00             	mov    (%rax),%rax
   13e7f:	48 89 c7             	mov    %rax,%rdi
   13e82:	e8 49 05 ff ff       	call   43d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   13e87:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13e8b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   13e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13e92:	c9                   	leave
   13e93:	c3                   	ret

0000000000013e94 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13e94:	55                   	push   %rbp
   13e95:	48 89 e5             	mov    %rsp,%rbp
   13e98:	48 83 ec 10          	sub    $0x10,%rsp
   13e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   13ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ea4:	48 8b 00             	mov    (%rax),%rax
   13ea7:	48 89 c7             	mov    %rax,%rdi
   13eaa:	e8 61 03 ff ff       	call   4210 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   13eaf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13eb3:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   13eb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13eba:	c9                   	leave
   13ebb:	c3                   	ret

0000000000013ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   13ebc:	55                   	push   %rbp
   13ebd:	48 89 e5             	mov    %rsp,%rbp
   13ec0:	48 83 ec 20          	sub    $0x20,%rsp
   13ec4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   13ec8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ecc:	48 89 c7             	mov    %rax,%rdi
   13ecf:	e8 ca 07 00 00       	call   1469e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   13ed4:	48 89 c2             	mov    %rax,%rdx
   13ed7:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   13edb:	48 89 d6             	mov    %rdx,%rsi
   13ede:	48 89 c7             	mov    %rax,%rdi
   13ee1:	e8 d6 07 00 00       	call   146bc <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   13ee6:	c9                   	leave
   13ee7:	c3                   	ret

0000000000013ee8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13ee8:	55                   	push   %rbp
   13ee9:	48 89 e5             	mov    %rsp,%rbp
   13eec:	41 54                	push   %r12
   13eee:	53                   	push   %rbx
   13eef:	48 83 ec 30          	sub    $0x30,%rsp
   13ef3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13ef7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13efb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13eff:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   13f03:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13f08:	75 43                	jne    13f4d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   13f0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f0e:	48 89 c7             	mov    %rax,%rdi
   13f11:	e8 82 fb ff ff       	call   13a98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   13f16:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   13f1a:	74 31                	je     13f4d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   13f1c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13f20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13f24:	48 89 c7             	mov    %rax,%rdi
   13f27:	e8 2a fd ff ff       	call   13c56 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13f2c:	49 89 c4             	mov    %rax,%r12
   13f2f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13f33:	48 89 c7             	mov    %rax,%rdi
   13f36:	e8 81 ff ff ff       	call   13ebc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13f3b:	4c 89 e2             	mov    %r12,%rdx
   13f3e:	48 89 c6             	mov    %rax,%rsi
   13f41:	48 89 df             	mov    %rbx,%rdi
   13f44:	e8 cf dc ff ff       	call   11c18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13f49:	84 c0                	test   %al,%al
   13f4b:	74 07                	je     13f54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   13f4d:	b8 01 00 00 00       	mov    $0x1,%eax
   13f52:	eb 05                	jmp    13f59 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   13f54:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   13f59:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   13f5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f60:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   13f64:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   13f68:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13f6c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   13f70:	89 c7                	mov    %eax,%edi
   13f72:	e8 d9 00 ff ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   13f77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f7b:	48 8b 40 28          	mov    0x28(%rax),%rax
   13f7f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   13f83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f87:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   13f8b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13f8f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13f93:	48 89 d6             	mov    %rdx,%rsi
   13f96:	48 89 c7             	mov    %rax,%rdi
   13f99:	e8 5e f2 ff ff       	call   131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13f9e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   13fa2:	48 83 c4 30          	add    $0x30,%rsp
   13fa6:	5b                   	pop    %rbx
   13fa7:	41 5c                	pop    %r12
   13fa9:	5d                   	pop    %rbp
   13faa:	c3                   	ret
   13fab:	90                   	nop

0000000000013fac <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   13fac:	55                   	push   %rbp
   13fad:	48 89 e5             	mov    %rsp,%rbp
   13fb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fb8:	5d                   	pop    %rbp
   13fb9:	c3                   	ret

0000000000013fba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13fba:	55                   	push   %rbp
   13fbb:	48 89 e5             	mov    %rsp,%rbp
   13fbe:	48 83 ec 10          	sub    $0x10,%rsp
   13fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13fc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13fca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13fd2:	48 89 d6             	mov    %rdx,%rsi
   13fd5:	48 89 c7             	mov    %rax,%rdi
   13fd8:	e8 b1 66 ff ff       	call   a68e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   13fdd:	90                   	nop
   13fde:	c9                   	leave
   13fdf:	c3                   	ret

0000000000013fe0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   13fe0:	55                   	push   %rbp
   13fe1:	48 89 e5             	mov    %rsp,%rbp
   13fe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13fe8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   13fec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ff0:	48 8b 10             	mov    (%rax),%rdx
   13ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ff7:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   13ffa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ffe:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14006:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1400a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1400e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   14012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14016:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1401a:	90                   	nop
   1401b:	5d                   	pop    %rbp
   1401c:	c3                   	ret

000000000001401d <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   1401d:	55                   	push   %rbp
   1401e:	48 89 e5             	mov    %rsp,%rbp
   14021:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   14025:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14029:	5d                   	pop    %rbp
   1402a:	c3                   	ret

000000000001402b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1402b:	55                   	push   %rbp
   1402c:	48 89 e5             	mov    %rsp,%rbp
   1402f:	48 83 ec 20          	sub    $0x20,%rsp
   14033:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14037:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1403e:	ff ff 0f 
   14041:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14045:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14049:	48 89 c7             	mov    %rax,%rdi
   1404c:	e8 7d 06 00 00       	call   146ce <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   14051:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14055:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14059:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1405d:	48 89 d6             	mov    %rdx,%rsi
   14060:	48 89 c7             	mov    %rax,%rdi
   14063:	e8 c5 12 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
   14068:	48 8b 00             	mov    (%rax),%rax
      }
   1406b:	c9                   	leave
   1406c:	c3                   	ret
   1406d:	90                   	nop

000000000001406e <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1406e:	55                   	push   %rbp
   1406f:	48 89 e5             	mov    %rsp,%rbp
   14072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1407a:	5d                   	pop    %rbp
   1407b:	c3                   	ret

000000000001407c <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1407c:	55                   	push   %rbp
   1407d:	48 89 e5             	mov    %rsp,%rbp
   14080:	48 83 ec 20          	sub    $0x20,%rsp
   14084:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14088:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1408c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14090:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14094:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14098:	48 89 d6             	mov    %rdx,%rsi
   1409b:	48 89 c7             	mov    %rax,%rdi
   1409e:	e8 45 06 00 00       	call   146e8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   140a3:	c9                   	leave
   140a4:	c3                   	ret

00000000000140a5 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   140a5:	55                   	push   %rbp
   140a6:	48 89 e5             	mov    %rsp,%rbp
   140a9:	48 83 ec 10          	sub    $0x10,%rsp
   140ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   140b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   140b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140bd:	ba 00 00 00 00       	mov    $0x0,%edx
   140c2:	48 89 ce             	mov    %rcx,%rsi
   140c5:	48 89 c7             	mov    %rax,%rdi
   140c8:	e8 79 06 00 00       	call   14746 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   140cd:	c9                   	leave
   140ce:	c3                   	ret

00000000000140cf <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   140cf:	55                   	push   %rbp
   140d0:	48 89 e5             	mov    %rsp,%rbp
   140d3:	41 54                	push   %r12
   140d5:	53                   	push   %rbx
   140d6:	48 83 ec 20          	sub    $0x20,%rsp
   140da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   140de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   140e2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   140e6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   140ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140ee:	48 89 c7             	mov    %rax,%rdi
   140f1:	e8 b1 06 00 00       	call   147a7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   140f6:	49 89 c4             	mov    %rax,%r12
   140f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   140fd:	48 89 c7             	mov    %rax,%rdi
   14100:	e8 a2 06 00 00       	call   147a7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14105:	48 89 c3             	mov    %rax,%rbx
   14108:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1410c:	48 89 c7             	mov    %rax,%rdi
   1410f:	e8 93 06 00 00       	call   147a7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14114:	48 89 c7             	mov    %rax,%rdi
   14117:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1411b:	48 89 c1             	mov    %rax,%rcx
   1411e:	4c 89 e2             	mov    %r12,%rdx
   14121:	48 89 de             	mov    %rbx,%rsi
   14124:	e8 8c 06 00 00       	call   147b5 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14129:	48 83 c4 20          	add    $0x20,%rsp
   1412d:	5b                   	pop    %rbx
   1412e:	41 5c                	pop    %r12
   14130:	5d                   	pop    %rbp
   14131:	c3                   	ret

0000000000014132 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   14132:	55                   	push   %rbp
   14133:	48 89 e5             	mov    %rsp,%rbp
   14136:	48 83 ec 10          	sub    $0x10,%rsp
   1413a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1413e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   14142:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1414a:	48 89 d6             	mov    %rdx,%rsi
   1414d:	48 89 c7             	mov    %rax,%rdi
   14150:	e8 c3 06 00 00       	call   14818 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   14155:	90                   	nop
   14156:	c9                   	leave
   14157:	c3                   	ret

0000000000014158 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14158:	55                   	push   %rbp
   14159:	48 89 e5             	mov    %rsp,%rbp
   1415c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14164:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1416b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1416f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14176:	00 
   14177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1417b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14182:	00 
	{ }
   14183:	90                   	nop
   14184:	5d                   	pop    %rbp
   14185:	c3                   	ret

0000000000014186 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14186:	55                   	push   %rbp
   14187:	48 89 e5             	mov    %rsp,%rbp
   1418a:	48 83 ec 20          	sub    $0x20,%rsp
   1418e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14196:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1419a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1419e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   141a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141a6:	48 89 ce             	mov    %rcx,%rsi
   141a9:	48 89 c7             	mov    %rax,%rdi
   141ac:	e8 77 06 00 00       	call   14828 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   141b1:	90                   	nop
   141b2:	c9                   	leave
   141b3:	c3                   	ret

00000000000141b4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   141b4:	55                   	push   %rbp
   141b5:	48 89 e5             	mov    %rsp,%rbp
   141b8:	48 83 ec 20          	sub    $0x20,%rsp
   141bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   141c0:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   141c7:	8e e3 00 
   141ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   141ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141d2:	48 89 c7             	mov    %rax,%rdi
   141d5:	e8 88 06 00 00       	call   14862 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   141da:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   141de:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   141e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   141e6:	48 89 d6             	mov    %rdx,%rsi
   141e9:	48 89 c7             	mov    %rax,%rdi
   141ec:	e8 3c 11 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
   141f1:	48 8b 00             	mov    (%rax),%rax
      }
   141f4:	c9                   	leave
   141f5:	c3                   	ret

00000000000141f6 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   141f6:	55                   	push   %rbp
   141f7:	48 89 e5             	mov    %rsp,%rbp
   141fa:	48 83 ec 10          	sub    $0x10,%rsp
   141fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14202:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14206:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1420a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1420e:	ba 00 00 00 00       	mov    $0x0,%edx
   14213:	48 89 ce             	mov    %rcx,%rsi
   14216:	48 89 c7             	mov    %rax,%rdi
   14219:	e8 5e 06 00 00       	call   1487c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   1421e:	c9                   	leave
   1421f:	c3                   	ret

0000000000014220 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   14220:	55                   	push   %rbp
   14221:	48 89 e5             	mov    %rsp,%rbp
   14224:	48 83 ec 30          	sub    $0x30,%rsp
   14228:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1422c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14230:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   14234:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   14238:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1423c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14240:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   14244:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14248:	48 89 ce             	mov    %rcx,%rsi
   1424b:	48 89 c7             	mov    %rax,%rdi
   1424e:	e8 94 06 00 00       	call   148e7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   14253:	c9                   	leave
   14254:	c3                   	ret

0000000000014255 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   14255:	55                   	push   %rbp
   14256:	48 89 e5             	mov    %rsp,%rbp
   14259:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1425d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14261:	90                   	nop
   14262:	5d                   	pop    %rbp
   14263:	c3                   	ret

0000000000014264 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14264:	55                   	push   %rbp
   14265:	48 89 e5             	mov    %rsp,%rbp
   14268:	48 83 ec 20          	sub    $0x20,%rsp
   1426c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14270:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14277:	ff ff 0f 
   1427a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1427e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14282:	48 89 c7             	mov    %rax,%rdi
   14285:	e8 8a 06 00 00       	call   14914 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   1428a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1428e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14292:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14296:	48 89 d6             	mov    %rdx,%rsi
   14299:	48 89 c7             	mov    %rax,%rdi
   1429c:	e8 8c 10 ff ff       	call   532d <_ZSt3minImERKT_S2_S2_>
   142a1:	48 8b 00             	mov    (%rax),%rax
      }
   142a4:	c9                   	leave
   142a5:	c3                   	ret

00000000000142a6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   142a6:	55                   	push   %rbp
   142a7:	48 89 e5             	mov    %rsp,%rbp
   142aa:	48 83 ec 10          	sub    $0x10,%rsp
   142ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   142b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   142ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142be:	48 89 d6             	mov    %rdx,%rsi
   142c1:	48 89 c7             	mov    %rax,%rdi
   142c4:	e8 99 f4 ff ff       	call   13762 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   142c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142cd:	48 89 c7             	mov    %rax,%rdi
   142d0:	e8 59 06 00 00       	call   1492e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   142d5:	90                   	nop
   142d6:	c9                   	leave
   142d7:	c3                   	ret

00000000000142d8 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   142d8:	55                   	push   %rbp
   142d9:	48 89 e5             	mov    %rsp,%rbp
   142dc:	48 83 ec 10          	sub    $0x10,%rsp
   142e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   142e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   142ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142f0:	48 89 d6             	mov    %rdx,%rsi
   142f3:	48 89 c7             	mov    %rax,%rdi
   142f6:	e8 61 06 00 00       	call   1495c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   142fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   142ff:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   14302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14306:	48 8b 10             	mov    (%rax),%rdx
   14309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1430d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   14311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14315:	48 8b 00             	mov    (%rax),%rax
   14318:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1431c:	48 c1 e2 03          	shl    $0x3,%rdx
   14320:	48 01 c2             	add    %rax,%rdx
   14323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14327:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1432b:	90                   	nop
   1432c:	c9                   	leave
   1432d:	c3                   	ret

000000000001432e <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1432e:	55                   	push   %rbp
   1432f:	48 89 e5             	mov    %rsp,%rbp
   14332:	48 83 ec 20          	sub    $0x20,%rsp
   14336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1433a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1433e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   14342:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1434a:	48 89 d6             	mov    %rdx,%rsi
   1434d:	48 89 c7             	mov    %rax,%rdi
   14350:	e8 3a 06 00 00       	call   1498f <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   14355:	c9                   	leave
   14356:	c3                   	ret
   14357:	90                   	nop

0000000000014358 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   14358:	55                   	push   %rbp
   14359:	48 89 e5             	mov    %rsp,%rbp
   1435c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14360:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14364:	90                   	nop
   14365:	5d                   	pop    %rbp
   14366:	c3                   	ret

0000000000014367 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14367:	55                   	push   %rbp
   14368:	48 89 e5             	mov    %rsp,%rbp
   1436b:	48 83 ec 20          	sub    $0x20,%rsp
   1436f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14373:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14377:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1437b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1437f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14387:	48 89 ce             	mov    %rcx,%rsi
   1438a:	48 89 c7             	mov    %rax,%rdi
   1438d:	e8 26 06 00 00       	call   149b8 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   14392:	90                   	nop
   14393:	c9                   	leave
   14394:	c3                   	ret

0000000000014395 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   14395:	55                   	push   %rbp
   14396:	48 89 e5             	mov    %rsp,%rbp
   14399:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1439d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   143a1:	90                   	nop
   143a2:	5d                   	pop    %rbp
   143a3:	c3                   	ret

00000000000143a4 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   143a4:	55                   	push   %rbp
   143a5:	48 89 e5             	mov    %rsp,%rbp
   143a8:	48 83 ec 20          	sub    $0x20,%rsp
   143ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   143b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   143b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143bc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   143c3:	00 
   143c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   143c8:	48 89 d6             	mov    %rdx,%rsi
   143cb:	48 89 c7             	mov    %rax,%rdi
   143ce:	e8 bd ff fe ff       	call   4390 <_ZdlPvm@plt>
      }
   143d3:	c9                   	leave
   143d4:	c3                   	ret

00000000000143d5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   143d5:	55                   	push   %rbp
   143d6:	48 89 e5             	mov    %rsp,%rbp
   143d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   143e1:	90                   	nop
   143e2:	5d                   	pop    %rbp
   143e3:	c3                   	ret

00000000000143e4 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   143e4:	55                   	push   %rbp
   143e5:	48 89 e5             	mov    %rsp,%rbp
   143e8:	48 83 ec 20          	sub    $0x20,%rsp
   143ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   143f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   143f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   143fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14404:	48 89 ce             	mov    %rcx,%rsi
   14407:	48 89 c7             	mov    %rax,%rdi
   1440a:	e8 da 05 00 00       	call   149e9 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   1440f:	c9                   	leave
   14410:	c3                   	ret
   14411:	90                   	nop

0000000000014412 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14412:	55                   	push   %rbp
   14413:	48 89 e5             	mov    %rsp,%rbp
   14416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1441a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1441e:	5d                   	pop    %rbp
   1441f:	c3                   	ret

0000000000014420 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   14420:	55                   	push   %rbp
   14421:	48 89 e5             	mov    %rsp,%rbp
   14424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1442c:	5d                   	pop    %rbp
   1442d:	c3                   	ret

000000000001442e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1442e:	55                   	push   %rbp
   1442f:	48 89 e5             	mov    %rsp,%rbp
   14432:	48 83 ec 30          	sub    $0x30,%rsp
   14436:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1443a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1443e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14442:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   14446:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1444a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1444e:	48 c1 f8 03          	sar    $0x3,%rax
   14452:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   14456:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1445b:	7e 1f                	jle    1447c <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1445d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14461:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14468:	00 
   14469:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1446d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14471:	48 89 ce             	mov    %rcx,%rsi
   14474:	48 89 c7             	mov    %rax,%rdi
   14477:	e8 e4 01 ff ff       	call   4660 <memmove@plt>
      return __result + __count;
   1447c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14480:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14487:	00 
   14488:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1448c:	48 01 d0             	add    %rdx,%rax
    }
   1448f:	c9                   	leave
   14490:	c3                   	ret
   14491:	90                   	nop

0000000000014492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   14492:	55                   	push   %rbp
   14493:	48 89 e5             	mov    %rsp,%rbp
   14496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1449a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1449e:	5d                   	pop    %rbp
   1449f:	c3                   	ret

00000000000144a0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   144a0:	55                   	push   %rbp
   144a1:	48 89 e5             	mov    %rsp,%rbp
   144a4:	48 83 ec 10          	sub    $0x10,%rsp
   144a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   144b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   144b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144b8:	48 89 d6             	mov    %rdx,%rsi
   144bb:	48 89 c7             	mov    %rax,%rdi
   144be:	e8 8d 05 00 00       	call   14a50 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   144c3:	90                   	nop
   144c4:	c9                   	leave
   144c5:	c3                   	ret

00000000000144c6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   144c6:	55                   	push   %rbp
   144c7:	48 89 e5             	mov    %rsp,%rbp
   144ca:	48 83 ec 20          	sub    $0x20,%rsp
   144ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   144d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   144da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   144de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   144e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144e6:	48 89 ce             	mov    %rcx,%rsi
   144e9:	48 89 c7             	mov    %rax,%rdi
   144ec:	e8 7f 05 00 00       	call   14a70 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   144f1:	90                   	nop
   144f2:	c9                   	leave
   144f3:	c3                   	ret

00000000000144f4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   144f4:	55                   	push   %rbp
   144f5:	48 89 e5             	mov    %rsp,%rbp
   144f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   144fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14500:	5d                   	pop    %rbp
   14501:	c3                   	ret

0000000000014502 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   14502:	55                   	push   %rbp
   14503:	48 89 e5             	mov    %rsp,%rbp
   14506:	48 83 ec 10          	sub    $0x10,%rsp
   1450a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1450e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   14512:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14516:	48 89 c7             	mov    %rax,%rdi
   14519:	e8 fe e6 ff ff       	call   12c1c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   1451e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14522:	48 89 02             	mov    %rax,(%rdx)
   14525:	90                   	nop
   14526:	c9                   	leave
   14527:	c3                   	ret

0000000000014528 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   14528:	55                   	push   %rbp
   14529:	48 89 e5             	mov    %rsp,%rbp
   1452c:	48 83 ec 10          	sub    $0x10,%rsp
   14530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   14534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14538:	48 89 c7             	mov    %rax,%rdi
   1453b:	e8 52 ff ff ff       	call   14492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14540:	be 01 00 00 00       	mov    $0x1,%esi
   14545:	48 89 c7             	mov    %rax,%rdi
   14548:	e8 5d 05 00 00       	call   14aaa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1454d:	c9                   	leave
   1454e:	c3                   	ret
   1454f:	90                   	nop

0000000000014550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   14550:	55                   	push   %rbp
   14551:	48 89 e5             	mov    %rsp,%rbp
   14554:	41 56                	push   %r14
   14556:	41 55                	push   %r13
   14558:	41 54                	push   %r12
   1455a:	53                   	push   %rbx
   1455b:	48 83 ec 30          	sub    $0x30,%rsp
   1455f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14563:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14567:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1456b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1456f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   14573:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14577:	48 89 c6             	mov    %rax,%rsi
   1457a:	bf 48 00 00 00       	mov    $0x48,%edi
   1457f:	e8 dc 08 ff ff       	call   4e60 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   14584:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14588:	48 89 c7             	mov    %rax,%rdi
   1458b:	e8 e9 e6 ff ff       	call   12c79 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14590:	49 89 c6             	mov    %rax,%r14
   14593:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14597:	48 89 c7             	mov    %rax,%rdi
   1459a:	e8 cc e6 ff ff       	call   12c6b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1459f:	49 89 c5             	mov    %rax,%r13
   145a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145a6:	48 89 c7             	mov    %rax,%rdi
   145a9:	e8 af e6 ff ff       	call   12c5d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   145ae:	49 89 c4             	mov    %rax,%r12
   145b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   145b5:	48 89 c7             	mov    %rax,%rdi
   145b8:	e8 19 e6 ff ff       	call   12bd6 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   145bd:	48 89 c3             	mov    %rax,%rbx
   145c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145c4:	48 89 c7             	mov    %rax,%rdi
   145c7:	e8 c6 fe ff ff       	call   14492 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   145cc:	4d 89 f0             	mov    %r14,%r8
   145cf:	4c 89 e9             	mov    %r13,%rcx
   145d2:	4c 89 e2             	mov    %r12,%rdx
   145d5:	48 89 de             	mov    %rbx,%rsi
   145d8:	48 89 c7             	mov    %rax,%rdi
   145db:	e8 f4 04 00 00       	call   14ad4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   145e0:	eb 33                	jmp    14615 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   145e2:	48 89 c7             	mov    %rax,%rdi
   145e5:	e8 36 fb fe ff       	call   4120 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   145ea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   145ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145f2:	48 89 d6             	mov    %rdx,%rsi
   145f5:	48 89 c7             	mov    %rax,%rdi
   145f8:	e8 65 f4 ff ff       	call   13a62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   145fd:	e8 ce ff fe ff       	call   45d0 <__cxa_rethrow@plt>
	  __catch(...)
   14602:	48 89 c3             	mov    %rax,%rbx
   14605:	e8 66 00 ff ff       	call   4670 <__cxa_end_catch@plt>
   1460a:	48 89 d8             	mov    %rbx,%rax
   1460d:	48 89 c7             	mov    %rax,%rdi
   14610:	e8 db 00 ff ff       	call   46f0 <_Unwind_Resume@plt>
	}
   14615:	48 83 c4 30          	add    $0x30,%rsp
   14619:	5b                   	pop    %rbx
   1461a:	41 5c                	pop    %r12
   1461c:	41 5d                	pop    %r13
   1461e:	41 5e                	pop    %r14
   14620:	5d                   	pop    %rbp
   14621:	c3                   	ret

0000000000014622 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14622:	55                   	push   %rbp
   14623:	48 89 e5             	mov    %rsp,%rbp
   14626:	48 83 ec 20          	sub    $0x20,%rsp
   1462a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   1462e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14632:	48 8b 50 18          	mov    0x18(%rax),%rdx
   14636:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1463a:	48 89 d6             	mov    %rdx,%rsi
   1463d:	48 89 c7             	mov    %rax,%rdi
   14640:	e8 b7 eb ff ff       	call   131fc <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14649:	c9                   	leave
   1464a:	c3                   	ret
   1464b:	90                   	nop

000000000001464c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   1464c:	55                   	push   %rbp
   1464d:	48 89 e5             	mov    %rsp,%rbp
   14650:	48 83 ec 20          	sub    $0x20,%rsp
   14654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14658:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1465c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14660:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14664:	48 89 c7             	mov    %rax,%rdi
   14667:	e8 d4 04 00 00       	call   14b40 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   1466c:	48 8b 10             	mov    (%rax),%rdx
   1466f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14673:	48 89 10             	mov    %rdx,(%rax)
   14676:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1467a:	48 89 c7             	mov    %rax,%rdi
   1467d:	e8 0e 00 00 00       	call   14690 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14682:	48 8b 10             	mov    (%rax),%rdx
   14685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14689:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1468d:	90                   	nop
   1468e:	c9                   	leave
   1468f:	c3                   	ret

0000000000014690 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14690:	55                   	push   %rbp
   14691:	48 89 e5             	mov    %rsp,%rbp
   14694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1469c:	5d                   	pop    %rbp
   1469d:	c3                   	ret

000000000001469e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   1469e:	55                   	push   %rbp
   1469f:	48 89 e5             	mov    %rsp,%rbp
   146a2:	48 83 ec 10          	sub    $0x10,%rsp
   146a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   146aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146ae:	48 83 c0 20          	add    $0x20,%rax
   146b2:	48 89 c7             	mov    %rax,%rdi
   146b5:	e8 94 04 00 00       	call   14b4e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   146ba:	c9                   	leave
   146bb:	c3                   	ret

00000000000146bc <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   146bc:	55                   	push   %rbp
   146bd:	48 89 e5             	mov    %rsp,%rbp
   146c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   146c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   146c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   146cc:	5d                   	pop    %rbp
   146cd:	c3                   	ret

00000000000146ce <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   146ce:	55                   	push   %rbp
   146cf:	48 89 e5             	mov    %rsp,%rbp
   146d2:	48 83 ec 10          	sub    $0x10,%rsp
   146d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   146da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146de:	48 89 c7             	mov    %rax,%rdi
   146e1:	e8 82 04 00 00       	call   14b68 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   146e6:	c9                   	leave
   146e7:	c3                   	ret

00000000000146e8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   146e8:	55                   	push   %rbp
   146e9:	48 89 e5             	mov    %rsp,%rbp
   146ec:	48 83 ec 20          	sub    $0x20,%rsp
   146f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   146f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   146f8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   146fd:	74 40                	je     1473f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   146ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14703:	48 89 c7             	mov    %rax,%rdi
   14706:	e8 77 04 00 00       	call   14b82 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   1470b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1470f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14713:	48 89 c7             	mov    %rax,%rdi
   14716:	e8 75 04 00 00       	call   14b90 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   1471b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14720:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14724:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14728:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1472c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14730:	48 89 ce             	mov    %rcx,%rsi
   14733:	48 89 c7             	mov    %rax,%rdi
   14736:	e8 7c 04 00 00       	call   14bb7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   1473b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1473f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14743:	c9                   	leave
   14744:	c3                   	ret
   14745:	90                   	nop

0000000000014746 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14746:	55                   	push   %rbp
   14747:	48 89 e5             	mov    %rsp,%rbp
   1474a:	48 83 ec 20          	sub    $0x20,%rsp
   1474e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14752:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14756:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1475a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1475e:	48 89 c7             	mov    %rax,%rdi
   14761:	e8 96 04 00 00       	call   14bfc <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   14766:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1476a:	0f 92 c0             	setb   %al
   1476d:	0f b6 c0             	movzbl %al,%eax
   14770:	48 85 c0             	test   %rax,%rax
   14773:	0f 95 c0             	setne  %al
   14776:	84 c0                	test   %al,%al
   14778:	74 1a                	je     14794 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1477a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14781:	ff ff 1f 
   14784:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14788:	73 05                	jae    1478f <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1478a:	e8 e1 fa fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1478f:	e8 4c f9 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14794:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14798:	48 c1 e0 03          	shl    $0x3,%rax
   1479c:	48 89 c7             	mov    %rax,%rdi
   1479f:	e8 dc fb fe ff       	call   4380 <_Znwm@plt>
   147a4:	90                   	nop
      }
   147a5:	c9                   	leave
   147a6:	c3                   	ret

00000000000147a7 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   147a7:	55                   	push   %rbp
   147a8:	48 89 e5             	mov    %rsp,%rbp
   147ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   147af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147b3:	5d                   	pop    %rbp
   147b4:	c3                   	ret

00000000000147b5 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   147b5:	55                   	push   %rbp
   147b6:	48 89 e5             	mov    %rsp,%rbp
   147b9:	48 83 ec 30          	sub    $0x30,%rsp
   147bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   147c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   147c9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   147cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   147d1:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   147d5:	48 c1 f8 03          	sar    $0x3,%rax
   147d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   147dd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   147e2:	7e 1f                	jle    14803 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   147e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147e8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   147ef:	00 
   147f0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   147f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   147f8:	48 89 ce             	mov    %rcx,%rsi
   147fb:	48 89 c7             	mov    %rax,%rdi
   147fe:	e8 5d fe fe ff       	call   4660 <memmove@plt>
      return __result + __count;
   14803:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14807:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1480e:	00 
   1480f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14813:	48 01 d0             	add    %rdx,%rax
    }
   14816:	c9                   	leave
   14817:	c3                   	ret

0000000000014818 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   14818:	55                   	push   %rbp
   14819:	48 89 e5             	mov    %rsp,%rbp
   1481c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14820:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14824:	90                   	nop
   14825:	5d                   	pop    %rbp
   14826:	c3                   	ret
   14827:	90                   	nop

0000000000014828 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14828:	55                   	push   %rbp
   14829:	48 89 e5             	mov    %rsp,%rbp
   1482c:	48 83 ec 20          	sub    $0x20,%rsp
   14830:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14834:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14838:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1483c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14840:	48 89 d0             	mov    %rdx,%rax
   14843:	48 c1 e0 03          	shl    $0x3,%rax
   14847:	48 01 d0             	add    %rdx,%rax
   1484a:	48 c1 e0 04          	shl    $0x4,%rax
   1484e:	48 89 c2             	mov    %rax,%rdx
   14851:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14855:	48 89 d6             	mov    %rdx,%rsi
   14858:	48 89 c7             	mov    %rax,%rdi
   1485b:	e8 30 fb fe ff       	call   4390 <_ZdlPvm@plt>
      }
   14860:	c9                   	leave
   14861:	c3                   	ret

0000000000014862 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14862:	55                   	push   %rbp
   14863:	48 89 e5             	mov    %rsp,%rbp
   14866:	48 83 ec 10          	sub    $0x10,%rsp
   1486a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1486e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14872:	48 89 c7             	mov    %rax,%rdi
   14875:	e8 96 03 00 00       	call   14c10 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   1487a:	c9                   	leave
   1487b:	c3                   	ret

000000000001487c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1487c:	55                   	push   %rbp
   1487d:	48 89 e5             	mov    %rsp,%rbp
   14880:	48 83 ec 20          	sub    $0x20,%rsp
   14884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14888:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1488c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14894:	48 89 c7             	mov    %rax,%rdi
   14897:	e8 8e 03 00 00       	call   14c2a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   1489c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   148a0:	0f 92 c0             	setb   %al
   148a3:	0f b6 c0             	movzbl %al,%eax
   148a6:	48 85 c0             	test   %rax,%rax
   148a9:	0f 95 c0             	setne  %al
   148ac:	84 c0                	test   %al,%al
   148ae:	74 1a                	je     148ca <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   148b0:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   148b7:	1c c7 01 
   148ba:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   148be:	73 05                	jae    148c5 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   148c0:	e8 ab f9 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   148c5:	e8 16 f8 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   148ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   148ce:	48 89 d0             	mov    %rdx,%rax
   148d1:	48 c1 e0 03          	shl    $0x3,%rax
   148d5:	48 01 d0             	add    %rdx,%rax
   148d8:	48 c1 e0 04          	shl    $0x4,%rax
   148dc:	48 89 c7             	mov    %rax,%rdi
   148df:	e8 9c fa fe ff       	call   4380 <_Znwm@plt>
   148e4:	90                   	nop
      }
   148e5:	c9                   	leave
   148e6:	c3                   	ret

00000000000148e7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   148e7:	55                   	push   %rbp
   148e8:	48 89 e5             	mov    %rsp,%rbp
   148eb:	48 83 ec 20          	sub    $0x20,%rsp
   148ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   148f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   148fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   148ff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14907:	48 89 ce             	mov    %rcx,%rsi
   1490a:	48 89 c7             	mov    %rax,%rdi
   1490d:	e8 2c 03 00 00       	call   14c3e <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   14912:	c9                   	leave
   14913:	c3                   	ret

0000000000014914 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14914:	55                   	push   %rbp
   14915:	48 89 e5             	mov    %rsp,%rbp
   14918:	48 83 ec 10          	sub    $0x10,%rsp
   1491c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14924:	48 89 c7             	mov    %rax,%rdi
   14927:	e8 5e 03 00 00       	call   14c8a <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   1492c:	c9                   	leave
   1492d:	c3                   	ret

000000000001492e <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1492e:	55                   	push   %rbp
   1492f:	48 89 e5             	mov    %rsp,%rbp
   14932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1493a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14945:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1494c:	00 
   1494d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14951:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14958:	00 
	{ }
   14959:	90                   	nop
   1495a:	5d                   	pop    %rbp
   1495b:	c3                   	ret

000000000001495c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1495c:	55                   	push   %rbp
   1495d:	48 89 e5             	mov    %rsp,%rbp
   14960:	48 83 ec 10          	sub    $0x10,%rsp
   14964:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14968:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1496c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14971:	74 15                	je     14988 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   14973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14977:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1497b:	48 89 d6             	mov    %rdx,%rsi
   1497e:	48 89 c7             	mov    %rax,%rdi
   14981:	e8 1e 03 00 00       	call   14ca4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   14986:	eb 05                	jmp    1498d <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   14988:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1498d:	c9                   	leave
   1498e:	c3                   	ret

000000000001498f <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1498f:	55                   	push   %rbp
   14990:	48 89 e5             	mov    %rsp,%rbp
   14993:	48 83 ec 20          	sub    $0x20,%rsp
   14997:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1499b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1499f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   149a3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   149a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149ab:	48 89 d6             	mov    %rdx,%rsi
   149ae:	48 89 c7             	mov    %rax,%rdi
   149b1:	e8 18 03 00 00       	call   14cce <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   149b6:	c9                   	leave
   149b7:	c3                   	ret

00000000000149b8 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   149b8:	55                   	push   %rbp
   149b9:	48 89 e5             	mov    %rsp,%rbp
   149bc:	48 83 ec 20          	sub    $0x20,%rsp
   149c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   149c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   149cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   149d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   149d7:	00 
   149d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149dc:	48 89 d6             	mov    %rdx,%rsi
   149df:	48 89 c7             	mov    %rax,%rdi
   149e2:	e8 a9 f9 fe ff       	call   4390 <_ZdlPvm@plt>
      }
   149e7:	c9                   	leave
   149e8:	c3                   	ret

00000000000149e9 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   149e9:	55                   	push   %rbp
   149ea:	48 89 e5             	mov    %rsp,%rbp
   149ed:	53                   	push   %rbx
   149ee:	48 83 ec 28          	sub    $0x28,%rsp
   149f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   149f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   149fa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   149fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14a02:	48 89 c7             	mov    %rax,%rdi
   14a05:	e8 21 03 00 00       	call   14d2b <_ZSt12__miter_baseIPKPKcET_S4_>
   14a0a:	48 89 c3             	mov    %rax,%rbx
   14a0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a11:	48 89 c7             	mov    %rax,%rdi
   14a14:	e8 12 03 00 00       	call   14d2b <_ZSt12__miter_baseIPKPKcET_S4_>
   14a19:	48 89 c1             	mov    %rax,%rcx
   14a1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a20:	48 89 c2             	mov    %rax,%rdx
   14a23:	48 89 de             	mov    %rbx,%rsi
   14a26:	48 89 cf             	mov    %rcx,%rdi
   14a29:	e8 0b 03 00 00       	call   14d39 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   14a2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14a32:	c9                   	leave
   14a33:	c3                   	ret

0000000000014a34 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   14a34:	55                   	push   %rbp
   14a35:	48 89 e5             	mov    %rsp,%rbp
   14a38:	48 83 ec 10          	sub    $0x10,%rsp
   14a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a44:	48 89 c7             	mov    %rax,%rdi
   14a47:	e8 94 f7 fe ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14a4c:	90                   	nop
   14a4d:	c9                   	leave
   14a4e:	c3                   	ret
   14a4f:	90                   	nop

0000000000014a50 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   14a50:	55                   	push   %rbp
   14a51:	48 89 e5             	mov    %rsp,%rbp
   14a54:	48 83 ec 10          	sub    $0x10,%rsp
   14a58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   14a60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a64:	48 89 c7             	mov    %rax,%rdi
   14a67:	e8 c8 ff ff ff       	call   14a34 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   14a6c:	90                   	nop
   14a6d:	c9                   	leave
   14a6e:	c3                   	ret
   14a6f:	90                   	nop

0000000000014a70 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14a70:	55                   	push   %rbp
   14a71:	48 89 e5             	mov    %rsp,%rbp
   14a74:	48 83 ec 20          	sub    $0x20,%rsp
   14a78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14a84:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14a88:	48 89 d0             	mov    %rdx,%rax
   14a8b:	48 c1 e0 03          	shl    $0x3,%rax
   14a8f:	48 01 d0             	add    %rdx,%rax
   14a92:	48 c1 e0 03          	shl    $0x3,%rax
   14a96:	48 89 c2             	mov    %rax,%rdx
   14a99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a9d:	48 89 d6             	mov    %rdx,%rsi
   14aa0:	48 89 c7             	mov    %rax,%rdi
   14aa3:	e8 e8 f8 fe ff       	call   4390 <_ZdlPvm@plt>
      }
   14aa8:	c9                   	leave
   14aa9:	c3                   	ret

0000000000014aaa <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   14aaa:	55                   	push   %rbp
   14aab:	48 89 e5             	mov    %rsp,%rbp
   14aae:	48 83 ec 10          	sub    $0x10,%rsp
   14ab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ab6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14aba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ac2:	ba 00 00 00 00       	mov    $0x0,%edx
   14ac7:	48 89 ce             	mov    %rcx,%rsi
   14aca:	48 89 c7             	mov    %rax,%rdi
   14acd:	e8 d2 02 00 00       	call   14da4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   14ad2:	c9                   	leave
   14ad3:	c3                   	ret

0000000000014ad4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   14ad4:	55                   	push   %rbp
   14ad5:	48 89 e5             	mov    %rsp,%rbp
   14ad8:	41 54                	push   %r12
   14ada:	53                   	push   %rbx
   14adb:	48 83 ec 30          	sub    $0x30,%rsp
   14adf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ae3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14ae7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14aeb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   14aef:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   14af3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14af7:	48 89 c7             	mov    %rax,%rdi
   14afa:	e8 7a e1 ff ff       	call   12c79 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14aff:	49 89 c4             	mov    %rax,%r12
   14b02:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14b06:	48 89 c7             	mov    %rax,%rdi
   14b09:	e8 5d e1 ff ff       	call   12c6b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14b0e:	48 89 c3             	mov    %rax,%rbx
   14b11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14b15:	48 89 c7             	mov    %rax,%rdi
   14b18:	e8 40 e1 ff ff       	call   12c5d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   14b1d:	48 89 c2             	mov    %rax,%rdx
   14b20:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   14b24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b28:	4d 89 e0             	mov    %r12,%r8
   14b2b:	48 89 d9             	mov    %rbx,%rcx
   14b2e:	48 89 c7             	mov    %rax,%rdi
   14b31:	e8 00 03 00 00       	call   14e36 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   14b36:	90                   	nop
   14b37:	48 83 c4 30          	add    $0x30,%rsp
   14b3b:	5b                   	pop    %rbx
   14b3c:	41 5c                	pop    %r12
   14b3e:	5d                   	pop    %rbp
   14b3f:	c3                   	ret

0000000000014b40 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14b40:	55                   	push   %rbp
   14b41:	48 89 e5             	mov    %rsp,%rbp
   14b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b4c:	5d                   	pop    %rbp
   14b4d:	c3                   	ret

0000000000014b4e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   14b4e:	55                   	push   %rbp
   14b4f:	48 89 e5             	mov    %rsp,%rbp
   14b52:	48 83 ec 10          	sub    $0x10,%rsp
   14b56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   14b5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b5e:	48 89 c7             	mov    %rax,%rdi
   14b61:	e8 80 03 00 00       	call   14ee6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   14b66:	c9                   	leave
   14b67:	c3                   	ret

0000000000014b68 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14b68:	55                   	push   %rbp
   14b69:	48 89 e5             	mov    %rsp,%rbp
   14b6c:	48 83 ec 10          	sub    $0x10,%rsp
   14b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b78:	48 89 c7             	mov    %rax,%rdi
   14b7b:	e8 7c 00 00 00       	call   14bfc <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   14b80:	c9                   	leave
   14b81:	c3                   	ret

0000000000014b82 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   14b82:	55                   	push   %rbp
   14b83:	48 89 e5             	mov    %rsp,%rbp
   14b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   14b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b8e:	5d                   	pop    %rbp
   14b8f:	c3                   	ret

0000000000014b90 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   14b90:	55                   	push   %rbp
   14b91:	48 89 e5             	mov    %rsp,%rbp
   14b94:	48 83 ec 10          	sub    $0x10,%rsp
   14b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   14b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ba0:	48 89 c6             	mov    %rax,%rsi
   14ba3:	bf 08 00 00 00       	mov    $0x8,%edi
   14ba8:	e8 b3 02 ff ff       	call   4e60 <_ZnwmPv>
   14bad:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   14bb4:	90                   	nop
   14bb5:	c9                   	leave
   14bb6:	c3                   	ret

0000000000014bb7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   14bb7:	55                   	push   %rbp
   14bb8:	48 89 e5             	mov    %rsp,%rbp
   14bbb:	48 83 ec 20          	sub    $0x20,%rsp
   14bbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14bc7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   14bcb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14bcf:	48 89 c7             	mov    %rax,%rdi
   14bd2:	e8 1d 03 00 00       	call   14ef4 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   14bd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14bdb:	48 89 c7             	mov    %rax,%rdi
   14bde:	e8 8f 02 ff ff       	call   4e72 <_ZSt17__size_to_integerm>
   14be3:	48 89 c1             	mov    %rax,%rcx
   14be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14bee:	48 89 ce             	mov    %rcx,%rsi
   14bf1:	48 89 c7             	mov    %rax,%rdi
   14bf4:	e8 06 03 00 00       	call   14eff <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   14bf9:	c9                   	leave
   14bfa:	c3                   	ret
   14bfb:	90                   	nop

0000000000014bfc <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   14bfc:	55                   	push   %rbp
   14bfd:	48 89 e5             	mov    %rsp,%rbp
   14c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   14c04:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14c0b:	ff ff 0f 
      }
   14c0e:	5d                   	pop    %rbp
   14c0f:	c3                   	ret

0000000000014c10 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14c10:	55                   	push   %rbp
   14c11:	48 89 e5             	mov    %rsp,%rbp
   14c14:	48 83 ec 10          	sub    $0x10,%rsp
   14c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c20:	48 89 c7             	mov    %rax,%rdi
   14c23:	e8 02 00 00 00       	call   14c2a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   14c28:	c9                   	leave
   14c29:	c3                   	ret

0000000000014c2a <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   14c2a:	55                   	push   %rbp
   14c2b:	48 89 e5             	mov    %rsp,%rbp
   14c2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   14c32:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   14c39:	8e e3 00 
      }
   14c3c:	5d                   	pop    %rbp
   14c3d:	c3                   	ret

0000000000014c3e <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   14c3e:	55                   	push   %rbp
   14c3f:	48 89 e5             	mov    %rsp,%rbp
   14c42:	53                   	push   %rbx
   14c43:	48 83 ec 28          	sub    $0x28,%rsp
   14c47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14c4f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   14c53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c57:	48 89 c7             	mov    %rax,%rdi
   14c5a:	e8 fd 02 00 00       	call   14f5c <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14c5f:	48 89 c3             	mov    %rax,%rbx
   14c62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c66:	48 89 c7             	mov    %rax,%rdi
   14c69:	e8 ee 02 00 00       	call   14f5c <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14c6e:	48 89 c1             	mov    %rax,%rcx
   14c71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14c75:	48 89 c2             	mov    %rax,%rdx
   14c78:	48 89 de             	mov    %rbx,%rsi
   14c7b:	48 89 cf             	mov    %rcx,%rdi
   14c7e:	e8 e7 02 00 00       	call   14f6a <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   14c83:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14c87:	c9                   	leave
   14c88:	c3                   	ret
   14c89:	90                   	nop

0000000000014c8a <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14c8a:	55                   	push   %rbp
   14c8b:	48 89 e5             	mov    %rsp,%rbp
   14c8e:	48 83 ec 10          	sub    $0x10,%rsp
   14c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c9a:	48 89 c7             	mov    %rax,%rdi
   14c9d:	e8 32 03 00 00       	call   14fd4 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   14ca2:	c9                   	leave
   14ca3:	c3                   	ret

0000000000014ca4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14ca4:	55                   	push   %rbp
   14ca5:	48 89 e5             	mov    %rsp,%rbp
   14ca8:	48 83 ec 10          	sub    $0x10,%rsp
   14cac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14cb4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cbc:	ba 00 00 00 00       	mov    $0x0,%edx
   14cc1:	48 89 ce             	mov    %rcx,%rsi
   14cc4:	48 89 c7             	mov    %rax,%rdi
   14cc7:	e8 1c 03 00 00       	call   14fe8 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   14ccc:	c9                   	leave
   14ccd:	c3                   	ret

0000000000014cce <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   14cce:	55                   	push   %rbp
   14ccf:	48 89 e5             	mov    %rsp,%rbp
   14cd2:	48 83 ec 20          	sub    $0x20,%rsp
   14cd6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14cda:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   14cde:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14ce3:	74 40                	je     14d25 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   14ce5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ce9:	48 89 c7             	mov    %rax,%rdi
   14cec:	e8 58 03 00 00       	call   15049 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   14cf1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   14cf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cf9:	48 89 c7             	mov    %rax,%rdi
   14cfc:	e8 56 03 00 00       	call   15057 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   14d01:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14d06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14d0a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14d0e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d16:	48 89 ce             	mov    %rcx,%rsi
   14d19:	48 89 c7             	mov    %rax,%rdi
   14d1c:	e8 5d 03 00 00       	call   1507e <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   14d21:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   14d25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14d29:	c9                   	leave
   14d2a:	c3                   	ret

0000000000014d2b <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   14d2b:	55                   	push   %rbp
   14d2c:	48 89 e5             	mov    %rsp,%rbp
   14d2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d37:	5d                   	pop    %rbp
   14d38:	c3                   	ret

0000000000014d39 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   14d39:	55                   	push   %rbp
   14d3a:	48 89 e5             	mov    %rsp,%rbp
   14d3d:	41 54                	push   %r12
   14d3f:	53                   	push   %rbx
   14d40:	48 83 ec 20          	sub    $0x20,%rsp
   14d44:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14d48:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14d4c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   14d50:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d54:	48 89 c7             	mov    %rax,%rdi
   14d57:	e8 c4 f6 ff ff       	call   14420 <_ZSt12__niter_baseIPPKcET_S3_>
   14d5c:	49 89 c4             	mov    %rax,%r12
   14d5f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14d63:	48 89 c7             	mov    %rax,%rdi
   14d66:	e8 57 03 00 00       	call   150c2 <_ZSt12__niter_baseIPKPKcET_S4_>
   14d6b:	48 89 c3             	mov    %rax,%rbx
   14d6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d72:	48 89 c7             	mov    %rax,%rdi
   14d75:	e8 48 03 00 00       	call   150c2 <_ZSt12__niter_baseIPKPKcET_S4_>
   14d7a:	4c 89 e2             	mov    %r12,%rdx
   14d7d:	48 89 de             	mov    %rbx,%rsi
   14d80:	48 89 c7             	mov    %rax,%rdi
   14d83:	e8 48 03 00 00       	call   150d0 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   14d88:	48 89 c2             	mov    %rax,%rdx
   14d8b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14d8f:	48 89 d6             	mov    %rdx,%rsi
   14d92:	48 89 c7             	mov    %rax,%rdi
   14d95:	e8 63 03 00 00       	call   150fd <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   14d9a:	48 83 c4 20          	add    $0x20,%rsp
   14d9e:	5b                   	pop    %rbx
   14d9f:	41 5c                	pop    %r12
   14da1:	5d                   	pop    %rbp
   14da2:	c3                   	ret
   14da3:	90                   	nop

0000000000014da4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14da4:	55                   	push   %rbp
   14da5:	48 89 e5             	mov    %rsp,%rbp
   14da8:	48 83 ec 20          	sub    $0x20,%rsp
   14dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14db0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14db4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dbc:	48 89 c7             	mov    %rax,%rdi
   14dbf:	e8 4c 03 00 00       	call   15110 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   14dc4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14dc8:	0f 92 c0             	setb   %al
   14dcb:	0f b6 c0             	movzbl %al,%eax
   14dce:	48 85 c0             	test   %rax,%rax
   14dd1:	0f 95 c0             	setne  %al
   14dd4:	84 c0                	test   %al,%al
   14dd6:	74 1a                	je     14df2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   14dd8:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   14ddf:	38 8e 03 
   14de2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14de6:	73 05                	jae    14ded <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   14de8:	e8 83 f4 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   14ded:	e8 ee f2 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14df2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14df6:	48 89 d0             	mov    %rdx,%rax
   14df9:	48 c1 e0 03          	shl    $0x3,%rax
   14dfd:	48 01 d0             	add    %rdx,%rax
   14e00:	48 c1 e0 03          	shl    $0x3,%rax
   14e04:	48 89 c7             	mov    %rax,%rdi
   14e07:	e8 74 f5 fe ff       	call   4380 <_Znwm@plt>
   14e0c:	90                   	nop
      }
   14e0d:	c9                   	leave
   14e0e:	c3                   	ret
   14e0f:	90                   	nop

0000000000014e10 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   14e10:	55                   	push   %rbp
   14e11:	48 89 e5             	mov    %rsp,%rbp
   14e14:	48 83 ec 10          	sub    $0x10,%rsp
   14e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14e28:	48 89 d6             	mov    %rdx,%rsi
   14e2b:	48 89 c7             	mov    %rax,%rdi
   14e2e:	e8 f1 02 00 00       	call   15124 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   14e33:	90                   	nop
   14e34:	c9                   	leave
   14e35:	c3                   	ret

0000000000014e36 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   14e36:	55                   	push   %rbp
   14e37:	48 89 e5             	mov    %rsp,%rbp
   14e3a:	41 56                	push   %r14
   14e3c:	41 55                	push   %r13
   14e3e:	41 54                	push   %r12
   14e40:	53                   	push   %rbx
   14e41:	48 83 ec 40          	sub    $0x40,%rsp
   14e45:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14e49:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   14e4d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   14e51:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   14e55:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   14e59:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   14e5d:	48 89 de             	mov    %rbx,%rsi
   14e60:	bf 28 00 00 00       	mov    $0x28,%edi
   14e65:	e8 f6 ff fe ff       	call   4e60 <_ZnwmPv>
   14e6a:	49 89 c4             	mov    %rax,%r12
   14e6d:	41 be 01 00 00 00    	mov    $0x1,%r14d
   14e73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e77:	48 89 c7             	mov    %rax,%rdi
   14e7a:	e8 fa dd ff ff       	call   12c79 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14e7f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14e83:	48 89 c7             	mov    %rax,%rdi
   14e86:	e8 e0 dd ff ff       	call   12c6b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14e8b:	48 89 c2             	mov    %rax,%rdx
   14e8e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14e92:	48 89 d6             	mov    %rdx,%rsi
   14e95:	48 89 c7             	mov    %rax,%rdi
   14e98:	e8 73 ff ff ff       	call   14e10 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   14e9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14ea1:	48 89 c7             	mov    %rax,%rdi
   14ea4:	e8 b4 dd ff ff       	call   12c5d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   14ea9:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14ead:	48 89 c6             	mov    %rax,%rsi
   14eb0:	4c 89 e7             	mov    %r12,%rdi
   14eb3:	e8 8a 02 00 00       	call   15142 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   14eb8:	eb 1e                	jmp    14ed8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   14eba:	49 89 c5             	mov    %rax,%r13
   14ebd:	45 84 f6             	test   %r14b,%r14b
   14ec0:	74 0b                	je     14ecd <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   14ec2:	48 89 de             	mov    %rbx,%rsi
   14ec5:	4c 89 e7             	mov    %r12,%rdi
   14ec8:	e8 e0 b1 ff ff       	call   100ad <_ZdlPvS_>
   14ecd:	4c 89 e8             	mov    %r13,%rax
   14ed0:	48 89 c7             	mov    %rax,%rdi
   14ed3:	e8 18 f8 fe ff       	call   46f0 <_Unwind_Resume@plt>
   14ed8:	48 83 c4 40          	add    $0x40,%rsp
   14edc:	5b                   	pop    %rbx
   14edd:	41 5c                	pop    %r12
   14edf:	41 5d                	pop    %r13
   14ee1:	41 5e                	pop    %r14
   14ee3:	5d                   	pop    %rbp
   14ee4:	c3                   	ret
   14ee5:	90                   	nop

0000000000014ee6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   14ee6:	55                   	push   %rbp
   14ee7:	48 89 e5             	mov    %rsp,%rbp
   14eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   14eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ef2:	5d                   	pop    %rbp
   14ef3:	c3                   	ret

0000000000014ef4 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   14ef4:	55                   	push   %rbp
   14ef5:	48 89 e5             	mov    %rsp,%rbp
   14ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   14efc:	90                   	nop
   14efd:	5d                   	pop    %rbp
   14efe:	c3                   	ret

0000000000014eff <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   14eff:	55                   	push   %rbp
   14f00:	48 89 e5             	mov    %rsp,%rbp
   14f03:	48 83 ec 20          	sub    $0x20,%rsp
   14f07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   14f13:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14f18:	75 06                	jne    14f20 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   14f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f1e:	eb 3a                	jmp    14f5a <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   14f20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f24:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14f2b:	00 
   14f2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f30:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   14f34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f3c:	48 89 ce             	mov    %rcx,%rsi
   14f3f:	48 89 c7             	mov    %rax,%rdi
   14f42:	e8 25 02 00 00       	call   1516c <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   14f47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f4b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14f52:	00 
   14f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f57:	48 01 d0             	add    %rdx,%rax
    }
   14f5a:	c9                   	leave
   14f5b:	c3                   	ret

0000000000014f5c <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   14f5c:	55                   	push   %rbp
   14f5d:	48 89 e5             	mov    %rsp,%rbp
   14f60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14f64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f68:	5d                   	pop    %rbp
   14f69:	c3                   	ret

0000000000014f6a <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   14f6a:	55                   	push   %rbp
   14f6b:	48 89 e5             	mov    %rsp,%rbp
   14f6e:	41 54                	push   %r12
   14f70:	53                   	push   %rbx
   14f71:	48 83 ec 20          	sub    $0x20,%rsp
   14f75:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14f79:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14f7d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   14f81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f85:	48 89 c7             	mov    %rax,%rdi
   14f88:	e8 1b 02 00 00       	call   151a8 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   14f8d:	49 89 c4             	mov    %rax,%r12
   14f90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f94:	48 89 c7             	mov    %rax,%rdi
   14f97:	e8 fe 01 00 00       	call   1519a <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14f9c:	48 89 c3             	mov    %rax,%rbx
   14f9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fa3:	48 89 c7             	mov    %rax,%rdi
   14fa6:	e8 ef 01 00 00       	call   1519a <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14fab:	4c 89 e2             	mov    %r12,%rdx
   14fae:	48 89 de             	mov    %rbx,%rsi
   14fb1:	48 89 c7             	mov    %rax,%rdi
   14fb4:	e8 fd 01 00 00       	call   151b6 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   14fb9:	48 89 c2             	mov    %rax,%rdx
   14fbc:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14fc0:	48 89 d6             	mov    %rdx,%rsi
   14fc3:	48 89 c7             	mov    %rax,%rdi
   14fc6:	e8 18 02 00 00       	call   151e3 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   14fcb:	48 83 c4 20          	add    $0x20,%rsp
   14fcf:	5b                   	pop    %rbx
   14fd0:	41 5c                	pop    %r12
   14fd2:	5d                   	pop    %rbp
   14fd3:	c3                   	ret

0000000000014fd4 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   14fd4:	55                   	push   %rbp
   14fd5:	48 89 e5             	mov    %rsp,%rbp
   14fd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   14fdc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14fe3:	ff ff 0f 
      }
   14fe6:	5d                   	pop    %rbp
   14fe7:	c3                   	ret

0000000000014fe8 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14fe8:	55                   	push   %rbp
   14fe9:	48 89 e5             	mov    %rsp,%rbp
   14fec:	48 83 ec 20          	sub    $0x20,%rsp
   14ff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ff4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14ff8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15000:	48 89 c7             	mov    %rax,%rdi
   15003:	e8 cc ff ff ff       	call   14fd4 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   15008:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1500c:	0f 92 c0             	setb   %al
   1500f:	0f b6 c0             	movzbl %al,%eax
   15012:	48 85 c0             	test   %rax,%rax
   15015:	0f 95 c0             	setne  %al
   15018:	84 c0                	test   %al,%al
   1501a:	74 1a                	je     15036 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1501c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15023:	ff ff 1f 
   15026:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1502a:	73 05                	jae    15031 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1502c:	e8 3f f2 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15031:	e8 aa f0 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15036:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1503a:	48 c1 e0 03          	shl    $0x3,%rax
   1503e:	48 89 c7             	mov    %rax,%rdi
   15041:	e8 3a f3 fe ff       	call   4380 <_Znwm@plt>
   15046:	90                   	nop
      }
   15047:	c9                   	leave
   15048:	c3                   	ret

0000000000015049 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   15049:	55                   	push   %rbp
   1504a:	48 89 e5             	mov    %rsp,%rbp
   1504d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   15051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15055:	5d                   	pop    %rbp
   15056:	c3                   	ret

0000000000015057 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   15057:	55                   	push   %rbp
   15058:	48 89 e5             	mov    %rsp,%rbp
   1505b:	48 83 ec 10          	sub    $0x10,%rsp
   1505f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   15063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15067:	48 89 c6             	mov    %rax,%rsi
   1506a:	bf 08 00 00 00       	mov    $0x8,%edi
   1506f:	e8 ec fd fe ff       	call   4e60 <_ZnwmPv>
   15074:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1507b:	90                   	nop
   1507c:	c9                   	leave
   1507d:	c3                   	ret

000000000001507e <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1507e:	55                   	push   %rbp
   1507f:	48 89 e5             	mov    %rsp,%rbp
   15082:	48 83 ec 20          	sub    $0x20,%rsp
   15086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1508a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1508e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   15092:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15096:	48 89 c7             	mov    %rax,%rdi
   15099:	e8 57 01 00 00       	call   151f5 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1509e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   150a2:	48 89 c7             	mov    %rax,%rdi
   150a5:	e8 c8 fd fe ff       	call   4e72 <_ZSt17__size_to_integerm>
   150aa:	48 89 c1             	mov    %rax,%rcx
   150ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   150b5:	48 89 ce             	mov    %rcx,%rsi
   150b8:	48 89 c7             	mov    %rax,%rdi
   150bb:	e8 40 01 00 00       	call   15200 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   150c0:	c9                   	leave
   150c1:	c3                   	ret

00000000000150c2 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   150c2:	55                   	push   %rbp
   150c3:	48 89 e5             	mov    %rsp,%rbp
   150c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   150ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ce:	5d                   	pop    %rbp
   150cf:	c3                   	ret

00000000000150d0 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   150d0:	55                   	push   %rbp
   150d1:	48 89 e5             	mov    %rsp,%rbp
   150d4:	48 83 ec 20          	sub    $0x20,%rsp
   150d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   150e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   150e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   150e8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   150ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150f0:	48 89 ce             	mov    %rcx,%rsi
   150f3:	48 89 c7             	mov    %rax,%rdi
   150f6:	e8 62 01 00 00       	call   1525d <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   150fb:	c9                   	leave
   150fc:	c3                   	ret

00000000000150fd <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   150fd:	55                   	push   %rbp
   150fe:	48 89 e5             	mov    %rsp,%rbp
   15101:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15105:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   15109:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1510d:	5d                   	pop    %rbp
   1510e:	c3                   	ret
   1510f:	90                   	nop

0000000000015110 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15110:	55                   	push   %rbp
   15111:	48 89 e5             	mov    %rsp,%rbp
   15114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15118:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1511f:	1c c7 01 
      }
   15122:	5d                   	pop    %rbp
   15123:	c3                   	ret

0000000000015124 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   15124:	55                   	push   %rbp
   15125:	48 89 e5             	mov    %rsp,%rbp
   15128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1512c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   15130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15134:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15138:	48 8b 12             	mov    (%rdx),%rdx
   1513b:	48 89 10             	mov    %rdx,(%rax)
      { }
   1513e:	90                   	nop
   1513f:	5d                   	pop    %rbp
   15140:	c3                   	ret
   15141:	90                   	nop

0000000000015142 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   15142:	55                   	push   %rbp
   15143:	48 89 e5             	mov    %rsp,%rbp
   15146:	48 83 ec 20          	sub    $0x20,%rsp
   1514a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1514e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   15152:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   15156:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1515a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1515e:	48 89 ce             	mov    %rcx,%rsi
   15161:	48 89 c7             	mov    %rax,%rdi
   15164:	e8 21 01 00 00       	call   1528a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   15169:	90                   	nop
   1516a:	c9                   	leave
   1516b:	c3                   	ret

000000000001516c <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1516c:	55                   	push   %rbp
   1516d:	48 89 e5             	mov    %rsp,%rbp
   15170:	48 83 ec 20          	sub    $0x20,%rsp
   15174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15178:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1517c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   15180:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15184:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1518c:	48 89 ce             	mov    %rcx,%rsi
   1518f:	48 89 c7             	mov    %rax,%rdi
   15192:	e8 3d 01 00 00       	call   152d4 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   15197:	90                   	nop
   15198:	c9                   	leave
   15199:	c3                   	ret

000000000001519a <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   1519a:	55                   	push   %rbp
   1519b:	48 89 e5             	mov    %rsp,%rbp
   1519e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   151a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151a6:	5d                   	pop    %rbp
   151a7:	c3                   	ret

00000000000151a8 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   151a8:	55                   	push   %rbp
   151a9:	48 89 e5             	mov    %rsp,%rbp
   151ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   151b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151b4:	5d                   	pop    %rbp
   151b5:	c3                   	ret

00000000000151b6 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   151b6:	55                   	push   %rbp
   151b7:	48 89 e5             	mov    %rsp,%rbp
   151ba:	48 83 ec 20          	sub    $0x20,%rsp
   151be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   151c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   151ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   151ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   151d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151d6:	48 89 ce             	mov    %rcx,%rsi
   151d9:	48 89 c7             	mov    %rax,%rdi
   151dc:	e8 2e 01 00 00       	call   1530f <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   151e1:	c9                   	leave
   151e2:	c3                   	ret

00000000000151e3 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   151e3:	55                   	push   %rbp
   151e4:	48 89 e5             	mov    %rsp,%rbp
   151e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   151ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151f3:	5d                   	pop    %rbp
   151f4:	c3                   	ret

00000000000151f5 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   151f5:	55                   	push   %rbp
   151f6:	48 89 e5             	mov    %rsp,%rbp
   151f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   151fd:	90                   	nop
   151fe:	5d                   	pop    %rbp
   151ff:	c3                   	ret

0000000000015200 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   15200:	55                   	push   %rbp
   15201:	48 89 e5             	mov    %rsp,%rbp
   15204:	48 83 ec 20          	sub    $0x20,%rsp
   15208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1520c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15210:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   15214:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15219:	75 06                	jne    15221 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1521b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1521f:	eb 3a                	jmp    1525b <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   15221:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15225:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1522c:	00 
   1522d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15231:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   15235:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1523d:	48 89 ce             	mov    %rcx,%rsi
   15240:	48 89 c7             	mov    %rax,%rdi
   15243:	e8 f4 00 00 00       	call   1533c <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   15248:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1524c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15253:	00 
   15254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15258:	48 01 d0             	add    %rdx,%rax
    }
   1525b:	c9                   	leave
   1525c:	c3                   	ret

000000000001525d <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1525d:	55                   	push   %rbp
   1525e:	48 89 e5             	mov    %rsp,%rbp
   15261:	48 83 ec 20          	sub    $0x20,%rsp
   15265:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15269:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1526d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   15271:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15275:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1527d:	48 89 ce             	mov    %rcx,%rsi
   15280:	48 89 c7             	mov    %rax,%rdi
   15283:	e8 e2 00 00 00       	call   1536a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   15288:	c9                   	leave
   15289:	c3                   	ret

000000000001528a <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1528a:	55                   	push   %rbp
   1528b:	48 89 e5             	mov    %rsp,%rbp
   1528e:	53                   	push   %rbx
   1528f:	48 83 ec 28          	sub    $0x28,%rsp
   15293:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15297:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1529b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1529f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   152a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   152a7:	48 89 c7             	mov    %rax,%rdi
   152aa:	e8 1a 01 00 00       	call   153c9 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   152af:	48 89 c7             	mov    %rax,%rdi
   152b2:	e8 2c 01 00 00       	call   153e3 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   152b7:	48 89 c6             	mov    %rax,%rsi
   152ba:	48 89 df             	mov    %rbx,%rdi
   152bd:	e8 0e ef fe ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   152c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152c6:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   152cd:	90                   	nop
   152ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   152d2:	c9                   	leave
   152d3:	c3                   	ret

00000000000152d4 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   152d4:	55                   	push   %rbp
   152d5:	48 89 e5             	mov    %rsp,%rbp
   152d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   152dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   152e0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   152e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152e8:	48 8b 00             	mov    (%rax),%rax
   152eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   152ef:	eb 10                	jmp    15301 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   152f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152f5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   152f9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   152fc:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   15301:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15305:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   15309:	75 e6                	jne    152f1 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1530b:	90                   	nop
   1530c:	90                   	nop
   1530d:	5d                   	pop    %rbp
   1530e:	c3                   	ret

000000000001530f <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1530f:	55                   	push   %rbp
   15310:	48 89 e5             	mov    %rsp,%rbp
   15313:	48 83 ec 20          	sub    $0x20,%rsp
   15317:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1531b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1531f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   15323:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15327:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1532b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1532f:	48 89 ce             	mov    %rcx,%rsi
   15332:	48 89 c7             	mov    %rax,%rdi
   15335:	e8 b7 00 00 00       	call   153f1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   1533a:	c9                   	leave
   1533b:	c3                   	ret

000000000001533c <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1533c:	55                   	push   %rbp
   1533d:	48 89 e5             	mov    %rsp,%rbp
   15340:	48 83 ec 20          	sub    $0x20,%rsp
   15344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1534c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   15350:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15354:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15358:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1535c:	48 89 ce             	mov    %rcx,%rsi
   1535f:	48 89 c7             	mov    %rax,%rdi
   15362:	e8 0c 01 00 00       	call   15473 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   15367:	90                   	nop
   15368:	c9                   	leave
   15369:	c3                   	ret

000000000001536a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1536a:	55                   	push   %rbp
   1536b:	48 89 e5             	mov    %rsp,%rbp
   1536e:	48 83 ec 30          	sub    $0x30,%rsp
   15372:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15376:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1537a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   1537e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15382:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15386:	48 c1 f8 03          	sar    $0x3,%rax
   1538a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1538e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15393:	74 1f                	je     153b4 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   15395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15399:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   153a0:	00 
   153a1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   153a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   153a9:	48 89 ce             	mov    %rcx,%rsi
   153ac:	48 89 c7             	mov    %rax,%rdi
   153af:	e8 ac f2 fe ff       	call   4660 <memmove@plt>
	  return __result + _Num;
   153b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153b8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   153bf:	00 
   153c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   153c4:	48 01 d0             	add    %rdx,%rax
	}
   153c7:	c9                   	leave
   153c8:	c3                   	ret

00000000000153c9 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   153c9:	55                   	push   %rbp
   153ca:	48 89 e5             	mov    %rsp,%rbp
   153cd:	48 83 ec 10          	sub    $0x10,%rsp
   153d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   153d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153d9:	48 89 c7             	mov    %rax,%rdi
   153dc:	e8 cd 00 00 00       	call   154ae <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   153e1:	c9                   	leave
   153e2:	c3                   	ret

00000000000153e3 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   153e3:	55                   	push   %rbp
   153e4:	48 89 e5             	mov    %rsp,%rbp
   153e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   153eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ef:	5d                   	pop    %rbp
   153f0:	c3                   	ret

00000000000153f1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   153f1:	55                   	push   %rbp
   153f2:	48 89 e5             	mov    %rsp,%rbp
   153f5:	48 83 ec 30          	sub    $0x30,%rsp
   153f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   153fd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15401:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   15405:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15409:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1540d:	48 c1 f8 04          	sar    $0x4,%rax
   15411:	48 89 c2             	mov    %rax,%rdx
   15414:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1541b:	e3 38 8e 
   1541e:	48 0f af c2          	imul   %rdx,%rax
   15422:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   15426:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1542b:	74 28                	je     15455 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1542d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15431:	48 89 d0             	mov    %rdx,%rax
   15434:	48 c1 e0 03          	shl    $0x3,%rax
   15438:	48 01 d0             	add    %rdx,%rax
   1543b:	48 c1 e0 04          	shl    $0x4,%rax
   1543f:	48 89 c2             	mov    %rax,%rdx
   15442:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15446:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1544a:	48 89 ce             	mov    %rcx,%rsi
   1544d:	48 89 c7             	mov    %rax,%rdi
   15450:	e8 0b f2 fe ff       	call   4660 <memmove@plt>
	  return __result + _Num;
   15455:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15459:	48 89 d0             	mov    %rdx,%rax
   1545c:	48 c1 e0 03          	shl    $0x3,%rax
   15460:	48 01 d0             	add    %rdx,%rax
   15463:	48 c1 e0 04          	shl    $0x4,%rax
   15467:	48 89 c2             	mov    %rax,%rdx
   1546a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1546e:	48 01 d0             	add    %rdx,%rax
	}
   15471:	c9                   	leave
   15472:	c3                   	ret

0000000000015473 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   15473:	55                   	push   %rbp
   15474:	48 89 e5             	mov    %rsp,%rbp
   15477:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1547b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1547f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   15483:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15487:	48 8b 00             	mov    (%rax),%rax
   1548a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   1548e:	eb 10                	jmp    154a0 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   15490:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15494:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15498:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1549b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   154a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154a4:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   154a8:	75 e6                	jne    15490 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   154aa:	90                   	nop
   154ab:	90                   	nop
   154ac:	5d                   	pop    %rbp
   154ad:	c3                   	ret

00000000000154ae <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   154ae:	55                   	push   %rbp
   154af:	48 89 e5             	mov    %rsp,%rbp
   154b2:	48 83 ec 10          	sub    $0x10,%rsp
   154b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   154ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154be:	48 89 c7             	mov    %rax,%rdi
   154c1:	e8 02 00 00 00       	call   154c8 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   154c6:	c9                   	leave
   154c7:	c3                   	ret

00000000000154c8 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   154c8:	55                   	push   %rbp
   154c9:	48 89 e5             	mov    %rsp,%rbp
   154cc:	48 83 ec 10          	sub    $0x10,%rsp
   154d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154d8:	48 89 c7             	mov    %rax,%rdi
   154db:	e8 02 00 00 00       	call   154e2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   154e0:	c9                   	leave
   154e1:	c3                   	ret

00000000000154e2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   154e2:	55                   	push   %rbp
   154e3:	48 89 e5             	mov    %rsp,%rbp
   154e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154ee:	48 8b 00             	mov    (%rax),%rax
   154f1:	5d                   	pop    %rbp
   154f2:	c3                   	ret
   154f3:	90                   	nop

00000000000154f4 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   154f4:	55                   	push   %rbp
   154f5:	48 89 e5             	mov    %rsp,%rbp
   154f8:	48 83 ec 10          	sub    $0x10,%rsp
   154fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15500:	48 8d 15 b9 07 01 00 	lea    0x107b9(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
   15507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1550b:	48 89 10             	mov    %rdx,(%rax)
   1550e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15512:	48 89 c7             	mov    %rax,%rdi
   15515:	e8 16 f2 fe ff       	call   4730 <_ZNSt9exceptionD2Ev@plt>
   1551a:	90                   	nop
   1551b:	c9                   	leave
   1551c:	c3                   	ret
   1551d:	90                   	nop

000000000001551e <_ZNSt19bad_optional_accessD0Ev>:
   1551e:	55                   	push   %rbp
   1551f:	48 89 e5             	mov    %rsp,%rbp
   15522:	48 83 ec 10          	sub    $0x10,%rsp
   15526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1552a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1552e:	48 89 c7             	mov    %rax,%rdi
   15531:	e8 be ff ff ff       	call   154f4 <_ZNSt19bad_optional_accessD1Ev>
   15536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1553a:	be 08 00 00 00       	mov    $0x8,%esi
   1553f:	48 89 c7             	mov    %rax,%rdi
   15542:	e8 49 ee fe ff       	call   4390 <_ZdlPvm@plt>
   15547:	c9                   	leave
   15548:	c3                   	ret

Disassembly of section .fini:

000000000001554c <_fini>:
   1554c:	48 83 ec 08          	sub    $0x8,%rsp
   15550:	48 83 c4 08          	add    $0x8,%rsp
   15554:	c3                   	ret
