
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad 8f 01 00 	mov    0x18fad(%rip),%rax        # 1bfb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca 8f 01 00    	push   0x18fca(%rip)        # 1bff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc 8f 01 00    	jmp    *0x18fcc(%rip)        # 1bff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca 8f 01 00    	jmp    *0x18fca(%rip)        # 1c000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    3040:	ff 25 c2 8f 01 00    	jmp    *0x18fc2(%rip)        # 1c008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3050:	ff 25 ba 8f 01 00    	jmp    *0x18fba(%rip)        # 1c010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZNSaIcED2Ev@plt>:
    3060:	ff 25 b2 8f 01 00    	jmp    *0x18fb2(%rip)        # 1c018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    3070:	ff 25 aa 8f 01 00    	jmp    *0x18faa(%rip)        # 1c020 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <_ZNSolsEm@plt>:
    3080:	ff 25 a2 8f 01 00    	jmp    *0x18fa2(%rip)        # 1c028 <_ZNSolsEm@GLIBCXX_3.4>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <vkDeviceWaitIdle@plt>:
    3090:	ff 25 9a 8f 01 00    	jmp    *0x18f9a(%rip)        # 1c030 <vkDeviceWaitIdle@Base>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <vkDestroySwapchainKHR@plt>:
    30a0:	ff 25 92 8f 01 00    	jmp    *0x18f92(%rip)        # 1c038 <vkDestroySwapchainKHR@Base>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <glfwDestroyWindow@plt>:
    30b0:	ff 25 8a 8f 01 00    	jmp    *0x18f8a(%rip)        # 1c040 <glfwDestroyWindow@Base>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <_ZSt17__throw_bad_allocv@plt>:
    30c0:	ff 25 82 8f 01 00    	jmp    *0x18f82(%rip)        # 1c048 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    30d0:	ff 25 7a 8f 01 00    	jmp    *0x18f7a(%rip)        # 1c050 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30e0:	ff 25 72 8f 01 00    	jmp    *0x18f72(%rip)        # 1c058 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <vkGetPhysicalDeviceProperties@plt>:
    30f0:	ff 25 6a 8f 01 00    	jmp    *0x18f6a(%rip)        # 1c060 <vkGetPhysicalDeviceProperties@Base>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <__cxa_begin_catch@plt>:
    3100:	ff 25 62 8f 01 00    	jmp    *0x18f62(%rip)        # 1c068 <__cxa_begin_catch@CXXABI_1.3>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <strlen@plt>:
    3110:	ff 25 5a 8f 01 00    	jmp    *0x18f5a(%rip)        # 1c070 <strlen@GLIBC_2.2.5>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <memcmp@plt>:
    3120:	ff 25 52 8f 01 00    	jmp    *0x18f52(%rip)        # 1c078 <memcmp@GLIBC_2.2.5>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <__cxa_allocate_exception@plt>:
    3130:	ff 25 4a 8f 01 00    	jmp    *0x18f4a(%rip)        # 1c080 <__cxa_allocate_exception@CXXABI_1.3>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <_ZSt20__throw_length_errorPKc@plt>:
    3140:	ff 25 42 8f 01 00    	jmp    *0x18f42(%rip)        # 1c088 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <vkEnumeratePhysicalDevices@plt>:
    3150:	ff 25 3a 8f 01 00    	jmp    *0x18f3a(%rip)        # 1c090 <vkEnumeratePhysicalDevices@Base>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZNSaIcEC1ERKS_@plt>:
    3160:	ff 25 32 8f 01 00    	jmp    *0x18f32(%rip)        # 1c098 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3170:	ff 25 2a 8f 01 00    	jmp    *0x18f2a(%rip)        # 1c0a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3180:	ff 25 22 8f 01 00    	jmp    *0x18f22(%rip)        # 1c0a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3190:	ff 25 1a 8f 01 00    	jmp    *0x18f1a(%rip)        # 1c0b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    31a0:	ff 25 12 8f 01 00    	jmp    *0x18f12(%rip)        # 1c0b8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    31b0:	ff 25 0a 8f 01 00    	jmp    *0x18f0a(%rip)        # 1c0c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZSt19__throw_logic_errorPKc@plt>:
    31c0:	ff 25 02 8f 01 00    	jmp    *0x18f02(%rip)        # 1c0c8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <__cxa_free_exception@plt>:
    31d0:	ff 25 fa 8e 01 00    	jmp    *0x18efa(%rip)        # 1c0d0 <__cxa_free_exception@CXXABI_1.3>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    31e0:	ff 25 f2 8e 01 00    	jmp    *0x18ef2(%rip)        # 1c0d8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <glfwGetRequiredInstanceExtensions@plt>:
    31f0:	ff 25 ea 8e 01 00    	jmp    *0x18eea(%rip)        # 1c0e0 <glfwGetRequiredInstanceExtensions@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3200:	ff 25 e2 8e 01 00    	jmp    *0x18ee2(%rip)        # 1c0e8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    3210:	ff 25 da 8e 01 00    	jmp    *0x18eda(%rip)        # 1c0f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <vkDestroyDevice@plt>:
    3220:	ff 25 d2 8e 01 00    	jmp    *0x18ed2(%rip)        # 1c0f8 <vkDestroyDevice@Base>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <vkEnumerateInstanceExtensionProperties@plt>:
    3230:	ff 25 ca 8e 01 00    	jmp    *0x18eca(%rip)        # 1c100 <vkEnumerateInstanceExtensionProperties@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    3240:	ff 25 c2 8e 01 00    	jmp    *0x18ec2(%rip)        # 1c108 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <glfwWindowHint@plt>:
    3250:	ff 25 ba 8e 01 00    	jmp    *0x18eba(%rip)        # 1c110 <glfwWindowHint@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    3260:	ff 25 b2 8e 01 00    	jmp    *0x18eb2(%rip)        # 1c118 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <__cxa_atexit@plt>:
    3270:	ff 25 aa 8e 01 00    	jmp    *0x18eaa(%rip)        # 1c120 <__cxa_atexit@GLIBC_2.2.5>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    3280:	ff 25 a2 8e 01 00    	jmp    *0x18ea2(%rip)        # 1c128 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkGetPhysicalDeviceProperties2@plt>:
    3290:	ff 25 9a 8e 01 00    	jmp    *0x18e9a(%rip)        # 1c130 <vkGetPhysicalDeviceProperties2@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <vkGetInstanceProcAddr@plt>:
    32a0:	ff 25 92 8e 01 00    	jmp    *0x18e92(%rip)        # 1c138 <vkGetInstanceProcAddr@Base>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <glfwPollEvents@plt>:
    32b0:	ff 25 8a 8e 01 00    	jmp    *0x18e8a(%rip)        # 1c140 <glfwPollEvents@Base>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    32c0:	ff 25 82 8e 01 00    	jmp    *0x18e82(%rip)        # 1c148 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <_Znwm@plt>:
    32d0:	ff 25 7a 8e 01 00    	jmp    *0x18e7a(%rip)        # 1c150 <_Znwm@GLIBCXX_3.4>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <_ZdlPvm@plt>:
    32e0:	ff 25 72 8e 01 00    	jmp    *0x18e72(%rip)        # 1c158 <_ZdlPvm@CXXABI_1.3.9>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <vkDestroyInstance@plt>:
    32f0:	ff 25 6a 8e 01 00    	jmp    *0x18e6a(%rip)        # 1c160 <vkDestroyInstance@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <glfwTerminate@plt>:
    3300:	ff 25 62 8e 01 00    	jmp    *0x18e62(%rip)        # 1c168 <glfwTerminate@Base>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3310:	ff 25 5a 8e 01 00    	jmp    *0x18e5a(%rip)        # 1c170 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <_ZNSolsEPFRSoS_E@plt>:
    3320:	ff 25 52 8e 01 00    	jmp    *0x18e52(%rip)        # 1c178 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3330:	ff 25 4a 8e 01 00    	jmp    *0x18e4a(%rip)        # 1c180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3340:	ff 25 42 8e 01 00    	jmp    *0x18e42(%rip)        # 1c188 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    3350:	ff 25 3a 8e 01 00    	jmp    *0x18e3a(%rip)        # 1c190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSaIcED1Ev@plt>:
    3360:	ff 25 32 8e 01 00    	jmp    *0x18e32(%rip)        # 1c198 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    3370:	ff 25 2a 8e 01 00    	jmp    *0x18e2a(%rip)        # 1c1a0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3380:	ff 25 22 8e 01 00    	jmp    *0x18e22(%rip)        # 1c1a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <vkEnumerateInstanceLayerProperties@plt>:
    3390:	ff 25 1a 8e 01 00    	jmp    *0x18e1a(%rip)        # 1c1b0 <vkEnumerateInstanceLayerProperties@Base>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <glfwInit@plt>:
    33a0:	ff 25 12 8e 01 00    	jmp    *0x18e12(%rip)        # 1c1b8 <glfwInit@Base>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    33b0:	ff 25 0a 8e 01 00    	jmp    *0x18e0a(%rip)        # 1c1c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <vkCreateSwapchainKHR@plt>:
    33c0:	ff 25 02 8e 01 00    	jmp    *0x18e02(%rip)        # 1c1c8 <vkCreateSwapchainKHR@Base>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    33d0:	ff 25 fa 8d 01 00    	jmp    *0x18dfa(%rip)        # 1c1d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <vkCreateInstance@plt>:
    33e0:	ff 25 f2 8d 01 00    	jmp    *0x18df2(%rip)        # 1c1d8 <vkCreateInstance@Base>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    33f0:	ff 25 ea 8d 01 00    	jmp    *0x18dea(%rip)        # 1c1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    3400:	ff 25 e2 8d 01 00    	jmp    *0x18de2(%rip)        # 1c1e8 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    3410:	ff 25 da 8d 01 00    	jmp    *0x18dda(%rip)        # 1c1f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    3420:	ff 25 d2 8d 01 00    	jmp    *0x18dd2(%rip)        # 1c1f8 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <vkGetDeviceQueue@plt>:
    3430:	ff 25 ca 8d 01 00    	jmp    *0x18dca(%rip)        # 1c200 <vkGetDeviceQueue@Base>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <_ZNSolsEj@plt>:
    3440:	ff 25 c2 8d 01 00    	jmp    *0x18dc2(%rip)        # 1c208 <_ZNSolsEj@GLIBCXX_3.4>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    3450:	ff 25 ba 8d 01 00    	jmp    *0x18dba(%rip)        # 1c210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    3460:	ff 25 b2 8d 01 00    	jmp    *0x18db2(%rip)        # 1c218 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <vkEnumerateDeviceExtensionProperties@plt>:
    3470:	ff 25 aa 8d 01 00    	jmp    *0x18daa(%rip)        # 1c220 <vkEnumerateDeviceExtensionProperties@Base>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    3480:	ff 25 a2 8d 01 00    	jmp    *0x18da2(%rip)        # 1c228 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <__cxa_rethrow@plt>:
    3490:	ff 25 9a 8d 01 00    	jmp    *0x18d9a(%rip)        # 1c230 <__cxa_rethrow@CXXABI_1.3>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <vkCreateDevice@plt>:
    34a0:	ff 25 92 8d 01 00    	jmp    *0x18d92(%rip)        # 1c238 <vkCreateDevice@Base>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <_ZNSt8ios_base4InitC1Ev@plt>:
    34b0:	ff 25 8a 8d 01 00    	jmp    *0x18d8a(%rip)        # 1c240 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <glfwCreateWindowSurface@plt>:
    34c0:	ff 25 82 8d 01 00    	jmp    *0x18d82(%rip)        # 1c248 <glfwCreateWindowSurface@Base>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <glfwCreateWindow@plt>:
    34d0:	ff 25 7a 8d 01 00    	jmp    *0x18d7a(%rip)        # 1c250 <glfwCreateWindow@Base>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    34e0:	ff 25 72 8d 01 00    	jmp    *0x18d72(%rip)        # 1c258 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    34f0:	ff 25 6a 8d 01 00    	jmp    *0x18d6a(%rip)        # 1c260 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <memmove@plt>:
    3500:	ff 25 62 8d 01 00    	jmp    *0x18d62(%rip)        # 1c268 <memmove@GLIBC_2.2.5>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <__cxa_end_catch@plt>:
    3510:	ff 25 5a 8d 01 00    	jmp    *0x18d5a(%rip)        # 1c270 <__cxa_end_catch@CXXABI_1.3>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <__cxa_throw@plt>:
    3520:	ff 25 52 8d 01 00    	jmp    *0x18d52(%rip)        # 1c278 <__cxa_throw@CXXABI_1.3>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    3530:	ff 25 4a 8d 01 00    	jmp    *0x18d4a(%rip)        # 1c280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    3536:	68 50 00 00 00       	push   $0x50
    353b:	e9 e0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003540 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    3540:	ff 25 42 8d 01 00    	jmp    *0x18d42(%rip)        # 1c288 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    3546:	68 51 00 00 00       	push   $0x51
    354b:	e9 d0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003550 <_ZNSolsEi@plt>:
    3550:	ff 25 3a 8d 01 00    	jmp    *0x18d3a(%rip)        # 1c290 <_ZNSolsEi@GLIBCXX_3.4>
    3556:	68 52 00 00 00       	push   $0x52
    355b:	e9 c0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003560 <vkDestroySurfaceKHR@plt>:
    3560:	ff 25 32 8d 01 00    	jmp    *0x18d32(%rip)        # 1c298 <vkDestroySurfaceKHR@Base>
    3566:	68 53 00 00 00       	push   $0x53
    356b:	e9 b0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003570 <_Unwind_Resume@plt>:
    3570:	ff 25 2a 8d 01 00    	jmp    *0x18d2a(%rip)        # 1c2a0 <_Unwind_Resume@GCC_3.0>
    3576:	68 54 00 00 00       	push   $0x54
    357b:	e9 a0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003580 <_ZNSaIcEC1Ev@plt>:
    3580:	ff 25 22 8d 01 00    	jmp    *0x18d22(%rip)        # 1c2a8 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    3586:	68 55 00 00 00       	push   $0x55
    358b:	e9 90 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3590:	ff 25 1a 8d 01 00    	jmp    *0x18d1a(%rip)        # 1c2b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3596:	68 56 00 00 00       	push   $0x56
    359b:	e9 80 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035a0 <_ZNSt9exceptionD2Ev@plt>:
    35a0:	ff 25 12 8d 01 00    	jmp    *0x18d12(%rip)        # 1c2b8 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    35a6:	68 57 00 00 00       	push   $0x57
    35ab:	e9 70 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035b0 <glfwWindowShouldClose@plt>:
    35b0:	ff 25 0a 8d 01 00    	jmp    *0x18d0a(%rip)        # 1c2c0 <glfwWindowShouldClose@Base>
    35b6:	68 58 00 00 00       	push   $0x58
    35bb:	e9 60 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035c0 <_ZNSolsEd@plt>:
    35c0:	ff 25 02 8d 01 00    	jmp    *0x18d02(%rip)        # 1c2c8 <_ZNSolsEd@GLIBCXX_3.4>
    35c6:	68 59 00 00 00       	push   $0x59
    35cb:	e9 50 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    35d0:	ff 25 fa 8c 01 00    	jmp    *0x18cfa(%rip)        # 1c2d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    35d6:	68 5a 00 00 00       	push   $0x5a
    35db:	e9 40 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    35e0:	ff 25 f2 8c 01 00    	jmp    *0x18cf2(%rip)        # 1c2d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    35e6:	68 5b 00 00 00       	push   $0x5b
    35eb:	e9 30 fa ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

00000000000035f0 <__cxa_finalize@plt>:
    35f0:	ff 25 9a 89 01 00    	jmp    *0x1899a(%rip)        # 1bf90 <__cxa_finalize@GLIBC_2.2.5>
    35f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003600 <_start>:
    3600:	31 ed                	xor    %ebp,%ebp
    3602:	49 89 d1             	mov    %rdx,%r9
    3605:	5e                   	pop    %rsi
    3606:	48 89 e2             	mov    %rsp,%rdx
    3609:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    360d:	50                   	push   %rax
    360e:	54                   	push   %rsp
    360f:	45 31 c0             	xor    %r8d,%r8d
    3612:	31 c9                	xor    %ecx,%ecx
    3614:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 37c4 <main>
    361b:	ff 15 7f 89 01 00    	call   *0x1897f(%rip)        # 1bfa0 <__libc_start_main@GLIBC_2.34>
    3621:	f4                   	hlt
    3622:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3629:	00 00 00 
    362c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003630 <deregister_tm_clones>:
    3630:	48 8d 3d c9 8c 01 00 	lea    0x18cc9(%rip),%rdi        # 1c300 <_ZSt4cout@GLIBCXX_3.4>
    3637:	48 8d 05 c2 8c 01 00 	lea    0x18cc2(%rip),%rax        # 1c300 <_ZSt4cout@GLIBCXX_3.4>
    363e:	48 39 f8             	cmp    %rdi,%rax
    3641:	74 15                	je     3658 <deregister_tm_clones+0x28>
    3643:	48 8b 05 66 89 01 00 	mov    0x18966(%rip),%rax        # 1bfb0 <_ITM_deregisterTMCloneTable@Base>
    364a:	48 85 c0             	test   %rax,%rax
    364d:	74 09                	je     3658 <deregister_tm_clones+0x28>
    364f:	ff e0                	jmp    *%rax
    3651:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3658:	c3                   	ret
    3659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003660 <register_tm_clones>:
    3660:	48 8d 3d 99 8c 01 00 	lea    0x18c99(%rip),%rdi        # 1c300 <_ZSt4cout@GLIBCXX_3.4>
    3667:	48 8d 35 92 8c 01 00 	lea    0x18c92(%rip),%rsi        # 1c300 <_ZSt4cout@GLIBCXX_3.4>
    366e:	48 29 fe             	sub    %rdi,%rsi
    3671:	48 89 f0             	mov    %rsi,%rax
    3674:	48 c1 ee 3f          	shr    $0x3f,%rsi
    3678:	48 c1 f8 03          	sar    $0x3,%rax
    367c:	48 01 c6             	add    %rax,%rsi
    367f:	48 d1 fe             	sar    %rsi
    3682:	74 14                	je     3698 <register_tm_clones+0x38>
    3684:	48 8b 05 35 89 01 00 	mov    0x18935(%rip),%rax        # 1bfc0 <_ITM_registerTMCloneTable@Base>
    368b:	48 85 c0             	test   %rax,%rax
    368e:	74 08                	je     3698 <register_tm_clones+0x38>
    3690:	ff e0                	jmp    *%rax
    3692:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3698:	c3                   	ret
    3699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036a0 <__do_global_dtors_aux>:
    36a0:	f3 0f 1e fa          	endbr64
    36a4:	80 3d 85 8e 01 00 00 	cmpb   $0x0,0x18e85(%rip)        # 1c530 <completed.0>
    36ab:	75 2b                	jne    36d8 <__do_global_dtors_aux+0x38>
    36ad:	55                   	push   %rbp
    36ae:	48 83 3d da 88 01 00 	cmpq   $0x0,0x188da(%rip)        # 1bf90 <__cxa_finalize@GLIBC_2.2.5>
    36b5:	00 
    36b6:	48 89 e5             	mov    %rsp,%rbp
    36b9:	74 0c                	je     36c7 <__do_global_dtors_aux+0x27>
    36bb:	48 8b 3d 26 8c 01 00 	mov    0x18c26(%rip),%rdi        # 1c2e8 <__dso_handle>
    36c2:	e8 29 ff ff ff       	call   35f0 <__cxa_finalize@plt>
    36c7:	e8 64 ff ff ff       	call   3630 <deregister_tm_clones>
    36cc:	c6 05 5d 8e 01 00 01 	movb   $0x1,0x18e5d(%rip)        # 1c530 <completed.0>
    36d3:	5d                   	pop    %rbp
    36d4:	c3                   	ret
    36d5:	0f 1f 00             	nopl   (%rax)
    36d8:	c3                   	ret
    36d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036e0 <frame_dummy>:
    36e0:	f3 0f 1e fa          	endbr64
    36e4:	e9 77 ff ff ff       	jmp    3660 <register_tm_clones>

00000000000036e9 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    36e9:	55                   	push   %rbp
    36ea:	48 89 e5             	mov    %rsp,%rbp
    36ed:	53                   	push   %rbx
    36ee:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
  VulkanApp app;
    36f5:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    36fc:	48 89 c7             	mov    %rax,%rdi
    36ff:	e8 4a 72 00 00       	call   a94e <_ZN9VulkanAppC1Ev>
  app.run();
    3704:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    370b:	48 89 c7             	mov    %rax,%rdi
    370e:	e8 41 75 00 00       	call   ac54 <_ZN9VulkanApp3runEv>
  app.writeInfo("src/info.log");
    3713:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3717:	48 89 c7             	mov    %rax,%rdi
    371a:	e8 61 fe ff ff       	call   3580 <_ZNSaIcEC1Ev@plt>
    371f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3723:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3727:	48 8d 0d b6 ce 00 00 	lea    0xceb6(%rip),%rcx        # 105e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    372e:	48 89 ce             	mov    %rcx,%rsi
    3731:	48 89 c7             	mov    %rax,%rdi
    3734:	e8 77 02 00 00       	call   39b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    3739:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    373d:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    3744:	48 89 d6             	mov    %rdx,%rsi
    3747:	48 89 c7             	mov    %rax,%rdi
    374a:	e8 5f 76 00 00       	call   adae <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    374f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3753:	48 89 c7             	mov    %rax,%rdi
    3756:	e8 25 fa ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    375b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    375f:	48 89 c7             	mov    %rax,%rdi
    3762:	e8 f9 fb ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    3767:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    376c:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    3773:	48 89 c7             	mov    %rax,%rdi
    3776:	e8 e9 73 00 00       	call   ab64 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    377b:	89 d8                	mov    %ebx,%eax
    377d:	eb 3f                	jmp    37be <_Z14protected_mainv+0xd5>
  app.writeInfo("src/info.log");
    377f:	48 89 c3             	mov    %rax,%rbx
    3782:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3786:	48 89 c7             	mov    %rax,%rdi
    3789:	e8 f2 f9 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    378e:	eb 03                	jmp    3793 <_Z14protected_mainv+0xaa>
    3790:	48 89 c3             	mov    %rax,%rbx
    3793:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3797:	48 89 c7             	mov    %rax,%rdi
    379a:	e8 c1 fb ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    379f:	eb 03                	jmp    37a4 <_Z14protected_mainv+0xbb>
}
    37a1:	48 89 c3             	mov    %rax,%rbx
    37a4:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    37ab:	48 89 c7             	mov    %rax,%rdi
    37ae:	e8 b1 73 00 00       	call   ab64 <_ZN9VulkanAppD1Ev>
    37b3:	48 89 d8             	mov    %rbx,%rax
    37b6:	48 89 c7             	mov    %rax,%rdi
    37b9:	e8 b2 fd ff ff       	call   3570 <_Unwind_Resume@plt>
    37be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    37c2:	c9                   	leave
    37c3:	c3                   	ret

00000000000037c4 <main>:

int main() {
    37c4:	55                   	push   %rbp
    37c5:	48 89 e5             	mov    %rsp,%rbp
    37c8:	53                   	push   %rbx
    37c9:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    37cd:	e8 17 ff ff ff       	call   36e9 <_Z14protected_mainv>
    37d2:	e9 aa 00 00 00       	jmp    3881 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    37d7:	b8 01 00 00 00       	mov    $0x1,%eax
    37dc:	e9 a0 00 00 00       	jmp    3881 <main+0xbd>
  } catch (const std::exception &e) {
    37e1:	48 83 fa 01          	cmp    $0x1,%rdx
    37e5:	75 49                	jne    3830 <main+0x6c>
    37e7:	48 89 c7             	mov    %rax,%rdi
    37ea:	e8 11 f9 ff ff       	call   3100 <__cxa_begin_catch@plt>
    37ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    37f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37f7:	48 8b 00             	mov    (%rax),%rax
    37fa:	48 83 c0 10          	add    $0x10,%rax
    37fe:	48 8b 10             	mov    (%rax),%rdx
    3801:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3805:	48 89 c7             	mov    %rax,%rdi
    3808:	ff d2                	call   *%rdx
    380a:	48 89 c6             	mov    %rax,%rsi
    380d:	48 8d 05 0c 8c 01 00 	lea    0x18c0c(%rip),%rax        # 1c420 <_ZSt4cerr@GLIBCXX_3.4>
    3814:	48 89 c7             	mov    %rax,%rdi
    3817:	e8 a4 fa ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    381c:	be 0a 00 00 00       	mov    $0xa,%esi
    3821:	48 89 c7             	mov    %rax,%rdi
    3824:	e8 87 fb ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    3829:	e8 e2 fc ff ff       	call   3510 <__cxa_end_catch@plt>
    382e:	eb a7                	jmp    37d7 <main+0x13>
    3830:	48 89 c7             	mov    %rax,%rdi
    3833:	e8 c8 f8 ff ff       	call   3100 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    3838:	48 8d 05 b2 cd 00 00 	lea    0xcdb2(%rip),%rax        # 105f1 <_ZN6__pstl9execution2v1L5unseqE+0xe>
    383f:	48 89 c6             	mov    %rax,%rsi
    3842:	48 8d 05 d7 8b 01 00 	lea    0x18bd7(%rip),%rax        # 1c420 <_ZSt4cerr@GLIBCXX_3.4>
    3849:	48 89 c7             	mov    %rax,%rdi
    384c:	e8 6f fa ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    3851:	e8 ba fc ff ff       	call   3510 <__cxa_end_catch@plt>
    3856:	e9 7c ff ff ff       	jmp    37d7 <main+0x13>
  } catch (...) {
    385b:	48 89 c3             	mov    %rax,%rbx
    385e:	e8 ad fc ff ff       	call   3510 <__cxa_end_catch@plt>
    3863:	48 89 d8             	mov    %rbx,%rax
    3866:	48 89 c7             	mov    %rax,%rdi
    3869:	e8 02 fd ff ff       	call   3570 <_Unwind_Resume@plt>
  }
    386e:	48 89 c3             	mov    %rax,%rbx
    3871:	e8 9a fc ff ff       	call   3510 <__cxa_end_catch@plt>
    3876:	48 89 d8             	mov    %rbx,%rax
    3879:	48 89 c7             	mov    %rax,%rdi
    387c:	e8 ef fc ff ff       	call   3570 <_Unwind_Resume@plt>
    3881:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3885:	c9                   	leave
    3886:	c3                   	ret

0000000000003887 <_Z41__static_initialization_and_destruction_0ii>:
    3887:	55                   	push   %rbp
    3888:	48 89 e5             	mov    %rsp,%rbp
    388b:	48 83 ec 10          	sub    $0x10,%rsp
    388f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3892:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3895:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3899:	75 3b                	jne    38d6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    389b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    38a2:	75 32                	jne    38d6 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    38a4:	48 8d 05 86 8c 01 00 	lea    0x18c86(%rip),%rax        # 1c531 <_ZStL8__ioinit>
    38ab:	48 89 c7             	mov    %rax,%rdi
    38ae:	e8 fd fb ff ff       	call   34b0 <_ZNSt8ios_base4InitC1Ev@plt>
    38b3:	48 8d 05 2e 8a 01 00 	lea    0x18a2e(%rip),%rax        # 1c2e8 <__dso_handle>
    38ba:	48 89 c2             	mov    %rax,%rdx
    38bd:	48 8d 05 6d 8c 01 00 	lea    0x18c6d(%rip),%rax        # 1c531 <_ZStL8__ioinit>
    38c4:	48 89 c6             	mov    %rax,%rsi
    38c7:	48 8b 05 fa 86 01 00 	mov    0x186fa(%rip),%rax        # 1bfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    38ce:	48 89 c7             	mov    %rax,%rdi
    38d1:	e8 9a f9 ff ff       	call   3270 <__cxa_atexit@plt>
    38d6:	90                   	nop
    38d7:	c9                   	leave
    38d8:	c3                   	ret

00000000000038d9 <_GLOBAL__sub_I__Z14protected_mainv>:
    38d9:	55                   	push   %rbp
    38da:	48 89 e5             	mov    %rsp,%rbp
    38dd:	be ff ff 00 00       	mov    $0xffff,%esi
    38e2:	bf 01 00 00 00       	mov    $0x1,%edi
    38e7:	e8 9b ff ff ff       	call   3887 <_Z41__static_initialization_and_destruction_0ii>
    38ec:	5d                   	pop    %rbp
    38ed:	c3                   	ret

00000000000038ee <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    38ee:	55                   	push   %rbp
    38ef:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    38f2:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    38f7:	5d                   	pop    %rbp
    38f8:	c3                   	ret

00000000000038f9 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    38f9:	55                   	push   %rbp
    38fa:	48 89 e5             	mov    %rsp,%rbp
    38fd:	48 83 ec 10          	sub    $0x10,%rsp
    3901:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    3905:	e8 e4 ff ff ff       	call   38ee <_ZSt23__is_constant_evaluatedv>
    390a:	84 c0                	test   %al,%al
    390c:	74 0e                	je     391c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    390e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3912:	48 89 c7             	mov    %rax,%rdi
    3915:	e8 12 00 00 00       	call   392c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    391a:	eb 0d                	jmp    3929 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    391c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3920:	48 89 c7             	mov    %rax,%rdi
    3923:	e8 e8 f7 ff ff       	call   3110 <strlen@plt>
    3928:	90                   	nop
      }
    3929:	c9                   	leave
    392a:	c3                   	ret
    392b:	90                   	nop

000000000000392c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    392c:	55                   	push   %rbp
    392d:	48 89 e5             	mov    %rsp,%rbp
    3930:	48 83 ec 20          	sub    $0x20,%rsp
    3934:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    3938:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    393f:	00 
      while (!eq(__p[__i], char_type()))
    3940:	eb 05                	jmp    3947 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    3942:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    3947:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    394b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    394f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3953:	48 01 c2             	add    %rax,%rdx
    3956:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    395a:	48 89 c6             	mov    %rax,%rsi
    395d:	48 89 d7             	mov    %rdx,%rdi
    3960:	e8 0d 00 00 00       	call   3972 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    3965:	83 f0 01             	xor    $0x1,%eax
    3968:	84 c0                	test   %al,%al
    396a:	75 d6                	jne    3942 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    396c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3970:	c9                   	leave
    3971:	c3                   	ret

0000000000003972 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    3972:	55                   	push   %rbp
    3973:	48 89 e5             	mov    %rsp,%rbp
    3976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    397a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    397e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3982:	0f b6 10             	movzbl (%rax),%edx
    3985:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3989:	0f b6 00             	movzbl (%rax),%eax
    398c:	38 c2                	cmp    %al,%dl
    398e:	0f 94 c0             	sete   %al
    3991:	5d                   	pop    %rbp
    3992:	c3                   	ret
    3993:	90                   	nop

0000000000003994 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    3994:	55                   	push   %rbp
    3995:	48 89 e5             	mov    %rsp,%rbp
    3998:	48 83 ec 10          	sub    $0x10,%rsp
    399c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39a4:	48 89 c7             	mov    %rax,%rdi
    39a7:	e8 b4 f6 ff ff       	call   3060 <_ZNSaIcED2Ev@plt>
    39ac:	90                   	nop
    39ad:	c9                   	leave
    39ae:	c3                   	ret
    39af:	90                   	nop

00000000000039b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    39b0:	55                   	push   %rbp
    39b1:	48 89 e5             	mov    %rsp,%rbp
    39b4:	53                   	push   %rbx
    39b5:	48 83 ec 38          	sub    $0x38,%rsp
    39b9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    39bd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    39c1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    39c5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    39c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    39cd:	48 89 c7             	mov    %rax,%rdi
    39d0:	e8 3b f8 ff ff       	call   3210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    39d5:	48 89 c1             	mov    %rax,%rcx
    39d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    39dc:	48 89 c2             	mov    %rax,%rdx
    39df:	48 89 ce             	mov    %rcx,%rsi
    39e2:	48 89 df             	mov    %rbx,%rdi
    39e5:	e8 46 f9 ff ff       	call   3330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    39ea:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    39ef:	75 0f                	jne    3a00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    39f1:	48 8d 05 10 cc 00 00 	lea    0xcc10(%rip),%rax        # 10608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    39f8:	48 89 c7             	mov    %rax,%rdi
    39fb:	e8 c0 f7 ff ff       	call   31c0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    3a00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a04:	48 89 c7             	mov    %rax,%rdi
    3a07:	e8 ed fe ff ff       	call   38f9 <_ZNSt11char_traitsIcE6lengthEPKc>
    3a0c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3a10:	48 01 d0             	add    %rdx,%rax
    3a13:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    3a17:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3a1b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3a1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a23:	48 89 ce             	mov    %rcx,%rsi
    3a26:	48 89 c7             	mov    %rax,%rdi
    3a29:	e8 66 00 00 00       	call   3a94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    3a2e:	eb 1a                	jmp    3a4a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    3a30:	48 89 c3             	mov    %rax,%rbx
    3a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a37:	48 89 c7             	mov    %rax,%rdi
    3a3a:	e8 55 ff ff ff       	call   3994 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    3a3f:	48 89 d8             	mov    %rbx,%rax
    3a42:	48 89 c7             	mov    %rax,%rdi
    3a45:	e8 26 fb ff ff       	call   3570 <_Unwind_Resume@plt>
    3a4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3a4e:	c9                   	leave
    3a4f:	c3                   	ret

0000000000003a50 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    3a50:	55                   	push   %rbp
    3a51:	48 89 e5             	mov    %rsp,%rbp
    3a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3a64:	48 89 10             	mov    %rdx,(%rax)
    3a67:	90                   	nop
    3a68:	5d                   	pop    %rbp
    3a69:	c3                   	ret

0000000000003a6a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    3a6a:	55                   	push   %rbp
    3a6b:	48 89 e5             	mov    %rsp,%rbp
    3a6e:	48 83 ec 10          	sub    $0x10,%rsp
    3a72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a7a:	48 8b 00             	mov    (%rax),%rax
    3a7d:	48 85 c0             	test   %rax,%rax
    3a80:	74 0f                	je     3a91 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    3a82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a86:	48 8b 00             	mov    (%rax),%rax
    3a89:	48 89 c7             	mov    %rax,%rdi
    3a8c:	e8 5f f9 ff ff       	call   33f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    3a91:	90                   	nop
    3a92:	c9                   	leave
    3a93:	c3                   	ret

0000000000003a94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    3a94:	55                   	push   %rbp
    3a95:	48 89 e5             	mov    %rsp,%rbp
    3a98:	48 83 ec 40          	sub    $0x40,%rsp
    3a9c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3aa0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3aa4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    3aa8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3aac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3ab0:	48 89 d6             	mov    %rdx,%rsi
    3ab3:	48 89 c7             	mov    %rax,%rdi
    3ab6:	e8 c0 00 00 00       	call   3b7b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    3abb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    3abf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3ac3:	48 83 f8 0f          	cmp    $0xf,%rax
    3ac7:	76 3f                	jbe    3b08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    3ac9:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    3acd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ad1:	ba 00 00 00 00       	mov    $0x0,%edx
    3ad6:	48 89 ce             	mov    %rcx,%rsi
    3ad9:	48 89 c7             	mov    %rax,%rdi
    3adc:	e8 af fa ff ff       	call   3590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    3ae1:	48 89 c2             	mov    %rax,%rdx
    3ae4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ae8:	48 89 d6             	mov    %rdx,%rsi
    3aeb:	48 89 c7             	mov    %rax,%rdi
    3aee:	e8 4d f7 ff ff       	call   3240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    3af3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3af7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3afb:	48 89 d6             	mov    %rdx,%rsi
    3afe:	48 89 c7             	mov    %rax,%rdi
    3b01:	e8 da fa ff ff       	call   35e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    3b06:	eb 15                	jmp    3b1d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    3b08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    3b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b14:	48 89 c7             	mov    %rax,%rdi
    3b17:	e8 f4 f6 ff ff       	call   3210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3b1c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    3b1d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3b21:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3b25:	48 89 d6             	mov    %rdx,%rsi
    3b28:	48 89 c7             	mov    %rax,%rdi
    3b2b:	e8 20 ff ff ff       	call   3a50 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    3b30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b34:	48 89 c7             	mov    %rax,%rdi
    3b37:	e8 34 f8 ff ff       	call   3370 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    3b3c:	48 89 c1             	mov    %rax,%rcx
    3b3f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3b43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b47:	48 89 c6             	mov    %rax,%rsi
    3b4a:	48 89 cf             	mov    %rcx,%rdi
    3b4d:	e8 2e f8 ff ff       	call   3380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    3b52:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3b59:	00 

	_M_set_length(__dnew);
    3b5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b62:	48 89 d6             	mov    %rdx,%rsi
    3b65:	48 89 c7             	mov    %rax,%rdi
    3b68:	e8 23 f6 ff ff       	call   3190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    3b6d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3b71:	48 89 c7             	mov    %rax,%rdi
    3b74:	e8 f1 fe ff ff       	call   3a6a <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    3b79:	c9                   	leave
    3b7a:	c3                   	ret

0000000000003b7b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    3b7b:	55                   	push   %rbp
    3b7c:	48 89 e5             	mov    %rsp,%rbp
    3b7f:	48 83 ec 10          	sub    $0x10,%rsp
    3b83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b87:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    3b8b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3b8f:	48 89 c7             	mov    %rax,%rdi
    3b92:	e8 15 00 00 00       	call   3bac <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    3b97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b9f:	48 89 d6             	mov    %rdx,%rsi
    3ba2:	48 89 c7             	mov    %rax,%rdi
    3ba5:	e8 0d 00 00 00       	call   3bb7 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    3baa:	c9                   	leave
    3bab:	c3                   	ret

0000000000003bac <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    3bac:	55                   	push   %rbp
    3bad:	48 89 e5             	mov    %rsp,%rbp
    3bb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    3bb4:	90                   	nop
    3bb5:	5d                   	pop    %rbp
    3bb6:	c3                   	ret

0000000000003bb7 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    3bb7:	55                   	push   %rbp
    3bb8:	48 89 e5             	mov    %rsp,%rbp
    3bbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    3bc3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3bc7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    3bcb:	5d                   	pop    %rbp
    3bcc:	c3                   	ret

0000000000003bcd <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    3bcd:	55                   	push   %rbp
    3bce:	48 89 e5             	mov    %rsp,%rbp
    3bd1:	48 83 ec 20          	sub    $0x20,%rsp
    3bd5:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3bd8:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3bdb:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    3bdf:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    3be3:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    3be7:	be 00 00 00 00       	mov    $0x0,%esi
    3bec:	bf 01 20 02 00       	mov    $0x22001,%edi
    3bf1:	e8 5a f6 ff ff       	call   3250 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    3bf6:	be 00 00 00 00       	mov    $0x0,%esi
    3bfb:	bf 03 00 02 00       	mov    $0x20003,%edi
    3c00:	e8 4b f6 ff ff       	call   3250 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    3c05:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    3c09:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    3c0d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c11:	8b 75 f8             	mov    -0x8(%rbp),%esi
    3c14:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3c17:	49 89 f8             	mov    %rdi,%r8
    3c1a:	89 c7                	mov    %eax,%edi
    3c1c:	e8 af f8 ff ff       	call   34d0 <glfwCreateWindow@plt>
}
    3c21:	c9                   	leave
    3c22:	c3                   	ret

0000000000003c23 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    3c23:	55                   	push   %rbp
    3c24:	48 89 e5             	mov    %rsp,%rbp
    3c27:	41 54                	push   %r12
    3c29:	53                   	push   %rbx
    3c2a:	48 83 ec 20          	sub    $0x20,%rsp
    3c2e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c32:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    3c36:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    3c3a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3c3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c42:	48 89 ce             	mov    %rcx,%rsi
    3c45:	48 89 c7             	mov    %rax,%rdi
    3c48:	e8 93 f7 ff ff       	call   33e0 <vkCreateInstance@plt>
    3c4d:	85 c0                	test   %eax,%eax
    3c4f:	0f 95 c0             	setne  %al
    3c52:	84 c0                	test   %al,%al
    3c54:	74 3b                	je     3c91 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    3c56:	bf 10 00 00 00       	mov    $0x10,%edi
    3c5b:	e8 d0 f4 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    3c60:	48 89 c3             	mov    %rax,%rbx
    3c63:	48 8d 05 ae cf 00 00 	lea    0xcfae(%rip),%rax        # 10c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    3c6a:	48 89 c6             	mov    %rax,%rsi
    3c6d:	48 89 df             	mov    %rbx,%rdi
    3c70:	e8 6b f4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    3c75:	48 8b 05 2c 83 01 00 	mov    0x1832c(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3c7c:	48 89 c2             	mov    %rax,%rdx
    3c7f:	48 8d 05 ba 80 01 00 	lea    0x180ba(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3c86:	48 89 c6             	mov    %rax,%rsi
    3c89:	48 89 df             	mov    %rbx,%rdi
    3c8c:	e8 8f f8 ff ff       	call   3520 <__cxa_throw@plt>
  }
  return instance;
    3c91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c95:	eb 16                	jmp    3cad <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    3c97:	49 89 c4             	mov    %rax,%r12
    3c9a:	48 89 df             	mov    %rbx,%rdi
    3c9d:	e8 2e f5 ff ff       	call   31d0 <__cxa_free_exception@plt>
    3ca2:	4c 89 e0             	mov    %r12,%rax
    3ca5:	48 89 c7             	mov    %rax,%rdi
    3ca8:	e8 c3 f8 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    3cad:	48 83 c4 20          	add    $0x20,%rsp
    3cb1:	5b                   	pop    %rbx
    3cb2:	41 5c                	pop    %r12
    3cb4:	5d                   	pop    %rbp
    3cb5:	c3                   	ret

0000000000003cb6 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    3cb6:	55                   	push   %rbp
    3cb7:	48 89 e5             	mov    %rsp,%rbp
    3cba:	41 54                	push   %r12
    3cbc:	53                   	push   %rbx
    3cbd:	48 83 ec 30          	sub    $0x30,%rsp
    3cc1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3cc5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3cc9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    3ccd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3cd1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3cd5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    3cd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3cdd:	48 89 c7             	mov    %rax,%rdi
    3ce0:	e8 bb f7 ff ff       	call   34a0 <vkCreateDevice@plt>
    3ce5:	85 c0                	test   %eax,%eax
    3ce7:	0f 95 c0             	setne  %al
    3cea:	84 c0                	test   %al,%al
    3cec:	74 3b                	je     3d29 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    3cee:	bf 10 00 00 00       	mov    $0x10,%edi
    3cf3:	e8 38 f4 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    3cf8:	48 89 c3             	mov    %rax,%rbx
    3cfb:	48 8d 05 36 cf 00 00 	lea    0xcf36(%rip),%rax        # 10c38 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    3d02:	48 89 c6             	mov    %rax,%rsi
    3d05:	48 89 df             	mov    %rbx,%rdi
    3d08:	e8 d3 f3 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    3d0d:	48 8b 05 94 82 01 00 	mov    0x18294(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3d14:	48 89 c2             	mov    %rax,%rdx
    3d17:	48 8d 05 22 80 01 00 	lea    0x18022(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3d1e:	48 89 c6             	mov    %rax,%rsi
    3d21:	48 89 df             	mov    %rbx,%rdi
    3d24:	e8 f7 f7 ff ff       	call   3520 <__cxa_throw@plt>
  }
  return device;
    3d29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d2d:	eb 16                	jmp    3d45 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    3d2f:	49 89 c4             	mov    %rax,%r12
    3d32:	48 89 df             	mov    %rbx,%rdi
    3d35:	e8 96 f4 ff ff       	call   31d0 <__cxa_free_exception@plt>
    3d3a:	4c 89 e0             	mov    %r12,%rax
    3d3d:	48 89 c7             	mov    %rax,%rdi
    3d40:	e8 2b f8 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    3d45:	48 83 c4 30          	add    $0x30,%rsp
    3d49:	5b                   	pop    %rbx
    3d4a:	41 5c                	pop    %r12
    3d4c:	5d                   	pop    %rbp
    3d4d:	c3                   	ret

0000000000003d4e <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    3d4e:	55                   	push   %rbp
    3d4f:	48 89 e5             	mov    %rsp,%rbp
    3d52:	41 54                	push   %r12
    3d54:	53                   	push   %rbx
    3d55:	48 83 ec 30          	sub    $0x30,%rsp
    3d59:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3d5d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3d61:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    3d65:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3d69:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3d6d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    3d71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d75:	48 89 c7             	mov    %rax,%rdi
    3d78:	e8 43 f7 ff ff       	call   34c0 <glfwCreateWindowSurface@plt>
    3d7d:	85 c0                	test   %eax,%eax
    3d7f:	0f 95 c0             	setne  %al
    3d82:	84 c0                	test   %al,%al
    3d84:	74 3b                	je     3dc1 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    3d86:	bf 10 00 00 00       	mov    $0x10,%edi
    3d8b:	e8 a0 f3 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    3d90:	48 89 c3             	mov    %rax,%rbx
    3d93:	48 8d 05 c6 ce 00 00 	lea    0xcec6(%rip),%rax        # 10c60 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    3d9a:	48 89 c6             	mov    %rax,%rsi
    3d9d:	48 89 df             	mov    %rbx,%rdi
    3da0:	e8 3b f3 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    3da5:	48 8b 05 fc 81 01 00 	mov    0x181fc(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3dac:	48 89 c2             	mov    %rax,%rdx
    3daf:	48 8d 05 8a 7f 01 00 	lea    0x17f8a(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3db6:	48 89 c6             	mov    %rax,%rsi
    3db9:	48 89 df             	mov    %rbx,%rdi
    3dbc:	e8 5f f7 ff ff       	call   3520 <__cxa_throw@plt>
  }
  return surface;
    3dc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3dc5:	eb 16                	jmp    3ddd <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    3dc7:	49 89 c4             	mov    %rax,%r12
    3dca:	48 89 df             	mov    %rbx,%rdi
    3dcd:	e8 fe f3 ff ff       	call   31d0 <__cxa_free_exception@plt>
    3dd2:	4c 89 e0             	mov    %r12,%rax
    3dd5:	48 89 c7             	mov    %rax,%rdi
    3dd8:	e8 93 f7 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    3ddd:	48 83 c4 30          	add    $0x30,%rsp
    3de1:	5b                   	pop    %rbx
    3de2:	41 5c                	pop    %r12
    3de4:	5d                   	pop    %rbp
    3de5:	c3                   	ret

0000000000003de6 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    3de6:	55                   	push   %rbp
    3de7:	48 89 e5             	mov    %rsp,%rbp
    3dea:	41 54                	push   %r12
    3dec:	53                   	push   %rbx
    3ded:	48 83 ec 30          	sub    $0x30,%rsp
    3df1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3df5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3df9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    3dfd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3e04:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    3e05:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    3e09:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3e0d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    3e11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e15:	48 89 c7             	mov    %rax,%rdi
    3e18:	e8 a3 f5 ff ff       	call   33c0 <vkCreateSwapchainKHR@plt>
    3e1d:	85 c0                	test   %eax,%eax
    3e1f:	0f 95 c0             	setne  %al
    3e22:	84 c0                	test   %al,%al
    3e24:	74 3b                	je     3e61 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    3e26:	bf 10 00 00 00       	mov    $0x10,%edi
    3e2b:	e8 00 f3 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    3e30:	48 89 c3             	mov    %rax,%rbx
    3e33:	48 8d 05 47 ce 00 00 	lea    0xce47(%rip),%rax        # 10c81 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    3e3a:	48 89 c6             	mov    %rax,%rsi
    3e3d:	48 89 df             	mov    %rbx,%rdi
    3e40:	e8 9b f2 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    3e45:	48 8b 05 5c 81 01 00 	mov    0x1815c(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3e4c:	48 89 c2             	mov    %rax,%rdx
    3e4f:	48 8d 05 ea 7e 01 00 	lea    0x17eea(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3e56:	48 89 c6             	mov    %rax,%rsi
    3e59:	48 89 df             	mov    %rbx,%rdi
    3e5c:	e8 bf f6 ff ff       	call   3520 <__cxa_throw@plt>
  }
  return swapchain;
    3e61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e65:	eb 16                	jmp    3e7d <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    3e67:	49 89 c4             	mov    %rax,%r12
    3e6a:	48 89 df             	mov    %rbx,%rdi
    3e6d:	e8 5e f3 ff ff       	call   31d0 <__cxa_free_exception@plt>
    3e72:	4c 89 e0             	mov    %r12,%rax
    3e75:	48 89 c7             	mov    %rax,%rdi
    3e78:	e8 f3 f6 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    3e7d:	48 83 c4 30          	add    $0x30,%rsp
    3e81:	5b                   	pop    %rbx
    3e82:	41 5c                	pop    %r12
    3e84:	5d                   	pop    %rbp
    3e85:	c3                   	ret

0000000000003e86 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    3e86:	55                   	push   %rbp
    3e87:	48 89 e5             	mov    %rsp,%rbp
    3e8a:	48 83 ec 10          	sub    $0x10,%rsp
    3e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e96:	48 89 c7             	mov    %rax,%rdi
    3e99:	e8 12 f2 ff ff       	call   30b0 <glfwDestroyWindow@plt>
    3e9e:	90                   	nop
    3e9f:	c9                   	leave
    3ea0:	c3                   	ret

0000000000003ea1 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    3ea1:	55                   	push   %rbp
    3ea2:	48 89 e5             	mov    %rsp,%rbp
    3ea5:	48 83 ec 10          	sub    $0x10,%rsp
    3ea9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ead:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    3eb1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3eb9:	48 89 d6             	mov    %rdx,%rsi
    3ebc:	48 89 c7             	mov    %rax,%rdi
    3ebf:	e8 2c f4 ff ff       	call   32f0 <vkDestroyInstance@plt>
}
    3ec4:	90                   	nop
    3ec5:	c9                   	leave
    3ec6:	c3                   	ret

0000000000003ec7 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    3ec7:	55                   	push   %rbp
    3ec8:	48 89 e5             	mov    %rsp,%rbp
    3ecb:	48 83 ec 10          	sub    $0x10,%rsp
    3ecf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ed3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    3ed7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3edf:	48 89 d6             	mov    %rdx,%rsi
    3ee2:	48 89 c7             	mov    %rax,%rdi
    3ee5:	e8 36 f3 ff ff       	call   3220 <vkDestroyDevice@plt>
}
    3eea:	90                   	nop
    3eeb:	c9                   	leave
    3eec:	c3                   	ret

0000000000003eed <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    3eed:	55                   	push   %rbp
    3eee:	48 89 e5             	mov    %rsp,%rbp
    3ef1:	48 83 ec 20          	sub    $0x20,%rsp
    3ef5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ef9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3efd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    3f01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3f05:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3f09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f0d:	48 89 ce             	mov    %rcx,%rsi
    3f10:	48 89 c7             	mov    %rax,%rdi
    3f13:	e8 48 f6 ff ff       	call   3560 <vkDestroySurfaceKHR@plt>
}
    3f18:	90                   	nop
    3f19:	c9                   	leave
    3f1a:	c3                   	ret

0000000000003f1b <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    3f1b:	55                   	push   %rbp
    3f1c:	48 89 e5             	mov    %rsp,%rbp
    3f1f:	48 83 ec 20          	sub    $0x20,%rsp
    3f23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f27:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3f2b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    3f2f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3f33:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3f37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f3b:	48 89 ce             	mov    %rcx,%rsi
    3f3e:	48 89 c7             	mov    %rax,%rdi
    3f41:	e8 5a f1 ff ff       	call   30a0 <vkDestroySwapchainKHR@plt>
}
    3f46:	90                   	nop
    3f47:	c9                   	leave
    3f48:	c3                   	ret

0000000000003f49 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    3f49:	55                   	push   %rbp
    3f4a:	48 89 e5             	mov    %rsp,%rbp
    3f4d:	53                   	push   %rbx
    3f4e:	48 83 ec 28          	sub    $0x28,%rsp
    3f52:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    3f56:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3f5a:	be 00 00 00 00       	mov    $0x0,%esi
    3f5f:	48 89 c7             	mov    %rax,%rdi
    3f62:	e8 29 f4 ff ff       	call   3390 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    3f67:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3f6a:	89 c3                	mov    %eax,%ebx
    3f6c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f70:	48 89 c7             	mov    %rax,%rdi
    3f73:	e8 d4 0f 00 00       	call   4f4c <_ZNSaI17VkLayerPropertiesEC1Ev>
    3f78:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3f7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f80:	48 89 de             	mov    %rbx,%rsi
    3f83:	48 89 c7             	mov    %rax,%rdi
    3f86:	e8 f9 0f 00 00       	call   4f84 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    3f8b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f8f:	48 89 c7             	mov    %rax,%rdi
    3f92:	e8 d1 0f 00 00       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    3f97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f9b:	48 89 c7             	mov    %rax,%rdi
    3f9e:	e8 9b 10 00 00       	call   503e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    3fa3:	48 89 c2             	mov    %rax,%rdx
    3fa6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3faa:	48 89 d6             	mov    %rdx,%rsi
    3fad:	48 89 c7             	mov    %rax,%rdi
    3fb0:	e8 db f3 ff ff       	call   3390 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    3fb5:	eb 34                	jmp    3feb <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    3fb7:	48 89 c3             	mov    %rax,%rbx
    3fba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3fbe:	48 89 c7             	mov    %rax,%rdi
    3fc1:	e8 a2 0f 00 00       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
    3fc6:	48 89 d8             	mov    %rbx,%rax
    3fc9:	48 89 c7             	mov    %rax,%rdi
    3fcc:	e8 9f f5 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    3fd1:	48 89 c3             	mov    %rax,%rbx
    3fd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fd8:	48 89 c7             	mov    %rax,%rdi
    3fdb:	e8 1a 10 00 00       	call   4ffa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    3fe0:	48 89 d8             	mov    %rbx,%rax
    3fe3:	48 89 c7             	mov    %rax,%rdi
    3fe6:	e8 85 f5 ff ff       	call   3570 <_Unwind_Resume@plt>
    3feb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3ff3:	c9                   	leave
    3ff4:	c3                   	ret

0000000000003ff5 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    3ff5:	55                   	push   %rbp
    3ff6:	48 89 e5             	mov    %rsp,%rbp
    3ff9:	41 54                	push   %r12
    3ffb:	53                   	push   %rbx
    3ffc:	48 83 ec 20          	sub    $0x20,%rsp
    4000:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4004:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    4008:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    400c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4010:	ba 00 00 00 00       	mov    $0x0,%edx
    4015:	48 89 ce             	mov    %rcx,%rsi
    4018:	48 89 c7             	mov    %rax,%rdi
    401b:	e8 10 f2 ff ff       	call   3230 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    4020:	85 c0                	test   %eax,%eax
    4022:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    4025:	84 c0                	test   %al,%al
    4027:	74 3b                	je     4064 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    4029:	bf 10 00 00 00       	mov    $0x10,%edi
    402e:	e8 fd f0 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4033:	48 89 c3             	mov    %rax,%rbx
    4036:	48 8d 05 13 d8 00 00 	lea    0xd813(%rip),%rax        # 11850 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    403d:	48 89 c6             	mov    %rax,%rsi
    4040:	48 89 df             	mov    %rbx,%rdi
    4043:	e8 98 f0 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4048:	48 8b 05 59 7f 01 00 	mov    0x17f59(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    404f:	48 89 c2             	mov    %rax,%rdx
    4052:	48 8d 05 e7 7c 01 00 	lea    0x17ce7(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4059:	48 89 c6             	mov    %rax,%rsi
    405c:	48 89 df             	mov    %rbx,%rdi
    405f:	e8 bc f4 ff ff       	call   3520 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    4064:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4067:	89 c3                	mov    %eax,%ebx
    4069:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    406d:	48 89 c7             	mov    %rax,%rdi
    4070:	e8 45 10 00 00       	call   50ba <_ZNSaI21VkExtensionPropertiesEC1Ev>
    4075:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4079:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    407d:	48 89 de             	mov    %rbx,%rsi
    4080:	48 89 c7             	mov    %rax,%rdi
    4083:	e8 6a 10 00 00       	call   50f2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    4088:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    408c:	48 89 c7             	mov    %rax,%rdi
    408f:	e8 42 10 00 00       	call   50d6 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    4094:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4098:	48 89 c7             	mov    %rax,%rdi
    409b:	e8 0c 11 00 00       	call   51ac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    40a0:	48 89 c2             	mov    %rax,%rdx
    40a3:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    40a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    40ab:	48 89 ce             	mov    %rcx,%rsi
    40ae:	48 89 c7             	mov    %rax,%rdi
    40b1:	e8 7a f1 ff ff       	call   3230 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    40b6:	85 c0                	test   %eax,%eax
    40b8:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    40bb:	84 c0                	test   %al,%al
    40bd:	0f 84 95 00 00 00    	je     4158 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    40c3:	bf 10 00 00 00       	mov    $0x10,%edi
    40c8:	e8 63 f0 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    40cd:	48 89 c3             	mov    %rax,%rbx
    40d0:	48 8d 05 79 d7 00 00 	lea    0xd779(%rip),%rax        # 11850 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    40d7:	48 89 c6             	mov    %rax,%rsi
    40da:	48 89 df             	mov    %rbx,%rdi
    40dd:	e8 fe ef ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    40e2:	48 8b 05 bf 7e 01 00 	mov    0x17ebf(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    40e9:	48 89 c2             	mov    %rax,%rdx
    40ec:	48 8d 05 4d 7c 01 00 	lea    0x17c4d(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    40f3:	48 89 c6             	mov    %rax,%rsi
    40f6:	48 89 df             	mov    %rbx,%rdi
    40f9:	e8 22 f4 ff ff       	call   3520 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    40fe:	49 89 c4             	mov    %rax,%r12
    4101:	48 89 df             	mov    %rbx,%rdi
    4104:	e8 c7 f0 ff ff       	call   31d0 <__cxa_free_exception@plt>
    4109:	4c 89 e0             	mov    %r12,%rax
    410c:	48 89 c7             	mov    %rax,%rdi
    410f:	e8 5c f4 ff ff       	call   3570 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    4114:	48 89 c3             	mov    %rax,%rbx
    4117:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    411b:	48 89 c7             	mov    %rax,%rdi
    411e:	e8 b3 0f 00 00       	call   50d6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    4123:	48 89 d8             	mov    %rbx,%rax
    4126:	48 89 c7             	mov    %rax,%rdi
    4129:	e8 42 f4 ff ff       	call   3570 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    412e:	49 89 c4             	mov    %rax,%r12
    4131:	48 89 df             	mov    %rbx,%rdi
    4134:	e8 97 f0 ff ff       	call   31d0 <__cxa_free_exception@plt>
    4139:	4c 89 e3             	mov    %r12,%rbx
    413c:	eb 03                	jmp    4141 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    413e:	48 89 c3             	mov    %rax,%rbx
    4141:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4145:	48 89 c7             	mov    %rax,%rdi
    4148:	e8 1b 10 00 00       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    414d:	48 89 d8             	mov    %rbx,%rax
    4150:	48 89 c7             	mov    %rax,%rdi
    4153:	e8 18 f4 ff ff       	call   3570 <_Unwind_Resume@plt>
  return instanceExtensions;
    4158:	90                   	nop
}
    4159:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    415d:	48 83 c4 20          	add    $0x20,%rsp
    4161:	5b                   	pop    %rbx
    4162:	41 5c                	pop    %r12
    4164:	5d                   	pop    %rbp
    4165:	c3                   	ret

0000000000004166 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    4166:	55                   	push   %rbp
    4167:	48 89 e5             	mov    %rsp,%rbp
    416a:	41 54                	push   %r12
    416c:	53                   	push   %rbx
    416d:	48 83 ec 30          	sub    $0x30,%rsp
    4171:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4175:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4179:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    417d:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4181:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4185:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4189:	b9 00 00 00 00       	mov    $0x0,%ecx
    418e:	48 89 c7             	mov    %rax,%rdi
    4191:	e8 da f2 ff ff       	call   3470 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    4196:	85 c0                	test   %eax,%eax
    4198:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    419b:	84 c0                	test   %al,%al
    419d:	74 3b                	je     41da <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    419f:	bf 10 00 00 00       	mov    $0x10,%edi
    41a4:	e8 87 ef ff ff       	call   3130 <__cxa_allocate_exception@plt>
    41a9:	48 89 c3             	mov    %rax,%rbx
    41ac:	48 8d 05 c5 d6 00 00 	lea    0xd6c5(%rip),%rax        # 11878 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    41b3:	48 89 c6             	mov    %rax,%rsi
    41b6:	48 89 df             	mov    %rbx,%rdi
    41b9:	e8 22 ef ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    41be:	48 8b 05 e3 7d 01 00 	mov    0x17de3(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    41c5:	48 89 c2             	mov    %rax,%rdx
    41c8:	48 8d 05 71 7b 01 00 	lea    0x17b71(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    41cf:	48 89 c6             	mov    %rax,%rsi
    41d2:	48 89 df             	mov    %rbx,%rdi
    41d5:	e8 46 f3 ff ff       	call   3520 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    41da:	8b 45 e8             	mov    -0x18(%rbp),%eax
    41dd:	89 c3                	mov    %eax,%ebx
    41df:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    41e3:	48 89 c7             	mov    %rax,%rdi
    41e6:	e8 cf 0e 00 00       	call   50ba <_ZNSaI21VkExtensionPropertiesEC1Ev>
    41eb:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    41ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41f3:	48 89 de             	mov    %rbx,%rsi
    41f6:	48 89 c7             	mov    %rax,%rdi
    41f9:	e8 f4 0e 00 00       	call   50f2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    41fe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4202:	48 89 c7             	mov    %rax,%rdi
    4205:	e8 cc 0e 00 00       	call   50d6 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    420a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    420e:	48 89 c7             	mov    %rax,%rdi
    4211:	e8 96 0f 00 00       	call   51ac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    4216:	48 89 c1             	mov    %rax,%rcx
    4219:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    421d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4221:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4225:	48 89 c7             	mov    %rax,%rdi
    4228:	e8 43 f2 ff ff       	call   3470 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    422d:	85 c0                	test   %eax,%eax
    422f:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    4232:	84 c0                	test   %al,%al
    4234:	0f 84 95 00 00 00    	je     42cf <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    423a:	bf 10 00 00 00       	mov    $0x10,%edi
    423f:	e8 ec ee ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4244:	48 89 c3             	mov    %rax,%rbx
    4247:	48 8d 05 2a d6 00 00 	lea    0xd62a(%rip),%rax        # 11878 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    424e:	48 89 c6             	mov    %rax,%rsi
    4251:	48 89 df             	mov    %rbx,%rdi
    4254:	e8 87 ee ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4259:	48 8b 05 48 7d 01 00 	mov    0x17d48(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4260:	48 89 c2             	mov    %rax,%rdx
    4263:	48 8d 05 d6 7a 01 00 	lea    0x17ad6(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    426a:	48 89 c6             	mov    %rax,%rsi
    426d:	48 89 df             	mov    %rbx,%rdi
    4270:	e8 ab f2 ff ff       	call   3520 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    4275:	49 89 c4             	mov    %rax,%r12
    4278:	48 89 df             	mov    %rbx,%rdi
    427b:	e8 50 ef ff ff       	call   31d0 <__cxa_free_exception@plt>
    4280:	4c 89 e0             	mov    %r12,%rax
    4283:	48 89 c7             	mov    %rax,%rdi
    4286:	e8 e5 f2 ff ff       	call   3570 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    428b:	48 89 c3             	mov    %rax,%rbx
    428e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4292:	48 89 c7             	mov    %rax,%rdi
    4295:	e8 3c 0e 00 00       	call   50d6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    429a:	48 89 d8             	mov    %rbx,%rax
    429d:	48 89 c7             	mov    %rax,%rdi
    42a0:	e8 cb f2 ff ff       	call   3570 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    42a5:	49 89 c4             	mov    %rax,%r12
    42a8:	48 89 df             	mov    %rbx,%rdi
    42ab:	e8 20 ef ff ff       	call   31d0 <__cxa_free_exception@plt>
    42b0:	4c 89 e3             	mov    %r12,%rbx
    42b3:	eb 03                	jmp    42b8 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    42b5:	48 89 c3             	mov    %rax,%rbx
    42b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42bc:	48 89 c7             	mov    %rax,%rdi
    42bf:	e8 a4 0e 00 00       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    42c4:	48 89 d8             	mov    %rbx,%rax
    42c7:	48 89 c7             	mov    %rax,%rdi
    42ca:	e8 a1 f2 ff ff       	call   3570 <_Unwind_Resume@plt>
  return deviceExtensions;
    42cf:	90                   	nop
}
    42d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    42d4:	48 83 c4 30          	add    $0x30,%rsp
    42d8:	5b                   	pop    %rbx
    42d9:	41 5c                	pop    %r12
    42db:	5d                   	pop    %rbp
    42dc:	c3                   	ret

00000000000042dd <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    42dd:	55                   	push   %rbp
    42de:	48 89 e5             	mov    %rsp,%rbp
    42e1:	53                   	push   %rbx
    42e2:	48 83 ec 38          	sub    $0x38,%rsp
    42e6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    42ea:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    42ee:	48 89 c7             	mov    %rax,%rdi
    42f1:	e8 fa ee ff ff       	call   31f0 <glfwGetRequiredInstanceExtensions@plt>
    42f6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    42fa:	8b 45 d8             	mov    -0x28(%rbp),%eax
    42fd:	89 c3                	mov    %eax,%ebx
    42ff:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4303:	48 89 c7             	mov    %rax,%rdi
    4306:	e8 1d 0f 00 00       	call   5228 <_ZNSaIPKcEC1Ev>
    430b:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    430f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4313:	48 89 de             	mov    %rbx,%rsi
    4316:	48 89 c7             	mov    %rax,%rdi
    4319:	e8 42 0f 00 00       	call   5260 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    431e:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4322:	48 89 c7             	mov    %rax,%rdi
    4325:	e8 1a 0f 00 00       	call   5244 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    432a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    4331:	eb 2e                	jmp    4361 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    4333:	8b 45 ec             	mov    -0x14(%rbp),%eax
    4336:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    433d:	00 
    433e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4342:	48 01 d0             	add    %rdx,%rax
    4345:	48 8b 18             	mov    (%rax),%rbx
    4348:	8b 55 ec             	mov    -0x14(%rbp),%edx
    434b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    434f:	48 89 d6             	mov    %rdx,%rsi
    4352:	48 89 c7             	mov    %rax,%rdi
    4355:	e8 7c 0f 00 00       	call   52d6 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    435a:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    435d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    4361:	8b 45 d8             	mov    -0x28(%rbp),%eax
    4364:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    4367:	72 ca                	jb     4333 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    4369:	eb 1a                	jmp    4385 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    436b:	48 89 c3             	mov    %rax,%rbx
    436e:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4372:	48 89 c7             	mov    %rax,%rdi
    4375:	e8 ca 0e 00 00       	call   5244 <_ZNSaIPKcED1Ev>
    437a:	48 89 d8             	mov    %rbx,%rax
    437d:	48 89 c7             	mov    %rax,%rdi
    4380:	e8 eb f1 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    4385:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4389:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    438d:	c9                   	leave
    438e:	c3                   	ret

000000000000438f <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    438f:	55                   	push   %rbp
    4390:	48 89 e5             	mov    %rsp,%rbp
    4393:	53                   	push   %rbx
    4394:	48 83 ec 28          	sub    $0x28,%rsp
    4398:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    439c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    43a0:	be 00 00 00 00       	mov    $0x0,%esi
    43a5:	48 89 c7             	mov    %rax,%rdi
    43a8:	e8 e3 ef ff ff       	call   3390 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    43ad:	8b 45 e8             	mov    -0x18(%rbp),%eax
    43b0:	89 c3                	mov    %eax,%ebx
    43b2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    43b6:	48 89 c7             	mov    %rax,%rdi
    43b9:	e8 8e 0b 00 00       	call   4f4c <_ZNSaI17VkLayerPropertiesEC1Ev>
    43be:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    43c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43c6:	48 89 de             	mov    %rbx,%rsi
    43c9:	48 89 c7             	mov    %rax,%rdi
    43cc:	e8 b3 0b 00 00       	call   4f84 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    43d1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    43d5:	48 89 c7             	mov    %rax,%rdi
    43d8:	e8 8b 0b 00 00       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    43dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43e1:	48 89 c7             	mov    %rax,%rdi
    43e4:	e8 55 0c 00 00       	call   503e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    43e9:	48 89 c2             	mov    %rax,%rdx
    43ec:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    43f0:	48 89 d6             	mov    %rdx,%rsi
    43f3:	48 89 c7             	mov    %rax,%rdi
    43f6:	e8 95 ef ff ff       	call   3390 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    43fb:	eb 34                	jmp    4431 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    43fd:	48 89 c3             	mov    %rax,%rbx
    4400:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4404:	48 89 c7             	mov    %rax,%rdi
    4407:	e8 5c 0b 00 00       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
    440c:	48 89 d8             	mov    %rbx,%rax
    440f:	48 89 c7             	mov    %rax,%rdi
    4412:	e8 59 f1 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    4417:	48 89 c3             	mov    %rax,%rbx
    441a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    441e:	48 89 c7             	mov    %rax,%rdi
    4421:	e8 d4 0b 00 00       	call   4ffa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    4426:	48 89 d8             	mov    %rbx,%rax
    4429:	48 89 c7             	mov    %rax,%rdi
    442c:	e8 3f f1 ff ff       	call   3570 <_Unwind_Resume@plt>
    4431:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4435:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4439:	c9                   	leave
    443a:	c3                   	ret

000000000000443b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    443b:	55                   	push   %rbp
    443c:	48 89 e5             	mov    %rsp,%rbp
    443f:	41 54                	push   %r12
    4441:	53                   	push   %rbx
    4442:	48 83 ec 20          	sub    $0x20,%rsp
    4446:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    444a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    444e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4452:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4456:	ba 00 00 00 00       	mov    $0x0,%edx
    445b:	48 89 ce             	mov    %rcx,%rsi
    445e:	48 89 c7             	mov    %rax,%rdi
    4461:	e8 ea ec ff ff       	call   3150 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    4466:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4469:	85 c0                	test   %eax,%eax
    446b:	75 3b                	jne    44a8 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    446d:	bf 10 00 00 00       	mov    $0x10,%edi
    4472:	e8 b9 ec ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4477:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    447a:	48 8d 05 1f d4 00 00 	lea    0xd41f(%rip),%rax        # 118a0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    4481:	48 89 c6             	mov    %rax,%rsi
    4484:	48 89 df             	mov    %rbx,%rdi
    4487:	e8 54 ec ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    448c:	48 8b 05 15 7b 01 00 	mov    0x17b15(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4493:	48 89 c2             	mov    %rax,%rdx
    4496:	48 8d 05 a3 78 01 00 	lea    0x178a3(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    449d:	48 89 c6             	mov    %rax,%rsi
    44a0:	48 89 df             	mov    %rbx,%rdi
    44a3:	e8 78 f0 ff ff       	call   3520 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    44a8:	8b 45 e8             	mov    -0x18(%rbp),%eax
    44ab:	89 c3                	mov    %eax,%ebx
    44ad:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    44b1:	48 89 c7             	mov    %rax,%rdi
    44b4:	e8 8b 0e 00 00       	call   5344 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    44b9:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    44bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    44c1:	48 89 de             	mov    %rbx,%rsi
    44c4:	48 89 c7             	mov    %rax,%rdi
    44c7:	e8 b0 0e 00 00       	call   537c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    44cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    44d0:	48 89 c7             	mov    %rax,%rdi
    44d3:	e8 88 0e 00 00       	call   5360 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    44d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    44dc:	48 89 c7             	mov    %rax,%rdi
    44df:	e8 52 0f 00 00       	call   5436 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    44e4:	48 89 c2             	mov    %rax,%rdx
    44e7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    44eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    44ef:	48 89 ce             	mov    %rcx,%rsi
    44f2:	48 89 c7             	mov    %rax,%rdi
    44f5:	e8 56 ec ff ff       	call   3150 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    44fa:	85 c0                	test   %eax,%eax
    44fc:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    44ff:	84 c0                	test   %al,%al
    4501:	0f 84 95 00 00 00    	je     459c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    4507:	bf 10 00 00 00       	mov    $0x10,%edi
    450c:	e8 1f ec ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4511:	48 89 c3             	mov    %rax,%rbx
    4514:	48 8d 05 bd d3 00 00 	lea    0xd3bd(%rip),%rax        # 118d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    451b:	48 89 c6             	mov    %rax,%rsi
    451e:	48 89 df             	mov    %rbx,%rdi
    4521:	e8 ba eb ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4526:	48 8b 05 7b 7a 01 00 	mov    0x17a7b(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    452d:	48 89 c2             	mov    %rax,%rdx
    4530:	48 8d 05 09 78 01 00 	lea    0x17809(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4537:	48 89 c6             	mov    %rax,%rsi
    453a:	48 89 df             	mov    %rbx,%rdi
    453d:	e8 de ef ff ff       	call   3520 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    4542:	49 89 c4             	mov    %rax,%r12
    4545:	48 89 df             	mov    %rbx,%rdi
    4548:	e8 83 ec ff ff       	call   31d0 <__cxa_free_exception@plt>
    454d:	4c 89 e0             	mov    %r12,%rax
    4550:	48 89 c7             	mov    %rax,%rdi
    4553:	e8 18 f0 ff ff       	call   3570 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4558:	48 89 c3             	mov    %rax,%rbx
    455b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    455f:	48 89 c7             	mov    %rax,%rdi
    4562:	e8 f9 0d 00 00       	call   5360 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4567:	48 89 d8             	mov    %rbx,%rax
    456a:	48 89 c7             	mov    %rax,%rdi
    456d:	e8 fe ef ff ff       	call   3570 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    4572:	49 89 c4             	mov    %rax,%r12
    4575:	48 89 df             	mov    %rbx,%rdi
    4578:	e8 53 ec ff ff       	call   31d0 <__cxa_free_exception@plt>
    457d:	4c 89 e3             	mov    %r12,%rbx
    4580:	eb 03                	jmp    4585 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    4582:	48 89 c3             	mov    %rax,%rbx
    4585:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4589:	48 89 c7             	mov    %rax,%rdi
    458c:	e8 61 0e 00 00       	call   53f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4591:	48 89 d8             	mov    %rbx,%rax
    4594:	48 89 c7             	mov    %rax,%rdi
    4597:	e8 d4 ef ff ff       	call   3570 <_Unwind_Resume@plt>
  return physicalDevices;
    459c:	90                   	nop
}
    459d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    45a1:	48 83 c4 20          	add    $0x20,%rsp
    45a5:	5b                   	pop    %rbx
    45a6:	41 5c                	pop    %r12
    45a8:	5d                   	pop    %rbp
    45a9:	c3                   	ret

00000000000045aa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    45aa:	55                   	push   %rbp
    45ab:	48 89 e5             	mov    %rsp,%rbp
    45ae:	48 83 ec 10          	sub    $0x10,%rsp
    45b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    45ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    45be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    45c2:	48 89 d6             	mov    %rdx,%rsi
    45c5:	48 89 c7             	mov    %rax,%rdi
    45c8:	e8 23 eb ff ff       	call   30f0 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    45cd:	90                   	nop
}
    45ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45d2:	c9                   	leave
    45d3:	c3                   	ret

00000000000045d4 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    45d4:	55                   	push   %rbp
    45d5:	48 89 e5             	mov    %rsp,%rbp
    45d8:	48 83 ec 20          	sub    $0x20,%rsp
    45dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    45e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45ec:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    45f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    45fa:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    45fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4602:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4606:	48 89 d6             	mov    %rdx,%rsi
    4609:	48 89 c7             	mov    %rax,%rdi
    460c:	e8 7f ec ff ff       	call   3290 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    4611:	90                   	nop
}
    4612:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4616:	c9                   	leave
    4617:	c3                   	ret

0000000000004618 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    4618:	55                   	push   %rbp
    4619:	48 89 e5             	mov    %rsp,%rbp
    461c:	53                   	push   %rbx
    461d:	48 83 ec 28          	sub    $0x28,%rsp
    4621:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4625:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    4629:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    462d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4631:	ba 00 00 00 00       	mov    $0x0,%edx
    4636:	48 89 ce             	mov    %rcx,%rsi
    4639:	48 89 c7             	mov    %rax,%rdi
    463c:	e8 9f eb ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    4641:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4644:	89 c3                	mov    %eax,%ebx
    4646:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    464a:	48 89 c7             	mov    %rax,%rdi
    464d:	e8 56 0e 00 00       	call   54a8 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    4652:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4656:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    465a:	48 89 de             	mov    %rbx,%rsi
    465d:	48 89 c7             	mov    %rax,%rdi
    4660:	e8 7b 0e 00 00       	call   54e0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    4665:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4669:	48 89 c7             	mov    %rax,%rdi
    466c:	e8 53 0e 00 00       	call   54c4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    4671:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4675:	48 89 c7             	mov    %rax,%rdi
    4678:	e8 1d 0f 00 00       	call   559a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    467d:	48 89 c2             	mov    %rax,%rdx
    4680:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4684:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4688:	48 89 ce             	mov    %rcx,%rsi
    468b:	48 89 c7             	mov    %rax,%rdi
    468e:	e8 4d eb ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    4693:	eb 34                	jmp    46c9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    4695:	48 89 c3             	mov    %rax,%rbx
    4698:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    469c:	48 89 c7             	mov    %rax,%rdi
    469f:	e8 20 0e 00 00       	call   54c4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    46a4:	48 89 d8             	mov    %rbx,%rax
    46a7:	48 89 c7             	mov    %rax,%rdi
    46aa:	e8 c1 ee ff ff       	call   3570 <_Unwind_Resume@plt>
}
    46af:	48 89 c3             	mov    %rax,%rbx
    46b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    46b6:	48 89 c7             	mov    %rax,%rdi
    46b9:	e8 98 0e 00 00       	call   5556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    46be:	48 89 d8             	mov    %rbx,%rax
    46c1:	48 89 c7             	mov    %rax,%rdi
    46c4:	e8 a7 ee ff ff       	call   3570 <_Unwind_Resume@plt>
    46c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    46cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    46d1:	c9                   	leave
    46d2:	c3                   	ret

00000000000046d3 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    46d3:	55                   	push   %rbp
    46d4:	48 89 e5             	mov    %rsp,%rbp
    46d7:	53                   	push   %rbx
    46d8:	48 83 ec 68          	sub    $0x68,%rsp
    46dc:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    46e0:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    46e4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    46e8:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    46ec:	48 89 d6             	mov    %rdx,%rsi
    46ef:	48 89 c7             	mov    %rax,%rdi
    46f2:	e8 21 ff ff ff       	call   4618 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    46f7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    46fb:	48 89 c7             	mov    %rax,%rdi
    46fe:	e8 13 0f 00 00       	call   5616 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    4703:	48 89 c3             	mov    %rax,%rbx
    4706:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    470a:	48 89 c7             	mov    %rax,%rdi
    470d:	e8 32 0f 00 00       	call   5644 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4712:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    4716:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    471a:	48 89 de             	mov    %rbx,%rsi
    471d:	48 89 c7             	mov    %rax,%rdi
    4720:	e8 57 0f 00 00       	call   567c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    4725:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4729:	48 89 c7             	mov    %rax,%rdi
    472c:	e8 2f 0f 00 00       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    4731:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4738:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    4739:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    473d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4741:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4745:	48 89 c7             	mov    %rax,%rdi
    4748:	e8 e9 0f 00 00       	call   5736 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    474d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4751:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4755:	48 89 c7             	mov    %rax,%rdi
    4758:	e8 ff 0f 00 00       	call   575c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    475d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4761:	eb 4e                	jmp    47b1 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    4763:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4767:	48 89 c7             	mov    %rax,%rdi
    476a:	e8 71 10 00 00       	call   57e0 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    476f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    4773:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4777:	8b 00                	mov    (%rax),%eax
    4779:	83 e0 01             	and    $0x1,%eax
    477c:	85 c0                	test   %eax,%eax
    477e:	74 25                	je     47a5 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    4780:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4784:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4788:	48 89 d6             	mov    %rdx,%rsi
    478b:	48 89 c7             	mov    %rax,%rdi
    478e:	e8 5f 10 00 00       	call   57f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    4793:	48 89 c2             	mov    %rax,%rdx
    4796:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    479a:	48 89 c6             	mov    %rax,%rsi
    479d:	48 89 d7             	mov    %rdx,%rdi
    47a0:	e8 77 10 00 00       	call   581c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    47a5:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    47a9:	48 89 c7             	mov    %rax,%rdi
    47ac:	e8 0f 10 00 00       	call   57c0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    47b1:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    47b5:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    47b9:	48 89 d6             	mov    %rdx,%rsi
    47bc:	48 89 c7             	mov    %rax,%rdi
    47bf:	e8 c1 0f 00 00       	call   5785 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    47c4:	84 c0                	test   %al,%al
    47c6:	75 9b                	jne    4763 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    47c8:	90                   	nop
}
    47c9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    47cd:	48 89 c7             	mov    %rax,%rdi
    47d0:	e8 81 0d 00 00       	call   5556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    47d5:	eb 26                	jmp    47fd <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    47d7:	48 89 c3             	mov    %rax,%rbx
    47da:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    47de:	48 89 c7             	mov    %rax,%rdi
    47e1:	e8 7a 0e 00 00       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    47e6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    47ea:	48 89 c7             	mov    %rax,%rdi
    47ed:	e8 64 0d 00 00       	call   5556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    47f2:	48 89 d8             	mov    %rbx,%rax
    47f5:	48 89 c7             	mov    %rax,%rdi
    47f8:	e8 73 ed ff ff       	call   3570 <_Unwind_Resume@plt>
    47fd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4801:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4805:	c9                   	leave
    4806:	c3                   	ret

0000000000004807 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    4807:	55                   	push   %rbp
    4808:	48 89 e5             	mov    %rsp,%rbp
    480b:	53                   	push   %rbx
    480c:	48 83 ec 68          	sub    $0x68,%rsp
    4810:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4814:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    4818:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    481c:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    4820:	48 89 d6             	mov    %rdx,%rsi
    4823:	48 89 c7             	mov    %rax,%rdi
    4826:	e8 ed fd ff ff       	call   4618 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    482b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    482f:	48 89 c7             	mov    %rax,%rdi
    4832:	e8 df 0d 00 00       	call   5616 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    4837:	48 89 c3             	mov    %rax,%rbx
    483a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    483e:	48 89 c7             	mov    %rax,%rdi
    4841:	e8 fe 0d 00 00       	call   5644 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4846:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    484a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    484e:	48 89 de             	mov    %rbx,%rsi
    4851:	48 89 c7             	mov    %rax,%rdi
    4854:	e8 23 0e 00 00       	call   567c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    4859:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    485d:	48 89 c7             	mov    %rax,%rdi
    4860:	e8 fb 0d 00 00       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    4865:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    486c:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    486d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4871:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4875:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4879:	48 89 c7             	mov    %rax,%rdi
    487c:	e8 b5 0e 00 00       	call   5736 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    4881:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4885:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4889:	48 89 c7             	mov    %rax,%rdi
    488c:	e8 cb 0e 00 00       	call   575c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    4891:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    4895:	eb 53                	jmp    48ea <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    4897:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    489b:	48 89 c7             	mov    %rax,%rdi
    489e:	e8 3d 0f 00 00       	call   57e0 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    48a3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    48a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    48ab:	8b 00                	mov    (%rax),%eax
    48ad:	83 e0 02             	and    $0x2,%eax
    48b0:	85 c0                	test   %eax,%eax
    48b2:	74 25                	je     48d9 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    48b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    48b8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    48bc:	48 89 d6             	mov    %rdx,%rsi
    48bf:	48 89 c7             	mov    %rax,%rdi
    48c2:	e8 2b 0f 00 00       	call   57f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    48c7:	48 89 c2             	mov    %rax,%rdx
    48ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    48ce:	48 89 c6             	mov    %rax,%rsi
    48d1:	48 89 d7             	mov    %rdx,%rdi
    48d4:	e8 43 0f 00 00       	call   581c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    48d9:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    48de:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    48e2:	48 89 c7             	mov    %rax,%rdi
    48e5:	e8 d6 0e 00 00       	call   57c0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    48ea:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    48ee:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    48f2:	48 89 d6             	mov    %rdx,%rsi
    48f5:	48 89 c7             	mov    %rax,%rdi
    48f8:	e8 88 0e 00 00       	call   5785 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    48fd:	84 c0                	test   %al,%al
    48ff:	75 96                	jne    4897 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    4901:	90                   	nop
}
    4902:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4906:	48 89 c7             	mov    %rax,%rdi
    4909:	e8 48 0c 00 00       	call   5556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    490e:	eb 26                	jmp    4936 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    4910:	48 89 c3             	mov    %rax,%rbx
    4913:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4917:	48 89 c7             	mov    %rax,%rdi
    491a:	e8 41 0d 00 00       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    491f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4923:	48 89 c7             	mov    %rax,%rdi
    4926:	e8 2b 0c 00 00       	call   5556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    492b:	48 89 d8             	mov    %rbx,%rax
    492e:	48 89 c7             	mov    %rax,%rdi
    4931:	e8 3a ec ff ff       	call   3570 <_Unwind_Resume@plt>
    4936:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    493a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    493e:	c9                   	leave
    493f:	c3                   	ret

0000000000004940 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    4940:	55                   	push   %rbp
    4941:	48 89 e5             	mov    %rsp,%rbp
    4944:	53                   	push   %rbx
    4945:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    494c:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    4950:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    4954:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    495b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    495f:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    4963:	48 89 d6             	mov    %rdx,%rsi
    4966:	48 89 c7             	mov    %rax,%rdi
    4969:	e8 aa fc ff ff       	call   4618 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    496e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4972:	48 89 c7             	mov    %rax,%rdi
    4975:	e8 9c 0c 00 00       	call   5616 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    497a:	48 89 c3             	mov    %rax,%rbx
    497d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4981:	48 89 c7             	mov    %rax,%rdi
    4984:	e8 bb 0c 00 00       	call   5644 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    4989:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    498d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4991:	48 89 de             	mov    %rbx,%rsi
    4994:	48 89 c7             	mov    %rax,%rdi
    4997:	e8 e0 0c 00 00       	call   567c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    499c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    49a0:	48 89 c7             	mov    %rax,%rdi
    49a3:	e8 b8 0c 00 00       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    49a8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    49af:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    49b3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    49b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    49bb:	48 89 c7             	mov    %rax,%rdi
    49be:	e8 73 0d 00 00       	call   5736 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    49c3:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    49c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    49cb:	48 89 c7             	mov    %rax,%rdi
    49ce:	e8 89 0d 00 00       	call   575c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    49d3:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    49d7:	eb 6c                	jmp    4a45 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    49d9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    49dd:	48 89 c7             	mov    %rax,%rdi
    49e0:	e8 fb 0d 00 00       	call   57e0 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    49e5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    49e9:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    49f0:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    49f4:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    49fb:	8b 75 ec             	mov    -0x14(%rbp),%esi
    49fe:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4a02:	48 89 c7             	mov    %rax,%rdi
    4a05:	e8 36 e9 ff ff       	call   3340 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    4a0a:	8b 45 9c             	mov    -0x64(%rbp),%eax
    4a0d:	85 c0                	test   %eax,%eax
    4a0f:	74 24                	je     4a35 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    4a11:	8b 55 ec             	mov    -0x14(%rbp),%edx
    4a14:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4a18:	48 89 d6             	mov    %rdx,%rsi
    4a1b:	48 89 c7             	mov    %rax,%rdi
    4a1e:	e8 cf 0d 00 00       	call   57f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    4a23:	48 89 c2             	mov    %rax,%rdx
    4a26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4a2a:	48 89 c6             	mov    %rax,%rsi
    4a2d:	48 89 d7             	mov    %rdx,%rdi
    4a30:	e8 e7 0d 00 00       	call   581c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    4a35:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    4a39:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4a3d:	48 89 c7             	mov    %rax,%rdi
    4a40:	e8 7b 0d 00 00       	call   57c0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    4a45:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    4a49:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    4a4d:	48 89 d6             	mov    %rdx,%rsi
    4a50:	48 89 c7             	mov    %rax,%rdi
    4a53:	e8 2d 0d 00 00       	call   5785 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4a58:	84 c0                	test   %al,%al
    4a5a:	0f 85 79 ff ff ff    	jne    49d9 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    4a60:	90                   	nop
}
    4a61:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4a65:	48 89 c7             	mov    %rax,%rdi
    4a68:	e8 e9 0a 00 00       	call   5556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    4a6d:	eb 37                	jmp    4aa6 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    4a6f:	48 89 c3             	mov    %rax,%rbx
    4a72:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4a76:	48 89 c7             	mov    %rax,%rdi
    4a79:	e8 e2 0b 00 00       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    4a7e:	eb 0f                	jmp    4a8f <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    4a80:	48 89 c3             	mov    %rax,%rbx
    4a83:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4a87:	48 89 c7             	mov    %rax,%rdi
    4a8a:	e8 63 0c 00 00       	call   56f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    4a8f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4a93:	48 89 c7             	mov    %rax,%rdi
    4a96:	e8 bb 0a 00 00       	call   5556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4a9b:	48 89 d8             	mov    %rbx,%rax
    4a9e:	48 89 c7             	mov    %rax,%rdi
    4aa1:	e8 ca ea ff ff       	call   3570 <_Unwind_Resume@plt>
    4aa6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4aaa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4aae:	c9                   	leave
    4aaf:	c3                   	ret

0000000000004ab0 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    4ab0:	55                   	push   %rbp
    4ab1:	48 89 e5             	mov    %rsp,%rbp
    4ab4:	41 54                	push   %r12
    4ab6:	53                   	push   %rbx
    4ab7:	48 83 ec 20          	sub    $0x20,%rsp
    4abb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4abf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4ac3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    4ac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4acb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4acf:	0f 11 00             	movups %xmm0,(%rax)
    4ad2:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4ad6:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4ada:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    4adf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4ae3:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    4ae7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4aeb:	48 89 ce             	mov    %rcx,%rsi
    4aee:	48 89 c7             	mov    %rax,%rdi
    4af1:	e8 6a e7 ff ff       	call   3260 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    4af6:	85 c0                	test   %eax,%eax
    4af8:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    4afb:	84 c0                	test   %al,%al
    4afd:	74 51                	je     4b50 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    4aff:	bf 10 00 00 00       	mov    $0x10,%edi
    4b04:	e8 27 e6 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4b09:	48 89 c3             	mov    %rax,%rbx
    4b0c:	48 8d 05 ed cd 00 00 	lea    0xcded(%rip),%rax        # 11900 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    4b13:	48 89 c6             	mov    %rax,%rsi
    4b16:	48 89 df             	mov    %rbx,%rdi
    4b19:	e8 c2 e5 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4b1e:	48 8b 05 83 74 01 00 	mov    0x17483(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4b25:	48 89 c2             	mov    %rax,%rdx
    4b28:	48 8d 05 11 72 01 00 	lea    0x17211(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4b2f:	48 89 c6             	mov    %rax,%rsi
    4b32:	48 89 df             	mov    %rbx,%rdi
    4b35:	e8 e6 e9 ff ff       	call   3520 <__cxa_throw@plt>
    4b3a:	49 89 c4             	mov    %rax,%r12
    4b3d:	48 89 df             	mov    %rbx,%rdi
    4b40:	e8 8b e6 ff ff       	call   31d0 <__cxa_free_exception@plt>
    4b45:	4c 89 e0             	mov    %r12,%rax
    4b48:	48 89 c7             	mov    %rax,%rdi
    4b4b:	e8 20 ea ff ff       	call   3570 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    4b50:	90                   	nop
}
    4b51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b55:	48 83 c4 20          	add    $0x20,%rsp
    4b59:	5b                   	pop    %rbx
    4b5a:	41 5c                	pop    %r12
    4b5c:	5d                   	pop    %rbp
    4b5d:	c3                   	ret

0000000000004b5e <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    4b5e:	55                   	push   %rbp
    4b5f:	48 89 e5             	mov    %rsp,%rbp
    4b62:	41 54                	push   %r12
    4b64:	53                   	push   %rbx
    4b65:	48 83 ec 30          	sub    $0x30,%rsp
    4b69:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b6d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b71:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    4b75:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4b79:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4b7d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b81:	b9 00 00 00 00       	mov    $0x0,%ecx
    4b86:	48 89 c7             	mov    %rax,%rdi
    4b89:	e8 72 e8 ff ff       	call   3400 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    4b8e:	85 c0                	test   %eax,%eax
    4b90:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    4b93:	84 c0                	test   %al,%al
    4b95:	74 3b                	je     4bd2 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    4b97:	bf 10 00 00 00       	mov    $0x10,%edi
    4b9c:	e8 8f e5 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4ba1:	48 89 c3             	mov    %rax,%rbx
    4ba4:	48 8d 05 7d cd 00 00 	lea    0xcd7d(%rip),%rax        # 11928 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    4bab:	48 89 c6             	mov    %rax,%rsi
    4bae:	48 89 df             	mov    %rbx,%rdi
    4bb1:	e8 2a e5 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4bb6:	48 8b 05 eb 73 01 00 	mov    0x173eb(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4bbd:	48 89 c2             	mov    %rax,%rdx
    4bc0:	48 8d 05 79 71 01 00 	lea    0x17179(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4bc7:	48 89 c6             	mov    %rax,%rsi
    4bca:	48 89 df             	mov    %rbx,%rdi
    4bcd:	e8 4e e9 ff ff       	call   3520 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    4bd2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4bd5:	89 c3                	mov    %eax,%ebx
    4bd7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4bdb:	48 89 c7             	mov    %rax,%rdi
    4bde:	e8 11 0d 00 00       	call   58f4 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    4be3:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4be7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4beb:	48 89 de             	mov    %rbx,%rsi
    4bee:	48 89 c7             	mov    %rax,%rdi
    4bf1:	e8 36 0d 00 00       	call   592c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    4bf6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4bfa:	48 89 c7             	mov    %rax,%rdi
    4bfd:	e8 0e 0d 00 00       	call   5910 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    4c02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c06:	48 89 c7             	mov    %rax,%rdi
    4c09:	e8 d8 0d 00 00       	call   59e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    4c0e:	48 89 c1             	mov    %rax,%rcx
    4c11:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4c15:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4c19:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c1d:	48 89 c7             	mov    %rax,%rdi
    4c20:	e8 db e7 ff ff       	call   3400 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    4c25:	85 c0                	test   %eax,%eax
    4c27:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    4c2a:	84 c0                	test   %al,%al
    4c2c:	0f 84 95 00 00 00    	je     4cc7 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    4c32:	bf 10 00 00 00       	mov    $0x10,%edi
    4c37:	e8 f4 e4 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4c3c:	48 89 c3             	mov    %rax,%rbx
    4c3f:	48 8d 05 e2 cc 00 00 	lea    0xcce2(%rip),%rax        # 11928 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    4c46:	48 89 c6             	mov    %rax,%rsi
    4c49:	48 89 df             	mov    %rbx,%rdi
    4c4c:	e8 8f e4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4c51:	48 8b 05 50 73 01 00 	mov    0x17350(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4c58:	48 89 c2             	mov    %rax,%rdx
    4c5b:	48 8d 05 de 70 01 00 	lea    0x170de(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4c62:	48 89 c6             	mov    %rax,%rsi
    4c65:	48 89 df             	mov    %rbx,%rdi
    4c68:	e8 b3 e8 ff ff       	call   3520 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    4c6d:	49 89 c4             	mov    %rax,%r12
    4c70:	48 89 df             	mov    %rbx,%rdi
    4c73:	e8 58 e5 ff ff       	call   31d0 <__cxa_free_exception@plt>
    4c78:	4c 89 e0             	mov    %r12,%rax
    4c7b:	48 89 c7             	mov    %rax,%rdi
    4c7e:	e8 ed e8 ff ff       	call   3570 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    4c83:	48 89 c3             	mov    %rax,%rbx
    4c86:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4c8a:	48 89 c7             	mov    %rax,%rdi
    4c8d:	e8 7e 0c 00 00       	call   5910 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    4c92:	48 89 d8             	mov    %rbx,%rax
    4c95:	48 89 c7             	mov    %rax,%rdi
    4c98:	e8 d3 e8 ff ff       	call   3570 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    4c9d:	49 89 c4             	mov    %rax,%r12
    4ca0:	48 89 df             	mov    %rbx,%rdi
    4ca3:	e8 28 e5 ff ff       	call   31d0 <__cxa_free_exception@plt>
    4ca8:	4c 89 e3             	mov    %r12,%rbx
    4cab:	eb 03                	jmp    4cb0 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    4cad:	48 89 c3             	mov    %rax,%rbx
    4cb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cb4:	48 89 c7             	mov    %rax,%rdi
    4cb7:	e8 e6 0c 00 00       	call   59a2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    4cbc:	48 89 d8             	mov    %rbx,%rax
    4cbf:	48 89 c7             	mov    %rax,%rdi
    4cc2:	e8 a9 e8 ff ff       	call   3570 <_Unwind_Resume@plt>
  return surfaceFormats;
    4cc7:	90                   	nop
}
    4cc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ccc:	48 83 c4 30          	add    $0x30,%rsp
    4cd0:	5b                   	pop    %rbx
    4cd1:	41 5c                	pop    %r12
    4cd3:	5d                   	pop    %rbp
    4cd4:	c3                   	ret

0000000000004cd5 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    4cd5:	55                   	push   %rbp
    4cd6:	48 89 e5             	mov    %rsp,%rbp
    4cd9:	41 54                	push   %r12
    4cdb:	53                   	push   %rbx
    4cdc:	48 83 ec 30          	sub    $0x30,%rsp
    4ce0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4ce4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4ce8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    4cec:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4cf0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4cf4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4cf8:	b9 00 00 00 00       	mov    $0x0,%ecx
    4cfd:	48 89 c7             	mov    %rax,%rdi
    4d00:	e8 0b e7 ff ff       	call   3410 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    4d05:	85 c0                	test   %eax,%eax
    4d07:	0f 95 c0             	setne  %al
    4d0a:	84 c0                	test   %al,%al
    4d0c:	74 3b                	je     4d49 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    4d0e:	bf 10 00 00 00       	mov    $0x10,%edi
    4d13:	e8 18 e4 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4d18:	48 89 c3             	mov    %rax,%rbx
    4d1b:	48 8d 05 2e cc 00 00 	lea    0xcc2e(%rip),%rax        # 11950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    4d22:	48 89 c6             	mov    %rax,%rsi
    4d25:	48 89 df             	mov    %rbx,%rdi
    4d28:	e8 b3 e3 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4d2d:	48 8b 05 74 72 01 00 	mov    0x17274(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4d34:	48 89 c2             	mov    %rax,%rdx
    4d37:	48 8d 05 02 70 01 00 	lea    0x17002(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4d3e:	48 89 c6             	mov    %rax,%rsi
    4d41:	48 89 df             	mov    %rbx,%rdi
    4d44:	e8 d7 e7 ff ff       	call   3520 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    4d49:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4d4c:	89 c3                	mov    %eax,%ebx
    4d4e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d52:	48 89 c7             	mov    %rax,%rdi
    4d55:	e8 fe 0c 00 00       	call   5a58 <_ZNSaI16VkPresentModeKHREC1Ev>
    4d5a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d62:	48 89 de             	mov    %rbx,%rsi
    4d65:	48 89 c7             	mov    %rax,%rdi
    4d68:	e8 23 0d 00 00       	call   5a90 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    4d6d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d71:	48 89 c7             	mov    %rax,%rdi
    4d74:	e8 fb 0c 00 00       	call   5a74 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    4d79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d7d:	48 89 c7             	mov    %rax,%rdi
    4d80:	e8 c5 0d 00 00       	call   5b4a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    4d85:	48 89 c1             	mov    %rax,%rcx
    4d88:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4d8c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4d90:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d94:	48 89 c7             	mov    %rax,%rdi
    4d97:	e8 74 e6 ff ff       	call   3410 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    4d9c:	85 c0                	test   %eax,%eax
    4d9e:	0f 95 c0             	setne  %al
    4da1:	84 c0                	test   %al,%al
    4da3:	0f 84 95 00 00 00    	je     4e3e <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    4da9:	bf 10 00 00 00       	mov    $0x10,%edi
    4dae:	e8 7d e3 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    4db3:	48 89 c3             	mov    %rax,%rbx
    4db6:	48 8d 05 93 cb 00 00 	lea    0xcb93(%rip),%rax        # 11950 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    4dbd:	48 89 c6             	mov    %rax,%rsi
    4dc0:	48 89 df             	mov    %rbx,%rdi
    4dc3:	e8 18 e3 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4dc8:	48 8b 05 d9 71 01 00 	mov    0x171d9(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4dcf:	48 89 c2             	mov    %rax,%rdx
    4dd2:	48 8d 05 67 6f 01 00 	lea    0x16f67(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4dd9:	48 89 c6             	mov    %rax,%rsi
    4ddc:	48 89 df             	mov    %rbx,%rdi
    4ddf:	e8 3c e7 ff ff       	call   3520 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    4de4:	49 89 c4             	mov    %rax,%r12
    4de7:	48 89 df             	mov    %rbx,%rdi
    4dea:	e8 e1 e3 ff ff       	call   31d0 <__cxa_free_exception@plt>
    4def:	4c 89 e0             	mov    %r12,%rax
    4df2:	48 89 c7             	mov    %rax,%rdi
    4df5:	e8 76 e7 ff ff       	call   3570 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    4dfa:	48 89 c3             	mov    %rax,%rbx
    4dfd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4e01:	48 89 c7             	mov    %rax,%rdi
    4e04:	e8 6b 0c 00 00       	call   5a74 <_ZNSaI16VkPresentModeKHRED1Ev>
    4e09:	48 89 d8             	mov    %rbx,%rax
    4e0c:	48 89 c7             	mov    %rax,%rdi
    4e0f:	e8 5c e7 ff ff       	call   3570 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    4e14:	49 89 c4             	mov    %rax,%r12
    4e17:	48 89 df             	mov    %rbx,%rdi
    4e1a:	e8 b1 e3 ff ff       	call   31d0 <__cxa_free_exception@plt>
    4e1f:	4c 89 e3             	mov    %r12,%rbx
    4e22:	eb 03                	jmp    4e27 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    4e24:	48 89 c3             	mov    %rax,%rbx
    4e27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e2b:	48 89 c7             	mov    %rax,%rdi
    4e2e:	e8 d3 0c 00 00       	call   5b06 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    4e33:	48 89 d8             	mov    %rbx,%rax
    4e36:	48 89 c7             	mov    %rax,%rdi
    4e39:	e8 32 e7 ff ff       	call   3570 <_Unwind_Resume@plt>
  return presentModes;
    4e3e:	90                   	nop
}
    4e3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e43:	48 83 c4 30          	add    $0x30,%rsp
    4e47:	5b                   	pop    %rbx
    4e48:	41 5c                	pop    %r12
    4e4a:	5d                   	pop    %rbp
    4e4b:	c3                   	ret

0000000000004e4c <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4e4c:	55                   	push   %rbp
    4e4d:	48 89 e5             	mov    %rsp,%rbp
    4e50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e5c:	5d                   	pop    %rbp
    4e5d:	c3                   	ret

0000000000004e5e <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e5e:	55                   	push   %rbp
    4e5f:	48 89 e5             	mov    %rsp,%rbp
    4e62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e6a:	5d                   	pop    %rbp
    4e6b:	c3                   	ret

0000000000004e6c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4e6c:	55                   	push   %rbp
    4e6d:	48 89 e5             	mov    %rsp,%rbp
    4e70:	48 83 ec 10          	sub    $0x10,%rsp
    4e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e7c:	48 89 c7             	mov    %rax,%rdi
    4e7f:	e8 e4 00 00 00       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
    4e84:	90                   	nop
    4e85:	c9                   	leave
    4e86:	c3                   	ret
    4e87:	90                   	nop

0000000000004e88 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    4e88:	55                   	push   %rbp
    4e89:	48 89 e5             	mov    %rsp,%rbp
    4e8c:	48 83 ec 10          	sub    $0x10,%rsp
    4e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e98:	48 89 c7             	mov    %rax,%rdi
    4e9b:	e8 36 02 00 00       	call   50d6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    4ea0:	90                   	nop
    4ea1:	c9                   	leave
    4ea2:	c3                   	ret
    4ea3:	90                   	nop

0000000000004ea4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    4ea4:	55                   	push   %rbp
    4ea5:	48 89 e5             	mov    %rsp,%rbp
    4ea8:	48 83 ec 10          	sub    $0x10,%rsp
    4eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb4:	48 89 c7             	mov    %rax,%rdi
    4eb7:	e8 88 03 00 00       	call   5244 <_ZNSaIPKcED1Ev>
    4ebc:	90                   	nop
    4ebd:	c9                   	leave
    4ebe:	c3                   	ret
    4ebf:	90                   	nop

0000000000004ec0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    4ec0:	55                   	push   %rbp
    4ec1:	48 89 e5             	mov    %rsp,%rbp
    4ec4:	48 83 ec 10          	sub    $0x10,%rsp
    4ec8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ed0:	48 89 c7             	mov    %rax,%rdi
    4ed3:	e8 88 04 00 00       	call   5360 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4ed8:	90                   	nop
    4ed9:	c9                   	leave
    4eda:	c3                   	ret
    4edb:	90                   	nop

0000000000004edc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    4edc:	55                   	push   %rbp
    4edd:	48 89 e5             	mov    %rsp,%rbp
    4ee0:	48 83 ec 10          	sub    $0x10,%rsp
    4ee4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ee8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eec:	48 89 c7             	mov    %rax,%rdi
    4eef:	e8 d0 05 00 00       	call   54c4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    4ef4:	90                   	nop
    4ef5:	c9                   	leave
    4ef6:	c3                   	ret
    4ef7:	90                   	nop

0000000000004ef8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    4ef8:	55                   	push   %rbp
    4ef9:	48 89 e5             	mov    %rsp,%rbp
    4efc:	48 83 ec 10          	sub    $0x10,%rsp
    4f00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f08:	48 89 c7             	mov    %rax,%rdi
    4f0b:	e8 50 07 00 00       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    4f10:	90                   	nop
    4f11:	c9                   	leave
    4f12:	c3                   	ret
    4f13:	90                   	nop

0000000000004f14 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    4f14:	55                   	push   %rbp
    4f15:	48 89 e5             	mov    %rsp,%rbp
    4f18:	48 83 ec 10          	sub    $0x10,%rsp
    4f1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f24:	48 89 c7             	mov    %rax,%rdi
    4f27:	e8 e4 09 00 00       	call   5910 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    4f2c:	90                   	nop
    4f2d:	c9                   	leave
    4f2e:	c3                   	ret
    4f2f:	90                   	nop

0000000000004f30 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    4f30:	55                   	push   %rbp
    4f31:	48 89 e5             	mov    %rsp,%rbp
    4f34:	48 83 ec 10          	sub    $0x10,%rsp
    4f38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f40:	48 89 c7             	mov    %rax,%rdi
    4f43:	e8 2c 0b 00 00       	call   5a74 <_ZNSaI16VkPresentModeKHRED1Ev>
    4f48:	90                   	nop
    4f49:	c9                   	leave
    4f4a:	c3                   	ret
    4f4b:	90                   	nop

0000000000004f4c <_ZNSaI17VkLayerPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4f4c:	55                   	push   %rbp
    4f4d:	48 89 e5             	mov    %rsp,%rbp
    4f50:	48 83 ec 10          	sub    $0x10,%rsp
    4f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5c:	48 89 c7             	mov    %rax,%rdi
    4f5f:	e8 58 0c 00 00       	call   5bbc <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    4f64:	90                   	nop
    4f65:	c9                   	leave
    4f66:	c3                   	ret
    4f67:	90                   	nop

0000000000004f68 <_ZNSaI17VkLayerPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4f68:	55                   	push   %rbp
    4f69:	48 89 e5             	mov    %rsp,%rbp
    4f6c:	48 83 ec 10          	sub    $0x10,%rsp
    4f70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f78:	48 89 c7             	mov    %rax,%rdi
    4f7b:	e8 48 0c 00 00       	call   5bc8 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    4f80:	90                   	nop
    4f81:	c9                   	leave
    4f82:	c3                   	ret
    4f83:	90                   	nop

0000000000004f84 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4f84:	55                   	push   %rbp
    4f85:	48 89 e5             	mov    %rsp,%rbp
    4f88:	53                   	push   %rbx
    4f89:	48 83 ec 28          	sub    $0x28,%rsp
    4f8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4f95:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4f99:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4f9d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4fa1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4fa5:	48 89 d6             	mov    %rdx,%rsi
    4fa8:	48 89 c7             	mov    %rax,%rdi
    4fab:	e8 23 0c 00 00       	call   5bd3 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4fb0:	48 89 c1             	mov    %rax,%rcx
    4fb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fb7:	48 89 c2             	mov    %rax,%rdx
    4fba:	48 89 ce             	mov    %rcx,%rsi
    4fbd:	48 89 df             	mov    %rbx,%rdi
    4fc0:	e8 6f 0c 00 00       	call   5c34 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4fc5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4fc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fcd:	48 89 d6             	mov    %rdx,%rsi
    4fd0:	48 89 c7             	mov    %rax,%rdi
    4fd3:	e8 ba 0c 00 00       	call   5c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    4fd8:	eb 1a                	jmp    4ff4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4fda:	48 89 c3             	mov    %rax,%rbx
    4fdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fe1:	48 89 c7             	mov    %rax,%rdi
    4fe4:	e8 79 00 00 00       	call   5062 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    4fe9:	48 89 d8             	mov    %rbx,%rax
    4fec:	48 89 c7             	mov    %rax,%rdi
    4fef:	e8 7c e5 ff ff       	call   3570 <_Unwind_Resume@plt>
    4ff4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ff8:	c9                   	leave
    4ff9:	c3                   	ret

0000000000004ffa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4ffa:	55                   	push   %rbp
    4ffb:	48 89 e5             	mov    %rsp,%rbp
    4ffe:	48 83 ec 10          	sub    $0x10,%rsp
    5002:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    5006:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    500a:	48 89 c7             	mov    %rax,%rdi
    500d:	e8 c0 0c 00 00       	call   5cd2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5012:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5019:	48 8b 48 08          	mov    0x8(%rax),%rcx
    501d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5021:	48 8b 00             	mov    (%rax),%rax
    5024:	48 89 ce             	mov    %rcx,%rsi
    5027:	48 89 c7             	mov    %rax,%rdi
    502a:	e8 b1 0c 00 00       	call   5ce0 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    502f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5033:	48 89 c7             	mov    %rax,%rdi
    5036:	e8 27 00 00 00       	call   5062 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    503b:	90                   	nop
    503c:	c9                   	leave
    503d:	c3                   	ret

000000000000503e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    503e:	55                   	push   %rbp
    503f:	48 89 e5             	mov    %rsp,%rbp
    5042:	48 83 ec 10          	sub    $0x10,%rsp
    5046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    504a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    504e:	48 8b 10             	mov    (%rax),%rdx
    5051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5055:	48 89 d6             	mov    %rdx,%rsi
    5058:	48 89 c7             	mov    %rax,%rdi
    505b:	e8 aa 0c 00 00       	call   5d0a <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    5060:	c9                   	leave
    5061:	c3                   	ret

0000000000005062 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5062:	55                   	push   %rbp
    5063:	48 89 e5             	mov    %rsp,%rbp
    5066:	48 83 ec 10          	sub    $0x10,%rsp
    506a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    506e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5072:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    507a:	48 8b 00             	mov    (%rax),%rax
    507d:	48 29 c2             	sub    %rax,%rdx
    5080:	48 c1 fa 03          	sar    $0x3,%rdx
    5084:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    508b:	fc c0 0f 
    508e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5092:	48 89 c2             	mov    %rax,%rdx
    5095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5099:	48 8b 08             	mov    (%rax),%rcx
    509c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50a0:	48 89 ce             	mov    %rcx,%rsi
    50a3:	48 89 c7             	mov    %rax,%rdi
    50a6:	e8 97 0c 00 00       	call   5d42 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    50ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50af:	48 89 c7             	mov    %rax,%rdi
    50b2:	e8 b5 fd ff ff       	call   4e6c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    50b7:	90                   	nop
    50b8:	c9                   	leave
    50b9:	c3                   	ret

00000000000050ba <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    50ba:	55                   	push   %rbp
    50bb:	48 89 e5             	mov    %rsp,%rbp
    50be:	48 83 ec 10          	sub    $0x10,%rsp
    50c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ca:	48 89 c7             	mov    %rax,%rdi
    50cd:	e8 a6 0c 00 00       	call   5d78 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    50d2:	90                   	nop
    50d3:	c9                   	leave
    50d4:	c3                   	ret
    50d5:	90                   	nop

00000000000050d6 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    50d6:	55                   	push   %rbp
    50d7:	48 89 e5             	mov    %rsp,%rbp
    50da:	48 83 ec 10          	sub    $0x10,%rsp
    50de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e6:	48 89 c7             	mov    %rax,%rdi
    50e9:	e8 96 0c 00 00       	call   5d84 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    50ee:	90                   	nop
    50ef:	c9                   	leave
    50f0:	c3                   	ret
    50f1:	90                   	nop

00000000000050f2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    50f2:	55                   	push   %rbp
    50f3:	48 89 e5             	mov    %rsp,%rbp
    50f6:	53                   	push   %rbx
    50f7:	48 83 ec 28          	sub    $0x28,%rsp
    50fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    50ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5103:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5107:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    510b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    510f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5113:	48 89 d6             	mov    %rdx,%rsi
    5116:	48 89 c7             	mov    %rax,%rdi
    5119:	e8 71 0c 00 00       	call   5d8f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    511e:	48 89 c1             	mov    %rax,%rcx
    5121:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5125:	48 89 c2             	mov    %rax,%rdx
    5128:	48 89 ce             	mov    %rcx,%rsi
    512b:	48 89 df             	mov    %rbx,%rdi
    512e:	e8 bd 0c 00 00       	call   5df0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    5133:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    513b:	48 89 d6             	mov    %rdx,%rsi
    513e:	48 89 c7             	mov    %rax,%rdi
    5141:	e8 08 0d 00 00       	call   5e4e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    5146:	eb 1a                	jmp    5162 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    5148:	48 89 c3             	mov    %rax,%rbx
    514b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    514f:	48 89 c7             	mov    %rax,%rdi
    5152:	e8 79 00 00 00       	call   51d0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    5157:	48 89 d8             	mov    %rbx,%rax
    515a:	48 89 c7             	mov    %rax,%rdi
    515d:	e8 0e e4 ff ff       	call   3570 <_Unwind_Resume@plt>
    5162:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5166:	c9                   	leave
    5167:	c3                   	ret

0000000000005168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5168:	55                   	push   %rbp
    5169:	48 89 e5             	mov    %rsp,%rbp
    516c:	48 83 ec 10          	sub    $0x10,%rsp
    5170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5178:	48 89 c7             	mov    %rax,%rdi
    517b:	e8 0e 0d 00 00       	call   5e8e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5180:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5187:	48 8b 48 08          	mov    0x8(%rax),%rcx
    518b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    518f:	48 8b 00             	mov    (%rax),%rax
    5192:	48 89 ce             	mov    %rcx,%rsi
    5195:	48 89 c7             	mov    %rax,%rdi
    5198:	e8 ff 0c 00 00       	call   5e9c <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    519d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a1:	48 89 c7             	mov    %rax,%rdi
    51a4:	e8 27 00 00 00       	call   51d0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    51a9:	90                   	nop
    51aa:	c9                   	leave
    51ab:	c3                   	ret

00000000000051ac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    51ac:	55                   	push   %rbp
    51ad:	48 89 e5             	mov    %rsp,%rbp
    51b0:	48 83 ec 10          	sub    $0x10,%rsp
    51b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    51b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51bc:	48 8b 10             	mov    (%rax),%rdx
    51bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51c3:	48 89 d6             	mov    %rdx,%rsi
    51c6:	48 89 c7             	mov    %rax,%rdi
    51c9:	e8 f8 0c 00 00       	call   5ec6 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    51ce:	c9                   	leave
    51cf:	c3                   	ret

00000000000051d0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    51d0:	55                   	push   %rbp
    51d1:	48 89 e5             	mov    %rsp,%rbp
    51d4:	48 83 ec 10          	sub    $0x10,%rsp
    51d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    51dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51e0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    51e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51e8:	48 8b 00             	mov    (%rax),%rax
    51eb:	48 29 c2             	sub    %rax,%rdx
    51ee:	48 c1 fa 02          	sar    $0x2,%rdx
    51f2:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    51f9:	fc c0 0f 
    51fc:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5200:	48 89 c2             	mov    %rax,%rdx
    5203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5207:	48 8b 08             	mov    (%rax),%rcx
    520a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    520e:	48 89 ce             	mov    %rcx,%rsi
    5211:	48 89 c7             	mov    %rax,%rdi
    5214:	e8 e5 0c 00 00       	call   5efe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    5219:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    521d:	48 89 c7             	mov    %rax,%rdi
    5220:	e8 63 fc ff ff       	call   4e88 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5225:	90                   	nop
    5226:	c9                   	leave
    5227:	c3                   	ret

0000000000005228 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5228:	55                   	push   %rbp
    5229:	48 89 e5             	mov    %rsp,%rbp
    522c:	48 83 ec 10          	sub    $0x10,%rsp
    5230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5238:	48 89 c7             	mov    %rax,%rdi
    523b:	e8 f4 0c 00 00       	call   5f34 <_ZNSt15__new_allocatorIPKcEC1Ev>
    5240:	90                   	nop
    5241:	c9                   	leave
    5242:	c3                   	ret
    5243:	90                   	nop

0000000000005244 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5244:	55                   	push   %rbp
    5245:	48 89 e5             	mov    %rsp,%rbp
    5248:	48 83 ec 10          	sub    $0x10,%rsp
    524c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5254:	48 89 c7             	mov    %rax,%rdi
    5257:	e8 e4 0c 00 00       	call   5f40 <_ZNSt15__new_allocatorIPKcED1Ev>
    525c:	90                   	nop
    525d:	c9                   	leave
    525e:	c3                   	ret
    525f:	90                   	nop

0000000000005260 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5260:	55                   	push   %rbp
    5261:	48 89 e5             	mov    %rsp,%rbp
    5264:	53                   	push   %rbx
    5265:	48 83 ec 28          	sub    $0x28,%rsp
    5269:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    526d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5271:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5275:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5279:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    527d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5281:	48 89 d6             	mov    %rdx,%rsi
    5284:	48 89 c7             	mov    %rax,%rdi
    5287:	e8 bf 0c 00 00       	call   5f4b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    528c:	48 89 c1             	mov    %rax,%rcx
    528f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5293:	48 89 c2             	mov    %rax,%rdx
    5296:	48 89 ce             	mov    %rcx,%rsi
    5299:	48 89 df             	mov    %rbx,%rdi
    529c:	e8 0b 0d 00 00       	call   5fac <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    52a1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    52a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52a9:	48 89 d6             	mov    %rdx,%rsi
    52ac:	48 89 c7             	mov    %rax,%rdi
    52af:	e8 56 0d 00 00       	call   600a <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    52b4:	eb 1a                	jmp    52d0 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    52b6:	48 89 c3             	mov    %rax,%rbx
    52b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52bd:	48 89 c7             	mov    %rax,%rdi
    52c0:	e8 31 00 00 00       	call   52f6 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    52c5:	48 89 d8             	mov    %rbx,%rax
    52c8:	48 89 c7             	mov    %rax,%rdi
    52cb:	e8 a0 e2 ff ff       	call   3570 <_Unwind_Resume@plt>
    52d0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52d4:	c9                   	leave
    52d5:	c3                   	ret

00000000000052d6 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    52d6:	55                   	push   %rbp
    52d7:	48 89 e5             	mov    %rsp,%rbp
    52da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    52e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e6:	48 8b 00             	mov    (%rax),%rax
    52e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52ed:	48 c1 e2 03          	shl    $0x3,%rdx
    52f1:	48 01 d0             	add    %rdx,%rax
      }
    52f4:	5d                   	pop    %rbp
    52f5:	c3                   	ret

00000000000052f6 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    52f6:	55                   	push   %rbp
    52f7:	48 89 e5             	mov    %rsp,%rbp
    52fa:	48 83 ec 10          	sub    $0x10,%rsp
    52fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5306:	48 8b 50 10          	mov    0x10(%rax),%rdx
    530a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    530e:	48 8b 00             	mov    (%rax),%rax
    5311:	48 29 c2             	sub    %rax,%rdx
    5314:	48 89 d0             	mov    %rdx,%rax
    5317:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    531b:	48 89 c2             	mov    %rax,%rdx
    531e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5322:	48 8b 08             	mov    (%rax),%rcx
    5325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5329:	48 89 ce             	mov    %rcx,%rsi
    532c:	48 89 c7             	mov    %rax,%rdi
    532f:	e8 4a 0d 00 00       	call   607e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    5334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5338:	48 89 c7             	mov    %rax,%rdi
    533b:	e8 64 fb ff ff       	call   4ea4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    5340:	90                   	nop
    5341:	c9                   	leave
    5342:	c3                   	ret
    5343:	90                   	nop

0000000000005344 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5344:	55                   	push   %rbp
    5345:	48 89 e5             	mov    %rsp,%rbp
    5348:	48 83 ec 10          	sub    $0x10,%rsp
    534c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5354:	48 89 c7             	mov    %rax,%rdi
    5357:	e8 58 0d 00 00       	call   60b4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    535c:	90                   	nop
    535d:	c9                   	leave
    535e:	c3                   	ret
    535f:	90                   	nop

0000000000005360 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5360:	55                   	push   %rbp
    5361:	48 89 e5             	mov    %rsp,%rbp
    5364:	48 83 ec 10          	sub    $0x10,%rsp
    5368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    536c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5370:	48 89 c7             	mov    %rax,%rdi
    5373:	e8 48 0d 00 00       	call   60c0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    5378:	90                   	nop
    5379:	c9                   	leave
    537a:	c3                   	ret
    537b:	90                   	nop

000000000000537c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    537c:	55                   	push   %rbp
    537d:	48 89 e5             	mov    %rsp,%rbp
    5380:	53                   	push   %rbx
    5381:	48 83 ec 28          	sub    $0x28,%rsp
    5385:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5389:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    538d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5391:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5395:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5399:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    539d:	48 89 d6             	mov    %rdx,%rsi
    53a0:	48 89 c7             	mov    %rax,%rdi
    53a3:	e8 23 0d 00 00       	call   60cb <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    53a8:	48 89 c1             	mov    %rax,%rcx
    53ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53af:	48 89 c2             	mov    %rax,%rdx
    53b2:	48 89 ce             	mov    %rcx,%rsi
    53b5:	48 89 df             	mov    %rbx,%rdi
    53b8:	e8 6f 0d 00 00       	call   612c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    53bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    53c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53c5:	48 89 d6             	mov    %rdx,%rsi
    53c8:	48 89 c7             	mov    %rax,%rdi
    53cb:	e8 ba 0d 00 00       	call   618a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    53d0:	eb 1a                	jmp    53ec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    53d2:	48 89 c3             	mov    %rax,%rbx
    53d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53d9:	48 89 c7             	mov    %rax,%rdi
    53dc:	e8 79 00 00 00       	call   545a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    53e1:	48 89 d8             	mov    %rbx,%rax
    53e4:	48 89 c7             	mov    %rax,%rdi
    53e7:	e8 84 e1 ff ff       	call   3570 <_Unwind_Resume@plt>
    53ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    53f0:	c9                   	leave
    53f1:	c3                   	ret

00000000000053f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    53f2:	55                   	push   %rbp
    53f3:	48 89 e5             	mov    %rsp,%rbp
    53f6:	48 83 ec 10          	sub    $0x10,%rsp
    53fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    53fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5402:	48 89 c7             	mov    %rax,%rdi
    5405:	e8 c0 0d 00 00       	call   61ca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    540a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    540d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5411:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5415:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5419:	48 8b 00             	mov    (%rax),%rax
    541c:	48 89 ce             	mov    %rcx,%rsi
    541f:	48 89 c7             	mov    %rax,%rdi
    5422:	e8 b1 0d 00 00       	call   61d8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    5427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    542b:	48 89 c7             	mov    %rax,%rdi
    542e:	e8 27 00 00 00       	call   545a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5433:	90                   	nop
    5434:	c9                   	leave
    5435:	c3                   	ret

0000000000005436 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5436:	55                   	push   %rbp
    5437:	48 89 e5             	mov    %rsp,%rbp
    543a:	48 83 ec 10          	sub    $0x10,%rsp
    543e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5446:	48 8b 10             	mov    (%rax),%rdx
    5449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    544d:	48 89 d6             	mov    %rdx,%rsi
    5450:	48 89 c7             	mov    %rax,%rdi
    5453:	e8 aa 0d 00 00       	call   6202 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    5458:	c9                   	leave
    5459:	c3                   	ret

000000000000545a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    545a:	55                   	push   %rbp
    545b:	48 89 e5             	mov    %rsp,%rbp
    545e:	48 83 ec 10          	sub    $0x10,%rsp
    5462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    546a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    546e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5472:	48 8b 00             	mov    (%rax),%rax
    5475:	48 29 c2             	sub    %rax,%rdx
    5478:	48 89 d0             	mov    %rdx,%rax
    547b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    547f:	48 89 c2             	mov    %rax,%rdx
    5482:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5486:	48 8b 08             	mov    (%rax),%rcx
    5489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548d:	48 89 ce             	mov    %rcx,%rsi
    5490:	48 89 c7             	mov    %rax,%rdi
    5493:	e8 a2 0d 00 00       	call   623a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    5498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    549c:	48 89 c7             	mov    %rax,%rdi
    549f:	e8 1c fa ff ff       	call   4ec0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    54a4:	90                   	nop
    54a5:	c9                   	leave
    54a6:	c3                   	ret
    54a7:	90                   	nop

00000000000054a8 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    54a8:	55                   	push   %rbp
    54a9:	48 89 e5             	mov    %rsp,%rbp
    54ac:	48 83 ec 10          	sub    $0x10,%rsp
    54b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54b8:	48 89 c7             	mov    %rax,%rdi
    54bb:	e8 b0 0d 00 00       	call   6270 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    54c0:	90                   	nop
    54c1:	c9                   	leave
    54c2:	c3                   	ret
    54c3:	90                   	nop

00000000000054c4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    54c4:	55                   	push   %rbp
    54c5:	48 89 e5             	mov    %rsp,%rbp
    54c8:	48 83 ec 10          	sub    $0x10,%rsp
    54cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d4:	48 89 c7             	mov    %rax,%rdi
    54d7:	e8 a0 0d 00 00       	call   627c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    54dc:	90                   	nop
    54dd:	c9                   	leave
    54de:	c3                   	ret
    54df:	90                   	nop

00000000000054e0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    54e0:	55                   	push   %rbp
    54e1:	48 89 e5             	mov    %rsp,%rbp
    54e4:	53                   	push   %rbx
    54e5:	48 83 ec 28          	sub    $0x28,%rsp
    54e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    54ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    54f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    54f5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    54f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    54fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5501:	48 89 d6             	mov    %rdx,%rsi
    5504:	48 89 c7             	mov    %rax,%rdi
    5507:	e8 7b 0d 00 00       	call   6287 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    550c:	48 89 c1             	mov    %rax,%rcx
    550f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5513:	48 89 c2             	mov    %rax,%rdx
    5516:	48 89 ce             	mov    %rcx,%rsi
    5519:	48 89 df             	mov    %rbx,%rdi
    551c:	e8 c7 0d 00 00       	call   62e8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    5521:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5525:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5529:	48 89 d6             	mov    %rdx,%rsi
    552c:	48 89 c7             	mov    %rax,%rdi
    552f:	e8 12 0e 00 00       	call   6346 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    5534:	eb 1a                	jmp    5550 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    5536:	48 89 c3             	mov    %rax,%rbx
    5539:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    553d:	48 89 c7             	mov    %rax,%rdi
    5540:	e8 79 00 00 00       	call   55be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    5545:	48 89 d8             	mov    %rbx,%rax
    5548:	48 89 c7             	mov    %rax,%rdi
    554b:	e8 20 e0 ff ff       	call   3570 <_Unwind_Resume@plt>
    5550:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5554:	c9                   	leave
    5555:	c3                   	ret

0000000000005556 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5556:	55                   	push   %rbp
    5557:	48 89 e5             	mov    %rsp,%rbp
    555a:	48 83 ec 10          	sub    $0x10,%rsp
    555e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5566:	48 89 c7             	mov    %rax,%rdi
    5569:	e8 18 0e 00 00       	call   6386 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    556e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5575:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    557d:	48 8b 00             	mov    (%rax),%rax
    5580:	48 89 ce             	mov    %rcx,%rsi
    5583:	48 89 c7             	mov    %rax,%rdi
    5586:	e8 09 0e 00 00       	call   6394 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    558b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    558f:	48 89 c7             	mov    %rax,%rdi
    5592:	e8 27 00 00 00       	call   55be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    5597:	90                   	nop
    5598:	c9                   	leave
    5599:	c3                   	ret

000000000000559a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    559a:	55                   	push   %rbp
    559b:	48 89 e5             	mov    %rsp,%rbp
    559e:	48 83 ec 10          	sub    $0x10,%rsp
    55a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    55a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55aa:	48 8b 10             	mov    (%rax),%rdx
    55ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55b1:	48 89 d6             	mov    %rdx,%rsi
    55b4:	48 89 c7             	mov    %rax,%rdi
    55b7:	e8 02 0e 00 00       	call   63be <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    55bc:	c9                   	leave
    55bd:	c3                   	ret

00000000000055be <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    55be:	55                   	push   %rbp
    55bf:	48 89 e5             	mov    %rsp,%rbp
    55c2:	48 83 ec 10          	sub    $0x10,%rsp
    55c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    55ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ce:	48 8b 50 10          	mov    0x10(%rax),%rdx
    55d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d6:	48 8b 00             	mov    (%rax),%rax
    55d9:	48 29 c2             	sub    %rax,%rdx
    55dc:	48 c1 fa 03          	sar    $0x3,%rdx
    55e0:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    55e7:	aa aa aa 
    55ea:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    55ee:	48 89 c2             	mov    %rax,%rdx
    55f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55f5:	48 8b 08             	mov    (%rax),%rcx
    55f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fc:	48 89 ce             	mov    %rcx,%rsi
    55ff:	48 89 c7             	mov    %rax,%rdi
    5602:	e8 ef 0d 00 00       	call   63f6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    5607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    560b:	48 89 c7             	mov    %rax,%rdi
    560e:	e8 c9 f8 ff ff       	call   4edc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    5613:	90                   	nop
    5614:	c9                   	leave
    5615:	c3                   	ret

0000000000005616 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5616:	55                   	push   %rbp
    5617:	48 89 e5             	mov    %rsp,%rbp
    561a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    561e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5622:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    562a:	48 8b 00             	mov    (%rax),%rax
    562d:	48 29 c2             	sub    %rax,%rdx
    5630:	48 c1 fa 03          	sar    $0x3,%rdx
    5634:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    563b:	aa aa aa 
    563e:	48 0f af c2          	imul   %rdx,%rax
    5642:	5d                   	pop    %rbp
    5643:	c3                   	ret

0000000000005644 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5644:	55                   	push   %rbp
    5645:	48 89 e5             	mov    %rsp,%rbp
    5648:	48 83 ec 10          	sub    $0x10,%rsp
    564c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5654:	48 89 c7             	mov    %rax,%rdi
    5657:	e8 d0 0d 00 00       	call   642c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    565c:	90                   	nop
    565d:	c9                   	leave
    565e:	c3                   	ret
    565f:	90                   	nop

0000000000005660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5660:	55                   	push   %rbp
    5661:	48 89 e5             	mov    %rsp,%rbp
    5664:	48 83 ec 10          	sub    $0x10,%rsp
    5668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    566c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5670:	48 89 c7             	mov    %rax,%rdi
    5673:	e8 c0 0d 00 00       	call   6438 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    5678:	90                   	nop
    5679:	c9                   	leave
    567a:	c3                   	ret
    567b:	90                   	nop

000000000000567c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    567c:	55                   	push   %rbp
    567d:	48 89 e5             	mov    %rsp,%rbp
    5680:	53                   	push   %rbx
    5681:	48 83 ec 28          	sub    $0x28,%rsp
    5685:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5689:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    568d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5691:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5695:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5699:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    569d:	48 89 d6             	mov    %rdx,%rsi
    56a0:	48 89 c7             	mov    %rax,%rdi
    56a3:	e8 9b 0d 00 00       	call   6443 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    56a8:	48 89 c1             	mov    %rax,%rcx
    56ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56af:	48 89 c2             	mov    %rax,%rdx
    56b2:	48 89 ce             	mov    %rcx,%rsi
    56b5:	48 89 df             	mov    %rbx,%rdi
    56b8:	e8 e7 0d 00 00       	call   64a4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    56bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    56c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56c5:	48 89 d6             	mov    %rdx,%rsi
    56c8:	48 89 c7             	mov    %rax,%rdi
    56cb:	e8 32 0e 00 00       	call   6502 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    56d0:	eb 1a                	jmp    56ec <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    56d2:	48 89 c3             	mov    %rax,%rbx
    56d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56d9:	48 89 c7             	mov    %rax,%rdi
    56dc:	e8 bb 01 00 00       	call   589c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    56e1:	48 89 d8             	mov    %rbx,%rax
    56e4:	48 89 c7             	mov    %rax,%rdi
    56e7:	e8 84 de ff ff       	call   3570 <_Unwind_Resume@plt>
    56ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    56f0:	c9                   	leave
    56f1:	c3                   	ret

00000000000056f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    56f2:	55                   	push   %rbp
    56f3:	48 89 e5             	mov    %rsp,%rbp
    56f6:	48 83 ec 10          	sub    $0x10,%rsp
    56fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    56fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5702:	48 89 c7             	mov    %rax,%rdi
    5705:	e8 38 0e 00 00       	call   6542 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    570a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    570d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5711:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5719:	48 8b 00             	mov    (%rax),%rax
    571c:	48 89 ce             	mov    %rcx,%rsi
    571f:	48 89 c7             	mov    %rax,%rdi
    5722:	e8 29 0e 00 00       	call   6550 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    5727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    572b:	48 89 c7             	mov    %rax,%rdi
    572e:	e8 69 01 00 00       	call   589c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    5733:	90                   	nop
    5734:	c9                   	leave
    5735:	c3                   	ret

0000000000005736 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    5736:	55                   	push   %rbp
    5737:	48 89 e5             	mov    %rsp,%rbp
    573a:	48 83 ec 20          	sub    $0x20,%rsp
    573e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    5742:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5746:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    574a:	48 89 d6             	mov    %rdx,%rsi
    574d:	48 89 c7             	mov    %rax,%rdi
    5750:	e8 25 0e 00 00       	call   657a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    5755:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5759:	c9                   	leave
    575a:	c3                   	ret
    575b:	90                   	nop

000000000000575c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    575c:	55                   	push   %rbp
    575d:	48 89 e5             	mov    %rsp,%rbp
    5760:	48 83 ec 20          	sub    $0x20,%rsp
    5764:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    5768:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    576c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5770:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5774:	48 89 d6             	mov    %rdx,%rsi
    5777:	48 89 c7             	mov    %rax,%rdi
    577a:	e8 fb 0d 00 00       	call   657a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    577f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5783:	c9                   	leave
    5784:	c3                   	ret

0000000000005785 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5785:	55                   	push   %rbp
    5786:	48 89 e5             	mov    %rsp,%rbp
    5789:	53                   	push   %rbx
    578a:	48 83 ec 18          	sub    $0x18,%rsp
    578e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5792:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    5796:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    579a:	48 89 c7             	mov    %rax,%rdi
    579d:	e8 f6 0d 00 00       	call   6598 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    57a2:	48 8b 18             	mov    (%rax),%rbx
    57a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    57a9:	48 89 c7             	mov    %rax,%rdi
    57ac:	e8 e7 0d 00 00       	call   6598 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    57b1:	48 8b 00             	mov    (%rax),%rax
    57b4:	48 39 c3             	cmp    %rax,%rbx
    57b7:	0f 95 c0             	setne  %al
    57ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    57be:	c9                   	leave
    57bf:	c3                   	ret

00000000000057c0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    57c0:	55                   	push   %rbp
    57c1:	48 89 e5             	mov    %rsp,%rbp
    57c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    57c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57cc:	48 8b 00             	mov    (%rax),%rax
    57cf:	48 8d 50 18          	lea    0x18(%rax),%rdx
    57d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57d7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    57da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    57de:	5d                   	pop    %rbp
    57df:	c3                   	ret

00000000000057e0 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    57e0:	55                   	push   %rbp
    57e1:	48 89 e5             	mov    %rsp,%rbp
    57e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    57e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ec:	48 8b 00             	mov    (%rax),%rax
    57ef:	5d                   	pop    %rbp
    57f0:	c3                   	ret
    57f1:	90                   	nop

00000000000057f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    57f2:	55                   	push   %rbp
    57f3:	48 89 e5             	mov    %rsp,%rbp
    57f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    57fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5802:	48 8b 08             	mov    (%rax),%rcx
    5805:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5809:	48 89 d0             	mov    %rdx,%rax
    580c:	48 c1 e0 03          	shl    $0x3,%rax
    5810:	48 29 d0             	sub    %rdx,%rax
    5813:	48 c1 e0 02          	shl    $0x2,%rax
    5817:	48 01 c8             	add    %rcx,%rax
      }
    581a:	5d                   	pop    %rbp
    581b:	c3                   	ret

000000000000581c <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    581c:	55                   	push   %rbp
    581d:	48 89 e5             	mov    %rsp,%rbp
    5820:	53                   	push   %rbx
    5821:	48 83 ec 18          	sub    $0x18,%rsp
    5825:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5829:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    582d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5831:	48 89 c7             	mov    %rax,%rdi
    5834:	e8 6d 0d 00 00       	call   65a6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    5839:	84 c0                	test   %al,%al
    583b:	74 36                	je     5873 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    583d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5841:	48 89 c7             	mov    %rax,%rdi
    5844:	e8 b3 0d 00 00       	call   65fc <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    5849:	48 89 c3             	mov    %rax,%rbx
    584c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5850:	48 89 c7             	mov    %rax,%rdi
    5853:	e8 60 0d 00 00       	call   65b8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    5858:	48 89 c1             	mov    %rax,%rcx
    585b:	48 8b 03             	mov    (%rbx),%rax
    585e:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5862:	48 89 01             	mov    %rax,(%rcx)
    5865:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    5869:	48 8b 43 10          	mov    0x10(%rbx),%rax
    586d:	48 89 41 10          	mov    %rax,0x10(%rcx)
    5871:	eb 1e                	jmp    5891 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    5873:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5877:	48 89 c7             	mov    %rax,%rdi
    587a:	e8 7d 0d 00 00       	call   65fc <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    587f:	48 89 c2             	mov    %rax,%rdx
    5882:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5886:	48 89 d6             	mov    %rdx,%rsi
    5889:	48 89 c7             	mov    %rax,%rdi
    588c:	e8 79 0d 00 00       	call   660a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    5891:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5895:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5899:	c9                   	leave
    589a:	c3                   	ret
    589b:	90                   	nop

000000000000589c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    589c:	55                   	push   %rbp
    589d:	48 89 e5             	mov    %rsp,%rbp
    58a0:	48 83 ec 10          	sub    $0x10,%rsp
    58a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    58a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ac:	48 8b 50 10          	mov    0x10(%rax),%rdx
    58b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58b4:	48 8b 00             	mov    (%rax),%rax
    58b7:	48 29 c2             	sub    %rax,%rdx
    58ba:	48 c1 fa 02          	sar    $0x2,%rdx
    58be:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    58c5:	db b6 6d 
    58c8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    58cc:	48 89 c2             	mov    %rax,%rdx
    58cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58d3:	48 8b 08             	mov    (%rax),%rcx
    58d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58da:	48 89 ce             	mov    %rcx,%rsi
    58dd:	48 89 c7             	mov    %rax,%rdi
    58e0:	e8 7f 0d 00 00       	call   6664 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    58e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58e9:	48 89 c7             	mov    %rax,%rdi
    58ec:	e8 07 f6 ff ff       	call   4ef8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    58f1:	90                   	nop
    58f2:	c9                   	leave
    58f3:	c3                   	ret

00000000000058f4 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    58f4:	55                   	push   %rbp
    58f5:	48 89 e5             	mov    %rsp,%rbp
    58f8:	48 83 ec 10          	sub    $0x10,%rsp
    58fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5904:	48 89 c7             	mov    %rax,%rdi
    5907:	e8 8e 0d 00 00       	call   669a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    590c:	90                   	nop
    590d:	c9                   	leave
    590e:	c3                   	ret
    590f:	90                   	nop

0000000000005910 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5910:	55                   	push   %rbp
    5911:	48 89 e5             	mov    %rsp,%rbp
    5914:	48 83 ec 10          	sub    $0x10,%rsp
    5918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    591c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5920:	48 89 c7             	mov    %rax,%rdi
    5923:	e8 7e 0d 00 00       	call   66a6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    5928:	90                   	nop
    5929:	c9                   	leave
    592a:	c3                   	ret
    592b:	90                   	nop

000000000000592c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    592c:	55                   	push   %rbp
    592d:	48 89 e5             	mov    %rsp,%rbp
    5930:	53                   	push   %rbx
    5931:	48 83 ec 28          	sub    $0x28,%rsp
    5935:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5939:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    593d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5941:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5945:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5949:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    594d:	48 89 d6             	mov    %rdx,%rsi
    5950:	48 89 c7             	mov    %rax,%rdi
    5953:	e8 59 0d 00 00       	call   66b1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    5958:	48 89 c1             	mov    %rax,%rcx
    595b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    595f:	48 89 c2             	mov    %rax,%rdx
    5962:	48 89 ce             	mov    %rcx,%rsi
    5965:	48 89 df             	mov    %rbx,%rdi
    5968:	e8 a5 0d 00 00       	call   6712 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    596d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5971:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5975:	48 89 d6             	mov    %rdx,%rsi
    5978:	48 89 c7             	mov    %rax,%rdi
    597b:	e8 f0 0d 00 00       	call   6770 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    5980:	eb 1a                	jmp    599c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    5982:	48 89 c3             	mov    %rax,%rbx
    5985:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5989:	48 89 c7             	mov    %rax,%rdi
    598c:	e8 79 00 00 00       	call   5a0a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    5991:	48 89 d8             	mov    %rbx,%rax
    5994:	48 89 c7             	mov    %rax,%rdi
    5997:	e8 d4 db ff ff       	call   3570 <_Unwind_Resume@plt>
    599c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    59a0:	c9                   	leave
    59a1:	c3                   	ret

00000000000059a2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    59a2:	55                   	push   %rbp
    59a3:	48 89 e5             	mov    %rsp,%rbp
    59a6:	48 83 ec 10          	sub    $0x10,%rsp
    59aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    59ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59b2:	48 89 c7             	mov    %rax,%rdi
    59b5:	e8 f6 0d 00 00       	call   67b0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    59ba:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    59bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    59c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c9:	48 8b 00             	mov    (%rax),%rax
    59cc:	48 89 ce             	mov    %rcx,%rsi
    59cf:	48 89 c7             	mov    %rax,%rdi
    59d2:	e8 e7 0d 00 00       	call   67be <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    59d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59db:	48 89 c7             	mov    %rax,%rdi
    59de:	e8 27 00 00 00       	call   5a0a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    59e3:	90                   	nop
    59e4:	c9                   	leave
    59e5:	c3                   	ret

00000000000059e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    59e6:	55                   	push   %rbp
    59e7:	48 89 e5             	mov    %rsp,%rbp
    59ea:	48 83 ec 10          	sub    $0x10,%rsp
    59ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    59f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59f6:	48 8b 10             	mov    (%rax),%rdx
    59f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59fd:	48 89 d6             	mov    %rdx,%rsi
    5a00:	48 89 c7             	mov    %rax,%rdi
    5a03:	e8 e0 0d 00 00       	call   67e8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    5a08:	c9                   	leave
    5a09:	c3                   	ret

0000000000005a0a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5a0a:	55                   	push   %rbp
    5a0b:	48 89 e5             	mov    %rsp,%rbp
    5a0e:	48 83 ec 10          	sub    $0x10,%rsp
    5a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5a16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a1a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a22:	48 8b 00             	mov    (%rax),%rax
    5a25:	48 29 c2             	sub    %rax,%rdx
    5a28:	48 89 d0             	mov    %rdx,%rax
    5a2b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    5a2f:	48 89 c2             	mov    %rax,%rdx
    5a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a36:	48 8b 08             	mov    (%rax),%rcx
    5a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a3d:	48 89 ce             	mov    %rcx,%rsi
    5a40:	48 89 c7             	mov    %rax,%rdi
    5a43:	e8 d8 0d 00 00       	call   6820 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    5a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a4c:	48 89 c7             	mov    %rax,%rdi
    5a4f:	e8 c0 f4 ff ff       	call   4f14 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    5a54:	90                   	nop
    5a55:	c9                   	leave
    5a56:	c3                   	ret
    5a57:	90                   	nop

0000000000005a58 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5a58:	55                   	push   %rbp
    5a59:	48 89 e5             	mov    %rsp,%rbp
    5a5c:	48 83 ec 10          	sub    $0x10,%rsp
    5a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a68:	48 89 c7             	mov    %rax,%rdi
    5a6b:	e8 e6 0d 00 00       	call   6856 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    5a70:	90                   	nop
    5a71:	c9                   	leave
    5a72:	c3                   	ret
    5a73:	90                   	nop

0000000000005a74 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5a74:	55                   	push   %rbp
    5a75:	48 89 e5             	mov    %rsp,%rbp
    5a78:	48 83 ec 10          	sub    $0x10,%rsp
    5a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a84:	48 89 c7             	mov    %rax,%rdi
    5a87:	e8 d6 0d 00 00       	call   6862 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    5a8c:	90                   	nop
    5a8d:	c9                   	leave
    5a8e:	c3                   	ret
    5a8f:	90                   	nop

0000000000005a90 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5a90:	55                   	push   %rbp
    5a91:	48 89 e5             	mov    %rsp,%rbp
    5a94:	53                   	push   %rbx
    5a95:	48 83 ec 28          	sub    $0x28,%rsp
    5a99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5a9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5aa1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5aa5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5aa9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5aad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5ab1:	48 89 d6             	mov    %rdx,%rsi
    5ab4:	48 89 c7             	mov    %rax,%rdi
    5ab7:	e8 b1 0d 00 00       	call   686d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    5abc:	48 89 c1             	mov    %rax,%rcx
    5abf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ac3:	48 89 c2             	mov    %rax,%rdx
    5ac6:	48 89 ce             	mov    %rcx,%rsi
    5ac9:	48 89 df             	mov    %rbx,%rdi
    5acc:	e8 fd 0d 00 00       	call   68ce <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    5ad1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ad9:	48 89 d6             	mov    %rdx,%rsi
    5adc:	48 89 c7             	mov    %rax,%rdi
    5adf:	e8 48 0e 00 00       	call   692c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    5ae4:	eb 1a                	jmp    5b00 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    5ae6:	48 89 c3             	mov    %rax,%rbx
    5ae9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5aed:	48 89 c7             	mov    %rax,%rdi
    5af0:	e8 79 00 00 00       	call   5b6e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    5af5:	48 89 d8             	mov    %rbx,%rax
    5af8:	48 89 c7             	mov    %rax,%rdi
    5afb:	e8 70 da ff ff       	call   3570 <_Unwind_Resume@plt>
    5b00:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b04:	c9                   	leave
    5b05:	c3                   	ret

0000000000005b06 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5b06:	55                   	push   %rbp
    5b07:	48 89 e5             	mov    %rsp,%rbp
    5b0a:	48 83 ec 10          	sub    $0x10,%rsp
    5b0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b16:	48 89 c7             	mov    %rax,%rdi
    5b19:	e8 4e 0e 00 00       	call   696c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    5b1e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5b21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b25:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5b29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b2d:	48 8b 00             	mov    (%rax),%rax
    5b30:	48 89 ce             	mov    %rcx,%rsi
    5b33:	48 89 c7             	mov    %rax,%rdi
    5b36:	e8 3f 0e 00 00       	call   697a <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    5b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b3f:	48 89 c7             	mov    %rax,%rdi
    5b42:	e8 27 00 00 00       	call   5b6e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    5b47:	90                   	nop
    5b48:	c9                   	leave
    5b49:	c3                   	ret

0000000000005b4a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5b4a:	55                   	push   %rbp
    5b4b:	48 89 e5             	mov    %rsp,%rbp
    5b4e:	48 83 ec 10          	sub    $0x10,%rsp
    5b52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b5a:	48 8b 10             	mov    (%rax),%rdx
    5b5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b61:	48 89 d6             	mov    %rdx,%rsi
    5b64:	48 89 c7             	mov    %rax,%rdi
    5b67:	e8 38 0e 00 00       	call   69a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    5b6c:	c9                   	leave
    5b6d:	c3                   	ret

0000000000005b6e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5b6e:	55                   	push   %rbp
    5b6f:	48 89 e5             	mov    %rsp,%rbp
    5b72:	48 83 ec 10          	sub    $0x10,%rsp
    5b76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b7e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b86:	48 8b 00             	mov    (%rax),%rax
    5b89:	48 29 c2             	sub    %rax,%rdx
    5b8c:	48 89 d0             	mov    %rdx,%rax
    5b8f:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    5b93:	48 89 c2             	mov    %rax,%rdx
    5b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b9a:	48 8b 08             	mov    (%rax),%rcx
    5b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba1:	48 89 ce             	mov    %rcx,%rsi
    5ba4:	48 89 c7             	mov    %rax,%rdi
    5ba7:	e8 30 0e 00 00       	call   69dc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    5bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bb0:	48 89 c7             	mov    %rax,%rdi
    5bb3:	e8 78 f3 ff ff       	call   4f30 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    5bb8:	90                   	nop
    5bb9:	c9                   	leave
    5bba:	c3                   	ret
    5bbb:	90                   	nop

0000000000005bbc <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5bbc:	55                   	push   %rbp
    5bbd:	48 89 e5             	mov    %rsp,%rbp
    5bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bc4:	90                   	nop
    5bc5:	5d                   	pop    %rbp
    5bc6:	c3                   	ret
    5bc7:	90                   	nop

0000000000005bc8 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5bc8:	55                   	push   %rbp
    5bc9:	48 89 e5             	mov    %rsp,%rbp
    5bcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bd0:	90                   	nop
    5bd1:	5d                   	pop    %rbp
    5bd2:	c3                   	ret

0000000000005bd3 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5bd3:	55                   	push   %rbp
    5bd4:	48 89 e5             	mov    %rsp,%rbp
    5bd7:	53                   	push   %rbx
    5bd8:	48 83 ec 28          	sub    $0x28,%rsp
    5bdc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5be0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5be4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5be8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5bec:	48 89 d6             	mov    %rdx,%rsi
    5bef:	48 89 c7             	mov    %rax,%rdi
    5bf2:	e8 25 01 00 00       	call   5d1c <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    5bf7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5bfb:	48 89 c7             	mov    %rax,%rdi
    5bfe:	e8 0e 0e 00 00       	call   6a11 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5c03:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5c07:	0f 92 c3             	setb   %bl
    5c0a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c0e:	48 89 c7             	mov    %rax,%rdi
    5c11:	e8 52 f3 ff ff       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
    5c16:	84 db                	test   %bl,%bl
    5c18:	74 0f                	je     5c29 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5c1a:	48 8d 05 5f bd 00 00 	lea    0xbd5f(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    5c21:	48 89 c7             	mov    %rax,%rdi
    5c24:	e8 17 d5 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    5c29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5c2d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c31:	c9                   	leave
    5c32:	c3                   	ret
    5c33:	90                   	nop

0000000000005c34 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5c34:	55                   	push   %rbp
    5c35:	48 89 e5             	mov    %rsp,%rbp
    5c38:	53                   	push   %rbx
    5c39:	48 83 ec 28          	sub    $0x28,%rsp
    5c3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5c41:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5c45:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5c49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c4d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c51:	48 89 d6             	mov    %rdx,%rsi
    5c54:	48 89 c7             	mov    %rax,%rdi
    5c57:	e8 f8 0d 00 00       	call   6a54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5c5c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5c60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c64:	48 89 d6             	mov    %rdx,%rsi
    5c67:	48 89 c7             	mov    %rax,%rdi
    5c6a:	e8 17 0e 00 00       	call   6a86 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    5c6f:	eb 1a                	jmp    5c8b <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5c71:	48 89 c3             	mov    %rax,%rbx
    5c74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c78:	48 89 c7             	mov    %rax,%rdi
    5c7b:	e8 ec f1 ff ff       	call   4e6c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    5c80:	48 89 d8             	mov    %rbx,%rax
    5c83:	48 89 c7             	mov    %rax,%rdi
    5c86:	e8 e5 d8 ff ff       	call   3570 <_Unwind_Resume@plt>
    5c8b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c8f:	c9                   	leave
    5c90:	c3                   	ret
    5c91:	90                   	nop

0000000000005c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5c92:	55                   	push   %rbp
    5c93:	48 89 e5             	mov    %rsp,%rbp
    5c96:	48 83 ec 10          	sub    $0x10,%rsp
    5c9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ca6:	48 89 c7             	mov    %rax,%rdi
    5ca9:	e8 24 00 00 00       	call   5cd2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5cae:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5cb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cb5:	48 8b 00             	mov    (%rax),%rax
    5cb8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5cbc:	48 89 ce             	mov    %rcx,%rsi
    5cbf:	48 89 c7             	mov    %rax,%rdi
    5cc2:	e8 20 0e 00 00       	call   6ae7 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5cc7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5ccb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5ccf:	90                   	nop
    5cd0:	c9                   	leave
    5cd1:	c3                   	ret

0000000000005cd2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5cd2:	55                   	push   %rbp
    5cd3:	48 89 e5             	mov    %rsp,%rbp
    5cd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5cda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cde:	5d                   	pop    %rbp
    5cdf:	c3                   	ret

0000000000005ce0 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5ce0:	55                   	push   %rbp
    5ce1:	48 89 e5             	mov    %rsp,%rbp
    5ce4:	48 83 ec 20          	sub    $0x20,%rsp
    5ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5cf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5cf4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cfc:	48 89 d6             	mov    %rdx,%rsi
    5cff:	48 89 c7             	mov    %rax,%rdi
    5d02:	e8 09 0e 00 00       	call   6b10 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    5d07:	90                   	nop
    5d08:	c9                   	leave
    5d09:	c3                   	ret

0000000000005d0a <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5d0a:	55                   	push   %rbp
    5d0b:	48 89 e5             	mov    %rsp,%rbp
    5d0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5d16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d1a:	5d                   	pop    %rbp
    5d1b:	c3                   	ret

0000000000005d1c <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5d1c:	55                   	push   %rbp
    5d1d:	48 89 e5             	mov    %rsp,%rbp
    5d20:	48 83 ec 10          	sub    $0x10,%rsp
    5d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5d2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d34:	48 89 d6             	mov    %rdx,%rsi
    5d37:	48 89 c7             	mov    %rax,%rdi
    5d3a:	e8 f7 0d 00 00       	call   6b36 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    5d3f:	90                   	nop
    5d40:	c9                   	leave
    5d41:	c3                   	ret

0000000000005d42 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5d42:	55                   	push   %rbp
    5d43:	48 89 e5             	mov    %rsp,%rbp
    5d46:	48 83 ec 20          	sub    $0x20,%rsp
    5d4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5d52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5d56:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5d5b:	74 17                	je     5d74 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5d65:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d69:	48 89 ce             	mov    %rcx,%rsi
    5d6c:	48 89 c7             	mov    %rax,%rdi
    5d6f:	e8 d1 0d 00 00       	call   6b45 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    5d74:	90                   	nop
    5d75:	c9                   	leave
    5d76:	c3                   	ret
    5d77:	90                   	nop

0000000000005d78 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5d78:	55                   	push   %rbp
    5d79:	48 89 e5             	mov    %rsp,%rbp
    5d7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d80:	90                   	nop
    5d81:	5d                   	pop    %rbp
    5d82:	c3                   	ret
    5d83:	90                   	nop

0000000000005d84 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5d84:	55                   	push   %rbp
    5d85:	48 89 e5             	mov    %rsp,%rbp
    5d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d8c:	90                   	nop
    5d8d:	5d                   	pop    %rbp
    5d8e:	c3                   	ret

0000000000005d8f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5d8f:	55                   	push   %rbp
    5d90:	48 89 e5             	mov    %rsp,%rbp
    5d93:	53                   	push   %rbx
    5d94:	48 83 ec 28          	sub    $0x28,%rsp
    5d98:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d9c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5da0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5da4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5da8:	48 89 d6             	mov    %rdx,%rsi
    5dab:	48 89 c7             	mov    %rax,%rdi
    5dae:	e8 25 01 00 00       	call   5ed8 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    5db3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5db7:	48 89 c7             	mov    %rax,%rdi
    5dba:	e8 b4 0d 00 00       	call   6b73 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    5dbf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5dc3:	0f 92 c3             	setb   %bl
    5dc6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5dca:	48 89 c7             	mov    %rax,%rdi
    5dcd:	e8 04 f3 ff ff       	call   50d6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    5dd2:	84 db                	test   %bl,%bl
    5dd4:	74 0f                	je     5de5 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    5dd6:	48 8d 05 a3 bb 00 00 	lea    0xbba3(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    5ddd:	48 89 c7             	mov    %rax,%rdi
    5de0:	e8 5b d3 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5de5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5de9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5ded:	c9                   	leave
    5dee:	c3                   	ret
    5def:	90                   	nop

0000000000005df0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5df0:	55                   	push   %rbp
    5df1:	48 89 e5             	mov    %rsp,%rbp
    5df4:	53                   	push   %rbx
    5df5:	48 83 ec 28          	sub    $0x28,%rsp
    5df9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5dfd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5e01:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5e05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e09:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5e0d:	48 89 d6             	mov    %rdx,%rsi
    5e10:	48 89 c7             	mov    %rax,%rdi
    5e13:	e8 9e 0d 00 00       	call   6bb6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5e18:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5e1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e20:	48 89 d6             	mov    %rdx,%rsi
    5e23:	48 89 c7             	mov    %rax,%rdi
    5e26:	e8 bd 0d 00 00       	call   6be8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    5e2b:	eb 1a                	jmp    5e47 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5e2d:	48 89 c3             	mov    %rax,%rbx
    5e30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e34:	48 89 c7             	mov    %rax,%rdi
    5e37:	e8 4c f0 ff ff       	call   4e88 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5e3c:	48 89 d8             	mov    %rbx,%rax
    5e3f:	48 89 c7             	mov    %rax,%rdi
    5e42:	e8 29 d7 ff ff       	call   3570 <_Unwind_Resume@plt>
    5e47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e4b:	c9                   	leave
    5e4c:	c3                   	ret
    5e4d:	90                   	nop

0000000000005e4e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5e4e:	55                   	push   %rbp
    5e4f:	48 89 e5             	mov    %rsp,%rbp
    5e52:	48 83 ec 10          	sub    $0x10,%rsp
    5e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e62:	48 89 c7             	mov    %rax,%rdi
    5e65:	e8 24 00 00 00       	call   5e8e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5e6a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e71:	48 8b 00             	mov    (%rax),%rax
    5e74:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e78:	48 89 ce             	mov    %rcx,%rsi
    5e7b:	48 89 c7             	mov    %rax,%rdi
    5e7e:	e8 c6 0d 00 00       	call   6c49 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5e83:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5e87:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5e8b:	90                   	nop
    5e8c:	c9                   	leave
    5e8d:	c3                   	ret

0000000000005e8e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5e8e:	55                   	push   %rbp
    5e8f:	48 89 e5             	mov    %rsp,%rbp
    5e92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5e96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e9a:	5d                   	pop    %rbp
    5e9b:	c3                   	ret

0000000000005e9c <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5e9c:	55                   	push   %rbp
    5e9d:	48 89 e5             	mov    %rsp,%rbp
    5ea0:	48 83 ec 20          	sub    $0x20,%rsp
    5ea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ea8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5eac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5eb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb8:	48 89 d6             	mov    %rdx,%rsi
    5ebb:	48 89 c7             	mov    %rax,%rdi
    5ebe:	e8 af 0d 00 00       	call   6c72 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    5ec3:	90                   	nop
    5ec4:	c9                   	leave
    5ec5:	c3                   	ret

0000000000005ec6 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5ec6:	55                   	push   %rbp
    5ec7:	48 89 e5             	mov    %rsp,%rbp
    5eca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ece:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5ed2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ed6:	5d                   	pop    %rbp
    5ed7:	c3                   	ret

0000000000005ed8 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5ed8:	55                   	push   %rbp
    5ed9:	48 89 e5             	mov    %rsp,%rbp
    5edc:	48 83 ec 10          	sub    $0x10,%rsp
    5ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ee4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5ee8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef0:	48 89 d6             	mov    %rdx,%rsi
    5ef3:	48 89 c7             	mov    %rax,%rdi
    5ef6:	e8 9d 0d 00 00       	call   6c98 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    5efb:	90                   	nop
    5efc:	c9                   	leave
    5efd:	c3                   	ret

0000000000005efe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5efe:	55                   	push   %rbp
    5eff:	48 89 e5             	mov    %rsp,%rbp
    5f02:	48 83 ec 20          	sub    $0x20,%rsp
    5f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f0e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5f12:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5f17:	74 17                	je     5f30 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f21:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5f25:	48 89 ce             	mov    %rcx,%rsi
    5f28:	48 89 c7             	mov    %rax,%rdi
    5f2b:	e8 77 0d 00 00       	call   6ca7 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    5f30:	90                   	nop
    5f31:	c9                   	leave
    5f32:	c3                   	ret
    5f33:	90                   	nop

0000000000005f34 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5f34:	55                   	push   %rbp
    5f35:	48 89 e5             	mov    %rsp,%rbp
    5f38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f3c:	90                   	nop
    5f3d:	5d                   	pop    %rbp
    5f3e:	c3                   	ret
    5f3f:	90                   	nop

0000000000005f40 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5f40:	55                   	push   %rbp
    5f41:	48 89 e5             	mov    %rsp,%rbp
    5f44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f48:	90                   	nop
    5f49:	5d                   	pop    %rbp
    5f4a:	c3                   	ret

0000000000005f4b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5f4b:	55                   	push   %rbp
    5f4c:	48 89 e5             	mov    %rsp,%rbp
    5f4f:	53                   	push   %rbx
    5f50:	48 83 ec 28          	sub    $0x28,%rsp
    5f54:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5f58:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5f5c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5f60:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f64:	48 89 d6             	mov    %rdx,%rsi
    5f67:	48 89 c7             	mov    %rax,%rdi
    5f6a:	e8 e9 00 00 00       	call   6058 <_ZNSaIPKcEC1ERKS1_>
    5f6f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f73:	48 89 c7             	mov    %rax,%rdi
    5f76:	e8 5a 0d 00 00       	call   6cd5 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    5f7b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5f7f:	0f 92 c3             	setb   %bl
    5f82:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f86:	48 89 c7             	mov    %rax,%rdi
    5f89:	e8 b6 f2 ff ff       	call   5244 <_ZNSaIPKcED1Ev>
    5f8e:	84 db                	test   %bl,%bl
    5f90:	74 0f                	je     5fa1 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5f92:	48 8d 05 e7 b9 00 00 	lea    0xb9e7(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    5f99:	48 89 c7             	mov    %rax,%rdi
    5f9c:	e8 9f d1 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5fa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5fa5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5fa9:	c9                   	leave
    5faa:	c3                   	ret
    5fab:	90                   	nop

0000000000005fac <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5fac:	55                   	push   %rbp
    5fad:	48 89 e5             	mov    %rsp,%rbp
    5fb0:	53                   	push   %rbx
    5fb1:	48 83 ec 28          	sub    $0x28,%rsp
    5fb5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5fb9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5fbd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5fc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fc5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5fc9:	48 89 d6             	mov    %rdx,%rsi
    5fcc:	48 89 c7             	mov    %rax,%rdi
    5fcf:	e8 44 0d 00 00       	call   6d18 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5fd4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5fd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fdc:	48 89 d6             	mov    %rdx,%rsi
    5fdf:	48 89 c7             	mov    %rax,%rdi
    5fe2:	e8 63 0d 00 00       	call   6d4a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    5fe7:	eb 1a                	jmp    6003 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    5fe9:	48 89 c3             	mov    %rax,%rbx
    5fec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ff0:	48 89 c7             	mov    %rax,%rdi
    5ff3:	e8 ac ee ff ff       	call   4ea4 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    5ff8:	48 89 d8             	mov    %rbx,%rax
    5ffb:	48 89 c7             	mov    %rax,%rdi
    5ffe:	e8 6d d5 ff ff       	call   3570 <_Unwind_Resume@plt>
    6003:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6007:	c9                   	leave
    6008:	c3                   	ret
    6009:	90                   	nop

000000000000600a <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    600a:	55                   	push   %rbp
    600b:	48 89 e5             	mov    %rsp,%rbp
    600e:	48 83 ec 10          	sub    $0x10,%rsp
    6012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6016:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    601a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    601e:	48 89 c7             	mov    %rax,%rdi
    6021:	e8 24 00 00 00       	call   604a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    6026:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    602d:	48 8b 00             	mov    (%rax),%rax
    6030:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6034:	48 89 ce             	mov    %rcx,%rsi
    6037:	48 89 c7             	mov    %rax,%rdi
    603a:	e8 61 0d 00 00       	call   6da0 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    603f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6043:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6047:	90                   	nop
    6048:	c9                   	leave
    6049:	c3                   	ret

000000000000604a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    604a:	55                   	push   %rbp
    604b:	48 89 e5             	mov    %rsp,%rbp
    604e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6056:	5d                   	pop    %rbp
    6057:	c3                   	ret

0000000000006058 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6058:	55                   	push   %rbp
    6059:	48 89 e5             	mov    %rsp,%rbp
    605c:	48 83 ec 10          	sub    $0x10,%rsp
    6060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6064:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6068:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    606c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6070:	48 89 d6             	mov    %rdx,%rsi
    6073:	48 89 c7             	mov    %rax,%rdi
    6076:	e8 4f 0d 00 00       	call   6dca <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    607b:	90                   	nop
    607c:	c9                   	leave
    607d:	c3                   	ret

000000000000607e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    607e:	55                   	push   %rbp
    607f:	48 89 e5             	mov    %rsp,%rbp
    6082:	48 83 ec 20          	sub    $0x20,%rsp
    6086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    608a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    608e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6092:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6097:	74 17                	je     60b0 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    609d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    60a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60a5:	48 89 ce             	mov    %rcx,%rsi
    60a8:	48 89 c7             	mov    %rax,%rdi
    60ab:	e8 29 0d 00 00       	call   6dd9 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    60b0:	90                   	nop
    60b1:	c9                   	leave
    60b2:	c3                   	ret
    60b3:	90                   	nop

00000000000060b4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    60b4:	55                   	push   %rbp
    60b5:	48 89 e5             	mov    %rsp,%rbp
    60b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60bc:	90                   	nop
    60bd:	5d                   	pop    %rbp
    60be:	c3                   	ret
    60bf:	90                   	nop

00000000000060c0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    60c0:	55                   	push   %rbp
    60c1:	48 89 e5             	mov    %rsp,%rbp
    60c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60c8:	90                   	nop
    60c9:	5d                   	pop    %rbp
    60ca:	c3                   	ret

00000000000060cb <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    60cb:	55                   	push   %rbp
    60cc:	48 89 e5             	mov    %rsp,%rbp
    60cf:	53                   	push   %rbx
    60d0:	48 83 ec 28          	sub    $0x28,%rsp
    60d4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    60d8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    60dc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    60e0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60e4:	48 89 d6             	mov    %rdx,%rsi
    60e7:	48 89 c7             	mov    %rax,%rdi
    60ea:	e8 25 01 00 00       	call   6214 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    60ef:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60f3:	48 89 c7             	mov    %rax,%rdi
    60f6:	e8 0c 0d 00 00       	call   6e07 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    60fb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    60ff:	0f 92 c3             	setb   %bl
    6102:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6106:	48 89 c7             	mov    %rax,%rdi
    6109:	e8 52 f2 ff ff       	call   5360 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    610e:	84 db                	test   %bl,%bl
    6110:	74 0f                	je     6121 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6112:	48 8d 05 67 b8 00 00 	lea    0xb867(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    6119:	48 89 c7             	mov    %rax,%rdi
    611c:	e8 1f d0 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6121:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6125:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6129:	c9                   	leave
    612a:	c3                   	ret
    612b:	90                   	nop

000000000000612c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    612c:	55                   	push   %rbp
    612d:	48 89 e5             	mov    %rsp,%rbp
    6130:	53                   	push   %rbx
    6131:	48 83 ec 28          	sub    $0x28,%rsp
    6135:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6139:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    613d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6141:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6145:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6149:	48 89 d6             	mov    %rdx,%rsi
    614c:	48 89 c7             	mov    %rax,%rdi
    614f:	e8 f6 0c 00 00       	call   6e4a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    6154:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6158:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    615c:	48 89 d6             	mov    %rdx,%rsi
    615f:	48 89 c7             	mov    %rax,%rdi
    6162:	e8 15 0d 00 00       	call   6e7c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    6167:	eb 1a                	jmp    6183 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    6169:	48 89 c3             	mov    %rax,%rbx
    616c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6170:	48 89 c7             	mov    %rax,%rdi
    6173:	e8 48 ed ff ff       	call   4ec0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    6178:	48 89 d8             	mov    %rbx,%rax
    617b:	48 89 c7             	mov    %rax,%rdi
    617e:	e8 ed d3 ff ff       	call   3570 <_Unwind_Resume@plt>
    6183:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6187:	c9                   	leave
    6188:	c3                   	ret
    6189:	90                   	nop

000000000000618a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    618a:	55                   	push   %rbp
    618b:	48 89 e5             	mov    %rsp,%rbp
    618e:	48 83 ec 10          	sub    $0x10,%rsp
    6192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6196:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    619a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    619e:	48 89 c7             	mov    %rax,%rdi
    61a1:	e8 24 00 00 00       	call   61ca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    61a6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    61a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ad:	48 8b 00             	mov    (%rax),%rax
    61b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    61b4:	48 89 ce             	mov    %rcx,%rsi
    61b7:	48 89 c7             	mov    %rax,%rdi
    61ba:	e8 13 0d 00 00       	call   6ed2 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    61bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    61c3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    61c7:	90                   	nop
    61c8:	c9                   	leave
    61c9:	c3                   	ret

00000000000061ca <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    61ca:	55                   	push   %rbp
    61cb:	48 89 e5             	mov    %rsp,%rbp
    61ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    61d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d6:	5d                   	pop    %rbp
    61d7:	c3                   	ret

00000000000061d8 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    61d8:	55                   	push   %rbp
    61d9:	48 89 e5             	mov    %rsp,%rbp
    61dc:	48 83 ec 20          	sub    $0x20,%rsp
    61e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    61e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    61ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61f4:	48 89 d6             	mov    %rdx,%rsi
    61f7:	48 89 c7             	mov    %rax,%rdi
    61fa:	e8 fc 0c 00 00       	call   6efb <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    61ff:	90                   	nop
    6200:	c9                   	leave
    6201:	c3                   	ret

0000000000006202 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6202:	55                   	push   %rbp
    6203:	48 89 e5             	mov    %rsp,%rbp
    6206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    620a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    620e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6212:	5d                   	pop    %rbp
    6213:	c3                   	ret

0000000000006214 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6214:	55                   	push   %rbp
    6215:	48 89 e5             	mov    %rsp,%rbp
    6218:	48 83 ec 10          	sub    $0x10,%rsp
    621c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6220:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6224:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    622c:	48 89 d6             	mov    %rdx,%rsi
    622f:	48 89 c7             	mov    %rax,%rdi
    6232:	e8 eb 0c 00 00       	call   6f22 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    6237:	90                   	nop
    6238:	c9                   	leave
    6239:	c3                   	ret

000000000000623a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    623a:	55                   	push   %rbp
    623b:	48 89 e5             	mov    %rsp,%rbp
    623e:	48 83 ec 20          	sub    $0x20,%rsp
    6242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6246:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    624a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    624e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6253:	74 17                	je     626c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6255:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6259:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    625d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6261:	48 89 ce             	mov    %rcx,%rsi
    6264:	48 89 c7             	mov    %rax,%rdi
    6267:	e8 c5 0c 00 00       	call   6f31 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    626c:	90                   	nop
    626d:	c9                   	leave
    626e:	c3                   	ret
    626f:	90                   	nop

0000000000006270 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6270:	55                   	push   %rbp
    6271:	48 89 e5             	mov    %rsp,%rbp
    6274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6278:	90                   	nop
    6279:	5d                   	pop    %rbp
    627a:	c3                   	ret
    627b:	90                   	nop

000000000000627c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    627c:	55                   	push   %rbp
    627d:	48 89 e5             	mov    %rsp,%rbp
    6280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6284:	90                   	nop
    6285:	5d                   	pop    %rbp
    6286:	c3                   	ret

0000000000006287 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6287:	55                   	push   %rbp
    6288:	48 89 e5             	mov    %rsp,%rbp
    628b:	53                   	push   %rbx
    628c:	48 83 ec 28          	sub    $0x28,%rsp
    6290:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6294:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6298:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    629c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    62a0:	48 89 d6             	mov    %rdx,%rsi
    62a3:	48 89 c7             	mov    %rax,%rdi
    62a6:	e8 25 01 00 00       	call   63d0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    62ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    62af:	48 89 c7             	mov    %rax,%rdi
    62b2:	e8 a8 0c 00 00       	call   6f5f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    62b7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    62bb:	0f 92 c3             	setb   %bl
    62be:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    62c2:	48 89 c7             	mov    %rax,%rdi
    62c5:	e8 fa f1 ff ff       	call   54c4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    62ca:	84 db                	test   %bl,%bl
    62cc:	74 0f                	je     62dd <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    62ce:	48 8d 05 ab b6 00 00 	lea    0xb6ab(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    62d5:	48 89 c7             	mov    %rax,%rdi
    62d8:	e8 63 ce ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    62dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    62e1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    62e5:	c9                   	leave
    62e6:	c3                   	ret
    62e7:	90                   	nop

00000000000062e8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    62e8:	55                   	push   %rbp
    62e9:	48 89 e5             	mov    %rsp,%rbp
    62ec:	53                   	push   %rbx
    62ed:	48 83 ec 28          	sub    $0x28,%rsp
    62f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    62f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    62f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    62fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6301:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6305:	48 89 d6             	mov    %rdx,%rsi
    6308:	48 89 c7             	mov    %rax,%rdi
    630b:	e8 92 0c 00 00       	call   6fa2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    6310:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6314:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6318:	48 89 d6             	mov    %rdx,%rsi
    631b:	48 89 c7             	mov    %rax,%rdi
    631e:	e8 b1 0c 00 00       	call   6fd4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    6323:	eb 1a                	jmp    633f <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    6325:	48 89 c3             	mov    %rax,%rbx
    6328:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    632c:	48 89 c7             	mov    %rax,%rdi
    632f:	e8 a8 eb ff ff       	call   4edc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    6334:	48 89 d8             	mov    %rbx,%rax
    6337:	48 89 c7             	mov    %rax,%rdi
    633a:	e8 31 d2 ff ff       	call   3570 <_Unwind_Resume@plt>
    633f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6343:	c9                   	leave
    6344:	c3                   	ret
    6345:	90                   	nop

0000000000006346 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6346:	55                   	push   %rbp
    6347:	48 89 e5             	mov    %rsp,%rbp
    634a:	48 83 ec 10          	sub    $0x10,%rsp
    634e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6352:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    635a:	48 89 c7             	mov    %rax,%rdi
    635d:	e8 24 00 00 00       	call   6386 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    6362:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6369:	48 8b 00             	mov    (%rax),%rax
    636c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6370:	48 89 ce             	mov    %rcx,%rsi
    6373:	48 89 c7             	mov    %rax,%rdi
    6376:	e8 b9 0c 00 00       	call   7034 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    637b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    637f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6383:	90                   	nop
    6384:	c9                   	leave
    6385:	c3                   	ret

0000000000006386 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6386:	55                   	push   %rbp
    6387:	48 89 e5             	mov    %rsp,%rbp
    638a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    638e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6392:	5d                   	pop    %rbp
    6393:	c3                   	ret

0000000000006394 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6394:	55                   	push   %rbp
    6395:	48 89 e5             	mov    %rsp,%rbp
    6398:	48 83 ec 20          	sub    $0x20,%rsp
    639c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63a4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    63a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b0:	48 89 d6             	mov    %rdx,%rsi
    63b3:	48 89 c7             	mov    %rax,%rdi
    63b6:	e8 a2 0c 00 00       	call   705d <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    63bb:	90                   	nop
    63bc:	c9                   	leave
    63bd:	c3                   	ret

00000000000063be <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    63be:	55                   	push   %rbp
    63bf:	48 89 e5             	mov    %rsp,%rbp
    63c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    63ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63ce:	5d                   	pop    %rbp
    63cf:	c3                   	ret

00000000000063d0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    63d0:	55                   	push   %rbp
    63d1:	48 89 e5             	mov    %rsp,%rbp
    63d4:	48 83 ec 10          	sub    $0x10,%rsp
    63d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    63e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63e8:	48 89 d6             	mov    %rdx,%rsi
    63eb:	48 89 c7             	mov    %rax,%rdi
    63ee:	e8 91 0c 00 00       	call   7084 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    63f3:	90                   	nop
    63f4:	c9                   	leave
    63f5:	c3                   	ret

00000000000063f6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    63f6:	55                   	push   %rbp
    63f7:	48 89 e5             	mov    %rsp,%rbp
    63fa:	48 83 ec 20          	sub    $0x20,%rsp
    63fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6402:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6406:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    640a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    640f:	74 17                	je     6428 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6415:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6419:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    641d:	48 89 ce             	mov    %rcx,%rsi
    6420:	48 89 c7             	mov    %rax,%rdi
    6423:	e8 6b 0c 00 00       	call   7093 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    6428:	90                   	nop
    6429:	c9                   	leave
    642a:	c3                   	ret
    642b:	90                   	nop

000000000000642c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    642c:	55                   	push   %rbp
    642d:	48 89 e5             	mov    %rsp,%rbp
    6430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6434:	90                   	nop
    6435:	5d                   	pop    %rbp
    6436:	c3                   	ret
    6437:	90                   	nop

0000000000006438 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6438:	55                   	push   %rbp
    6439:	48 89 e5             	mov    %rsp,%rbp
    643c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6440:	90                   	nop
    6441:	5d                   	pop    %rbp
    6442:	c3                   	ret

0000000000006443 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6443:	55                   	push   %rbp
    6444:	48 89 e5             	mov    %rsp,%rbp
    6447:	53                   	push   %rbx
    6448:	48 83 ec 28          	sub    $0x28,%rsp
    644c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6450:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6454:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6458:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    645c:	48 89 d6             	mov    %rdx,%rsi
    645f:	48 89 c7             	mov    %rax,%rdi
    6462:	e8 d7 01 00 00       	call   663e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    6467:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    646b:	48 89 c7             	mov    %rax,%rdi
    646e:	e8 4e 0c 00 00       	call   70c1 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    6473:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6477:	0f 92 c3             	setb   %bl
    647a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    647e:	48 89 c7             	mov    %rax,%rdi
    6481:	e8 da f1 ff ff       	call   5660 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    6486:	84 db                	test   %bl,%bl
    6488:	74 0f                	je     6499 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    648a:	48 8d 05 ef b4 00 00 	lea    0xb4ef(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    6491:	48 89 c7             	mov    %rax,%rdi
    6494:	e8 a7 cc ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6499:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    649d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    64a1:	c9                   	leave
    64a2:	c3                   	ret
    64a3:	90                   	nop

00000000000064a4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    64a4:	55                   	push   %rbp
    64a5:	48 89 e5             	mov    %rsp,%rbp
    64a8:	53                   	push   %rbx
    64a9:	48 83 ec 28          	sub    $0x28,%rsp
    64ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    64b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    64b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    64b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64bd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    64c1:	48 89 d6             	mov    %rdx,%rsi
    64c4:	48 89 c7             	mov    %rax,%rdi
    64c7:	e8 38 0c 00 00       	call   7104 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    64cc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    64d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64d4:	48 89 d6             	mov    %rdx,%rsi
    64d7:	48 89 c7             	mov    %rax,%rdi
    64da:	e8 57 0c 00 00       	call   7136 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    64df:	eb 1a                	jmp    64fb <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    64e1:	48 89 c3             	mov    %rax,%rbx
    64e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64e8:	48 89 c7             	mov    %rax,%rdi
    64eb:	e8 08 ea ff ff       	call   4ef8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    64f0:	48 89 d8             	mov    %rbx,%rax
    64f3:	48 89 c7             	mov    %rax,%rdi
    64f6:	e8 75 d0 ff ff       	call   3570 <_Unwind_Resume@plt>
    64fb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    64ff:	c9                   	leave
    6500:	c3                   	ret
    6501:	90                   	nop

0000000000006502 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6502:	55                   	push   %rbp
    6503:	48 89 e5             	mov    %rsp,%rbp
    6506:	48 83 ec 10          	sub    $0x10,%rsp
    650a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    650e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6516:	48 89 c7             	mov    %rax,%rdi
    6519:	e8 24 00 00 00       	call   6542 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    651e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6525:	48 8b 00             	mov    (%rax),%rax
    6528:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    652c:	48 89 ce             	mov    %rcx,%rsi
    652f:	48 89 c7             	mov    %rax,%rdi
    6532:	e8 60 0c 00 00       	call   7197 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6537:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    653b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    653f:	90                   	nop
    6540:	c9                   	leave
    6541:	c3                   	ret

0000000000006542 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6542:	55                   	push   %rbp
    6543:	48 89 e5             	mov    %rsp,%rbp
    6546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    654a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    654e:	5d                   	pop    %rbp
    654f:	c3                   	ret

0000000000006550 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6550:	55                   	push   %rbp
    6551:	48 89 e5             	mov    %rsp,%rbp
    6554:	48 83 ec 20          	sub    $0x20,%rsp
    6558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    655c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6560:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6564:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656c:	48 89 d6             	mov    %rdx,%rsi
    656f:	48 89 c7             	mov    %rax,%rdi
    6572:	e8 49 0c 00 00       	call   71c0 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    6577:	90                   	nop
    6578:	c9                   	leave
    6579:	c3                   	ret

000000000000657a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    657a:	55                   	push   %rbp
    657b:	48 89 e5             	mov    %rsp,%rbp
    657e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6582:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6586:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    658a:	48 8b 10             	mov    (%rax),%rdx
    658d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6591:	48 89 10             	mov    %rdx,(%rax)
    6594:	90                   	nop
    6595:	5d                   	pop    %rbp
    6596:	c3                   	ret
    6597:	90                   	nop

0000000000006598 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6598:	55                   	push   %rbp
    6599:	48 89 e5             	mov    %rsp,%rbp
    659c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    65a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65a4:	5d                   	pop    %rbp
    65a5:	c3                   	ret

00000000000065a6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    65a6:	55                   	push   %rbp
    65a7:	48 89 e5             	mov    %rsp,%rbp
    65aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    65ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b2:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    65b6:	5d                   	pop    %rbp
    65b7:	c3                   	ret

00000000000065b8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    65b8:	55                   	push   %rbp
    65b9:	48 89 e5             	mov    %rsp,%rbp
    65bc:	48 83 ec 10          	sub    $0x10,%rsp
    65c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    65c4:	e8 25 d3 ff ff       	call   38ee <_ZSt23__is_constant_evaluatedv>
    65c9:	84 c0                	test   %al,%al
    65cb:	74 1a                	je     65e7 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    65cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65d1:	48 89 c7             	mov    %rax,%rdi
    65d4:	e8 cd ff ff ff       	call   65a6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    65d9:	83 f0 01             	xor    $0x1,%eax
    65dc:	84 c0                	test   %al,%al
    65de:	74 07                	je     65e7 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    65e0:	b8 01 00 00 00       	mov    $0x1,%eax
    65e5:	eb 05                	jmp    65ec <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    65e7:	b8 00 00 00 00       	mov    $0x0,%eax
    65ec:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    65ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65f2:	48 89 c7             	mov    %rax,%rdi
    65f5:	e8 ec 0b 00 00       	call   71e6 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    65fa:	c9                   	leave
    65fb:	c3                   	ret

00000000000065fc <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    65fc:	55                   	push   %rbp
    65fd:	48 89 e5             	mov    %rsp,%rbp
    6600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6608:	5d                   	pop    %rbp
    6609:	c3                   	ret

000000000000660a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    660a:	55                   	push   %rbp
    660b:	48 89 e5             	mov    %rsp,%rbp
    660e:	53                   	push   %rbx
    660f:	48 83 ec 18          	sub    $0x18,%rsp
    6613:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6617:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    661b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    661f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6623:	48 89 c7             	mov    %rax,%rdi
    6626:	e8 d1 ff ff ff       	call   65fc <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    662b:	48 89 c6             	mov    %rax,%rsi
    662e:	48 89 df             	mov    %rbx,%rdi
    6631:	e8 be 0b 00 00       	call   71f4 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    6636:	90                   	nop
    6637:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    663b:	c9                   	leave
    663c:	c3                   	ret
    663d:	90                   	nop

000000000000663e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    663e:	55                   	push   %rbp
    663f:	48 89 e5             	mov    %rsp,%rbp
    6642:	48 83 ec 10          	sub    $0x10,%rsp
    6646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    664a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    664e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6652:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6656:	48 89 d6             	mov    %rdx,%rsi
    6659:	48 89 c7             	mov    %rax,%rdi
    665c:	e8 d9 0b 00 00       	call   723a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    6661:	90                   	nop
    6662:	c9                   	leave
    6663:	c3                   	ret

0000000000006664 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    6664:	55                   	push   %rbp
    6665:	48 89 e5             	mov    %rsp,%rbp
    6668:	48 83 ec 20          	sub    $0x20,%rsp
    666c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6670:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6674:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6678:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    667d:	74 17                	je     6696 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    667f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6683:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6687:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    668b:	48 89 ce             	mov    %rcx,%rsi
    668e:	48 89 c7             	mov    %rax,%rdi
    6691:	e8 b3 0b 00 00       	call   7249 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    6696:	90                   	nop
    6697:	c9                   	leave
    6698:	c3                   	ret
    6699:	90                   	nop

000000000000669a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    669a:	55                   	push   %rbp
    669b:	48 89 e5             	mov    %rsp,%rbp
    669e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66a2:	90                   	nop
    66a3:	5d                   	pop    %rbp
    66a4:	c3                   	ret
    66a5:	90                   	nop

00000000000066a6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    66a6:	55                   	push   %rbp
    66a7:	48 89 e5             	mov    %rsp,%rbp
    66aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66ae:	90                   	nop
    66af:	5d                   	pop    %rbp
    66b0:	c3                   	ret

00000000000066b1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    66b1:	55                   	push   %rbp
    66b2:	48 89 e5             	mov    %rsp,%rbp
    66b5:	53                   	push   %rbx
    66b6:	48 83 ec 28          	sub    $0x28,%rsp
    66ba:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    66be:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    66c2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    66c6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    66ca:	48 89 d6             	mov    %rdx,%rsi
    66cd:	48 89 c7             	mov    %rax,%rdi
    66d0:	e8 25 01 00 00       	call   67fa <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    66d5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    66d9:	48 89 c7             	mov    %rax,%rdi
    66dc:	e8 96 0b 00 00       	call   7277 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    66e1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    66e5:	0f 92 c3             	setb   %bl
    66e8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    66ec:	48 89 c7             	mov    %rax,%rdi
    66ef:	e8 1c f2 ff ff       	call   5910 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    66f4:	84 db                	test   %bl,%bl
    66f6:	74 0f                	je     6707 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    66f8:	48 8d 05 81 b2 00 00 	lea    0xb281(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    66ff:	48 89 c7             	mov    %rax,%rdi
    6702:	e8 39 ca ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6707:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    670b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    670f:	c9                   	leave
    6710:	c3                   	ret
    6711:	90                   	nop

0000000000006712 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6712:	55                   	push   %rbp
    6713:	48 89 e5             	mov    %rsp,%rbp
    6716:	53                   	push   %rbx
    6717:	48 83 ec 28          	sub    $0x28,%rsp
    671b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    671f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6723:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6727:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    672b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    672f:	48 89 d6             	mov    %rdx,%rsi
    6732:	48 89 c7             	mov    %rax,%rdi
    6735:	e8 80 0b 00 00       	call   72ba <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    673a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    673e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6742:	48 89 d6             	mov    %rdx,%rsi
    6745:	48 89 c7             	mov    %rax,%rdi
    6748:	e8 9f 0b 00 00       	call   72ec <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    674d:	eb 1a                	jmp    6769 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    674f:	48 89 c3             	mov    %rax,%rbx
    6752:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6756:	48 89 c7             	mov    %rax,%rdi
    6759:	e8 b6 e7 ff ff       	call   4f14 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    675e:	48 89 d8             	mov    %rbx,%rax
    6761:	48 89 c7             	mov    %rax,%rdi
    6764:	e8 07 ce ff ff       	call   3570 <_Unwind_Resume@plt>
    6769:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    676d:	c9                   	leave
    676e:	c3                   	ret
    676f:	90                   	nop

0000000000006770 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6770:	55                   	push   %rbp
    6771:	48 89 e5             	mov    %rsp,%rbp
    6774:	48 83 ec 10          	sub    $0x10,%rsp
    6778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    677c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6780:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6784:	48 89 c7             	mov    %rax,%rdi
    6787:	e8 24 00 00 00       	call   67b0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    678c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    678f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6793:	48 8b 00             	mov    (%rax),%rax
    6796:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    679a:	48 89 ce             	mov    %rcx,%rsi
    679d:	48 89 c7             	mov    %rax,%rdi
    67a0:	e8 9d 0b 00 00       	call   7342 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    67a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    67a9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    67ad:	90                   	nop
    67ae:	c9                   	leave
    67af:	c3                   	ret

00000000000067b0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    67b0:	55                   	push   %rbp
    67b1:	48 89 e5             	mov    %rsp,%rbp
    67b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    67b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67bc:	5d                   	pop    %rbp
    67bd:	c3                   	ret

00000000000067be <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    67be:	55                   	push   %rbp
    67bf:	48 89 e5             	mov    %rsp,%rbp
    67c2:	48 83 ec 20          	sub    $0x20,%rsp
    67c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    67d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67da:	48 89 d6             	mov    %rdx,%rsi
    67dd:	48 89 c7             	mov    %rax,%rdi
    67e0:	e8 86 0b 00 00       	call   736b <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    67e5:	90                   	nop
    67e6:	c9                   	leave
    67e7:	c3                   	ret

00000000000067e8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    67e8:	55                   	push   %rbp
    67e9:	48 89 e5             	mov    %rsp,%rbp
    67ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    67f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67f8:	5d                   	pop    %rbp
    67f9:	c3                   	ret

00000000000067fa <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    67fa:	55                   	push   %rbp
    67fb:	48 89 e5             	mov    %rsp,%rbp
    67fe:	48 83 ec 10          	sub    $0x10,%rsp
    6802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6806:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    680a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    680e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6812:	48 89 d6             	mov    %rdx,%rsi
    6815:	48 89 c7             	mov    %rax,%rdi
    6818:	e8 75 0b 00 00       	call   7392 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    681d:	90                   	nop
    681e:	c9                   	leave
    681f:	c3                   	ret

0000000000006820 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    6820:	55                   	push   %rbp
    6821:	48 89 e5             	mov    %rsp,%rbp
    6824:	48 83 ec 20          	sub    $0x20,%rsp
    6828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    682c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6830:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6834:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6839:	74 17                	je     6852 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    683b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    683f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6843:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6847:	48 89 ce             	mov    %rcx,%rsi
    684a:	48 89 c7             	mov    %rax,%rdi
    684d:	e8 4f 0b 00 00       	call   73a1 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    6852:	90                   	nop
    6853:	c9                   	leave
    6854:	c3                   	ret
    6855:	90                   	nop

0000000000006856 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6856:	55                   	push   %rbp
    6857:	48 89 e5             	mov    %rsp,%rbp
    685a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    685e:	90                   	nop
    685f:	5d                   	pop    %rbp
    6860:	c3                   	ret
    6861:	90                   	nop

0000000000006862 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6862:	55                   	push   %rbp
    6863:	48 89 e5             	mov    %rsp,%rbp
    6866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    686a:	90                   	nop
    686b:	5d                   	pop    %rbp
    686c:	c3                   	ret

000000000000686d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    686d:	55                   	push   %rbp
    686e:	48 89 e5             	mov    %rsp,%rbp
    6871:	53                   	push   %rbx
    6872:	48 83 ec 28          	sub    $0x28,%rsp
    6876:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    687a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    687e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6882:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6886:	48 89 d6             	mov    %rdx,%rsi
    6889:	48 89 c7             	mov    %rax,%rdi
    688c:	e8 25 01 00 00       	call   69b6 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    6891:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6895:	48 89 c7             	mov    %rax,%rdi
    6898:	e8 32 0b 00 00       	call   73cf <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    689d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    68a1:	0f 92 c3             	setb   %bl
    68a4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    68a8:	48 89 c7             	mov    %rax,%rdi
    68ab:	e8 c4 f1 ff ff       	call   5a74 <_ZNSaI16VkPresentModeKHRED1Ev>
    68b0:	84 db                	test   %bl,%bl
    68b2:	74 0f                	je     68c3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    68b4:	48 8d 05 c5 b0 00 00 	lea    0xb0c5(%rip),%rax        # 11980 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    68bb:	48 89 c7             	mov    %rax,%rdi
    68be:	e8 7d c8 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    68c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    68c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    68cb:	c9                   	leave
    68cc:	c3                   	ret
    68cd:	90                   	nop

00000000000068ce <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    68ce:	55                   	push   %rbp
    68cf:	48 89 e5             	mov    %rsp,%rbp
    68d2:	53                   	push   %rbx
    68d3:	48 83 ec 28          	sub    $0x28,%rsp
    68d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    68db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    68df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    68e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68e7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    68eb:	48 89 d6             	mov    %rdx,%rsi
    68ee:	48 89 c7             	mov    %rax,%rdi
    68f1:	e8 1c 0b 00 00       	call   7412 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    68f6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    68fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68fe:	48 89 d6             	mov    %rdx,%rsi
    6901:	48 89 c7             	mov    %rax,%rdi
    6904:	e8 3b 0b 00 00       	call   7444 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    6909:	eb 1a                	jmp    6925 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    690b:	48 89 c3             	mov    %rax,%rbx
    690e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6912:	48 89 c7             	mov    %rax,%rdi
    6915:	e8 16 e6 ff ff       	call   4f30 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    691a:	48 89 d8             	mov    %rbx,%rax
    691d:	48 89 c7             	mov    %rax,%rdi
    6920:	e8 4b cc ff ff       	call   3570 <_Unwind_Resume@plt>
    6925:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6929:	c9                   	leave
    692a:	c3                   	ret
    692b:	90                   	nop

000000000000692c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    692c:	55                   	push   %rbp
    692d:	48 89 e5             	mov    %rsp,%rbp
    6930:	48 83 ec 10          	sub    $0x10,%rsp
    6934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6938:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    693c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6940:	48 89 c7             	mov    %rax,%rdi
    6943:	e8 24 00 00 00       	call   696c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    6948:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    694b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    694f:	48 8b 00             	mov    (%rax),%rax
    6952:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6956:	48 89 ce             	mov    %rcx,%rsi
    6959:	48 89 c7             	mov    %rax,%rdi
    695c:	e8 39 0b 00 00       	call   749a <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6961:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6965:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6969:	90                   	nop
    696a:	c9                   	leave
    696b:	c3                   	ret

000000000000696c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    696c:	55                   	push   %rbp
    696d:	48 89 e5             	mov    %rsp,%rbp
    6970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6978:	5d                   	pop    %rbp
    6979:	c3                   	ret

000000000000697a <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    697a:	55                   	push   %rbp
    697b:	48 89 e5             	mov    %rsp,%rbp
    697e:	48 83 ec 20          	sub    $0x20,%rsp
    6982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6986:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    698a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    698e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6996:	48 89 d6             	mov    %rdx,%rsi
    6999:	48 89 c7             	mov    %rax,%rdi
    699c:	e8 22 0b 00 00       	call   74c3 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    69a1:	90                   	nop
    69a2:	c9                   	leave
    69a3:	c3                   	ret

00000000000069a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    69a4:	55                   	push   %rbp
    69a5:	48 89 e5             	mov    %rsp,%rbp
    69a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    69b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    69b4:	5d                   	pop    %rbp
    69b5:	c3                   	ret

00000000000069b6 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    69b6:	55                   	push   %rbp
    69b7:	48 89 e5             	mov    %rsp,%rbp
    69ba:	48 83 ec 10          	sub    $0x10,%rsp
    69be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    69c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ce:	48 89 d6             	mov    %rdx,%rsi
    69d1:	48 89 c7             	mov    %rax,%rdi
    69d4:	e8 11 0b 00 00       	call   74ea <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    69d9:	90                   	nop
    69da:	c9                   	leave
    69db:	c3                   	ret

00000000000069dc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    69dc:	55                   	push   %rbp
    69dd:	48 89 e5             	mov    %rsp,%rbp
    69e0:	48 83 ec 20          	sub    $0x20,%rsp
    69e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    69f0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    69f5:	74 17                	je     6a0e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    69f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69ff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6a03:	48 89 ce             	mov    %rcx,%rsi
    6a06:	48 89 c7             	mov    %rax,%rdi
    6a09:	e8 eb 0a 00 00       	call   74f9 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    6a0e:	90                   	nop
    6a0f:	c9                   	leave
    6a10:	c3                   	ret

0000000000006a11 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6a11:	55                   	push   %rbp
    6a12:	48 89 e5             	mov    %rsp,%rbp
    6a15:	48 83 ec 20          	sub    $0x20,%rsp
    6a19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6a1d:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    6a24:	03 3f 00 
    6a27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6a2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a2f:	48 89 c7             	mov    %rax,%rdi
    6a32:	e8 f0 0a 00 00       	call   7527 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    6a37:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6a3b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6a3f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a43:	48 89 d6             	mov    %rdx,%rsi
    6a46:	48 89 c7             	mov    %rax,%rdi
    6a49:	e8 f3 0a 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    6a4e:	48 8b 00             	mov    (%rax),%rax
      }
    6a51:	c9                   	leave
    6a52:	c3                   	ret
    6a53:	90                   	nop

0000000000006a54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6a54:	55                   	push   %rbp
    6a55:	48 89 e5             	mov    %rsp,%rbp
    6a58:	48 83 ec 10          	sub    $0x10,%rsp
    6a5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6a64:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a6c:	48 89 d6             	mov    %rdx,%rsi
    6a6f:	48 89 c7             	mov    %rax,%rdi
    6a72:	e8 a5 f2 ff ff       	call   5d1c <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    6a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7b:	48 89 c7             	mov    %rax,%rdi
    6a7e:	e8 e9 0a 00 00       	call   756c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6a83:	90                   	nop
    6a84:	c9                   	leave
    6a85:	c3                   	ret

0000000000006a86 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6a86:	55                   	push   %rbp
    6a87:	48 89 e5             	mov    %rsp,%rbp
    6a8a:	48 83 ec 10          	sub    $0x10,%rsp
    6a8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6a96:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a9e:	48 89 d6             	mov    %rdx,%rsi
    6aa1:	48 89 c7             	mov    %rax,%rdi
    6aa4:	e8 f1 0a 00 00       	call   759a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    6aa9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6aad:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ab4:	48 8b 10             	mov    (%rax),%rdx
    6ab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6abb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ac3:	48 8b 08             	mov    (%rax),%rcx
    6ac6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6aca:	48 89 d0             	mov    %rdx,%rax
    6acd:	48 c1 e0 06          	shl    $0x6,%rax
    6ad1:	48 01 d0             	add    %rdx,%rax
    6ad4:	48 c1 e0 03          	shl    $0x3,%rax
    6ad8:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ae0:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6ae4:	90                   	nop
    6ae5:	c9                   	leave
    6ae6:	c3                   	ret

0000000000006ae7 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6ae7:	55                   	push   %rbp
    6ae8:	48 89 e5             	mov    %rsp,%rbp
    6aeb:	48 83 ec 20          	sub    $0x20,%rsp
    6aef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6af3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6af7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    6afb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6aff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b03:	48 89 d6             	mov    %rdx,%rsi
    6b06:	48 89 c7             	mov    %rax,%rdi
    6b09:	e8 bf 0a 00 00       	call   75cd <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    6b0e:	c9                   	leave
    6b0f:	c3                   	ret

0000000000006b10 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6b10:	55                   	push   %rbp
    6b11:	48 89 e5             	mov    %rsp,%rbp
    6b14:	48 83 ec 10          	sub    $0x10,%rsp
    6b18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    6b20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b28:	48 89 d6             	mov    %rdx,%rsi
    6b2b:	48 89 c7             	mov    %rax,%rdi
    6b2e:	e8 c3 0a 00 00       	call   75f6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    6b33:	90                   	nop
    6b34:	c9                   	leave
    6b35:	c3                   	ret

0000000000006b36 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6b36:	55                   	push   %rbp
    6b37:	48 89 e5             	mov    %rsp,%rbp
    6b3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b42:	90                   	nop
    6b43:	5d                   	pop    %rbp
    6b44:	c3                   	ret

0000000000006b45 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6b45:	55                   	push   %rbp
    6b46:	48 89 e5             	mov    %rsp,%rbp
    6b49:	48 83 ec 20          	sub    $0x20,%rsp
    6b4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b51:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b55:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6b59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b65:	48 89 ce             	mov    %rcx,%rsi
    6b68:	48 89 c7             	mov    %rax,%rdi
    6b6b:	e8 96 0a 00 00       	call   7606 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    6b70:	90                   	nop
    6b71:	c9                   	leave
    6b72:	c3                   	ret

0000000000006b73 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6b73:	55                   	push   %rbp
    6b74:	48 89 e5             	mov    %rsp,%rbp
    6b77:	48 83 ec 20          	sub    $0x20,%rsp
    6b7b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6b7f:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    6b86:	07 7e 00 
    6b89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6b8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b91:	48 89 c7             	mov    %rax,%rdi
    6b94:	e8 a7 0a 00 00       	call   7640 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    6b99:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6b9d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6ba1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6ba5:	48 89 d6             	mov    %rdx,%rsi
    6ba8:	48 89 c7             	mov    %rax,%rdi
    6bab:	e8 91 09 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    6bb0:	48 8b 00             	mov    (%rax),%rax
      }
    6bb3:	c9                   	leave
    6bb4:	c3                   	ret
    6bb5:	90                   	nop

0000000000006bb6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6bb6:	55                   	push   %rbp
    6bb7:	48 89 e5             	mov    %rsp,%rbp
    6bba:	48 83 ec 10          	sub    $0x10,%rsp
    6bbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6bc6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bce:	48 89 d6             	mov    %rdx,%rsi
    6bd1:	48 89 c7             	mov    %rax,%rdi
    6bd4:	e8 ff f2 ff ff       	call   5ed8 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    6bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bdd:	48 89 c7             	mov    %rax,%rdi
    6be0:	e8 75 0a 00 00       	call   765a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6be5:	90                   	nop
    6be6:	c9                   	leave
    6be7:	c3                   	ret

0000000000006be8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6be8:	55                   	push   %rbp
    6be9:	48 89 e5             	mov    %rsp,%rbp
    6bec:	48 83 ec 10          	sub    $0x10,%rsp
    6bf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6bf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c00:	48 89 d6             	mov    %rdx,%rsi
    6c03:	48 89 c7             	mov    %rax,%rdi
    6c06:	e8 7d 0a 00 00       	call   7688 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    6c0b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c0f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c16:	48 8b 10             	mov    (%rax),%rdx
    6c19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c1d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6c21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c25:	48 8b 08             	mov    (%rax),%rcx
    6c28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c2c:	48 89 d0             	mov    %rdx,%rax
    6c2f:	48 c1 e0 06          	shl    $0x6,%rax
    6c33:	48 01 d0             	add    %rdx,%rax
    6c36:	48 c1 e0 02          	shl    $0x2,%rax
    6c3a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    6c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c42:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6c46:	90                   	nop
    6c47:	c9                   	leave
    6c48:	c3                   	ret

0000000000006c49 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6c49:	55                   	push   %rbp
    6c4a:	48 89 e5             	mov    %rsp,%rbp
    6c4d:	48 83 ec 20          	sub    $0x20,%rsp
    6c51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c59:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6c5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c65:	48 89 d6             	mov    %rdx,%rsi
    6c68:	48 89 c7             	mov    %rax,%rdi
    6c6b:	e8 4b 0a 00 00       	call   76bb <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    6c70:	c9                   	leave
    6c71:	c3                   	ret

0000000000006c72 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6c72:	55                   	push   %rbp
    6c73:	48 89 e5             	mov    %rsp,%rbp
    6c76:	48 83 ec 10          	sub    $0x10,%rsp
    6c7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6c82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c8a:	48 89 d6             	mov    %rdx,%rsi
    6c8d:	48 89 c7             	mov    %rax,%rdi
    6c90:	e8 4f 0a 00 00       	call   76e4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    6c95:	90                   	nop
    6c96:	c9                   	leave
    6c97:	c3                   	ret

0000000000006c98 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    6c98:	55                   	push   %rbp
    6c99:	48 89 e5             	mov    %rsp,%rbp
    6c9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ca0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ca4:	90                   	nop
    6ca5:	5d                   	pop    %rbp
    6ca6:	c3                   	ret

0000000000006ca7 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6ca7:	55                   	push   %rbp
    6ca8:	48 89 e5             	mov    %rsp,%rbp
    6cab:	48 83 ec 20          	sub    $0x20,%rsp
    6caf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cb3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cb7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6cbb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6cbf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cc7:	48 89 ce             	mov    %rcx,%rsi
    6cca:	48 89 c7             	mov    %rax,%rdi
    6ccd:	e8 22 0a 00 00       	call   76f4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    6cd2:	90                   	nop
    6cd3:	c9                   	leave
    6cd4:	c3                   	ret

0000000000006cd5 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6cd5:	55                   	push   %rbp
    6cd6:	48 89 e5             	mov    %rsp,%rbp
    6cd9:	48 83 ec 20          	sub    $0x20,%rsp
    6cdd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6ce1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6ce8:	ff ff 0f 
    6ceb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6cef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cf3:	48 89 c7             	mov    %rax,%rdi
    6cf6:	e8 33 0a 00 00       	call   772e <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    6cfb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6cff:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6d03:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6d07:	48 89 d6             	mov    %rdx,%rsi
    6d0a:	48 89 c7             	mov    %rax,%rdi
    6d0d:	e8 2f 08 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    6d12:	48 8b 00             	mov    (%rax),%rax
      }
    6d15:	c9                   	leave
    6d16:	c3                   	ret
    6d17:	90                   	nop

0000000000006d18 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6d18:	55                   	push   %rbp
    6d19:	48 89 e5             	mov    %rsp,%rbp
    6d1c:	48 83 ec 10          	sub    $0x10,%rsp
    6d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6d28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d30:	48 89 d6             	mov    %rdx,%rsi
    6d33:	48 89 c7             	mov    %rax,%rdi
    6d36:	e8 1d f3 ff ff       	call   6058 <_ZNSaIPKcEC1ERKS1_>
    6d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d3f:	48 89 c7             	mov    %rax,%rdi
    6d42:	e8 01 0a 00 00       	call   7748 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6d47:	90                   	nop
    6d48:	c9                   	leave
    6d49:	c3                   	ret

0000000000006d4a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6d4a:	55                   	push   %rbp
    6d4b:	48 89 e5             	mov    %rsp,%rbp
    6d4e:	48 83 ec 10          	sub    $0x10,%rsp
    6d52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6d5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d62:	48 89 d6             	mov    %rdx,%rsi
    6d65:	48 89 c7             	mov    %rax,%rdi
    6d68:	e8 09 0a 00 00       	call   7776 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    6d6d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6d71:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d78:	48 8b 10             	mov    (%rax),%rdx
    6d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d7f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6d83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d87:	48 8b 00             	mov    (%rax),%rax
    6d8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d8e:	48 c1 e2 03          	shl    $0x3,%rdx
    6d92:	48 01 c2             	add    %rax,%rdx
    6d95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d99:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6d9d:	90                   	nop
    6d9e:	c9                   	leave
    6d9f:	c3                   	ret

0000000000006da0 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6da0:	55                   	push   %rbp
    6da1:	48 89 e5             	mov    %rsp,%rbp
    6da4:	48 83 ec 20          	sub    $0x20,%rsp
    6da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6db0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6db4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dbc:	48 89 d6             	mov    %rdx,%rsi
    6dbf:	48 89 c7             	mov    %rax,%rdi
    6dc2:	e8 e2 09 00 00       	call   77a9 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    6dc7:	c9                   	leave
    6dc8:	c3                   	ret
    6dc9:	90                   	nop

0000000000006dca <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    6dca:	55                   	push   %rbp
    6dcb:	48 89 e5             	mov    %rsp,%rbp
    6dce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6dd6:	90                   	nop
    6dd7:	5d                   	pop    %rbp
    6dd8:	c3                   	ret

0000000000006dd9 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6dd9:	55                   	push   %rbp
    6dda:	48 89 e5             	mov    %rsp,%rbp
    6ddd:	48 83 ec 20          	sub    $0x20,%rsp
    6de1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6de5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6de9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6ded:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6df1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6df9:	48 89 ce             	mov    %rcx,%rsi
    6dfc:	48 89 c7             	mov    %rax,%rdi
    6dff:	e8 ce 09 00 00       	call   77d2 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    6e04:	90                   	nop
    6e05:	c9                   	leave
    6e06:	c3                   	ret

0000000000006e07 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6e07:	55                   	push   %rbp
    6e08:	48 89 e5             	mov    %rsp,%rbp
    6e0b:	48 83 ec 20          	sub    $0x20,%rsp
    6e0f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6e13:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6e1a:	ff ff 0f 
    6e1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6e21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e25:	48 89 c7             	mov    %rax,%rdi
    6e28:	e8 d6 09 00 00       	call   7803 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    6e2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6e31:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6e35:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6e39:	48 89 d6             	mov    %rdx,%rsi
    6e3c:	48 89 c7             	mov    %rax,%rdi
    6e3f:	e8 fd 06 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    6e44:	48 8b 00             	mov    (%rax),%rax
      }
    6e47:	c9                   	leave
    6e48:	c3                   	ret
    6e49:	90                   	nop

0000000000006e4a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6e4a:	55                   	push   %rbp
    6e4b:	48 89 e5             	mov    %rsp,%rbp
    6e4e:	48 83 ec 10          	sub    $0x10,%rsp
    6e52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6e5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e62:	48 89 d6             	mov    %rdx,%rsi
    6e65:	48 89 c7             	mov    %rax,%rdi
    6e68:	e8 a7 f3 ff ff       	call   6214 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e71:	48 89 c7             	mov    %rax,%rdi
    6e74:	e8 a5 09 00 00       	call   781e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6e79:	90                   	nop
    6e7a:	c9                   	leave
    6e7b:	c3                   	ret

0000000000006e7c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6e7c:	55                   	push   %rbp
    6e7d:	48 89 e5             	mov    %rsp,%rbp
    6e80:	48 83 ec 10          	sub    $0x10,%rsp
    6e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6e8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e94:	48 89 d6             	mov    %rdx,%rsi
    6e97:	48 89 c7             	mov    %rax,%rdi
    6e9a:	e8 ad 09 00 00       	call   784c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    6e9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6ea3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6ea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eaa:	48 8b 10             	mov    (%rax),%rdx
    6ead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6eb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb9:	48 8b 00             	mov    (%rax),%rax
    6ebc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ec0:	48 c1 e2 03          	shl    $0x3,%rdx
    6ec4:	48 01 c2             	add    %rax,%rdx
    6ec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ecb:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6ecf:	90                   	nop
    6ed0:	c9                   	leave
    6ed1:	c3                   	ret

0000000000006ed2 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6ed2:	55                   	push   %rbp
    6ed3:	48 89 e5             	mov    %rsp,%rbp
    6ed6:	48 83 ec 20          	sub    $0x20,%rsp
    6eda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ede:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ee2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6ee6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eee:	48 89 d6             	mov    %rdx,%rsi
    6ef1:	48 89 c7             	mov    %rax,%rdi
    6ef4:	e8 86 09 00 00       	call   787f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    6ef9:	c9                   	leave
    6efa:	c3                   	ret

0000000000006efb <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6efb:	55                   	push   %rbp
    6efc:	48 89 e5             	mov    %rsp,%rbp
    6eff:	48 83 ec 10          	sub    $0x10,%rsp
    6f03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6f0b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f13:	48 89 d6             	mov    %rdx,%rsi
    6f16:	48 89 c7             	mov    %rax,%rdi
    6f19:	e8 8a 09 00 00       	call   78a8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    6f1e:	90                   	nop
    6f1f:	c9                   	leave
    6f20:	c3                   	ret
    6f21:	90                   	nop

0000000000006f22 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    6f22:	55                   	push   %rbp
    6f23:	48 89 e5             	mov    %rsp,%rbp
    6f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f2e:	90                   	nop
    6f2f:	5d                   	pop    %rbp
    6f30:	c3                   	ret

0000000000006f31 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6f31:	55                   	push   %rbp
    6f32:	48 89 e5             	mov    %rsp,%rbp
    6f35:	48 83 ec 20          	sub    $0x20,%rsp
    6f39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f3d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6f41:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6f45:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6f49:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f51:	48 89 ce             	mov    %rcx,%rsi
    6f54:	48 89 c7             	mov    %rax,%rdi
    6f57:	e8 5c 09 00 00       	call   78b8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    6f5c:	90                   	nop
    6f5d:	c9                   	leave
    6f5e:	c3                   	ret

0000000000006f5f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6f5f:	55                   	push   %rbp
    6f60:	48 89 e5             	mov    %rsp,%rbp
    6f63:	48 83 ec 20          	sub    $0x20,%rsp
    6f67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6f6b:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    6f72:	55 55 05 
    6f75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f7d:	48 89 c7             	mov    %rax,%rdi
    6f80:	e8 64 09 00 00       	call   78e9 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    6f85:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6f89:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6f8d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6f91:	48 89 d6             	mov    %rdx,%rsi
    6f94:	48 89 c7             	mov    %rax,%rdi
    6f97:	e8 a5 05 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    6f9c:	48 8b 00             	mov    (%rax),%rax
      }
    6f9f:	c9                   	leave
    6fa0:	c3                   	ret
    6fa1:	90                   	nop

0000000000006fa2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6fa2:	55                   	push   %rbp
    6fa3:	48 89 e5             	mov    %rsp,%rbp
    6fa6:	48 83 ec 10          	sub    $0x10,%rsp
    6faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6fb2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fba:	48 89 d6             	mov    %rdx,%rsi
    6fbd:	48 89 c7             	mov    %rax,%rdi
    6fc0:	e8 0b f4 ff ff       	call   63d0 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    6fc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fc9:	48 89 c7             	mov    %rax,%rdi
    6fcc:	e8 33 09 00 00       	call   7904 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    6fd1:	90                   	nop
    6fd2:	c9                   	leave
    6fd3:	c3                   	ret

0000000000006fd4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6fd4:	55                   	push   %rbp
    6fd5:	48 89 e5             	mov    %rsp,%rbp
    6fd8:	48 83 ec 10          	sub    $0x10,%rsp
    6fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fe0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6fe4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fec:	48 89 d6             	mov    %rdx,%rsi
    6fef:	48 89 c7             	mov    %rax,%rdi
    6ff2:	e8 3b 09 00 00       	call   7932 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    6ff7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6ffb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7002:	48 8b 10             	mov    (%rax),%rdx
    7005:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7009:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    700d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7011:	48 8b 08             	mov    (%rax),%rcx
    7014:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7018:	48 89 d0             	mov    %rdx,%rax
    701b:	48 01 c0             	add    %rax,%rax
    701e:	48 01 d0             	add    %rdx,%rax
    7021:	48 c1 e0 03          	shl    $0x3,%rax
    7025:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    7029:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    702d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7031:	90                   	nop
    7032:	c9                   	leave
    7033:	c3                   	ret

0000000000007034 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7034:	55                   	push   %rbp
    7035:	48 89 e5             	mov    %rsp,%rbp
    7038:	48 83 ec 20          	sub    $0x20,%rsp
    703c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7040:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7044:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7048:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    704c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7050:	48 89 d6             	mov    %rdx,%rsi
    7053:	48 89 c7             	mov    %rax,%rdi
    7056:	e8 0a 09 00 00       	call   7965 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    705b:	c9                   	leave
    705c:	c3                   	ret

000000000000705d <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    705d:	55                   	push   %rbp
    705e:	48 89 e5             	mov    %rsp,%rbp
    7061:	48 83 ec 10          	sub    $0x10,%rsp
    7065:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7069:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    706d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7075:	48 89 d6             	mov    %rdx,%rsi
    7078:	48 89 c7             	mov    %rax,%rdi
    707b:	e8 0e 09 00 00       	call   798e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    7080:	90                   	nop
    7081:	c9                   	leave
    7082:	c3                   	ret
    7083:	90                   	nop

0000000000007084 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    7084:	55                   	push   %rbp
    7085:	48 89 e5             	mov    %rsp,%rbp
    7088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    708c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7090:	90                   	nop
    7091:	5d                   	pop    %rbp
    7092:	c3                   	ret

0000000000007093 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7093:	55                   	push   %rbp
    7094:	48 89 e5             	mov    %rsp,%rbp
    7097:	48 83 ec 20          	sub    $0x20,%rsp
    709b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    709f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    70a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    70a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    70ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    70af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70b3:	48 89 ce             	mov    %rcx,%rsi
    70b6:	48 89 c7             	mov    %rax,%rdi
    70b9:	e8 e0 08 00 00       	call   799e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    70be:	90                   	nop
    70bf:	c9                   	leave
    70c0:	c3                   	ret

00000000000070c1 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    70c1:	55                   	push   %rbp
    70c2:	48 89 e5             	mov    %rsp,%rbp
    70c5:	48 83 ec 20          	sub    $0x20,%rsp
    70c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    70cd:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    70d4:	49 92 04 
    70d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    70db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70df:	48 89 c7             	mov    %rax,%rdi
    70e2:	e8 f0 08 00 00       	call   79d7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    70e7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    70eb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    70ef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    70f3:	48 89 d6             	mov    %rdx,%rsi
    70f6:	48 89 c7             	mov    %rax,%rdi
    70f9:	e8 43 04 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    70fe:	48 8b 00             	mov    (%rax),%rax
      }
    7101:	c9                   	leave
    7102:	c3                   	ret
    7103:	90                   	nop

0000000000007104 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7104:	55                   	push   %rbp
    7105:	48 89 e5             	mov    %rsp,%rbp
    7108:	48 83 ec 10          	sub    $0x10,%rsp
    710c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7110:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7114:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    711c:	48 89 d6             	mov    %rdx,%rsi
    711f:	48 89 c7             	mov    %rax,%rdi
    7122:	e8 17 f5 ff ff       	call   663e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    7127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    712b:	48 89 c7             	mov    %rax,%rdi
    712e:	e8 bf 08 00 00       	call   79f2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    7133:	90                   	nop
    7134:	c9                   	leave
    7135:	c3                   	ret

0000000000007136 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7136:	55                   	push   %rbp
    7137:	48 89 e5             	mov    %rsp,%rbp
    713a:	48 83 ec 10          	sub    $0x10,%rsp
    713e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7146:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    714a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    714e:	48 89 d6             	mov    %rdx,%rsi
    7151:	48 89 c7             	mov    %rax,%rdi
    7154:	e8 c7 08 00 00       	call   7a20 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    7159:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    715d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7164:	48 8b 10             	mov    (%rax),%rdx
    7167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    716b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    716f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7173:	48 8b 08             	mov    (%rax),%rcx
    7176:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    717a:	48 89 d0             	mov    %rdx,%rax
    717d:	48 c1 e0 03          	shl    $0x3,%rax
    7181:	48 29 d0             	sub    %rdx,%rax
    7184:	48 c1 e0 02          	shl    $0x2,%rax
    7188:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    718c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7190:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7194:	90                   	nop
    7195:	c9                   	leave
    7196:	c3                   	ret

0000000000007197 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7197:	55                   	push   %rbp
    7198:	48 89 e5             	mov    %rsp,%rbp
    719b:	48 83 ec 20          	sub    $0x20,%rsp
    719f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    71a7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    71ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71b3:	48 89 d6             	mov    %rdx,%rsi
    71b6:	48 89 c7             	mov    %rax,%rdi
    71b9:	e8 95 08 00 00       	call   7a53 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    71be:	c9                   	leave
    71bf:	c3                   	ret

00000000000071c0 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    71c0:	55                   	push   %rbp
    71c1:	48 89 e5             	mov    %rsp,%rbp
    71c4:	48 83 ec 10          	sub    $0x10,%rsp
    71c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    71d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71d8:	48 89 d6             	mov    %rdx,%rsi
    71db:	48 89 c7             	mov    %rax,%rdi
    71de:	e8 99 08 00 00       	call   7a7c <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    71e3:	90                   	nop
    71e4:	c9                   	leave
    71e5:	c3                   	ret

00000000000071e6 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    71e6:	55                   	push   %rbp
    71e7:	48 89 e5             	mov    %rsp,%rbp
    71ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    71ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71f2:	5d                   	pop    %rbp
    71f3:	c3                   	ret

00000000000071f4 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    71f4:	55                   	push   %rbp
    71f5:	48 89 e5             	mov    %rsp,%rbp
    71f8:	53                   	push   %rbx
    71f9:	48 83 ec 18          	sub    $0x18,%rsp
    71fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7201:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    7205:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7209:	48 89 c7             	mov    %rax,%rdi
    720c:	e8 eb f3 ff ff       	call   65fc <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    7211:	48 89 c3             	mov    %rax,%rbx
    7214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7218:	48 89 c7             	mov    %rax,%rdi
    721b:	e8 6b 08 00 00       	call   7a8b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    7220:	48 89 de             	mov    %rbx,%rsi
    7223:	48 89 c7             	mov    %rax,%rdi
    7226:	e8 6e 08 00 00       	call   7a99 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    722b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    722f:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    7233:	90                   	nop
    7234:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7238:	c9                   	leave
    7239:	c3                   	ret

000000000000723a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    723a:	55                   	push   %rbp
    723b:	48 89 e5             	mov    %rsp,%rbp
    723e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7242:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7246:	90                   	nop
    7247:	5d                   	pop    %rbp
    7248:	c3                   	ret

0000000000007249 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7249:	55                   	push   %rbp
    724a:	48 89 e5             	mov    %rsp,%rbp
    724d:	48 83 ec 20          	sub    $0x20,%rsp
    7251:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7255:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7259:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    725d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7261:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7269:	48 89 ce             	mov    %rcx,%rsi
    726c:	48 89 c7             	mov    %rax,%rdi
    726f:	e8 76 08 00 00       	call   7aea <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    7274:	90                   	nop
    7275:	c9                   	leave
    7276:	c3                   	ret

0000000000007277 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7277:	55                   	push   %rbp
    7278:	48 89 e5             	mov    %rsp,%rbp
    727b:	48 83 ec 20          	sub    $0x20,%rsp
    727f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7283:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    728a:	ff ff 0f 
    728d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7295:	48 89 c7             	mov    %rax,%rdi
    7298:	e8 87 08 00 00       	call   7b24 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    729d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    72a1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    72a5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    72a9:	48 89 d6             	mov    %rdx,%rsi
    72ac:	48 89 c7             	mov    %rax,%rdi
    72af:	e8 8d 02 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    72b4:	48 8b 00             	mov    (%rax),%rax
      }
    72b7:	c9                   	leave
    72b8:	c3                   	ret
    72b9:	90                   	nop

00000000000072ba <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    72ba:	55                   	push   %rbp
    72bb:	48 89 e5             	mov    %rsp,%rbp
    72be:	48 83 ec 10          	sub    $0x10,%rsp
    72c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    72ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    72ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72d2:	48 89 d6             	mov    %rdx,%rsi
    72d5:	48 89 c7             	mov    %rax,%rdi
    72d8:	e8 1d f5 ff ff       	call   67fa <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    72dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72e1:	48 89 c7             	mov    %rax,%rdi
    72e4:	e8 55 08 00 00       	call   7b3e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    72e9:	90                   	nop
    72ea:	c9                   	leave
    72eb:	c3                   	ret

00000000000072ec <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    72ec:	55                   	push   %rbp
    72ed:	48 89 e5             	mov    %rsp,%rbp
    72f0:	48 83 ec 10          	sub    $0x10,%rsp
    72f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    72fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7304:	48 89 d6             	mov    %rdx,%rsi
    7307:	48 89 c7             	mov    %rax,%rdi
    730a:	e8 5d 08 00 00       	call   7b6c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    730f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7313:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    731a:	48 8b 10             	mov    (%rax),%rdx
    731d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7321:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7329:	48 8b 00             	mov    (%rax),%rax
    732c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7330:	48 c1 e2 03          	shl    $0x3,%rdx
    7334:	48 01 c2             	add    %rax,%rdx
    7337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    733b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    733f:	90                   	nop
    7340:	c9                   	leave
    7341:	c3                   	ret

0000000000007342 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7342:	55                   	push   %rbp
    7343:	48 89 e5             	mov    %rsp,%rbp
    7346:	48 83 ec 20          	sub    $0x20,%rsp
    734a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    734e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7352:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7356:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    735a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    735e:	48 89 d6             	mov    %rdx,%rsi
    7361:	48 89 c7             	mov    %rax,%rdi
    7364:	e8 36 08 00 00       	call   7b9f <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    7369:	c9                   	leave
    736a:	c3                   	ret

000000000000736b <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    736b:	55                   	push   %rbp
    736c:	48 89 e5             	mov    %rsp,%rbp
    736f:	48 83 ec 10          	sub    $0x10,%rsp
    7373:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7377:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    737b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    737f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7383:	48 89 d6             	mov    %rdx,%rsi
    7386:	48 89 c7             	mov    %rax,%rdi
    7389:	e8 3a 08 00 00       	call   7bc8 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    738e:	90                   	nop
    738f:	c9                   	leave
    7390:	c3                   	ret
    7391:	90                   	nop

0000000000007392 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    7392:	55                   	push   %rbp
    7393:	48 89 e5             	mov    %rsp,%rbp
    7396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    739a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    739e:	90                   	nop
    739f:	5d                   	pop    %rbp
    73a0:	c3                   	ret

00000000000073a1 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    73a1:	55                   	push   %rbp
    73a2:	48 89 e5             	mov    %rsp,%rbp
    73a5:	48 83 ec 20          	sub    $0x20,%rsp
    73a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73b1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    73b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    73b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    73bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73c1:	48 89 ce             	mov    %rcx,%rsi
    73c4:	48 89 c7             	mov    %rax,%rdi
    73c7:	e8 0c 08 00 00       	call   7bd8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    73cc:	90                   	nop
    73cd:	c9                   	leave
    73ce:	c3                   	ret

00000000000073cf <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    73cf:	55                   	push   %rbp
    73d0:	48 89 e5             	mov    %rsp,%rbp
    73d3:	48 83 ec 20          	sub    $0x20,%rsp
    73d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    73db:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    73e2:	ff ff 1f 
    73e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    73e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    73ed:	48 89 c7             	mov    %rax,%rdi
    73f0:	e8 14 08 00 00       	call   7c09 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    73f5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    73f9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    73fd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7401:	48 89 d6             	mov    %rdx,%rsi
    7404:	48 89 c7             	mov    %rax,%rdi
    7407:	e8 35 01 00 00       	call   7541 <_ZSt3minImERKT_S2_S2_>
    740c:	48 8b 00             	mov    (%rax),%rax
      }
    740f:	c9                   	leave
    7410:	c3                   	ret
    7411:	90                   	nop

0000000000007412 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7412:	55                   	push   %rbp
    7413:	48 89 e5             	mov    %rsp,%rbp
    7416:	48 83 ec 10          	sub    $0x10,%rsp
    741a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    741e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7422:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    742a:	48 89 d6             	mov    %rdx,%rsi
    742d:	48 89 c7             	mov    %rax,%rdi
    7430:	e8 81 f5 ff ff       	call   69b6 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    7435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7439:	48 89 c7             	mov    %rax,%rdi
    743c:	e8 e3 07 00 00       	call   7c24 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    7441:	90                   	nop
    7442:	c9                   	leave
    7443:	c3                   	ret

0000000000007444 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7444:	55                   	push   %rbp
    7445:	48 89 e5             	mov    %rsp,%rbp
    7448:	48 83 ec 10          	sub    $0x10,%rsp
    744c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7450:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7454:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    745c:	48 89 d6             	mov    %rdx,%rsi
    745f:	48 89 c7             	mov    %rax,%rdi
    7462:	e8 eb 07 00 00       	call   7c52 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    7467:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    746b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    746e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7472:	48 8b 10             	mov    (%rax),%rdx
    7475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7479:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    747d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7481:	48 8b 00             	mov    (%rax),%rax
    7484:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7488:	48 c1 e2 02          	shl    $0x2,%rdx
    748c:	48 01 c2             	add    %rax,%rdx
    748f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7493:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7497:	90                   	nop
    7498:	c9                   	leave
    7499:	c3                   	ret

000000000000749a <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    749a:	55                   	push   %rbp
    749b:	48 89 e5             	mov    %rsp,%rbp
    749e:	48 83 ec 20          	sub    $0x20,%rsp
    74a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    74aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    74ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    74b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74b6:	48 89 d6             	mov    %rdx,%rsi
    74b9:	48 89 c7             	mov    %rax,%rdi
    74bc:	e8 c4 07 00 00       	call   7c85 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    74c1:	c9                   	leave
    74c2:	c3                   	ret

00000000000074c3 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    74c3:	55                   	push   %rbp
    74c4:	48 89 e5             	mov    %rsp,%rbp
    74c7:	48 83 ec 10          	sub    $0x10,%rsp
    74cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    74d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    74d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74db:	48 89 d6             	mov    %rdx,%rsi
    74de:	48 89 c7             	mov    %rax,%rdi
    74e1:	e8 c8 07 00 00       	call   7cae <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    74e6:	90                   	nop
    74e7:	c9                   	leave
    74e8:	c3                   	ret
    74e9:	90                   	nop

00000000000074ea <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    74ea:	55                   	push   %rbp
    74eb:	48 89 e5             	mov    %rsp,%rbp
    74ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    74f6:	90                   	nop
    74f7:	5d                   	pop    %rbp
    74f8:	c3                   	ret

00000000000074f9 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    74f9:	55                   	push   %rbp
    74fa:	48 89 e5             	mov    %rsp,%rbp
    74fd:	48 83 ec 20          	sub    $0x20,%rsp
    7501:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7505:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7509:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    750d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7511:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7519:	48 89 ce             	mov    %rcx,%rsi
    751c:	48 89 c7             	mov    %rax,%rdi
    751f:	e8 9a 07 00 00       	call   7cbe <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    7524:	90                   	nop
    7525:	c9                   	leave
    7526:	c3                   	ret

0000000000007527 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7527:	55                   	push   %rbp
    7528:	48 89 e5             	mov    %rsp,%rbp
    752b:	48 83 ec 10          	sub    $0x10,%rsp
    752f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7537:	48 89 c7             	mov    %rax,%rdi
    753a:	e8 b1 07 00 00       	call   7cf0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    753f:	c9                   	leave
    7540:	c3                   	ret

0000000000007541 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    7541:	55                   	push   %rbp
    7542:	48 89 e5             	mov    %rsp,%rbp
    7545:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7549:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    754d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7551:	48 8b 10             	mov    (%rax),%rdx
    7554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7558:	48 8b 00             	mov    (%rax),%rax
    755b:	48 39 c2             	cmp    %rax,%rdx
    755e:	73 06                	jae    7566 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    7560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7564:	eb 04                	jmp    756a <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    7566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    756a:	5d                   	pop    %rbp
    756b:	c3                   	ret

000000000000756c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    756c:	55                   	push   %rbp
    756d:	48 89 e5             	mov    %rsp,%rbp
    7570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7578:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    757f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7583:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    758a:	00 
    758b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    758f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7596:	00 
	{ }
    7597:	90                   	nop
    7598:	5d                   	pop    %rbp
    7599:	c3                   	ret

000000000000759a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    759a:	55                   	push   %rbp
    759b:	48 89 e5             	mov    %rsp,%rbp
    759e:	48 83 ec 10          	sub    $0x10,%rsp
    75a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    75aa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    75af:	74 15                	je     75c6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    75b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75b5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    75b9:	48 89 d6             	mov    %rdx,%rsi
    75bc:	48 89 c7             	mov    %rax,%rdi
    75bf:	e8 46 07 00 00       	call   7d0a <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    75c4:	eb 05                	jmp    75cb <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    75c6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    75cb:	c9                   	leave
    75cc:	c3                   	ret

00000000000075cd <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    75cd:	55                   	push   %rbp
    75ce:	48 89 e5             	mov    %rsp,%rbp
    75d1:	48 83 ec 20          	sub    $0x20,%rsp
    75d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    75dd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    75e1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    75e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75e9:	48 89 d6             	mov    %rdx,%rsi
    75ec:	48 89 c7             	mov    %rax,%rdi
    75ef:	e8 40 07 00 00       	call   7d34 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    75f4:	c9                   	leave
    75f5:	c3                   	ret

00000000000075f6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    75f6:	55                   	push   %rbp
    75f7:	48 89 e5             	mov    %rsp,%rbp
    75fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7602:	90                   	nop
    7603:	5d                   	pop    %rbp
    7604:	c3                   	ret
    7605:	90                   	nop

0000000000007606 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7606:	55                   	push   %rbp
    7607:	48 89 e5             	mov    %rsp,%rbp
    760a:	48 83 ec 20          	sub    $0x20,%rsp
    760e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7616:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    761a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    761e:	48 89 d0             	mov    %rdx,%rax
    7621:	48 c1 e0 06          	shl    $0x6,%rax
    7625:	48 01 d0             	add    %rdx,%rax
    7628:	48 c1 e0 03          	shl    $0x3,%rax
    762c:	48 89 c2             	mov    %rax,%rdx
    762f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7633:	48 89 d6             	mov    %rdx,%rsi
    7636:	48 89 c7             	mov    %rax,%rdi
    7639:	e8 a2 bc ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    763e:	c9                   	leave
    763f:	c3                   	ret

0000000000007640 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7640:	55                   	push   %rbp
    7641:	48 89 e5             	mov    %rsp,%rbp
    7644:	48 83 ec 10          	sub    $0x10,%rsp
    7648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    764c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7650:	48 89 c7             	mov    %rax,%rdi
    7653:	e8 3c 07 00 00       	call   7d94 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    7658:	c9                   	leave
    7659:	c3                   	ret

000000000000765a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    765a:	55                   	push   %rbp
    765b:	48 89 e5             	mov    %rsp,%rbp
    765e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7666:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    766d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7671:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7678:	00 
    7679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    767d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7684:	00 
	{ }
    7685:	90                   	nop
    7686:	5d                   	pop    %rbp
    7687:	c3                   	ret

0000000000007688 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7688:	55                   	push   %rbp
    7689:	48 89 e5             	mov    %rsp,%rbp
    768c:	48 83 ec 10          	sub    $0x10,%rsp
    7690:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7694:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7698:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    769d:	74 15                	je     76b4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    769f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    76a7:	48 89 d6             	mov    %rdx,%rsi
    76aa:	48 89 c7             	mov    %rax,%rdi
    76ad:	e8 fc 06 00 00       	call   7dae <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    76b2:	eb 05                	jmp    76b9 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    76b4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    76b9:	c9                   	leave
    76ba:	c3                   	ret

00000000000076bb <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    76bb:	55                   	push   %rbp
    76bc:	48 89 e5             	mov    %rsp,%rbp
    76bf:	48 83 ec 20          	sub    $0x20,%rsp
    76c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    76cb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    76cf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    76d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76d7:	48 89 d6             	mov    %rdx,%rsi
    76da:	48 89 c7             	mov    %rax,%rdi
    76dd:	e8 f6 06 00 00       	call   7dd8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    76e2:	c9                   	leave
    76e3:	c3                   	ret

00000000000076e4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    76e4:	55                   	push   %rbp
    76e5:	48 89 e5             	mov    %rsp,%rbp
    76e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    76f0:	90                   	nop
    76f1:	5d                   	pop    %rbp
    76f2:	c3                   	ret
    76f3:	90                   	nop

00000000000076f4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    76f4:	55                   	push   %rbp
    76f5:	48 89 e5             	mov    %rsp,%rbp
    76f8:	48 83 ec 20          	sub    $0x20,%rsp
    76fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7700:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7704:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7708:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    770c:	48 89 d0             	mov    %rdx,%rax
    770f:	48 c1 e0 06          	shl    $0x6,%rax
    7713:	48 01 d0             	add    %rdx,%rax
    7716:	48 c1 e0 02          	shl    $0x2,%rax
    771a:	48 89 c2             	mov    %rax,%rdx
    771d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7721:	48 89 d6             	mov    %rdx,%rsi
    7724:	48 89 c7             	mov    %rax,%rdi
    7727:	e8 b4 bb ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    772c:	c9                   	leave
    772d:	c3                   	ret

000000000000772e <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    772e:	55                   	push   %rbp
    772f:	48 89 e5             	mov    %rsp,%rbp
    7732:	48 83 ec 10          	sub    $0x10,%rsp
    7736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    773a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    773e:	48 89 c7             	mov    %rax,%rdi
    7741:	e8 f2 06 00 00       	call   7e38 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    7746:	c9                   	leave
    7747:	c3                   	ret

0000000000007748 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7748:	55                   	push   %rbp
    7749:	48 89 e5             	mov    %rsp,%rbp
    774c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7754:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    775b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    775f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7766:	00 
    7767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    776b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7772:	00 
	{ }
    7773:	90                   	nop
    7774:	5d                   	pop    %rbp
    7775:	c3                   	ret

0000000000007776 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7776:	55                   	push   %rbp
    7777:	48 89 e5             	mov    %rsp,%rbp
    777a:	48 83 ec 10          	sub    $0x10,%rsp
    777e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7782:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7786:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    778b:	74 15                	je     77a2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    778d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7791:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7795:	48 89 d6             	mov    %rdx,%rsi
    7798:	48 89 c7             	mov    %rax,%rdi
    779b:	e8 b2 06 00 00       	call   7e52 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    77a0:	eb 05                	jmp    77a7 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    77a2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    77a7:	c9                   	leave
    77a8:	c3                   	ret

00000000000077a9 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    77a9:	55                   	push   %rbp
    77aa:	48 89 e5             	mov    %rsp,%rbp
    77ad:	48 83 ec 20          	sub    $0x20,%rsp
    77b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    77b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    77b9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    77bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    77c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77c5:	48 89 d6             	mov    %rdx,%rsi
    77c8:	48 89 c7             	mov    %rax,%rdi
    77cb:	e8 ac 06 00 00       	call   7e7c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    77d0:	c9                   	leave
    77d1:	c3                   	ret

00000000000077d2 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    77d2:	55                   	push   %rbp
    77d3:	48 89 e5             	mov    %rsp,%rbp
    77d6:	48 83 ec 20          	sub    $0x20,%rsp
    77da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    77e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77ea:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    77f1:	00 
    77f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    77f6:	48 89 d6             	mov    %rdx,%rsi
    77f9:	48 89 c7             	mov    %rax,%rdi
    77fc:	e8 df ba ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    7801:	c9                   	leave
    7802:	c3                   	ret

0000000000007803 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7803:	55                   	push   %rbp
    7804:	48 89 e5             	mov    %rsp,%rbp
    7807:	48 83 ec 10          	sub    $0x10,%rsp
    780b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    780f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7813:	48 89 c7             	mov    %rax,%rdi
    7816:	e8 bf 06 00 00       	call   7eda <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    781b:	c9                   	leave
    781c:	c3                   	ret
    781d:	90                   	nop

000000000000781e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    781e:	55                   	push   %rbp
    781f:	48 89 e5             	mov    %rsp,%rbp
    7822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7826:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    782a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7835:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    783c:	00 
    783d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7841:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7848:	00 
	{ }
    7849:	90                   	nop
    784a:	5d                   	pop    %rbp
    784b:	c3                   	ret

000000000000784c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    784c:	55                   	push   %rbp
    784d:	48 89 e5             	mov    %rsp,%rbp
    7850:	48 83 ec 10          	sub    $0x10,%rsp
    7854:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7858:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    785c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7861:	74 15                	je     7878 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    7863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7867:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    786b:	48 89 d6             	mov    %rdx,%rsi
    786e:	48 89 c7             	mov    %rax,%rdi
    7871:	e8 7e 06 00 00       	call   7ef4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    7876:	eb 05                	jmp    787d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    7878:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    787d:	c9                   	leave
    787e:	c3                   	ret

000000000000787f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    787f:	55                   	push   %rbp
    7880:	48 89 e5             	mov    %rsp,%rbp
    7883:	48 83 ec 20          	sub    $0x20,%rsp
    7887:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    788b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    788f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7893:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7897:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    789b:	48 89 d6             	mov    %rdx,%rsi
    789e:	48 89 c7             	mov    %rax,%rdi
    78a1:	e8 78 06 00 00       	call   7f1e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    78a6:	c9                   	leave
    78a7:	c3                   	ret

00000000000078a8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    78a8:	55                   	push   %rbp
    78a9:	48 89 e5             	mov    %rsp,%rbp
    78ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78b4:	90                   	nop
    78b5:	5d                   	pop    %rbp
    78b6:	c3                   	ret
    78b7:	90                   	nop

00000000000078b8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    78b8:	55                   	push   %rbp
    78b9:	48 89 e5             	mov    %rsp,%rbp
    78bc:	48 83 ec 20          	sub    $0x20,%rsp
    78c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    78c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    78cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    78d7:	00 
    78d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    78dc:	48 89 d6             	mov    %rdx,%rsi
    78df:	48 89 c7             	mov    %rax,%rdi
    78e2:	e8 f9 b9 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    78e7:	c9                   	leave
    78e8:	c3                   	ret

00000000000078e9 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    78e9:	55                   	push   %rbp
    78ea:	48 89 e5             	mov    %rsp,%rbp
    78ed:	48 83 ec 10          	sub    $0x10,%rsp
    78f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    78f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f9:	48 89 c7             	mov    %rax,%rdi
    78fc:	e8 7b 06 00 00       	call   7f7c <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    7901:	c9                   	leave
    7902:	c3                   	ret
    7903:	90                   	nop

0000000000007904 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7904:	55                   	push   %rbp
    7905:	48 89 e5             	mov    %rsp,%rbp
    7908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    790c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7910:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    791b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7922:	00 
    7923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7927:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    792e:	00 
	{ }
    792f:	90                   	nop
    7930:	5d                   	pop    %rbp
    7931:	c3                   	ret

0000000000007932 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7932:	55                   	push   %rbp
    7933:	48 89 e5             	mov    %rsp,%rbp
    7936:	48 83 ec 10          	sub    $0x10,%rsp
    793a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    793e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7942:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7947:	74 15                	je     795e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    7949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    794d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7951:	48 89 d6             	mov    %rdx,%rsi
    7954:	48 89 c7             	mov    %rax,%rdi
    7957:	e8 3a 06 00 00       	call   7f96 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    795c:	eb 05                	jmp    7963 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    795e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7963:	c9                   	leave
    7964:	c3                   	ret

0000000000007965 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7965:	55                   	push   %rbp
    7966:	48 89 e5             	mov    %rsp,%rbp
    7969:	48 83 ec 20          	sub    $0x20,%rsp
    796d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7971:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7975:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7979:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    797d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7981:	48 89 d6             	mov    %rdx,%rsi
    7984:	48 89 c7             	mov    %rax,%rdi
    7987:	e8 34 06 00 00       	call   7fc0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    798c:	c9                   	leave
    798d:	c3                   	ret

000000000000798e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    798e:	55                   	push   %rbp
    798f:	48 89 e5             	mov    %rsp,%rbp
    7992:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7996:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    799a:	90                   	nop
    799b:	5d                   	pop    %rbp
    799c:	c3                   	ret
    799d:	90                   	nop

000000000000799e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    799e:	55                   	push   %rbp
    799f:	48 89 e5             	mov    %rsp,%rbp
    79a2:	48 83 ec 20          	sub    $0x20,%rsp
    79a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    79ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    79b2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79b6:	48 89 d0             	mov    %rdx,%rax
    79b9:	48 01 c0             	add    %rax,%rax
    79bc:	48 01 d0             	add    %rdx,%rax
    79bf:	48 c1 e0 03          	shl    $0x3,%rax
    79c3:	48 89 c2             	mov    %rax,%rdx
    79c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    79ca:	48 89 d6             	mov    %rdx,%rsi
    79cd:	48 89 c7             	mov    %rax,%rdi
    79d0:	e8 0b b9 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    79d5:	c9                   	leave
    79d6:	c3                   	ret

00000000000079d7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    79d7:	55                   	push   %rbp
    79d8:	48 89 e5             	mov    %rsp,%rbp
    79db:	48 83 ec 10          	sub    $0x10,%rsp
    79df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    79e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79e7:	48 89 c7             	mov    %rax,%rdi
    79ea:	e8 2f 06 00 00       	call   801e <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    79ef:	c9                   	leave
    79f0:	c3                   	ret
    79f1:	90                   	nop

00000000000079f2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    79f2:	55                   	push   %rbp
    79f3:	48 89 e5             	mov    %rsp,%rbp
    79f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    79fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79fe:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a09:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7a10:	00 
    7a11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a15:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7a1c:	00 
	{ }
    7a1d:	90                   	nop
    7a1e:	5d                   	pop    %rbp
    7a1f:	c3                   	ret

0000000000007a20 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7a20:	55                   	push   %rbp
    7a21:	48 89 e5             	mov    %rsp,%rbp
    7a24:	48 83 ec 10          	sub    $0x10,%rsp
    7a28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7a30:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7a35:	74 15                	je     7a4c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    7a37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7a3f:	48 89 d6             	mov    %rdx,%rsi
    7a42:	48 89 c7             	mov    %rax,%rdi
    7a45:	e8 ee 05 00 00       	call   8038 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    7a4a:	eb 05                	jmp    7a51 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    7a4c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7a51:	c9                   	leave
    7a52:	c3                   	ret

0000000000007a53 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7a53:	55                   	push   %rbp
    7a54:	48 89 e5             	mov    %rsp,%rbp
    7a57:	48 83 ec 20          	sub    $0x20,%rsp
    7a5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a5f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7a63:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7a67:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a6f:	48 89 d6             	mov    %rdx,%rsi
    7a72:	48 89 c7             	mov    %rax,%rdi
    7a75:	e8 e8 05 00 00       	call   8062 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    7a7a:	c9                   	leave
    7a7b:	c3                   	ret

0000000000007a7c <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    7a7c:	55                   	push   %rbp
    7a7d:	48 89 e5             	mov    %rsp,%rbp
    7a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a88:	90                   	nop
    7a89:	5d                   	pop    %rbp
    7a8a:	c3                   	ret

0000000000007a8b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7a8b:	55                   	push   %rbp
    7a8c:	48 89 e5             	mov    %rsp,%rbp
    7a8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a97:	5d                   	pop    %rbp
    7a98:	c3                   	ret

0000000000007a99 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7a99:	55                   	push   %rbp
    7a9a:	48 89 e5             	mov    %rsp,%rbp
    7a9d:	53                   	push   %rbx
    7a9e:	48 83 ec 18          	sub    $0x18,%rsp
    7aa2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7aa6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7aaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7aae:	48 89 c6             	mov    %rax,%rsi
    7ab1:	bf 18 00 00 00       	mov    $0x18,%edi
    7ab6:	e8 91 d3 ff ff       	call   4e4c <_ZnwmPv>
    7abb:	48 89 c3             	mov    %rax,%rbx
    7abe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ac2:	48 89 c7             	mov    %rax,%rdi
    7ac5:	e8 32 eb ff ff       	call   65fc <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    7aca:	48 89 c1             	mov    %rax,%rcx
    7acd:	48 8b 01             	mov    (%rcx),%rax
    7ad0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    7ad4:	48 89 03             	mov    %rax,(%rbx)
    7ad7:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7adb:	48 8b 41 10          	mov    0x10(%rcx),%rax
    7adf:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    7ae3:	90                   	nop
    7ae4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ae8:	c9                   	leave
    7ae9:	c3                   	ret

0000000000007aea <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7aea:	55                   	push   %rbp
    7aeb:	48 89 e5             	mov    %rsp,%rbp
    7aee:	48 83 ec 20          	sub    $0x20,%rsp
    7af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7af6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7afa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7afe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b02:	48 89 d0             	mov    %rdx,%rax
    7b05:	48 c1 e0 03          	shl    $0x3,%rax
    7b09:	48 29 d0             	sub    %rdx,%rax
    7b0c:	48 c1 e0 02          	shl    $0x2,%rax
    7b10:	48 89 c2             	mov    %rax,%rdx
    7b13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b17:	48 89 d6             	mov    %rdx,%rsi
    7b1a:	48 89 c7             	mov    %rax,%rdi
    7b1d:	e8 be b7 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    7b22:	c9                   	leave
    7b23:	c3                   	ret

0000000000007b24 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7b24:	55                   	push   %rbp
    7b25:	48 89 e5             	mov    %rsp,%rbp
    7b28:	48 83 ec 10          	sub    $0x10,%rsp
    7b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b34:	48 89 c7             	mov    %rax,%rdi
    7b37:	e8 6c 05 00 00       	call   80a8 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    7b3c:	c9                   	leave
    7b3d:	c3                   	ret

0000000000007b3e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7b3e:	55                   	push   %rbp
    7b3f:	48 89 e5             	mov    %rsp,%rbp
    7b42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b4a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b55:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7b5c:	00 
    7b5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b61:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7b68:	00 
	{ }
    7b69:	90                   	nop
    7b6a:	5d                   	pop    %rbp
    7b6b:	c3                   	ret

0000000000007b6c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7b6c:	55                   	push   %rbp
    7b6d:	48 89 e5             	mov    %rsp,%rbp
    7b70:	48 83 ec 10          	sub    $0x10,%rsp
    7b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7b7c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7b81:	74 15                	je     7b98 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    7b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b8b:	48 89 d6             	mov    %rdx,%rsi
    7b8e:	48 89 c7             	mov    %rax,%rdi
    7b91:	e8 2c 05 00 00       	call   80c2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    7b96:	eb 05                	jmp    7b9d <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    7b98:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7b9d:	c9                   	leave
    7b9e:	c3                   	ret

0000000000007b9f <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7b9f:	55                   	push   %rbp
    7ba0:	48 89 e5             	mov    %rsp,%rbp
    7ba3:	48 83 ec 20          	sub    $0x20,%rsp
    7ba7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7bab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7baf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7bb3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7bb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bbb:	48 89 d6             	mov    %rdx,%rsi
    7bbe:	48 89 c7             	mov    %rax,%rdi
    7bc1:	e8 26 05 00 00       	call   80ec <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    7bc6:	c9                   	leave
    7bc7:	c3                   	ret

0000000000007bc8 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    7bc8:	55                   	push   %rbp
    7bc9:	48 89 e5             	mov    %rsp,%rbp
    7bcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7bd4:	90                   	nop
    7bd5:	5d                   	pop    %rbp
    7bd6:	c3                   	ret
    7bd7:	90                   	nop

0000000000007bd8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7bd8:	55                   	push   %rbp
    7bd9:	48 89 e5             	mov    %rsp,%rbp
    7bdc:	48 83 ec 20          	sub    $0x20,%rsp
    7be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7be4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7be8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7bec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bf0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7bf7:	00 
    7bf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7bfc:	48 89 d6             	mov    %rdx,%rsi
    7bff:	48 89 c7             	mov    %rax,%rdi
    7c02:	e8 d9 b6 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    7c07:	c9                   	leave
    7c08:	c3                   	ret

0000000000007c09 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    7c09:	55                   	push   %rbp
    7c0a:	48 89 e5             	mov    %rsp,%rbp
    7c0d:	48 83 ec 10          	sub    $0x10,%rsp
    7c11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    7c15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c19:	48 89 c7             	mov    %rax,%rdi
    7c1c:	e8 29 05 00 00       	call   814a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    7c21:	c9                   	leave
    7c22:	c3                   	ret
    7c23:	90                   	nop

0000000000007c24 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    7c24:	55                   	push   %rbp
    7c25:	48 89 e5             	mov    %rsp,%rbp
    7c28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c30:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    7c37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c3b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    7c42:	00 
    7c43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c47:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7c4e:	00 
	{ }
    7c4f:	90                   	nop
    7c50:	5d                   	pop    %rbp
    7c51:	c3                   	ret

0000000000007c52 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    7c52:	55                   	push   %rbp
    7c53:	48 89 e5             	mov    %rsp,%rbp
    7c56:	48 83 ec 10          	sub    $0x10,%rsp
    7c5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    7c62:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7c67:	74 15                	je     7c7e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    7c69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c71:	48 89 d6             	mov    %rdx,%rsi
    7c74:	48 89 c7             	mov    %rax,%rdi
    7c77:	e8 e8 04 00 00       	call   8164 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    7c7c:	eb 05                	jmp    7c83 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    7c7e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7c83:	c9                   	leave
    7c84:	c3                   	ret

0000000000007c85 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    7c85:	55                   	push   %rbp
    7c86:	48 89 e5             	mov    %rsp,%rbp
    7c89:	48 83 ec 20          	sub    $0x20,%rsp
    7c8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7c91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    7c95:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7c99:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7c9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ca1:	48 89 d6             	mov    %rdx,%rsi
    7ca4:	48 89 c7             	mov    %rax,%rdi
    7ca7:	e8 e2 04 00 00       	call   818e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    7cac:	c9                   	leave
    7cad:	c3                   	ret

0000000000007cae <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    7cae:	55                   	push   %rbp
    7caf:	48 89 e5             	mov    %rsp,%rbp
    7cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7cba:	90                   	nop
    7cbb:	5d                   	pop    %rbp
    7cbc:	c3                   	ret
    7cbd:	90                   	nop

0000000000007cbe <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7cbe:	55                   	push   %rbp
    7cbf:	48 89 e5             	mov    %rsp,%rbp
    7cc2:	48 83 ec 20          	sub    $0x20,%rsp
    7cc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7cce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7cd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cd6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    7cdd:	00 
    7cde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7ce2:	48 89 d6             	mov    %rdx,%rsi
    7ce5:	48 89 c7             	mov    %rax,%rdi
    7ce8:	e8 f3 b5 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    7ced:	c9                   	leave
    7cee:	c3                   	ret
    7cef:	90                   	nop

0000000000007cf0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7cf0:	55                   	push   %rbp
    7cf1:	48 89 e5             	mov    %rsp,%rbp
    7cf4:	48 83 ec 10          	sub    $0x10,%rsp
    7cf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d00:	48 89 c7             	mov    %rax,%rdi
    7d03:	e8 e4 04 00 00       	call   81ec <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    7d08:	c9                   	leave
    7d09:	c3                   	ret

0000000000007d0a <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7d0a:	55                   	push   %rbp
    7d0b:	48 89 e5             	mov    %rsp,%rbp
    7d0e:	48 83 ec 10          	sub    $0x10,%rsp
    7d12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7d1a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d22:	ba 00 00 00 00       	mov    $0x0,%edx
    7d27:	48 89 ce             	mov    %rcx,%rsi
    7d2a:	48 89 c7             	mov    %rax,%rdi
    7d2d:	e8 ce 04 00 00       	call   8200 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    7d32:	c9                   	leave
    7d33:	c3                   	ret

0000000000007d34 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7d34:	55                   	push   %rbp
    7d35:	48 89 e5             	mov    %rsp,%rbp
    7d38:	48 83 ec 20          	sub    $0x20,%rsp
    7d3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7d40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7d44:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7d49:	74 43                	je     7d8e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7d4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d4f:	48 89 c7             	mov    %rax,%rdi
    7d52:	e8 14 05 00 00       	call   826b <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    7d57:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7d5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d5f:	48 89 c7             	mov    %rax,%rdi
    7d62:	e8 12 05 00 00       	call   8279 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7d67:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    7d6e:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    7d6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7d73:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7d77:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7d7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d7f:	48 89 ce             	mov    %rcx,%rsi
    7d82:	48 89 c7             	mov    %rax,%rdi
    7d85:	e8 49 05 00 00       	call   82d3 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    7d8a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7d8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7d92:	c9                   	leave
    7d93:	c3                   	ret

0000000000007d94 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7d94:	55                   	push   %rbp
    7d95:	48 89 e5             	mov    %rsp,%rbp
    7d98:	48 83 ec 10          	sub    $0x10,%rsp
    7d9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7da4:	48 89 c7             	mov    %rax,%rdi
    7da7:	e8 6c 05 00 00       	call   8318 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    7dac:	c9                   	leave
    7dad:	c3                   	ret

0000000000007dae <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7dae:	55                   	push   %rbp
    7daf:	48 89 e5             	mov    %rsp,%rbp
    7db2:	48 83 ec 10          	sub    $0x10,%rsp
    7db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7dba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7dbe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7dc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dc6:	ba 00 00 00 00       	mov    $0x0,%edx
    7dcb:	48 89 ce             	mov    %rcx,%rsi
    7dce:	48 89 c7             	mov    %rax,%rdi
    7dd1:	e8 56 05 00 00       	call   832c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    7dd6:	c9                   	leave
    7dd7:	c3                   	ret

0000000000007dd8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7dd8:	55                   	push   %rbp
    7dd9:	48 89 e5             	mov    %rsp,%rbp
    7ddc:	48 83 ec 20          	sub    $0x20,%rsp
    7de0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7de4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7de8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7ded:	74 43                	je     7e32 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7def:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7df3:	48 89 c7             	mov    %rax,%rdi
    7df6:	e8 9c 05 00 00       	call   8397 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    7dfb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7dff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e03:	48 89 c7             	mov    %rax,%rdi
    7e06:	e8 9a 05 00 00       	call   83a5 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7e0b:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    7e12:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    7e13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e17:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7e1b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7e1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e23:	48 89 ce             	mov    %rcx,%rsi
    7e26:	48 89 c7             	mov    %rax,%rdi
    7e29:	e8 d1 05 00 00       	call   83ff <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    7e2e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7e32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7e36:	c9                   	leave
    7e37:	c3                   	ret

0000000000007e38 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7e38:	55                   	push   %rbp
    7e39:	48 89 e5             	mov    %rsp,%rbp
    7e3c:	48 83 ec 10          	sub    $0x10,%rsp
    7e40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e48:	48 89 c7             	mov    %rax,%rdi
    7e4b:	e8 f4 05 00 00       	call   8444 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    7e50:	c9                   	leave
    7e51:	c3                   	ret

0000000000007e52 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    7e52:	55                   	push   %rbp
    7e53:	48 89 e5             	mov    %rsp,%rbp
    7e56:	48 83 ec 10          	sub    $0x10,%rsp
    7e5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7e62:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e6a:	ba 00 00 00 00       	mov    $0x0,%edx
    7e6f:	48 89 ce             	mov    %rcx,%rsi
    7e72:	48 89 c7             	mov    %rax,%rdi
    7e75:	e8 de 05 00 00       	call   8458 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    7e7a:	c9                   	leave
    7e7b:	c3                   	ret

0000000000007e7c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7e7c:	55                   	push   %rbp
    7e7d:	48 89 e5             	mov    %rsp,%rbp
    7e80:	48 83 ec 20          	sub    $0x20,%rsp
    7e84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e88:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7e8c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7e91:	74 40                	je     7ed3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    7e93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e97:	48 89 c7             	mov    %rax,%rdi
    7e9a:	e8 1a 06 00 00       	call   84b9 <_ZSt11__addressofIPKcEPT_RS2_>
    7e9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7ea3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea7:	48 89 c7             	mov    %rax,%rdi
    7eaa:	e8 18 06 00 00       	call   84c7 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    7eaf:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7eb4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7eb8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7ebc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ec0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ec4:	48 89 ce             	mov    %rcx,%rsi
    7ec7:	48 89 c7             	mov    %rax,%rdi
    7eca:	e8 1f 06 00 00       	call   84ee <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    7ecf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7ed3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7ed7:	c9                   	leave
    7ed8:	c3                   	ret
    7ed9:	90                   	nop

0000000000007eda <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7eda:	55                   	push   %rbp
    7edb:	48 89 e5             	mov    %rsp,%rbp
    7ede:	48 83 ec 10          	sub    $0x10,%rsp
    7ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7ee6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eea:	48 89 c7             	mov    %rax,%rdi
    7eed:	e8 40 06 00 00       	call   8532 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    7ef2:	c9                   	leave
    7ef3:	c3                   	ret

0000000000007ef4 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    7ef4:	55                   	push   %rbp
    7ef5:	48 89 e5             	mov    %rsp,%rbp
    7ef8:	48 83 ec 10          	sub    $0x10,%rsp
    7efc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7f04:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7f08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f0c:	ba 00 00 00 00       	mov    $0x0,%edx
    7f11:	48 89 ce             	mov    %rcx,%rsi
    7f14:	48 89 c7             	mov    %rax,%rdi
    7f17:	e8 2a 06 00 00       	call   8546 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    7f1c:	c9                   	leave
    7f1d:	c3                   	ret

0000000000007f1e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7f1e:	55                   	push   %rbp
    7f1f:	48 89 e5             	mov    %rsp,%rbp
    7f22:	48 83 ec 20          	sub    $0x20,%rsp
    7f26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7f2e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7f33:	74 40                	je     7f75 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    7f35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f39:	48 89 c7             	mov    %rax,%rdi
    7f3c:	e8 66 06 00 00       	call   85a7 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    7f41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7f45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f49:	48 89 c7             	mov    %rax,%rdi
    7f4c:	e8 64 06 00 00       	call   85b5 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    7f51:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7f56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f5a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7f5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f66:	48 89 ce             	mov    %rcx,%rsi
    7f69:	48 89 c7             	mov    %rax,%rdi
    7f6c:	e8 6b 06 00 00       	call   85dc <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    7f71:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7f75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7f79:	c9                   	leave
    7f7a:	c3                   	ret
    7f7b:	90                   	nop

0000000000007f7c <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7f7c:	55                   	push   %rbp
    7f7d:	48 89 e5             	mov    %rsp,%rbp
    7f80:	48 83 ec 10          	sub    $0x10,%rsp
    7f84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7f88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f8c:	48 89 c7             	mov    %rax,%rdi
    7f8f:	e8 8c 06 00 00       	call   8620 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7f94:	c9                   	leave
    7f95:	c3                   	ret

0000000000007f96 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7f96:	55                   	push   %rbp
    7f97:	48 89 e5             	mov    %rsp,%rbp
    7f9a:	48 83 ec 10          	sub    $0x10,%rsp
    7f9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fa2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7fa6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fae:	ba 00 00 00 00       	mov    $0x0,%edx
    7fb3:	48 89 ce             	mov    %rcx,%rsi
    7fb6:	48 89 c7             	mov    %rax,%rdi
    7fb9:	e8 76 06 00 00       	call   8634 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    7fbe:	c9                   	leave
    7fbf:	c3                   	ret

0000000000007fc0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7fc0:	55                   	push   %rbp
    7fc1:	48 89 e5             	mov    %rsp,%rbp
    7fc4:	48 83 ec 20          	sub    $0x20,%rsp
    7fc8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7fcc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7fd0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    7fd5:	74 40                	je     8017 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    7fd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fdb:	48 89 c7             	mov    %rax,%rdi
    7fde:	e8 a8 fa ff ff       	call   7a8b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    7fe3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7feb:	48 89 c7             	mov    %rax,%rdi
    7fee:	e8 ab 06 00 00       	call   869e <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7ff3:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7ff8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ffc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    8000:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8004:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8008:	48 89 ce             	mov    %rcx,%rsi
    800b:	48 89 c7             	mov    %rax,%rdi
    800e:	e8 d4 06 00 00       	call   86e7 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    8013:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    8017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    801b:	c9                   	leave
    801c:	c3                   	ret
    801d:	90                   	nop

000000000000801e <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    801e:	55                   	push   %rbp
    801f:	48 89 e5             	mov    %rsp,%rbp
    8022:	48 83 ec 10          	sub    $0x10,%rsp
    8026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    802a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    802e:	48 89 c7             	mov    %rax,%rdi
    8031:	e8 f6 06 00 00       	call   872c <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    8036:	c9                   	leave
    8037:	c3                   	ret

0000000000008038 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    8038:	55                   	push   %rbp
    8039:	48 89 e5             	mov    %rsp,%rbp
    803c:	48 83 ec 10          	sub    $0x10,%rsp
    8040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8044:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8048:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    804c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8050:	ba 00 00 00 00       	mov    $0x0,%edx
    8055:	48 89 ce             	mov    %rcx,%rsi
    8058:	48 89 c7             	mov    %rax,%rdi
    805b:	e8 e0 06 00 00       	call   8740 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    8060:	c9                   	leave
    8061:	c3                   	ret

0000000000008062 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    8062:	55                   	push   %rbp
    8063:	48 89 e5             	mov    %rsp,%rbp
    8066:	48 83 ec 20          	sub    $0x20,%rsp
    806a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    806e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    8072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8076:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    807a:	eb 1e                	jmp    809a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    807c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8080:	48 89 c7             	mov    %rax,%rdi
    8083:	e8 23 07 00 00       	call   87ab <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    8088:	48 89 c7             	mov    %rax,%rdi
    808b:	e8 29 07 00 00       	call   87b9 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    8090:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    8095:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    809a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    809f:	75 db                	jne    807c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    80a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    80a5:	c9                   	leave
    80a6:	c3                   	ret
    80a7:	90                   	nop

00000000000080a8 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    80a8:	55                   	push   %rbp
    80a9:	48 89 e5             	mov    %rsp,%rbp
    80ac:	48 83 ec 10          	sub    $0x10,%rsp
    80b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    80b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b8:	48 89 c7             	mov    %rax,%rdi
    80bb:	e8 22 07 00 00       	call   87e2 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    80c0:	c9                   	leave
    80c1:	c3                   	ret

00000000000080c2 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    80c2:	55                   	push   %rbp
    80c3:	48 89 e5             	mov    %rsp,%rbp
    80c6:	48 83 ec 10          	sub    $0x10,%rsp
    80ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    80d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    80d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80da:	ba 00 00 00 00       	mov    $0x0,%edx
    80df:	48 89 ce             	mov    %rcx,%rsi
    80e2:	48 89 c7             	mov    %rax,%rdi
    80e5:	e8 0c 07 00 00       	call   87f6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    80ea:	c9                   	leave
    80eb:	c3                   	ret

00000000000080ec <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    80ec:	55                   	push   %rbp
    80ed:	48 89 e5             	mov    %rsp,%rbp
    80f0:	48 83 ec 20          	sub    $0x20,%rsp
    80f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    80f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    80fc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    8101:	74 40                	je     8143 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    8103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8107:	48 89 c7             	mov    %rax,%rdi
    810a:	e8 48 07 00 00       	call   8857 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    810f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    8113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8117:	48 89 c7             	mov    %rax,%rdi
    811a:	e8 46 07 00 00       	call   8865 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    811f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    8124:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8128:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    812c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8130:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8134:	48 89 ce             	mov    %rcx,%rsi
    8137:	48 89 c7             	mov    %rax,%rdi
    813a:	e8 53 07 00 00       	call   8892 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    813f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    8143:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8147:	c9                   	leave
    8148:	c3                   	ret
    8149:	90                   	nop

000000000000814a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    814a:	55                   	push   %rbp
    814b:	48 89 e5             	mov    %rsp,%rbp
    814e:	48 83 ec 10          	sub    $0x10,%rsp
    8152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    8156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    815a:	48 89 c7             	mov    %rax,%rdi
    815d:	e8 74 07 00 00       	call   88d6 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    8162:	c9                   	leave
    8163:	c3                   	ret

0000000000008164 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    8164:	55                   	push   %rbp
    8165:	48 89 e5             	mov    %rsp,%rbp
    8168:	48 83 ec 10          	sub    $0x10,%rsp
    816c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8170:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8174:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    817c:	ba 00 00 00 00       	mov    $0x0,%edx
    8181:	48 89 ce             	mov    %rcx,%rsi
    8184:	48 89 c7             	mov    %rax,%rdi
    8187:	e8 5e 07 00 00       	call   88ea <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    818c:	c9                   	leave
    818d:	c3                   	ret

000000000000818e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    818e:	55                   	push   %rbp
    818f:	48 89 e5             	mov    %rsp,%rbp
    8192:	48 83 ec 20          	sub    $0x20,%rsp
    8196:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    819a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    819e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    81a3:	74 40                	je     81e5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    81a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81a9:	48 89 c7             	mov    %rax,%rdi
    81ac:	e8 9a 07 00 00       	call   894b <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    81b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    81b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81b9:	48 89 c7             	mov    %rax,%rdi
    81bc:	e8 98 07 00 00       	call   8959 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    81c1:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    81c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81ca:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    81ce:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    81d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81d6:	48 89 ce             	mov    %rcx,%rsi
    81d9:	48 89 c7             	mov    %rax,%rdi
    81dc:	e8 9e 07 00 00       	call   897f <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    81e1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    81e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    81e9:	c9                   	leave
    81ea:	c3                   	ret
    81eb:	90                   	nop

00000000000081ec <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    81ec:	55                   	push   %rbp
    81ed:	48 89 e5             	mov    %rsp,%rbp
    81f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    81f4:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    81fb:	03 3f 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    81fe:	5d                   	pop    %rbp
    81ff:	c3                   	ret

0000000000008200 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8200:	55                   	push   %rbp
    8201:	48 89 e5             	mov    %rsp,%rbp
    8204:	48 83 ec 20          	sub    $0x20,%rsp
    8208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    820c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8210:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8218:	48 89 c7             	mov    %rax,%rdi
    821b:	e8 cc ff ff ff       	call   81ec <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    8220:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8224:	0f 92 c0             	setb   %al
    8227:	0f b6 c0             	movzbl %al,%eax
    822a:	48 85 c0             	test   %rax,%rax
    822d:	0f 95 c0             	setne  %al
    8230:	84 c0                	test   %al,%al
    8232:	74 1a                	je     824e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8234:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    823b:	07 7e 00 
    823e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8242:	73 05                	jae    8249 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8244:	e8 b7 af ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8249:	e8 72 ae ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    824e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8252:	48 89 d0             	mov    %rdx,%rax
    8255:	48 c1 e0 06          	shl    $0x6,%rax
    8259:	48 01 d0             	add    %rdx,%rax
    825c:	48 c1 e0 03          	shl    $0x3,%rax
    8260:	48 89 c7             	mov    %rax,%rdi
    8263:	e8 68 b0 ff ff       	call   32d0 <_Znwm@plt>
    8268:	90                   	nop
      }
    8269:	c9                   	leave
    826a:	c3                   	ret

000000000000826b <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    826b:	55                   	push   %rbp
    826c:	48 89 e5             	mov    %rsp,%rbp
    826f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8277:	5d                   	pop    %rbp
    8278:	c3                   	ret

0000000000008279 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8279:	55                   	push   %rbp
    827a:	48 89 e5             	mov    %rsp,%rbp
    827d:	48 83 ec 10          	sub    $0x10,%rsp
    8281:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8285:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8289:	48 89 c6             	mov    %rax,%rsi
    828c:	bf 08 02 00 00       	mov    $0x208,%edi
    8291:	e8 b6 cb ff ff       	call   4e4c <_ZnwmPv>
    8296:	b9 08 02 00 00       	mov    $0x208,%ecx
    829b:	be 00 00 00 00       	mov    $0x0,%esi
    82a0:	48 89 30             	mov    %rsi,(%rax)
    82a3:	89 ca                	mov    %ecx,%edx
    82a5:	48 01 c2             	add    %rax,%rdx
    82a8:	48 83 c2 08          	add    $0x8,%rdx
    82ac:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    82b0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    82b4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    82b8:	48 29 d0             	sub    %rdx,%rax
    82bb:	01 c1                	add    %eax,%ecx
    82bd:	83 e1 f8             	and    $0xfffffff8,%ecx
    82c0:	89 c8                	mov    %ecx,%eax
    82c2:	c1 e8 03             	shr    $0x3,%eax
    82c5:	89 c1                	mov    %eax,%ecx
    82c7:	48 89 d7             	mov    %rdx,%rdi
    82ca:	48 89 f0             	mov    %rsi,%rax
    82cd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    82d0:	90                   	nop
    82d1:	c9                   	leave
    82d2:	c3                   	ret

00000000000082d3 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    82d3:	55                   	push   %rbp
    82d4:	48 89 e5             	mov    %rsp,%rbp
    82d7:	48 83 ec 20          	sub    $0x20,%rsp
    82db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    82e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    82e7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    82eb:	48 89 c7             	mov    %rax,%rdi
    82ee:	e8 d0 06 00 00       	call   89c3 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    82f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82f7:	48 89 c7             	mov    %rax,%rdi
    82fa:	e8 5f cb ff ff       	call   4e5e <_ZSt17__size_to_integerm>
    82ff:	48 89 c1             	mov    %rax,%rcx
    8302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8306:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    830a:	48 89 ce             	mov    %rcx,%rsi
    830d:	48 89 c7             	mov    %rax,%rdi
    8310:	e8 b9 06 00 00       	call   89ce <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    8315:	c9                   	leave
    8316:	c3                   	ret
    8317:	90                   	nop

0000000000008318 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8318:	55                   	push   %rbp
    8319:	48 89 e5             	mov    %rsp,%rbp
    831c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8320:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    8327:	07 7e 00 
      }
    832a:	5d                   	pop    %rbp
    832b:	c3                   	ret

000000000000832c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    832c:	55                   	push   %rbp
    832d:	48 89 e5             	mov    %rsp,%rbp
    8330:	48 83 ec 20          	sub    $0x20,%rsp
    8334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8338:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    833c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8344:	48 89 c7             	mov    %rax,%rdi
    8347:	e8 cc ff ff ff       	call   8318 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    834c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8350:	0f 92 c0             	setb   %al
    8353:	0f b6 c0             	movzbl %al,%eax
    8356:	48 85 c0             	test   %rax,%rax
    8359:	0f 95 c0             	setne  %al
    835c:	84 c0                	test   %al,%al
    835e:	74 1a                	je     837a <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8360:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    8367:	0f fc 00 
    836a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    836e:	73 05                	jae    8375 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8370:	e8 8b ae ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8375:	e8 46 ad ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    837a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    837e:	48 89 d0             	mov    %rdx,%rax
    8381:	48 c1 e0 06          	shl    $0x6,%rax
    8385:	48 01 d0             	add    %rdx,%rax
    8388:	48 c1 e0 02          	shl    $0x2,%rax
    838c:	48 89 c7             	mov    %rax,%rdi
    838f:	e8 3c af ff ff       	call   32d0 <_Znwm@plt>
    8394:	90                   	nop
      }
    8395:	c9                   	leave
    8396:	c3                   	ret

0000000000008397 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8397:	55                   	push   %rbp
    8398:	48 89 e5             	mov    %rsp,%rbp
    839b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    839f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83a3:	5d                   	pop    %rbp
    83a4:	c3                   	ret

00000000000083a5 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    83a5:	55                   	push   %rbp
    83a6:	48 89 e5             	mov    %rsp,%rbp
    83a9:	48 83 ec 10          	sub    $0x10,%rsp
    83ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    83b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b5:	48 89 c6             	mov    %rax,%rsi
    83b8:	bf 04 01 00 00       	mov    $0x104,%edi
    83bd:	e8 8a ca ff ff       	call   4e4c <_ZnwmPv>
    83c2:	b9 04 01 00 00       	mov    $0x104,%ecx
    83c7:	be 00 00 00 00       	mov    $0x0,%esi
    83cc:	48 89 30             	mov    %rsi,(%rax)
    83cf:	89 ca                	mov    %ecx,%edx
    83d1:	48 01 c2             	add    %rax,%rdx
    83d4:	48 83 c2 08          	add    $0x8,%rdx
    83d8:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    83dc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    83e0:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    83e4:	48 29 d0             	sub    %rdx,%rax
    83e7:	01 c1                	add    %eax,%ecx
    83e9:	83 e1 f8             	and    $0xfffffff8,%ecx
    83ec:	89 c8                	mov    %ecx,%eax
    83ee:	c1 e8 03             	shr    $0x3,%eax
    83f1:	89 c1                	mov    %eax,%ecx
    83f3:	48 89 d7             	mov    %rdx,%rdi
    83f6:	48 89 f0             	mov    %rsi,%rax
    83f9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    83fc:	90                   	nop
    83fd:	c9                   	leave
    83fe:	c3                   	ret

00000000000083ff <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    83ff:	55                   	push   %rbp
    8400:	48 89 e5             	mov    %rsp,%rbp
    8403:	48 83 ec 20          	sub    $0x20,%rsp
    8407:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    840b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    840f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8413:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8417:	48 89 c7             	mov    %rax,%rdi
    841a:	e8 1e 06 00 00       	call   8a3d <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    841f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8423:	48 89 c7             	mov    %rax,%rdi
    8426:	e8 33 ca ff ff       	call   4e5e <_ZSt17__size_to_integerm>
    842b:	48 89 c1             	mov    %rax,%rcx
    842e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8432:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8436:	48 89 ce             	mov    %rcx,%rsi
    8439:	48 89 c7             	mov    %rax,%rdi
    843c:	e8 07 06 00 00       	call   8a48 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    8441:	c9                   	leave
    8442:	c3                   	ret
    8443:	90                   	nop

0000000000008444 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8444:	55                   	push   %rbp
    8445:	48 89 e5             	mov    %rsp,%rbp
    8448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    844c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    8453:	ff ff 0f 
      }
    8456:	5d                   	pop    %rbp
    8457:	c3                   	ret

0000000000008458 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8458:	55                   	push   %rbp
    8459:	48 89 e5             	mov    %rsp,%rbp
    845c:	48 83 ec 20          	sub    $0x20,%rsp
    8460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8464:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8468:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    846c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8470:	48 89 c7             	mov    %rax,%rdi
    8473:	e8 cc ff ff ff       	call   8444 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    8478:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    847c:	0f 92 c0             	setb   %al
    847f:	0f b6 c0             	movzbl %al,%eax
    8482:	48 85 c0             	test   %rax,%rax
    8485:	0f 95 c0             	setne  %al
    8488:	84 c0                	test   %al,%al
    848a:	74 1a                	je     84a6 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    848c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8493:	ff ff 1f 
    8496:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    849a:	73 05                	jae    84a1 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    849c:	e8 5f ad ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    84a1:	e8 1a ac ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    84a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    84aa:	48 c1 e0 03          	shl    $0x3,%rax
    84ae:	48 89 c7             	mov    %rax,%rdi
    84b1:	e8 1a ae ff ff       	call   32d0 <_Znwm@plt>
    84b6:	90                   	nop
      }
    84b7:	c9                   	leave
    84b8:	c3                   	ret

00000000000084b9 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    84b9:	55                   	push   %rbp
    84ba:	48 89 e5             	mov    %rsp,%rbp
    84bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    84c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84c5:	5d                   	pop    %rbp
    84c6:	c3                   	ret

00000000000084c7 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    84c7:	55                   	push   %rbp
    84c8:	48 89 e5             	mov    %rsp,%rbp
    84cb:	48 83 ec 10          	sub    $0x10,%rsp
    84cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    84d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d7:	48 89 c6             	mov    %rax,%rsi
    84da:	bf 08 00 00 00       	mov    $0x8,%edi
    84df:	e8 68 c9 ff ff       	call   4e4c <_ZnwmPv>
    84e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    84eb:	90                   	nop
    84ec:	c9                   	leave
    84ed:	c3                   	ret

00000000000084ee <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    84ee:	55                   	push   %rbp
    84ef:	48 89 e5             	mov    %rsp,%rbp
    84f2:	48 83 ec 20          	sub    $0x20,%rsp
    84f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    84fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8502:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8506:	48 89 c7             	mov    %rax,%rdi
    8509:	e8 a9 05 00 00       	call   8ab7 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    850e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8512:	48 89 c7             	mov    %rax,%rdi
    8515:	e8 44 c9 ff ff       	call   4e5e <_ZSt17__size_to_integerm>
    851a:	48 89 c1             	mov    %rax,%rcx
    851d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8521:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8525:	48 89 ce             	mov    %rcx,%rsi
    8528:	48 89 c7             	mov    %rax,%rdi
    852b:	e8 92 05 00 00       	call   8ac2 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    8530:	c9                   	leave
    8531:	c3                   	ret

0000000000008532 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8532:	55                   	push   %rbp
    8533:	48 89 e5             	mov    %rsp,%rbp
    8536:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    853a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    8541:	ff ff 0f 
      }
    8544:	5d                   	pop    %rbp
    8545:	c3                   	ret

0000000000008546 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8546:	55                   	push   %rbp
    8547:	48 89 e5             	mov    %rsp,%rbp
    854a:	48 83 ec 20          	sub    $0x20,%rsp
    854e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8552:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8556:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    855a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    855e:	48 89 c7             	mov    %rax,%rdi
    8561:	e8 cc ff ff ff       	call   8532 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    8566:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    856a:	0f 92 c0             	setb   %al
    856d:	0f b6 c0             	movzbl %al,%eax
    8570:	48 85 c0             	test   %rax,%rax
    8573:	0f 95 c0             	setne  %al
    8576:	84 c0                	test   %al,%al
    8578:	74 1a                	je     8594 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    857a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8581:	ff ff 1f 
    8584:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8588:	73 05                	jae    858f <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    858a:	e8 71 ac ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    858f:	e8 2c ab ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8594:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8598:	48 c1 e0 03          	shl    $0x3,%rax
    859c:	48 89 c7             	mov    %rax,%rdi
    859f:	e8 2c ad ff ff       	call   32d0 <_Znwm@plt>
    85a4:	90                   	nop
      }
    85a5:	c9                   	leave
    85a6:	c3                   	ret

00000000000085a7 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    85a7:	55                   	push   %rbp
    85a8:	48 89 e5             	mov    %rsp,%rbp
    85ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    85af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85b3:	5d                   	pop    %rbp
    85b4:	c3                   	ret

00000000000085b5 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    85b5:	55                   	push   %rbp
    85b6:	48 89 e5             	mov    %rsp,%rbp
    85b9:	48 83 ec 10          	sub    $0x10,%rsp
    85bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    85c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c5:	48 89 c6             	mov    %rax,%rsi
    85c8:	bf 08 00 00 00       	mov    $0x8,%edi
    85cd:	e8 7a c8 ff ff       	call   4e4c <_ZnwmPv>
    85d2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    85d9:	90                   	nop
    85da:	c9                   	leave
    85db:	c3                   	ret

00000000000085dc <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    85dc:	55                   	push   %rbp
    85dd:	48 89 e5             	mov    %rsp,%rbp
    85e0:	48 83 ec 20          	sub    $0x20,%rsp
    85e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    85ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    85f0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    85f4:	48 89 c7             	mov    %rax,%rdi
    85f7:	e8 23 05 00 00       	call   8b1f <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    85fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8600:	48 89 c7             	mov    %rax,%rdi
    8603:	e8 56 c8 ff ff       	call   4e5e <_ZSt17__size_to_integerm>
    8608:	48 89 c1             	mov    %rax,%rcx
    860b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    860f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8613:	48 89 ce             	mov    %rcx,%rsi
    8616:	48 89 c7             	mov    %rax,%rdi
    8619:	e8 0c 05 00 00       	call   8b2a <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    861e:	c9                   	leave
    861f:	c3                   	ret

0000000000008620 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    8620:	55                   	push   %rbp
    8621:	48 89 e5             	mov    %rsp,%rbp
    8624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8628:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    862f:	55 55 05 
      }
    8632:	5d                   	pop    %rbp
    8633:	c3                   	ret

0000000000008634 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8634:	55                   	push   %rbp
    8635:	48 89 e5             	mov    %rsp,%rbp
    8638:	48 83 ec 20          	sub    $0x20,%rsp
    863c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8640:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8644:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    864c:	48 89 c7             	mov    %rax,%rdi
    864f:	e8 cc ff ff ff       	call   8620 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    8654:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8658:	0f 92 c0             	setb   %al
    865b:	0f b6 c0             	movzbl %al,%eax
    865e:	48 85 c0             	test   %rax,%rax
    8661:	0f 95 c0             	setne  %al
    8664:	84 c0                	test   %al,%al
    8666:	74 1a                	je     8682 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8668:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    866f:	aa aa 0a 
    8672:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8676:	73 05                	jae    867d <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8678:	e8 83 ab ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    867d:	e8 3e aa ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8682:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8686:	48 89 d0             	mov    %rdx,%rax
    8689:	48 01 c0             	add    %rax,%rax
    868c:	48 01 d0             	add    %rdx,%rax
    868f:	48 c1 e0 03          	shl    $0x3,%rax
    8693:	48 89 c7             	mov    %rax,%rdi
    8696:	e8 35 ac ff ff       	call   32d0 <_Znwm@plt>
    869b:	90                   	nop
      }
    869c:	c9                   	leave
    869d:	c3                   	ret

000000000000869e <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    869e:	55                   	push   %rbp
    869f:	48 89 e5             	mov    %rsp,%rbp
    86a2:	48 83 ec 10          	sub    $0x10,%rsp
    86a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    86aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ae:	48 89 c6             	mov    %rax,%rsi
    86b1:	bf 18 00 00 00       	mov    $0x18,%edi
    86b6:	e8 91 c7 ff ff       	call   4e4c <_ZnwmPv>
    86bb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    86c1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    86c8:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    86cf:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    86d6:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    86dd:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    86e4:	90                   	nop
    86e5:	c9                   	leave
    86e6:	c3                   	ret

00000000000086e7 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    86e7:	55                   	push   %rbp
    86e8:	48 89 e5             	mov    %rsp,%rbp
    86eb:	48 83 ec 20          	sub    $0x20,%rsp
    86ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    86f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    86fb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    86ff:	48 89 c7             	mov    %rax,%rdi
    8702:	e8 80 04 00 00       	call   8b87 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    8707:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    870b:	48 89 c7             	mov    %rax,%rdi
    870e:	e8 4b c7 ff ff       	call   4e5e <_ZSt17__size_to_integerm>
    8713:	48 89 c1             	mov    %rax,%rcx
    8716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    871a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    871e:	48 89 ce             	mov    %rcx,%rsi
    8721:	48 89 c7             	mov    %rax,%rdi
    8724:	e8 69 04 00 00       	call   8b92 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    8729:	c9                   	leave
    872a:	c3                   	ret
    872b:	90                   	nop

000000000000872c <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    872c:	55                   	push   %rbp
    872d:	48 89 e5             	mov    %rsp,%rbp
    8730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    8734:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    873b:	49 92 04 
      }
    873e:	5d                   	pop    %rbp
    873f:	c3                   	ret

0000000000008740 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8740:	55                   	push   %rbp
    8741:	48 89 e5             	mov    %rsp,%rbp
    8744:	48 83 ec 20          	sub    $0x20,%rsp
    8748:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    874c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8750:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8758:	48 89 c7             	mov    %rax,%rdi
    875b:	e8 cc ff ff ff       	call   872c <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    8760:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8764:	0f 92 c0             	setb   %al
    8767:	0f b6 c0             	movzbl %al,%eax
    876a:	48 85 c0             	test   %rax,%rax
    876d:	0f 95 c0             	setne  %al
    8770:	84 c0                	test   %al,%al
    8772:	74 1a                	je     878e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    8774:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    877b:	92 24 09 
    877e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8782:	73 05                	jae    8789 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    8784:	e8 77 aa ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8789:	e8 32 a9 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    878e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8792:	48 89 d0             	mov    %rdx,%rax
    8795:	48 c1 e0 03          	shl    $0x3,%rax
    8799:	48 29 d0             	sub    %rdx,%rax
    879c:	48 c1 e0 02          	shl    $0x2,%rax
    87a0:	48 89 c7             	mov    %rax,%rdi
    87a3:	e8 28 ab ff ff       	call   32d0 <_Znwm@plt>
    87a8:	90                   	nop
      }
    87a9:	c9                   	leave
    87aa:	c3                   	ret

00000000000087ab <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    87ab:	55                   	push   %rbp
    87ac:	48 89 e5             	mov    %rsp,%rbp
    87af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    87b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87b7:	5d                   	pop    %rbp
    87b8:	c3                   	ret

00000000000087b9 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    87b9:	55                   	push   %rbp
    87ba:	48 89 e5             	mov    %rsp,%rbp
    87bd:	48 83 ec 10          	sub    $0x10,%rsp
    87c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    87c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87c9:	48 89 c6             	mov    %rax,%rsi
    87cc:	bf 1c 00 00 00       	mov    $0x1c,%edi
    87d1:	e8 76 c6 ff ff       	call   4e4c <_ZnwmPv>
    87d6:	48 89 c7             	mov    %rax,%rdi
    87d9:	e8 7e 04 00 00       	call   8c5c <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    87de:	90                   	nop
    87df:	c9                   	leave
    87e0:	c3                   	ret
    87e1:	90                   	nop

00000000000087e2 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    87e2:	55                   	push   %rbp
    87e3:	48 89 e5             	mov    %rsp,%rbp
    87e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    87ea:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    87f1:	ff ff 0f 
      }
    87f4:	5d                   	pop    %rbp
    87f5:	c3                   	ret

00000000000087f6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    87f6:	55                   	push   %rbp
    87f7:	48 89 e5             	mov    %rsp,%rbp
    87fa:	48 83 ec 20          	sub    $0x20,%rsp
    87fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8802:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8806:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    880a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    880e:	48 89 c7             	mov    %rax,%rdi
    8811:	e8 cc ff ff ff       	call   87e2 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    8816:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    881a:	0f 92 c0             	setb   %al
    881d:	0f b6 c0             	movzbl %al,%eax
    8820:	48 85 c0             	test   %rax,%rax
    8823:	0f 95 c0             	setne  %al
    8826:	84 c0                	test   %al,%al
    8828:	74 1a                	je     8844 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    882a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8831:	ff ff 1f 
    8834:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8838:	73 05                	jae    883f <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    883a:	e8 c1 a9 ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    883f:	e8 7c a8 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8844:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8848:	48 c1 e0 03          	shl    $0x3,%rax
    884c:	48 89 c7             	mov    %rax,%rdi
    884f:	e8 7c aa ff ff       	call   32d0 <_Znwm@plt>
    8854:	90                   	nop
      }
    8855:	c9                   	leave
    8856:	c3                   	ret

0000000000008857 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8857:	55                   	push   %rbp
    8858:	48 89 e5             	mov    %rsp,%rbp
    885b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    885f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8863:	5d                   	pop    %rbp
    8864:	c3                   	ret

0000000000008865 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8865:	55                   	push   %rbp
    8866:	48 89 e5             	mov    %rsp,%rbp
    8869:	48 83 ec 10          	sub    $0x10,%rsp
    886d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8871:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8875:	48 89 c6             	mov    %rax,%rsi
    8878:	bf 08 00 00 00       	mov    $0x8,%edi
    887d:	e8 ca c5 ff ff       	call   4e4c <_ZnwmPv>
    8882:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    8888:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    888f:	90                   	nop
    8890:	c9                   	leave
    8891:	c3                   	ret

0000000000008892 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    8892:	55                   	push   %rbp
    8893:	48 89 e5             	mov    %rsp,%rbp
    8896:	48 83 ec 20          	sub    $0x20,%rsp
    889a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    889e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    88a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    88a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    88aa:	48 89 c7             	mov    %rax,%rdi
    88ad:	e8 c5 03 00 00       	call   8c77 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    88b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88b6:	48 89 c7             	mov    %rax,%rdi
    88b9:	e8 a0 c5 ff ff       	call   4e5e <_ZSt17__size_to_integerm>
    88be:	48 89 c1             	mov    %rax,%rcx
    88c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    88c9:	48 89 ce             	mov    %rcx,%rsi
    88cc:	48 89 c7             	mov    %rax,%rdi
    88cf:	e8 ae 03 00 00       	call   8c82 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    88d4:	c9                   	leave
    88d5:	c3                   	ret

00000000000088d6 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    88d6:	55                   	push   %rbp
    88d7:	48 89 e5             	mov    %rsp,%rbp
    88da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    88de:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    88e5:	ff ff 1f 
      }
    88e8:	5d                   	pop    %rbp
    88e9:	c3                   	ret

00000000000088ea <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    88ea:	55                   	push   %rbp
    88eb:	48 89 e5             	mov    %rsp,%rbp
    88ee:	48 83 ec 20          	sub    $0x20,%rsp
    88f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    88fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    88fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8902:	48 89 c7             	mov    %rax,%rdi
    8905:	e8 cc ff ff ff       	call   88d6 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    890a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    890e:	0f 92 c0             	setb   %al
    8911:	0f b6 c0             	movzbl %al,%eax
    8914:	48 85 c0             	test   %rax,%rax
    8917:	0f 95 c0             	setne  %al
    891a:	84 c0                	test   %al,%al
    891c:	74 1a                	je     8938 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    891e:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    8925:	ff ff 3f 
    8928:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    892c:	73 05                	jae    8933 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    892e:	e8 cd a8 ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    8933:	e8 88 a7 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    8938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    893c:	48 c1 e0 02          	shl    $0x2,%rax
    8940:	48 89 c7             	mov    %rax,%rdi
    8943:	e8 88 a9 ff ff       	call   32d0 <_Znwm@plt>
    8948:	90                   	nop
      }
    8949:	c9                   	leave
    894a:	c3                   	ret

000000000000894b <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    894b:	55                   	push   %rbp
    894c:	48 89 e5             	mov    %rsp,%rbp
    894f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8957:	5d                   	pop    %rbp
    8958:	c3                   	ret

0000000000008959 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8959:	55                   	push   %rbp
    895a:	48 89 e5             	mov    %rsp,%rbp
    895d:	48 83 ec 10          	sub    $0x10,%rsp
    8961:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8969:	48 89 c6             	mov    %rax,%rsi
    896c:	bf 04 00 00 00       	mov    $0x4,%edi
    8971:	e8 d6 c4 ff ff       	call   4e4c <_ZnwmPv>
    8976:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    897c:	90                   	nop
    897d:	c9                   	leave
    897e:	c3                   	ret

000000000000897f <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    897f:	55                   	push   %rbp
    8980:	48 89 e5             	mov    %rsp,%rbp
    8983:	48 83 ec 20          	sub    $0x20,%rsp
    8987:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    898b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    898f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    8993:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8997:	48 89 c7             	mov    %rax,%rdi
    899a:	e8 40 03 00 00       	call   8cdf <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    899f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89a3:	48 89 c7             	mov    %rax,%rdi
    89a6:	e8 b3 c4 ff ff       	call   4e5e <_ZSt17__size_to_integerm>
    89ab:	48 89 c1             	mov    %rax,%rcx
    89ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89b2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    89b6:	48 89 ce             	mov    %rcx,%rsi
    89b9:	48 89 c7             	mov    %rax,%rdi
    89bc:	e8 29 03 00 00       	call   8cea <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    89c1:	c9                   	leave
    89c2:	c3                   	ret

00000000000089c3 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    89c3:	55                   	push   %rbp
    89c4:	48 89 e5             	mov    %rsp,%rbp
    89c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    89cb:	90                   	nop
    89cc:	5d                   	pop    %rbp
    89cd:	c3                   	ret

00000000000089ce <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    89ce:	55                   	push   %rbp
    89cf:	48 89 e5             	mov    %rsp,%rbp
    89d2:	48 83 ec 20          	sub    $0x20,%rsp
    89d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    89de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    89e2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    89e7:	75 06                	jne    89ef <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    89e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89ed:	eb 4c                	jmp    8a3b <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    89ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    89f3:	48 89 d0             	mov    %rdx,%rax
    89f6:	48 c1 e0 06          	shl    $0x6,%rax
    89fa:	48 01 d0             	add    %rdx,%rax
    89fd:	48 c1 e0 03          	shl    $0x3,%rax
    8a01:	48 89 c2             	mov    %rax,%rdx
    8a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a08:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8a0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8a10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a14:	48 89 ce             	mov    %rcx,%rsi
    8a17:	48 89 c7             	mov    %rax,%rdi
    8a1a:	e8 28 03 00 00       	call   8d47 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8a1f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a23:	48 89 d0             	mov    %rdx,%rax
    8a26:	48 c1 e0 06          	shl    $0x6,%rax
    8a2a:	48 01 d0             	add    %rdx,%rax
    8a2d:	48 c1 e0 03          	shl    $0x3,%rax
    8a31:	48 89 c2             	mov    %rax,%rdx
    8a34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a38:	48 01 d0             	add    %rdx,%rax
    }
    8a3b:	c9                   	leave
    8a3c:	c3                   	ret

0000000000008a3d <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8a3d:	55                   	push   %rbp
    8a3e:	48 89 e5             	mov    %rsp,%rbp
    8a41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8a45:	90                   	nop
    8a46:	5d                   	pop    %rbp
    8a47:	c3                   	ret

0000000000008a48 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8a48:	55                   	push   %rbp
    8a49:	48 89 e5             	mov    %rsp,%rbp
    8a4c:	48 83 ec 20          	sub    $0x20,%rsp
    8a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8a58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8a5c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8a61:	75 06                	jne    8a69 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a67:	eb 4c                	jmp    8ab5 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    8a69:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a6d:	48 89 d0             	mov    %rdx,%rax
    8a70:	48 c1 e0 06          	shl    $0x6,%rax
    8a74:	48 01 d0             	add    %rdx,%rax
    8a77:	48 c1 e0 02          	shl    $0x2,%rax
    8a7b:	48 89 c2             	mov    %rax,%rdx
    8a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a82:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8a86:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a8e:	48 89 ce             	mov    %rcx,%rsi
    8a91:	48 89 c7             	mov    %rax,%rdi
    8a94:	e8 dc 02 00 00       	call   8d75 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8a99:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a9d:	48 89 d0             	mov    %rdx,%rax
    8aa0:	48 c1 e0 06          	shl    $0x6,%rax
    8aa4:	48 01 d0             	add    %rdx,%rax
    8aa7:	48 c1 e0 02          	shl    $0x2,%rax
    8aab:	48 89 c2             	mov    %rax,%rdx
    8aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ab2:	48 01 d0             	add    %rdx,%rax
    }
    8ab5:	c9                   	leave
    8ab6:	c3                   	ret

0000000000008ab7 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    8ab7:	55                   	push   %rbp
    8ab8:	48 89 e5             	mov    %rsp,%rbp
    8abb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8abf:	90                   	nop
    8ac0:	5d                   	pop    %rbp
    8ac1:	c3                   	ret

0000000000008ac2 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8ac2:	55                   	push   %rbp
    8ac3:	48 89 e5             	mov    %rsp,%rbp
    8ac6:	48 83 ec 20          	sub    $0x20,%rsp
    8aca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ace:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ad2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8ad6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8adb:	75 06                	jne    8ae3 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ae1:	eb 3a                	jmp    8b1d <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ae7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8aee:	00 
    8aef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8af3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8af7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aff:	48 89 ce             	mov    %rcx,%rsi
    8b02:	48 89 c7             	mov    %rax,%rdi
    8b05:	e8 99 02 00 00       	call   8da3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    8b0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b0e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8b15:	00 
    8b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b1a:	48 01 d0             	add    %rdx,%rax
    }
    8b1d:	c9                   	leave
    8b1e:	c3                   	ret

0000000000008b1f <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    8b1f:	55                   	push   %rbp
    8b20:	48 89 e5             	mov    %rsp,%rbp
    8b23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8b27:	90                   	nop
    8b28:	5d                   	pop    %rbp
    8b29:	c3                   	ret

0000000000008b2a <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8b2a:	55                   	push   %rbp
    8b2b:	48 89 e5             	mov    %rsp,%rbp
    8b2e:	48 83 ec 20          	sub    $0x20,%rsp
    8b32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8b3e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8b43:	75 06                	jne    8b4b <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b49:	eb 3a                	jmp    8b85 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8b4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b4f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8b56:	00 
    8b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b5b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8b5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b67:	48 89 ce             	mov    %rcx,%rsi
    8b6a:	48 89 c7             	mov    %rax,%rdi
    8b6d:	e8 5f 02 00 00       	call   8dd1 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    8b72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b76:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8b7d:	00 
    8b7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b82:	48 01 d0             	add    %rdx,%rax
    }
    8b85:	c9                   	leave
    8b86:	c3                   	ret

0000000000008b87 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8b87:	55                   	push   %rbp
    8b88:	48 89 e5             	mov    %rsp,%rbp
    8b8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8b8f:	90                   	nop
    8b90:	5d                   	pop    %rbp
    8b91:	c3                   	ret

0000000000008b92 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8b92:	55                   	push   %rbp
    8b93:	48 89 e5             	mov    %rsp,%rbp
    8b96:	48 83 ec 20          	sub    $0x20,%rsp
    8b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ba2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8ba6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8bab:	75 06                	jne    8bb3 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb1:	eb 4a                	jmp    8bfd <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    8bb3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8bb7:	48 89 d0             	mov    %rdx,%rax
    8bba:	48 01 c0             	add    %rax,%rax
    8bbd:	48 01 d0             	add    %rdx,%rax
    8bc0:	48 c1 e0 03          	shl    $0x3,%rax
    8bc4:	48 89 c2             	mov    %rax,%rdx
    8bc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bcb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8bcf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bd7:	48 89 ce             	mov    %rcx,%rsi
    8bda:	48 89 c7             	mov    %rax,%rdi
    8bdd:	e8 1d 02 00 00       	call   8dff <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8be2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8be6:	48 89 d0             	mov    %rdx,%rax
    8be9:	48 01 c0             	add    %rax,%rax
    8bec:	48 01 d0             	add    %rdx,%rax
    8bef:	48 c1 e0 03          	shl    $0x3,%rax
    8bf3:	48 89 c2             	mov    %rax,%rdx
    8bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bfa:	48 01 d0             	add    %rdx,%rax
    }
    8bfd:	c9                   	leave
    8bfe:	c3                   	ret
    8bff:	90                   	nop

0000000000008c00 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    8c00:	55                   	push   %rbp
    8c01:	48 89 e5             	mov    %rsp,%rbp
    8c04:	48 83 ec 10          	sub    $0x10,%rsp
    8c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c10:	48 89 c7             	mov    %rax,%rdi
    8c13:	e8 16 02 00 00       	call   8e2e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    8c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c1c:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    8c20:	90                   	nop
    8c21:	c9                   	leave
    8c22:	c3                   	ret
    8c23:	90                   	nop

0000000000008c24 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    8c24:	55                   	push   %rbp
    8c25:	48 89 e5             	mov    %rsp,%rbp
    8c28:	48 83 ec 10          	sub    $0x10,%rsp
    8c2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c34:	48 89 c7             	mov    %rax,%rdi
    8c37:	e8 c4 ff ff ff       	call   8c00 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    8c3c:	90                   	nop
    8c3d:	c9                   	leave
    8c3e:	c3                   	ret
    8c3f:	90                   	nop

0000000000008c40 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    8c40:	55                   	push   %rbp
    8c41:	48 89 e5             	mov    %rsp,%rbp
    8c44:	48 83 ec 10          	sub    $0x10,%rsp
    8c48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c50:	48 89 c7             	mov    %rax,%rdi
    8c53:	e8 cc ff ff ff       	call   8c24 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    8c58:	90                   	nop
    8c59:	c9                   	leave
    8c5a:	c3                   	ret
    8c5b:	90                   	nop

0000000000008c5c <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    8c5c:	55                   	push   %rbp
    8c5d:	48 89 e5             	mov    %rsp,%rbp
    8c60:	48 83 ec 10          	sub    $0x10,%rsp
    8c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c6c:	48 89 c7             	mov    %rax,%rdi
    8c6f:	e8 cc ff ff ff       	call   8c40 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    8c74:	90                   	nop
    8c75:	c9                   	leave
    8c76:	c3                   	ret

0000000000008c77 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8c77:	55                   	push   %rbp
    8c78:	48 89 e5             	mov    %rsp,%rbp
    8c7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8c7f:	90                   	nop
    8c80:	5d                   	pop    %rbp
    8c81:	c3                   	ret

0000000000008c82 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8c82:	55                   	push   %rbp
    8c83:	48 89 e5             	mov    %rsp,%rbp
    8c86:	48 83 ec 20          	sub    $0x20,%rsp
    8c8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8c92:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8c96:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8c9b:	75 06                	jne    8ca3 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca1:	eb 3a                	jmp    8cdd <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8ca3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ca7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8cae:	00 
    8caf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cb3:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8cb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cbf:	48 89 ce             	mov    %rcx,%rsi
    8cc2:	48 89 c7             	mov    %rax,%rdi
    8cc5:	e8 6f 01 00 00       	call   8e39 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    8cca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cce:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8cd5:	00 
    8cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cda:	48 01 d0             	add    %rdx,%rax
    }
    8cdd:	c9                   	leave
    8cde:	c3                   	ret

0000000000008cdf <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    8cdf:	55                   	push   %rbp
    8ce0:	48 89 e5             	mov    %rsp,%rbp
    8ce3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8ce7:	90                   	nop
    8ce8:	5d                   	pop    %rbp
    8ce9:	c3                   	ret

0000000000008cea <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8cea:	55                   	push   %rbp
    8ceb:	48 89 e5             	mov    %rsp,%rbp
    8cee:	48 83 ec 20          	sub    $0x20,%rsp
    8cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cfa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8cfe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8d03:	75 06                	jne    8d0b <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d09:	eb 3a                	jmp    8d45 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8d0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d0f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8d16:	00 
    8d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d1b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8d1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d27:	48 89 ce             	mov    %rcx,%rsi
    8d2a:	48 89 c7             	mov    %rax,%rdi
    8d2d:	e8 35 01 00 00       	call   8e67 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    8d32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d36:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8d3d:	00 
    8d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d42:	48 01 d0             	add    %rdx,%rax
    }
    8d45:	c9                   	leave
    8d46:	c3                   	ret

0000000000008d47 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8d47:	55                   	push   %rbp
    8d48:	48 89 e5             	mov    %rsp,%rbp
    8d4b:	48 83 ec 20          	sub    $0x20,%rsp
    8d4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d57:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8d5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d5f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d67:	48 89 ce             	mov    %rcx,%rsi
    8d6a:	48 89 c7             	mov    %rax,%rdi
    8d6d:	e8 23 01 00 00       	call   8e95 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8d72:	90                   	nop
    8d73:	c9                   	leave
    8d74:	c3                   	ret

0000000000008d75 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8d75:	55                   	push   %rbp
    8d76:	48 89 e5             	mov    %rsp,%rbp
    8d79:	48 83 ec 20          	sub    $0x20,%rsp
    8d7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d85:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8d89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d8d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d95:	48 89 ce             	mov    %rcx,%rsi
    8d98:	48 89 c7             	mov    %rax,%rdi
    8d9b:	e8 6d 01 00 00       	call   8f0d <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8da0:	90                   	nop
    8da1:	c9                   	leave
    8da2:	c3                   	ret

0000000000008da3 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8da3:	55                   	push   %rbp
    8da4:	48 89 e5             	mov    %rsp,%rbp
    8da7:	48 83 ec 20          	sub    $0x20,%rsp
    8dab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8daf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8db3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8db7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8dbb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8dbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dc3:	48 89 ce             	mov    %rcx,%rsi
    8dc6:	48 89 c7             	mov    %rax,%rdi
    8dc9:	e8 b7 01 00 00       	call   8f85 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    8dce:	90                   	nop
    8dcf:	c9                   	leave
    8dd0:	c3                   	ret

0000000000008dd1 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8dd1:	55                   	push   %rbp
    8dd2:	48 89 e5             	mov    %rsp,%rbp
    8dd5:	48 83 ec 20          	sub    $0x20,%rsp
    8dd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ddd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8de1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8de5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8de9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8df1:	48 89 ce             	mov    %rcx,%rsi
    8df4:	48 89 c7             	mov    %rax,%rdi
    8df7:	e8 c4 01 00 00       	call   8fc0 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    8dfc:	90                   	nop
    8dfd:	c9                   	leave
    8dfe:	c3                   	ret

0000000000008dff <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8dff:	55                   	push   %rbp
    8e00:	48 89 e5             	mov    %rsp,%rbp
    8e03:	48 83 ec 20          	sub    $0x20,%rsp
    8e07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8e13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e1f:	48 89 ce             	mov    %rcx,%rsi
    8e22:	48 89 c7             	mov    %rax,%rdi
    8e25:	e8 d1 01 00 00       	call   8ffb <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8e2a:	90                   	nop
    8e2b:	c9                   	leave
    8e2c:	c3                   	ret
    8e2d:	90                   	nop

0000000000008e2e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    8e2e:	55                   	push   %rbp
    8e2f:	48 89 e5             	mov    %rsp,%rbp
    8e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e36:	90                   	nop
    8e37:	5d                   	pop    %rbp
    8e38:	c3                   	ret

0000000000008e39 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8e39:	55                   	push   %rbp
    8e3a:	48 89 e5             	mov    %rsp,%rbp
    8e3d:	48 83 ec 20          	sub    $0x20,%rsp
    8e41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e49:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8e4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e51:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e59:	48 89 ce             	mov    %rcx,%rsi
    8e5c:	48 89 c7             	mov    %rax,%rdi
    8e5f:	e8 da 01 00 00       	call   903e <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8e64:	90                   	nop
    8e65:	c9                   	leave
    8e66:	c3                   	ret

0000000000008e67 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8e67:	55                   	push   %rbp
    8e68:	48 89 e5             	mov    %rsp,%rbp
    8e6b:	48 83 ec 20          	sub    $0x20,%rsp
    8e6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e77:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8e7b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e7f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e87:	48 89 ce             	mov    %rcx,%rsi
    8e8a:	48 89 c7             	mov    %rax,%rdi
    8e8d:	e8 df 01 00 00       	call   9071 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8e92:	90                   	nop
    8e93:	c9                   	leave
    8e94:	c3                   	ret

0000000000008e95 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8e95:	55                   	push   %rbp
    8e96:	48 89 e5             	mov    %rsp,%rbp
    8e99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e9d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8ea1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    8ea5:	eb 58                	jmp    8eff <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    8ea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8eaf:	b9 08 02 00 00       	mov    $0x208,%ecx
    8eb4:	48 8b 32             	mov    (%rdx),%rsi
    8eb7:	48 89 30             	mov    %rsi,(%rax)
    8eba:	89 ce                	mov    %ecx,%esi
    8ebc:	48 01 c6             	add    %rax,%rsi
    8ebf:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    8ec3:	89 ce                	mov    %ecx,%esi
    8ec5:	48 01 d6             	add    %rdx,%rsi
    8ec8:	48 83 c6 08          	add    $0x8,%rsi
    8ecc:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    8ed0:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    8ed4:	48 8d 78 08          	lea    0x8(%rax),%rdi
    8ed8:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    8edc:	48 29 f8             	sub    %rdi,%rax
    8edf:	48 29 c2             	sub    %rax,%rdx
    8ee2:	01 c1                	add    %eax,%ecx
    8ee4:	83 e1 f8             	and    $0xfffffff8,%ecx
    8ee7:	89 c8                	mov    %ecx,%eax
    8ee9:	c1 e8 03             	shr    $0x3,%eax
    8eec:	89 c0                	mov    %eax,%eax
    8eee:	48 89 d6             	mov    %rdx,%rsi
    8ef1:	48 89 c1             	mov    %rax,%rcx
    8ef4:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    8ef7:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    8efe:	00 
    8eff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f03:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8f07:	75 9e                	jne    8ea7 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    8f09:	90                   	nop
    8f0a:	90                   	nop
    8f0b:	5d                   	pop    %rbp
    8f0c:	c3                   	ret

0000000000008f0d <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8f0d:	55                   	push   %rbp
    8f0e:	48 89 e5             	mov    %rsp,%rbp
    8f11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f19:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    8f1d:	eb 58                	jmp    8f77 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    8f1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f27:	b9 04 01 00 00       	mov    $0x104,%ecx
    8f2c:	48 8b 32             	mov    (%rdx),%rsi
    8f2f:	48 89 30             	mov    %rsi,(%rax)
    8f32:	89 ce                	mov    %ecx,%esi
    8f34:	48 01 c6             	add    %rax,%rsi
    8f37:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    8f3b:	89 ce                	mov    %ecx,%esi
    8f3d:	48 01 d6             	add    %rdx,%rsi
    8f40:	48 83 c6 08          	add    $0x8,%rsi
    8f44:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    8f48:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    8f4c:	48 8d 78 08          	lea    0x8(%rax),%rdi
    8f50:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    8f54:	48 29 f8             	sub    %rdi,%rax
    8f57:	48 29 c2             	sub    %rax,%rdx
    8f5a:	01 c1                	add    %eax,%ecx
    8f5c:	83 e1 f8             	and    $0xfffffff8,%ecx
    8f5f:	89 c8                	mov    %ecx,%eax
    8f61:	c1 e8 03             	shr    $0x3,%eax
    8f64:	89 c0                	mov    %eax,%eax
    8f66:	48 89 d6             	mov    %rdx,%rsi
    8f69:	48 89 c1             	mov    %rax,%rcx
    8f6c:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    8f6f:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    8f76:	00 
    8f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f7b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8f7f:	75 9e                	jne    8f1f <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    8f81:	90                   	nop
    8f82:	90                   	nop
    8f83:	5d                   	pop    %rbp
    8f84:	c3                   	ret

0000000000008f85 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8f85:	55                   	push   %rbp
    8f86:	48 89 e5             	mov    %rsp,%rbp
    8f89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    8f95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f99:	48 8b 00             	mov    (%rax),%rax
    8f9c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    8fa0:	eb 10                	jmp    8fb2 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    8fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fa6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8faa:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    8fad:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    8fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fb6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    8fba:	75 e6                	jne    8fa2 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    8fbc:	90                   	nop
    8fbd:	90                   	nop
    8fbe:	5d                   	pop    %rbp
    8fbf:	c3                   	ret

0000000000008fc0 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8fc0:	55                   	push   %rbp
    8fc1:	48 89 e5             	mov    %rsp,%rbp
    8fc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8fc8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8fcc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    8fd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8fd4:	48 8b 00             	mov    (%rax),%rax
    8fd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    8fdb:	eb 10                	jmp    8fed <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    8fdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fe1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8fe5:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    8fe8:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    8fed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ff1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    8ff5:	75 e6                	jne    8fdd <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    8ff7:	90                   	nop
    8ff8:	90                   	nop
    8ff9:	5d                   	pop    %rbp
    8ffa:	c3                   	ret

0000000000008ffb <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    8ffb:	55                   	push   %rbp
    8ffc:	48 89 e5             	mov    %rsp,%rbp
    8fff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9003:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9007:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    900b:	eb 23                	jmp    9030 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    900d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9011:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    9015:	48 8b 06             	mov    (%rsi),%rax
    9018:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    901c:	48 89 01             	mov    %rax,(%rcx)
    901f:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    9023:	48 8b 46 10          	mov    0x10(%rsi),%rax
    9027:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    902b:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    9030:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9034:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9038:	75 d3                	jne    900d <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    903a:	90                   	nop
    903b:	90                   	nop
    903c:	5d                   	pop    %rbp
    903d:	c3                   	ret

000000000000903e <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    903e:	55                   	push   %rbp
    903f:	48 89 e5             	mov    %rsp,%rbp
    9042:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9046:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    904a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    904e:	eb 13                	jmp    9063 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    9050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9054:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9058:	48 8b 12             	mov    (%rdx),%rdx
    905b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    905e:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    9063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9067:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    906b:	75 e3                	jne    9050 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    906d:	90                   	nop
    906e:	90                   	nop
    906f:	5d                   	pop    %rbp
    9070:	c3                   	ret

0000000000009071 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    9071:	55                   	push   %rbp
    9072:	48 89 e5             	mov    %rsp,%rbp
    9075:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9079:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    907d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    9081:	eb 11                	jmp    9094 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    9083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9087:	8b 10                	mov    (%rax),%edx
    9089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    908d:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    908f:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    9094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9098:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    909c:	75 e5                	jne    9083 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    909e:	90                   	nop
    909f:	90                   	nop
    90a0:	5d                   	pop    %rbp
    90a1:	c3                   	ret

00000000000090a2 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    90a2:	55                   	push   %rbp
    90a3:	48 89 e5             	mov    %rsp,%rbp
    90a6:	53                   	push   %rbx
    90a7:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    90ab:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    90af:	be 00 00 00 00       	mov    $0x0,%esi
    90b4:	48 89 c7             	mov    %rax,%rdi
    90b7:	e8 d4 a2 ff ff       	call   3390 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    90bc:	8b 45 c8             	mov    -0x38(%rbp),%eax
    90bf:	89 c3                	mov    %eax,%ebx
    90c1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    90c5:	48 89 c7             	mov    %rax,%rdi
    90c8:	e8 7f be ff ff       	call   4f4c <_ZNSaI17VkLayerPropertiesEC1Ev>
    90cd:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    90d1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    90d5:	48 89 de             	mov    %rbx,%rsi
    90d8:	48 89 c7             	mov    %rax,%rdi
    90db:	e8 a4 be ff ff       	call   4f84 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    90e0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    90e4:	48 89 c7             	mov    %rax,%rdi
    90e7:	e8 7c be ff ff       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    90ec:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    90f0:	48 89 c7             	mov    %rax,%rdi
    90f3:	e8 46 bf ff ff       	call   503e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    90f8:	48 89 c2             	mov    %rax,%rdx
    90fb:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    90ff:	48 89 d6             	mov    %rdx,%rsi
    9102:	48 89 c7             	mov    %rax,%rdi
    9105:	e8 86 a2 ff ff       	call   3390 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    910a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    910e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9112:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9116:	48 89 c7             	mov    %rax,%rdi
    9119:	e8 64 04 00 00       	call   9582 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    911e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    9122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9126:	48 89 c7             	mov    %rax,%rdi
    9129:	e8 7a 04 00 00       	call   95a8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    912e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    9132:	eb 5b                	jmp    918f <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    9134:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    9138:	48 89 c7             	mov    %rax,%rdi
    913b:	e8 f0 04 00 00       	call   9630 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    9140:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    9144:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9148:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    914c:	48 89 d6             	mov    %rdx,%rsi
    914f:	48 89 c7             	mov    %rax,%rdi
    9152:	e8 f9 03 00 00       	call   9550 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    9157:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    915b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    915f:	48 8b 3d 3a 2b 01 00 	mov    0x12b3a(%rip),%rdi        # 1bca0 <_ZN3vkh19validationLayerNameE>
    9166:	48 8b 35 3b 2b 01 00 	mov    0x12b3b(%rip),%rsi        # 1bca8 <_ZN3vkh19validationLayerNameE+0x8>
    916d:	48 89 d1             	mov    %rdx,%rcx
    9170:	48 89 c2             	mov    %rax,%rdx
    9173:	e8 db 04 00 00       	call   9653 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    9178:	84 c0                	test   %al,%al
    917a:	74 07                	je     9183 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    917c:	bb 01 00 00 00       	mov    $0x1,%ebx
    9181:	eb 28                	jmp    91ab <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    9183:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    9187:	48 89 c7             	mov    %rax,%rdi
    918a:	e8 7d 04 00 00       	call   960c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    918f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    9193:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    9197:	48 89 d6             	mov    %rdx,%rsi
    919a:	48 89 c7             	mov    %rax,%rdi
    919d:	e8 2f 04 00 00       	call   95d1 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    91a2:	84 c0                	test   %al,%al
    91a4:	75 8e                	jne    9134 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    91a6:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    91ab:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    91af:	48 89 c7             	mov    %rax,%rdi
    91b2:	e8 43 be ff ff       	call   4ffa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    91b7:	89 d8                	mov    %ebx,%eax
    91b9:	eb 34                	jmp    91ef <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    91bb:	48 89 c3             	mov    %rax,%rbx
    91be:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    91c2:	48 89 c7             	mov    %rax,%rdi
    91c5:	e8 9e bd ff ff       	call   4f68 <_ZNSaI17VkLayerPropertiesED1Ev>
    91ca:	48 89 d8             	mov    %rbx,%rax
    91cd:	48 89 c7             	mov    %rax,%rdi
    91d0:	e8 9b a3 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    91d5:	48 89 c3             	mov    %rax,%rbx
    91d8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    91dc:	48 89 c7             	mov    %rax,%rdi
    91df:	e8 16 be ff ff       	call   4ffa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    91e4:	48 89 d8             	mov    %rbx,%rax
    91e7:	48 89 c7             	mov    %rax,%rdi
    91ea:	e8 81 a3 ff ff       	call   3570 <_Unwind_Resume@plt>
    91ef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91f3:	c9                   	leave
    91f4:	c3                   	ret

00000000000091f5 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    91f5:	55                   	push   %rbp
    91f6:	48 89 e5             	mov    %rsp,%rbp
    91f9:	48 83 ec 20          	sub    $0x20,%rsp
    91fd:	89 7d fc             	mov    %edi,-0x4(%rbp)
    9200:	89 75 f8             	mov    %esi,-0x8(%rbp)
    9203:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    9207:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    920b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    920e:	83 f8 01             	cmp    $0x1,%eax
    9211:	7e 3c                	jle    924f <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    9213:	be 0a 00 00 00       	mov    $0xa,%esi
    9218:	48 8d 05 01 32 01 00 	lea    0x13201(%rip),%rax        # 1c420 <_ZSt4cerr@GLIBCXX_3.4>
    921f:	48 89 c7             	mov    %rax,%rdi
    9222:	e8 89 a1 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    9227:	48 89 c2             	mov    %rax,%rdx
    922a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    922e:	48 8b 40 28          	mov    0x28(%rax),%rax
    9232:	48 89 c6             	mov    %rax,%rsi
    9235:	48 89 d7             	mov    %rdx,%rdi
    9238:	e8 83 a0 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    923d:	48 8b 15 54 2d 01 00 	mov    0x12d54(%rip),%rdx        # 1bf98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    9244:	48 89 d6             	mov    %rdx,%rsi
    9247:	48 89 c7             	mov    %rax,%rdi
    924a:	e8 d1 a0 ff ff       	call   3320 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    924f:	b8 00 00 00 00       	mov    $0x0,%eax
}
    9254:	c9                   	leave
    9255:	c3                   	ret

0000000000009256 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    9256:	55                   	push   %rbp
    9257:	48 89 e5             	mov    %rsp,%rbp
    925a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    925e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9262:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9266:	0f 11 00             	movups %xmm0,(%rax)
    9269:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    926d:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    9271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9275:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    927b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    927f:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    9286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    928a:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    9291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9295:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # 91f5 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    929c:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    92a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a4:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    92ab:	00 
}
    92ac:	90                   	nop
    92ad:	5d                   	pop    %rbp
    92ae:	c3                   	ret

00000000000092af <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    92af:	55                   	push   %rbp
    92b0:	48 89 e5             	mov    %rsp,%rbp
    92b3:	48 83 ec 30          	sub    $0x30,%rsp
    92b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    92bf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    92c3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    92c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92cb:	48 8d 15 de 8c 00 00 	lea    0x8cde(%rip),%rdx        # 11fb0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    92d2:	48 89 d6             	mov    %rdx,%rsi
    92d5:	48 89 c7             	mov    %rax,%rdi
    92d8:	e8 c3 9f ff ff       	call   32a0 <vkGetInstanceProcAddr@plt>
    92dd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    92e1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    92e6:	75 07                	jne    92ef <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    92e8:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    92ed:	eb 1b                	jmp    930a <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    92ef:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    92f3:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    92f7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    92fb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    92ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9303:	48 89 c7             	mov    %rax,%rdi
    9306:	41 ff d0             	call   *%r8
    9309:	90                   	nop
}
    930a:	c9                   	leave
    930b:	c3                   	ret

000000000000930c <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    930c:	55                   	push   %rbp
    930d:	48 89 e5             	mov    %rsp,%rbp
    9310:	41 54                	push   %r12
    9312:	53                   	push   %rbx
    9313:	48 83 ec 50          	sub    $0x50,%rsp
    9317:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    931b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    931f:	48 89 c7             	mov    %rax,%rdi
    9322:	e8 2f ff ff ff       	call   9256 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    9327:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    932e:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    932f:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    9333:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    9337:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    933b:	48 89 d1             	mov    %rdx,%rcx
    933e:	ba 00 00 00 00       	mov    $0x0,%edx
    9343:	48 89 c7             	mov    %rax,%rdi
    9346:	e8 64 ff ff ff       	call   92af <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    934b:	85 c0                	test   %eax,%eax
    934d:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    9350:	84 c0                	test   %al,%al
    9352:	74 3b                	je     938f <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    9354:	bf 10 00 00 00       	mov    $0x10,%edi
    9359:	e8 d2 9d ff ff       	call   3130 <__cxa_allocate_exception@plt>
    935e:	48 89 c3             	mov    %rax,%rbx
    9361:	48 8d 05 68 8c 00 00 	lea    0x8c68(%rip),%rax        # 11fd0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    9368:	48 89 c6             	mov    %rax,%rsi
    936b:	48 89 df             	mov    %rbx,%rdi
    936e:	e8 6d 9d ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    9373:	48 8b 05 2e 2c 01 00 	mov    0x12c2e(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    937a:	48 89 c2             	mov    %rax,%rdx
    937d:	48 8d 05 bc 29 01 00 	lea    0x129bc(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9384:	48 89 c6             	mov    %rax,%rsi
    9387:	48 89 df             	mov    %rbx,%rdi
    938a:	e8 91 a1 ff ff       	call   3520 <__cxa_throw@plt>
  }
  return debugMessenger;
    938f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9393:	eb 16                	jmp    93ab <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    9395:	49 89 c4             	mov    %rax,%r12
    9398:	48 89 df             	mov    %rbx,%rdi
    939b:	e8 30 9e ff ff       	call   31d0 <__cxa_free_exception@plt>
    93a0:	4c 89 e0             	mov    %r12,%rax
    93a3:	48 89 c7             	mov    %rax,%rdi
    93a6:	e8 c5 a1 ff ff       	call   3570 <_Unwind_Resume@plt>
}
    93ab:	48 83 c4 50          	add    $0x50,%rsp
    93af:	5b                   	pop    %rbx
    93b0:	41 5c                	pop    %r12
    93b2:	5d                   	pop    %rbp
    93b3:	c3                   	ret

00000000000093b4 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    93b4:	55                   	push   %rbp
    93b5:	48 89 e5             	mov    %rsp,%rbp
    93b8:	48 83 ec 30          	sub    $0x30,%rsp
    93bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    93c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    93c4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    93c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93cc:	48 8d 15 1d 8c 00 00 	lea    0x8c1d(%rip),%rdx        # 11ff0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    93d3:	48 89 d6             	mov    %rdx,%rsi
    93d6:	48 89 c7             	mov    %rax,%rdi
    93d9:	e8 c2 9e ff ff       	call   32a0 <vkGetInstanceProcAddr@plt>
    93de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    93e2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    93e7:	74 19                	je     9402 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    93e9:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    93ed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    93f1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    93f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93f9:	48 89 ce             	mov    %rcx,%rsi
    93fc:	48 89 c7             	mov    %rax,%rdi
    93ff:	41 ff d0             	call   *%r8
  }
}
    9402:	90                   	nop
    9403:	c9                   	leave
    9404:	c3                   	ret

0000000000009405 <_Z41__static_initialization_and_destruction_0ii>:

    9405:	55                   	push   %rbp
    9406:	48 89 e5             	mov    %rsp,%rbp
    9409:	48 83 ec 10          	sub    $0x10,%rsp
    940d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    9410:	89 75 f8             	mov    %esi,-0x8(%rbp)
    9413:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    9417:	75 3b                	jne    9454 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    9419:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    9420:	75 32                	jne    9454 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    9422:	48 8d 05 09 31 01 00 	lea    0x13109(%rip),%rax        # 1c532 <_ZStL8__ioinit>
    9429:	48 89 c7             	mov    %rax,%rdi
    942c:	e8 7f a0 ff ff       	call   34b0 <_ZNSt8ios_base4InitC1Ev@plt>
    9431:	48 8d 05 b0 2e 01 00 	lea    0x12eb0(%rip),%rax        # 1c2e8 <__dso_handle>
    9438:	48 89 c2             	mov    %rax,%rdx
    943b:	48 8d 05 f0 30 01 00 	lea    0x130f0(%rip),%rax        # 1c532 <_ZStL8__ioinit>
    9442:	48 89 c6             	mov    %rax,%rsi
    9445:	48 8b 05 7c 2b 01 00 	mov    0x12b7c(%rip),%rax        # 1bfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    944c:	48 89 c7             	mov    %rax,%rdi
    944f:	e8 1c 9e ff ff       	call   3270 <__cxa_atexit@plt>
    9454:	90                   	nop
    9455:	c9                   	leave
    9456:	c3                   	ret

0000000000009457 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    9457:	55                   	push   %rbp
    9458:	48 89 e5             	mov    %rsp,%rbp
    945b:	be ff ff 00 00       	mov    $0xffff,%esi
    9460:	bf 01 00 00 00       	mov    $0x1,%edi
    9465:	e8 9b ff ff ff       	call   9405 <_Z41__static_initialization_and_destruction_0ii>
    946a:	5d                   	pop    %rbp
    946b:	c3                   	ret

000000000000946c <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    946c:	55                   	push   %rbp
    946d:	48 89 e5             	mov    %rsp,%rbp
    9470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9474:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    9478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947c:	0f b6 00             	movzbl (%rax),%eax
    947f:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    9481:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9485:	0f b6 00             	movzbl (%rax),%eax
    9488:	38 c2                	cmp    %al,%dl
    948a:	0f 92 c0             	setb   %al
      }
    948d:	5d                   	pop    %rbp
    948e:	c3                   	ret

000000000000948f <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    948f:	55                   	push   %rbp
    9490:	48 89 e5             	mov    %rsp,%rbp
    9493:	48 83 ec 30          	sub    $0x30,%rsp
    9497:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    949b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    949f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    94a3:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    94a8:	75 0a                	jne    94b4 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    94aa:	b8 00 00 00 00       	mov    $0x0,%eax
    94af:	e9 99 00 00 00       	jmp    954d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    94b4:	e8 35 a4 ff ff       	call   38ee <_ZSt23__is_constant_evaluatedv>
    94b9:	84 c0                	test   %al,%al
    94bb:	74 78                	je     9535 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    94bd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    94c4:	00 
    94c5:	eb 5d                	jmp    9524 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    94c7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    94cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94cf:	48 01 c2             	add    %rax,%rdx
    94d2:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    94d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94da:	48 01 c8             	add    %rcx,%rax
    94dd:	48 89 d6             	mov    %rdx,%rsi
    94e0:	48 89 c7             	mov    %rax,%rdi
    94e3:	e8 84 ff ff ff       	call   946c <_ZNSt11char_traitsIcE2ltERKcS2_>
    94e8:	84 c0                	test   %al,%al
    94ea:	74 07                	je     94f3 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    94ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    94f1:	eb 5a                	jmp    954d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    94f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94fb:	48 01 c2             	add    %rax,%rdx
    94fe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9506:	48 01 c8             	add    %rcx,%rax
    9509:	48 89 d6             	mov    %rdx,%rsi
    950c:	48 89 c7             	mov    %rax,%rdi
    950f:	e8 58 ff ff ff       	call   946c <_ZNSt11char_traitsIcE2ltERKcS2_>
    9514:	84 c0                	test   %al,%al
    9516:	74 07                	je     951f <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    9518:	b8 01 00 00 00       	mov    $0x1,%eax
    951d:	eb 2e                	jmp    954d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    951f:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    9524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9528:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    952c:	72 99                	jb     94c7 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    952e:	b8 00 00 00 00       	mov    $0x0,%eax
    9533:	eb 18                	jmp    954d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    9535:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9539:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    953d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9541:	48 89 ce             	mov    %rcx,%rsi
    9544:	48 89 c7             	mov    %rax,%rdi
    9547:	e8 d4 9b ff ff       	call   3120 <memcmp@plt>
    954c:	90                   	nop
      }
    954d:	c9                   	leave
    954e:	c3                   	ret
    954f:	90                   	nop

0000000000009550 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    9550:	55                   	push   %rbp
    9551:	48 89 e5             	mov    %rsp,%rbp
    9554:	48 83 ec 10          	sub    $0x10,%rsp
    9558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    955c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    9560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9564:	48 89 c7             	mov    %rax,%rdi
    9567:	e8 8d a3 ff ff       	call   38f9 <_ZNSt11char_traitsIcE6lengthEPKc>
    956c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9570:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    9573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9577:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    957b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    957f:	90                   	nop
    9580:	c9                   	leave
    9581:	c3                   	ret

0000000000009582 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9582:	55                   	push   %rbp
    9583:	48 89 e5             	mov    %rsp,%rbp
    9586:	48 83 ec 20          	sub    $0x20,%rsp
    958a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    958e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9592:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9596:	48 89 d6             	mov    %rdx,%rsi
    9599:	48 89 c7             	mov    %rax,%rdi
    959c:	e8 27 01 00 00       	call   96c8 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    95a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95a5:	c9                   	leave
    95a6:	c3                   	ret
    95a7:	90                   	nop

00000000000095a8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    95a8:	55                   	push   %rbp
    95a9:	48 89 e5             	mov    %rsp,%rbp
    95ac:	48 83 ec 20          	sub    $0x20,%rsp
    95b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    95b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95b8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    95bc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    95c0:	48 89 d6             	mov    %rdx,%rsi
    95c3:	48 89 c7             	mov    %rax,%rdi
    95c6:	e8 fd 00 00 00       	call   96c8 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    95cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95cf:	c9                   	leave
    95d0:	c3                   	ret

00000000000095d1 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    95d1:	55                   	push   %rbp
    95d2:	48 89 e5             	mov    %rsp,%rbp
    95d5:	53                   	push   %rbx
    95d6:	48 83 ec 18          	sub    $0x18,%rsp
    95da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    95de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    95e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95e6:	48 89 c7             	mov    %rax,%rdi
    95e9:	e8 f8 00 00 00       	call   96e6 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    95ee:	48 8b 18             	mov    (%rax),%rbx
    95f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    95f5:	48 89 c7             	mov    %rax,%rdi
    95f8:	e8 e9 00 00 00       	call   96e6 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    95fd:	48 8b 00             	mov    (%rax),%rax
    9600:	48 39 c3             	cmp    %rax,%rbx
    9603:	0f 95 c0             	setne  %al
    9606:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    960a:	c9                   	leave
    960b:	c3                   	ret

000000000000960c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    960c:	55                   	push   %rbp
    960d:	48 89 e5             	mov    %rsp,%rbp
    9610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9618:	48 8b 00             	mov    (%rax),%rax
    961b:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    9622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9626:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    962d:	5d                   	pop    %rbp
    962e:	c3                   	ret
    962f:	90                   	nop

0000000000009630 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9630:	55                   	push   %rbp
    9631:	48 89 e5             	mov    %rsp,%rbp
    9634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963c:	48 8b 00             	mov    (%rax),%rax
    963f:	5d                   	pop    %rbp
    9640:	c3                   	ret
    9641:	90                   	nop

0000000000009642 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    9642:	55                   	push   %rbp
    9643:	48 89 e5             	mov    %rsp,%rbp
    9646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    964a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    964e:	48 8b 00             	mov    (%rax),%rax
    9651:	5d                   	pop    %rbp
    9652:	c3                   	ret

0000000000009653 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    9653:	55                   	push   %rbp
    9654:	48 89 e5             	mov    %rsp,%rbp
    9657:	53                   	push   %rbx
    9658:	48 83 ec 28          	sub    $0x28,%rsp
    965c:	48 89 f0             	mov    %rsi,%rax
    965f:	49 89 f8             	mov    %rdi,%r8
    9662:	4c 89 c6             	mov    %r8,%rsi
    9665:	4c 89 cf             	mov    %r9,%rdi
    9668:	48 89 c7             	mov    %rax,%rdi
    966b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    966f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9673:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    9677:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    967b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    967f:	48 89 c7             	mov    %rax,%rdi
    9682:	e8 bb ff ff ff       	call   9642 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    9687:	48 89 c3             	mov    %rax,%rbx
    968a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    968e:	48 89 c7             	mov    %rax,%rdi
    9691:	e8 ac ff ff ff       	call   9642 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    9696:	48 39 c3             	cmp    %rax,%rbx
    9699:	75 22                	jne    96bd <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    969b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    969f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    96a3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    96a7:	48 89 ce             	mov    %rcx,%rsi
    96aa:	48 89 c7             	mov    %rax,%rdi
    96ad:	e8 42 00 00 00       	call   96f4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    96b2:	85 c0                	test   %eax,%eax
    96b4:	75 07                	jne    96bd <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    96b6:	b8 01 00 00 00       	mov    $0x1,%eax
    96bb:	eb 05                	jmp    96c2 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    96bd:	b8 00 00 00 00       	mov    $0x0,%eax
    96c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    96c6:	c9                   	leave
    96c7:	c3                   	ret

00000000000096c8 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    96c8:	55                   	push   %rbp
    96c9:	48 89 e5             	mov    %rsp,%rbp
    96cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    96d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    96d8:	48 8b 10             	mov    (%rax),%rdx
    96db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96df:	48 89 10             	mov    %rdx,(%rax)
    96e2:	90                   	nop
    96e3:	5d                   	pop    %rbp
    96e4:	c3                   	ret
    96e5:	90                   	nop

00000000000096e6 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    96e6:	55                   	push   %rbp
    96e7:	48 89 e5             	mov    %rsp,%rbp
    96ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    96ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96f2:	5d                   	pop    %rbp
    96f3:	c3                   	ret

00000000000096f4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    96f4:	55                   	push   %rbp
    96f5:	48 89 e5             	mov    %rsp,%rbp
    96f8:	48 83 ec 30          	sub    $0x30,%rsp
    96fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9700:	48 89 d1             	mov    %rdx,%rcx
    9703:	48 89 f0             	mov    %rsi,%rax
    9706:	48 89 fa             	mov    %rdi,%rdx
    9709:	48 89 ca             	mov    %rcx,%rdx
    970c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    9710:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    9714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9718:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    971c:	48 89 d6             	mov    %rdx,%rsi
    971f:	48 89 c7             	mov    %rax,%rdi
    9722:	e8 1a de ff ff       	call   7541 <_ZSt3minImERKT_S2_S2_>
    9727:	48 8b 00             	mov    (%rax),%rax
    972a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    972e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    9732:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9736:	48 8b 40 08          	mov    0x8(%rax),%rax
    973a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    973e:	48 89 ce             	mov    %rcx,%rsi
    9741:	48 89 c7             	mov    %rax,%rdi
    9744:	e8 46 fd ff ff       	call   948f <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    9749:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    974c:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    9750:	75 19                	jne    976b <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    9752:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9756:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    975a:	48 8b 00             	mov    (%rax),%rax
    975d:	48 89 d6             	mov    %rdx,%rsi
    9760:	48 89 c7             	mov    %rax,%rdi
    9763:	e8 08 00 00 00       	call   9770 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    9768:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    976b:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    976e:	c9                   	leave
    976f:	c3                   	ret

0000000000009770 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    9770:	55                   	push   %rbp
    9771:	48 89 e5             	mov    %rsp,%rbp
    9774:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9778:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    977c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9780:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    9784:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    9788:	b8 00 00 00 80       	mov    $0x80000000,%eax
    978d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    9791:	7c 07                	jl     979a <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    9793:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    9798:	eb 1b                	jmp    97b5 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    979a:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    97a1:	ff ff ff 
    97a4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    97a8:	7f 07                	jg     97b1 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    97aa:	b8 00 00 00 80       	mov    $0x80000000,%eax
    97af:	eb 04                	jmp    97b5 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    97b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    97b5:	5d                   	pop    %rbp
    97b6:	c3                   	ret

00000000000097b7 <_Z41__static_initialization_and_destruction_0ii>:
 */
void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator);

} /* namespace vkh */
    97b7:	55                   	push   %rbp
    97b8:	48 89 e5             	mov    %rsp,%rbp
    97bb:	48 83 ec 10          	sub    $0x10,%rsp
    97bf:	89 7d fc             	mov    %edi,-0x4(%rbp)
    97c2:	89 75 f8             	mov    %esi,-0x8(%rbp)
    97c5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    97c9:	75 3b                	jne    9806 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    97cb:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    97d2:	75 32                	jne    9806 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    97d4:	48 8d 05 58 2d 01 00 	lea    0x12d58(%rip),%rax        # 1c533 <_ZStL8__ioinit>
    97db:	48 89 c7             	mov    %rax,%rdi
    97de:	e8 cd 9c ff ff       	call   34b0 <_ZNSt8ios_base4InitC1Ev@plt>
    97e3:	48 8d 05 fe 2a 01 00 	lea    0x12afe(%rip),%rax        # 1c2e8 <__dso_handle>
    97ea:	48 89 c2             	mov    %rax,%rdx
    97ed:	48 8d 05 3f 2d 01 00 	lea    0x12d3f(%rip),%rax        # 1c533 <_ZStL8__ioinit>
    97f4:	48 89 c6             	mov    %rax,%rsi
    97f7:	48 8b 05 ca 27 01 00 	mov    0x127ca(%rip),%rax        # 1bfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    97fe:	48 89 c7             	mov    %rax,%rdi
    9801:	e8 6a 9a ff ff       	call   3270 <__cxa_atexit@plt>
    9806:	90                   	nop
    9807:	c9                   	leave
    9808:	c3                   	ret

0000000000009809 <_GLOBAL__sub_I_vkh.cpp>:
    9809:	55                   	push   %rbp
    980a:	48 89 e5             	mov    %rsp,%rbp
    980d:	be ff ff 00 00       	mov    $0xffff,%esi
    9812:	bf 01 00 00 00       	mov    $0x1,%edi
    9817:	e8 9b ff ff ff       	call   97b7 <_Z41__static_initialization_and_destruction_0ii>
    981c:	5d                   	pop    %rbp
    981d:	c3                   	ret

000000000000981e <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    981e:	55                   	push   %rbp
    981f:	48 89 e5             	mov    %rsp,%rbp
    9822:	48 83 ec 10          	sub    $0x10,%rsp
    9826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    982a:	e8 71 9b ff ff       	call   33a0 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    982f:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9835:	b9 00 00 00 00       	mov    $0x0,%ecx
    983a:	48 8d 05 d7 93 00 00 	lea    0x93d7(%rip),%rax        # 12c18 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    9841:	48 89 c2             	mov    %rax,%rdx
    9844:	be 58 02 00 00       	mov    $0x258,%esi
    9849:	bf 20 03 00 00       	mov    $0x320,%edi
    984e:	e8 7a a3 ff ff       	call   3bcd <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    9853:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9857:	48 89 02             	mov    %rax,(%rdx)
}
    985a:	90                   	nop
    985b:	c9                   	leave
    985c:	c3                   	ret
    985d:	90                   	nop

000000000000985e <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    985e:	55                   	push   %rbp
    985f:	48 89 e5             	mov    %rsp,%rbp
    9862:	53                   	push   %rbx
    9863:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    986a:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    9871:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9875:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    9879:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    987d:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    9881:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    9888:	48 8d 05 89 93 00 00 	lea    0x9389(%rip),%rax        # 12c18 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    988f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    9893:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    989a:	48 8d 05 8a 93 00 00 	lea    0x938a(%rip),%rax        # 12c2b <_ZN6__pstl9execution2v1L5unseqE+0x14>
    98a1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    98a5:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    98ac:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    98b3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    98b7:	48 89 c7             	mov    %rax,%rdi
    98ba:	e8 1e aa ff ff       	call   42dd <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    98bf:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    98c3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    98c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98cb:	48 89 c7             	mov    %rax,%rdi
    98ce:	e8 93 27 00 00       	call   c066 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    98d3:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    98da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98de:	48 89 c7             	mov    %rax,%rdi
    98e1:	e8 a6 27 00 00       	call   c08c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    98e6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    98ed:	eb 3c                	jmp    992b <_ZN9VulkanApp14createInstanceEv+0xcd>
    98ef:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    98f6:	48 89 c7             	mov    %rax,%rdi
    98f9:	e8 12 28 00 00       	call   c110 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    98fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    9902:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9909:	48 8d 50 10          	lea    0x10(%rax),%rdx
    990d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9911:	48 89 c6             	mov    %rax,%rsi
    9914:	48 89 d7             	mov    %rdx,%rdi
    9917:	e8 06 28 00 00       	call   c122 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    991c:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    9923:	48 89 c7             	mov    %rax,%rdi
    9926:	e8 c5 27 00 00       	call   c0f0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    992b:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    9932:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    9939:	48 89 d6             	mov    %rdx,%rsi
    993c:	48 89 c7             	mov    %rax,%rdi
    993f:	e8 71 27 00 00       	call   c0b5 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    9944:	84 c0                	test   %al,%al
    9946:	75 a7                	jne    98ef <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    9948:	66 0f ef c0          	pxor   %xmm0,%xmm0
    994c:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    9953:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    995a:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    995e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9965:	48 89 c7             	mov    %rax,%rdi
    9968:	e8 e9 f8 ff ff       	call   9256 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    996d:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    9974:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    9977:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    997e:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    9985:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9989:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    9990:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    9997:	48 83 c0 28          	add    $0x28,%rax
    999b:	48 89 c7             	mov    %rax,%rdi
    999e:	e8 23 28 00 00       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    99a3:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    99a9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    99b0:	48 83 c0 28          	add    $0x28,%rax
    99b4:	48 89 c7             	mov    %rax,%rdi
    99b7:	e8 2e 28 00 00       	call   c1ea <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    99bc:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    99c3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    99ca:	48 83 c0 10          	add    $0x10,%rax
    99ce:	48 89 c7             	mov    %rax,%rdi
    99d1:	e8 f0 27 00 00       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    99d6:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    99dc:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    99e3:	48 83 c0 10          	add    $0x10,%rax
    99e7:	48 89 c7             	mov    %rax,%rdi
    99ea:	e8 1f 28 00 00       	call   c20e <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    99ef:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    99f6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    99fd:	be 00 00 00 00       	mov    $0x0,%esi
    9a02:	48 89 c7             	mov    %rax,%rdi
    9a05:	e8 19 a2 ff ff       	call   3c23 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    9a0a:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    9a11:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    9a15:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9a19:	48 89 c7             	mov    %rax,%rdi
    9a1c:	e8 01 26 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9a21:	eb 1a                	jmp    9a3d <_ZN9VulkanApp14createInstanceEv+0x1df>
    9a23:	48 89 c3             	mov    %rax,%rbx
    9a26:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9a2a:	48 89 c7             	mov    %rax,%rdi
    9a2d:	e8 f0 25 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    9a32:	48 89 d8             	mov    %rbx,%rax
    9a35:	48 89 c7             	mov    %rax,%rdi
    9a38:	e8 33 9b ff ff       	call   3570 <_Unwind_Resume@plt>
    9a3d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a41:	c9                   	leave
    9a42:	c3                   	ret
    9a43:	90                   	nop

0000000000009a44 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    9a44:	55                   	push   %rbp
    9a45:	48 89 e5             	mov    %rsp,%rbp
    9a48:	41 54                	push   %r12
    9a4a:	53                   	push   %rbx
    9a4b:	48 83 ec 10          	sub    $0x10,%rsp
    9a4f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    9a53:	e8 4a f6 ff ff       	call   90a2 <_ZN3vkh27checkValidationLayerSupportEv>
    9a58:	0f b6 c0             	movzbl %al,%eax
    9a5b:	85 c0                	test   %eax,%eax
    9a5d:	0f 94 c0             	sete   %al
    9a60:	84 c0                	test   %al,%al
    9a62:	74 3b                	je     9a9f <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    9a64:	bf 10 00 00 00       	mov    $0x10,%edi
    9a69:	e8 c2 96 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    9a6e:	48 89 c3             	mov    %rax,%rbx
    9a71:	48 8d 05 c0 91 00 00 	lea    0x91c0(%rip),%rax        # 12c38 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    9a78:	48 89 c6             	mov    %rax,%rsi
    9a7b:	48 89 df             	mov    %rbx,%rdi
    9a7e:	e8 5d 96 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    9a83:	48 8b 05 1e 25 01 00 	mov    0x1251e(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9a8a:	48 89 c2             	mov    %rax,%rdx
    9a8d:	48 8d 05 ac 22 01 00 	lea    0x122ac(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9a94:	48 89 c6             	mov    %rax,%rsi
    9a97:	48 89 df             	mov    %rbx,%rdi
    9a9a:	e8 81 9a ff ff       	call   3520 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    9a9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9aa3:	48 8b 40 08          	mov    0x8(%rax),%rax
    9aa7:	48 89 c7             	mov    %rax,%rdi
    9aaa:	e8 5d f8 ff ff       	call   930c <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    9aaf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ab3:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    9ab7:	eb 16                	jmp    9acf <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    9ab9:	49 89 c4             	mov    %rax,%r12
    9abc:	48 89 df             	mov    %rbx,%rdi
    9abf:	e8 0c 97 ff ff       	call   31d0 <__cxa_free_exception@plt>
    9ac4:	4c 89 e0             	mov    %r12,%rax
    9ac7:	48 89 c7             	mov    %rax,%rdi
    9aca:	e8 a1 9a ff ff       	call   3570 <_Unwind_Resume@plt>
}
    9acf:	48 83 c4 10          	add    $0x10,%rsp
    9ad3:	5b                   	pop    %rbx
    9ad4:	41 5c                	pop    %r12
    9ad6:	5d                   	pop    %rbp
    9ad7:	c3                   	ret

0000000000009ad8 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    9ad8:	55                   	push   %rbp
    9ad9:	48 89 e5             	mov    %rsp,%rbp
    9adc:	48 83 ec 10          	sub    $0x10,%rsp
    9ae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    9ae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae8:	48 8b 08             	mov    (%rax),%rcx
    9aeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aef:	48 8b 40 08          	mov    0x8(%rax),%rax
    9af3:	ba 00 00 00 00       	mov    $0x0,%edx
    9af8:	48 89 ce             	mov    %rcx,%rsi
    9afb:	48 89 c7             	mov    %rax,%rdi
    9afe:	e8 4b a2 ff ff       	call   3d4e <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    9b03:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9b07:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    9b0b:	90                   	nop
    9b0c:	c9                   	leave
    9b0d:	c3                   	ret

0000000000009b0e <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    9b0e:	55                   	push   %rbp
    9b0f:	48 89 e5             	mov    %rsp,%rbp
    9b12:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    9b19:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    9b20:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    9b27:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    9b2e:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    9b35:	48 89 d6             	mov    %rdx,%rsi
    9b38:	48 89 c7             	mov    %rax,%rdi
    9b3b:	e8 6a aa ff ff       	call   45aa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    9b40:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    9b46:	83 f8 02             	cmp    $0x2,%eax
    9b49:	0f 94 c0             	sete   %al
}
    9b4c:	c9                   	leave
    9b4d:	c3                   	ret

0000000000009b4e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    9b4e:	55                   	push   %rbp
    9b4f:	48 89 e5             	mov    %rsp,%rbp
    9b52:	53                   	push   %rbx
    9b53:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    9b5a:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    9b61:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    9b68:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    9b6f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9b73:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    9b7a:	48 89 d6             	mov    %rdx,%rsi
    9b7d:	48 89 c7             	mov    %rax,%rdi
    9b80:	e8 4e ab ff ff       	call   46d3 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    9b85:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9b89:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    9b90:	48 89 d6             	mov    %rdx,%rsi
    9b93:	48 89 c7             	mov    %rax,%rdi
    9b96:	e8 6c ac ff ff       	call   4807 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    9b9b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    9ba2:	48 8b 50 48          	mov    0x48(%rax),%rdx
    9ba6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9bad:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    9bb4:	48 89 ce             	mov    %rcx,%rsi
    9bb7:	48 89 c7             	mov    %rax,%rdi
    9bba:	e8 81 ad ff ff       	call   4940 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    9bbf:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9bc6:	00 
    9bc7:	e9 c5 00 00 00       	jmp    9c91 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    9bcc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9bd0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9bd4:	48 89 d6             	mov    %rdx,%rsi
    9bd7:	48 89 c7             	mov    %rax,%rdi
    9bda:	e8 13 bc ff ff       	call   57f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9bdf:	48 89 c7             	mov    %rax,%rdi
    9be2:	e8 79 26 00 00       	call   c260 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    9be7:	84 c0                	test   %al,%al
    9be9:	74 48                	je     9c33 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    9beb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9bef:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9bf3:	48 89 d6             	mov    %rdx,%rsi
    9bf6:	48 89 c7             	mov    %rax,%rdi
    9bf9:	e8 f4 bb ff ff       	call   57f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9bfe:	48 89 c7             	mov    %rax,%rdi
    9c01:	e8 5a 26 00 00       	call   c260 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    9c06:	84 c0                	test   %al,%al
    9c08:	74 29                	je     9c33 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    9c0a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c0e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9c15:	48 89 d6             	mov    %rdx,%rsi
    9c18:	48 89 c7             	mov    %rax,%rdi
    9c1b:	e8 d2 bb ff ff       	call   57f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9c20:	48 89 c7             	mov    %rax,%rdi
    9c23:	e8 38 26 00 00       	call   c260 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    9c28:	84 c0                	test   %al,%al
    9c2a:	74 07                	je     9c33 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    9c2c:	b8 01 00 00 00       	mov    $0x1,%eax
    9c31:	eb 05                	jmp    9c38 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    9c33:	b8 00 00 00 00       	mov    $0x0,%eax
    9c38:	84 c0                	test   %al,%al
    9c3a:	74 50                	je     9c8c <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    9c3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c40:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    9c43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c47:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9c4b:	48 89 d6             	mov    %rdx,%rsi
    9c4e:	48 89 c7             	mov    %rax,%rdi
    9c51:	e8 9c bb ff ff       	call   57f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    9c56:	48 89 c7             	mov    %rax,%rdi
    9c59:	e8 1c 26 00 00       	call   c27a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    9c5e:	48 89 c2             	mov    %rax,%rdx
    9c61:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    9c65:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    9c69:	48 89 ce             	mov    %rcx,%rsi
    9c6c:	48 89 c7             	mov    %rax,%rdi
    9c6f:	e8 38 26 00 00       	call   c2ac <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    9c74:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    9c78:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    9c7f:	48 89 d6             	mov    %rdx,%rsi
    9c82:	48 89 c7             	mov    %rax,%rdi
    9c85:	e8 78 26 00 00       	call   c302 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    9c8a:	eb 2f                	jmp    9cbb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    9c8c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    9c91:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9c95:	48 89 c7             	mov    %rax,%rdi
    9c98:	e8 95 25 00 00       	call   c232 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    9c9d:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9ca1:	0f 92 c0             	setb   %al
    9ca4:	84 c0                	test   %al,%al
    9ca6:	0f 85 20 ff ff ff    	jne    9bcc <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    9cac:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    9cb3:	48 89 c7             	mov    %rax,%rdi
    9cb6:	e8 cb 20 00 00       	call   bd86 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    9cbb:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9cc2:	48 89 c7             	mov    %rax,%rdi
    9cc5:	e8 28 ba ff ff       	call   56f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9cca:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9cce:	48 89 c7             	mov    %rax,%rdi
    9cd1:	e8 1c ba ff ff       	call   56f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9cd6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9cda:	48 89 c7             	mov    %rax,%rdi
    9cdd:	e8 10 ba ff ff       	call   56f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9ce2:	eb 3f                	jmp    9d23 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    9ce4:	48 89 c3             	mov    %rax,%rbx
    9ce7:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9cee:	48 89 c7             	mov    %rax,%rdi
    9cf1:	e8 fc b9 ff ff       	call   56f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9cf6:	eb 03                	jmp    9cfb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    9cf8:	48 89 c3             	mov    %rax,%rbx
    9cfb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    9cff:	48 89 c7             	mov    %rax,%rdi
    9d02:	e8 eb b9 ff ff       	call   56f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9d07:	eb 03                	jmp    9d0c <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    9d09:	48 89 c3             	mov    %rax,%rbx
    9d0c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9d10:	48 89 c7             	mov    %rax,%rdi
    9d13:	e8 da b9 ff ff       	call   56f2 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    9d18:	48 89 d8             	mov    %rbx,%rax
    9d1b:	48 89 c7             	mov    %rax,%rdi
    9d1e:	e8 4d 98 ff ff       	call   3570 <_Unwind_Resume@plt>
    9d23:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    9d2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d2e:	c9                   	leave
    9d2f:	c3                   	ret

0000000000009d30 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    9d30:	55                   	push   %rbp
    9d31:	48 89 e5             	mov    %rsp,%rbp
    9d34:	41 54                	push   %r12
    9d36:	53                   	push   %rbx
    9d37:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    9d3e:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    9d45:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    9d4c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9d50:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9d54:	48 89 d6             	mov    %rdx,%rsi
    9d57:	48 89 c7             	mov    %rax,%rdi
    9d5a:	e8 dc a6 ff ff       	call   443b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    9d5f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9d66:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    9d67:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9d6b:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    9d6f:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    9d73:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9d77:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9d7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9d7f:	48 89 c7             	mov    %rax,%rdi
    9d82:	e8 af 25 00 00       	call   c336 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    9d87:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    9d8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9d92:	48 89 c7             	mov    %rax,%rdi
    9d95:	e8 c2 25 00 00       	call   c35c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    9d9a:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    9da1:	e9 dd 00 00 00       	jmp    9e83 <_ZN9VulkanApp12createDeviceEv+0x153>
    9da6:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    9dad:	48 89 c7             	mov    %rax,%rdi
    9db0:	e8 2b 26 00 00       	call   c3e0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    9db5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    9db9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9dbd:	48 8b 10             	mov    (%rax),%rdx
    9dc0:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    9dc7:	48 89 d6             	mov    %rdx,%rsi
    9dca:	48 89 c7             	mov    %rax,%rdi
    9dcd:	e8 3c fd ff ff       	call   9b0e <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    9dd2:	84 c0                	test   %al,%al
    9dd4:	74 41                	je     9e17 <_ZN9VulkanApp12createDeviceEv+0xe7>
    9dd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9dda:	48 8b 10             	mov    (%rax),%rdx
    9ddd:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    9de4:	48 89 d6             	mov    %rdx,%rsi
    9de7:	48 89 c7             	mov    %rax,%rdi
    9dea:	e8 eb 02 00 00       	call   a0da <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    9def:	84 c0                	test   %al,%al
    9df1:	74 24                	je     9e17 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    9df3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9df7:	48 8b 10             	mov    (%rax),%rdx
    9dfa:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    9e01:	48 89 d6             	mov    %rdx,%rsi
    9e04:	48 89 c7             	mov    %rax,%rdi
    9e07:	e8 08 06 00 00       	call   a414 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    9e0c:	84 c0                	test   %al,%al
    9e0e:	74 07                	je     9e17 <_ZN9VulkanApp12createDeviceEv+0xe7>
    9e10:	b8 01 00 00 00       	mov    $0x1,%eax
    9e15:	eb 05                	jmp    9e1c <_ZN9VulkanApp12createDeviceEv+0xec>
    9e17:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    9e1c:	84 c0                	test   %al,%al
    9e1e:	74 54                	je     9e74 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    9e20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9e24:	48 8b 10             	mov    (%rax),%rdx
    9e27:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    9e2e:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    9e35:	48 89 ce             	mov    %rcx,%rsi
    9e38:	48 89 c7             	mov    %rax,%rdi
    9e3b:	e8 0e fd ff ff       	call   9b4e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    9e40:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    9e47:	48 89 c7             	mov    %rax,%rdi
    9e4a:	e8 a3 25 00 00       	call   c3f2 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    9e4f:	84 c0                	test   %al,%al
    9e51:	74 21                	je     9e74 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    9e53:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    9e5a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9e5e:	48 89 d6             	mov    %rdx,%rsi
    9e61:	48 89 c7             	mov    %rax,%rdi
    9e64:	e8 6f 1f 00 00       	call   bdd8 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    9e69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9e6d:	48 8b 00             	mov    (%rax),%rax
    9e70:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    9e74:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    9e7b:	48 89 c7             	mov    %rax,%rdi
    9e7e:	e8 3d 25 00 00       	call   c3c0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    9e83:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    9e8a:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    9e91:	48 89 d6             	mov    %rdx,%rsi
    9e94:	48 89 c7             	mov    %rax,%rdi
    9e97:	e8 e9 24 00 00       	call   c385 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    9e9c:	84 c0                	test   %al,%al
    9e9e:	0f 85 02 ff ff ff    	jne    9da6 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    9ea4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    9ea9:	75 3b                	jne    9ee6 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    9eab:	bf 10 00 00 00       	mov    $0x10,%edi
    9eb0:	e8 7b 92 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    9eb5:	48 89 c3             	mov    %rax,%rbx
    9eb8:	48 8d 05 a1 8d 00 00 	lea    0x8da1(%rip),%rax        # 12c60 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    9ebf:	48 89 c6             	mov    %rax,%rsi
    9ec2:	48 89 df             	mov    %rbx,%rdi
    9ec5:	e8 16 92 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    9eca:	48 8b 05 d7 20 01 00 	mov    0x120d7(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9ed1:	48 89 c2             	mov    %rax,%rdx
    9ed4:	48 8d 05 65 1e 01 00 	lea    0x11e65(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9edb:	48 89 c6             	mov    %rax,%rsi
    9ede:	48 89 df             	mov    %rbx,%rdi
    9ee1:	e8 3a 96 ff ff       	call   3520 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    9ee6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9eea:	48 89 c7             	mov    %rax,%rdi
    9eed:	e8 10 1f 00 00       	call   be02 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    9ef2:	8b 00                	mov    (%rax),%eax
    9ef4:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    9ef7:	f3 0f 10 05 d9 90 00 	movss  0x90d9(%rip),%xmm0        # 12fd8 <_ZN6__pstl9execution2v1L5unseqE+0x3c1>
    9efe:	00 
    9eff:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    9f04:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9f08:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    9f0f:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    9f16:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    9f1b:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    9f22:	00 00 00 
  queueInfo.pNext = nullptr;
    9f25:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    9f2c:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    9f30:	8b 45 dc             	mov    -0x24(%rbp),%eax
    9f33:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    9f39:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    9f40:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    9f43:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    9f47:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    9f4b:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    9f52:	b8 00 00 00 00       	mov    $0x0,%eax
    9f57:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    9f5c:	48 89 d7             	mov    %rdx,%rdi
    9f5f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    9f62:	48 89 fa             	mov    %rdi,%rdx
    9f65:	89 02                	mov    %eax,(%rdx)
    9f67:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    9f6b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9f6f:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    9f76:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    9f7d:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    9f84:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    9f8b:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    9f92:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    9f93:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    9f9a:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    9f9d:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    9fa4:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    9fa8:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    9faf:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    9fb2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    9fb9:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    9fc0:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    9fc7:	48 05 98 00 00 00    	add    $0x98,%rax
    9fcd:	48 89 c7             	mov    %rax,%rdi
    9fd0:	e8 f1 21 00 00       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    9fd5:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    9fdb:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    9fe2:	48 05 98 00 00 00    	add    $0x98,%rax
    9fe8:	48 89 c7             	mov    %rax,%rdi
    9feb:	e8 1e 22 00 00       	call   c20e <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    9ff0:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    9ff7:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    9ffe:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    a005:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    a00c:	48 83 c0 28          	add    $0x28,%rax
    a010:	48 89 c7             	mov    %rax,%rdi
    a013:	e8 ae 21 00 00       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    a018:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    a01e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    a025:	48 83 c0 28          	add    $0x28,%rax
    a029:	48 89 c7             	mov    %rax,%rdi
    a02c:	e8 b9 21 00 00       	call   c1ea <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    a031:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    a038:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    a03f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a043:	ba 00 00 00 00       	mov    $0x0,%edx
    a048:	48 89 ce             	mov    %rcx,%rsi
    a04b:	48 89 c7             	mov    %rax,%rdi
    a04e:	e8 63 9c ff ff       	call   3cb6 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    a053:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    a05a:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    a05e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    a065:	48 8d 50 60          	lea    0x60(%rax),%rdx
    a069:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    a070:	48 8b 40 50          	mov    0x50(%rax),%rax
    a074:	8b 75 dc             	mov    -0x24(%rbp),%esi
    a077:	48 89 d1             	mov    %rdx,%rcx
    a07a:	ba 00 00 00 00       	mov    $0x0,%edx
    a07f:	48 89 c7             	mov    %rax,%rdi
    a082:	e8 a9 93 ff ff       	call   3430 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    a087:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    a08e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a092:	48 89 50 58          	mov    %rdx,0x58(%rax)
}
    a096:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a09a:	48 89 c7             	mov    %rax,%rdi
    a09d:	e8 50 b3 ff ff       	call   53f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    a0a2:	eb 2a                	jmp    a0ce <_ZN9VulkanApp12createDeviceEv+0x39e>
    throw std::runtime_error("Failed to select a physical device.");
    a0a4:	49 89 c4             	mov    %rax,%r12
    a0a7:	48 89 df             	mov    %rbx,%rdi
    a0aa:	e8 21 91 ff ff       	call   31d0 <__cxa_free_exception@plt>
    a0af:	4c 89 e3             	mov    %r12,%rbx
    a0b2:	eb 03                	jmp    a0b7 <_ZN9VulkanApp12createDeviceEv+0x387>
}
    a0b4:	48 89 c3             	mov    %rax,%rbx
    a0b7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a0bb:	48 89 c7             	mov    %rax,%rdi
    a0be:	e8 2f b3 ff ff       	call   53f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    a0c3:	48 89 d8             	mov    %rbx,%rax
    a0c6:	48 89 c7             	mov    %rax,%rdi
    a0c9:	e8 a2 94 ff ff       	call   3570 <_Unwind_Resume@plt>
    a0ce:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    a0d5:	5b                   	pop    %rbx
    a0d6:	41 5c                	pop    %r12
    a0d8:	5d                   	pop    %rbp
    a0d9:	c3                   	ret

000000000000a0da <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    a0da:	55                   	push   %rbp
    a0db:	48 89 e5             	mov    %rsp,%rbp
    a0de:	53                   	push   %rbx
    a0df:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    a0e6:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    a0ed:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    a0f4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a0fb:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    a102:	ba 00 00 00 00       	mov    $0x0,%edx
    a107:	48 89 ce             	mov    %rcx,%rsi
    a10a:	48 89 c7             	mov    %rax,%rdi
    a10d:	e8 54 a0 ff ff       	call   4166 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    a112:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a119:	48 89 c7             	mov    %rax,%rdi
    a11c:	e8 5d 1d 00 00       	call   be7e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    a121:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a128:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a12c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a130:	48 89 c7             	mov    %rax,%rdi
    a133:	e8 d0 23 00 00       	call   c508 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    a138:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    a13f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a143:	48 89 c7             	mov    %rax,%rdi
    a146:	e8 e3 23 00 00       	call   c52e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    a14b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    a152:	e9 8c 00 00 00       	jmp    a1e3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    a157:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    a15e:	48 89 c7             	mov    %rax,%rdi
    a161:	e8 50 24 00 00       	call   c5b6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    a166:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    a16a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    a171:	48 89 c7             	mov    %rax,%rdi
    a174:	e8 07 94 ff ff       	call   3580 <_ZNSaIcEC1Ev@plt>
    a179:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a17d:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    a184:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a18b:	48 89 ce             	mov    %rcx,%rsi
    a18e:	48 89 c7             	mov    %rax,%rdi
    a191:	e8 1a 98 ff ff       	call   39b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    a196:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    a19d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a1a4:	48 89 d6             	mov    %rdx,%rsi
    a1a7:	48 89 c7             	mov    %rax,%rdi
    a1aa:	e8 19 24 00 00       	call   c5c8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    a1af:	8b 10                	mov    (%rax),%edx
    a1b1:	83 c2 01             	add    $0x1,%edx
    a1b4:	89 10                	mov    %edx,(%rax)
    a1b6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a1bd:	48 89 c7             	mov    %rax,%rdi
    a1c0:	e8 bb 8f ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a1c5:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    a1cc:	48 89 c7             	mov    %rax,%rdi
    a1cf:	e8 8c 91 ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    a1d4:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    a1db:	48 89 c7             	mov    %rax,%rdi
    a1de:	e8 af 23 00 00       	call   c592 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    a1e3:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    a1ea:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    a1f1:	48 89 d6             	mov    %rdx,%rsi
    a1f4:	48 89 c7             	mov    %rax,%rdi
    a1f7:	e8 5b 23 00 00       	call   c557 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a1fc:	84 c0                	test   %al,%al
    a1fe:	0f 85 53 ff ff ff    	jne    a157 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    a204:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    a20b:	48 05 98 00 00 00    	add    $0x98,%rax
    a211:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    a215:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a219:	48 89 c7             	mov    %rax,%rdi
    a21c:	e8 45 1e 00 00       	call   c066 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    a221:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    a228:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a22c:	48 89 c7             	mov    %rax,%rdi
    a22f:	e8 58 1e 00 00       	call   c08c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    a234:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    a23b:	e9 ed 00 00 00       	jmp    a32d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    a240:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    a247:	48 89 c7             	mov    %rax,%rdi
    a24a:	e8 c1 1e 00 00       	call   c110 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    a24f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    a253:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    a257:	48 89 c7             	mov    %rax,%rdi
    a25a:	e8 21 93 ff ff       	call   3580 <_ZNSaIcEC1Ev@plt>
    a25f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a263:	48 8b 08             	mov    (%rax),%rcx
    a266:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    a26a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    a271:	48 89 ce             	mov    %rcx,%rsi
    a274:	48 89 c7             	mov    %rax,%rdi
    a277:	e8 34 97 ff ff       	call   39b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    a27c:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    a283:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a28a:	48 89 d6             	mov    %rdx,%rsi
    a28d:	48 89 c7             	mov    %rax,%rdi
    a290:	e8 33 23 00 00       	call   c5c8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    a295:	8b 10                	mov    (%rax),%edx
    a297:	83 c2 01             	add    $0x1,%edx
    a29a:	89 10                	mov    %edx,(%rax)
    a29c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    a2a3:	48 89 c7             	mov    %rax,%rdi
    a2a6:	e8 d5 8e ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a2ab:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    a2af:	48 89 c7             	mov    %rax,%rdi
    a2b2:	e8 a9 90 ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    a2b7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a2bb:	48 89 c7             	mov    %rax,%rdi
    a2be:	e8 bd 92 ff ff       	call   3580 <_ZNSaIcEC1Ev@plt>
    a2c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2c7:	48 8b 08             	mov    (%rax),%rcx
    a2ca:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    a2ce:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a2d2:	48 89 ce             	mov    %rcx,%rsi
    a2d5:	48 89 c7             	mov    %rax,%rdi
    a2d8:	e8 d3 96 ff ff       	call   39b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    a2dd:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    a2e1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a2e8:	48 89 d6             	mov    %rdx,%rsi
    a2eb:	48 89 c7             	mov    %rax,%rdi
    a2ee:	e8 d5 22 00 00       	call   c5c8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    a2f3:	8b 00                	mov    (%rax),%eax
    a2f5:	83 f8 01             	cmp    $0x1,%eax
    a2f8:	0f 96 c3             	setbe  %bl
    a2fb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a2ff:	48 89 c7             	mov    %rax,%rdi
    a302:	e8 79 8e ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a307:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a30b:	48 89 c7             	mov    %rax,%rdi
    a30e:	e8 4d 90 ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    a313:	84 db                	test   %bl,%bl
    a315:	74 07                	je     a31e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    a317:	bb 00 00 00 00       	mov    $0x0,%ebx
    a31c:	eb 35                	jmp    a353 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    a31e:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    a325:	48 89 c7             	mov    %rax,%rdi
    a328:	e8 c3 1d 00 00       	call   c0f0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    a32d:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    a334:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    a33b:	48 89 d6             	mov    %rdx,%rsi
    a33e:	48 89 c7             	mov    %rax,%rdi
    a341:	e8 6f 1d 00 00       	call   c0b5 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    a346:	84 c0                	test   %al,%al
    a348:	0f 85 f2 fe ff ff    	jne    a240 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    a34e:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    a353:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a35a:	48 89 c7             	mov    %rax,%rdi
    a35d:	e8 38 1b 00 00       	call   be9a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    a362:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a369:	48 89 c7             	mov    %rax,%rdi
    a36c:	e8 f7 ad ff ff       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    a371:	89 d8                	mov    %ebx,%eax
    a373:	e9 96 00 00 00       	jmp    a40e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    a378:	48 89 c3             	mov    %rax,%rbx
    a37b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a382:	48 89 c7             	mov    %rax,%rdi
    a385:	e8 f6 8d ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a38a:	eb 03                	jmp    a38f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    a38c:	48 89 c3             	mov    %rax,%rbx
    a38f:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    a396:	48 89 c7             	mov    %rax,%rdi
    a399:	e8 c2 8f ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    a39e:	eb 45                	jmp    a3e5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    a3a0:	48 89 c3             	mov    %rax,%rbx
    a3a3:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    a3aa:	48 89 c7             	mov    %rax,%rdi
    a3ad:	e8 ce 8d ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a3b2:	eb 03                	jmp    a3b7 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    a3b4:	48 89 c3             	mov    %rax,%rbx
    a3b7:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    a3bb:	48 89 c7             	mov    %rax,%rdi
    a3be:	e8 9d 8f ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    a3c3:	eb 20                	jmp    a3e5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    a3c5:	48 89 c3             	mov    %rax,%rbx
    a3c8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a3cc:	48 89 c7             	mov    %rax,%rdi
    a3cf:	e8 ac 8d ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    a3d4:	eb 03                	jmp    a3d9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    a3d6:	48 89 c3             	mov    %rax,%rbx
    a3d9:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a3dd:	48 89 c7             	mov    %rax,%rdi
    a3e0:	e8 7b 8f ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
}
    a3e5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    a3ec:	48 89 c7             	mov    %rax,%rdi
    a3ef:	e8 a6 1a 00 00       	call   be9a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    a3f4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    a3fb:	48 89 c7             	mov    %rax,%rdi
    a3fe:	e8 65 ad ff ff       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    a403:	48 89 d8             	mov    %rbx,%rax
    a406:	48 89 c7             	mov    %rax,%rdi
    a409:	e8 62 91 ff ff       	call   3570 <_Unwind_Resume@plt>
    a40e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a412:	c9                   	leave
    a413:	c3                   	ret

000000000000a414 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    a414:	55                   	push   %rbp
    a415:	48 89 e5             	mov    %rsp,%rbp
    a418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a41c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    a420:	b8 01 00 00 00       	mov    $0x1,%eax
}
    a425:	5d                   	pop    %rbp
    a426:	c3                   	ret
    a427:	90                   	nop

000000000000a428 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    a428:	55                   	push   %rbp
    a429:	48 89 e5             	mov    %rsp,%rbp
    a42c:	41 54                	push   %r12
    a42e:	53                   	push   %rbx
    a42f:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    a436:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    a43d:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    a444:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a44b:	48 8b 50 48          	mov    0x48(%rax),%rdx
    a44f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a456:	48 8b 48 58          	mov    0x58(%rax),%rcx
    a45a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a45e:	48 89 ce             	mov    %rcx,%rsi
    a461:	48 89 c7             	mov    %rax,%rdi
    a464:	e8 47 a6 ff ff       	call   4ab0 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    a469:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a470:	48 8b 50 48          	mov    0x48(%rax),%rdx
    a474:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a47b:	48 8b 48 58          	mov    0x58(%rax),%rcx
    a47f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a486:	48 89 ce             	mov    %rcx,%rsi
    a489:	48 89 c7             	mov    %rax,%rdi
    a48c:	e8 cd a6 ff ff       	call   4b5e <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    a491:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a498:	48 8b 50 48          	mov    0x48(%rax),%rdx
    a49c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a4a3:	48 8b 48 58          	mov    0x58(%rax),%rcx
    a4a7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a4ae:	48 89 ce             	mov    %rcx,%rsi
    a4b1:	48 89 c7             	mov    %rax,%rdi
    a4b4:	e8 1c a8 ff ff       	call   4cd5 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    a4b9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a4c0:	48 89 c6             	mov    %rax,%rsi
    a4c3:	b8 00 00 00 00       	mov    $0x0,%eax
    a4c8:	ba 0d 00 00 00       	mov    $0xd,%edx
    a4cd:	48 89 f7             	mov    %rsi,%rdi
    a4d0:	48 89 d1             	mov    %rdx,%rcx
    a4d3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    a4d6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a4dd:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    a4e3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a4ea:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a4f1:	00 

  /* Images of the swapchain can be used to create a VkImageView with a
  different format than what the swapchain was create with. */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    a4f2:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    a4f9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    a4fd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a504:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    a508:	8b 45 80             	mov    -0x80(%rbp),%eax
    a50b:	83 c0 01             	add    $0x1,%eax
    a50e:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    a511:	8b 45 84             	mov    -0x7c(%rbp),%eax
    a514:	85 c0                	test   %eax,%eax
    a516:	74 0e                	je     a526 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    a518:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    a51b:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    a51e:	73 06                	jae    a526 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    a520:	8b 45 84             	mov    -0x7c(%rbp),%eax
    a523:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    a526:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a52d:	8b 55 ec             	mov    -0x14(%rbp),%edx
    a530:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    a533:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a53a:	48 89 c7             	mov    %rax,%rdi
    a53d:	e8 8a 21 00 00       	call   c6cc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    a542:	84 c0                	test   %al,%al
    a544:	74 3b                	je     a581 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    a546:	bf 10 00 00 00       	mov    $0x10,%edi
    a54b:	e8 e0 8b ff ff       	call   3130 <__cxa_allocate_exception@plt>
    a550:	48 89 c3             	mov    %rax,%rbx
    a553:	48 8d 05 2a 87 00 00 	lea    0x872a(%rip),%rax        # 12c84 <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    a55a:	48 89 c6             	mov    %rax,%rsi
    a55d:	48 89 df             	mov    %rbx,%rdi
    a560:	e8 7b 8b ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    a565:	48 8b 05 3c 1a 01 00 	mov    0x11a3c(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a56c:	48 89 c2             	mov    %rax,%rdx
    a56f:	48 8d 05 ca 17 01 00 	lea    0x117ca(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a576:	48 89 c6             	mov    %rax,%rsi
    a579:	48 89 df             	mov    %rbx,%rdi
    a57c:	e8 9f 8f ff ff       	call   3520 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    a581:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a588:	be 00 00 00 00       	mov    $0x0,%esi
    a58d:	48 89 c7             	mov    %rax,%rdi
    a590:	e8 79 21 00 00       	call   c70e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    a595:	8b 10                	mov    (%rax),%edx
    a597:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a59e:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    a5a1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a5a8:	be 00 00 00 00       	mov    $0x0,%esi
    a5ad:	48 89 c7             	mov    %rax,%rdi
    a5b0:	e8 59 21 00 00       	call   c70e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    a5b5:	8b 50 04             	mov    0x4(%rax),%edx
    a5b8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a5bf:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    a5c2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a5c9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    a5cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5d1:	48 89 c7             	mov    %rax,%rdi
    a5d4:	e8 55 21 00 00       	call   c72e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    a5d9:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    a5e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5e4:	48 89 c7             	mov    %rax,%rdi
    a5e7:	e8 68 21 00 00       	call   c754 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    a5ec:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    a5f3:	eb 5b                	jmp    a650 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    a5f5:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    a5fc:	48 89 c7             	mov    %rax,%rdi
    a5ff:	e8 d4 21 00 00       	call   c7d8 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    a604:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    a608:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a60c:	8b 00                	mov    (%rax),%eax
    a60e:	83 f8 2b             	cmp    $0x2b,%eax
    a611:	75 2e                	jne    a641 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    a613:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a617:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    a61a:	85 c0                	test   %eax,%eax
    a61c:	75 23                	jne    a641 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    a61e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a622:	8b 10                	mov    (%rax),%edx
    a624:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a62b:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    a62e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a632:	8b 50 04             	mov    0x4(%rax),%edx
    a635:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a63c:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    a63f:	eb 2c                	jmp    a66d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    a641:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    a648:	48 89 c7             	mov    %rax,%rdi
    a64b:	e8 68 21 00 00       	call   c7b8 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    a650:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    a657:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    a65e:	48 89 d6             	mov    %rdx,%rsi
    a661:	48 89 c7             	mov    %rax,%rdi
    a664:	e8 14 21 00 00       	call   c77d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a669:	84 c0                	test   %al,%al
    a66b:	75 88                	jne    a5f5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    a66d:	8b 45 88             	mov    -0x78(%rbp),%eax
    a670:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    a673:	8b 45 8c             	mov    -0x74(%rbp),%eax
    a676:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    a679:	8b 45 98             	mov    -0x68(%rbp),%eax
    a67c:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    a67f:	73 06                	jae    a687 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x25f>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    a681:	8b 45 98             	mov    -0x68(%rbp),%eax
    a684:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    a687:	8b 45 9c             	mov    -0x64(%rbp),%eax
    a68a:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    a68d:	73 06                	jae    a695 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x26d>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    a68f:	8b 45 9c             	mov    -0x64(%rbp),%eax
    a692:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    a695:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a69c:	8b 55 e8             	mov    -0x18(%rbp),%edx
    a69f:	89 50 2c             	mov    %edx,0x2c(%rax)
    a6a2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a6a9:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    a6ac:	89 50 30             	mov    %edx,0x30(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    a6af:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a6b6:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    a6bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a6c4:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    a6cb:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    a6d2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a6d9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a6dd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a6e1:	48 89 c7             	mov    %rax,%rdi
    a6e4:	e8 01 21 00 00       	call   c7ea <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    a6e9:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    a6f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a6f4:	48 89 c7             	mov    %rax,%rdi
    a6f7:	e8 14 21 00 00       	call   c810 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    a6fc:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    a703:	eb 3c                	jmp    a741 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x319>
    a705:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    a70c:	48 89 c7             	mov    %rax,%rdi
    a70f:	e8 80 21 00 00       	call   c894 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    a714:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    a718:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a71c:	8b 00                	mov    (%rax),%eax
    a71e:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    a721:	75 0f                	jne    a732 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x30a>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    a723:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a72a:	8b 55 cc             	mov    -0x34(%rbp),%edx
    a72d:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    a730:	eb 2c                	jmp    a75e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x336>
  for (const auto &presentMode : surfacePresentModes) {
    a732:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    a739:	48 89 c7             	mov    %rax,%rdi
    a73c:	e8 33 21 00 00       	call   c874 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    a741:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    a748:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    a74f:	48 89 d6             	mov    %rdx,%rsi
    a752:	48 89 c7             	mov    %rax,%rdi
    a755:	e8 df 20 00 00       	call   c839 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a75a:	84 c0                	test   %al,%al
    a75c:	75 a7                	jne    a705 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x2dd>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    a75e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a765:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    a76c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a773:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    a77a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a781:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    a788:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a78f:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    a796:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    a797:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    a79a:	83 e0 01             	and    $0x1,%eax
    a79d:	85 c0                	test   %eax,%eax
    a79f:	74 1e                	je     a7bf <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x397>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    a7a1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a7a8:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    a7af:	8b 45 ac             	mov    -0x54(%rbp),%eax
    a7b2:	83 e0 01             	and    $0x1,%eax
    a7b5:	85 c0                	test   %eax,%eax
    a7b7:	0f 84 9b 00 00 00    	je     a858 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x430>
    a7bd:	eb 3b                	jmp    a7fa <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3d2>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    a7bf:	bf 10 00 00 00       	mov    $0x10,%edi
    a7c4:	e8 67 89 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    a7c9:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    a7cc:	48 8d 05 d5 84 00 00 	lea    0x84d5(%rip),%rax        # 12ca8 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    a7d3:	48 89 c6             	mov    %rax,%rsi
    a7d6:	48 89 df             	mov    %rbx,%rdi
    a7d9:	e8 02 89 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    a7de:	48 8b 05 c3 17 01 00 	mov    0x117c3(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a7e5:	48 89 c2             	mov    %rax,%rdx
    a7e8:	48 8d 05 51 15 01 00 	lea    0x11551(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a7ef:	48 89 c6             	mov    %rax,%rsi
    a7f2:	48 89 df             	mov    %rbx,%rdi
    a7f5:	e8 26 8d ff ff       	call   3520 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    a7fa:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a801:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    a808:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a80f:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    a816:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a81d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a824:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    a825:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a82c:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    a833:	00 

  return swapchainCreateInfo;
    a834:	90                   	nop
}
    a835:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a83c:	48 89 c7             	mov    %rax,%rdi
    a83f:	e8 c2 b2 ff ff       	call   5b06 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    a844:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a84b:	48 89 c7             	mov    %rax,%rdi
    a84e:	e8 4f b1 ff ff       	call   59a2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    a853:	e9 9c 00 00 00       	jmp    a8f4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4cc>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    a858:	bf 10 00 00 00       	mov    $0x10,%edi
    a85d:	e8 ce 88 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    a862:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    a865:	48 8d 05 74 84 00 00 	lea    0x8474(%rip),%rax        # 12ce0 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    a86c:	48 89 c6             	mov    %rax,%rsi
    a86f:	48 89 df             	mov    %rbx,%rdi
    a872:	e8 69 88 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    a877:	48 8b 05 2a 17 01 00 	mov    0x1172a(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a87e:	48 89 c2             	mov    %rax,%rdx
    a881:	48 8d 05 b8 14 01 00 	lea    0x114b8(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a888:	48 89 c6             	mov    %rax,%rsi
    a88b:	48 89 df             	mov    %rbx,%rdi
    a88e:	e8 8d 8c ff ff       	call   3520 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    a893:	49 89 c4             	mov    %rax,%r12
    a896:	48 89 df             	mov    %rbx,%rdi
    a899:	e8 32 89 ff ff       	call   31d0 <__cxa_free_exception@plt>
    a89e:	4c 89 e3             	mov    %r12,%rbx
    a8a1:	eb 23                	jmp    a8c6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x49e>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    a8a3:	49 89 c4             	mov    %rax,%r12
    a8a6:	48 89 df             	mov    %rbx,%rdi
    a8a9:	e8 22 89 ff ff       	call   31d0 <__cxa_free_exception@plt>
    a8ae:	4c 89 e3             	mov    %r12,%rbx
    a8b1:	eb 13                	jmp    a8c6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x49e>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    a8b3:	49 89 c4             	mov    %rax,%r12
    a8b6:	48 89 df             	mov    %rbx,%rdi
    a8b9:	e8 12 89 ff ff       	call   31d0 <__cxa_free_exception@plt>
    a8be:	4c 89 e3             	mov    %r12,%rbx
    a8c1:	eb 03                	jmp    a8c6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x49e>
}
    a8c3:	48 89 c3             	mov    %rax,%rbx
    a8c6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    a8cd:	48 89 c7             	mov    %rax,%rdi
    a8d0:	e8 31 b2 ff ff       	call   5b06 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    a8d5:	eb 03                	jmp    a8da <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4b2>
    a8d7:	48 89 c3             	mov    %rax,%rbx
    a8da:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    a8e1:	48 89 c7             	mov    %rax,%rdi
    a8e4:	e8 b9 b0 ff ff       	call   59a2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    a8e9:	48 89 d8             	mov    %rbx,%rax
    a8ec:	48 89 c7             	mov    %rax,%rdi
    a8ef:	e8 7c 8c ff ff       	call   3570 <_Unwind_Resume@plt>
    a8f4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    a8fb:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    a902:	5b                   	pop    %rbx
    a903:	41 5c                	pop    %r12
    a905:	5d                   	pop    %rbp
    a906:	c3                   	ret
    a907:	90                   	nop

000000000000a908 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    a908:	55                   	push   %rbp
    a909:	48 89 e5             	mov    %rsp,%rbp
    a90c:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a910:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    a914:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    a918:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a91c:	48 89 d6             	mov    %rdx,%rsi
    a91f:	48 89 c7             	mov    %rax,%rdi
    a922:	e8 01 fb ff ff       	call   a428 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    a927:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a92b:	48 8b 40 50          	mov    0x50(%rax),%rax
    a92f:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    a933:	ba 00 00 00 00       	mov    $0x0,%edx
    a938:	48 89 ce             	mov    %rcx,%rsi
    a93b:	48 89 c7             	mov    %rax,%rdi
    a93e:	e8 a3 94 ff ff       	call   3de6 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    a943:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    a947:	48 89 42 68          	mov    %rax,0x68(%rdx)
}
    a94b:	90                   	nop
    a94c:	c9                   	leave
    a94d:	c3                   	ret

000000000000a94e <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    a94e:	55                   	push   %rbp
    a94f:	48 89 e5             	mov    %rsp,%rbp
    a952:	41 57                	push   %r15
    a954:	41 56                	push   %r14
    a956:	41 55                	push   %r13
    a958:	41 54                	push   %r12
    a95a:	53                   	push   %rbx
    a95b:	48 83 ec 48          	sub    $0x48,%rsp
    a95f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    a963:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a967:	48 8d 58 10          	lea    0x10(%rax),%rbx
    a96b:	48 8d 05 9f 83 00 00 	lea    0x839f(%rip),%rax        # 12d11 <_ZN6__pstl9execution2v1L5unseqE+0xfa>
    a972:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    a976:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a97a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    a97e:	48 c7 45 98 01 00 00 	movq   $0x1,-0x68(%rbp)
    a985:	00 
    a986:	48 8d 45 be          	lea    -0x42(%rbp),%rax
    a98a:	48 89 c7             	mov    %rax,%rdi
    a98d:	e8 96 a8 ff ff       	call   5228 <_ZNSaIPKcEC1Ev>
    a992:	48 8d 45 be          	lea    -0x42(%rbp),%rax
    a996:	48 8b 75 90          	mov    -0x70(%rbp),%rsi
    a99a:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    a99e:	49 89 f0             	mov    %rsi,%r8
    a9a1:	49 89 f9             	mov    %rdi,%r9
    a9a4:	48 89 fa             	mov    %rdi,%rdx
    a9a7:	48 89 c1             	mov    %rax,%rcx
    a9aa:	4c 89 c6             	mov    %r8,%rsi
    a9ad:	48 89 df             	mov    %rbx,%rdi
    a9b0:	e8 e5 15 00 00       	call   bf9a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    a9b5:	48 8d 45 be          	lea    -0x42(%rbp),%rax
    a9b9:	48 89 c7             	mov    %rax,%rdi
    a9bc:	e8 83 a8 ff ff       	call   5244 <_ZNSaIPKcED1Ev>
    a9c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a9c5:	48 8d 58 28          	lea    0x28(%rax),%rbx
    a9c9:	4c 8d 25 10 13 01 00 	lea    0x11310(%rip),%r12        # 1bce0 <C.61.0>
    a9d0:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    a9d6:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    a9da:	48 89 c7             	mov    %rax,%rdi
    a9dd:	e8 46 a8 ff ff       	call   5228 <_ZNSaIPKcEC1Ev>
    a9e2:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    a9e6:	4d 89 e0             	mov    %r12,%r8
    a9e9:	4d 89 e9             	mov    %r13,%r9
    a9ec:	4c 89 e6             	mov    %r12,%rsi
    a9ef:	4c 89 ef             	mov    %r13,%rdi
    a9f2:	48 89 fa             	mov    %rdi,%rdx
    a9f5:	48 89 c1             	mov    %rax,%rcx
    a9f8:	4c 89 c6             	mov    %r8,%rsi
    a9fb:	48 89 df             	mov    %rbx,%rdi
    a9fe:	e8 97 15 00 00       	call   bf9a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    aa03:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    aa07:	48 89 c7             	mov    %rax,%rdi
    aa0a:	e8 35 a8 ff ff       	call   5244 <_ZNSaIPKcED1Ev>
    aa0f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa13:	48 83 c0 68          	add    $0x68,%rax
    aa17:	48 89 c7             	mov    %rax,%rdi
    aa1a:	e8 eb 14 00 00       	call   bf0a <_ZN9VulkanApp16SwapChainWrapperC1Ev>
    aa1f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa23:	48 8d 98 98 00 00 00 	lea    0x98(%rax),%rbx
    aa2a:	48 8d 05 f3 82 00 00 	lea    0x82f3(%rip),%rax        # 12d24 <_ZN6__pstl9execution2v1L5unseqE+0x10d>
    aa31:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    aa35:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    aa39:	49 89 c6             	mov    %rax,%r14
    aa3c:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    aa42:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    aa46:	48 89 c7             	mov    %rax,%rdi
    aa49:	e8 da a7 ff ff       	call   5228 <_ZNSaIPKcEC1Ev>
    aa4e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    aa52:	4d 89 f0             	mov    %r14,%r8
    aa55:	4d 89 f9             	mov    %r15,%r9
    aa58:	4c 89 f6             	mov    %r14,%rsi
    aa5b:	4c 89 ff             	mov    %r15,%rdi
    aa5e:	48 89 fa             	mov    %rdi,%rdx
    aa61:	48 89 c1             	mov    %rax,%rcx
    aa64:	4c 89 c6             	mov    %r8,%rsi
    aa67:	48 89 df             	mov    %rbx,%rdi
    aa6a:	e8 2b 15 00 00       	call   bf9a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    aa6f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    aa73:	48 89 c7             	mov    %rax,%rdi
    aa76:	e8 c9 a7 ff ff       	call   5244 <_ZNSaIPKcED1Ev>
  createWindow();
    aa7b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa7f:	48 89 c7             	mov    %rax,%rdi
    aa82:	e8 97 ed ff ff       	call   981e <_ZN9VulkanApp12createWindowEv>
  createInstance();
    aa87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa8b:	48 89 c7             	mov    %rax,%rdi
    aa8e:	e8 cb ed ff ff       	call   985e <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    aa93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa97:	48 89 c7             	mov    %rax,%rdi
    aa9a:	e8 a5 ef ff ff       	call   9a44 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    aa9f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aaa3:	48 89 c7             	mov    %rax,%rdi
    aaa6:	e8 2d f0 ff ff       	call   9ad8 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    aaab:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aaaf:	48 89 c7             	mov    %rax,%rdi
    aab2:	e8 79 f2 ff ff       	call   9d30 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    aab7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aabb:	48 89 c7             	mov    %rax,%rdi
    aabe:	e8 45 fe ff ff       	call   a908 <_ZN9VulkanApp15createSwapchainEv>
}
    aac3:	e9 8c 00 00 00       	jmp    ab54 <_ZN9VulkanAppC1Ev+0x206>
VulkanApp::VulkanApp() {
    aac8:	48 89 c3             	mov    %rax,%rbx
    aacb:	48 8d 45 be          	lea    -0x42(%rbp),%rax
    aacf:	48 89 c7             	mov    %rax,%rdi
    aad2:	e8 6d a7 ff ff       	call   5244 <_ZNSaIPKcED1Ev>
    aad7:	48 89 d8             	mov    %rbx,%rax
    aada:	48 89 c7             	mov    %rax,%rdi
    aadd:	e8 8e 8a ff ff       	call   3570 <_Unwind_Resume@plt>
    aae2:	48 89 c3             	mov    %rax,%rbx
    aae5:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    aae9:	48 89 c7             	mov    %rax,%rdi
    aaec:	e8 53 a7 ff ff       	call   5244 <_ZNSaIPKcED1Ev>
    aaf1:	eb 46                	jmp    ab39 <_ZN9VulkanAppC1Ev+0x1eb>
    aaf3:	48 89 c3             	mov    %rax,%rbx
    aaf6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    aafa:	48 89 c7             	mov    %rax,%rdi
    aafd:	e8 42 a7 ff ff       	call   5244 <_ZNSaIPKcED1Ev>
    ab02:	eb 15                	jmp    ab19 <_ZN9VulkanAppC1Ev+0x1cb>
}
    ab04:	48 89 c3             	mov    %rax,%rbx
    ab07:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab0b:	48 05 98 00 00 00    	add    $0x98,%rax
    ab11:	48 89 c7             	mov    %rax,%rdi
    ab14:	e8 09 15 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ab19:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab1d:	48 83 c0 68          	add    $0x68,%rax
    ab21:	48 89 c7             	mov    %rax,%rdi
    ab24:	e8 01 14 00 00       	call   bf2a <_ZN9VulkanApp16SwapChainWrapperD1Ev>
VulkanApp::VulkanApp() {
    ab29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab2d:	48 83 c0 28          	add    $0x28,%rax
}
    ab31:	48 89 c7             	mov    %rax,%rdi
    ab34:	e8 e9 14 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ab39:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab3d:	48 83 c0 10          	add    $0x10,%rax
    ab41:	48 89 c7             	mov    %rax,%rdi
    ab44:	e8 d9 14 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ab49:	48 89 d8             	mov    %rbx,%rax
    ab4c:	48 89 c7             	mov    %rax,%rdi
    ab4f:	e8 1c 8a ff ff       	call   3570 <_Unwind_Resume@plt>
    ab54:	48 83 c4 48          	add    $0x48,%rsp
    ab58:	5b                   	pop    %rbx
    ab59:	41 5c                	pop    %r12
    ab5b:	41 5d                	pop    %r13
    ab5d:	41 5e                	pop    %r14
    ab5f:	41 5f                	pop    %r15
    ab61:	5d                   	pop    %rbp
    ab62:	c3                   	ret
    ab63:	90                   	nop

000000000000ab64 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    ab64:	55                   	push   %rbp
    ab65:	48 89 e5             	mov    %rsp,%rbp
    ab68:	48 83 ec 10          	sub    $0x10,%rsp
    ab6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  vkh::destroySwapchain(device, swapchain.self);
    ab70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab74:	48 8b 48 68          	mov    0x68(%rax),%rcx
    ab78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab7c:	48 8b 40 50          	mov    0x50(%rax),%rax
    ab80:	ba 00 00 00 00       	mov    $0x0,%edx
    ab85:	48 89 ce             	mov    %rcx,%rsi
    ab88:	48 89 c7             	mov    %rax,%rdi
    ab8b:	e8 8b 93 ff ff       	call   3f1b <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    ab90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab94:	48 8b 40 50          	mov    0x50(%rax),%rax
    ab98:	be 00 00 00 00       	mov    $0x0,%esi
    ab9d:	48 89 c7             	mov    %rax,%rdi
    aba0:	e8 22 93 ff ff       	call   3ec7 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    aba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba9:	48 8b 48 40          	mov    0x40(%rax),%rcx
    abad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abb1:	48 8b 40 08          	mov    0x8(%rax),%rax
    abb5:	ba 00 00 00 00       	mov    $0x0,%edx
    abba:	48 89 ce             	mov    %rcx,%rsi
    abbd:	48 89 c7             	mov    %rax,%rdi
    abc0:	e8 ef e7 ff ff       	call   93b4 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    abc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc9:	48 8b 48 48          	mov    0x48(%rax),%rcx
    abcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abd1:	48 8b 40 08          	mov    0x8(%rax),%rax
    abd5:	ba 00 00 00 00       	mov    $0x0,%edx
    abda:	48 89 ce             	mov    %rcx,%rsi
    abdd:	48 89 c7             	mov    %rax,%rdi
    abe0:	e8 08 93 ff ff       	call   3eed <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    abe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abe9:	48 8b 40 08          	mov    0x8(%rax),%rax
    abed:	be 00 00 00 00       	mov    $0x0,%esi
    abf2:	48 89 c7             	mov    %rax,%rdi
    abf5:	e8 a7 92 ff ff       	call   3ea1 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  glfwDestroyWindow(window);
    abfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfe:	48 8b 00             	mov    (%rax),%rax
    ac01:	48 89 c7             	mov    %rax,%rdi
    ac04:	e8 a7 84 ff ff       	call   30b0 <glfwDestroyWindow@plt>
  glfwTerminate();
    ac09:	e8 f2 86 ff ff       	call   3300 <glfwTerminate@plt>
}
    ac0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac12:	48 05 98 00 00 00    	add    $0x98,%rax
    ac18:	48 89 c7             	mov    %rax,%rdi
    ac1b:	e8 02 14 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ac20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac24:	48 83 c0 68          	add    $0x68,%rax
    ac28:	48 89 c7             	mov    %rax,%rdi
    ac2b:	e8 fa 12 00 00       	call   bf2a <_ZN9VulkanApp16SwapChainWrapperD1Ev>
VulkanApp::~VulkanApp() {
    ac30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac34:	48 83 c0 28          	add    $0x28,%rax
}
    ac38:	48 89 c7             	mov    %rax,%rdi
    ac3b:	e8 e2 13 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ac40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac44:	48 83 c0 10          	add    $0x10,%rax
    ac48:	48 89 c7             	mov    %rax,%rdi
    ac4b:	e8 d2 13 00 00       	call   c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ac50:	90                   	nop
    ac51:	c9                   	leave
    ac52:	c3                   	ret
    ac53:	90                   	nop

000000000000ac54 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    ac54:	55                   	push   %rbp
    ac55:	48 89 e5             	mov    %rsp,%rbp
    ac58:	53                   	push   %rbx
    ac59:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    ac60:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    ac67:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ac6b:	48 89 c7             	mov    %rax,%rdi
    ac6e:	e8 09 1d 00 00       	call   c97c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    ac73:	f2 0f 10 05 65 83 00 	movsd  0x8365(%rip),%xmm0        # 12fe0 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
    ac7a:	00 
    ac7b:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
  while (!glfwWindowShouldClose(window)) {
    ac80:	e9 b7 00 00 00       	jmp    ad3c <_ZN9VulkanApp3runEv+0xe8>
    vkh::Timer time_circle;
    ac85:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ac89:	48 89 c7             	mov    %rax,%rdi
    ac8c:	e8 eb 1c 00 00       	call   c97c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    ac91:	e8 1a 86 ff ff       	call   32b0 <glfwPollEvents@plt>

    for (int i = 0; i < 1'000'000; ++i) {
    ac96:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    ac9d:	eb 04                	jmp    aca3 <_ZN9VulkanApp3runEv+0x4f>
    ac9f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    aca3:	81 7d ec 3f 42 0f 00 	cmpl   $0xf423f,-0x14(%rbp)
    acaa:	7e f3                	jle    ac9f <_ZN9VulkanApp3runEv+0x4b>
    }

    double current = static_cast<double>(time_total.current());
    acac:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    acb0:	48 89 c7             	mov    %rax,%rdi
    acb3:	e8 92 12 00 00       	call   bf4a <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    acb8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    acbc:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    acc1:	f2 0f 11 45 d8       	movsd  %xmm0,-0x28(%rbp)
    if (current >= sec_to_mics) {
    acc6:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
    accb:	66 0f 2f 05 0d 83 00 	comisd 0x830d(%rip),%xmm0        # 12fe0 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
    acd2:	00 
    acd3:	72 5b                	jb     ad30 <_ZN9VulkanApp3runEv+0xdc>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    acd5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    acd9:	48 89 c7             	mov    %rax,%rdi
    acdc:	e8 69 12 00 00       	call   bf4a <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    ace1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    ace5:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    acea:	f2 0f 10 05 ee 82 00 	movsd  0x82ee(%rip),%xmm0        # 12fe0 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
    acf1:	00 
    acf2:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    acf6:	66 48 0f 7e c0       	movq   %xmm0,%rax
    acfb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    ad00:	48 8d 05 f9 15 01 00 	lea    0x115f9(%rip),%rax        # 1c300 <_ZSt4cout@GLIBCXX_3.4>
    ad07:	48 89 c7             	mov    %rax,%rdi
    ad0a:	e8 b1 88 ff ff       	call   35c0 <_ZNSolsEd@plt>
    ad0f:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    ad12:	48 8d 05 1c 80 00 00 	lea    0x801c(%rip),%rax        # 12d35 <_ZN6__pstl9execution2v1L5unseqE+0x11e>
    ad19:	48 89 c6             	mov    %rax,%rsi
    ad1c:	48 89 d7             	mov    %rdx,%rdi
    ad1f:	e8 9c 85 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    ad24:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ad28:	48 89 c7             	mov    %rax,%rdi
    ad2b:	e8 5c 1d 00 00       	call   ca8c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    ad30:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ad34:	48 89 c7             	mov    %rax,%rdi
    ad37:	e8 b6 1c 00 00       	call   c9f2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    ad3c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    ad43:	48 8b 00             	mov    (%rax),%rax
    ad46:	48 89 c7             	mov    %rax,%rdi
    ad49:	e8 62 88 ff ff       	call   35b0 <glfwWindowShouldClose@plt>
    ad4e:	85 c0                	test   %eax,%eax
    ad50:	0f 94 c0             	sete   %al
    ad53:	84 c0                	test   %al,%al
    ad55:	0f 85 2a ff ff ff    	jne    ac85 <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    ad5b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    ad62:	48 8b 40 50          	mov    0x50(%rax),%rax
    ad66:	48 89 c7             	mov    %rax,%rdi
    ad69:	e8 22 83 ff ff       	call   3090 <vkDeviceWaitIdle@plt>
}
    ad6e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ad72:	48 89 c7             	mov    %rax,%rdi
    ad75:	e8 78 1c 00 00       	call   c9f2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    ad7a:	eb 2b                	jmp    ada7 <_ZN9VulkanApp3runEv+0x153>
  }
    ad7c:	48 89 c3             	mov    %rax,%rbx
    ad7f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ad83:	48 89 c7             	mov    %rax,%rdi
    ad86:	e8 67 1c 00 00       	call   c9f2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    ad8b:	eb 03                	jmp    ad90 <_ZN9VulkanApp3runEv+0x13c>
}
    ad8d:	48 89 c3             	mov    %rax,%rbx
    ad90:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ad94:	48 89 c7             	mov    %rax,%rdi
    ad97:	e8 56 1c 00 00       	call   c9f2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    ad9c:	48 89 d8             	mov    %rbx,%rax
    ad9f:	48 89 c7             	mov    %rax,%rdi
    ada2:	e8 c9 87 ff ff       	call   3570 <_Unwind_Resume@plt>
    ada7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    adab:	c9                   	leave
    adac:	c3                   	ret
    adad:	90                   	nop

000000000000adae <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    adae:	55                   	push   %rbp
    adaf:	48 89 e5             	mov    %rsp,%rbp
    adb2:	41 54                	push   %r12
    adb4:	53                   	push   %rbx
    adb5:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    adbc:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    adc3:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    adca:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    add1:	48 89 c7             	mov    %rax,%rdi
    add4:	e8 f7 85 ff ff       	call   33d0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    add9:	be 10 00 00 00       	mov    $0x10,%esi
    adde:	bf 08 00 00 00       	mov    $0x8,%edi
    ade3:	e8 cd 0e 00 00       	call   bcb5 <_ZStorSt13_Ios_OpenmodeS_>
    ade8:	89 c2                	mov    %eax,%edx
    adea:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    adf1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    adf8:	48 89 ce             	mov    %rcx,%rsi
    adfb:	48 89 c7             	mov    %rax,%rdi
    adfe:	e8 5d 86 ff ff       	call   3460 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    ae03:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ae0a:	48 89 c7             	mov    %rax,%rdi
    ae0d:	e8 2e 87 ff ff       	call   3540 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    ae12:	83 f0 01             	xor    $0x1,%eax
    ae15:	84 c0                	test   %al,%al
    ae17:	0f 84 97 00 00 00    	je     aeb4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    ae1d:	bf 10 00 00 00       	mov    $0x10,%edi
    ae22:	e8 09 83 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    ae27:	48 89 c3             	mov    %rax,%rbx
    ae2a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ae31:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    ae38:	48 8d 0d fc 7e 00 00 	lea    0x7efc(%rip),%rcx        # 12d3b <_ZN6__pstl9execution2v1L5unseqE+0x124>
    ae3f:	48 89 ce             	mov    %rcx,%rsi
    ae42:	48 89 c7             	mov    %rax,%rdi
    ae45:	e8 62 1c 00 00       	call   caac <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    ae4a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ae51:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    ae58:	ba 0a 00 00 00       	mov    $0xa,%edx
    ae5d:	48 89 ce             	mov    %rcx,%rsi
    ae60:	48 89 c7             	mov    %rax,%rdi
    ae63:	e8 46 1d 00 00       	call   cbae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    ae68:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ae6f:	48 89 c6             	mov    %rax,%rsi
    ae72:	48 89 df             	mov    %rbx,%rdi
    ae75:	e8 76 86 ff ff       	call   34f0 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    ae7a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ae81:	48 89 c7             	mov    %rax,%rdi
    ae84:	e8 f7 82 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ae89:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ae90:	48 89 c7             	mov    %rax,%rdi
    ae93:	e8 e8 82 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ae98:	48 8b 05 09 11 01 00 	mov    0x11109(%rip),%rax        # 1bfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ae9f:	48 89 c2             	mov    %rax,%rdx
    aea2:	48 8d 05 97 0e 01 00 	lea    0x10e97(%rip),%rax        # 1bd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    aea9:	48 89 c6             	mov    %rax,%rsi
    aeac:	48 89 df             	mov    %rbx,%rdi
    aeaf:	e8 6c 86 ff ff       	call   3520 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    aeb4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    aebb:	48 83 c0 10          	add    $0x10,%rax
    aebf:	48 8d 15 85 7e 00 00 	lea    0x7e85(%rip),%rdx        # 12d4b <_ZN6__pstl9execution2v1L5unseqE+0x134>
    aec6:	48 89 d6             	mov    %rdx,%rsi
    aec9:	48 89 c7             	mov    %rax,%rdi
    aecc:	e8 ef 83 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    aed1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    aed8:	48 83 c0 10          	add    $0x10,%rax
    aedc:	48 8d 15 81 7e 00 00 	lea    0x7e81(%rip),%rdx        # 12d64 <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    aee3:	48 89 d6             	mov    %rdx,%rsi
    aee6:	48 89 c7             	mov    %rax,%rdi
    aee9:	e8 d2 83 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    aeee:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    aef5:	be 00 00 00 00       	mov    $0x0,%esi
    aefa:	48 89 c7             	mov    %rax,%rdi
    aefd:	e8 f3 90 ff ff       	call   3ff5 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    af02:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    af09:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    af0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af11:	48 89 c7             	mov    %rax,%rdi
    af14:	e8 ef 15 00 00       	call   c508 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    af19:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    af20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    af24:	48 89 c7             	mov    %rax,%rdi
    af27:	e8 02 16 00 00       	call   c52e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    af2c:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    af33:	eb 64                	jmp    af99 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    af35:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    af3c:	48 89 c7             	mov    %rax,%rdi
    af3f:	e8 72 16 00 00       	call   c5b6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    af44:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    af4b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    af52:	48 83 c0 10          	add    $0x10,%rax
    af56:	48 8d 15 18 7e 00 00 	lea    0x7e18(%rip),%rdx        # 12d75 <_ZN6__pstl9execution2v1L5unseqE+0x15e>
    af5d:	48 89 d6             	mov    %rdx,%rsi
    af60:	48 89 c7             	mov    %rax,%rdi
    af63:	e8 58 83 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    af68:	48 89 c2             	mov    %rax,%rdx
    af6b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    af72:	48 89 c6             	mov    %rax,%rsi
    af75:	48 89 d7             	mov    %rdx,%rdi
    af78:	e8 43 83 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    af7d:	be 0a 00 00 00       	mov    $0xa,%esi
    af82:	48 89 c7             	mov    %rax,%rdi
    af85:	e8 26 84 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    af8a:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    af91:	48 89 c7             	mov    %rax,%rdi
    af94:	e8 f9 15 00 00       	call   c592 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    af99:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    afa0:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    afa7:	48 89 d6             	mov    %rdx,%rsi
    afaa:	48 89 c7             	mov    %rax,%rdi
    afad:	e8 a5 15 00 00       	call   c557 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    afb2:	84 c0                	test   %al,%al
    afb4:	0f 85 7b ff ff ff    	jne    af35 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    afba:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    afc1:	48 83 c0 10          	add    $0x10,%rax
    afc5:	48 8d 15 ac 7d 00 00 	lea    0x7dac(%rip),%rdx        # 12d78 <_ZN6__pstl9execution2v1L5unseqE+0x161>
    afcc:	48 89 d6             	mov    %rdx,%rsi
    afcf:	48 89 c7             	mov    %rax,%rdi
    afd2:	e8 e9 82 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    afd7:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    afde:	48 83 c0 10          	add    $0x10,%rax
    afe2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    afe6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    afea:	48 89 c7             	mov    %rax,%rdi
    afed:	e8 74 10 00 00       	call   c066 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    aff2:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    aff9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    affd:	48 89 c7             	mov    %rax,%rdi
    b000:	e8 87 10 00 00       	call   c08c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    b005:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    b00c:	eb 67                	jmp    b075 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    b00e:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    b015:	48 89 c7             	mov    %rax,%rdi
    b018:	e8 f3 10 00 00       	call   c110 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b01d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    b024:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b02b:	48 83 c0 10          	add    $0x10,%rax
    b02f:	48 8d 15 3f 7d 00 00 	lea    0x7d3f(%rip),%rdx        # 12d75 <_ZN6__pstl9execution2v1L5unseqE+0x15e>
    b036:	48 89 d6             	mov    %rdx,%rsi
    b039:	48 89 c7             	mov    %rax,%rdi
    b03c:	e8 7f 82 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b041:	48 89 c2             	mov    %rax,%rdx
    b044:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    b04b:	48 8b 00             	mov    (%rax),%rax
    b04e:	48 89 c6             	mov    %rax,%rsi
    b051:	48 89 d7             	mov    %rdx,%rdi
    b054:	e8 67 82 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b059:	be 0a 00 00 00       	mov    $0xa,%esi
    b05e:	48 89 c7             	mov    %rax,%rdi
    b061:	e8 4a 83 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    b066:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    b06d:	48 89 c7             	mov    %rax,%rdi
    b070:	e8 7b 10 00 00       	call   c0f0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    b075:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    b07c:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    b083:	48 89 d6             	mov    %rdx,%rsi
    b086:	48 89 c7             	mov    %rax,%rdi
    b089:	e8 27 10 00 00       	call   c0b5 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    b08e:	84 c0                	test   %al,%al
    b090:	0f 85 78 ff ff ff    	jne    b00e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    b096:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b09d:	48 83 c0 10          	add    $0x10,%rax
    b0a1:	be 0a 00 00 00       	mov    $0xa,%esi
    b0a6:	48 89 c7             	mov    %rax,%rdi
    b0a9:	e8 02 83 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    b0ae:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b0b5:	48 83 c0 10          	add    $0x10,%rax
    b0b9:	48 8d 15 c8 7c 00 00 	lea    0x7cc8(%rip),%rdx        # 12d88 <_ZN6__pstl9execution2v1L5unseqE+0x171>
    b0c0:	48 89 d6             	mov    %rdx,%rsi
    b0c3:	48 89 c7             	mov    %rax,%rdi
    b0c6:	e8 f5 81 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    b0cb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b0d2:	48 83 c0 10          	add    $0x10,%rax
    b0d6:	48 8d 15 c0 7c 00 00 	lea    0x7cc0(%rip),%rdx        # 12d9d <_ZN6__pstl9execution2v1L5unseqE+0x186>
    b0dd:	48 89 d6             	mov    %rdx,%rsi
    b0e0:	48 89 c7             	mov    %rax,%rdi
    b0e3:	e8 d8 81 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    b0e8:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    b0ef:	48 89 c7             	mov    %rax,%rdi
    b0f2:	e8 98 92 ff ff       	call   438f <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    b0f7:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    b0fe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    b102:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b106:	48 89 c7             	mov    %rax,%rdi
    b109:	e8 74 e4 ff ff       	call   9582 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    b10e:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    b115:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b119:	48 89 c7             	mov    %rax,%rdi
    b11c:	e8 87 e4 ff ff       	call   95a8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    b121:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    b128:	eb 5e                	jmp    b188 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    b12a:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    b131:	48 89 c7             	mov    %rax,%rdi
    b134:	e8 f7 e4 ff ff       	call   9630 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    b139:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    b13d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b144:	48 83 c0 10          	add    $0x10,%rax
    b148:	48 8d 15 26 7c 00 00 	lea    0x7c26(%rip),%rdx        # 12d75 <_ZN6__pstl9execution2v1L5unseqE+0x15e>
    b14f:	48 89 d6             	mov    %rdx,%rsi
    b152:	48 89 c7             	mov    %rax,%rdi
    b155:	e8 66 81 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b15a:	48 89 c2             	mov    %rax,%rdx
    b15d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b161:	48 89 c6             	mov    %rax,%rsi
    b164:	48 89 d7             	mov    %rdx,%rdi
    b167:	e8 54 81 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b16c:	be 0a 00 00 00       	mov    $0xa,%esi
    b171:	48 89 c7             	mov    %rax,%rdi
    b174:	e8 37 82 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    b179:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    b180:	48 89 c7             	mov    %rax,%rdi
    b183:	e8 84 e4 ff ff       	call   960c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b188:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    b18f:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    b196:	48 89 d6             	mov    %rdx,%rsi
    b199:	48 89 c7             	mov    %rax,%rdi
    b19c:	e8 30 e4 ff ff       	call   95d1 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b1a1:	84 c0                	test   %al,%al
    b1a3:	75 85                	jne    b12a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    b1a5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b1ac:	48 83 c0 10          	add    $0x10,%rax
    b1b0:	48 8d 15 f7 7b 00 00 	lea    0x7bf7(%rip),%rdx        # 12dae <_ZN6__pstl9execution2v1L5unseqE+0x197>
    b1b7:	48 89 d6             	mov    %rdx,%rsi
    b1ba:	48 89 c7             	mov    %rax,%rdi
    b1bd:	e8 fe 80 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    b1c2:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    b1c9:	48 83 c0 28          	add    $0x28,%rax
    b1cd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    b1d1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b1d5:	48 89 c7             	mov    %rax,%rdi
    b1d8:	e8 1b 1a 00 00       	call   cbf8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    b1dd:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    b1e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b1e8:	48 89 c7             	mov    %rax,%rdi
    b1eb:	e8 2e 1a 00 00       	call   cc1e <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    b1f0:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    b1f7:	eb 61                	jmp    b25a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    b1f9:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    b200:	48 89 c7             	mov    %rax,%rdi
    b203:	e8 9a 1a 00 00       	call   cca2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b208:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    b20c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b213:	48 83 c0 10          	add    $0x10,%rax
    b217:	48 8d 15 57 7b 00 00 	lea    0x7b57(%rip),%rdx        # 12d75 <_ZN6__pstl9execution2v1L5unseqE+0x15e>
    b21e:	48 89 d6             	mov    %rdx,%rsi
    b221:	48 89 c7             	mov    %rax,%rdi
    b224:	e8 97 80 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b229:	48 89 c2             	mov    %rax,%rdx
    b22c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b230:	48 8b 00             	mov    (%rax),%rax
    b233:	48 89 c6             	mov    %rax,%rsi
    b236:	48 89 d7             	mov    %rdx,%rdi
    b239:	e8 82 80 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b23e:	be 0a 00 00 00       	mov    $0xa,%esi
    b243:	48 89 c7             	mov    %rax,%rdi
    b246:	e8 65 81 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    b24b:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    b252:	48 89 c7             	mov    %rax,%rdi
    b255:	e8 28 1a 00 00       	call   cc82 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    b25a:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    b261:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    b268:	48 89 d6             	mov    %rdx,%rsi
    b26b:	48 89 c7             	mov    %rax,%rdi
    b26e:	e8 d4 19 00 00       	call   cc47 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    b273:	84 c0                	test   %al,%al
    b275:	75 82                	jne    b1f9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    b277:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b27e:	48 83 c0 10          	add    $0x10,%rax
    b282:	be 0a 00 00 00       	mov    $0xa,%esi
    b287:	48 89 c7             	mov    %rax,%rdi
    b28a:	e8 21 81 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    b28f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b296:	48 83 c0 10          	add    $0x10,%rax
    b29a:	48 8d 15 1d 7b 00 00 	lea    0x7b1d(%rip),%rdx        # 12dbe <_ZN6__pstl9execution2v1L5unseqE+0x1a7>
    b2a1:	48 89 d6             	mov    %rdx,%rsi
    b2a4:	48 89 c7             	mov    %rax,%rdi
    b2a7:	e8 14 80 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    b2ac:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    b2b3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b2b7:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    b2be:	48 89 d6             	mov    %rdx,%rsi
    b2c1:	48 89 c7             	mov    %rax,%rdi
    b2c4:	e8 72 91 ff ff       	call   443b <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    b2c9:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    b2d0:	48 8b 50 58          	mov    0x58(%rax),%rdx
    b2d4:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    b2db:	48 89 d6             	mov    %rdx,%rsi
    b2de:	48 89 c7             	mov    %rax,%rdi
    b2e1:	e8 c4 92 ff ff       	call   45aa <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    b2e6:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    b2ed:	00 
  size_t selectedDeviceIndex = 0;
    b2ee:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    b2f5:	00 
  for (const auto &physDev : physicalDeviceList) {
    b2f6:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    b2fd:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    b301:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b305:	48 89 c7             	mov    %rax,%rdi
    b308:	e8 29 10 00 00       	call   c336 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    b30d:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    b314:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b318:	48 89 c7             	mov    %rax,%rdi
    b31b:	e8 3c 10 00 00       	call   c35c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    b320:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    b327:	e9 c7 06 00 00       	jmp    b9f3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    b32c:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    b333:	48 89 c7             	mov    %rax,%rdi
    b336:	e8 a5 10 00 00       	call   c3e0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    b33b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    b33f:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    b346:	48 89 c7             	mov    %rax,%rdi
    b349:	e8 32 82 ff ff       	call   3580 <_ZNSaIcEC1Ev@plt>
    b34e:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    b355:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    b35c:	48 8d 0d 71 7a 00 00 	lea    0x7a71(%rip),%rcx        # 12dd4 <_ZN6__pstl9execution2v1L5unseqE+0x1bd>
    b363:	48 89 ce             	mov    %rcx,%rsi
    b366:	48 89 c7             	mov    %rax,%rdi
    b369:	e8 42 86 ff ff       	call   39b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b36e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    b375:	48 89 c7             	mov    %rax,%rdi
    b378:	e8 e3 7f ff ff       	call   3360 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    b37d:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    b384:	b8 00 00 00 00       	mov    $0x0,%eax
    b389:	b9 0e 00 00 00       	mov    $0xe,%ecx
    b38e:	48 89 d7             	mov    %rdx,%rdi
    b391:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    b394:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    b39b:	00 00 00 
    vk11Props.pNext = nullptr;
    b39e:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    b3a5:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    b3a9:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    b3b0:	b8 00 00 00 00       	mov    $0x0,%eax
    b3b5:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    b3ba:	48 89 d7             	mov    %rdx,%rdi
    b3bd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    b3c0:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    b3c7:	00 00 00 
    vk12Props.pNext = &vk11Props;
    b3ca:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    b3d1:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    b3d8:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    b3df:	b8 00 00 00 00       	mov    $0x0,%eax
    b3e4:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    b3e9:	48 89 d7             	mov    %rdx,%rdi
    b3ec:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    b3ef:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    b3f6:	00 00 00 
    vk13Props.pNext = &vk12Props;
    b3f9:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    b400:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    b407:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b40b:	48 8b 08             	mov    (%rax),%rcx
    b40e:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    b415:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    b41c:	48 89 ce             	mov    %rcx,%rsi
    b41f:	48 89 c7             	mov    %rax,%rdi
    b422:	e8 ad 91 ff ff       	call   45d4 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    b427:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    b42d:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    b433:	39 c2                	cmp    %eax,%edx
    b435:	75 08                	jne    b43f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    b437:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b43b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    b43f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b443:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    b447:	75 19                	jne    b462 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    b449:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    b450:	48 8d 15 7e 79 00 00 	lea    0x797e(%rip),%rdx        # 12dd5 <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    b457:	48 89 d6             	mov    %rdx,%rsi
    b45a:	48 89 c7             	mov    %rax,%rdi
    b45d:	e8 ee 7f ff ff       	call   3450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    b462:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b469:	48 83 c0 10          	add    $0x10,%rax
    b46d:	48 8d 15 6d 79 00 00 	lea    0x796d(%rip),%rdx        # 12de1 <_ZN6__pstl9execution2v1L5unseqE+0x1ca>
    b474:	48 89 d6             	mov    %rdx,%rsi
    b477:	48 89 c7             	mov    %rax,%rdi
    b47a:	e8 41 7e ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b47f:	48 89 c2             	mov    %rax,%rdx
    b482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b486:	48 89 c6             	mov    %rax,%rsi
    b489:	48 89 d7             	mov    %rdx,%rdi
    b48c:	e8 ef 7b ff ff       	call   3080 <_ZNSolsEm@plt>
    b491:	48 89 c2             	mov    %rax,%rdx
    b494:	48 8d 05 4a 79 00 00 	lea    0x794a(%rip),%rax        # 12de5 <_ZN6__pstl9execution2v1L5unseqE+0x1ce>
    b49b:	48 89 c6             	mov    %rax,%rsi
    b49e:	48 89 d7             	mov    %rdx,%rdi
    b4a1:	e8 1a 7e ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b4a6:	48 89 c2             	mov    %rax,%rdx
    b4a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4ad:	48 89 c6             	mov    %rax,%rsi
    b4b0:	48 89 d7             	mov    %rdx,%rdi
    b4b3:	e8 c8 7b ff ff       	call   3080 <_ZNSolsEm@plt>
    b4b8:	48 89 c2             	mov    %rax,%rdx
    b4bb:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    b4c2:	48 89 c6             	mov    %rax,%rsi
    b4c5:	48 89 d7             	mov    %rdx,%rdi
    b4c8:	e8 b3 7d ff ff       	call   3280 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    b4cd:	48 89 c2             	mov    %rax,%rdx
    b4d0:	48 8d 05 17 79 00 00 	lea    0x7917(%rip),%rax        # 12dee <_ZN6__pstl9execution2v1L5unseqE+0x1d7>
    b4d7:	48 89 c6             	mov    %rax,%rsi
    b4da:	48 89 d7             	mov    %rdx,%rdi
    b4dd:	e8 de 7d ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    b4e2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b4e9:	48 83 c0 10          	add    $0x10,%rax
    b4ed:	48 8d 15 fd 78 00 00 	lea    0x78fd(%rip),%rdx        # 12df1 <_ZN6__pstl9execution2v1L5unseqE+0x1da>
    b4f4:	48 89 d6             	mov    %rdx,%rsi
    b4f7:	48 89 c7             	mov    %rax,%rdi
    b4fa:	e8 c1 7d ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b4ff:	48 89 c2             	mov    %rax,%rdx
    b502:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b506:	48 89 c6             	mov    %rax,%rsi
    b509:	48 89 d7             	mov    %rdx,%rdi
    b50c:	e8 6f 7b ff ff       	call   3080 <_ZNSolsEm@plt>
    b511:	48 89 c2             	mov    %rax,%rdx
    b514:	48 8d 05 db 78 00 00 	lea    0x78db(%rip),%rax        # 12df6 <_ZN6__pstl9execution2v1L5unseqE+0x1df>
    b51b:	48 89 c6             	mov    %rax,%rsi
    b51e:	48 89 d7             	mov    %rdx,%rdi
    b521:	e8 9a 7d ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    b526:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b52d:	48 83 c0 10          	add    $0x10,%rax
    b531:	48 8d 15 d5 78 00 00 	lea    0x78d5(%rip),%rdx        # 12e0d <_ZN6__pstl9execution2v1L5unseqE+0x1f6>
    b538:	48 89 d6             	mov    %rdx,%rsi
    b53b:	48 89 c7             	mov    %rax,%rdi
    b53e:	e8 7d 7d ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b543:	48 89 c2             	mov    %rax,%rdx
    b546:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    b54c:	89 c6                	mov    %eax,%esi
    b54e:	48 89 d7             	mov    %rdx,%rdi
    b551:	e8 ea 7e ff ff       	call   3440 <_ZNSolsEj@plt>
    b556:	be 0a 00 00 00       	mov    $0xa,%esi
    b55b:	48 89 c7             	mov    %rax,%rdi
    b55e:	e8 4d 7e ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    b563:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b56a:	48 83 c0 10          	add    $0x10,%rax
    b56e:	48 8d 15 a7 78 00 00 	lea    0x78a7(%rip),%rdx        # 12e1c <_ZN6__pstl9execution2v1L5unseqE+0x205>
    b575:	48 89 d6             	mov    %rdx,%rsi
    b578:	48 89 c7             	mov    %rax,%rdi
    b57b:	e8 40 7d ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b580:	48 89 c2             	mov    %rax,%rdx
    b583:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    b58a:	48 83 c0 24          	add    $0x24,%rax
    b58e:	48 89 c6             	mov    %rax,%rsi
    b591:	48 89 d7             	mov    %rdx,%rdi
    b594:	e8 27 7d ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b599:	be 0a 00 00 00       	mov    $0xa,%esi
    b59e:	48 89 c7             	mov    %rax,%rdi
    b5a1:	e8 0a 7e ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    b5a6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b5ad:	48 83 c0 10          	add    $0x10,%rax
    b5b1:	48 8d 15 75 78 00 00 	lea    0x7875(%rip),%rdx        # 12e2d <_ZN6__pstl9execution2v1L5unseqE+0x216>
    b5b8:	48 89 d6             	mov    %rdx,%rsi
    b5bb:	48 89 c7             	mov    %rax,%rdi
    b5be:	e8 fd 7c ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    b5c3:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    b5c9:	83 f8 04             	cmp    $0x4,%eax
    b5cc:	0f 84 80 00 00 00    	je     b652 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    b5d2:	83 f8 04             	cmp    $0x4,%eax
    b5d5:	0f 8f 96 00 00 00    	jg     b671 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    b5db:	83 f8 03             	cmp    $0x3,%eax
    b5de:	74 53                	je     b633 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    b5e0:	83 f8 03             	cmp    $0x3,%eax
    b5e3:	0f 8f 88 00 00 00    	jg     b671 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    b5e9:	83 f8 01             	cmp    $0x1,%eax
    b5ec:	74 07                	je     b5f5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    b5ee:	83 f8 02             	cmp    $0x2,%eax
    b5f1:	74 21                	je     b614 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    b5f3:	eb 7c                	jmp    b671 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    b5f5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b5fc:	48 83 c0 10          	add    $0x10,%rax
    b600:	48 8d 15 37 78 00 00 	lea    0x7837(%rip),%rdx        # 12e3e <_ZN6__pstl9execution2v1L5unseqE+0x227>
    b607:	48 89 d6             	mov    %rdx,%rsi
    b60a:	48 89 c7             	mov    %rax,%rdi
    b60d:	e8 ae 7c ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    b612:	eb 7b                	jmp    b68f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    b614:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b61b:	48 83 c0 10          	add    $0x10,%rax
    b61f:	48 8d 15 28 78 00 00 	lea    0x7828(%rip),%rdx        # 12e4e <_ZN6__pstl9execution2v1L5unseqE+0x237>
    b626:	48 89 d6             	mov    %rdx,%rsi
    b629:	48 89 c7             	mov    %rax,%rdi
    b62c:	e8 8f 7c ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    b631:	eb 5c                	jmp    b68f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    b633:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b63a:	48 83 c0 10          	add    $0x10,%rax
    b63e:	48 8d 15 17 78 00 00 	lea    0x7817(%rip),%rdx        # 12e5c <_ZN6__pstl9execution2v1L5unseqE+0x245>
    b645:	48 89 d6             	mov    %rdx,%rsi
    b648:	48 89 c7             	mov    %rax,%rdi
    b64b:	e8 70 7c ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    b650:	eb 3d                	jmp    b68f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    b652:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b659:	48 83 c0 10          	add    $0x10,%rax
    b65d:	48 8d 15 05 78 00 00 	lea    0x7805(%rip),%rdx        # 12e69 <_ZN6__pstl9execution2v1L5unseqE+0x252>
    b664:	48 89 d6             	mov    %rdx,%rsi
    b667:	48 89 c7             	mov    %rax,%rdi
    b66a:	e8 51 7c ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    b66f:	eb 1e                	jmp    b68f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    b671:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b678:	48 83 c0 10          	add    $0x10,%rax
    b67c:	48 8d 15 eb 77 00 00 	lea    0x77eb(%rip),%rdx        # 12e6e <_ZN6__pstl9execution2v1L5unseqE+0x257>
    b683:	48 89 d6             	mov    %rdx,%rsi
    b686:	48 89 c7             	mov    %rax,%rdi
    b689:	e8 32 7c ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    b68e:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    b68f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b696:	48 83 c0 10          	add    $0x10,%rax
    b69a:	48 8d 15 d4 77 00 00 	lea    0x77d4(%rip),%rdx        # 12e75 <_ZN6__pstl9execution2v1L5unseqE+0x25e>
    b6a1:	48 89 d6             	mov    %rdx,%rsi
    b6a4:	48 89 c7             	mov    %rax,%rdi
    b6a7:	e8 14 7c ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b6ac:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    b6b2:	89 d6                	mov    %edx,%esi
    b6b4:	48 89 c7             	mov    %rax,%rdi
    b6b7:	e8 94 7e ff ff       	call   3550 <_ZNSolsEi@plt>
    b6bc:	be 0a 00 00 00       	mov    $0xa,%esi
    b6c1:	48 89 c7             	mov    %rax,%rdi
    b6c4:	e8 e7 7c ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    b6c9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b6d0:	48 83 c0 10          	add    $0x10,%rax
    b6d4:	48 8d 15 a9 77 00 00 	lea    0x77a9(%rip),%rdx        # 12e84 <_ZN6__pstl9execution2v1L5unseqE+0x26d>
    b6db:	48 89 d6             	mov    %rdx,%rsi
    b6de:	48 89 c7             	mov    %rax,%rdi
    b6e1:	e8 da 7b ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b6e6:	48 89 c2             	mov    %rax,%rdx
    b6e9:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    b6f0:	48 83 c0 14          	add    $0x14,%rax
    b6f4:	48 89 c6             	mov    %rax,%rsi
    b6f7:	48 89 d7             	mov    %rdx,%rdi
    b6fa:	e8 c1 7b ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b6ff:	be 0a 00 00 00       	mov    $0xa,%esi
    b704:	48 89 c7             	mov    %rax,%rdi
    b707:	e8 a4 7c ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    b70c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b713:	48 83 c0 10          	add    $0x10,%rax
    b717:	48 8d 15 77 77 00 00 	lea    0x7777(%rip),%rdx        # 12e95 <_ZN6__pstl9execution2v1L5unseqE+0x27e>
    b71e:	48 89 d6             	mov    %rdx,%rsi
    b721:	48 89 c7             	mov    %rax,%rdi
    b724:	e8 97 7b ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b729:	48 89 c2             	mov    %rax,%rdx
    b72c:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    b733:	48 05 14 01 00 00    	add    $0x114,%rax
    b739:	48 89 c6             	mov    %rax,%rsi
    b73c:	48 89 d7             	mov    %rdx,%rdi
    b73f:	e8 7c 7b ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b744:	be 0a 00 00 00       	mov    $0xa,%esi
    b749:	48 89 c7             	mov    %rax,%rdi
    b74c:	e8 5f 7c ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    b751:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b758:	48 83 c0 10          	add    $0x10,%rax
    b75c:	48 8d 15 4d 77 00 00 	lea    0x774d(%rip),%rdx        # 12eb0 <_ZN6__pstl9execution2v1L5unseqE+0x299>
    b763:	48 89 d6             	mov    %rdx,%rsi
    b766:	48 89 c7             	mov    %rax,%rdi
    b769:	e8 52 7b ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b76e:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    b771:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    b778:	48 89 c6             	mov    %rax,%rsi
    b77b:	48 89 d7             	mov    %rdx,%rdi
    b77e:	e8 fd 78 ff ff       	call   3080 <_ZNSolsEm@plt>
    b783:	be 0a 00 00 00       	mov    $0xa,%esi
    b788:	48 89 c7             	mov    %rax,%rdi
    b78b:	e8 20 7c ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    b790:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b797:	48 83 c0 10          	add    $0x10,%rax
    b79b:	48 8d 15 4f 76 00 00 	lea    0x764f(%rip),%rdx        # 12df1 <_ZN6__pstl9execution2v1L5unseqE+0x1da>
    b7a2:	48 89 d6             	mov    %rdx,%rsi
    b7a5:	48 89 c7             	mov    %rax,%rdi
    b7a8:	e8 13 7b ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b7ad:	48 89 c2             	mov    %rax,%rdx
    b7b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7b4:	48 89 c6             	mov    %rax,%rsi
    b7b7:	48 89 d7             	mov    %rdx,%rdi
    b7ba:	e8 c1 78 ff ff       	call   3080 <_ZNSolsEm@plt>
    b7bf:	48 89 c2             	mov    %rax,%rdx
    b7c2:	48 8d 05 0f 77 00 00 	lea    0x770f(%rip),%rax        # 12ed8 <_ZN6__pstl9execution2v1L5unseqE+0x2c1>
    b7c9:	48 89 c6             	mov    %rax,%rsi
    b7cc:	48 89 d7             	mov    %rdx,%rdi
    b7cf:	e8 ec 7a ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    b7d4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b7d8:	48 8b 08             	mov    (%rax),%rcx
    b7db:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    b7e2:	ba 00 00 00 00       	mov    $0x0,%edx
    b7e7:	48 89 ce             	mov    %rcx,%rsi
    b7ea:	48 89 c7             	mov    %rax,%rdi
    b7ed:	e8 74 89 ff ff       	call   4166 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    b7f2:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    b7f9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    b7fd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b801:	48 89 c7             	mov    %rax,%rdi
    b804:	e8 ff 0c 00 00       	call   c508 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    b809:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
    b810:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b814:	48 89 c7             	mov    %rax,%rdi
    b817:	e8 12 0d 00 00       	call   c52e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    b81c:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
    b823:	eb 5e                	jmp    b883 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
    b825:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    b82c:	48 89 c7             	mov    %rax,%rdi
    b82f:	e8 82 0d 00 00       	call   c5b6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    b834:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
    b838:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b83f:	48 83 c0 10          	add    $0x10,%rax
    b843:	48 8d 15 af 76 00 00 	lea    0x76af(%rip),%rdx        # 12ef9 <_ZN6__pstl9execution2v1L5unseqE+0x2e2>
    b84a:	48 89 d6             	mov    %rdx,%rsi
    b84d:	48 89 c7             	mov    %rax,%rdi
    b850:	e8 6b 7a ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b855:	48 89 c2             	mov    %rax,%rdx
    b858:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b85c:	48 89 c6             	mov    %rax,%rsi
    b85f:	48 89 d7             	mov    %rdx,%rdi
    b862:	e8 59 7a ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b867:	be 0a 00 00 00       	mov    $0xa,%esi
    b86c:	48 89 c7             	mov    %rax,%rdi
    b86f:	e8 3c 7b ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
    b874:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    b87b:	48 89 c7             	mov    %rax,%rdi
    b87e:	e8 0f 0d 00 00       	call   c592 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b883:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
    b88a:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    b891:	48 89 d6             	mov    %rdx,%rsi
    b894:	48 89 c7             	mov    %rax,%rdi
    b897:	e8 bb 0c 00 00       	call   c557 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b89c:	84 c0                	test   %al,%al
    b89e:	75 85                	jne    b825 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
    b8a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b8a4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    b8a8:	0f 85 fb 00 00 00    	jne    b9a9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
    b8ae:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b8b5:	48 83 c0 10          	add    $0x10,%rax
    b8b9:	48 8d 15 31 75 00 00 	lea    0x7531(%rip),%rdx        # 12df1 <_ZN6__pstl9execution2v1L5unseqE+0x1da>
    b8c0:	48 89 d6             	mov    %rdx,%rsi
    b8c3:	48 89 c7             	mov    %rax,%rdi
    b8c6:	e8 f5 79 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b8cb:	48 89 c2             	mov    %rax,%rdx
    b8ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8d2:	48 89 c6             	mov    %rax,%rsi
    b8d5:	48 89 d7             	mov    %rdx,%rdi
    b8d8:	e8 a3 77 ff ff       	call   3080 <_ZNSolsEm@plt>
    b8dd:	48 89 c2             	mov    %rax,%rdx
    b8e0:	48 8d 05 19 76 00 00 	lea    0x7619(%rip),%rax        # 12f00 <_ZN6__pstl9execution2v1L5unseqE+0x2e9>
    b8e7:	48 89 c6             	mov    %rax,%rsi
    b8ea:	48 89 d7             	mov    %rdx,%rdi
    b8ed:	e8 ce 79 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
    b8f2:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    b8f9:	48 05 98 00 00 00    	add    $0x98,%rax
    b8ff:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    b903:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b907:	48 89 c7             	mov    %rax,%rdi
    b90a:	e8 57 07 00 00       	call   c066 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    b90f:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
    b916:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b91a:	48 89 c7             	mov    %rax,%rdi
    b91d:	e8 6a 07 00 00       	call   c08c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    b922:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
    b929:	eb 61                	jmp    b98c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
    b92b:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    b932:	48 89 c7             	mov    %rax,%rdi
    b935:	e8 d6 07 00 00       	call   c110 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b93a:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
    b93e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b945:	48 83 c0 10          	add    $0x10,%rax
    b949:	48 8d 15 a9 75 00 00 	lea    0x75a9(%rip),%rdx        # 12ef9 <_ZN6__pstl9execution2v1L5unseqE+0x2e2>
    b950:	48 89 d6             	mov    %rdx,%rsi
    b953:	48 89 c7             	mov    %rax,%rdi
    b956:	e8 65 79 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b95b:	48 89 c2             	mov    %rax,%rdx
    b95e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b962:	48 8b 00             	mov    (%rax),%rax
    b965:	48 89 c6             	mov    %rax,%rsi
    b968:	48 89 d7             	mov    %rdx,%rdi
    b96b:	e8 50 79 ff ff       	call   32c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    b970:	be 0a 00 00 00       	mov    $0xa,%esi
    b975:	48 89 c7             	mov    %rax,%rdi
    b978:	e8 33 7a ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
    b97d:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    b984:	48 89 c7             	mov    %rax,%rdi
    b987:	e8 64 07 00 00       	call   c0f0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    b98c:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
    b993:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    b99a:	48 89 d6             	mov    %rdx,%rsi
    b99d:	48 89 c7             	mov    %rax,%rdi
    b9a0:	e8 10 07 00 00       	call   c0b5 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    b9a5:	84 c0                	test   %al,%al
    b9a7:	75 82                	jne    b92b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
    b9a9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    b9b0:	48 83 c0 10          	add    $0x10,%rax
    b9b4:	be 0a 00 00 00       	mov    $0xa,%esi
    b9b9:	48 89 c7             	mov    %rax,%rdi
    b9bc:	e8 ef 79 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
    b9c1:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
    b9c6:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    b9cd:	48 89 c7             	mov    %rax,%rdi
    b9d0:	e8 93 97 ff ff       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b9d5:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    b9dc:	48 89 c7             	mov    %rax,%rdi
    b9df:	e8 9c 77 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
    b9e4:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    b9eb:	48 89 c7             	mov    %rax,%rdi
    b9ee:	e8 cd 09 00 00       	call   c3c0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    b9f3:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    b9fa:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    ba01:	48 89 d6             	mov    %rdx,%rsi
    ba04:	48 89 c7             	mov    %rax,%rdi
    ba07:	e8 79 09 00 00       	call   c385 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    ba0c:	84 c0                	test   %al,%al
    ba0e:	0f 85 18 f9 ff ff    	jne    b32c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
    ba14:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ba1b:	48 83 c0 10          	add    $0x10,%rax
    ba1f:	be 0a 00 00 00       	mov    $0xa,%esi
    ba24:	48 89 c7             	mov    %rax,%rdi
    ba27:	e8 84 79 ff ff       	call   33b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ba2c:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    ba33:	48 89 c7             	mov    %rax,%rdi
    ba36:	e8 b7 99 ff ff       	call   53f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    ba3b:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    ba42:	48 89 c7             	mov    %rax,%rdi
    ba45:	e8 b0 95 ff ff       	call   4ffa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    ba4a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    ba51:	48 89 c7             	mov    %rax,%rdi
    ba54:	e8 0f 97 ff ff       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    ba59:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ba60:	48 89 c7             	mov    %rax,%rdi
    ba63:	e8 08 76 ff ff       	call   3070 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    ba68:	e9 cd 00 00 00       	jmp    bb3a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    ba6d:	49 89 c4             	mov    %rax,%r12
    ba70:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ba77:	48 89 c7             	mov    %rax,%rdi
    ba7a:	e8 01 77 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ba7f:	eb 03                	jmp    ba84 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
    ba81:	49 89 c4             	mov    %rax,%r12
    ba84:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ba8b:	48 89 c7             	mov    %rax,%rdi
    ba8e:	e8 ed 76 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ba93:	eb 03                	jmp    ba98 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
    ba95:	49 89 c4             	mov    %rax,%r12
    ba98:	48 89 df             	mov    %rbx,%rdi
    ba9b:	e8 30 77 ff ff       	call   31d0 <__cxa_free_exception@plt>
    baa0:	4c 89 e3             	mov    %r12,%rbx
    baa3:	eb 7b                	jmp    bb20 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
    baa5:	48 89 c3             	mov    %rax,%rbx
    baa8:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    baaf:	48 89 c7             	mov    %rax,%rdi
    bab2:	e8 a9 78 ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    bab7:	eb 2b                	jmp    bae4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
    bab9:	48 89 c3             	mov    %rax,%rbx
    babc:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    bac3:	48 89 c7             	mov    %rax,%rdi
    bac6:	e8 9d 96 ff ff       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    bacb:	eb 03                	jmp    bad0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
    bacd:	48 89 c3             	mov    %rax,%rbx
    bad0:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    bad7:	48 89 c7             	mov    %rax,%rdi
    bada:	e8 a1 76 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    badf:	eb 03                	jmp    bae4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
    bae1:	48 89 c3             	mov    %rax,%rbx
    bae4:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    baeb:	48 89 c7             	mov    %rax,%rdi
    baee:	e8 ff 98 ff ff       	call   53f2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    baf3:	eb 03                	jmp    baf8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
    baf5:	48 89 c3             	mov    %rax,%rbx
    baf8:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    baff:	48 89 c7             	mov    %rax,%rdi
    bb02:	e8 f3 94 ff ff       	call   4ffa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    bb07:	eb 03                	jmp    bb0c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
    bb09:	48 89 c3             	mov    %rax,%rbx
    bb0c:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    bb13:	48 89 c7             	mov    %rax,%rdi
    bb16:	e8 4d 96 ff ff       	call   5168 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    bb1b:	eb 03                	jmp    bb20 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    bb1d:	48 89 c3             	mov    %rax,%rbx
    bb20:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    bb27:	48 89 c7             	mov    %rax,%rdi
    bb2a:	e8 41 75 ff ff       	call   3070 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    bb2f:	48 89 d8             	mov    %rbx,%rax
    bb32:	48 89 c7             	mov    %rax,%rdi
    bb35:	e8 36 7a ff ff       	call   3570 <_Unwind_Resume@plt>
    bb3a:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
    bb41:	5b                   	pop    %rbx
    bb42:	41 5c                	pop    %r12
    bb44:	5d                   	pop    %rbp
    bb45:	c3                   	ret

000000000000bb46 <_Z41__static_initialization_and_destruction_0ii>:
    bb46:	55                   	push   %rbp
    bb47:	48 89 e5             	mov    %rsp,%rbp
    bb4a:	48 83 ec 10          	sub    $0x10,%rsp
    bb4e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    bb51:	89 75 f8             	mov    %esi,-0x8(%rbp)
    bb54:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    bb58:	75 3b                	jne    bb95 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    bb5a:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    bb61:	75 32                	jne    bb95 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    bb63:	48 8d 05 ca 09 01 00 	lea    0x109ca(%rip),%rax        # 1c534 <_ZStL8__ioinit>
    bb6a:	48 89 c7             	mov    %rax,%rdi
    bb6d:	e8 3e 79 ff ff       	call   34b0 <_ZNSt8ios_base4InitC1Ev@plt>
    bb72:	48 8d 05 6f 07 01 00 	lea    0x1076f(%rip),%rax        # 1c2e8 <__dso_handle>
    bb79:	48 89 c2             	mov    %rax,%rdx
    bb7c:	48 8d 05 b1 09 01 00 	lea    0x109b1(%rip),%rax        # 1c534 <_ZStL8__ioinit>
    bb83:	48 89 c6             	mov    %rax,%rsi
    bb86:	48 8b 05 3b 04 01 00 	mov    0x1043b(%rip),%rax        # 1bfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    bb8d:	48 89 c7             	mov    %rax,%rdi
    bb90:	e8 db 76 ff ff       	call   3270 <__cxa_atexit@plt>
    bb95:	90                   	nop
    bb96:	c9                   	leave
    bb97:	c3                   	ret

000000000000bb98 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    bb98:	55                   	push   %rbp
    bb99:	48 89 e5             	mov    %rsp,%rbp
    bb9c:	be ff ff 00 00       	mov    $0xffff,%esi
    bba1:	bf 01 00 00 00       	mov    $0x1,%edi
    bba6:	e8 9b ff ff ff       	call   bb46 <_Z41__static_initialization_and_destruction_0ii>
    bbab:	5d                   	pop    %rbp
    bbac:	c3                   	ret
    bbad:	90                   	nop

000000000000bbae <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    bbae:	55                   	push   %rbp
    bbaf:	48 89 e5             	mov    %rsp,%rbp
    bbb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbb6:	48 8d 15 53 01 01 00 	lea    0x10153(%rip),%rdx        # 1bd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    bbbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc1:	48 89 10             	mov    %rdx,(%rax)
    bbc4:	90                   	nop
    bbc5:	5d                   	pop    %rbp
    bbc6:	c3                   	ret

000000000000bbc7 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    bbc7:	55                   	push   %rbp
    bbc8:	48 89 e5             	mov    %rsp,%rbp
    bbcb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbcf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbd3:	90                   	nop
    bbd4:	5d                   	pop    %rbp
    bbd5:	c3                   	ret

000000000000bbd6 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    bbd6:	55                   	push   %rbp
    bbd7:	48 89 e5             	mov    %rsp,%rbp
    bbda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    bbde:	48 8d 05 1b 70 00 00 	lea    0x701b(%rip),%rax        # 12c00 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    bbe5:	5d                   	pop    %rbp
    bbe6:	c3                   	ret
    bbe7:	90                   	nop

000000000000bbe8 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    bbe8:	55                   	push   %rbp
    bbe9:	48 89 e5             	mov    %rsp,%rbp
    bbec:	48 83 ec 10          	sub    $0x10,%rsp
    bbf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf8:	48 89 c7             	mov    %rax,%rdi
    bbfb:	e8 ae ff ff ff       	call   bbae <_ZNSt9exceptionC1Ev>
    bc00:	48 8d 15 b9 00 01 00 	lea    0x100b9(%rip),%rdx        # 1bcc0 <_ZTVSt19bad_optional_access+0x10>
    bc07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc0b:	48 89 10             	mov    %rdx,(%rax)
    bc0e:	90                   	nop
    bc0f:	c9                   	leave
    bc10:	c3                   	ret

000000000000bc11 <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    bc11:	55                   	push   %rbp
    bc12:	48 89 e5             	mov    %rsp,%rbp
    bc15:	53                   	push   %rbx
    bc16:	48 83 ec 08          	sub    $0x8,%rsp
    bc1a:	bf 08 00 00 00       	mov    $0x8,%edi
    bc1f:	e8 0c 75 ff ff       	call   3130 <__cxa_allocate_exception@plt>
    bc24:	48 89 c3             	mov    %rax,%rbx
    bc27:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    bc2e:	48 89 df             	mov    %rbx,%rdi
    bc31:	e8 b2 ff ff ff       	call   bbe8 <_ZNSt19bad_optional_accessC1Ev>
    bc36:	48 8d 05 87 36 00 00 	lea    0x3687(%rip),%rax        # f2c4 <_ZNSt19bad_optional_accessD1Ev>
    bc3d:	48 89 c2             	mov    %rax,%rdx
    bc40:	48 8d 05 11 01 01 00 	lea    0x10111(%rip),%rax        # 1bd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    bc47:	48 89 c6             	mov    %rax,%rsi
    bc4a:	48 89 df             	mov    %rbx,%rdi
    bc4d:	e8 ce 78 ff ff       	call   3520 <__cxa_throw@plt>

000000000000bc52 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    bc52:	55                   	push   %rbp
    bc53:	48 89 e5             	mov    %rsp,%rbp
    bc56:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    bc5a:	e8 3a 00 00 00       	call   bc99 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    bc5f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bc63:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    bc67:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    bc6b:	48 89 d6             	mov    %rdx,%rsi
    bc6e:	48 89 c7             	mov    %rax,%rdi
    bc71:	e8 06 00 00 00       	call   bc7c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    bc76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc7a:	c9                   	leave
    bc7b:	c3                   	ret

000000000000bc7c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    bc7c:	55                   	push   %rbp
    bc7d:	48 89 e5             	mov    %rsp,%rbp
    bc80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    bc88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc8c:	48 8b 10             	mov    (%rax),%rdx
    bc8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc93:	48 89 10             	mov    %rdx,(%rax)
    bc96:	90                   	nop
    bc97:	5d                   	pop    %rbp
    bc98:	c3                   	ret

000000000000bc99 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    bc99:	55                   	push   %rbp
    bc9a:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    bc9d:	b8 00 00 00 00       	mov    $0x0,%eax
    bca2:	5d                   	pop    %rbp
    bca3:	c3                   	ret

000000000000bca4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    bca4:	55                   	push   %rbp
    bca5:	48 89 e5             	mov    %rsp,%rbp
    bca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    bcac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcb0:	48 8b 00             	mov    (%rax),%rax
    bcb3:	5d                   	pop    %rbp
    bcb4:	c3                   	ret

000000000000bcb5 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    bcb5:	55                   	push   %rbp
    bcb6:	48 89 e5             	mov    %rsp,%rbp
    bcb9:	89 7d fc             	mov    %edi,-0x4(%rbp)
    bcbc:	89 75 f8             	mov    %esi,-0x8(%rbp)
    bcbf:	8b 45 fc             	mov    -0x4(%rbp),%eax
    bcc2:	0b 45 f8             	or     -0x8(%rbp),%eax
    bcc5:	5d                   	pop    %rbp
    bcc6:	c3                   	ret
    bcc7:	90                   	nop

000000000000bcc8 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    bcc8:	55                   	push   %rbp
    bcc9:	48 89 e5             	mov    %rsp,%rbp
    bccc:	48 83 ec 10          	sub    $0x10,%rsp
    bcd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    bcd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd8:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    bcde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bce2:	48 89 c7             	mov    %rax,%rdi
    bce5:	e8 04 00 00 00       	call   bcee <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    bcea:	90                   	nop
    bceb:	c9                   	leave
    bcec:	c3                   	ret
    bced:	90                   	nop

000000000000bcee <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    bcee:	55                   	push   %rbp
    bcef:	48 89 e5             	mov    %rsp,%rbp
    bcf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    bcf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcfa:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bd01:	00 
      _M_header._M_left = &_M_header;
    bd02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bd06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd0a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    bd0e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bd12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd16:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    bd1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd1e:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    bd25:	00 
    }
    bd26:	90                   	nop
    bd27:	5d                   	pop    %rbp
    bd28:	c3                   	ret
    bd29:	90                   	nop

000000000000bd2a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    bd2a:	55                   	push   %rbp
    bd2b:	48 89 e5             	mov    %rsp,%rbp
    bd2e:	48 83 ec 10          	sub    $0x10,%rsp
    bd32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd3a:	48 89 c7             	mov    %rax,%rdi
    bd3d:	e8 60 00 00 00       	call   bda2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    bd42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd46:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    bd4a:	90                   	nop
    bd4b:	c9                   	leave
    bd4c:	c3                   	ret
    bd4d:	90                   	nop

000000000000bd4e <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    bd4e:	55                   	push   %rbp
    bd4f:	48 89 e5             	mov    %rsp,%rbp
    bd52:	48 83 ec 10          	sub    $0x10,%rsp
    bd56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd5e:	48 89 c7             	mov    %rax,%rdi
    bd61:	e8 c4 ff ff ff       	call   bd2a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    bd66:	90                   	nop
    bd67:	c9                   	leave
    bd68:	c3                   	ret
    bd69:	90                   	nop

000000000000bd6a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    bd6a:	55                   	push   %rbp
    bd6b:	48 89 e5             	mov    %rsp,%rbp
    bd6e:	48 83 ec 10          	sub    $0x10,%rsp
    bd72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd7a:	48 89 c7             	mov    %rax,%rdi
    bd7d:	e8 cc ff ff ff       	call   bd4e <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    bd82:	90                   	nop
    bd83:	c9                   	leave
    bd84:	c3                   	ret
    bd85:	90                   	nop

000000000000bd86 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    bd86:	55                   	push   %rbp
    bd87:	48 89 e5             	mov    %rsp,%rbp
    bd8a:	48 83 ec 10          	sub    $0x10,%rsp
    bd8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd96:	48 89 c7             	mov    %rax,%rdi
    bd99:	e8 cc ff ff ff       	call   bd6a <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    bd9e:	90                   	nop
    bd9f:	c9                   	leave
    bda0:	c3                   	ret
    bda1:	90                   	nop

000000000000bda2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    bda2:	55                   	push   %rbp
    bda3:	48 89 e5             	mov    %rsp,%rbp
    bda6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdaa:	90                   	nop
    bdab:	5d                   	pop    %rbp
    bdac:	c3                   	ret
    bdad:	90                   	nop

000000000000bdae <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    bdae:	55                   	push   %rbp
    bdaf:	48 89 e5             	mov    %rsp,%rbp
    bdb2:	48 83 ec 10          	sub    $0x10,%rsp
    bdb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdbe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdc6:	48 89 d6             	mov    %rdx,%rsi
    bdc9:	48 89 c7             	mov    %rax,%rdi
    bdcc:	e8 3b 06 00 00       	call   c40c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    bdd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdd5:	c9                   	leave
    bdd6:	c3                   	ret
    bdd7:	90                   	nop

000000000000bdd8 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    bdd8:	55                   	push   %rbp
    bdd9:	48 89 e5             	mov    %rsp,%rbp
    bddc:	48 83 ec 10          	sub    $0x10,%rsp
    bde0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bde4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bde8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdf0:	48 89 d6             	mov    %rdx,%rsi
    bdf3:	48 89 c7             	mov    %rax,%rdi
    bdf6:	e8 b3 ff ff ff       	call   bdae <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
    bdfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdff:	c9                   	leave
    be00:	c3                   	ret
    be01:	90                   	nop

000000000000be02 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    be02:	55                   	push   %rbp
    be03:	48 89 e5             	mov    %rsp,%rbp
    be06:	48 83 ec 10          	sub    $0x10,%rsp
    be0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    be0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be12:	48 89 c7             	mov    %rax,%rdi
    be15:	e8 1a 00 00 00       	call   be34 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    be1a:	84 c0                	test   %al,%al
    be1c:	74 0e                	je     be2c <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
    be1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be22:	48 89 c7             	mov    %rax,%rdi
    be25:	e8 0c 06 00 00       	call   c436 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
    be2a:	eb 05                	jmp    be31 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
    be2c:	e8 e0 fd ff ff       	call   bc11 <_ZSt27__throw_bad_optional_accessv>
      }
    be31:	c9                   	leave
    be32:	c3                   	ret
    be33:	90                   	nop

000000000000be34 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    be34:	55                   	push   %rbp
    be35:	48 89 e5             	mov    %rsp,%rbp
    be38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    be3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be40:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    be44:	5d                   	pop    %rbp
    be45:	c3                   	ret

000000000000be46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    be46:	55                   	push   %rbp
    be47:	48 89 e5             	mov    %rsp,%rbp
    be4a:	48 83 ec 10          	sub    $0x10,%rsp
    be4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be56:	48 89 c7             	mov    %rax,%rdi
    be59:	e8 54 06 00 00       	call   c4b2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    be5e:	90                   	nop
    be5f:	c9                   	leave
    be60:	c3                   	ret
    be61:	90                   	nop

000000000000be62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    be62:	55                   	push   %rbp
    be63:	48 89 e5             	mov    %rsp,%rbp
    be66:	48 83 ec 10          	sub    $0x10,%rsp
    be6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be72:	48 89 c7             	mov    %rax,%rdi
    be75:	e8 00 06 00 00       	call   c47a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    be7a:	90                   	nop
    be7b:	c9                   	leave
    be7c:	c3                   	ret
    be7d:	90                   	nop

000000000000be7e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    be7e:	55                   	push   %rbp
    be7f:	48 89 e5             	mov    %rsp,%rbp
    be82:	48 83 ec 10          	sub    $0x10,%rsp
    be86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be8e:	48 89 c7             	mov    %rax,%rdi
    be91:	e8 cc ff ff ff       	call   be62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    be96:	90                   	nop
    be97:	c9                   	leave
    be98:	c3                   	ret
    be99:	90                   	nop

000000000000be9a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    be9a:	55                   	push   %rbp
    be9b:	48 89 e5             	mov    %rsp,%rbp
    be9e:	48 83 ec 10          	sub    $0x10,%rsp
    bea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beaa:	48 89 c7             	mov    %rax,%rdi
    bead:	e8 1c 06 00 00       	call   c4ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    beb2:	90                   	nop
    beb3:	c9                   	leave
    beb4:	c3                   	ret
    beb5:	90                   	nop

000000000000beb6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    beb6:	55                   	push   %rbp
    beb7:	48 89 e5             	mov    %rsp,%rbp
    beba:	48 83 ec 10          	sub    $0x10,%rsp
    bebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec6:	48 89 c7             	mov    %rax,%rdi
    bec9:	e8 00 0a 00 00       	call   c8ce <_ZNSaIP9VkImage_TED1Ev>
    bece:	90                   	nop
    becf:	c9                   	leave
    bed0:	c3                   	ret
    bed1:	90                   	nop

000000000000bed2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    bed2:	55                   	push   %rbp
    bed3:	48 89 e5             	mov    %rsp,%rbp
    bed6:	48 83 ec 10          	sub    $0x10,%rsp
    beda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee2:	48 89 c7             	mov    %rax,%rdi
    bee5:	e8 bc 09 00 00       	call   c8a6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    beea:	90                   	nop
    beeb:	c9                   	leave
    beec:	c3                   	ret
    beed:	90                   	nop

000000000000beee <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
    beee:	55                   	push   %rbp
    beef:	48 89 e5             	mov    %rsp,%rbp
    bef2:	48 83 ec 10          	sub    $0x10,%rsp
    bef6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    befa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    befe:	48 89 c7             	mov    %rax,%rdi
    bf01:	e8 cc ff ff ff       	call   bed2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    bf06:	90                   	nop
    bf07:	c9                   	leave
    bf08:	c3                   	ret
    bf09:	90                   	nop

000000000000bf0a <_ZN9VulkanApp16SwapChainWrapperC1Ev>:
  /* Create a logical device after succesfully selecting a physical device
  and one of its queue families by calling the selectQueueFamily function. */
  void createDevice();

  /* Step 5: Create a swapchain to render results to the surface */
  struct SwapChainWrapper {
    bf0a:	55                   	push   %rbp
    bf0b:	48 89 e5             	mov    %rsp,%rbp
    bf0e:	48 83 ec 10          	sub    $0x10,%rsp
    bf12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf1a:	48 83 c0 08          	add    $0x8,%rax
    bf1e:	48 89 c7             	mov    %rax,%rdi
    bf21:	e8 c8 ff ff ff       	call   beee <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    bf26:	90                   	nop
    bf27:	c9                   	leave
    bf28:	c3                   	ret
    bf29:	90                   	nop

000000000000bf2a <_ZN9VulkanApp16SwapChainWrapperD1Ev>:
    bf2a:	55                   	push   %rbp
    bf2b:	48 89 e5             	mov    %rsp,%rbp
    bf2e:	48 83 ec 10          	sub    $0x10,%rsp
    bf32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf3a:	48 83 c0 08          	add    $0x8,%rax
    bf3e:	48 89 c7             	mov    %rax,%rdi
    bf41:	e8 f2 09 00 00       	call   c938 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    bf46:	90                   	nop
    bf47:	c9                   	leave
    bf48:	c3                   	ret
    bf49:	90                   	nop

000000000000bf4a <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
    bf4a:	55                   	push   %rbp
    bf4b:	48 89 e5             	mov    %rsp,%rbp
    bf4e:	53                   	push   %rbx
    bf4f:	48 83 ec 38          	sub    $0x38,%rsp
    bf53:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    bf57:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    bf5b:	e8 c0 74 ff ff       	call   3420 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    bf60:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    bf64:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    bf68:	48 89 de             	mov    %rbx,%rsi
    bf6b:	48 89 c7             	mov    %rax,%rdi
    bf6e:	e8 a7 0a 00 00       	call   ca1a <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    bf73:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    bf77:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    bf7b:	48 89 c7             	mov    %rax,%rdi
    bf7e:	e8 dc 0a 00 00       	call   ca5f <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    bf83:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    bf87:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    bf8b:	48 89 c7             	mov    %rax,%rdi
    bf8e:	e8 e7 0a 00 00       	call   ca7a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
    bf93:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bf97:	c9                   	leave
    bf98:	c3                   	ret
    bf99:	90                   	nop

000000000000bf9a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    bf9a:	55                   	push   %rbp
    bf9b:	48 89 e5             	mov    %rsp,%rbp
    bf9e:	53                   	push   %rbx
    bf9f:	48 83 ec 38          	sub    $0x38,%rsp
    bfa3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bfa7:	48 89 f0             	mov    %rsi,%rax
    bfaa:	48 89 d6             	mov    %rdx,%rsi
    bfad:	48 89 f2             	mov    %rsi,%rdx
    bfb0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    bfb4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    bfb8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    bfbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bfc0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bfc4:	48 89 d6             	mov    %rdx,%rsi
    bfc7:	48 89 c7             	mov    %rax,%rdi
    bfca:	e8 f3 0c 00 00       	call   ccc2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    bfcf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bfd3:	48 89 c7             	mov    %rax,%rdi
    bfd6:	e8 1f 0d 00 00       	call   ccfa <_ZNKSt16initializer_listIPKcE3endEv>
    bfdb:	48 89 c3             	mov    %rax,%rbx
    bfde:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bfe2:	48 89 c7             	mov    %rax,%rdi
    bfe5:	e8 fe 0c 00 00       	call   cce8 <_ZNKSt16initializer_listIPKcE5beginEv>
    bfea:	48 89 c1             	mov    %rax,%rcx
    bfed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bff1:	48 89 da             	mov    %rbx,%rdx
    bff4:	48 89 ce             	mov    %rcx,%rsi
    bff7:	48 89 c7             	mov    %rax,%rdi
    bffa:	e8 61 0d 00 00       	call   cd60 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    bfff:	eb 1a                	jmp    c01b <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    c001:	48 89 c3             	mov    %rax,%rbx
    c004:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c008:	48 89 c7             	mov    %rax,%rdi
    c00b:	e8 e6 92 ff ff       	call   52f6 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    c010:	48 89 d8             	mov    %rbx,%rax
    c013:	48 89 c7             	mov    %rax,%rdi
    c016:	e8 55 75 ff ff       	call   3570 <_Unwind_Resume@plt>
    c01b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c01f:	c9                   	leave
    c020:	c3                   	ret
    c021:	90                   	nop

000000000000c022 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c022:	55                   	push   %rbp
    c023:	48 89 e5             	mov    %rsp,%rbp
    c026:	48 83 ec 10          	sub    $0x10,%rsp
    c02a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c02e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c032:	48 89 c7             	mov    %rax,%rdi
    c035:	e8 10 a0 ff ff       	call   604a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c03a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c03d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c041:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c049:	48 8b 00             	mov    (%rax),%rax
    c04c:	48 89 ce             	mov    %rcx,%rsi
    c04f:	48 89 c7             	mov    %rax,%rdi
    c052:	e8 b8 0d 00 00       	call   ce0f <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    c057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c05b:	48 89 c7             	mov    %rax,%rdi
    c05e:	e8 93 92 ff ff       	call   52f6 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    c063:	90                   	nop
    c064:	c9                   	leave
    c065:	c3                   	ret

000000000000c066 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c066:	55                   	push   %rbp
    c067:	48 89 e5             	mov    %rsp,%rbp
    c06a:	48 83 ec 20          	sub    $0x20,%rsp
    c06e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c072:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c076:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c07a:	48 89 d6             	mov    %rdx,%rsi
    c07d:	48 89 c7             	mov    %rax,%rdi
    c080:	e8 b5 0d 00 00       	call   ce3a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    c085:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c089:	c9                   	leave
    c08a:	c3                   	ret
    c08b:	90                   	nop

000000000000c08c <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c08c:	55                   	push   %rbp
    c08d:	48 89 e5             	mov    %rsp,%rbp
    c090:	48 83 ec 20          	sub    $0x20,%rsp
    c094:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c098:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c09c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c0a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c0a4:	48 89 d6             	mov    %rdx,%rsi
    c0a7:	48 89 c7             	mov    %rax,%rdi
    c0aa:	e8 8b 0d 00 00       	call   ce3a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    c0af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0b3:	c9                   	leave
    c0b4:	c3                   	ret

000000000000c0b5 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c0b5:	55                   	push   %rbp
    c0b6:	48 89 e5             	mov    %rsp,%rbp
    c0b9:	53                   	push   %rbx
    c0ba:	48 83 ec 18          	sub    $0x18,%rsp
    c0be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c0c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c0c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0ca:	48 89 c7             	mov    %rax,%rdi
    c0cd:	e8 86 0d 00 00       	call   ce58 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c0d2:	48 8b 18             	mov    (%rax),%rbx
    c0d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c0d9:	48 89 c7             	mov    %rax,%rdi
    c0dc:	e8 77 0d 00 00       	call   ce58 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c0e1:	48 8b 00             	mov    (%rax),%rax
    c0e4:	48 39 c3             	cmp    %rax,%rbx
    c0e7:	0f 95 c0             	setne  %al
    c0ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c0ee:	c9                   	leave
    c0ef:	c3                   	ret

000000000000c0f0 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c0f0:	55                   	push   %rbp
    c0f1:	48 89 e5             	mov    %rsp,%rbp
    c0f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c0f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0fc:	48 8b 00             	mov    (%rax),%rax
    c0ff:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c107:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c10a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c10e:	5d                   	pop    %rbp
    c10f:	c3                   	ret

000000000000c110 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c110:	55                   	push   %rbp
    c111:	48 89 e5             	mov    %rsp,%rbp
    c114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c11c:	48 8b 00             	mov    (%rax),%rax
    c11f:	5d                   	pop    %rbp
    c120:	c3                   	ret
    c121:	90                   	nop

000000000000c122 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    c122:	55                   	push   %rbp
    c123:	48 89 e5             	mov    %rsp,%rbp
    c126:	53                   	push   %rbx
    c127:	48 83 ec 18          	sub    $0x18,%rsp
    c12b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c12f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    c133:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c137:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c13b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c13f:	48 8b 40 10          	mov    0x10(%rax),%rax
    c143:	48 39 c2             	cmp    %rax,%rdx
    c146:	74 3c                	je     c184 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    c148:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c14c:	48 89 c7             	mov    %rax,%rdi
    c14f:	e8 12 0d 00 00       	call   ce66 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    c154:	48 89 c2             	mov    %rax,%rdx
    c157:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c15b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c15f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c163:	48 89 ce             	mov    %rcx,%rsi
    c166:	48 89 c7             	mov    %rax,%rdi
    c169:	e8 06 0d 00 00       	call   ce74 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    c16e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c172:	48 8b 40 08          	mov    0x8(%rax),%rax
    c176:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c17a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c17e:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c182:	eb 30                	jmp    c1b4 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    c184:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c188:	48 89 c7             	mov    %rax,%rdi
    c18b:	e8 d6 0c 00 00       	call   ce66 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    c190:	48 89 c3             	mov    %rax,%rbx
    c193:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c197:	48 89 c7             	mov    %rax,%rdi
    c19a:	e8 ed fe ff ff       	call   c08c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    c19f:	48 89 c1             	mov    %rax,%rcx
    c1a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1a6:	48 89 da             	mov    %rbx,%rdx
    c1a9:	48 89 ce             	mov    %rcx,%rsi
    c1ac:	48 89 c7             	mov    %rax,%rdi
    c1af:	e8 fa 0c 00 00       	call   ceae <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    c1b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1b8:	48 89 c7             	mov    %rax,%rdi
    c1bb:	e8 80 0e 00 00       	call   d040 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    c1c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c1c4:	c9                   	leave
    c1c5:	c3                   	ret

000000000000c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    c1c6:	55                   	push   %rbp
    c1c7:	48 89 e5             	mov    %rsp,%rbp
    c1ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    c1ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1d2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c1d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1da:	48 8b 00             	mov    (%rax),%rax
    c1dd:	48 29 c2             	sub    %rax,%rdx
    c1e0:	48 89 d0             	mov    %rdx,%rax
    c1e3:	48 c1 f8 03          	sar    $0x3,%rax
    c1e7:	5d                   	pop    %rbp
    c1e8:	c3                   	ret
    c1e9:	90                   	nop

000000000000c1ea <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    c1ea:	55                   	push   %rbp
    c1eb:	48 89 e5             	mov    %rsp,%rbp
    c1ee:	48 83 ec 10          	sub    $0x10,%rsp
    c1f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c1f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1fa:	48 8b 10             	mov    (%rax),%rdx
    c1fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c201:	48 89 d6             	mov    %rdx,%rsi
    c204:	48 89 c7             	mov    %rax,%rdi
    c207:	e8 74 0e 00 00       	call   d080 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    c20c:	c9                   	leave
    c20d:	c3                   	ret

000000000000c20e <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c20e:	55                   	push   %rbp
    c20f:	48 89 e5             	mov    %rsp,%rbp
    c212:	48 83 ec 10          	sub    $0x10,%rsp
    c216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c21a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c21e:	48 8b 10             	mov    (%rax),%rdx
    c221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c225:	48 89 d6             	mov    %rdx,%rsi
    c228:	48 89 c7             	mov    %rax,%rdi
    c22b:	e8 50 0e 00 00       	call   d080 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    c230:	c9                   	leave
    c231:	c3                   	ret

000000000000c232 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    c232:	55                   	push   %rbp
    c233:	48 89 e5             	mov    %rsp,%rbp
    c236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    c23a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c23e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c246:	48 8b 00             	mov    (%rax),%rax
    c249:	48 29 c2             	sub    %rax,%rdx
    c24c:	48 c1 fa 02          	sar    $0x2,%rdx
    c250:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    c257:	db b6 6d 
    c25a:	48 0f af c2          	imul   %rdx,%rax
    c25e:	5d                   	pop    %rbp
    c25f:	c3                   	ret

000000000000c260 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
    c260:	55                   	push   %rbp
    c261:	48 89 e5             	mov    %rsp,%rbp
    c264:	48 83 ec 10          	sub    $0x10,%rsp
    c268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    c26c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c270:	48 89 c7             	mov    %rax,%rdi
    c273:	e8 2e a3 ff ff       	call   65a6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    c278:	c9                   	leave
    c279:	c3                   	ret

000000000000c27a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
    c27a:	55                   	push   %rbp
    c27b:	48 89 e5             	mov    %rsp,%rbp
    c27e:	48 83 ec 10          	sub    $0x10,%rsp
    c282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
    c286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c28a:	48 89 c7             	mov    %rax,%rdi
    c28d:	e8 14 a3 ff ff       	call   65a6 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    c292:	84 c0                	test   %al,%al
    c294:	74 0e                	je     c2a4 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
    c296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c29a:	48 89 c7             	mov    %rax,%rdi
    c29d:	e8 16 a3 ff ff       	call   65b8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    c2a2:	eb 05                	jmp    c2a9 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
    c2a4:	e8 68 f9 ff ff       	call   bc11 <_ZSt27__throw_bad_optional_accessv>
      }
    c2a9:	c9                   	leave
    c2aa:	c3                   	ret
    c2ab:	90                   	nop

000000000000c2ac <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    c2ac:	55                   	push   %rbp
    c2ad:	48 89 e5             	mov    %rsp,%rbp
    c2b0:	48 83 ec 20          	sub    $0x20,%rsp
    c2b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    c2c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2c4:	48 89 c7             	mov    %rax,%rdi
    c2c7:	e8 c6 0d 00 00       	call   d092 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
    c2cc:	8b 10                	mov    (%rax),%edx
    c2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d2:	89 10                	mov    %edx,(%rax)
    c2d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c2d8:	48 89 c7             	mov    %rax,%rdi
    c2db:	e8 c0 0d 00 00       	call   d0a0 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
    c2e0:	48 89 c1             	mov    %rax,%rcx
    c2e3:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    c2e7:	48 8b 01             	mov    (%rcx),%rax
    c2ea:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    c2ee:	48 89 46 04          	mov    %rax,0x4(%rsi)
    c2f2:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
    c2f6:	48 8b 41 10          	mov    0x10(%rcx),%rax
    c2fa:	48 89 46 14          	mov    %rax,0x14(%rsi)
    c2fe:	90                   	nop
    c2ff:	c9                   	leave
    c300:	c3                   	ret
    c301:	90                   	nop

000000000000c302 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
    c302:	55                   	push   %rbp
    c303:	48 89 e5             	mov    %rsp,%rbp
    c306:	53                   	push   %rbx
    c307:	48 83 ec 18          	sub    $0x18,%rsp
    c30b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c30f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
    c313:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c317:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c31b:	48 89 c7             	mov    %rax,%rdi
    c31e:	e8 8b 0d 00 00       	call   d0ae <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    c323:	48 89 c6             	mov    %rax,%rsi
    c326:	48 89 df             	mov    %rbx,%rdi
    c329:	e8 b4 0d 00 00       	call   d0e2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
    c32e:	90                   	nop
    c32f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c333:	c9                   	leave
    c334:	c3                   	ret
    c335:	90                   	nop

000000000000c336 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c336:	55                   	push   %rbp
    c337:	48 89 e5             	mov    %rsp,%rbp
    c33a:	48 83 ec 20          	sub    $0x20,%rsp
    c33e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c342:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c346:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c34a:	48 89 d6             	mov    %rdx,%rsi
    c34d:	48 89 c7             	mov    %rax,%rdi
    c350:	e8 c1 0d 00 00       	call   d116 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    c355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c359:	c9                   	leave
    c35a:	c3                   	ret
    c35b:	90                   	nop

000000000000c35c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c35c:	55                   	push   %rbp
    c35d:	48 89 e5             	mov    %rsp,%rbp
    c360:	48 83 ec 20          	sub    $0x20,%rsp
    c364:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c36c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c370:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c374:	48 89 d6             	mov    %rdx,%rsi
    c377:	48 89 c7             	mov    %rax,%rdi
    c37a:	e8 97 0d 00 00       	call   d116 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    c37f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c383:	c9                   	leave
    c384:	c3                   	ret

000000000000c385 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c385:	55                   	push   %rbp
    c386:	48 89 e5             	mov    %rsp,%rbp
    c389:	53                   	push   %rbx
    c38a:	48 83 ec 18          	sub    $0x18,%rsp
    c38e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c392:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c396:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c39a:	48 89 c7             	mov    %rax,%rdi
    c39d:	e8 92 0d 00 00       	call   d134 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    c3a2:	48 8b 18             	mov    (%rax),%rbx
    c3a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c3a9:	48 89 c7             	mov    %rax,%rdi
    c3ac:	e8 83 0d 00 00       	call   d134 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    c3b1:	48 8b 00             	mov    (%rax),%rax
    c3b4:	48 39 c3             	cmp    %rax,%rbx
    c3b7:	0f 95 c0             	setne  %al
    c3ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c3be:	c9                   	leave
    c3bf:	c3                   	ret

000000000000c3c0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c3c0:	55                   	push   %rbp
    c3c1:	48 89 e5             	mov    %rsp,%rbp
    c3c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c3c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3cc:	48 8b 00             	mov    (%rax),%rax
    c3cf:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c3d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c3da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c3de:	5d                   	pop    %rbp
    c3df:	c3                   	ret

000000000000c3e0 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c3e0:	55                   	push   %rbp
    c3e1:	48 89 e5             	mov    %rsp,%rbp
    c3e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c3e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3ec:	48 8b 00             	mov    (%rax),%rax
    c3ef:	5d                   	pop    %rbp
    c3f0:	c3                   	ret
    c3f1:	90                   	nop

000000000000c3f2 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
    c3f2:	55                   	push   %rbp
    c3f3:	48 89 e5             	mov    %rsp,%rbp
    c3f6:	48 83 ec 10          	sub    $0x10,%rsp
    c3fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    c3fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c402:	48 89 c7             	mov    %rax,%rdi
    c405:	e8 2a fa ff ff       	call   be34 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    c40a:	c9                   	leave
    c40b:	c3                   	ret

000000000000c40c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
    c40c:	55                   	push   %rbp
    c40d:	48 89 e5             	mov    %rsp,%rbp
    c410:	48 83 ec 10          	sub    $0x10,%rsp
    c414:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c418:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
    c41c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c420:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c424:	48 89 d6             	mov    %rdx,%rsi
    c427:	48 89 c7             	mov    %rax,%rdi
    c42a:	e8 13 0d 00 00       	call   d142 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
    c42f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c433:	c9                   	leave
    c434:	c3                   	ret
    c435:	90                   	nop

000000000000c436 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    c436:	55                   	push   %rbp
    c437:	48 89 e5             	mov    %rsp,%rbp
    c43a:	48 83 ec 10          	sub    $0x10,%rsp
    c43e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    c442:	e8 a7 74 ff ff       	call   38ee <_ZSt23__is_constant_evaluatedv>
    c447:	84 c0                	test   %al,%al
    c449:	74 1a                	je     c465 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    c44b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c44f:	48 89 c7             	mov    %rax,%rdi
    c452:	e8 dd f9 ff ff       	call   be34 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    c457:	83 f0 01             	xor    $0x1,%eax
    c45a:	84 c0                	test   %al,%al
    c45c:	74 07                	je     c465 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    c45e:	b8 01 00 00 00       	mov    $0x1,%eax
    c463:	eb 05                	jmp    c46a <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
    c465:	b8 00 00 00 00       	mov    $0x0,%eax
    c46a:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    c46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c470:	48 89 c7             	mov    %rax,%rdi
    c473:	e8 5c 0d 00 00       	call   d1d4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
    c478:	c9                   	leave
    c479:	c3                   	ret

000000000000c47a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    c47a:	55                   	push   %rbp
    c47b:	48 89 e5             	mov    %rsp,%rbp
    c47e:	48 83 ec 10          	sub    $0x10,%rsp
    c482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    c486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c48a:	48 89 c7             	mov    %rax,%rdi
    c48d:	e8 50 0d 00 00       	call   d1e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    c492:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c496:	48 89 c7             	mov    %rax,%rdi
    c499:	e8 60 0d 00 00       	call   d1fe <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    c49e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4a2:	48 83 c0 08          	add    $0x8,%rax
    c4a6:	48 89 c7             	mov    %rax,%rdi
    c4a9:	e8 1a f8 ff ff       	call   bcc8 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    c4ae:	90                   	nop
    c4af:	c9                   	leave
    c4b0:	c3                   	ret
    c4b1:	90                   	nop

000000000000c4b2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c4b2:	55                   	push   %rbp
    c4b3:	48 89 e5             	mov    %rsp,%rbp
    c4b6:	48 83 ec 10          	sub    $0x10,%rsp
    c4ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4c2:	48 89 c7             	mov    %rax,%rdi
    c4c5:	e8 40 0d 00 00       	call   d20a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    c4ca:	90                   	nop
    c4cb:	c9                   	leave
    c4cc:	c3                   	ret
    c4cd:	90                   	nop

000000000000c4ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    c4ce:	55                   	push   %rbp
    c4cf:	48 89 e5             	mov    %rsp,%rbp
    c4d2:	48 83 ec 10          	sub    $0x10,%rsp
    c4d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    c4da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4de:	48 89 c7             	mov    %rax,%rdi
    c4e1:	e8 96 0d 00 00       	call   d27c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    c4e6:	48 89 c2             	mov    %rax,%rdx
    c4e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ed:	48 89 d6             	mov    %rdx,%rsi
    c4f0:	48 89 c7             	mov    %rax,%rdi
    c4f3:	e8 1e 0d 00 00       	call   d216 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    c4f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4fc:	48 89 c7             	mov    %rax,%rdi
    c4ff:	e8 42 f9 ff ff       	call   be46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    c504:	90                   	nop
    c505:	c9                   	leave
    c506:	c3                   	ret
    c507:	90                   	nop

000000000000c508 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c508:	55                   	push   %rbp
    c509:	48 89 e5             	mov    %rsp,%rbp
    c50c:	48 83 ec 20          	sub    $0x20,%rsp
    c510:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c514:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c518:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c51c:	48 89 d6             	mov    %rdx,%rsi
    c51f:	48 89 c7             	mov    %rax,%rdi
    c522:	e8 6f 0d 00 00       	call   d296 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c52b:	c9                   	leave
    c52c:	c3                   	ret
    c52d:	90                   	nop

000000000000c52e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c52e:	55                   	push   %rbp
    c52f:	48 89 e5             	mov    %rsp,%rbp
    c532:	48 83 ec 20          	sub    $0x20,%rsp
    c536:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c53a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c542:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c546:	48 89 d6             	mov    %rdx,%rsi
    c549:	48 89 c7             	mov    %rax,%rdi
    c54c:	e8 45 0d 00 00       	call   d296 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c555:	c9                   	leave
    c556:	c3                   	ret

000000000000c557 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c557:	55                   	push   %rbp
    c558:	48 89 e5             	mov    %rsp,%rbp
    c55b:	53                   	push   %rbx
    c55c:	48 83 ec 18          	sub    $0x18,%rsp
    c560:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c564:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c568:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c56c:	48 89 c7             	mov    %rax,%rdi
    c56f:	e8 40 0d 00 00       	call   d2b4 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c574:	48 8b 18             	mov    (%rax),%rbx
    c577:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c57b:	48 89 c7             	mov    %rax,%rdi
    c57e:	e8 31 0d 00 00       	call   d2b4 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c583:	48 8b 00             	mov    (%rax),%rax
    c586:	48 39 c3             	cmp    %rax,%rbx
    c589:	0f 95 c0             	setne  %al
    c58c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c590:	c9                   	leave
    c591:	c3                   	ret

000000000000c592 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c592:	55                   	push   %rbp
    c593:	48 89 e5             	mov    %rsp,%rbp
    c596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c59a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c59e:	48 8b 00             	mov    (%rax),%rax
    c5a1:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    c5a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5ac:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c5af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c5b3:	5d                   	pop    %rbp
    c5b4:	c3                   	ret
    c5b5:	90                   	nop

000000000000c5b6 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c5b6:	55                   	push   %rbp
    c5b7:	48 89 e5             	mov    %rsp,%rbp
    c5ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c5be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c2:	48 8b 00             	mov    (%rax),%rax
    c5c5:	5d                   	pop    %rbp
    c5c6:	c3                   	ret
    c5c7:	90                   	nop

000000000000c5c8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    c5c8:	55                   	push   %rbp
    c5c9:	48 89 e5             	mov    %rsp,%rbp
    c5cc:	53                   	push   %rbx
    c5cd:	48 83 ec 48          	sub    $0x48,%rsp
    c5d1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    c5d5:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    c5d9:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    c5dd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c5e1:	48 89 d6             	mov    %rdx,%rsi
    c5e4:	48 89 c7             	mov    %rax,%rdi
    c5e7:	e8 d6 0c 00 00       	call   d2c2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    c5ec:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    c5f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c5f4:	48 89 c7             	mov    %rax,%rdi
    c5f7:	e8 ec 0c 00 00       	call   d2e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    c5fc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c600:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    c604:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c608:	48 89 d6             	mov    %rdx,%rsi
    c60b:	48 89 c7             	mov    %rax,%rdi
    c60e:	e8 ef 0c 00 00       	call   d302 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    c613:	84 c0                	test   %al,%al
    c615:	75 32                	jne    c649 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    c617:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c61b:	48 89 c7             	mov    %rax,%rdi
    c61e:	e8 01 0d 00 00       	call   d324 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    c623:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c627:	48 89 c7             	mov    %rax,%rdi
    c62a:	e8 11 0d 00 00       	call   d340 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c62f:	48 89 c2             	mov    %rax,%rdx
    c632:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    c636:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    c63a:	48 89 ce             	mov    %rcx,%rsi
    c63d:	48 89 c7             	mov    %rax,%rdi
    c640:	e8 19 0d 00 00       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    c645:	84 c0                	test   %al,%al
    c647:	74 07                	je     c650 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    c649:	b8 01 00 00 00       	mov    $0x1,%eax
    c64e:	eb 05                	jmp    c655 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    c650:	b8 00 00 00 00       	mov    $0x0,%eax
    c655:	84 c0                	test   %al,%al
    c657:	74 5d                	je     c6b6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c659:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    c65d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c661:	48 89 c7             	mov    %rax,%rdi
    c664:	e8 4a 06 00 00       	call   ccb3 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    c669:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c66c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c670:	48 89 d6             	mov    %rdx,%rsi
    c673:	48 89 c7             	mov    %rax,%rdi
    c676:	e8 0c 0d 00 00       	call   d387 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    c67b:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    c67f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c683:	48 89 d6             	mov    %rdx,%rsi
    c686:	48 89 c7             	mov    %rax,%rdi
    c689:	e8 2e 0d 00 00       	call   d3bc <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    c68e:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    c692:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    c696:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c69a:	49 89 c8             	mov    %rcx,%r8
    c69d:	48 89 d1             	mov    %rdx,%rcx
    c6a0:	48 8d 15 41 69 00 00 	lea    0x6941(%rip),%rdx        # 12fe8 <_ZSt19piecewise_construct>
    c6a7:	48 89 c6             	mov    %rax,%rsi
    c6aa:	48 89 df             	mov    %rbx,%rdi
    c6ad:	e8 28 0d 00 00       	call   d3da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    c6b2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    c6b6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c6ba:	48 89 c7             	mov    %rax,%rdi
    c6bd:	e8 7e 0c 00 00       	call   d340 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c6c2:	48 83 c0 20          	add    $0x20,%rax
      }
    c6c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6ca:	c9                   	leave
    c6cb:	c3                   	ret

000000000000c6cc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    c6cc:	55                   	push   %rbp
    c6cd:	48 89 e5             	mov    %rsp,%rbp
    c6d0:	48 83 ec 20          	sub    $0x20,%rsp
    c6d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    c6d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6dc:	48 89 c7             	mov    %rax,%rdi
    c6df:	e8 18 0e 00 00       	call   d4fc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    c6e4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    c6e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6ec:	48 89 c7             	mov    %rax,%rdi
    c6ef:	e8 e2 0d 00 00       	call   d4d6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    c6f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c6f8:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    c6fc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c700:	48 89 d6             	mov    %rdx,%rsi
    c703:	48 89 c7             	mov    %rax,%rdi
    c706:	e8 1a 0e 00 00       	call   d525 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    c70b:	c9                   	leave
    c70c:	c3                   	ret
    c70d:	90                   	nop

000000000000c70e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    c70e:	55                   	push   %rbp
    c70f:	48 89 e5             	mov    %rsp,%rbp
    c712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c716:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    c71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71e:	48 8b 00             	mov    (%rax),%rax
    c721:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c725:	48 c1 e2 03          	shl    $0x3,%rdx
    c729:	48 01 d0             	add    %rdx,%rax
      }
    c72c:	5d                   	pop    %rbp
    c72d:	c3                   	ret

000000000000c72e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c72e:	55                   	push   %rbp
    c72f:	48 89 e5             	mov    %rsp,%rbp
    c732:	48 83 ec 20          	sub    $0x20,%rsp
    c736:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c73a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c73e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c742:	48 89 d6             	mov    %rdx,%rsi
    c745:	48 89 c7             	mov    %rax,%rdi
    c748:	e8 13 0e 00 00       	call   d560 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c74d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c751:	c9                   	leave
    c752:	c3                   	ret
    c753:	90                   	nop

000000000000c754 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c754:	55                   	push   %rbp
    c755:	48 89 e5             	mov    %rsp,%rbp
    c758:	48 83 ec 20          	sub    $0x20,%rsp
    c75c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c760:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c764:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c768:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c76c:	48 89 d6             	mov    %rdx,%rsi
    c76f:	48 89 c7             	mov    %rax,%rdi
    c772:	e8 e9 0d 00 00       	call   d560 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c777:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c77b:	c9                   	leave
    c77c:	c3                   	ret

000000000000c77d <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c77d:	55                   	push   %rbp
    c77e:	48 89 e5             	mov    %rsp,%rbp
    c781:	53                   	push   %rbx
    c782:	48 83 ec 18          	sub    $0x18,%rsp
    c786:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c78a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c78e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c792:	48 89 c7             	mov    %rax,%rdi
    c795:	e8 e4 0d 00 00       	call   d57e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    c79a:	48 8b 18             	mov    (%rax),%rbx
    c79d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c7a1:	48 89 c7             	mov    %rax,%rdi
    c7a4:	e8 d5 0d 00 00       	call   d57e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    c7a9:	48 8b 00             	mov    (%rax),%rax
    c7ac:	48 39 c3             	cmp    %rax,%rbx
    c7af:	0f 95 c0             	setne  %al
    c7b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c7b6:	c9                   	leave
    c7b7:	c3                   	ret

000000000000c7b8 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c7b8:	55                   	push   %rbp
    c7b9:	48 89 e5             	mov    %rsp,%rbp
    c7bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c4:	48 8b 00             	mov    (%rax),%rax
    c7c7:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c7cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7cf:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c7d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c7d6:	5d                   	pop    %rbp
    c7d7:	c3                   	ret

000000000000c7d8 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c7d8:	55                   	push   %rbp
    c7d9:	48 89 e5             	mov    %rsp,%rbp
    c7dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c7e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7e4:	48 8b 00             	mov    (%rax),%rax
    c7e7:	5d                   	pop    %rbp
    c7e8:	c3                   	ret
    c7e9:	90                   	nop

000000000000c7ea <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c7ea:	55                   	push   %rbp
    c7eb:	48 89 e5             	mov    %rsp,%rbp
    c7ee:	48 83 ec 20          	sub    $0x20,%rsp
    c7f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c7f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c7fa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c7fe:	48 89 d6             	mov    %rdx,%rsi
    c801:	48 89 c7             	mov    %rax,%rdi
    c804:	e8 83 0d 00 00       	call   d58c <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c809:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c80d:	c9                   	leave
    c80e:	c3                   	ret
    c80f:	90                   	nop

000000000000c810 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c810:	55                   	push   %rbp
    c811:	48 89 e5             	mov    %rsp,%rbp
    c814:	48 83 ec 20          	sub    $0x20,%rsp
    c818:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c81c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c820:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c824:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c828:	48 89 d6             	mov    %rdx,%rsi
    c82b:	48 89 c7             	mov    %rax,%rdi
    c82e:	e8 59 0d 00 00       	call   d58c <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c837:	c9                   	leave
    c838:	c3                   	ret

000000000000c839 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c839:	55                   	push   %rbp
    c83a:	48 89 e5             	mov    %rsp,%rbp
    c83d:	53                   	push   %rbx
    c83e:	48 83 ec 18          	sub    $0x18,%rsp
    c842:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c846:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c84a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c84e:	48 89 c7             	mov    %rax,%rdi
    c851:	e8 54 0d 00 00       	call   d5aa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    c856:	48 8b 18             	mov    (%rax),%rbx
    c859:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c85d:	48 89 c7             	mov    %rax,%rdi
    c860:	e8 45 0d 00 00       	call   d5aa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    c865:	48 8b 00             	mov    (%rax),%rax
    c868:	48 39 c3             	cmp    %rax,%rbx
    c86b:	0f 95 c0             	setne  %al
    c86e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c872:	c9                   	leave
    c873:	c3                   	ret

000000000000c874 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c874:	55                   	push   %rbp
    c875:	48 89 e5             	mov    %rsp,%rbp
    c878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c87c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c880:	48 8b 00             	mov    (%rax),%rax
    c883:	48 8d 50 04          	lea    0x4(%rax),%rdx
    c887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c88b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c88e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c892:	5d                   	pop    %rbp
    c893:	c3                   	ret

000000000000c894 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c894:	55                   	push   %rbp
    c895:	48 89 e5             	mov    %rsp,%rbp
    c898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c89c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8a0:	48 8b 00             	mov    (%rax),%rax
    c8a3:	5d                   	pop    %rbp
    c8a4:	c3                   	ret
    c8a5:	90                   	nop

000000000000c8a6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    c8a6:	55                   	push   %rbp
    c8a7:	48 89 e5             	mov    %rsp,%rbp
    c8aa:	48 83 ec 10          	sub    $0x10,%rsp
    c8ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    c8b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b6:	48 89 c7             	mov    %rax,%rdi
    c8b9:	e8 fa 0c 00 00       	call   d5b8 <_ZNSaIP9VkImage_TEC1Ev>
    c8be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8c2:	48 89 c7             	mov    %rax,%rdi
    c8c5:	e8 0a 0d 00 00       	call   d5d4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    c8ca:	90                   	nop
    c8cb:	c9                   	leave
    c8cc:	c3                   	ret
    c8cd:	90                   	nop

000000000000c8ce <_ZNSaIP9VkImage_TED1Ev>:
    c8ce:	55                   	push   %rbp
    c8cf:	48 89 e5             	mov    %rsp,%rbp
    c8d2:	48 83 ec 10          	sub    $0x10,%rsp
    c8d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8de:	48 89 c7             	mov    %rax,%rdi
    c8e1:	e8 1c 0d 00 00       	call   d602 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    c8e6:	90                   	nop
    c8e7:	c9                   	leave
    c8e8:	c3                   	ret
    c8e9:	90                   	nop

000000000000c8ea <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c8ea:	55                   	push   %rbp
    c8eb:	48 89 e5             	mov    %rsp,%rbp
    c8ee:	48 83 ec 10          	sub    $0x10,%rsp
    c8f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c8f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8fa:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c8fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c902:	48 8b 00             	mov    (%rax),%rax
    c905:	48 29 c2             	sub    %rax,%rdx
    c908:	48 89 d0             	mov    %rdx,%rax
    c90b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c90f:	48 89 c2             	mov    %rax,%rdx
    c912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c916:	48 8b 08             	mov    (%rax),%rcx
    c919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c91d:	48 89 ce             	mov    %rcx,%rsi
    c920:	48 89 c7             	mov    %rax,%rdi
    c923:	e8 e6 0c 00 00       	call   d60e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c92c:	48 89 c7             	mov    %rax,%rdi
    c92f:	e8 82 f5 ff ff       	call   beb6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    c934:	90                   	nop
    c935:	c9                   	leave
    c936:	c3                   	ret
    c937:	90                   	nop

000000000000c938 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c938:	55                   	push   %rbp
    c939:	48 89 e5             	mov    %rsp,%rbp
    c93c:	48 83 ec 10          	sub    $0x10,%rsp
    c940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c948:	48 89 c7             	mov    %rax,%rdi
    c94b:	e8 f4 0c 00 00       	call   d644 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c950:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c957:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c95b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95f:	48 8b 00             	mov    (%rax),%rax
    c962:	48 89 ce             	mov    %rcx,%rsi
    c965:	48 89 c7             	mov    %rax,%rdi
    c968:	e8 e5 0c 00 00       	call   d652 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    c96d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c971:	48 89 c7             	mov    %rax,%rdi
    c974:	e8 71 ff ff ff       	call   c8ea <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    c979:	90                   	nop
    c97a:	c9                   	leave
    c97b:	c3                   	ret

000000000000c97c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
    c97c:	55                   	push   %rbp
    c97d:	48 89 e5             	mov    %rsp,%rbp
    c980:	53                   	push   %rbx
    c981:	48 83 ec 18          	sub    $0x18,%rsp
    c985:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c98d:	48 89 c7             	mov    %rax,%rdi
    c990:	e8 e7 0c 00 00       	call   d67c <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    c995:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c999:	48 83 c0 08          	add    $0x8,%rax
    c99d:	48 89 c7             	mov    %rax,%rdi
    c9a0:	e8 db 6a ff ff       	call   3480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
    c9a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9a9:	48 83 c0 08          	add    $0x8,%rax
    c9ad:	48 8d 15 9e 65 00 00 	lea    0x659e(%rip),%rdx        # 12f52 <_ZN6__pstl9execution2v1L5unseqE+0x33b>
    c9b4:	48 89 d6             	mov    %rdx,%rsi
    c9b7:	48 89 c7             	mov    %rax,%rdi
    c9ba:	e8 91 6a ff ff       	call   3450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
    c9bf:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c9c3:	e8 58 6a ff ff       	call   3420 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    c9c8:	48 89 03             	mov    %rax,(%rbx)
  }
    c9cb:	eb 1e                	jmp    c9eb <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    c9cd:	48 89 c3             	mov    %rax,%rbx
    c9d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9d4:	48 83 c0 08          	add    $0x8,%rax
    c9d8:	48 89 c7             	mov    %rax,%rdi
    c9db:	e8 a0 67 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    c9e0:	48 89 d8             	mov    %rbx,%rax
    c9e3:	48 89 c7             	mov    %rax,%rdi
    c9e6:	e8 85 6b ff ff       	call   3570 <_Unwind_Resume@plt>
    c9eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c9ef:	c9                   	leave
    c9f0:	c3                   	ret
    c9f1:	90                   	nop

000000000000c9f2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
    c9f2:	55                   	push   %rbp
    c9f3:	48 89 e5             	mov    %rsp,%rbp
    c9f6:	48 83 ec 20          	sub    $0x20,%rsp
    c9fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
    c9fe:	e8 1d 6a ff ff       	call   3420 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    ca03:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
    ca07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca0b:	48 83 c0 08          	add    $0x8,%rax
    ca0f:	48 89 c7             	mov    %rax,%rdi
    ca12:	e8 69 67 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ca17:	90                   	nop
    ca18:	c9                   	leave
    ca19:	c3                   	ret

000000000000ca1a <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    ca1a:	55                   	push   %rbp
    ca1b:	48 89 e5             	mov    %rsp,%rbp
    ca1e:	48 83 ec 20          	sub    $0x20,%rsp
    ca22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca26:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    ca2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca2e:	48 89 c7             	mov    %rax,%rdi
    ca31:	e8 66 0c 00 00       	call   d69c <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    ca36:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    ca3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca3e:	48 89 c7             	mov    %rax,%rdi
    ca41:	e8 56 0c 00 00       	call   d69c <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    ca46:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ca4a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ca4e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca52:	48 89 d6             	mov    %rdx,%rsi
    ca55:	48 89 c7             	mov    %rax,%rdi
    ca58:	e8 50 0c 00 00       	call   d6ad <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    ca5d:	c9                   	leave
    ca5e:	c3                   	ret

000000000000ca5f <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    ca5f:	55                   	push   %rbp
    ca60:	48 89 e5             	mov    %rsp,%rbp
    ca63:	48 83 ec 10          	sub    $0x10,%rsp
    ca67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    ca6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca6f:	48 89 c7             	mov    %rax,%rdi
    ca72:	e8 9f 0c 00 00       	call   d716 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    ca77:	c9                   	leave
    ca78:	c3                   	ret
    ca79:	90                   	nop

000000000000ca7a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    ca7a:	55                   	push   %rbp
    ca7b:	48 89 e5             	mov    %rsp,%rbp
    ca7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    ca82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca86:	48 8b 00             	mov    (%rax),%rax
    ca89:	5d                   	pop    %rbp
    ca8a:	c3                   	ret
    ca8b:	90                   	nop

000000000000ca8c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
    ca8c:	55                   	push   %rbp
    ca8d:	48 89 e5             	mov    %rsp,%rbp
    ca90:	53                   	push   %rbx
    ca91:	48 83 ec 18          	sub    $0x18,%rsp
    ca95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca99:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ca9d:	e8 7e 69 ff ff       	call   3420 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    caa2:	48 89 03             	mov    %rax,(%rbx)
    caa5:	90                   	nop
    caa6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    caaa:	c9                   	leave
    caab:	c3                   	ret

000000000000caac <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    caac:	55                   	push   %rbp
    caad:	48 89 e5             	mov    %rsp,%rbp
    cab0:	53                   	push   %rbx
    cab1:	48 83 ec 38          	sub    $0x38,%rsp
    cab5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cab9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    cabd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    cac1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cac5:	48 89 c7             	mov    %rax,%rdi
    cac8:	e8 2c 6e ff ff       	call   38f9 <_ZNSt11char_traitsIcE6lengthEPKc>
    cacd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    cad1:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    cad5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cad9:	48 89 d6             	mov    %rdx,%rsi
    cadc:	48 89 c7             	mov    %rax,%rdi
    cadf:	e8 ec 65 ff ff       	call   30d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    cae4:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    cae8:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    caec:	48 89 d6             	mov    %rdx,%rsi
    caef:	48 89 c7             	mov    %rax,%rdi
    caf2:	e8 78 0c 00 00       	call   d76f <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    caf7:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    cafb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    caff:	48 89 d6             	mov    %rdx,%rsi
    cb02:	48 89 c7             	mov    %rax,%rdi
    cb05:	e8 26 6a ff ff       	call   3530 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    cb0a:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    cb0e:	48 89 c7             	mov    %rax,%rdi
    cb11:	e8 4a 68 ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    cb16:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    cb1a:	48 89 c7             	mov    %rax,%rdi
    cb1d:	e8 3e 68 ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    cb22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cb26:	48 89 c7             	mov    %rax,%rdi
    cb29:	e8 82 66 ff ff       	call   31b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    cb2e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb32:	48 01 c2             	add    %rax,%rdx
    cb35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb39:	48 89 d6             	mov    %rdx,%rsi
    cb3c:	48 89 c7             	mov    %rax,%rdi
    cb3f:	e8 9c 69 ff ff       	call   34e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    cb44:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb48:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cb4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb50:	48 89 ce             	mov    %rcx,%rsi
    cb53:	48 89 c7             	mov    %rax,%rdi
    cb56:	e8 e5 64 ff ff       	call   3040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    cb5b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cb5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb63:	48 89 d6             	mov    %rdx,%rsi
    cb66:	48 89 c7             	mov    %rax,%rdi
    cb69:	e8 62 6a ff ff       	call   35d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    cb6e:	eb 34                	jmp    cba4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    cb70:	48 89 c3             	mov    %rax,%rbx
    cb73:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    cb77:	48 89 c7             	mov    %rax,%rdi
    cb7a:	e8 e1 67 ff ff       	call   3360 <_ZNSaIcED1Ev@plt>
    cb7f:	48 89 d8             	mov    %rbx,%rax
    cb82:	48 89 c7             	mov    %rax,%rdi
    cb85:	e8 e6 69 ff ff       	call   3570 <_Unwind_Resume@plt>
    }
    cb8a:	48 89 c3             	mov    %rax,%rbx
    cb8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb91:	48 89 c7             	mov    %rax,%rdi
    cb94:	e8 e7 65 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    cb99:	48 89 d8             	mov    %rbx,%rax
    cb9c:	48 89 c7             	mov    %rax,%rdi
    cb9f:	e8 cc 69 ff ff       	call   3570 <_Unwind_Resume@plt>
    cba4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cba8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cbac:	c9                   	leave
    cbad:	c3                   	ret

000000000000cbae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    cbae:	55                   	push   %rbp
    cbaf:	48 89 e5             	mov    %rsp,%rbp
    cbb2:	48 83 ec 20          	sub    $0x20,%rsp
    cbb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cbbe:	89 d0                	mov    %edx,%eax
    cbc0:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
    cbc3:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
    cbc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cbcb:	be 01 00 00 00       	mov    $0x1,%esi
    cbd0:	48 89 c7             	mov    %rax,%rdi
    cbd3:	e8 78 67 ff ff       	call   3350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
    cbd8:	48 89 c7             	mov    %rax,%rdi
    cbdb:	e8 d3 00 00 00       	call   ccb3 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    cbe0:	48 89 c2             	mov    %rax,%rdx
    cbe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe7:	48 89 d6             	mov    %rdx,%rsi
    cbea:	48 89 c7             	mov    %rax,%rdi
    cbed:	e8 7e 65 ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
    cbf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbf6:	c9                   	leave
    cbf7:	c3                   	ret

000000000000cbf8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    cbf8:	55                   	push   %rbp
    cbf9:	48 89 e5             	mov    %rsp,%rbp
    cbfc:	48 83 ec 20          	sub    $0x20,%rsp
    cc00:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    cc04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cc08:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cc0c:	48 89 d6             	mov    %rdx,%rsi
    cc0f:	48 89 c7             	mov    %rax,%rdi
    cc12:	e8 81 0b 00 00       	call   d798 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    cc17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc1b:	c9                   	leave
    cc1c:	c3                   	ret
    cc1d:	90                   	nop

000000000000cc1e <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    cc1e:	55                   	push   %rbp
    cc1f:	48 89 e5             	mov    %rsp,%rbp
    cc22:	48 83 ec 20          	sub    $0x20,%rsp
    cc26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    cc2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc2e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cc32:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cc36:	48 89 d6             	mov    %rdx,%rsi
    cc39:	48 89 c7             	mov    %rax,%rdi
    cc3c:	e8 57 0b 00 00       	call   d798 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    cc41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc45:	c9                   	leave
    cc46:	c3                   	ret

000000000000cc47 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cc47:	55                   	push   %rbp
    cc48:	48 89 e5             	mov    %rsp,%rbp
    cc4b:	53                   	push   %rbx
    cc4c:	48 83 ec 18          	sub    $0x18,%rsp
    cc50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc54:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cc58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc5c:	48 89 c7             	mov    %rax,%rdi
    cc5f:	e8 52 0b 00 00       	call   d7b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cc64:	48 8b 18             	mov    (%rax),%rbx
    cc67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc6b:	48 89 c7             	mov    %rax,%rdi
    cc6e:	e8 43 0b 00 00       	call   d7b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cc73:	48 8b 00             	mov    (%rax),%rax
    cc76:	48 39 c3             	cmp    %rax,%rbx
    cc79:	0f 95 c0             	setne  %al
    cc7c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cc80:	c9                   	leave
    cc81:	c3                   	ret

000000000000cc82 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cc82:	55                   	push   %rbp
    cc83:	48 89 e5             	mov    %rsp,%rbp
    cc86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cc8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc8e:	48 8b 00             	mov    (%rax),%rax
    cc91:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cc95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc99:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cc9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cca0:	5d                   	pop    %rbp
    cca1:	c3                   	ret

000000000000cca2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cca2:	55                   	push   %rbp
    cca3:	48 89 e5             	mov    %rsp,%rbp
    cca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    ccaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccae:	48 8b 00             	mov    (%rax),%rax
    ccb1:	5d                   	pop    %rbp
    ccb2:	c3                   	ret

000000000000ccb3 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    ccb3:	55                   	push   %rbp
    ccb4:	48 89 e5             	mov    %rsp,%rbp
    ccb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ccbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccbf:	5d                   	pop    %rbp
    ccc0:	c3                   	ret
    ccc1:	90                   	nop

000000000000ccc2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    ccc2:	55                   	push   %rbp
    ccc3:	48 89 e5             	mov    %rsp,%rbp
    ccc6:	48 83 ec 10          	sub    $0x10,%rsp
    ccca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    ccd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ccda:	48 89 d6             	mov    %rdx,%rsi
    ccdd:	48 89 c7             	mov    %rax,%rdi
    cce0:	e8 33 a0 ff ff       	call   6d18 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    cce5:	90                   	nop
    cce6:	c9                   	leave
    cce7:	c3                   	ret

000000000000cce8 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    cce8:	55                   	push   %rbp
    cce9:	48 89 e5             	mov    %rsp,%rbp
    ccec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccf4:	48 8b 00             	mov    (%rax),%rax
    ccf7:	5d                   	pop    %rbp
    ccf8:	c3                   	ret
    ccf9:	90                   	nop

000000000000ccfa <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    ccfa:	55                   	push   %rbp
    ccfb:	48 89 e5             	mov    %rsp,%rbp
    ccfe:	53                   	push   %rbx
    ccff:	48 83 ec 18          	sub    $0x18,%rsp
    cd03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd0b:	48 89 c7             	mov    %rax,%rdi
    cd0e:	e8 d5 ff ff ff       	call   cce8 <_ZNKSt16initializer_listIPKcE5beginEv>
    cd13:	48 89 c3             	mov    %rax,%rbx
    cd16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd1a:	48 89 c7             	mov    %rax,%rdi
    cd1d:	e8 a2 0a 00 00       	call   d7c4 <_ZNKSt16initializer_listIPKcE4sizeEv>
    cd22:	48 c1 e0 03          	shl    $0x3,%rax
    cd26:	48 01 d8             	add    %rbx,%rax
    cd29:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cd2d:	c9                   	leave
    cd2e:	c3                   	ret

000000000000cd2f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    cd2f:	55                   	push   %rbp
    cd30:	48 89 e5             	mov    %rsp,%rbp
    cd33:	48 83 ec 10          	sub    $0x10,%rsp
    cd37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    cd3f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cd43:	48 89 c7             	mov    %rax,%rdi
    cd46:	e8 8b 0a 00 00       	call   d7d6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    cd4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd4f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cd53:	48 89 d6             	mov    %rdx,%rsi
    cd56:	48 89 c7             	mov    %rax,%rdi
    cd59:	e8 83 0a 00 00       	call   d7e1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    cd5e:	c9                   	leave
    cd5f:	c3                   	ret

000000000000cd60 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    cd60:	55                   	push   %rbp
    cd61:	48 89 e5             	mov    %rsp,%rbp
    cd64:	53                   	push   %rbx
    cd65:	48 83 ec 38          	sub    $0x38,%rsp
    cd69:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cd6d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    cd71:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    cd75:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cd79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cd7d:	48 89 d6             	mov    %rdx,%rsi
    cd80:	48 89 c7             	mov    %rax,%rdi
    cd83:	e8 a7 ff ff ff       	call   cd2f <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    cd88:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    cd8c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    cd90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cd94:	48 89 c7             	mov    %rax,%rdi
    cd97:	e8 ae 92 ff ff       	call   604a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    cd9c:	48 89 c2             	mov    %rax,%rdx
    cd9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cda3:	48 89 d6             	mov    %rdx,%rsi
    cda6:	48 89 c7             	mov    %rax,%rdi
    cda9:	e8 9d 91 ff ff       	call   5f4b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    cdae:	48 89 c6             	mov    %rax,%rsi
    cdb1:	48 89 df             	mov    %rbx,%rdi
    cdb4:	e8 bd a9 ff ff       	call   7776 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    cdb9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cdbd:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    cdc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cdc4:	48 8b 00             	mov    (%rax),%rax
    cdc7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cdcb:	48 c1 e2 03          	shl    $0x3,%rdx
    cdcf:	48 01 c2             	add    %rax,%rdx
    cdd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cdd6:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    cdda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cdde:	48 89 c7             	mov    %rax,%rdi
    cde1:	e8 64 92 ff ff       	call   604a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    cde6:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    cde9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cded:	48 8b 10             	mov    (%rax),%rdx
    cdf0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    cdf4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cdf8:	48 89 c7             	mov    %rax,%rdi
    cdfb:	e8 fb 09 00 00       	call   d7fb <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    ce00:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ce04:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    ce08:	90                   	nop
    ce09:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ce0d:	c9                   	leave
    ce0e:	c3                   	ret

000000000000ce0f <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ce0f:	55                   	push   %rbp
    ce10:	48 89 e5             	mov    %rsp,%rbp
    ce13:	48 83 ec 20          	sub    $0x20,%rsp
    ce17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce1b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ce1f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ce23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce2b:	48 89 d6             	mov    %rdx,%rsi
    ce2e:	48 89 c7             	mov    %rax,%rdi
    ce31:	e8 f6 09 00 00       	call   d82c <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    ce36:	90                   	nop
    ce37:	c9                   	leave
    ce38:	c3                   	ret
    ce39:	90                   	nop

000000000000ce3a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ce3a:	55                   	push   %rbp
    ce3b:	48 89 e5             	mov    %rsp,%rbp
    ce3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ce46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce4a:	48 8b 10             	mov    (%rax),%rdx
    ce4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce51:	48 89 10             	mov    %rdx,(%rax)
    ce54:	90                   	nop
    ce55:	5d                   	pop    %rbp
    ce56:	c3                   	ret
    ce57:	90                   	nop

000000000000ce58 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ce58:	55                   	push   %rbp
    ce59:	48 89 e5             	mov    %rsp,%rbp
    ce5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ce60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce64:	5d                   	pop    %rbp
    ce65:	c3                   	ret

000000000000ce66 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ce66:	55                   	push   %rbp
    ce67:	48 89 e5             	mov    %rsp,%rbp
    ce6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ce6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce72:	5d                   	pop    %rbp
    ce73:	c3                   	ret

000000000000ce74 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    ce74:	55                   	push   %rbp
    ce75:	48 89 e5             	mov    %rsp,%rbp
    ce78:	48 83 ec 20          	sub    $0x20,%rsp
    ce7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ce84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    ce88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce8c:	48 89 c7             	mov    %rax,%rdi
    ce8f:	e8 d2 ff ff ff       	call   ce66 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    ce94:	48 89 c2             	mov    %rax,%rdx
    ce97:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ce9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce9f:	48 89 ce             	mov    %rcx,%rsi
    cea2:	48 89 c7             	mov    %rax,%rdi
    cea5:	e8 a8 09 00 00       	call   d852 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
    ceaa:	90                   	nop
    ceab:	c9                   	leave
    ceac:	c3                   	ret
    cead:	90                   	nop

000000000000ceae <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    ceae:	55                   	push   %rbp
    ceaf:	48 89 e5             	mov    %rsp,%rbp
    ceb2:	53                   	push   %rbx
    ceb3:	48 83 ec 68          	sub    $0x68,%rsp
    ceb7:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    cebb:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    cebf:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    cec3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cec7:	48 8d 15 88 60 00 00 	lea    0x6088(%rip),%rdx        # 12f56 <_ZN6__pstl9execution2v1L5unseqE+0x33f>
    cece:	be 01 00 00 00       	mov    $0x1,%esi
    ced3:	48 89 c7             	mov    %rax,%rdi
    ced6:	e8 b9 09 00 00       	call   d894 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    cedb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    cedf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cee3:	48 8b 00             	mov    (%rax),%rax
    cee6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    ceea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ceee:	48 8b 40 08          	mov    0x8(%rax),%rax
    cef2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    cef6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cefa:	48 89 c7             	mov    %rax,%rdi
    cefd:	e8 64 f1 ff ff       	call   c066 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    cf02:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    cf06:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    cf0a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cf0e:	48 89 d6             	mov    %rdx,%rsi
    cf11:	48 89 c7             	mov    %rax,%rdi
    cf14:	e8 43 0a 00 00       	call   d95c <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    cf19:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    cf1d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cf21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf25:	48 89 d6             	mov    %rdx,%rsi
    cf28:	48 89 c7             	mov    %rax,%rdi
    cf2b:	e8 46 a8 ff ff       	call   7776 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    cf30:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    cf34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cf38:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    cf3c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    cf40:	48 89 c7             	mov    %rax,%rdi
    cf43:	e8 1e ff ff ff       	call   ce66 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    cf48:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    cf4b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cf4f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    cf56:	00 
	  _Alloc_traits::construct(this->_M_impl,
    cf57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cf5b:	48 01 c1             	add    %rax,%rcx
    cf5e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cf62:	48 89 ce             	mov    %rcx,%rsi
    cf65:	48 89 c7             	mov    %rax,%rdi
    cf68:	e8 07 ff ff ff       	call   ce74 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    cf6d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    cf74:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    cf75:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cf79:	48 89 c7             	mov    %rax,%rdi
    cf7c:	e8 c9 90 ff ff       	call   604a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    cf81:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    cf84:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cf88:	48 89 c7             	mov    %rax,%rdi
    cf8b:	e8 c8 fe ff ff       	call   ce58 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cf90:	48 8b 30             	mov    (%rax),%rsi
    cf93:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cf97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf9b:	48 89 d9             	mov    %rbx,%rcx
    cf9e:	48 89 c7             	mov    %rax,%rdi
    cfa1:	e8 f8 09 00 00       	call   d99e <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    cfa6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    cfaa:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    cfaf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cfb3:	48 89 c7             	mov    %rax,%rdi
    cfb6:	e8 8f 90 ff ff       	call   604a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    cfbb:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    cfbe:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cfc2:	48 89 c7             	mov    %rax,%rdi
    cfc5:	e8 8e fe ff ff       	call   ce58 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cfca:	48 8b 00             	mov    (%rax),%rax
    cfcd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    cfd1:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    cfd5:	48 89 d9             	mov    %rbx,%rcx
    cfd8:	48 89 c7             	mov    %rax,%rdi
    cfdb:	e8 be 09 00 00       	call   d99e <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    cfe0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    cfe4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    cfe8:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    cfec:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    cff0:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    cff4:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    cff8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cffc:	48 89 ce             	mov    %rcx,%rsi
    cfff:	48 89 c7             	mov    %rax,%rdi
    d002:	e8 77 90 ff ff       	call   607e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    d007:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d00b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d00f:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    d012:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d016:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    d01a:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    d01e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d022:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d029:	00 
    d02a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d02e:	48 01 c2             	add    %rax,%rdx
    d031:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d035:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    d039:	90                   	nop
    d03a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d03e:	c9                   	leave
    d03f:	c3                   	ret

000000000000d040 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    d040:	55                   	push   %rbp
    d041:	48 89 e5             	mov    %rsp,%rbp
    d044:	48 83 ec 20          	sub    $0x20,%rsp
    d048:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    d04c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d050:	48 89 c7             	mov    %rax,%rdi
    d053:	e8 34 f0 ff ff       	call   c08c <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d058:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d05c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d060:	be 01 00 00 00       	mov    $0x1,%esi
    d065:	48 89 c7             	mov    %rax,%rdi
    d068:	e8 63 09 00 00       	call   d9d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    d06d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d071:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    d075:	48 89 c7             	mov    %rax,%rdi
    d078:	e8 93 f0 ff ff       	call   c110 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    d07d:	c9                   	leave
    d07e:	c3                   	ret
    d07f:	90                   	nop

000000000000d080 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    d080:	55                   	push   %rbp
    d081:	48 89 e5             	mov    %rsp,%rbp
    d084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d088:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    d08c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d090:	5d                   	pop    %rbp
    d091:	c3                   	ret

000000000000d092 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d092:	55                   	push   %rbp
    d093:	48 89 e5             	mov    %rsp,%rbp
    d096:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d09a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d09e:	5d                   	pop    %rbp
    d09f:	c3                   	ret

000000000000d0a0 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d0a0:	55                   	push   %rbp
    d0a1:	48 89 e5             	mov    %rsp,%rbp
    d0a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d0a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0ac:	5d                   	pop    %rbp
    d0ad:	c3                   	ret

000000000000d0ae <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d0ae:	55                   	push   %rbp
    d0af:	48 89 e5             	mov    %rsp,%rbp
    d0b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d0b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0ba:	5d                   	pop    %rbp
    d0bb:	c3                   	ret

000000000000d0bc <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
    d0bc:	55                   	push   %rbp
    d0bd:	48 89 e5             	mov    %rsp,%rbp
    d0c0:	48 83 ec 20          	sub    $0x20,%rsp
    d0c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0c8:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    d0cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0d4:	48 89 d6             	mov    %rdx,%rsi
    d0d7:	48 89 c7             	mov    %rax,%rdi
    d0da:	e8 33 09 00 00       	call   da12 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
    d0df:	90                   	nop
    d0e0:	c9                   	leave
    d0e1:	c3                   	ret

000000000000d0e2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
    d0e2:	55                   	push   %rbp
    d0e3:	48 89 e5             	mov    %rsp,%rbp
    d0e6:	53                   	push   %rbx
    d0e7:	48 83 ec 18          	sub    $0x18,%rsp
    d0eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d0ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
    d0f3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d0f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d0fb:	48 89 c7             	mov    %rax,%rdi
    d0fe:	e8 ab ff ff ff       	call   d0ae <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    d103:	48 89 c6             	mov    %rax,%rsi
    d106:	48 89 df             	mov    %rbx,%rdi
    d109:	e8 ae ff ff ff       	call   d0bc <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
    d10e:	90                   	nop
    d10f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d113:	c9                   	leave
    d114:	c3                   	ret
    d115:	90                   	nop

000000000000d116 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    d116:	55                   	push   %rbp
    d117:	48 89 e5             	mov    %rsp,%rbp
    d11a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d11e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    d122:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d126:	48 8b 10             	mov    (%rax),%rdx
    d129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d12d:	48 89 10             	mov    %rdx,(%rax)
    d130:	90                   	nop
    d131:	5d                   	pop    %rbp
    d132:	c3                   	ret
    d133:	90                   	nop

000000000000d134 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    d134:	55                   	push   %rbp
    d135:	48 89 e5             	mov    %rsp,%rbp
    d138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    d13c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d140:	5d                   	pop    %rbp
    d141:	c3                   	ret

000000000000d142 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
    d142:	55                   	push   %rbp
    d143:	48 89 e5             	mov    %rsp,%rbp
    d146:	53                   	push   %rbx
    d147:	48 83 ec 18          	sub    $0x18,%rsp
    d14b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d14f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
    d153:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d157:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    d15b:	84 c0                	test   %al,%al
    d15d:	74 35                	je     d194 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
    d15f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d163:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    d167:	84 c0                	test   %al,%al
    d169:	74 29                	je     d194 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
    d16b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d16f:	48 89 c7             	mov    %rax,%rdi
    d172:	e8 d7 08 00 00       	call   da4e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    d177:	48 89 c3             	mov    %rax,%rbx
    d17a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d17e:	48 89 c7             	mov    %rax,%rdi
    d181:	e8 4e 00 00 00       	call   d1d4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    d186:	48 89 de             	mov    %rbx,%rsi
    d189:	48 89 c7             	mov    %rax,%rdi
    d18c:	e8 cb 08 00 00       	call   da5c <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
    d191:	90                   	nop
      }
    d192:	eb 38                	jmp    d1cc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
    d194:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d198:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    d19c:	84 c0                	test   %al,%al
    d19e:	74 20                	je     d1c0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
    d1a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d1a4:	48 89 c7             	mov    %rax,%rdi
    d1a7:	e8 a2 08 00 00       	call   da4e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    d1ac:	48 89 c2             	mov    %rax,%rdx
    d1af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1b3:	48 89 d6             	mov    %rdx,%rsi
    d1b6:	48 89 c7             	mov    %rax,%rdi
    d1b9:	e8 dc 08 00 00       	call   da9a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
    d1be:	eb 0c                	jmp    d1cc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
    d1c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1c4:	48 89 c7             	mov    %rax,%rdi
    d1c7:	e8 14 09 00 00       	call   dae0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
    d1cc:	90                   	nop
    d1cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d1d1:	c9                   	leave
    d1d2:	c3                   	ret
    d1d3:	90                   	nop

000000000000d1d4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
    d1d4:	55                   	push   %rbp
    d1d5:	48 89 e5             	mov    %rsp,%rbp
    d1d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    d1dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e0:	5d                   	pop    %rbp
    d1e1:	c3                   	ret

000000000000d1e2 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    d1e2:	55                   	push   %rbp
    d1e3:	48 89 e5             	mov    %rsp,%rbp
    d1e6:	48 83 ec 10          	sub    $0x10,%rsp
    d1ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1f2:	48 89 c7             	mov    %rax,%rdi
    d1f5:	e8 0e 09 00 00       	call   db08 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    d1fa:	90                   	nop
    d1fb:	c9                   	leave
    d1fc:	c3                   	ret
    d1fd:	90                   	nop

000000000000d1fe <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    d1fe:	55                   	push   %rbp
    d1ff:	48 89 e5             	mov    %rsp,%rbp
    d202:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    d206:	90                   	nop
    d207:	5d                   	pop    %rbp
    d208:	c3                   	ret
    d209:	90                   	nop

000000000000d20a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    d20a:	55                   	push   %rbp
    d20b:	48 89 e5             	mov    %rsp,%rbp
    d20e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d212:	90                   	nop
    d213:	5d                   	pop    %rbp
    d214:	c3                   	ret
    d215:	90                   	nop

000000000000d216 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d216:	55                   	push   %rbp
    d217:	48 89 e5             	mov    %rsp,%rbp
    d21a:	48 83 ec 20          	sub    $0x20,%rsp
    d21e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d222:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    d226:	eb 49                	jmp    d271 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    d228:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d22c:	48 89 c7             	mov    %rax,%rdi
    d22f:	e8 df 08 00 00       	call   db13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d234:	48 89 c2             	mov    %rax,%rdx
    d237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d23b:	48 89 d6             	mov    %rdx,%rsi
    d23e:	48 89 c7             	mov    %rax,%rdi
    d241:	e8 d0 ff ff ff       	call   d216 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    d246:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d24a:	48 89 c7             	mov    %rax,%rdi
    d24d:	e8 d3 08 00 00       	call   db25 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    d252:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    d256:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d25a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d25e:	48 89 d6             	mov    %rdx,%rsi
    d261:	48 89 c7             	mov    %rax,%rdi
    d264:	e8 cf 08 00 00       	call   db38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    d269:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d26d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    d271:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    d276:	75 b0                	jne    d228 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
    d278:	90                   	nop
    d279:	90                   	nop
    d27a:	c9                   	leave
    d27b:	c3                   	ret

000000000000d27c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    d27c:	55                   	push   %rbp
    d27d:	48 89 e5             	mov    %rsp,%rbp
    d280:	48 83 ec 10          	sub    $0x10,%rsp
    d284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    d288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d28c:	48 89 c7             	mov    %rax,%rdi
    d28f:	e8 de 08 00 00       	call   db72 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    d294:	c9                   	leave
    d295:	c3                   	ret

000000000000d296 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    d296:	55                   	push   %rbp
    d297:	48 89 e5             	mov    %rsp,%rbp
    d29a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d29e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    d2a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d2a6:	48 8b 10             	mov    (%rax),%rdx
    d2a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2ad:	48 89 10             	mov    %rdx,(%rax)
    d2b0:	90                   	nop
    d2b1:	5d                   	pop    %rbp
    d2b2:	c3                   	ret
    d2b3:	90                   	nop

000000000000d2b4 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    d2b4:	55                   	push   %rbp
    d2b5:	48 89 e5             	mov    %rsp,%rbp
    d2b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    d2bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2c0:	5d                   	pop    %rbp
    d2c1:	c3                   	ret

000000000000d2c2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    d2c2:	55                   	push   %rbp
    d2c3:	48 89 e5             	mov    %rsp,%rbp
    d2c6:	48 83 ec 10          	sub    $0x10,%rsp
    d2ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    d2d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d2da:	48 89 d6             	mov    %rdx,%rsi
    d2dd:	48 89 c7             	mov    %rax,%rdi
    d2e0:	e8 9f 08 00 00       	call   db84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    d2e5:	c9                   	leave
    d2e6:	c3                   	ret
    d2e7:	90                   	nop

000000000000d2e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d2e8:	55                   	push   %rbp
    d2e9:	48 89 e5             	mov    %rsp,%rbp
    d2ec:	48 83 ec 10          	sub    $0x10,%rsp
    d2f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    d2f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f8:	48 89 c7             	mov    %rax,%rdi
    d2fb:	e8 d0 08 00 00       	call   dbd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    d300:	c9                   	leave
    d301:	c3                   	ret

000000000000d302 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    d302:	55                   	push   %rbp
    d303:	48 89 e5             	mov    %rsp,%rbp
    d306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d30a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    d30e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d312:	48 8b 10             	mov    (%rax),%rdx
    d315:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d319:	48 8b 00             	mov    (%rax),%rax
    d31c:	48 39 c2             	cmp    %rax,%rdx
    d31f:	0f 94 c0             	sete   %al
    d322:	5d                   	pop    %rbp
    d323:	c3                   	ret

000000000000d324 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    d324:	55                   	push   %rbp
    d325:	48 89 e5             	mov    %rsp,%rbp
    d328:	48 83 ec 10          	sub    $0x10,%rsp
    d32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    d330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d334:	48 89 c7             	mov    %rax,%rdi
    d337:	e8 be 08 00 00       	call   dbfa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    d33c:	90                   	nop
    d33d:	c9                   	leave
    d33e:	c3                   	ret
    d33f:	90                   	nop

000000000000d340 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d340:	55                   	push   %rbp
    d341:	48 89 e5             	mov    %rsp,%rbp
    d344:	48 83 ec 10          	sub    $0x10,%rsp
    d348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    d34c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d350:	48 8b 00             	mov    (%rax),%rax
    d353:	48 89 c7             	mov    %rax,%rdi
    d356:	e8 ab 08 00 00       	call   dc06 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    d35b:	c9                   	leave
    d35c:	c3                   	ret
    d35d:	90                   	nop

000000000000d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    d35e:	55                   	push   %rbp
    d35f:	48 89 e5             	mov    %rsp,%rbp
    d362:	48 83 ec 20          	sub    $0x20,%rsp
    d366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d36a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d36e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    d372:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d376:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d37a:	48 89 d6             	mov    %rdx,%rsi
    d37d:	48 89 c7             	mov    %rax,%rdi
    d380:	e8 9f 08 00 00       	call   dc24 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    d385:	c9                   	leave
    d386:	c3                   	ret

000000000000d387 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    d387:	55                   	push   %rbp
    d388:	48 89 e5             	mov    %rsp,%rbp
    d38b:	48 83 ec 10          	sub    $0x10,%rsp
    d38f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d393:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    d397:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d39b:	48 89 c7             	mov    %rax,%rdi
    d39e:	e8 a9 08 00 00       	call   dc4c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    d3a3:	48 89 c2             	mov    %rax,%rdx
    d3a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3aa:	48 89 d6             	mov    %rdx,%rsi
    d3ad:	48 89 c7             	mov    %rax,%rdi
    d3b0:	e8 a5 08 00 00       	call   dc5a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    d3b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b9:	c9                   	leave
    d3ba:	c3                   	ret
    d3bb:	90                   	nop

000000000000d3bc <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    d3bc:	55                   	push   %rbp
    d3bd:	48 89 e5             	mov    %rsp,%rbp
    d3c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    d3c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d3cc:	48 8b 10             	mov    (%rax),%rdx
    d3cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3d3:	48 89 10             	mov    %rdx,(%rax)
    d3d6:	90                   	nop
    d3d7:	5d                   	pop    %rbp
    d3d8:	c3                   	ret
    d3d9:	90                   	nop

000000000000d3da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d3da:	55                   	push   %rbp
    d3db:	48 89 e5             	mov    %rsp,%rbp
    d3de:	41 54                	push   %r12
    d3e0:	53                   	push   %rbx
    d3e1:	48 83 ec 60          	sub    $0x60,%rsp
    d3e5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    d3e9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    d3ed:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    d3f1:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    d3f5:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    d3f9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d3fd:	48 89 c7             	mov    %rax,%rdi
    d400:	e8 a4 08 00 00       	call   dca9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    d405:	49 89 c4             	mov    %rax,%r12
    d408:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d40c:	48 89 c7             	mov    %rax,%rdi
    d40f:	e8 87 08 00 00       	call   dc9b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    d414:	48 89 c3             	mov    %rax,%rbx
    d417:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d41b:	48 89 c7             	mov    %rax,%rdi
    d41e:	e8 6a 08 00 00       	call   dc8d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    d423:	48 89 c2             	mov    %rax,%rdx
    d426:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    d42a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d42e:	4d 89 e0             	mov    %r12,%r8
    d431:	48 89 d9             	mov    %rbx,%rcx
    d434:	48 89 c7             	mov    %rax,%rdi
    d437:	e8 7c 08 00 00       	call   dcb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    d43c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d440:	48 89 c7             	mov    %rax,%rdi
    d443:	e8 70 0d 00 00       	call   e1b8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    d448:	48 89 c2             	mov    %rax,%rdx
    d44b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    d44f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d453:	48 89 ce             	mov    %rcx,%rsi
    d456:	48 89 c7             	mov    %rax,%rdi
    d459:	e8 0c 09 00 00       	call   dd6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    d45e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d462:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    d466:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d46a:	48 85 c0             	test   %rax,%rax
    d46d:	74 1c                	je     d48b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    d46f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    d473:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d477:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d47b:	48 89 ce             	mov    %rcx,%rsi
    d47e:	48 89 c7             	mov    %rax,%rdi
    d481:	e8 50 0d 00 00       	call   e1d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    d486:	48 89 c3             	mov    %rax,%rbx
    d489:	eb 17                	jmp    d4a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    d48b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    d48f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d493:	48 89 d6             	mov    %rdx,%rsi
    d496:	48 89 c7             	mov    %rax,%rdi
    d499:	e8 8e 0d 00 00       	call   e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    d49e:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    d4a2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d4a6:	48 89 c7             	mov    %rax,%rdi
    d4a9:	e8 86 08 00 00       	call   dd34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    d4ae:	48 89 d8             	mov    %rbx,%rax
    d4b1:	eb 1a                	jmp    d4cd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    d4b3:	48 89 c3             	mov    %rax,%rbx
    d4b6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d4ba:	48 89 c7             	mov    %rax,%rdi
    d4bd:	e8 72 08 00 00       	call   dd34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    d4c2:	48 89 d8             	mov    %rbx,%rax
    d4c5:	48 89 c7             	mov    %rax,%rdi
    d4c8:	e8 a3 60 ff ff       	call   3570 <_Unwind_Resume@plt>
    d4cd:	48 83 c4 60          	add    $0x60,%rsp
    d4d1:	5b                   	pop    %rbx
    d4d2:	41 5c                	pop    %r12
    d4d4:	5d                   	pop    %rbp
    d4d5:	c3                   	ret

000000000000d4d6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    d4d6:	55                   	push   %rbp
    d4d7:	48 89 e5             	mov    %rsp,%rbp
    d4da:	48 83 ec 20          	sub    $0x20,%rsp
    d4de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    d4e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d4e6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d4ea:	48 89 d6             	mov    %rdx,%rsi
    d4ed:	48 89 c7             	mov    %rax,%rdi
    d4f0:	e8 51 0d 00 00       	call   e246 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d4f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4f9:	c9                   	leave
    d4fa:	c3                   	ret
    d4fb:	90                   	nop

000000000000d4fc <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    d4fc:	55                   	push   %rbp
    d4fd:	48 89 e5             	mov    %rsp,%rbp
    d500:	48 83 ec 20          	sub    $0x20,%rsp
    d504:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    d508:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d50c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d510:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d514:	48 89 d6             	mov    %rdx,%rsi
    d517:	48 89 c7             	mov    %rax,%rdi
    d51a:	e8 27 0d 00 00       	call   e246 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d51f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d523:	c9                   	leave
    d524:	c3                   	ret

000000000000d525 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    d525:	55                   	push   %rbp
    d526:	48 89 e5             	mov    %rsp,%rbp
    d529:	53                   	push   %rbx
    d52a:	48 83 ec 18          	sub    $0x18,%rsp
    d52e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d532:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    d536:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d53a:	48 89 c7             	mov    %rax,%rdi
    d53d:	e8 22 0d 00 00       	call   e264 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d542:	48 8b 18             	mov    (%rax),%rbx
    d545:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d549:	48 89 c7             	mov    %rax,%rdi
    d54c:	e8 13 0d 00 00       	call   e264 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d551:	48 8b 00             	mov    (%rax),%rax
    d554:	48 39 c3             	cmp    %rax,%rbx
    d557:	0f 94 c0             	sete   %al
    d55a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d55e:	c9                   	leave
    d55f:	c3                   	ret

000000000000d560 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    d560:	55                   	push   %rbp
    d561:	48 89 e5             	mov    %rsp,%rbp
    d564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d568:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    d56c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d570:	48 8b 10             	mov    (%rax),%rdx
    d573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d577:	48 89 10             	mov    %rdx,(%rax)
    d57a:	90                   	nop
    d57b:	5d                   	pop    %rbp
    d57c:	c3                   	ret
    d57d:	90                   	nop

000000000000d57e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    d57e:	55                   	push   %rbp
    d57f:	48 89 e5             	mov    %rsp,%rbp
    d582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    d586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d58a:	5d                   	pop    %rbp
    d58b:	c3                   	ret

000000000000d58c <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    d58c:	55                   	push   %rbp
    d58d:	48 89 e5             	mov    %rsp,%rbp
    d590:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d594:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    d598:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d59c:	48 8b 10             	mov    (%rax),%rdx
    d59f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a3:	48 89 10             	mov    %rdx,(%rax)
    d5a6:	90                   	nop
    d5a7:	5d                   	pop    %rbp
    d5a8:	c3                   	ret
    d5a9:	90                   	nop

000000000000d5aa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    d5aa:	55                   	push   %rbp
    d5ab:	48 89 e5             	mov    %rsp,%rbp
    d5ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    d5b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5b6:	5d                   	pop    %rbp
    d5b7:	c3                   	ret

000000000000d5b8 <_ZNSaIP9VkImage_TEC1Ev>:
    d5b8:	55                   	push   %rbp
    d5b9:	48 89 e5             	mov    %rsp,%rbp
    d5bc:	48 83 ec 10          	sub    $0x10,%rsp
    d5c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d5c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5c8:	48 89 c7             	mov    %rax,%rdi
    d5cb:	e8 a2 0c 00 00       	call   e272 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    d5d0:	90                   	nop
    d5d1:	c9                   	leave
    d5d2:	c3                   	ret
    d5d3:	90                   	nop

000000000000d5d4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d5d4:	55                   	push   %rbp
    d5d5:	48 89 e5             	mov    %rsp,%rbp
    d5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5e0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d5e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5eb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d5f2:	00 
    d5f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5f7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d5fe:	00 
	{ }
    d5ff:	90                   	nop
    d600:	5d                   	pop    %rbp
    d601:	c3                   	ret

000000000000d602 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
    d602:	55                   	push   %rbp
    d603:	48 89 e5             	mov    %rsp,%rbp
    d606:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d60a:	90                   	nop
    d60b:	5d                   	pop    %rbp
    d60c:	c3                   	ret
    d60d:	90                   	nop

000000000000d60e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    d60e:	55                   	push   %rbp
    d60f:	48 89 e5             	mov    %rsp,%rbp
    d612:	48 83 ec 20          	sub    $0x20,%rsp
    d616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d61a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d61e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    d622:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d627:	74 17                	je     d640 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    d629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d62d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d631:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d635:	48 89 ce             	mov    %rcx,%rsi
    d638:	48 89 c7             	mov    %rax,%rdi
    d63b:	e8 3d 0c 00 00       	call   e27d <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    d640:	90                   	nop
    d641:	c9                   	leave
    d642:	c3                   	ret
    d643:	90                   	nop

000000000000d644 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    d644:	55                   	push   %rbp
    d645:	48 89 e5             	mov    %rsp,%rbp
    d648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    d64c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d650:	5d                   	pop    %rbp
    d651:	c3                   	ret

000000000000d652 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    d652:	55                   	push   %rbp
    d653:	48 89 e5             	mov    %rsp,%rbp
    d656:	48 83 ec 20          	sub    $0x20,%rsp
    d65a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d65e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d662:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    d666:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d66a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d66e:	48 89 d6             	mov    %rdx,%rsi
    d671:	48 89 c7             	mov    %rax,%rdi
    d674:	e8 32 0c 00 00       	call   e2ab <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    d679:	90                   	nop
    d67a:	c9                   	leave
    d67b:	c3                   	ret

000000000000d67c <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
    d67c:	55                   	push   %rbp
    d67d:	48 89 e5             	mov    %rsp,%rbp
    d680:	53                   	push   %rbx
    d681:	48 83 ec 18          	sub    $0x18,%rsp
    d685:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d689:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d68d:	e8 c0 e5 ff ff       	call   bc52 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
    d692:	48 89 03             	mov    %rax,(%rbx)
	{ }
    d695:	90                   	nop
    d696:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d69a:	c9                   	leave
    d69b:	c3                   	ret

000000000000d69c <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    d69c:	55                   	push   %rbp
    d69d:	48 89 e5             	mov    %rsp,%rbp
    d6a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    d6a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6a8:	48 8b 00             	mov    (%rax),%rax
    d6ab:	5d                   	pop    %rbp
    d6ac:	c3                   	ret

000000000000d6ad <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    d6ad:	55                   	push   %rbp
    d6ae:	48 89 e5             	mov    %rsp,%rbp
    d6b1:	53                   	push   %rbx
    d6b2:	48 83 ec 38          	sub    $0x38,%rsp
    d6b6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    d6ba:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    d6be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d6c2:	48 8b 00             	mov    (%rax),%rax
    d6c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d6c9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d6cd:	48 89 c7             	mov    %rax,%rdi
    d6d0:	e8 cf e5 ff ff       	call   bca4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    d6d5:	48 89 c3             	mov    %rax,%rbx
    d6d8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d6dc:	48 8b 00             	mov    (%rax),%rax
    d6df:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d6e3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d6e7:	48 89 c7             	mov    %rax,%rdi
    d6ea:	e8 b5 e5 ff ff       	call   bca4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    d6ef:	48 29 c3             	sub    %rax,%rbx
    d6f2:	48 89 da             	mov    %rbx,%rdx
    d6f5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d6f9:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    d6fd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d701:	48 89 d6             	mov    %rdx,%rsi
    d704:	48 89 c7             	mov    %rax,%rdi
    d707:	e8 70 e5 ff ff       	call   bc7c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    d70c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    d710:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d714:	c9                   	leave
    d715:	c3                   	ret

000000000000d716 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    d716:	55                   	push   %rbp
    d717:	48 89 e5             	mov    %rsp,%rbp
    d71a:	48 83 ec 20          	sub    $0x20,%rsp
    d71e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    d722:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d726:	48 89 c7             	mov    %rax,%rdi
    d729:	e8 76 e5 ff ff       	call   bca4 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    d72e:	48 89 c1             	mov    %rax,%rcx
    d731:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    d738:	9b c4 20 
    d73b:	48 89 c8             	mov    %rcx,%rax
    d73e:	48 f7 ea             	imul   %rdx
    d741:	48 89 d0             	mov    %rdx,%rax
    d744:	48 c1 f8 07          	sar    $0x7,%rax
    d748:	48 c1 f9 3f          	sar    $0x3f,%rcx
    d74c:	48 89 ca             	mov    %rcx,%rdx
    d74f:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    d752:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d756:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    d75a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    d75e:	48 89 d6             	mov    %rdx,%rsi
    d761:	48 89 c7             	mov    %rax,%rdi
    d764:	e8 69 0b 00 00       	call   e2d2 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    d769:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    d76d:	c9                   	leave
    d76e:	c3                   	ret

000000000000d76f <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    d76f:	55                   	push   %rbp
    d770:	48 89 e5             	mov    %rsp,%rbp
    d773:	48 83 ec 10          	sub    $0x10,%rsp
    d777:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d77b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    d77f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d783:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d787:	48 89 d6             	mov    %rdx,%rsi
    d78a:	48 89 c7             	mov    %rax,%rdi
    d78d:	e8 5d 0b 00 00       	call   e2ef <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    d792:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d796:	c9                   	leave
    d797:	c3                   	ret

000000000000d798 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    d798:	55                   	push   %rbp
    d799:	48 89 e5             	mov    %rsp,%rbp
    d79c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    d7a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d7a8:	48 8b 10             	mov    (%rax),%rdx
    d7ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7af:	48 89 10             	mov    %rdx,(%rax)
    d7b2:	90                   	nop
    d7b3:	5d                   	pop    %rbp
    d7b4:	c3                   	ret
    d7b5:	90                   	nop

000000000000d7b6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    d7b6:	55                   	push   %rbp
    d7b7:	48 89 e5             	mov    %rsp,%rbp
    d7ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    d7be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7c2:	5d                   	pop    %rbp
    d7c3:	c3                   	ret

000000000000d7c4 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    d7c4:	55                   	push   %rbp
    d7c5:	48 89 e5             	mov    %rsp,%rbp
    d7c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7d0:	48 8b 40 08          	mov    0x8(%rax),%rax
    d7d4:	5d                   	pop    %rbp
    d7d5:	c3                   	ret

000000000000d7d6 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    d7d6:	55                   	push   %rbp
    d7d7:	48 89 e5             	mov    %rsp,%rbp
    d7da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d7de:	90                   	nop
    d7df:	5d                   	pop    %rbp
    d7e0:	c3                   	ret

000000000000d7e1 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    d7e1:	55                   	push   %rbp
    d7e2:	48 89 e5             	mov    %rsp,%rbp
    d7e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    d7ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d7f1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    d7f5:	48 c1 f8 03          	sar    $0x3,%rax
    }
    d7f9:	5d                   	pop    %rbp
    d7fa:	c3                   	ret

000000000000d7fb <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    d7fb:	55                   	push   %rbp
    d7fc:	48 89 e5             	mov    %rsp,%rbp
    d7ff:	48 83 ec 20          	sub    $0x20,%rsp
    d803:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d807:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d80b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d80f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    d813:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d817:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d81b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d81f:	48 89 ce             	mov    %rcx,%rsi
    d822:	48 89 c7             	mov    %rax,%rdi
    d825:	e8 19 0b 00 00       	call   e343 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    d82a:	c9                   	leave
    d82b:	c3                   	ret

000000000000d82c <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d82c:	55                   	push   %rbp
    d82d:	48 89 e5             	mov    %rsp,%rbp
    d830:	48 83 ec 10          	sub    $0x10,%rsp
    d834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d838:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d83c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d844:	48 89 d6             	mov    %rdx,%rsi
    d847:	48 89 c7             	mov    %rax,%rdi
    d84a:	e8 29 0b 00 00       	call   e378 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    d84f:	90                   	nop
    d850:	c9                   	leave
    d851:	c3                   	ret

000000000000d852 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    d852:	55                   	push   %rbp
    d853:	48 89 e5             	mov    %rsp,%rbp
    d856:	53                   	push   %rbx
    d857:	48 83 ec 28          	sub    $0x28,%rsp
    d85b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d85f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d863:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    d867:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d86b:	48 89 c6             	mov    %rax,%rsi
    d86e:	bf 08 00 00 00       	mov    $0x8,%edi
    d873:	e8 d4 75 ff ff       	call   4e4c <_ZnwmPv>
    d878:	48 89 c3             	mov    %rax,%rbx
    d87b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d87f:	48 89 c7             	mov    %rax,%rdi
    d882:	e8 df f5 ff ff       	call   ce66 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    d887:	48 8b 00             	mov    (%rax),%rax
    d88a:	48 89 03             	mov    %rax,(%rbx)
    d88d:	90                   	nop
    d88e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d892:	c9                   	leave
    d893:	c3                   	ret

000000000000d894 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    d894:	55                   	push   %rbp
    d895:	48 89 e5             	mov    %rsp,%rbp
    d898:	53                   	push   %rbx
    d899:	48 83 ec 38          	sub    $0x38,%rsp
    d89d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d8a1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d8a5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    d8a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8ad:	48 89 c7             	mov    %rax,%rdi
    d8b0:	e8 d3 0a 00 00       	call   e388 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    d8b5:	48 89 c3             	mov    %rax,%rbx
    d8b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8bc:	48 89 c7             	mov    %rax,%rdi
    d8bf:	e8 02 e9 ff ff       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    d8c4:	48 29 c3             	sub    %rax,%rbx
    d8c7:	48 89 da             	mov    %rbx,%rdx
    d8ca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d8ce:	48 39 c2             	cmp    %rax,%rdx
    d8d1:	0f 92 c0             	setb   %al
    d8d4:	84 c0                	test   %al,%al
    d8d6:	74 0c                	je     d8e4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    d8d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d8dc:	48 89 c7             	mov    %rax,%rdi
    d8df:	e8 5c 58 ff ff       	call   3140 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    d8e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8e8:	48 89 c7             	mov    %rax,%rdi
    d8eb:	e8 d6 e8 ff ff       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    d8f0:	48 89 c3             	mov    %rax,%rbx
    d8f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8f7:	48 89 c7             	mov    %rax,%rdi
    d8fa:	e8 c7 e8 ff ff       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    d8ff:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d903:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    d907:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d90b:	48 89 d6             	mov    %rdx,%rsi
    d90e:	48 89 c7             	mov    %rax,%rdi
    d911:	e8 02 0a 00 00       	call   e318 <_ZSt3maxImERKT_S2_S2_>
    d916:	48 8b 00             	mov    (%rax),%rax
    d919:	48 01 d8             	add    %rbx,%rax
    d91c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    d920:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d924:	48 89 c7             	mov    %rax,%rdi
    d927:	e8 9a e8 ff ff       	call   c1c6 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    d92c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d930:	72 12                	jb     d944 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    d932:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d936:	48 89 c7             	mov    %rax,%rdi
    d939:	e8 4a 0a 00 00       	call   e388 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    d93e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    d942:	73 0e                	jae    d952 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    d944:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d948:	48 89 c7             	mov    %rax,%rdi
    d94b:	e8 38 0a 00 00       	call   e388 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    d950:	eb 04                	jmp    d956 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    d952:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    d956:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d95a:	c9                   	leave
    d95b:	c3                   	ret

000000000000d95c <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    d95c:	55                   	push   %rbp
    d95d:	48 89 e5             	mov    %rsp,%rbp
    d960:	53                   	push   %rbx
    d961:	48 83 ec 18          	sub    $0x18,%rsp
    d965:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d969:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    d96d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d971:	48 89 c7             	mov    %rax,%rdi
    d974:	e8 df f4 ff ff       	call   ce58 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    d979:	48 8b 18             	mov    (%rax),%rbx
    d97c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d980:	48 89 c7             	mov    %rax,%rdi
    d983:	e8 d0 f4 ff ff       	call   ce58 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    d988:	48 8b 00             	mov    (%rax),%rax
    d98b:	48 89 da             	mov    %rbx,%rdx
    d98e:	48 29 c2             	sub    %rax,%rdx
    d991:	48 89 d0             	mov    %rdx,%rax
    d994:	48 c1 f8 03          	sar    $0x3,%rax
    d998:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d99c:	c9                   	leave
    d99d:	c3                   	ret

000000000000d99e <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    d99e:	55                   	push   %rbp
    d99f:	48 89 e5             	mov    %rsp,%rbp
    d9a2:	48 83 ec 20          	sub    $0x20,%rsp
    d9a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d9ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d9b2:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    d9b6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d9ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d9be:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    d9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9c6:	48 89 c7             	mov    %rax,%rdi
    d9c9:	e8 dc 09 00 00       	call   e3aa <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    d9ce:	c9                   	leave
    d9cf:	c3                   	ret

000000000000d9d0 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    d9d0:	55                   	push   %rbp
    d9d1:	48 89 e5             	mov    %rsp,%rbp
    d9d4:	48 83 ec 20          	sub    $0x20,%rsp
    d9d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d9dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    d9e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9e4:	48 8b 00             	mov    (%rax),%rax
    d9e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d9eb:	48 c1 e2 03          	shl    $0x3,%rdx
    d9ef:	48 f7 da             	neg    %rdx
    d9f2:	48 01 d0             	add    %rdx,%rax
    d9f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d9f9:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    d9fd:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    da01:	48 89 d6             	mov    %rdx,%rsi
    da04:	48 89 c7             	mov    %rax,%rdi
    da07:	e8 2e f4 ff ff       	call   ce3a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    da0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    da10:	c9                   	leave
    da11:	c3                   	ret

000000000000da12 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
    da12:	55                   	push   %rbp
    da13:	48 89 e5             	mov    %rsp,%rbp
    da16:	53                   	push   %rbx
    da17:	48 83 ec 28          	sub    $0x28,%rsp
    da1b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da1f:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
    da23:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    da27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da2b:	48 89 c7             	mov    %rax,%rdi
    da2e:	e8 7b f6 ff ff       	call   d0ae <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    da33:	48 89 c6             	mov    %rax,%rsi
    da36:	48 89 df             	mov    %rbx,%rdi
    da39:	e8 d0 09 00 00       	call   e40e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
    da3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da42:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
    da46:	90                   	nop
    da47:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    da4b:	c9                   	leave
    da4c:	c3                   	ret
    da4d:	90                   	nop

000000000000da4e <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
    da4e:	55                   	push   %rbp
    da4f:	48 89 e5             	mov    %rsp,%rbp
    da52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    da56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da5a:	5d                   	pop    %rbp
    da5b:	c3                   	ret

000000000000da5c <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
    da5c:	55                   	push   %rbp
    da5d:	48 89 e5             	mov    %rsp,%rbp
    da60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
    da68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    da6c:	8b 10                	mov    (%rax),%edx
    da6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da72:	89 10                	mov    %edx,(%rax)
	second = __p.second;
    da74:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    da78:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    da7c:	48 8b 46 04          	mov    0x4(%rsi),%rax
    da80:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
    da84:	48 89 41 04          	mov    %rax,0x4(%rcx)
    da88:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
    da8c:	48 8b 46 14          	mov    0x14(%rsi),%rax
    da90:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
    da94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    da98:	5d                   	pop    %rbp
    da99:	c3                   	ret

000000000000da9a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    da9a:	55                   	push   %rbp
    da9b:	48 89 e5             	mov    %rsp,%rbp
    da9e:	53                   	push   %rbx
    da9f:	48 83 ec 18          	sub    $0x18,%rsp
    daa3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    daa7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    daab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    daaf:	48 89 c7             	mov    %rax,%rdi
    dab2:	e8 a9 09 00 00       	call   e460 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    dab7:	48 89 c3             	mov    %rax,%rbx
    daba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dabe:	48 89 c7             	mov    %rax,%rdi
    dac1:	e8 8c 09 00 00       	call   e452 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
    dac6:	48 89 de             	mov    %rbx,%rsi
    dac9:	48 89 c7             	mov    %rax,%rdi
    dacc:	e8 9d 09 00 00       	call   e46e <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    dad1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dad5:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
    dad9:	90                   	nop
    dada:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dade:	c9                   	leave
    dadf:	c3                   	ret

000000000000dae0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
    dae0:	55                   	push   %rbp
    dae1:	48 89 e5             	mov    %rsp,%rbp
    dae4:	48 83 ec 10          	sub    $0x10,%rsp
    dae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
    daec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    daf0:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    daf4:	84 c0                	test   %al,%al
    daf6:	74 0c                	je     db04 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
    daf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dafc:	48 89 c7             	mov    %rax,%rdi
    daff:	e8 c4 09 00 00       	call   e4c8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
    db04:	90                   	nop
    db05:	c9                   	leave
    db06:	c3                   	ret
    db07:	90                   	nop

000000000000db08 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    db08:	55                   	push   %rbp
    db09:	48 89 e5             	mov    %rsp,%rbp
    db0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db10:	90                   	nop
    db11:	5d                   	pop    %rbp
    db12:	c3                   	ret

000000000000db13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    db13:	55                   	push   %rbp
    db14:	48 89 e5             	mov    %rsp,%rbp
    db17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    db1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db1f:	48 8b 40 18          	mov    0x18(%rax),%rax
    db23:	5d                   	pop    %rbp
    db24:	c3                   	ret

000000000000db25 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    db25:	55                   	push   %rbp
    db26:	48 89 e5             	mov    %rsp,%rbp
    db29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    db2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db31:	48 8b 40 10          	mov    0x10(%rax),%rax
    db35:	5d                   	pop    %rbp
    db36:	c3                   	ret
    db37:	90                   	nop

000000000000db38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    db38:	55                   	push   %rbp
    db39:	48 89 e5             	mov    %rsp,%rbp
    db3c:	48 83 ec 10          	sub    $0x10,%rsp
    db40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    db48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    db4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db50:	48 89 d6             	mov    %rdx,%rsi
    db53:	48 89 c7             	mov    %rax,%rdi
    db56:	e8 81 09 00 00       	call   e4dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    db5b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    db5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db63:	48 89 d6             	mov    %rdx,%rsi
    db66:	48 89 c7             	mov    %rax,%rdi
    db69:	e8 ac 09 00 00       	call   e51a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    db6e:	90                   	nop
    db6f:	c9                   	leave
    db70:	c3                   	ret
    db71:	90                   	nop

000000000000db72 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    db72:	55                   	push   %rbp
    db73:	48 89 e5             	mov    %rsp,%rbp
    db76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    db7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db7e:	48 8b 40 10          	mov    0x10(%rax),%rax
    db82:	5d                   	pop    %rbp
    db83:	c3                   	ret

000000000000db84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    db84:	55                   	push   %rbp
    db85:	48 89 e5             	mov    %rsp,%rbp
    db88:	53                   	push   %rbx
    db89:	48 83 ec 18          	sub    $0x18,%rsp
    db8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    db91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    db95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db99:	48 89 c7             	mov    %rax,%rdi
    db9c:	e8 af 09 00 00       	call   e550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    dba1:	48 89 c3             	mov    %rax,%rbx
    dba4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dba8:	48 89 c7             	mov    %rax,%rdi
    dbab:	e8 cc f6 ff ff       	call   d27c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    dbb0:	48 89 c6             	mov    %rax,%rsi
    dbb3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dbb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbbb:	48 89 d1             	mov    %rdx,%rcx
    dbbe:	48 89 da             	mov    %rbx,%rdx
    dbc1:	48 89 c7             	mov    %rax,%rdi
    dbc4:	e8 99 09 00 00       	call   e562 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    dbc9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dbcd:	c9                   	leave
    dbce:	c3                   	ret
    dbcf:	90                   	nop

000000000000dbd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    dbd0:	55                   	push   %rbp
    dbd1:	48 89 e5             	mov    %rsp,%rbp
    dbd4:	48 83 ec 20          	sub    $0x20,%rsp
    dbd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    dbdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbe0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    dbe4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dbe8:	48 89 d6             	mov    %rdx,%rsi
    dbeb:	48 89 c7             	mov    %rax,%rdi
    dbee:	e8 39 06 00 00       	call   e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    dbf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbf7:	c9                   	leave
    dbf8:	c3                   	ret
    dbf9:	90                   	nop

000000000000dbfa <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    dbfa:	55                   	push   %rbp
    dbfb:	48 89 e5             	mov    %rsp,%rbp
    dbfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    dc02:	90                   	nop
    dc03:	5d                   	pop    %rbp
    dc04:	c3                   	ret
    dc05:	90                   	nop

000000000000dc06 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    dc06:	55                   	push   %rbp
    dc07:	48 89 e5             	mov    %rsp,%rbp
    dc0a:	48 83 ec 10          	sub    $0x10,%rsp
    dc0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    dc12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc16:	48 83 c0 20          	add    $0x20,%rax
    dc1a:	48 89 c7             	mov    %rax,%rdi
    dc1d:	e8 d6 09 00 00       	call   e5f8 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    dc22:	c9                   	leave
    dc23:	c3                   	ret

000000000000dc24 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    dc24:	55                   	push   %rbp
    dc25:	48 89 e5             	mov    %rsp,%rbp
    dc28:	48 83 ec 10          	sub    $0x10,%rsp
    dc2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    dc34:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc3c:	48 89 d6             	mov    %rdx,%rsi
    dc3f:	48 89 c7             	mov    %rax,%rdi
    dc42:	e8 e9 53 ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    dc47:	c1 e8 1f             	shr    $0x1f,%eax
    dc4a:	c9                   	leave
    dc4b:	c3                   	ret

000000000000dc4c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dc4c:	55                   	push   %rbp
    dc4d:	48 89 e5             	mov    %rsp,%rbp
    dc50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dc54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc58:	5d                   	pop    %rbp
    dc59:	c3                   	ret

000000000000dc5a <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    dc5a:	55                   	push   %rbp
    dc5b:	48 89 e5             	mov    %rsp,%rbp
    dc5e:	53                   	push   %rbx
    dc5f:	48 83 ec 18          	sub    $0x18,%rsp
    dc63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dc67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    dc6b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    dc6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dc73:	48 89 c7             	mov    %rax,%rdi
    dc76:	e8 d1 ff ff ff       	call   dc4c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    dc7b:	48 89 c6             	mov    %rax,%rsi
    dc7e:	48 89 df             	mov    %rbx,%rdi
    dc81:	e8 8c 09 00 00       	call   e612 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    dc86:	90                   	nop
    dc87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dc8b:	c9                   	leave
    dc8c:	c3                   	ret

000000000000dc8d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dc8d:	55                   	push   %rbp
    dc8e:	48 89 e5             	mov    %rsp,%rbp
    dc91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dc95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc99:	5d                   	pop    %rbp
    dc9a:	c3                   	ret

000000000000dc9b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dc9b:	55                   	push   %rbp
    dc9c:	48 89 e5             	mov    %rsp,%rbp
    dc9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dca7:	5d                   	pop    %rbp
    dca8:	c3                   	ret

000000000000dca9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dca9:	55                   	push   %rbp
    dcaa:	48 89 e5             	mov    %rsp,%rbp
    dcad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dcb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcb5:	5d                   	pop    %rbp
    dcb6:	c3                   	ret
    dcb7:	90                   	nop

000000000000dcb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    dcb8:	55                   	push   %rbp
    dcb9:	48 89 e5             	mov    %rsp,%rbp
    dcbc:	41 54                	push   %r12
    dcbe:	53                   	push   %rbx
    dcbf:	48 83 ec 30          	sub    $0x30,%rsp
    dcc3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dcc7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dccb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    dccf:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    dcd3:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    dcd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dcdb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dcdf:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    dce2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dce6:	48 89 c7             	mov    %rax,%rdi
    dce9:	e8 bb ff ff ff       	call   dca9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    dcee:	49 89 c4             	mov    %rax,%r12
    dcf1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dcf5:	48 89 c7             	mov    %rax,%rdi
    dcf8:	e8 9e ff ff ff       	call   dc9b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    dcfd:	48 89 c3             	mov    %rax,%rbx
    dd00:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dd04:	48 89 c7             	mov    %rax,%rdi
    dd07:	e8 81 ff ff ff       	call   dc8d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    dd0c:	48 89 c6             	mov    %rax,%rsi
    dd0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd13:	4c 89 e1             	mov    %r12,%rcx
    dd16:	48 89 da             	mov    %rbx,%rdx
    dd19:	48 89 c7             	mov    %rax,%rdi
    dd1c:	e8 25 09 00 00       	call   e646 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    dd21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd25:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    dd29:	90                   	nop
    dd2a:	48 83 c4 30          	add    $0x30,%rsp
    dd2e:	5b                   	pop    %rbx
    dd2f:	41 5c                	pop    %r12
    dd31:	5d                   	pop    %rbp
    dd32:	c3                   	ret
    dd33:	90                   	nop

000000000000dd34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    dd34:	55                   	push   %rbp
    dd35:	48 89 e5             	mov    %rsp,%rbp
    dd38:	48 83 ec 10          	sub    $0x10,%rsp
    dd3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    dd40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd44:	48 8b 40 08          	mov    0x8(%rax),%rax
    dd48:	48 85 c0             	test   %rax,%rax
    dd4b:	74 1a                	je     dd67 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    dd4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd51:	48 8b 00             	mov    (%rax),%rax
    dd54:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd58:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    dd5c:	48 89 d6             	mov    %rdx,%rsi
    dd5f:	48 89 c7             	mov    %rax,%rdi
    dd62:	e8 d1 fd ff ff       	call   db38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    dd67:	90                   	nop
    dd68:	c9                   	leave
    dd69:	c3                   	ret

000000000000dd6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    dd6a:	55                   	push   %rbp
    dd6b:	48 89 e5             	mov    %rsp,%rbp
    dd6e:	53                   	push   %rbx
    dd6f:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    dd76:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    dd7d:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    dd84:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    dd8b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dd92:	48 89 c7             	mov    %rax,%rdi
    dd95:	e8 28 09 00 00       	call   e6c2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    dd9a:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    dda1:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    dda8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ddaf:	48 89 c7             	mov    %rax,%rdi
    ddb2:	e8 99 07 00 00       	call   e550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    ddb7:	48 39 c3             	cmp    %rax,%rbx
    ddba:	0f 94 c0             	sete   %al
    ddbd:	84 c0                	test   %al,%al
    ddbf:	0f 84 c8 00 00 00    	je     de8d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    ddc5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ddcc:	48 89 c7             	mov    %rax,%rdi
    ddcf:	e8 16 09 00 00       	call   e6ea <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    ddd4:	48 85 c0             	test   %rax,%rax
    ddd7:	74 44                	je     de1d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    ddd9:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    dde0:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    dde7:	48 89 c7             	mov    %rax,%rdi
    ddea:	e8 0d 09 00 00       	call   e6fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    ddef:	48 8b 00             	mov    (%rax),%rax
    ddf2:	48 89 c7             	mov    %rax,%rdi
    ddf5:	e8 14 09 00 00       	call   e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    ddfa:	48 89 c1             	mov    %rax,%rcx
    ddfd:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    de04:	48 89 c2             	mov    %rax,%rdx
    de07:	48 89 ce             	mov    %rcx,%rsi
    de0a:	48 89 df             	mov    %rbx,%rdi
    de0d:	e8 4c f5 ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    de12:	84 c0                	test   %al,%al
    de14:	74 07                	je     de1d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    de16:	b8 01 00 00 00       	mov    $0x1,%eax
    de1b:	eb 05                	jmp    de22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    de1d:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    de22:	84 c0                	test   %al,%al
    de24:	74 49                	je     de6f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    de26:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    de2d:	48 89 c7             	mov    %rax,%rdi
    de30:	e8 c7 08 00 00       	call   e6fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    de35:	48 89 c2             	mov    %rax,%rdx
    de38:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    de3f:	00 00 00 00 
    de43:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    de4a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    de51:	48 89 ce             	mov    %rcx,%rsi
    de54:	48 89 c7             	mov    %rax,%rdi
    de57:	e8 cc 08 00 00       	call   e728 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    de5c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    de63:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    de6a:	e9 43 03 00 00       	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    de6f:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    de76:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    de7d:	48 89 d6             	mov    %rdx,%rsi
    de80:	48 89 c7             	mov    %rax,%rdi
    de83:	e8 d0 08 00 00       	call   e758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    de88:	e9 25 03 00 00       	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    de8d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    de94:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de9b:	48 89 c7             	mov    %rax,%rdi
    de9e:	e8 6b 08 00 00       	call   e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    dea3:	48 89 c2             	mov    %rax,%rdx
    dea6:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    dead:	48 89 c6             	mov    %rax,%rsi
    deb0:	48 89 df             	mov    %rbx,%rdi
    deb3:	e8 a6 f4 ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    deb8:	84 c0                	test   %al,%al
    deba:	0f 84 66 01 00 00    	je     e026 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    dec0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dec7:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    dece:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    ded5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    dedc:	48 89 c7             	mov    %rax,%rdi
    dedf:	e8 ea 09 00 00       	call   e8ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    dee4:	48 8b 00             	mov    (%rax),%rax
    dee7:	48 39 c3             	cmp    %rax,%rbx
    deea:	0f 94 c0             	sete   %al
    deed:	84 c0                	test   %al,%al
    deef:	74 4c                	je     df3d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    def1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    def8:	48 89 c7             	mov    %rax,%rdi
    defb:	e8 ce 09 00 00       	call   e8ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    df00:	48 89 c3             	mov    %rax,%rbx
    df03:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    df0a:	48 89 c7             	mov    %rax,%rdi
    df0d:	e8 bc 09 00 00       	call   e8ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    df12:	48 89 c1             	mov    %rax,%rcx
    df15:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    df1c:	48 89 da             	mov    %rbx,%rdx
    df1f:	48 89 ce             	mov    %rcx,%rsi
    df22:	48 89 c7             	mov    %rax,%rdi
    df25:	e8 b6 09 00 00       	call   e8e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    df2a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    df31:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    df38:	e9 75 02 00 00       	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    df3d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    df44:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    df4b:	48 89 c7             	mov    %rax,%rdi
    df4e:	e8 d1 09 00 00       	call   e924 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    df53:	48 8b 00             	mov    (%rax),%rax
    df56:	48 89 c7             	mov    %rax,%rdi
    df59:	e8 b0 07 00 00       	call   e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    df5e:	48 89 c1             	mov    %rax,%rcx
    df61:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    df68:	48 89 c2             	mov    %rax,%rdx
    df6b:	48 89 ce             	mov    %rcx,%rsi
    df6e:	48 89 df             	mov    %rbx,%rdi
    df71:	e8 e8 f3 ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    df76:	84 c0                	test   %al,%al
    df78:	0f 84 8a 00 00 00    	je     e008 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    df7e:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    df85:	48 89 c7             	mov    %rax,%rdi
    df88:	e8 86 fb ff ff       	call   db13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    df8d:	48 85 c0             	test   %rax,%rax
    df90:	0f 94 c0             	sete   %al
    df93:	84 c0                	test   %al,%al
    df95:	74 3e                	je     dfd5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    df97:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    df9e:	00 00 00 00 
    dfa2:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    dfa9:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    dfb0:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    dfb7:	48 89 ce             	mov    %rcx,%rsi
    dfba:	48 89 c7             	mov    %rax,%rdi
    dfbd:	e8 66 07 00 00       	call   e728 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    dfc2:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    dfc9:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    dfd0:	e9 dd 01 00 00       	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    dfd5:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    dfdc:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    dfe3:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    dfea:	48 89 ce             	mov    %rcx,%rsi
    dfed:	48 89 c7             	mov    %rax,%rdi
    dff0:	e8 eb 08 00 00       	call   e8e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    dff5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    dffc:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    e003:	e9 aa 01 00 00       	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    e008:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    e00f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    e016:	48 89 d6             	mov    %rdx,%rsi
    e019:	48 89 c7             	mov    %rax,%rdi
    e01c:	e8 37 07 00 00       	call   e758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    e021:	e9 8c 01 00 00       	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    e026:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    e02d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e034:	48 89 c7             	mov    %rax,%rdi
    e037:	e8 d2 06 00 00       	call   e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e03c:	48 89 c1             	mov    %rax,%rcx
    e03f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    e046:	48 89 c2             	mov    %rax,%rdx
    e049:	48 89 ce             	mov    %rcx,%rsi
    e04c:	48 89 df             	mov    %rbx,%rdi
    e04f:	e8 0a f3 ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e054:	84 c0                	test   %al,%al
    e056:	0f 84 2c 01 00 00    	je     e188 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    e05c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e063:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    e06a:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    e071:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    e078:	48 89 c7             	mov    %rax,%rdi
    e07b:	e8 7c 06 00 00       	call   e6fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    e080:	48 8b 00             	mov    (%rax),%rax
    e083:	48 39 c3             	cmp    %rax,%rbx
    e086:	0f 94 c0             	sete   %al
    e089:	84 c0                	test   %al,%al
    e08b:	74 3a                	je     e0c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    e08d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    e094:	48 89 c7             	mov    %rax,%rdi
    e097:	e8 60 06 00 00       	call   e6fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    e09c:	48 89 c2             	mov    %rax,%rdx
    e09f:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    e0a6:	00 
    e0a7:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    e0ab:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    e0af:	48 89 ce             	mov    %rcx,%rsi
    e0b2:	48 89 c7             	mov    %rax,%rdi
    e0b5:	e8 6e 06 00 00       	call   e728 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    e0ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e0be:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    e0c2:	e9 eb 00 00 00       	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    e0c7:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    e0ce:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    e0d5:	48 89 c7             	mov    %rax,%rdi
    e0d8:	e8 6f 08 00 00       	call   e94c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    e0dd:	48 8b 00             	mov    (%rax),%rax
    e0e0:	48 89 c7             	mov    %rax,%rdi
    e0e3:	e8 26 06 00 00       	call   e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e0e8:	48 89 c2             	mov    %rax,%rdx
    e0eb:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    e0f2:	48 89 c6             	mov    %rax,%rsi
    e0f5:	48 89 df             	mov    %rbx,%rdi
    e0f8:	e8 61 f2 ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e0fd:	84 c0                	test   %al,%al
    e0ff:	74 6c                	je     e16d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    e101:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e108:	48 89 c7             	mov    %rax,%rdi
    e10b:	e8 03 fa ff ff       	call   db13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e110:	48 85 c0             	test   %rax,%rax
    e113:	0f 94 c0             	sete   %al
    e116:	84 c0                	test   %al,%al
    e118:	74 2c                	je     e146 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    e11a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    e121:	00 
    e122:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    e129:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    e12d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    e131:	48 89 ce             	mov    %rcx,%rsi
    e134:	48 89 c7             	mov    %rax,%rdi
    e137:	e8 ec 05 00 00       	call   e728 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    e13c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e140:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    e144:	eb 6c                	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    e146:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    e14d:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    e154:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e158:	48 89 ce             	mov    %rcx,%rsi
    e15b:	48 89 c7             	mov    %rax,%rdi
    e15e:	e8 7d 07 00 00       	call   e8e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    e163:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e167:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e16b:	eb 45                	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    e16d:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    e174:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    e17b:	48 89 d6             	mov    %rdx,%rsi
    e17e:	48 89 c7             	mov    %rax,%rdi
    e181:	e8 d2 05 00 00       	call   e758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    e186:	eb 2a                	jmp    e1b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    e188:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e18f:	00 
    e190:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    e194:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    e19b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e19f:	48 89 ce             	mov    %rcx,%rsi
    e1a2:	48 89 c7             	mov    %rax,%rdi
    e1a5:	e8 7e 05 00 00       	call   e728 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    e1aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e1ae:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    e1b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e1b6:	c9                   	leave
    e1b7:	c3                   	ret

000000000000e1b8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    e1b8:	55                   	push   %rbp
    e1b9:	48 89 e5             	mov    %rsp,%rbp
    e1bc:	48 83 ec 10          	sub    $0x10,%rsp
    e1c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    e1c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1c8:	48 8b 40 08          	mov    0x8(%rax),%rax
    e1cc:	48 89 c7             	mov    %rax,%rdi
    e1cf:	e8 a0 07 00 00       	call   e974 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e1d4:	c9                   	leave
    e1d5:	c3                   	ret

000000000000e1d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    e1d6:	55                   	push   %rbp
    e1d7:	48 89 e5             	mov    %rsp,%rbp
    e1da:	48 83 ec 30          	sub    $0x30,%rsp
    e1de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e1e2:	48 89 d1             	mov    %rdx,%rcx
    e1e5:	48 89 f0             	mov    %rsi,%rax
    e1e8:	48 89 fa             	mov    %rdi,%rdx
    e1eb:	48 89 ca             	mov    %rcx,%rdx
    e1ee:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e1f2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    e1f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1fa:	48 8b 00             	mov    (%rax),%rax
    e1fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e201:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    e205:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e209:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    e20d:	48 89 c7             	mov    %rax,%rdi
    e210:	e8 8b 07 00 00       	call   e9a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    e215:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    e219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e21d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e224:	00 
	  return __it;
    e225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    e229:	c9                   	leave
    e22a:	c3                   	ret
    e22b:	90                   	nop

000000000000e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    e22c:	55                   	push   %rbp
    e22d:	48 89 e5             	mov    %rsp,%rbp
    e230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e234:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    e238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e23c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e240:	48 89 10             	mov    %rdx,(%rax)
    e243:	90                   	nop
    e244:	5d                   	pop    %rbp
    e245:	c3                   	ret

000000000000e246 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e246:	55                   	push   %rbp
    e247:	48 89 e5             	mov    %rsp,%rbp
    e24a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e24e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e252:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e256:	48 8b 10             	mov    (%rax),%rdx
    e259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e25d:	48 89 10             	mov    %rdx,(%rax)
    e260:	90                   	nop
    e261:	5d                   	pop    %rbp
    e262:	c3                   	ret
    e263:	90                   	nop

000000000000e264 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e264:	55                   	push   %rbp
    e265:	48 89 e5             	mov    %rsp,%rbp
    e268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e26c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e270:	5d                   	pop    %rbp
    e271:	c3                   	ret

000000000000e272 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
    e272:	55                   	push   %rbp
    e273:	48 89 e5             	mov    %rsp,%rbp
    e276:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e27a:	90                   	nop
    e27b:	5d                   	pop    %rbp
    e27c:	c3                   	ret

000000000000e27d <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    e27d:	55                   	push   %rbp
    e27e:	48 89 e5             	mov    %rsp,%rbp
    e281:	48 83 ec 20          	sub    $0x20,%rsp
    e285:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e289:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e28d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    e291:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e295:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e29d:	48 89 ce             	mov    %rcx,%rsi
    e2a0:	48 89 c7             	mov    %rax,%rdi
    e2a3:	e8 bc 07 00 00       	call   ea64 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    e2a8:	90                   	nop
    e2a9:	c9                   	leave
    e2aa:	c3                   	ret

000000000000e2ab <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    e2ab:	55                   	push   %rbp
    e2ac:	48 89 e5             	mov    %rsp,%rbp
    e2af:	48 83 ec 10          	sub    $0x10,%rsp
    e2b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2b7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    e2bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2c3:	48 89 d6             	mov    %rdx,%rsi
    e2c6:	48 89 c7             	mov    %rax,%rdi
    e2c9:	e8 c7 07 00 00       	call   ea95 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    e2ce:	90                   	nop
    e2cf:	c9                   	leave
    e2d0:	c3                   	ret
    e2d1:	90                   	nop

000000000000e2d2 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    e2d2:	55                   	push   %rbp
    e2d3:	48 89 e5             	mov    %rsp,%rbp
    e2d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    e2de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e2e2:	48 8b 10             	mov    (%rax),%rdx
    e2e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2e9:	48 89 10             	mov    %rdx,(%rax)
    e2ec:	90                   	nop
    e2ed:	5d                   	pop    %rbp
    e2ee:	c3                   	ret

000000000000e2ef <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    e2ef:	55                   	push   %rbp
    e2f0:	48 89 e5             	mov    %rsp,%rbp
    e2f3:	48 83 ec 10          	sub    $0x10,%rsp
    e2f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    e2ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e303:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e307:	48 89 d6             	mov    %rdx,%rsi
    e30a:	48 89 c7             	mov    %rax,%rdi
    e30d:	e8 4e 4e ff ff       	call   3160 <_ZNSaIcEC1ERKS_@plt>
    e312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e316:	c9                   	leave
    e317:	c3                   	ret

000000000000e318 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    e318:	55                   	push   %rbp
    e319:	48 89 e5             	mov    %rsp,%rbp
    e31c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e320:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    e324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e328:	48 8b 10             	mov    (%rax),%rdx
    e32b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e32f:	48 8b 00             	mov    (%rax),%rax
    e332:	48 39 c2             	cmp    %rax,%rdx
    e335:	73 06                	jae    e33d <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    e337:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e33b:	eb 04                	jmp    e341 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    e33d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    e341:	5d                   	pop    %rbp
    e342:	c3                   	ret

000000000000e343 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    e343:	55                   	push   %rbp
    e344:	48 89 e5             	mov    %rsp,%rbp
    e347:	48 83 ec 30          	sub    $0x30,%rsp
    e34b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e34f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e353:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    e357:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    e35b:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    e35f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e363:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e367:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e36b:	48 89 ce             	mov    %rcx,%rsi
    e36e:	48 89 c7             	mov    %rax,%rdi
    e371:	e8 2e 07 00 00       	call   eaa4 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    e376:	c9                   	leave
    e377:	c3                   	ret

000000000000e378 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    e378:	55                   	push   %rbp
    e379:	48 89 e5             	mov    %rsp,%rbp
    e37c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e380:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e384:	90                   	nop
    e385:	5d                   	pop    %rbp
    e386:	c3                   	ret
    e387:	90                   	nop

000000000000e388 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    e388:	55                   	push   %rbp
    e389:	48 89 e5             	mov    %rsp,%rbp
    e38c:	48 83 ec 10          	sub    $0x10,%rsp
    e390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    e394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e398:	48 89 c7             	mov    %rax,%rdi
    e39b:	e8 32 07 00 00       	call   ead2 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e3a0:	48 89 c7             	mov    %rax,%rdi
    e3a3:	e8 2d 89 ff ff       	call   6cd5 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    e3a8:	c9                   	leave
    e3a9:	c3                   	ret

000000000000e3aa <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    e3aa:	55                   	push   %rbp
    e3ab:	48 89 e5             	mov    %rsp,%rbp
    e3ae:	41 54                	push   %r12
    e3b0:	53                   	push   %rbx
    e3b1:	48 83 ec 20          	sub    $0x20,%rsp
    e3b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e3b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e3bd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e3c1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    e3c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e3c9:	48 89 c7             	mov    %rax,%rdi
    e3cc:	e8 0f 07 00 00       	call   eae0 <_ZSt12__niter_baseIPPKcET_S3_>
    e3d1:	49 89 c4             	mov    %rax,%r12
    e3d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e3d8:	48 89 c7             	mov    %rax,%rdi
    e3db:	e8 00 07 00 00       	call   eae0 <_ZSt12__niter_baseIPPKcET_S3_>
    e3e0:	48 89 c3             	mov    %rax,%rbx
    e3e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3e7:	48 89 c7             	mov    %rax,%rdi
    e3ea:	e8 f1 06 00 00       	call   eae0 <_ZSt12__niter_baseIPPKcET_S3_>
    e3ef:	48 89 c7             	mov    %rax,%rdi
    e3f2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e3f6:	48 89 c1             	mov    %rax,%rcx
    e3f9:	4c 89 e2             	mov    %r12,%rdx
    e3fc:	48 89 de             	mov    %rbx,%rsi
    e3ff:	e8 ea 06 00 00       	call   eaee <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    e404:	48 83 c4 20          	add    $0x20,%rsp
    e408:	5b                   	pop    %rbx
    e409:	41 5c                	pop    %r12
    e40b:	5d                   	pop    %rbp
    e40c:	c3                   	ret
    e40d:	90                   	nop

000000000000e40e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
    e40e:	55                   	push   %rbp
    e40f:	48 89 e5             	mov    %rsp,%rbp
    e412:	48 83 ec 10          	sub    $0x10,%rsp
    e416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e41a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
    e41e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e422:	48 89 c7             	mov    %rax,%rdi
    e425:	e8 84 ec ff ff       	call   d0ae <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    e42a:	48 89 c1             	mov    %rax,%rcx
    e42d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    e431:	48 8b 01             	mov    (%rcx),%rax
    e434:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    e438:	48 89 06             	mov    %rax,(%rsi)
    e43b:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    e43f:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    e443:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    e447:	48 89 46 0c          	mov    %rax,0xc(%rsi)
    e44b:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
    e44f:	90                   	nop
    e450:	c9                   	leave
    e451:	c3                   	ret

000000000000e452 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e452:	55                   	push   %rbp
    e453:	48 89 e5             	mov    %rsp,%rbp
    e456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e45e:	5d                   	pop    %rbp
    e45f:	c3                   	ret

000000000000e460 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    e460:	55                   	push   %rbp
    e461:	48 89 e5             	mov    %rsp,%rbp
    e464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    e468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e46c:	5d                   	pop    %rbp
    e46d:	c3                   	ret

000000000000e46e <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    e46e:	55                   	push   %rbp
    e46f:	48 89 e5             	mov    %rsp,%rbp
    e472:	53                   	push   %rbx
    e473:	48 83 ec 18          	sub    $0x18,%rsp
    e477:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e47b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    e47f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e483:	48 89 c6             	mov    %rax,%rsi
    e486:	bf 1c 00 00 00       	mov    $0x1c,%edi
    e48b:	e8 bc 69 ff ff       	call   4e4c <_ZnwmPv>
    e490:	48 89 c3             	mov    %rax,%rbx
    e493:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e497:	48 89 c7             	mov    %rax,%rdi
    e49a:	e8 c1 ff ff ff       	call   e460 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    e49f:	48 89 c1             	mov    %rax,%rcx
    e4a2:	48 8b 01             	mov    (%rcx),%rax
    e4a5:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    e4a9:	48 89 03             	mov    %rax,(%rbx)
    e4ac:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    e4b0:	48 8b 41 0c          	mov    0xc(%rcx),%rax
    e4b4:	48 8b 51 14          	mov    0x14(%rcx),%rdx
    e4b8:	48 89 43 0c          	mov    %rax,0xc(%rbx)
    e4bc:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
    e4c0:	90                   	nop
    e4c1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e4c5:	c9                   	leave
    e4c6:	c3                   	ret
    e4c7:	90                   	nop

000000000000e4c8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
    e4c8:	55                   	push   %rbp
    e4c9:	48 89 e5             	mov    %rsp,%rbp
    e4cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
    e4d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4d4:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
    e4d8:	90                   	nop
    e4d9:	5d                   	pop    %rbp
    e4da:	c3                   	ret
    e4db:	90                   	nop

000000000000e4dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    e4dc:	55                   	push   %rbp
    e4dd:	48 89 e5             	mov    %rsp,%rbp
    e4e0:	53                   	push   %rbx
    e4e1:	48 83 ec 18          	sub    $0x18,%rsp
    e4e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e4e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    e4ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4f1:	48 89 c7             	mov    %rax,%rdi
    e4f4:	e8 0d f7 ff ff       	call   dc06 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e4f9:	48 89 c3             	mov    %rax,%rbx
    e4fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e500:	48 89 c7             	mov    %rax,%rdi
    e503:	e8 4a 06 00 00       	call   eb52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e508:	48 89 de             	mov    %rbx,%rsi
    e50b:	48 89 c7             	mov    %rax,%rdi
    e50e:	e8 4d 06 00 00       	call   eb60 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    e513:	90                   	nop
    e514:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e518:	c9                   	leave
    e519:	c3                   	ret

000000000000e51a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    e51a:	55                   	push   %rbp
    e51b:	48 89 e5             	mov    %rsp,%rbp
    e51e:	48 83 ec 10          	sub    $0x10,%rsp
    e522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    e52a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e52e:	48 89 c7             	mov    %rax,%rdi
    e531:	e8 1c 06 00 00       	call   eb52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e536:	48 89 c1             	mov    %rax,%rcx
    e539:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e53d:	ba 01 00 00 00       	mov    $0x1,%edx
    e542:	48 89 c6             	mov    %rax,%rsi
    e545:	48 89 cf             	mov    %rcx,%rdi
    e548:	e8 39 06 00 00       	call   eb86 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    e54d:	90                   	nop
    e54e:	c9                   	leave
    e54f:	c3                   	ret

000000000000e550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    e550:	55                   	push   %rbp
    e551:	48 89 e5             	mov    %rsp,%rbp
    e554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    e558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e55c:	48 83 c0 08          	add    $0x8,%rax
    e560:	5d                   	pop    %rbp
    e561:	c3                   	ret

000000000000e562 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e562:	55                   	push   %rbp
    e563:	48 89 e5             	mov    %rsp,%rbp
    e566:	53                   	push   %rbx
    e567:	48 83 ec 38          	sub    $0x38,%rsp
    e56b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e56f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e573:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e577:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    e57b:	eb 56                	jmp    e5d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    e57d:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e581:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e585:	48 89 c7             	mov    %rax,%rdi
    e588:	e8 e7 03 00 00       	call   e974 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e58d:	48 89 c1             	mov    %rax,%rcx
    e590:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e594:	48 89 c2             	mov    %rax,%rdx
    e597:	48 89 ce             	mov    %rcx,%rsi
    e59a:	48 89 df             	mov    %rbx,%rdi
    e59d:	e8 bc ed ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e5a2:	83 f0 01             	xor    $0x1,%eax
    e5a5:	84 c0                	test   %al,%al
    e5a7:	74 1a                	je     e5c3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    e5a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e5ad:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    e5b1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e5b5:	48 89 c7             	mov    %rax,%rdi
    e5b8:	e8 68 f5 ff ff       	call   db25 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    e5bd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e5c1:	eb 10                	jmp    e5d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    e5c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e5c7:	48 89 c7             	mov    %rax,%rdi
    e5ca:	e8 44 f5 ff ff       	call   db13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e5cf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    e5d3:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e5d8:	75 a3                	jne    e57d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    e5da:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e5de:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e5e2:	48 89 d6             	mov    %rdx,%rsi
    e5e5:	48 89 c7             	mov    %rax,%rdi
    e5e8:	e8 3f fc ff ff       	call   e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e5ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    e5f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e5f5:	c9                   	leave
    e5f6:	c3                   	ret
    e5f7:	90                   	nop

000000000000e5f8 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    e5f8:	55                   	push   %rbp
    e5f9:	48 89 e5             	mov    %rsp,%rbp
    e5fc:	48 83 ec 10          	sub    $0x10,%rsp
    e600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    e604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e608:	48 89 c7             	mov    %rax,%rdi
    e60b:	e8 a4 05 00 00       	call   ebb4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    e610:	c9                   	leave
    e611:	c3                   	ret

000000000000e612 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    e612:	55                   	push   %rbp
    e613:	48 89 e5             	mov    %rsp,%rbp
    e616:	53                   	push   %rbx
    e617:	48 83 ec 18          	sub    $0x18,%rsp
    e61b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e61f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    e623:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e627:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e62b:	48 89 c7             	mov    %rax,%rdi
    e62e:	e8 19 f6 ff ff       	call   dc4c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    e633:	48 89 c6             	mov    %rax,%rsi
    e636:	48 89 df             	mov    %rbx,%rdi
    e639:	e8 84 05 00 00       	call   ebc2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    e63e:	90                   	nop
    e63f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e643:	c9                   	leave
    e644:	c3                   	ret
    e645:	90                   	nop

000000000000e646 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    e646:	55                   	push   %rbp
    e647:	48 89 e5             	mov    %rsp,%rbp
    e64a:	41 54                	push   %r12
    e64c:	53                   	push   %rbx
    e64d:	48 83 ec 30          	sub    $0x30,%rsp
    e651:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e655:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e659:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e65d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    e661:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e665:	48 89 c7             	mov    %rax,%rdi
    e668:	e8 7b 05 00 00       	call   ebe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    e66d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    e671:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e675:	48 89 c7             	mov    %rax,%rdi
    e678:	e8 2c f6 ff ff       	call   dca9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    e67d:	49 89 c4             	mov    %rax,%r12
    e680:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e684:	48 89 c7             	mov    %rax,%rdi
    e687:	e8 0f f6 ff ff       	call   dc9b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    e68c:	48 89 c3             	mov    %rax,%rbx
    e68f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e693:	48 89 c7             	mov    %rax,%rdi
    e696:	e8 f2 f5 ff ff       	call   dc8d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    e69b:	48 89 c2             	mov    %rax,%rdx
    e69e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    e6a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6a6:	4d 89 e0             	mov    %r12,%r8
    e6a9:	48 89 d9             	mov    %rbx,%rcx
    e6ac:	48 89 c7             	mov    %rax,%rdi
    e6af:	e8 5c 05 00 00       	call   ec10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    e6b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e6b8:	48 83 c4 30          	add    $0x30,%rsp
    e6bc:	5b                   	pop    %rbx
    e6bd:	41 5c                	pop    %r12
    e6bf:	5d                   	pop    %rbp
    e6c0:	c3                   	ret
    e6c1:	90                   	nop

000000000000e6c2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    e6c2:	55                   	push   %rbp
    e6c3:	48 89 e5             	mov    %rsp,%rbp
    e6c6:	48 83 ec 20          	sub    $0x20,%rsp
    e6ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    e6ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6d2:	48 8b 10             	mov    (%rax),%rdx
    e6d5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e6d9:	48 89 d6             	mov    %rdx,%rsi
    e6dc:	48 89 c7             	mov    %rax,%rdi
    e6df:	e8 48 fb ff ff       	call   e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e6e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6e8:	c9                   	leave
    e6e9:	c3                   	ret

000000000000e6ea <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e6ea:	55                   	push   %rbp
    e6eb:	48 89 e5             	mov    %rsp,%rbp
    e6ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    e6f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6f6:	48 8b 40 28          	mov    0x28(%rax),%rax
    e6fa:	5d                   	pop    %rbp
    e6fb:	c3                   	ret

000000000000e6fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    e6fc:	55                   	push   %rbp
    e6fd:	48 89 e5             	mov    %rsp,%rbp
    e700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    e704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e708:	48 83 c0 20          	add    $0x20,%rax
    e70c:	5d                   	pop    %rbp
    e70d:	c3                   	ret

000000000000e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    e70e:	55                   	push   %rbp
    e70f:	48 89 e5             	mov    %rsp,%rbp
    e712:	48 83 ec 10          	sub    $0x10,%rsp
    e716:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    e71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e71e:	48 89 c7             	mov    %rax,%rdi
    e721:	e8 4e 02 00 00       	call   e974 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e726:	c9                   	leave
    e727:	c3                   	ret

000000000000e728 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
    e728:	55                   	push   %rbp
    e729:	48 89 e5             	mov    %rsp,%rbp
    e72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e734:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    e738:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e73c:	48 8b 10             	mov    (%rax),%rdx
    e73f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e743:	48 89 10             	mov    %rdx,(%rax)
    e746:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e74a:	48 8b 10             	mov    (%rax),%rdx
    e74d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e751:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e755:	90                   	nop
    e756:	5d                   	pop    %rbp
    e757:	c3                   	ret

000000000000e758 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e758:	55                   	push   %rbp
    e759:	48 89 e5             	mov    %rsp,%rbp
    e75c:	53                   	push   %rbx
    e75d:	48 83 ec 78          	sub    $0x78,%rsp
    e761:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    e765:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    e769:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e76d:	48 89 c7             	mov    %rax,%rdi
    e770:	e8 07 eb ff ff       	call   d27c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    e775:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    e779:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e77d:	48 89 c7             	mov    %rax,%rdi
    e780:	e8 cb fd ff ff       	call   e550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    e785:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    e789:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    e78d:	eb 51                	jmp    e7e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    e78f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e793:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    e797:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e79b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e79f:	48 89 c7             	mov    %rax,%rdi
    e7a2:	e8 cd 01 00 00       	call   e974 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e7a7:	48 89 c2             	mov    %rax,%rdx
    e7aa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e7ae:	48 89 c6             	mov    %rax,%rsi
    e7b1:	48 89 df             	mov    %rbx,%rdi
    e7b4:	e8 a5 eb ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e7b9:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    e7bc:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e7c0:	74 0e                	je     e7d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    e7c2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e7c6:	48 89 c7             	mov    %rax,%rdi
    e7c9:	e8 57 f3 ff ff       	call   db25 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    e7ce:	eb 0c                	jmp    e7dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    e7d0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e7d4:	48 89 c7             	mov    %rax,%rdi
    e7d7:	e8 37 f3 ff ff       	call   db13 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e7dc:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    e7e0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e7e4:	48 85 c0             	test   %rax,%rax
    e7e7:	75 a6                	jne    e78f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    e7e9:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    e7ed:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e7f1:	48 89 d6             	mov    %rdx,%rsi
    e7f4:	48 89 c7             	mov    %rax,%rdi
    e7f7:	e8 30 fa ff ff       	call   e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    e7fc:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e800:	74 54                	je     e856 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    e802:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e806:	48 89 c7             	mov    %rax,%rdi
    e809:	e8 d4 04 00 00       	call   ece2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    e80e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e812:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    e816:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e81a:	48 89 d6             	mov    %rdx,%rsi
    e81d:	48 89 c7             	mov    %rax,%rdi
    e820:	e8 dd ea ff ff       	call   d302 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    e825:	84 c0                	test   %al,%al
    e827:	74 21                	je     e84a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    e829:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e82d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e831:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e835:	48 89 ce             	mov    %rcx,%rsi
    e838:	48 89 c7             	mov    %rax,%rdi
    e83b:	e8 cc 04 00 00       	call   ed0c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e840:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    e844:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    e848:	eb 7d                	jmp    e8c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    e84a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e84e:	48 89 c7             	mov    %rax,%rdi
    e851:	e8 ce 00 00 00       	call   e924 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    e856:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e85a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    e85e:	48 89 c7             	mov    %rax,%rdi
    e861:	e8 a8 fe ff ff       	call   e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e866:	48 89 c1             	mov    %rax,%rcx
    e869:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e86d:	48 89 c2             	mov    %rax,%rdx
    e870:	48 89 ce             	mov    %rcx,%rsi
    e873:	48 89 df             	mov    %rbx,%rdi
    e876:	e8 e3 ea ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e87b:	84 c0                	test   %al,%al
    e87d:	74 21                	je     e8a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    e87f:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e883:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e887:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e88b:	48 89 ce             	mov    %rcx,%rsi
    e88e:	48 89 c7             	mov    %rax,%rdi
    e891:	e8 76 04 00 00       	call   ed0c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e896:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e89a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e89e:	eb 27                	jmp    e8c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    e8a0:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e8a7:	00 
    e8a8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    e8ac:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e8b0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e8b4:	48 89 ce             	mov    %rcx,%rsi
    e8b7:	48 89 c7             	mov    %rax,%rdi
    e8ba:	e8 69 fe ff ff       	call   e728 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    e8bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e8c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    e8c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e8cb:	c9                   	leave
    e8cc:	c3                   	ret
    e8cd:	90                   	nop

000000000000e8ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    e8ce:	55                   	push   %rbp
    e8cf:	48 89 e5             	mov    %rsp,%rbp
    e8d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    e8d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8da:	48 83 c0 18          	add    $0x18,%rax
    e8de:	5d                   	pop    %rbp
    e8df:	c3                   	ret

000000000000e8e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    e8e0:	55                   	push   %rbp
    e8e1:	48 89 e5             	mov    %rsp,%rbp
    e8e4:	48 83 ec 20          	sub    $0x20,%rsp
    e8e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    e8f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e8f8:	48 89 c7             	mov    %rax,%rdi
    e8fb:	e8 50 04 00 00       	call   ed50 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    e900:	48 8b 10             	mov    (%rax),%rdx
    e903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e907:	48 89 10             	mov    %rdx,(%rax)
    e90a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e90e:	48 89 c7             	mov    %rax,%rdi
    e911:	e8 3a 04 00 00       	call   ed50 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    e916:	48 8b 10             	mov    (%rax),%rdx
    e919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e91d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e921:	90                   	nop
    e922:	c9                   	leave
    e923:	c3                   	ret

000000000000e924 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    e924:	55                   	push   %rbp
    e925:	48 89 e5             	mov    %rsp,%rbp
    e928:	48 83 ec 10          	sub    $0x10,%rsp
    e92c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    e930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e934:	48 8b 00             	mov    (%rax),%rax
    e937:	48 89 c7             	mov    %rax,%rdi
    e93a:	e8 d1 49 ff ff       	call   3310 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    e93f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e943:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e94a:	c9                   	leave
    e94b:	c3                   	ret

000000000000e94c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e94c:	55                   	push   %rbp
    e94d:	48 89 e5             	mov    %rsp,%rbp
    e950:	48 83 ec 10          	sub    $0x10,%rsp
    e954:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    e958:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e95c:	48 8b 00             	mov    (%rax),%rax
    e95f:	48 89 c7             	mov    %rax,%rdi
    e962:	e8 39 48 ff ff       	call   31a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    e967:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e96b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e96e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e972:	c9                   	leave
    e973:	c3                   	ret

000000000000e974 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    e974:	55                   	push   %rbp
    e975:	48 89 e5             	mov    %rsp,%rbp
    e978:	48 83 ec 20          	sub    $0x20,%rsp
    e97c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    e980:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e984:	48 89 c7             	mov    %rax,%rdi
    e987:	e8 d2 03 00 00       	call   ed5e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e98c:	48 89 c2             	mov    %rax,%rdx
    e98f:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    e993:	48 89 d6             	mov    %rdx,%rsi
    e996:	48 89 c7             	mov    %rax,%rdi
    e999:	e8 de 03 00 00       	call   ed7c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    e99e:	c9                   	leave
    e99f:	c3                   	ret

000000000000e9a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e9a0:	55                   	push   %rbp
    e9a1:	48 89 e5             	mov    %rsp,%rbp
    e9a4:	41 54                	push   %r12
    e9a6:	53                   	push   %rbx
    e9a7:	48 83 ec 30          	sub    $0x30,%rsp
    e9ab:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e9af:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e9b3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e9b7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    e9bb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e9c0:	75 43                	jne    ea05 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    e9c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9c6:	48 89 c7             	mov    %rax,%rdi
    e9c9:	e8 82 fb ff ff       	call   e550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    e9ce:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    e9d2:	74 31                	je     ea05 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    e9d4:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e9d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e9dc:	48 89 c7             	mov    %rax,%rdi
    e9df:	e8 2a fd ff ff       	call   e70e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e9e4:	49 89 c4             	mov    %rax,%r12
    e9e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e9eb:	48 89 c7             	mov    %rax,%rdi
    e9ee:	e8 81 ff ff ff       	call   e974 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e9f3:	4c 89 e2             	mov    %r12,%rdx
    e9f6:	48 89 c6             	mov    %rax,%rsi
    e9f9:	48 89 df             	mov    %rbx,%rdi
    e9fc:	e8 5d e9 ff ff       	call   d35e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    ea01:	84 c0                	test   %al,%al
    ea03:	74 07                	je     ea0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    ea05:	b8 01 00 00 00       	mov    $0x1,%eax
    ea0a:	eb 05                	jmp    ea11 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    ea0c:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    ea11:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    ea14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea18:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    ea1c:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    ea20:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ea24:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    ea28:	89 c7                	mov    %eax,%edi
    ea2a:	e8 21 46 ff ff       	call   3050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    ea2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea33:	48 8b 40 28          	mov    0x28(%rax),%rax
    ea37:	48 8d 50 01          	lea    0x1(%rax),%rdx
    ea3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea3f:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    ea43:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ea47:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ea4b:	48 89 d6             	mov    %rdx,%rsi
    ea4e:	48 89 c7             	mov    %rax,%rdi
    ea51:	e8 d6 f7 ff ff       	call   e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    ea56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    ea5a:	48 83 c4 30          	add    $0x30,%rsp
    ea5e:	5b                   	pop    %rbx
    ea5f:	41 5c                	pop    %r12
    ea61:	5d                   	pop    %rbp
    ea62:	c3                   	ret
    ea63:	90                   	nop

000000000000ea64 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ea64:	55                   	push   %rbp
    ea65:	48 89 e5             	mov    %rsp,%rbp
    ea68:	48 83 ec 20          	sub    $0x20,%rsp
    ea6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ea78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea7c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ea83:	00 
    ea84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea88:	48 89 d6             	mov    %rdx,%rsi
    ea8b:	48 89 c7             	mov    %rax,%rdi
    ea8e:	e8 4d 48 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    ea93:	c9                   	leave
    ea94:	c3                   	ret

000000000000ea95 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    ea95:	55                   	push   %rbp
    ea96:	48 89 e5             	mov    %rsp,%rbp
    ea99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea9d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eaa1:	90                   	nop
    eaa2:	5d                   	pop    %rbp
    eaa3:	c3                   	ret

000000000000eaa4 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    eaa4:	55                   	push   %rbp
    eaa5:	48 89 e5             	mov    %rsp,%rbp
    eaa8:	48 83 ec 20          	sub    $0x20,%rsp
    eaac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eab0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eab4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    eab8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eabc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eac4:	48 89 ce             	mov    %rcx,%rsi
    eac7:	48 89 c7             	mov    %rax,%rdi
    eaca:	e8 bf 02 00 00       	call   ed8e <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    eacf:	c9                   	leave
    ead0:	c3                   	ret
    ead1:	90                   	nop

000000000000ead2 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    ead2:	55                   	push   %rbp
    ead3:	48 89 e5             	mov    %rsp,%rbp
    ead6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    eada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eade:	5d                   	pop    %rbp
    eadf:	c3                   	ret

000000000000eae0 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    eae0:	55                   	push   %rbp
    eae1:	48 89 e5             	mov    %rsp,%rbp
    eae4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    eae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaec:	5d                   	pop    %rbp
    eaed:	c3                   	ret

000000000000eaee <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    eaee:	55                   	push   %rbp
    eaef:	48 89 e5             	mov    %rsp,%rbp
    eaf2:	48 83 ec 30          	sub    $0x30,%rsp
    eaf6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eafa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eafe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    eb02:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    eb06:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eb0a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    eb0e:	48 c1 f8 03          	sar    $0x3,%rax
    eb12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    eb16:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    eb1b:	7e 1f                	jle    eb3c <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    eb1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb21:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    eb28:	00 
    eb29:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    eb2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb31:	48 89 ce             	mov    %rcx,%rsi
    eb34:	48 89 c7             	mov    %rax,%rdi
    eb37:	e8 c4 49 ff ff       	call   3500 <memmove@plt>
      return __result + __count;
    eb3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb40:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    eb47:	00 
    eb48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb4c:	48 01 d0             	add    %rdx,%rax
    }
    eb4f:	c9                   	leave
    eb50:	c3                   	ret
    eb51:	90                   	nop

000000000000eb52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    eb52:	55                   	push   %rbp
    eb53:	48 89 e5             	mov    %rsp,%rbp
    eb56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    eb5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb5e:	5d                   	pop    %rbp
    eb5f:	c3                   	ret

000000000000eb60 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    eb60:	55                   	push   %rbp
    eb61:	48 89 e5             	mov    %rsp,%rbp
    eb64:	48 83 ec 10          	sub    $0x10,%rsp
    eb68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    eb70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eb74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb78:	48 89 d6             	mov    %rdx,%rsi
    eb7b:	48 89 c7             	mov    %rax,%rdi
    eb7e:	e8 73 02 00 00       	call   edf6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    eb83:	90                   	nop
    eb84:	c9                   	leave
    eb85:	c3                   	ret

000000000000eb86 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    eb86:	55                   	push   %rbp
    eb87:	48 89 e5             	mov    %rsp,%rbp
    eb8a:	48 83 ec 20          	sub    $0x20,%rsp
    eb8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    eb9a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb9e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eba6:	48 89 ce             	mov    %rcx,%rsi
    eba9:	48 89 c7             	mov    %rax,%rdi
    ebac:	e8 65 02 00 00       	call   ee16 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    ebb1:	90                   	nop
    ebb2:	c9                   	leave
    ebb3:	c3                   	ret

000000000000ebb4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    ebb4:	55                   	push   %rbp
    ebb5:	48 89 e5             	mov    %rsp,%rbp
    ebb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    ebbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebc0:	5d                   	pop    %rbp
    ebc1:	c3                   	ret

000000000000ebc2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    ebc2:	55                   	push   %rbp
    ebc3:	48 89 e5             	mov    %rsp,%rbp
    ebc6:	48 83 ec 10          	sub    $0x10,%rsp
    ebca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ebce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    ebd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ebd6:	48 89 c7             	mov    %rax,%rdi
    ebd9:	e8 6e f0 ff ff       	call   dc4c <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    ebde:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ebe2:	48 89 02             	mov    %rax,(%rdx)
    ebe5:	90                   	nop
    ebe6:	c9                   	leave
    ebe7:	c3                   	ret

000000000000ebe8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    ebe8:	55                   	push   %rbp
    ebe9:	48 89 e5             	mov    %rsp,%rbp
    ebec:	48 83 ec 10          	sub    $0x10,%rsp
    ebf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    ebf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebf8:	48 89 c7             	mov    %rax,%rdi
    ebfb:	e8 52 ff ff ff       	call   eb52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    ec00:	be 01 00 00 00       	mov    $0x1,%esi
    ec05:	48 89 c7             	mov    %rax,%rdi
    ec08:	e8 43 02 00 00       	call   ee50 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    ec0d:	c9                   	leave
    ec0e:	c3                   	ret
    ec0f:	90                   	nop

000000000000ec10 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    ec10:	55                   	push   %rbp
    ec11:	48 89 e5             	mov    %rsp,%rbp
    ec14:	41 56                	push   %r14
    ec16:	41 55                	push   %r13
    ec18:	41 54                	push   %r12
    ec1a:	53                   	push   %rbx
    ec1b:	48 83 ec 30          	sub    $0x30,%rsp
    ec1f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ec23:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ec27:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    ec2b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    ec2f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    ec33:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ec37:	48 89 c6             	mov    %rax,%rsi
    ec3a:	bf 48 00 00 00       	mov    $0x48,%edi
    ec3f:	e8 08 62 ff ff       	call   4e4c <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    ec44:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec48:	48 89 c7             	mov    %rax,%rdi
    ec4b:	e8 59 f0 ff ff       	call   dca9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    ec50:	49 89 c6             	mov    %rax,%r14
    ec53:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ec57:	48 89 c7             	mov    %rax,%rdi
    ec5a:	e8 3c f0 ff ff       	call   dc9b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    ec5f:	49 89 c5             	mov    %rax,%r13
    ec62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec66:	48 89 c7             	mov    %rax,%rdi
    ec69:	e8 1f f0 ff ff       	call   dc8d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    ec6e:	49 89 c4             	mov    %rax,%r12
    ec71:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ec75:	48 89 c7             	mov    %rax,%rdi
    ec78:	e8 89 ef ff ff       	call   dc06 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    ec7d:	48 89 c3             	mov    %rax,%rbx
    ec80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec84:	48 89 c7             	mov    %rax,%rdi
    ec87:	e8 c6 fe ff ff       	call   eb52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    ec8c:	4d 89 f0             	mov    %r14,%r8
    ec8f:	4c 89 e9             	mov    %r13,%rcx
    ec92:	4c 89 e2             	mov    %r12,%rdx
    ec95:	48 89 de             	mov    %rbx,%rsi
    ec98:	48 89 c7             	mov    %rax,%rdi
    ec9b:	e8 da 01 00 00       	call   ee7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    eca0:	eb 33                	jmp    ecd5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    eca2:	48 89 c7             	mov    %rax,%rdi
    eca5:	e8 56 44 ff ff       	call   3100 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    ecaa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ecae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ecb2:	48 89 d6             	mov    %rdx,%rsi
    ecb5:	48 89 c7             	mov    %rax,%rdi
    ecb8:	e8 5d f8 ff ff       	call   e51a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    ecbd:	e8 ce 47 ff ff       	call   3490 <__cxa_rethrow@plt>
	  __catch(...)
    ecc2:	48 89 c3             	mov    %rax,%rbx
    ecc5:	e8 46 48 ff ff       	call   3510 <__cxa_end_catch@plt>
    ecca:	48 89 d8             	mov    %rbx,%rax
    eccd:	48 89 c7             	mov    %rax,%rdi
    ecd0:	e8 9b 48 ff ff       	call   3570 <_Unwind_Resume@plt>
	}
    ecd5:	48 83 c4 30          	add    $0x30,%rsp
    ecd9:	5b                   	pop    %rbx
    ecda:	41 5c                	pop    %r12
    ecdc:	41 5d                	pop    %r13
    ecde:	41 5e                	pop    %r14
    ece0:	5d                   	pop    %rbp
    ece1:	c3                   	ret

000000000000ece2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ece2:	55                   	push   %rbp
    ece3:	48 89 e5             	mov    %rsp,%rbp
    ece6:	48 83 ec 20          	sub    $0x20,%rsp
    ecea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    ecee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecf2:	48 8b 50 18          	mov    0x18(%rax),%rdx
    ecf6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ecfa:	48 89 d6             	mov    %rdx,%rsi
    ecfd:	48 89 c7             	mov    %rax,%rdi
    ed00:	e8 27 f5 ff ff       	call   e22c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    ed05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed09:	c9                   	leave
    ed0a:	c3                   	ret
    ed0b:	90                   	nop

000000000000ed0c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    ed0c:	55                   	push   %rbp
    ed0d:	48 89 e5             	mov    %rsp,%rbp
    ed10:	48 83 ec 20          	sub    $0x20,%rsp
    ed14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ed1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    ed20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed24:	48 89 c7             	mov    %rax,%rdi
    ed27:	e8 ba 01 00 00       	call   eee6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    ed2c:	48 8b 10             	mov    (%rax),%rdx
    ed2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed33:	48 89 10             	mov    %rdx,(%rax)
    ed36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed3a:	48 89 c7             	mov    %rax,%rdi
    ed3d:	e8 0e 00 00 00       	call   ed50 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    ed42:	48 8b 10             	mov    (%rax),%rdx
    ed45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed49:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ed4d:	90                   	nop
    ed4e:	c9                   	leave
    ed4f:	c3                   	ret

000000000000ed50 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ed50:	55                   	push   %rbp
    ed51:	48 89 e5             	mov    %rsp,%rbp
    ed54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ed58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed5c:	5d                   	pop    %rbp
    ed5d:	c3                   	ret

000000000000ed5e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    ed5e:	55                   	push   %rbp
    ed5f:	48 89 e5             	mov    %rsp,%rbp
    ed62:	48 83 ec 10          	sub    $0x10,%rsp
    ed66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    ed6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed6e:	48 83 c0 20          	add    $0x20,%rax
    ed72:	48 89 c7             	mov    %rax,%rdi
    ed75:	e8 7a 01 00 00       	call   eef4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    ed7a:	c9                   	leave
    ed7b:	c3                   	ret

000000000000ed7c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    ed7c:	55                   	push   %rbp
    ed7d:	48 89 e5             	mov    %rsp,%rbp
    ed80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    ed88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed8c:	5d                   	pop    %rbp
    ed8d:	c3                   	ret

000000000000ed8e <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    ed8e:	55                   	push   %rbp
    ed8f:	48 89 e5             	mov    %rsp,%rbp
    ed92:	53                   	push   %rbx
    ed93:	48 83 ec 28          	sub    $0x28,%rsp
    ed97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ed9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ed9f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    eda3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eda7:	48 89 c7             	mov    %rax,%rdi
    edaa:	e8 5f 01 00 00       	call   ef0e <_ZSt12__miter_baseIPKPKcET_S4_>
    edaf:	48 89 c3             	mov    %rax,%rbx
    edb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    edb6:	48 89 c7             	mov    %rax,%rdi
    edb9:	e8 50 01 00 00       	call   ef0e <_ZSt12__miter_baseIPKPKcET_S4_>
    edbe:	48 89 c1             	mov    %rax,%rcx
    edc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edc5:	48 89 c2             	mov    %rax,%rdx
    edc8:	48 89 de             	mov    %rbx,%rsi
    edcb:	48 89 cf             	mov    %rcx,%rdi
    edce:	e8 49 01 00 00       	call   ef1c <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    edd3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    edd7:	c9                   	leave
    edd8:	c3                   	ret
    edd9:	90                   	nop

000000000000edda <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    edda:	55                   	push   %rbp
    eddb:	48 89 e5             	mov    %rsp,%rbp
    edde:	48 83 ec 10          	sub    $0x10,%rsp
    ede2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ede6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edea:	48 89 c7             	mov    %rax,%rdi
    eded:	e8 8e 43 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    edf2:	90                   	nop
    edf3:	c9                   	leave
    edf4:	c3                   	ret
    edf5:	90                   	nop

000000000000edf6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    edf6:	55                   	push   %rbp
    edf7:	48 89 e5             	mov    %rsp,%rbp
    edfa:	48 83 ec 10          	sub    $0x10,%rsp
    edfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    ee06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee0a:	48 89 c7             	mov    %rax,%rdi
    ee0d:	e8 c8 ff ff ff       	call   edda <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    ee12:	90                   	nop
    ee13:	c9                   	leave
    ee14:	c3                   	ret
    ee15:	90                   	nop

000000000000ee16 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ee16:	55                   	push   %rbp
    ee17:	48 89 e5             	mov    %rsp,%rbp
    ee1a:	48 83 ec 20          	sub    $0x20,%rsp
    ee1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ee2a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee2e:	48 89 d0             	mov    %rdx,%rax
    ee31:	48 c1 e0 03          	shl    $0x3,%rax
    ee35:	48 01 d0             	add    %rdx,%rax
    ee38:	48 c1 e0 03          	shl    $0x3,%rax
    ee3c:	48 89 c2             	mov    %rax,%rdx
    ee3f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee43:	48 89 d6             	mov    %rdx,%rsi
    ee46:	48 89 c7             	mov    %rax,%rdi
    ee49:	e8 92 44 ff ff       	call   32e0 <_ZdlPvm@plt>
      }
    ee4e:	c9                   	leave
    ee4f:	c3                   	ret

000000000000ee50 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    ee50:	55                   	push   %rbp
    ee51:	48 89 e5             	mov    %rsp,%rbp
    ee54:	48 83 ec 10          	sub    $0x10,%rsp
    ee58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ee60:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ee64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee68:	ba 00 00 00 00       	mov    $0x0,%edx
    ee6d:	48 89 ce             	mov    %rcx,%rsi
    ee70:	48 89 c7             	mov    %rax,%rdi
    ee73:	e8 0e 01 00 00       	call   ef86 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    ee78:	c9                   	leave
    ee79:	c3                   	ret

000000000000ee7a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    ee7a:	55                   	push   %rbp
    ee7b:	48 89 e5             	mov    %rsp,%rbp
    ee7e:	41 54                	push   %r12
    ee80:	53                   	push   %rbx
    ee81:	48 83 ec 30          	sub    $0x30,%rsp
    ee85:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ee89:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ee8d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    ee91:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    ee95:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    ee99:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee9d:	48 89 c7             	mov    %rax,%rdi
    eea0:	e8 04 ee ff ff       	call   dca9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    eea5:	49 89 c4             	mov    %rax,%r12
    eea8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eeac:	48 89 c7             	mov    %rax,%rdi
    eeaf:	e8 e7 ed ff ff       	call   dc9b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    eeb4:	48 89 c3             	mov    %rax,%rbx
    eeb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eebb:	48 89 c7             	mov    %rax,%rdi
    eebe:	e8 ca ed ff ff       	call   dc8d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    eec3:	48 89 c2             	mov    %rax,%rdx
    eec6:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    eeca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eece:	4d 89 e0             	mov    %r12,%r8
    eed1:	48 89 d9             	mov    %rbx,%rcx
    eed4:	48 89 c7             	mov    %rax,%rdi
    eed7:	e8 3c 01 00 00       	call   f018 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    eedc:	90                   	nop
    eedd:	48 83 c4 30          	add    $0x30,%rsp
    eee1:	5b                   	pop    %rbx
    eee2:	41 5c                	pop    %r12
    eee4:	5d                   	pop    %rbp
    eee5:	c3                   	ret

000000000000eee6 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    eee6:	55                   	push   %rbp
    eee7:	48 89 e5             	mov    %rsp,%rbp
    eeea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    eeee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eef2:	5d                   	pop    %rbp
    eef3:	c3                   	ret

000000000000eef4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    eef4:	55                   	push   %rbp
    eef5:	48 89 e5             	mov    %rsp,%rbp
    eef8:	48 83 ec 10          	sub    $0x10,%rsp
    eefc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    ef00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef04:	48 89 c7             	mov    %rax,%rdi
    ef07:	e8 bc 01 00 00       	call   f0c8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    ef0c:	c9                   	leave
    ef0d:	c3                   	ret

000000000000ef0e <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    ef0e:	55                   	push   %rbp
    ef0f:	48 89 e5             	mov    %rsp,%rbp
    ef12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    ef16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef1a:	5d                   	pop    %rbp
    ef1b:	c3                   	ret

000000000000ef1c <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    ef1c:	55                   	push   %rbp
    ef1d:	48 89 e5             	mov    %rsp,%rbp
    ef20:	41 54                	push   %r12
    ef22:	53                   	push   %rbx
    ef23:	48 83 ec 20          	sub    $0x20,%rsp
    ef27:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ef2b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ef2f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    ef33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef37:	48 89 c7             	mov    %rax,%rdi
    ef3a:	e8 a1 fb ff ff       	call   eae0 <_ZSt12__niter_baseIPPKcET_S3_>
    ef3f:	49 89 c4             	mov    %rax,%r12
    ef42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ef46:	48 89 c7             	mov    %rax,%rdi
    ef49:	e8 88 01 00 00       	call   f0d6 <_ZSt12__niter_baseIPKPKcET_S4_>
    ef4e:	48 89 c3             	mov    %rax,%rbx
    ef51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef55:	48 89 c7             	mov    %rax,%rdi
    ef58:	e8 79 01 00 00       	call   f0d6 <_ZSt12__niter_baseIPKPKcET_S4_>
    ef5d:	4c 89 e2             	mov    %r12,%rdx
    ef60:	48 89 de             	mov    %rbx,%rsi
    ef63:	48 89 c7             	mov    %rax,%rdi
    ef66:	e8 79 01 00 00       	call   f0e4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    ef6b:	48 89 c2             	mov    %rax,%rdx
    ef6e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ef72:	48 89 d6             	mov    %rdx,%rsi
    ef75:	48 89 c7             	mov    %rax,%rdi
    ef78:	e8 94 01 00 00       	call   f111 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    ef7d:	48 83 c4 20          	add    $0x20,%rsp
    ef81:	5b                   	pop    %rbx
    ef82:	41 5c                	pop    %r12
    ef84:	5d                   	pop    %rbp
    ef85:	c3                   	ret

000000000000ef86 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ef86:	55                   	push   %rbp
    ef87:	48 89 e5             	mov    %rsp,%rbp
    ef8a:	48 83 ec 20          	sub    $0x20,%rsp
    ef8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ef9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef9e:	48 89 c7             	mov    %rax,%rdi
    efa1:	e8 7e 01 00 00       	call   f124 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    efa6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    efaa:	0f 92 c0             	setb   %al
    efad:	0f b6 c0             	movzbl %al,%eax
    efb0:	48 85 c0             	test   %rax,%rax
    efb3:	0f 95 c0             	setne  %al
    efb6:	84 c0                	test   %al,%al
    efb8:	74 1a                	je     efd4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    efba:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    efc1:	38 8e 03 
    efc4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    efc8:	73 05                	jae    efcf <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    efca:	e8 31 42 ff ff       	call   3200 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    efcf:	e8 ec 40 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    efd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    efd8:	48 89 d0             	mov    %rdx,%rax
    efdb:	48 c1 e0 03          	shl    $0x3,%rax
    efdf:	48 01 d0             	add    %rdx,%rax
    efe2:	48 c1 e0 03          	shl    $0x3,%rax
    efe6:	48 89 c7             	mov    %rax,%rdi
    efe9:	e8 e2 42 ff ff       	call   32d0 <_Znwm@plt>
    efee:	90                   	nop
      }
    efef:	c9                   	leave
    eff0:	c3                   	ret
    eff1:	90                   	nop

000000000000eff2 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    eff2:	55                   	push   %rbp
    eff3:	48 89 e5             	mov    %rsp,%rbp
    eff6:	48 83 ec 10          	sub    $0x10,%rsp
    effa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    effe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f006:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f00a:	48 89 d6             	mov    %rdx,%rsi
    f00d:	48 89 c7             	mov    %rax,%rdi
    f010:	e8 23 01 00 00       	call   f138 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    f015:	90                   	nop
    f016:	c9                   	leave
    f017:	c3                   	ret

000000000000f018 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    f018:	55                   	push   %rbp
    f019:	48 89 e5             	mov    %rsp,%rbp
    f01c:	41 56                	push   %r14
    f01e:	41 55                	push   %r13
    f020:	41 54                	push   %r12
    f022:	53                   	push   %rbx
    f023:	48 83 ec 40          	sub    $0x40,%rsp
    f027:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f02b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    f02f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    f033:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    f037:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    f03b:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    f03f:	48 89 de             	mov    %rbx,%rsi
    f042:	bf 28 00 00 00       	mov    $0x28,%edi
    f047:	e8 00 5e ff ff       	call   4e4c <_ZnwmPv>
    f04c:	49 89 c4             	mov    %rax,%r12
    f04f:	41 be 01 00 00 00    	mov    $0x1,%r14d
    f055:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f059:	48 89 c7             	mov    %rax,%rdi
    f05c:	e8 48 ec ff ff       	call   dca9 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    f061:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f065:	48 89 c7             	mov    %rax,%rdi
    f068:	e8 2e ec ff ff       	call   dc9b <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    f06d:	48 89 c2             	mov    %rax,%rdx
    f070:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f074:	48 89 d6             	mov    %rdx,%rsi
    f077:	48 89 c7             	mov    %rax,%rdi
    f07a:	e8 73 ff ff ff       	call   eff2 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    f07f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f083:	48 89 c7             	mov    %rax,%rdi
    f086:	e8 02 ec ff ff       	call   dc8d <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    f08b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f08f:	48 89 c6             	mov    %rax,%rsi
    f092:	4c 89 e7             	mov    %r12,%rdi
    f095:	e8 bc 00 00 00       	call   f156 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    f09a:	eb 1e                	jmp    f0ba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    f09c:	49 89 c5             	mov    %rax,%r13
    f09f:	45 84 f6             	test   %r14b,%r14b
    f0a2:	74 0b                	je     f0af <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    f0a4:	48 89 de             	mov    %rbx,%rsi
    f0a7:	4c 89 e7             	mov    %r12,%rdi
    f0aa:	e8 18 cb ff ff       	call   bbc7 <_ZdlPvS_>
    f0af:	4c 89 e8             	mov    %r13,%rax
    f0b2:	48 89 c7             	mov    %rax,%rdi
    f0b5:	e8 b6 44 ff ff       	call   3570 <_Unwind_Resume@plt>
    f0ba:	48 83 c4 40          	add    $0x40,%rsp
    f0be:	5b                   	pop    %rbx
    f0bf:	41 5c                	pop    %r12
    f0c1:	41 5d                	pop    %r13
    f0c3:	41 5e                	pop    %r14
    f0c5:	5d                   	pop    %rbp
    f0c6:	c3                   	ret
    f0c7:	90                   	nop

000000000000f0c8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    f0c8:	55                   	push   %rbp
    f0c9:	48 89 e5             	mov    %rsp,%rbp
    f0cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    f0d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0d4:	5d                   	pop    %rbp
    f0d5:	c3                   	ret

000000000000f0d6 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    f0d6:	55                   	push   %rbp
    f0d7:	48 89 e5             	mov    %rsp,%rbp
    f0da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f0de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0e2:	5d                   	pop    %rbp
    f0e3:	c3                   	ret

000000000000f0e4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    f0e4:	55                   	push   %rbp
    f0e5:	48 89 e5             	mov    %rsp,%rbp
    f0e8:	48 83 ec 20          	sub    $0x20,%rsp
    f0ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f0f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    f0f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f0fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f104:	48 89 ce             	mov    %rcx,%rsi
    f107:	48 89 c7             	mov    %rax,%rdi
    f10a:	e8 71 00 00 00       	call   f180 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    f10f:	c9                   	leave
    f110:	c3                   	ret

000000000000f111 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    f111:	55                   	push   %rbp
    f112:	48 89 e5             	mov    %rsp,%rbp
    f115:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f119:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    f11d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f121:	5d                   	pop    %rbp
    f122:	c3                   	ret
    f123:	90                   	nop

000000000000f124 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f124:	55                   	push   %rbp
    f125:	48 89 e5             	mov    %rsp,%rbp
    f128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f12c:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    f133:	1c c7 01 
      }
    f136:	5d                   	pop    %rbp
    f137:	c3                   	ret

000000000000f138 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    f138:	55                   	push   %rbp
    f139:	48 89 e5             	mov    %rsp,%rbp
    f13c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f140:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    f144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f148:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f14c:	48 8b 12             	mov    (%rdx),%rdx
    f14f:	48 89 10             	mov    %rdx,(%rax)
      { }
    f152:	90                   	nop
    f153:	5d                   	pop    %rbp
    f154:	c3                   	ret
    f155:	90                   	nop

000000000000f156 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    f156:	55                   	push   %rbp
    f157:	48 89 e5             	mov    %rsp,%rbp
    f15a:	48 83 ec 20          	sub    $0x20,%rsp
    f15e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f162:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    f166:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    f16a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f16e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f172:	48 89 ce             	mov    %rcx,%rsi
    f175:	48 89 c7             	mov    %rax,%rdi
    f178:	e8 31 00 00 00       	call   f1ae <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    f17d:	90                   	nop
    f17e:	c9                   	leave
    f17f:	c3                   	ret

000000000000f180 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    f180:	55                   	push   %rbp
    f181:	48 89 e5             	mov    %rsp,%rbp
    f184:	48 83 ec 20          	sub    $0x20,%rsp
    f188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f18c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f190:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    f194:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f198:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f19c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1a0:	48 89 ce             	mov    %rcx,%rsi
    f1a3:	48 89 c7             	mov    %rax,%rdi
    f1a6:	e8 4d 00 00 00       	call   f1f8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    f1ab:	c9                   	leave
    f1ac:	c3                   	ret
    f1ad:	90                   	nop

000000000000f1ae <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    f1ae:	55                   	push   %rbp
    f1af:	48 89 e5             	mov    %rsp,%rbp
    f1b2:	53                   	push   %rbx
    f1b3:	48 83 ec 28          	sub    $0x28,%rsp
    f1b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f1bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f1bf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    f1c3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f1c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f1cb:	48 89 c7             	mov    %rax,%rdi
    f1ce:	e8 84 00 00 00       	call   f257 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    f1d3:	48 89 c7             	mov    %rax,%rdi
    f1d6:	e8 96 00 00 00       	call   f271 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    f1db:	48 89 c6             	mov    %rax,%rsi
    f1de:	48 89 df             	mov    %rbx,%rdi
    f1e1:	e8 8a 3f ff ff       	call   3170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    f1e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f1ea:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    f1f1:	90                   	nop
    f1f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f1f6:	c9                   	leave
    f1f7:	c3                   	ret

000000000000f1f8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    f1f8:	55                   	push   %rbp
    f1f9:	48 89 e5             	mov    %rsp,%rbp
    f1fc:	48 83 ec 30          	sub    $0x30,%rsp
    f200:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f204:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f208:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    f20c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f210:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f214:	48 c1 f8 03          	sar    $0x3,%rax
    f218:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    f21c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f221:	74 1f                	je     f242 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    f223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f227:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f22e:	00 
    f22f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f233:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f237:	48 89 ce             	mov    %rcx,%rsi
    f23a:	48 89 c7             	mov    %rax,%rdi
    f23d:	e8 be 42 ff ff       	call   3500 <memmove@plt>
	  return __result + _Num;
    f242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f246:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f24d:	00 
    f24e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f252:	48 01 d0             	add    %rdx,%rax
	}
    f255:	c9                   	leave
    f256:	c3                   	ret

000000000000f257 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    f257:	55                   	push   %rbp
    f258:	48 89 e5             	mov    %rsp,%rbp
    f25b:	48 83 ec 10          	sub    $0x10,%rsp
    f25f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    f263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f267:	48 89 c7             	mov    %rax,%rdi
    f26a:	e8 10 00 00 00       	call   f27f <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    f26f:	c9                   	leave
    f270:	c3                   	ret

000000000000f271 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f271:	55                   	push   %rbp
    f272:	48 89 e5             	mov    %rsp,%rbp
    f275:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f279:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f27d:	5d                   	pop    %rbp
    f27e:	c3                   	ret

000000000000f27f <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    f27f:	55                   	push   %rbp
    f280:	48 89 e5             	mov    %rsp,%rbp
    f283:	48 83 ec 10          	sub    $0x10,%rsp
    f287:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    f28b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f28f:	48 89 c7             	mov    %rax,%rdi
    f292:	e8 02 00 00 00       	call   f299 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    f297:	c9                   	leave
    f298:	c3                   	ret

000000000000f299 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    f299:	55                   	push   %rbp
    f29a:	48 89 e5             	mov    %rsp,%rbp
    f29d:	48 83 ec 10          	sub    $0x10,%rsp
    f2a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2a9:	48 89 c7             	mov    %rax,%rdi
    f2ac:	e8 02 00 00 00       	call   f2b3 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    f2b1:	c9                   	leave
    f2b2:	c3                   	ret

000000000000f2b3 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    f2b3:	55                   	push   %rbp
    f2b4:	48 89 e5             	mov    %rsp,%rbp
    f2b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2bf:	48 8b 00             	mov    (%rax),%rax
    f2c2:	5d                   	pop    %rbp
    f2c3:	c3                   	ret

000000000000f2c4 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
    f2c4:	55                   	push   %rbp
    f2c5:	48 89 e5             	mov    %rsp,%rbp
    f2c8:	48 83 ec 10          	sub    $0x10,%rsp
    f2cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2d0:	48 8d 15 e9 c9 00 00 	lea    0xc9e9(%rip),%rdx        # 1bcc0 <_ZTVSt19bad_optional_access+0x10>
    f2d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2db:	48 89 10             	mov    %rdx,(%rax)
    f2de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2e2:	48 89 c7             	mov    %rax,%rdi
    f2e5:	e8 b6 42 ff ff       	call   35a0 <_ZNSt9exceptionD2Ev@plt>
    f2ea:	90                   	nop
    f2eb:	c9                   	leave
    f2ec:	c3                   	ret
    f2ed:	90                   	nop

000000000000f2ee <_ZNSt19bad_optional_accessD0Ev>:
    f2ee:	55                   	push   %rbp
    f2ef:	48 89 e5             	mov    %rsp,%rbp
    f2f2:	48 83 ec 10          	sub    $0x10,%rsp
    f2f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2fe:	48 89 c7             	mov    %rax,%rdi
    f301:	e8 be ff ff ff       	call   f2c4 <_ZNSt19bad_optional_accessD1Ev>
    f306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f30a:	be 08 00 00 00       	mov    $0x8,%esi
    f30f:	48 89 c7             	mov    %rax,%rdi
    f312:	e8 c9 3f ff ff       	call   32e0 <_ZdlPvm@plt>
    f317:	c9                   	leave
    f318:	c3                   	ret

Disassembly of section .fini:

000000000000f31c <_fini>:
    f31c:	48 83 ec 08          	sub    $0x8,%rsp
    f320:	48 83 c4 08          	add    $0x8,%rsp
    f324:	c3                   	ret
