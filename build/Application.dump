
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad cf 01 00 	mov    0x1cfad(%rip),%rax        # 1ffb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca cf 01 00    	push   0x1cfca(%rip)        # 1fff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc cf 01 00    	jmp    *0x1cfcc(%rip)        # 1fff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca cf 01 00    	jmp    *0x1cfca(%rip)        # 20000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    3040:	ff 25 c2 cf 01 00    	jmp    *0x1cfc2(%rip)        # 20008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3050:	ff 25 ba cf 01 00    	jmp    *0x1cfba(%rip)        # 20010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZNSaIcED2Ev@plt>:
    3060:	ff 25 b2 cf 01 00    	jmp    *0x1cfb2(%rip)        # 20018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    3070:	ff 25 aa cf 01 00    	jmp    *0x1cfaa(%rip)        # 20020 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <_ZNSolsEm@plt>:
    3080:	ff 25 a2 cf 01 00    	jmp    *0x1cfa2(%rip)        # 20028 <_ZNSolsEm@GLIBCXX_3.4>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <vkDeviceWaitIdle@plt>:
    3090:	ff 25 9a cf 01 00    	jmp    *0x1cf9a(%rip)        # 20030 <vkDeviceWaitIdle@Base>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <vkDestroySwapchainKHR@plt>:
    30a0:	ff 25 92 cf 01 00    	jmp    *0x1cf92(%rip)        # 20038 <vkDestroySwapchainKHR@Base>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <glfwDestroyWindow@plt>:
    30b0:	ff 25 8a cf 01 00    	jmp    *0x1cf8a(%rip)        # 20040 <glfwDestroyWindow@Base>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <_ZSt17__throw_bad_allocv@plt>:
    30c0:	ff 25 82 cf 01 00    	jmp    *0x1cf82(%rip)        # 20048 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    30d0:	ff 25 7a cf 01 00    	jmp    *0x1cf7a(%rip)        # 20050 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30e0:	ff 25 72 cf 01 00    	jmp    *0x1cf72(%rip)        # 20058 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <vkGetPhysicalDeviceProperties@plt>:
    30f0:	ff 25 6a cf 01 00    	jmp    *0x1cf6a(%rip)        # 20060 <vkGetPhysicalDeviceProperties@Base>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <__cxa_begin_catch@plt>:
    3100:	ff 25 62 cf 01 00    	jmp    *0x1cf62(%rip)        # 20068 <__cxa_begin_catch@CXXABI_1.3>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <vkCreateCommandPool@plt>:
    3110:	ff 25 5a cf 01 00    	jmp    *0x1cf5a(%rip)        # 20070 <vkCreateCommandPool@Base>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <strlen@plt>:
    3120:	ff 25 52 cf 01 00    	jmp    *0x1cf52(%rip)        # 20078 <strlen@GLIBC_2.2.5>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <memcmp@plt>:
    3130:	ff 25 4a cf 01 00    	jmp    *0x1cf4a(%rip)        # 20080 <memcmp@GLIBC_2.2.5>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <__cxa_allocate_exception@plt>:
    3140:	ff 25 42 cf 01 00    	jmp    *0x1cf42(%rip)        # 20088 <__cxa_allocate_exception@CXXABI_1.3>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZSt20__throw_length_errorPKc@plt>:
    3150:	ff 25 3a cf 01 00    	jmp    *0x1cf3a(%rip)        # 20090 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <vkEnumeratePhysicalDevices@plt>:
    3160:	ff 25 32 cf 01 00    	jmp    *0x1cf32(%rip)        # 20098 <vkEnumeratePhysicalDevices@Base>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <_ZNSaIcEC1ERKS_@plt>:
    3170:	ff 25 2a cf 01 00    	jmp    *0x1cf2a(%rip)        # 200a0 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <vkGetSwapchainImagesKHR@plt>:
    3180:	ff 25 22 cf 01 00    	jmp    *0x1cf22(%rip)        # 200a8 <vkGetSwapchainImagesKHR@Base>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3190:	ff 25 1a cf 01 00    	jmp    *0x1cf1a(%rip)        # 200b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    31a0:	ff 25 12 cf 01 00    	jmp    *0x1cf12(%rip)        # 200b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    31b0:	ff 25 0a cf 01 00    	jmp    *0x1cf0a(%rip)        # 200c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    31c0:	ff 25 02 cf 01 00    	jmp    *0x1cf02(%rip)        # 200c8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    31d0:	ff 25 fa ce 01 00    	jmp    *0x1cefa(%rip)        # 200d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <_ZSt19__throw_logic_errorPKc@plt>:
    31e0:	ff 25 f2 ce 01 00    	jmp    *0x1cef2(%rip)        # 200d8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <__cxa_free_exception@plt>:
    31f0:	ff 25 ea ce 01 00    	jmp    *0x1ceea(%rip)        # 200e0 <__cxa_free_exception@CXXABI_1.3>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    3200:	ff 25 e2 ce 01 00    	jmp    *0x1cee2(%rip)        # 200e8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <glfwGetRequiredInstanceExtensions@plt>:
    3210:	ff 25 da ce 01 00    	jmp    *0x1ceda(%rip)        # 200f0 <glfwGetRequiredInstanceExtensions@Base>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3220:	ff 25 d2 ce 01 00    	jmp    *0x1ced2(%rip)        # 200f8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    3230:	ff 25 ca ce 01 00    	jmp    *0x1ceca(%rip)        # 20100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <vkDestroyDevice@plt>:
    3240:	ff 25 c2 ce 01 00    	jmp    *0x1cec2(%rip)        # 20108 <vkDestroyDevice@Base>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <vkEnumerateInstanceExtensionProperties@plt>:
    3250:	ff 25 ba ce 01 00    	jmp    *0x1ceba(%rip)        # 20110 <vkEnumerateInstanceExtensionProperties@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    3260:	ff 25 b2 ce 01 00    	jmp    *0x1ceb2(%rip)        # 20118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <glfwWindowHint@plt>:
    3270:	ff 25 aa ce 01 00    	jmp    *0x1ceaa(%rip)        # 20120 <glfwWindowHint@Base>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    3280:	ff 25 a2 ce 01 00    	jmp    *0x1cea2(%rip)        # 20128 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <__cxa_atexit@plt>:
    3290:	ff 25 9a ce 01 00    	jmp    *0x1ce9a(%rip)        # 20130 <__cxa_atexit@GLIBC_2.2.5>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    32a0:	ff 25 92 ce 01 00    	jmp    *0x1ce92(%rip)        # 20138 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <vkAllocateCommandBuffers@plt>:
    32b0:	ff 25 8a ce 01 00    	jmp    *0x1ce8a(%rip)        # 20140 <vkAllocateCommandBuffers@Base>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <vkGetPhysicalDeviceProperties2@plt>:
    32c0:	ff 25 82 ce 01 00    	jmp    *0x1ce82(%rip)        # 20148 <vkGetPhysicalDeviceProperties2@Base>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <vkGetInstanceProcAddr@plt>:
    32d0:	ff 25 7a ce 01 00    	jmp    *0x1ce7a(%rip)        # 20150 <vkGetInstanceProcAddr@Base>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <glfwPollEvents@plt>:
    32e0:	ff 25 72 ce 01 00    	jmp    *0x1ce72(%rip)        # 20158 <glfwPollEvents@Base>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    32f0:	ff 25 6a ce 01 00    	jmp    *0x1ce6a(%rip)        # 20160 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_Znwm@plt>:
    3300:	ff 25 62 ce 01 00    	jmp    *0x1ce62(%rip)        # 20168 <_Znwm@GLIBCXX_3.4>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <_ZdlPvm@plt>:
    3310:	ff 25 5a ce 01 00    	jmp    *0x1ce5a(%rip)        # 20170 <_ZdlPvm@CXXABI_1.3.9>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <vkDestroyInstance@plt>:
    3320:	ff 25 52 ce 01 00    	jmp    *0x1ce52(%rip)        # 20178 <vkDestroyInstance@Base>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <glfwTerminate@plt>:
    3330:	ff 25 4a ce 01 00    	jmp    *0x1ce4a(%rip)        # 20180 <glfwTerminate@Base>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <vkCreateImageView@plt>:
    3340:	ff 25 42 ce 01 00    	jmp    *0x1ce42(%rip)        # 20188 <vkCreateImageView@Base>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3350:	ff 25 3a ce 01 00    	jmp    *0x1ce3a(%rip)        # 20190 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSolsEPFRSoS_E@plt>:
    3360:	ff 25 32 ce 01 00    	jmp    *0x1ce32(%rip)        # 20198 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3370:	ff 25 2a ce 01 00    	jmp    *0x1ce2a(%rip)        # 201a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3380:	ff 25 22 ce 01 00    	jmp    *0x1ce22(%rip)        # 201a8 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    3390:	ff 25 1a ce 01 00    	jmp    *0x1ce1a(%rip)        # 201b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <_ZNSaIcED1Ev@plt>:
    33a0:	ff 25 12 ce 01 00    	jmp    *0x1ce12(%rip)        # 201b8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <vkDestroyPipeline@plt>:
    33b0:	ff 25 0a ce 01 00    	jmp    *0x1ce0a(%rip)        # 201c0 <vkDestroyPipeline@Base>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    33c0:	ff 25 02 ce 01 00    	jmp    *0x1ce02(%rip)        # 201c8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    33d0:	ff 25 fa cd 01 00    	jmp    *0x1cdfa(%rip)        # 201d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <vkEnumerateInstanceLayerProperties@plt>:
    33e0:	ff 25 f2 cd 01 00    	jmp    *0x1cdf2(%rip)        # 201d8 <vkEnumerateInstanceLayerProperties@Base>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <glfwInit@plt>:
    33f0:	ff 25 ea cd 01 00    	jmp    *0x1cdea(%rip)        # 201e0 <glfwInit@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3400:	ff 25 e2 cd 01 00    	jmp    *0x1cde2(%rip)        # 201e8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <vkCreateSwapchainKHR@plt>:
    3410:	ff 25 da cd 01 00    	jmp    *0x1cdda(%rip)        # 201f0 <vkCreateSwapchainKHR@Base>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    3420:	ff 25 d2 cd 01 00    	jmp    *0x1cdd2(%rip)        # 201f8 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <vkCreateInstance@plt>:
    3430:	ff 25 ca cd 01 00    	jmp    *0x1cdca(%rip)        # 20200 <vkCreateInstance@Base>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    3440:	ff 25 c2 cd 01 00    	jmp    *0x1cdc2(%rip)        # 20208 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    3450:	ff 25 ba cd 01 00    	jmp    *0x1cdba(%rip)        # 20210 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    3460:	ff 25 b2 cd 01 00    	jmp    *0x1cdb2(%rip)        # 20218 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    3470:	ff 25 aa cd 01 00    	jmp    *0x1cdaa(%rip)        # 20220 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <vkGetDeviceQueue@plt>:
    3480:	ff 25 a2 cd 01 00    	jmp    *0x1cda2(%rip)        # 20228 <vkGetDeviceQueue@Base>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <_ZNSolsEj@plt>:
    3490:	ff 25 9a cd 01 00    	jmp    *0x1cd9a(%rip)        # 20230 <_ZNSolsEj@GLIBCXX_3.4>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    34a0:	ff 25 92 cd 01 00    	jmp    *0x1cd92(%rip)        # 20238 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    34b0:	ff 25 8a cd 01 00    	jmp    *0x1cd8a(%rip)        # 20240 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <vkEnumerateDeviceExtensionProperties@plt>:
    34c0:	ff 25 82 cd 01 00    	jmp    *0x1cd82(%rip)        # 20248 <vkEnumerateDeviceExtensionProperties@Base>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    34d0:	ff 25 7a cd 01 00    	jmp    *0x1cd7a(%rip)        # 20250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <vkDestroyCommandPool@plt>:
    34e0:	ff 25 72 cd 01 00    	jmp    *0x1cd72(%rip)        # 20258 <vkDestroyCommandPool@Base>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <__cxa_rethrow@plt>:
    34f0:	ff 25 6a cd 01 00    	jmp    *0x1cd6a(%rip)        # 20260 <__cxa_rethrow@CXXABI_1.3>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <vkCreateDevice@plt>:
    3500:	ff 25 62 cd 01 00    	jmp    *0x1cd62(%rip)        # 20268 <vkCreateDevice@Base>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <_ZNSt8ios_base4InitC1Ev@plt>:
    3510:	ff 25 5a cd 01 00    	jmp    *0x1cd5a(%rip)        # 20270 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <glfwCreateWindowSurface@plt>:
    3520:	ff 25 52 cd 01 00    	jmp    *0x1cd52(%rip)        # 20278 <glfwCreateWindowSurface@Base>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003530 <glfwCreateWindow@plt>:
    3530:	ff 25 4a cd 01 00    	jmp    *0x1cd4a(%rip)        # 20280 <glfwCreateWindow@Base>
    3536:	68 50 00 00 00       	push   $0x50
    353b:	e9 e0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    3540:	ff 25 42 cd 01 00    	jmp    *0x1cd42(%rip)        # 20288 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    3546:	68 51 00 00 00       	push   $0x51
    354b:	e9 d0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003550 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    3550:	ff 25 3a cd 01 00    	jmp    *0x1cd3a(%rip)        # 20290 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    3556:	68 52 00 00 00       	push   $0x52
    355b:	e9 c0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003560 <memmove@plt>:
    3560:	ff 25 32 cd 01 00    	jmp    *0x1cd32(%rip)        # 20298 <memmove@GLIBC_2.2.5>
    3566:	68 53 00 00 00       	push   $0x53
    356b:	e9 b0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003570 <__cxa_end_catch@plt>:
    3570:	ff 25 2a cd 01 00    	jmp    *0x1cd2a(%rip)        # 202a0 <__cxa_end_catch@CXXABI_1.3>
    3576:	68 54 00 00 00       	push   $0x54
    357b:	e9 a0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003580 <__cxa_throw@plt>:
    3580:	ff 25 22 cd 01 00    	jmp    *0x1cd22(%rip)        # 202a8 <__cxa_throw@CXXABI_1.3>
    3586:	68 55 00 00 00       	push   $0x55
    358b:	e9 90 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    3590:	ff 25 1a cd 01 00    	jmp    *0x1cd1a(%rip)        # 202b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    3596:	68 56 00 00 00       	push   $0x56
    359b:	e9 80 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    35a0:	ff 25 12 cd 01 00    	jmp    *0x1cd12(%rip)        # 202b8 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    35a6:	68 57 00 00 00       	push   $0x57
    35ab:	e9 70 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035b0 <_ZNSolsEi@plt>:
    35b0:	ff 25 0a cd 01 00    	jmp    *0x1cd0a(%rip)        # 202c0 <_ZNSolsEi@GLIBCXX_3.4>
    35b6:	68 58 00 00 00       	push   $0x58
    35bb:	e9 60 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035c0 <vkDestroySurfaceKHR@plt>:
    35c0:	ff 25 02 cd 01 00    	jmp    *0x1cd02(%rip)        # 202c8 <vkDestroySurfaceKHR@Base>
    35c6:	68 59 00 00 00       	push   $0x59
    35cb:	e9 50 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035d0 <_Unwind_Resume@plt>:
    35d0:	ff 25 fa cc 01 00    	jmp    *0x1ccfa(%rip)        # 202d0 <_Unwind_Resume@GCC_3.0>
    35d6:	68 5a 00 00 00       	push   $0x5a
    35db:	e9 40 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035e0 <_ZNSaIcEC1Ev@plt>:
    35e0:	ff 25 f2 cc 01 00    	jmp    *0x1ccf2(%rip)        # 202d8 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    35e6:	68 5b 00 00 00       	push   $0x5b
    35eb:	e9 30 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035f0 <vkDestroyImageView@plt>:
    35f0:	ff 25 ea cc 01 00    	jmp    *0x1ccea(%rip)        # 202e0 <vkDestroyImageView@Base>
    35f6:	68 5c 00 00 00       	push   $0x5c
    35fb:	e9 20 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3600:	ff 25 e2 cc 01 00    	jmp    *0x1cce2(%rip)        # 202e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3606:	68 5d 00 00 00       	push   $0x5d
    360b:	e9 10 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003610 <_ZNSt9exceptionD2Ev@plt>:
    3610:	ff 25 da cc 01 00    	jmp    *0x1ccda(%rip)        # 202f0 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    3616:	68 5e 00 00 00       	push   $0x5e
    361b:	e9 00 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003620 <glfwWindowShouldClose@plt>:
    3620:	ff 25 d2 cc 01 00    	jmp    *0x1ccd2(%rip)        # 202f8 <glfwWindowShouldClose@Base>
    3626:	68 5f 00 00 00       	push   $0x5f
    362b:	e9 f0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003630 <_ZNSolsEd@plt>:
    3630:	ff 25 ca cc 01 00    	jmp    *0x1ccca(%rip)        # 20300 <_ZNSolsEd@GLIBCXX_3.4>
    3636:	68 60 00 00 00       	push   $0x60
    363b:	e9 e0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    3640:	ff 25 c2 cc 01 00    	jmp    *0x1ccc2(%rip)        # 20308 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    3646:	68 61 00 00 00       	push   $0x61
    364b:	e9 d0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3650:	ff 25 ba cc 01 00    	jmp    *0x1ccba(%rip)        # 20310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3656:	68 62 00 00 00       	push   $0x62
    365b:	e9 c0 f9 ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003660 <__cxa_finalize@plt>:
    3660:	ff 25 2a c9 01 00    	jmp    *0x1c92a(%rip)        # 1ff90 <__cxa_finalize@GLIBC_2.2.5>
    3666:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003670 <_start>:
    3670:	31 ed                	xor    %ebp,%ebp
    3672:	49 89 d1             	mov    %rdx,%r9
    3675:	5e                   	pop    %rsi
    3676:	48 89 e2             	mov    %rsp,%rdx
    3679:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    367d:	50                   	push   %rax
    367e:	54                   	push   %rsp
    367f:	45 31 c0             	xor    %r8d,%r8d
    3682:	31 c9                	xor    %ecx,%ecx
    3684:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 3834 <main>
    368b:	ff 15 0f c9 01 00    	call   *0x1c90f(%rip)        # 1ffa0 <__libc_start_main@GLIBC_2.34>
    3691:	f4                   	hlt
    3692:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3699:	00 00 00 
    369c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000036a0 <deregister_tm_clones>:
    36a0:	48 8d 3d 91 cc 01 00 	lea    0x1cc91(%rip),%rdi        # 20338 <__TMC_END__>
    36a7:	48 8d 05 8a cc 01 00 	lea    0x1cc8a(%rip),%rax        # 20338 <__TMC_END__>
    36ae:	48 39 f8             	cmp    %rdi,%rax
    36b1:	74 15                	je     36c8 <deregister_tm_clones+0x28>
    36b3:	48 8b 05 f6 c8 01 00 	mov    0x1c8f6(%rip),%rax        # 1ffb0 <_ITM_deregisterTMCloneTable@Base>
    36ba:	48 85 c0             	test   %rax,%rax
    36bd:	74 09                	je     36c8 <deregister_tm_clones+0x28>
    36bf:	ff e0                	jmp    *%rax
    36c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    36c8:	c3                   	ret
    36c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000036d0 <register_tm_clones>:
    36d0:	48 8d 3d 61 cc 01 00 	lea    0x1cc61(%rip),%rdi        # 20338 <__TMC_END__>
    36d7:	48 8d 35 5a cc 01 00 	lea    0x1cc5a(%rip),%rsi        # 20338 <__TMC_END__>
    36de:	48 29 fe             	sub    %rdi,%rsi
    36e1:	48 89 f0             	mov    %rsi,%rax
    36e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    36e8:	48 c1 f8 03          	sar    $0x3,%rax
    36ec:	48 01 c6             	add    %rax,%rsi
    36ef:	48 d1 fe             	sar    %rsi
    36f2:	74 14                	je     3708 <register_tm_clones+0x38>
    36f4:	48 8b 05 c5 c8 01 00 	mov    0x1c8c5(%rip),%rax        # 1ffc0 <_ITM_registerTMCloneTable@Base>
    36fb:	48 85 c0             	test   %rax,%rax
    36fe:	74 08                	je     3708 <register_tm_clones+0x38>
    3700:	ff e0                	jmp    *%rax
    3702:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3708:	c3                   	ret
    3709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003710 <__do_global_dtors_aux>:
    3710:	f3 0f 1e fa          	endbr64
    3714:	80 3d 55 ce 01 00 00 	cmpb   $0x0,0x1ce55(%rip)        # 20570 <completed.0>
    371b:	75 2b                	jne    3748 <__do_global_dtors_aux+0x38>
    371d:	55                   	push   %rbp
    371e:	48 83 3d 6a c8 01 00 	cmpq   $0x0,0x1c86a(%rip)        # 1ff90 <__cxa_finalize@GLIBC_2.2.5>
    3725:	00 
    3726:	48 89 e5             	mov    %rsp,%rbp
    3729:	74 0c                	je     3737 <__do_global_dtors_aux+0x27>
    372b:	48 8b 3d ee cb 01 00 	mov    0x1cbee(%rip),%rdi        # 20320 <__dso_handle>
    3732:	e8 29 ff ff ff       	call   3660 <__cxa_finalize@plt>
    3737:	e8 64 ff ff ff       	call   36a0 <deregister_tm_clones>
    373c:	c6 05 2d ce 01 00 01 	movb   $0x1,0x1ce2d(%rip)        # 20570 <completed.0>
    3743:	5d                   	pop    %rbp
    3744:	c3                   	ret
    3745:	0f 1f 00             	nopl   (%rax)
    3748:	c3                   	ret
    3749:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003750 <frame_dummy>:
    3750:	f3 0f 1e fa          	endbr64
    3754:	e9 77 ff ff ff       	jmp    36d0 <register_tm_clones>

0000000000003759 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    3759:	55                   	push   %rbp
    375a:	48 89 e5             	mov    %rsp,%rbp
    375d:	53                   	push   %rbx
    375e:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
  VulkanApp app;
    3765:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    376c:	48 89 c7             	mov    %rax,%rdi
    376f:	e8 06 8a 00 00       	call   c17a <_ZN9VulkanAppC1Ev>
  app.run();
    3774:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    377b:	48 89 c7             	mov    %rax,%rdi
    377e:	e8 f5 8d 00 00       	call   c578 <_ZN9VulkanApp3runEv>
  app.writeInfo("src/info.log");
    3783:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3787:	48 89 c7             	mov    %rax,%rdi
    378a:	e8 51 fe ff ff       	call   35e0 <_ZNSaIcEC1Ev@plt>
    378f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3793:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3797:	48 8d 0d 46 ee 00 00 	lea    0xee46(%rip),%rcx        # 125e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    379e:	48 89 ce             	mov    %rcx,%rsi
    37a1:	48 89 c7             	mov    %rax,%rdi
    37a4:	e8 77 02 00 00       	call   3a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    37a9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    37ad:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    37b4:	48 89 d6             	mov    %rdx,%rsi
    37b7:	48 89 c7             	mov    %rax,%rdi
    37ba:	e8 fd 8e 00 00       	call   c6bc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    37bf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    37c3:	48 89 c7             	mov    %rax,%rdi
    37c6:	e8 d5 f9 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    37cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    37cf:	48 89 c7             	mov    %rax,%rdi
    37d2:	e8 c9 fb ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    37d7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    37dc:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    37e3:	48 89 c7             	mov    %rax,%rdi
    37e6:	e8 e5 8b 00 00       	call   c3d0 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    37eb:	89 d8                	mov    %ebx,%eax
    37ed:	eb 3f                	jmp    382e <_Z14protected_mainv+0xd5>
  app.writeInfo("src/info.log");
    37ef:	48 89 c3             	mov    %rax,%rbx
    37f2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    37f6:	48 89 c7             	mov    %rax,%rdi
    37f9:	e8 a2 f9 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    37fe:	eb 03                	jmp    3803 <_Z14protected_mainv+0xaa>
    3800:	48 89 c3             	mov    %rax,%rbx
    3803:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3807:	48 89 c7             	mov    %rax,%rdi
    380a:	e8 91 fb ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    380f:	eb 03                	jmp    3814 <_Z14protected_mainv+0xbb>
}
    3811:	48 89 c3             	mov    %rax,%rbx
    3814:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    381b:	48 89 c7             	mov    %rax,%rdi
    381e:	e8 ad 8b 00 00       	call   c3d0 <_ZN9VulkanAppD1Ev>
    3823:	48 89 d8             	mov    %rbx,%rax
    3826:	48 89 c7             	mov    %rax,%rdi
    3829:	e8 a2 fd ff ff       	call   35d0 <_Unwind_Resume@plt>
    382e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3832:	c9                   	leave
    3833:	c3                   	ret

0000000000003834 <main>:

int main() {
    3834:	55                   	push   %rbp
    3835:	48 89 e5             	mov    %rsp,%rbp
    3838:	53                   	push   %rbx
    3839:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    383d:	e8 17 ff ff ff       	call   3759 <_Z14protected_mainv>
    3842:	e9 aa 00 00 00       	jmp    38f1 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    3847:	b8 01 00 00 00       	mov    $0x1,%eax
    384c:	e9 a0 00 00 00       	jmp    38f1 <main+0xbd>
  } catch (const std::exception &e) {
    3851:	48 83 fa 01          	cmp    $0x1,%rdx
    3855:	75 49                	jne    38a0 <main+0x6c>
    3857:	48 89 c7             	mov    %rax,%rdi
    385a:	e8 a1 f8 ff ff       	call   3100 <__cxa_begin_catch@plt>
    385f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    3863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3867:	48 8b 00             	mov    (%rax),%rax
    386a:	48 83 c0 10          	add    $0x10,%rax
    386e:	48 8b 10             	mov    (%rax),%rdx
    3871:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3875:	48 89 c7             	mov    %rax,%rdi
    3878:	ff d2                	call   *%rdx
    387a:	48 89 c6             	mov    %rax,%rsi
    387d:	48 8d 05 dc cb 01 00 	lea    0x1cbdc(%rip),%rax        # 20460 <_ZSt4cerr@GLIBCXX_3.4>
    3884:	48 89 c7             	mov    %rax,%rdi
    3887:	e8 64 fa ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    388c:	be 0a 00 00 00       	mov    $0xa,%esi
    3891:	48 89 c7             	mov    %rax,%rdi
    3894:	e8 67 fb ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    3899:	e8 d2 fc ff ff       	call   3570 <__cxa_end_catch@plt>
    389e:	eb a7                	jmp    3847 <main+0x13>
    38a0:	48 89 c7             	mov    %rax,%rdi
    38a3:	e8 58 f8 ff ff       	call   3100 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    38a8:	48 8d 05 42 ed 00 00 	lea    0xed42(%rip),%rax        # 125f1 <_ZN6__pstl9execution2v1L5unseqE+0xe>
    38af:	48 89 c6             	mov    %rax,%rsi
    38b2:	48 8d 05 a7 cb 01 00 	lea    0x1cba7(%rip),%rax        # 20460 <_ZSt4cerr@GLIBCXX_3.4>
    38b9:	48 89 c7             	mov    %rax,%rdi
    38bc:	e8 2f fa ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    38c1:	e8 aa fc ff ff       	call   3570 <__cxa_end_catch@plt>
    38c6:	e9 7c ff ff ff       	jmp    3847 <main+0x13>
  } catch (...) {
    38cb:	48 89 c3             	mov    %rax,%rbx
    38ce:	e8 9d fc ff ff       	call   3570 <__cxa_end_catch@plt>
    38d3:	48 89 d8             	mov    %rbx,%rax
    38d6:	48 89 c7             	mov    %rax,%rdi
    38d9:	e8 f2 fc ff ff       	call   35d0 <_Unwind_Resume@plt>
  }
    38de:	48 89 c3             	mov    %rax,%rbx
    38e1:	e8 8a fc ff ff       	call   3570 <__cxa_end_catch@plt>
    38e6:	48 89 d8             	mov    %rbx,%rax
    38e9:	48 89 c7             	mov    %rax,%rdi
    38ec:	e8 df fc ff ff       	call   35d0 <_Unwind_Resume@plt>
    38f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    38f5:	c9                   	leave
    38f6:	c3                   	ret

00000000000038f7 <_Z41__static_initialization_and_destruction_0ii>:
    38f7:	55                   	push   %rbp
    38f8:	48 89 e5             	mov    %rsp,%rbp
    38fb:	48 83 ec 10          	sub    $0x10,%rsp
    38ff:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3902:	89 75 f8             	mov    %esi,-0x8(%rbp)
    3905:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3909:	75 3b                	jne    3946 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    390b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    3912:	75 32                	jne    3946 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    3914:	48 8d 05 56 cc 01 00 	lea    0x1cc56(%rip),%rax        # 20571 <_ZStL8__ioinit>
    391b:	48 89 c7             	mov    %rax,%rdi
    391e:	e8 ed fb ff ff       	call   3510 <_ZNSt8ios_base4InitC1Ev@plt>
    3923:	48 8d 05 f6 c9 01 00 	lea    0x1c9f6(%rip),%rax        # 20320 <__dso_handle>
    392a:	48 89 c2             	mov    %rax,%rdx
    392d:	48 8d 05 3d cc 01 00 	lea    0x1cc3d(%rip),%rax        # 20571 <_ZStL8__ioinit>
    3934:	48 89 c6             	mov    %rax,%rsi
    3937:	48 8b 05 8a c6 01 00 	mov    0x1c68a(%rip),%rax        # 1ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    393e:	48 89 c7             	mov    %rax,%rdi
    3941:	e8 4a f9 ff ff       	call   3290 <__cxa_atexit@plt>
    3946:	90                   	nop
    3947:	c9                   	leave
    3948:	c3                   	ret

0000000000003949 <_GLOBAL__sub_I__Z14protected_mainv>:
    3949:	55                   	push   %rbp
    394a:	48 89 e5             	mov    %rsp,%rbp
    394d:	be ff ff 00 00       	mov    $0xffff,%esi
    3952:	bf 01 00 00 00       	mov    $0x1,%edi
    3957:	e8 9b ff ff ff       	call   38f7 <_Z41__static_initialization_and_destruction_0ii>
    395c:	5d                   	pop    %rbp
    395d:	c3                   	ret

000000000000395e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    395e:	55                   	push   %rbp
    395f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    3962:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    3967:	5d                   	pop    %rbp
    3968:	c3                   	ret

0000000000003969 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    3969:	55                   	push   %rbp
    396a:	48 89 e5             	mov    %rsp,%rbp
    396d:	48 83 ec 10          	sub    $0x10,%rsp
    3971:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    3975:	e8 e4 ff ff ff       	call   395e <_ZSt23__is_constant_evaluatedv>
    397a:	84 c0                	test   %al,%al
    397c:	74 0e                	je     398c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    397e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3982:	48 89 c7             	mov    %rax,%rdi
    3985:	e8 12 00 00 00       	call   399c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    398a:	eb 0d                	jmp    3999 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    398c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3990:	48 89 c7             	mov    %rax,%rdi
    3993:	e8 88 f7 ff ff       	call   3120 <strlen@plt>
    3998:	90                   	nop
      }
    3999:	c9                   	leave
    399a:	c3                   	ret
    399b:	90                   	nop

000000000000399c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    399c:	55                   	push   %rbp
    399d:	48 89 e5             	mov    %rsp,%rbp
    39a0:	48 83 ec 20          	sub    $0x20,%rsp
    39a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    39a8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    39af:	00 
      while (!eq(__p[__i], char_type()))
    39b0:	eb 05                	jmp    39b7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    39b2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    39b7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    39bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    39bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39c3:	48 01 c2             	add    %rax,%rdx
    39c6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    39ca:	48 89 c6             	mov    %rax,%rsi
    39cd:	48 89 d7             	mov    %rdx,%rdi
    39d0:	e8 0d 00 00 00       	call   39e2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    39d5:	83 f0 01             	xor    $0x1,%eax
    39d8:	84 c0                	test   %al,%al
    39da:	75 d6                	jne    39b2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    39dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    39e0:	c9                   	leave
    39e1:	c3                   	ret

00000000000039e2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    39e2:	55                   	push   %rbp
    39e3:	48 89 e5             	mov    %rsp,%rbp
    39e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    39ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39f2:	0f b6 10             	movzbl (%rax),%edx
    39f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    39f9:	0f b6 00             	movzbl (%rax),%eax
    39fc:	38 c2                	cmp    %al,%dl
    39fe:	0f 94 c0             	sete   %al
    3a01:	5d                   	pop    %rbp
    3a02:	c3                   	ret
    3a03:	90                   	nop

0000000000003a04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    3a04:	55                   	push   %rbp
    3a05:	48 89 e5             	mov    %rsp,%rbp
    3a08:	48 83 ec 10          	sub    $0x10,%rsp
    3a0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a14:	48 89 c7             	mov    %rax,%rdi
    3a17:	e8 44 f6 ff ff       	call   3060 <_ZNSaIcED2Ev@plt>
    3a1c:	90                   	nop
    3a1d:	c9                   	leave
    3a1e:	c3                   	ret
    3a1f:	90                   	nop

0000000000003a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    3a20:	55                   	push   %rbp
    3a21:	48 89 e5             	mov    %rsp,%rbp
    3a24:	53                   	push   %rbx
    3a25:	48 83 ec 38          	sub    $0x38,%rsp
    3a29:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3a2d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3a31:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    3a35:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    3a39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a3d:	48 89 c7             	mov    %rax,%rdi
    3a40:	e8 eb f7 ff ff       	call   3230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3a45:	48 89 c1             	mov    %rax,%rcx
    3a48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3a4c:	48 89 c2             	mov    %rax,%rdx
    3a4f:	48 89 ce             	mov    %rcx,%rsi
    3a52:	48 89 df             	mov    %rbx,%rdi
    3a55:	e8 16 f9 ff ff       	call   3370 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    3a5a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    3a5f:	75 0f                	jne    3a70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    3a61:	48 8d 05 a0 eb 00 00 	lea    0xeba0(%rip),%rax        # 12608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    3a68:	48 89 c7             	mov    %rax,%rdi
    3a6b:	e8 70 f7 ff ff       	call   31e0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    3a70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3a74:	48 89 c7             	mov    %rax,%rdi
    3a77:	e8 ed fe ff ff       	call   3969 <_ZNSt11char_traitsIcE6lengthEPKc>
    3a7c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3a80:	48 01 d0             	add    %rdx,%rax
    3a83:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    3a87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3a8b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3a8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3a93:	48 89 ce             	mov    %rcx,%rsi
    3a96:	48 89 c7             	mov    %rax,%rdi
    3a99:	e8 66 00 00 00       	call   3b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    3a9e:	eb 1a                	jmp    3aba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    3aa0:	48 89 c3             	mov    %rax,%rbx
    3aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3aa7:	48 89 c7             	mov    %rax,%rdi
    3aaa:	e8 55 ff ff ff       	call   3a04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    3aaf:	48 89 d8             	mov    %rbx,%rax
    3ab2:	48 89 c7             	mov    %rax,%rdi
    3ab5:	e8 16 fb ff ff       	call   35d0 <_Unwind_Resume@plt>
    3aba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3abe:	c9                   	leave
    3abf:	c3                   	ret

0000000000003ac0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    3ac0:	55                   	push   %rbp
    3ac1:	48 89 e5             	mov    %rsp,%rbp
    3ac4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ac8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ad0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ad4:	48 89 10             	mov    %rdx,(%rax)
    3ad7:	90                   	nop
    3ad8:	5d                   	pop    %rbp
    3ad9:	c3                   	ret

0000000000003ada <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    3ada:	55                   	push   %rbp
    3adb:	48 89 e5             	mov    %rsp,%rbp
    3ade:	48 83 ec 10          	sub    $0x10,%rsp
    3ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aea:	48 8b 00             	mov    (%rax),%rax
    3aed:	48 85 c0             	test   %rax,%rax
    3af0:	74 0f                	je     3b01 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    3af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3af6:	48 8b 00             	mov    (%rax),%rax
    3af9:	48 89 c7             	mov    %rax,%rdi
    3afc:	e8 3f f9 ff ff       	call   3440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    3b01:	90                   	nop
    3b02:	c9                   	leave
    3b03:	c3                   	ret

0000000000003b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    3b04:	55                   	push   %rbp
    3b05:	48 89 e5             	mov    %rsp,%rbp
    3b08:	48 83 ec 40          	sub    $0x40,%rsp
    3b0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3b10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3b14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    3b18:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3b1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3b20:	48 89 d6             	mov    %rdx,%rsi
    3b23:	48 89 c7             	mov    %rax,%rdi
    3b26:	e8 c0 00 00 00       	call   3beb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    3b2b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    3b2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b33:	48 83 f8 0f          	cmp    $0xf,%rax
    3b37:	76 3f                	jbe    3b78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    3b39:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    3b3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b41:	ba 00 00 00 00       	mov    $0x0,%edx
    3b46:	48 89 ce             	mov    %rcx,%rsi
    3b49:	48 89 c7             	mov    %rax,%rdi
    3b4c:	e8 af fa ff ff       	call   3600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    3b51:	48 89 c2             	mov    %rax,%rdx
    3b54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b58:	48 89 d6             	mov    %rdx,%rsi
    3b5b:	48 89 c7             	mov    %rax,%rdi
    3b5e:	e8 fd f6 ff ff       	call   3260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    3b63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b6b:	48 89 d6             	mov    %rdx,%rsi
    3b6e:	48 89 c7             	mov    %rax,%rdi
    3b71:	e8 da fa ff ff       	call   3650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    3b76:	eb 15                	jmp    3b8d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    3b78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    3b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b84:	48 89 c7             	mov    %rax,%rdi
    3b87:	e8 a4 f6 ff ff       	call   3230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3b8c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    3b8d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3b91:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3b95:	48 89 d6             	mov    %rdx,%rsi
    3b98:	48 89 c7             	mov    %rax,%rdi
    3b9b:	e8 20 ff ff ff       	call   3ac0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    3ba0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ba4:	48 89 c7             	mov    %rax,%rdi
    3ba7:	e8 14 f8 ff ff       	call   33c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    3bac:	48 89 c1             	mov    %rax,%rcx
    3baf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3bb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3bb7:	48 89 c6             	mov    %rax,%rsi
    3bba:	48 89 cf             	mov    %rcx,%rdi
    3bbd:	e8 0e f8 ff ff       	call   33d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    3bc2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3bc9:	00 

	_M_set_length(__dnew);
    3bca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3bce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3bd2:	48 89 d6             	mov    %rdx,%rsi
    3bd5:	48 89 c7             	mov    %rax,%rdi
    3bd8:	e8 d3 f5 ff ff       	call   31b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    3bdd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3be1:	48 89 c7             	mov    %rax,%rdi
    3be4:	e8 f1 fe ff ff       	call   3ada <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    3be9:	c9                   	leave
    3bea:	c3                   	ret

0000000000003beb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    3beb:	55                   	push   %rbp
    3bec:	48 89 e5             	mov    %rsp,%rbp
    3bef:	48 83 ec 10          	sub    $0x10,%rsp
    3bf3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bf7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    3bfb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3bff:	48 89 c7             	mov    %rax,%rdi
    3c02:	e8 15 00 00 00       	call   3c1c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    3c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c0b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3c0f:	48 89 d6             	mov    %rdx,%rsi
    3c12:	48 89 c7             	mov    %rax,%rdi
    3c15:	e8 0d 00 00 00       	call   3c27 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    3c1a:	c9                   	leave
    3c1b:	c3                   	ret

0000000000003c1c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    3c1c:	55                   	push   %rbp
    3c1d:	48 89 e5             	mov    %rsp,%rbp
    3c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    3c24:	90                   	nop
    3c25:	5d                   	pop    %rbp
    3c26:	c3                   	ret

0000000000003c27 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    3c27:	55                   	push   %rbp
    3c28:	48 89 e5             	mov    %rsp,%rbp
    3c2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    3c33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c37:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    3c3b:	5d                   	pop    %rbp
    3c3c:	c3                   	ret

0000000000003c3d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    3c3d:	55                   	push   %rbp
    3c3e:	48 89 e5             	mov    %rsp,%rbp
    3c41:	41 54                	push   %r12
    3c43:	53                   	push   %rbx
    3c44:	48 83 ec 30          	sub    $0x30,%rsp
    3c48:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3c4c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3c50:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    3c54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3c58:	8b 40 1c             	mov    0x1c(%rax),%eax
    3c5b:	89 c3                	mov    %eax,%ebx
    3c5d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3c61:	48 89 c7             	mov    %rax,%rdi
    3c64:	e8 13 01 00 00       	call   3d7c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    3c69:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    3c6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c71:	48 89 de             	mov    %rbx,%rsi
    3c74:	48 89 c7             	mov    %rax,%rdi
    3c77:	e8 38 01 00 00       	call   3db4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    3c7c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3c80:	48 89 c7             	mov    %rax,%rdi
    3c83:	e8 10 01 00 00       	call   3d98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    3c88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3c8c:	48 89 c7             	mov    %rax,%rdi
    3c8f:	e8 da 01 00 00       	call   3e6e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    3c94:	48 89 c2             	mov    %rax,%rdx
    3c97:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    3c9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3c9f:	48 89 ce             	mov    %rcx,%rsi
    3ca2:	48 89 c7             	mov    %rax,%rdi
    3ca5:	e8 06 f6 ff ff       	call   32b0 <vkAllocateCommandBuffers@plt>
    3caa:	85 c0                	test   %eax,%eax
    3cac:	0f 95 c0             	setne  %al
    3caf:	84 c0                	test   %al,%al
    3cb1:	74 7f                	je     3d32 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    3cb3:	bf 10 00 00 00       	mov    $0x10,%edi
    3cb8:	e8 83 f4 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    3cbd:	48 89 c3             	mov    %rax,%rbx
    3cc0:	48 8d 05 51 ef 00 00 	lea    0xef51(%rip),%rax        # 12c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    3cc7:	48 89 c6             	mov    %rax,%rsi
    3cca:	48 89 df             	mov    %rbx,%rdi
    3ccd:	e8 0e f4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    3cd2:	48 8b 05 cf c2 01 00 	mov    0x1c2cf(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3cd9:	48 89 c2             	mov    %rax,%rdx
    3cdc:	48 8d 05 5d c0 01 00 	lea    0x1c05d(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3ce3:	48 89 c6             	mov    %rax,%rsi
    3ce6:	48 89 df             	mov    %rbx,%rdi
    3ce9:	e8 92 f8 ff ff       	call   3580 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    3cee:	48 89 c3             	mov    %rax,%rbx
    3cf1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3cf5:	48 89 c7             	mov    %rax,%rdi
    3cf8:	e8 9b 00 00 00       	call   3d98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    3cfd:	48 89 d8             	mov    %rbx,%rax
    3d00:	48 89 c7             	mov    %rax,%rdi
    3d03:	e8 c8 f8 ff ff       	call   35d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    3d08:	49 89 c4             	mov    %rax,%r12
    3d0b:	48 89 df             	mov    %rbx,%rdi
    3d0e:	e8 dd f4 ff ff       	call   31f0 <__cxa_free_exception@plt>
    3d13:	4c 89 e3             	mov    %r12,%rbx
    3d16:	eb 03                	jmp    3d1b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    3d18:	48 89 c3             	mov    %rax,%rbx
    3d1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d1f:	48 89 c7             	mov    %rax,%rdi
    3d22:	e8 03 01 00 00       	call   3e2a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    3d27:	48 89 d8             	mov    %rbx,%rax
    3d2a:	48 89 c7             	mov    %rax,%rdi
    3d2d:	e8 9e f8 ff ff       	call   35d0 <_Unwind_Resume@plt>
  return commandBuffers;
    3d32:	90                   	nop
}
    3d33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d37:	48 83 c4 30          	add    $0x30,%rsp
    3d3b:	5b                   	pop    %rbx
    3d3c:	41 5c                	pop    %r12
    3d3e:	5d                   	pop    %rbp
    3d3f:	c3                   	ret

0000000000003d40 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    3d40:	55                   	push   %rbp
    3d41:	48 89 e5             	mov    %rsp,%rbp
    3d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d50:	5d                   	pop    %rbp
    3d51:	c3                   	ret

0000000000003d52 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    3d52:	55                   	push   %rbp
    3d53:	48 89 e5             	mov    %rsp,%rbp
    3d56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d5e:	5d                   	pop    %rbp
    3d5f:	c3                   	ret

0000000000003d60 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    3d60:	55                   	push   %rbp
    3d61:	48 89 e5             	mov    %rsp,%rbp
    3d64:	48 83 ec 10          	sub    $0x10,%rsp
    3d68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d70:	48 89 c7             	mov    %rax,%rdi
    3d73:	e8 20 00 00 00       	call   3d98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    3d78:	90                   	nop
    3d79:	c9                   	leave
    3d7a:	c3                   	ret
    3d7b:	90                   	nop

0000000000003d7c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    3d7c:	55                   	push   %rbp
    3d7d:	48 89 e5             	mov    %rsp,%rbp
    3d80:	48 83 ec 10          	sub    $0x10,%rsp
    3d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d8c:	48 89 c7             	mov    %rax,%rdi
    3d8f:	e8 4c 01 00 00       	call   3ee0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    3d94:	90                   	nop
    3d95:	c9                   	leave
    3d96:	c3                   	ret
    3d97:	90                   	nop

0000000000003d98 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    3d98:	55                   	push   %rbp
    3d99:	48 89 e5             	mov    %rsp,%rbp
    3d9c:	48 83 ec 10          	sub    $0x10,%rsp
    3da0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3da4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da8:	48 89 c7             	mov    %rax,%rdi
    3dab:	e8 3c 01 00 00       	call   3eec <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    3db0:	90                   	nop
    3db1:	c9                   	leave
    3db2:	c3                   	ret
    3db3:	90                   	nop

0000000000003db4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3db4:	55                   	push   %rbp
    3db5:	48 89 e5             	mov    %rsp,%rbp
    3db8:	53                   	push   %rbx
    3db9:	48 83 ec 28          	sub    $0x28,%rsp
    3dbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3dc1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3dc5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3dc9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3dcd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3dd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3dd5:	48 89 d6             	mov    %rdx,%rsi
    3dd8:	48 89 c7             	mov    %rax,%rdi
    3ddb:	e8 17 01 00 00       	call   3ef7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    3de0:	48 89 c1             	mov    %rax,%rcx
    3de3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3de7:	48 89 c2             	mov    %rax,%rdx
    3dea:	48 89 ce             	mov    %rcx,%rsi
    3ded:	48 89 df             	mov    %rbx,%rdi
    3df0:	e8 63 01 00 00       	call   3f58 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    3df5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3df9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3dfd:	48 89 d6             	mov    %rdx,%rsi
    3e00:	48 89 c7             	mov    %rax,%rdi
    3e03:	e8 ae 01 00 00       	call   3fb6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    3e08:	eb 1a                	jmp    3e24 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    3e0a:	48 89 c3             	mov    %rax,%rbx
    3e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e11:	48 89 c7             	mov    %rax,%rdi
    3e14:	e8 79 00 00 00       	call   3e92 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    3e19:	48 89 d8             	mov    %rbx,%rax
    3e1c:	48 89 c7             	mov    %rax,%rdi
    3e1f:	e8 ac f7 ff ff       	call   35d0 <_Unwind_Resume@plt>
    3e24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3e28:	c9                   	leave
    3e29:	c3                   	ret

0000000000003e2a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    3e2a:	55                   	push   %rbp
    3e2b:	48 89 e5             	mov    %rsp,%rbp
    3e2e:	48 83 ec 10          	sub    $0x10,%rsp
    3e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    3e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e3a:	48 89 c7             	mov    %rax,%rdi
    3e3d:	e8 b4 01 00 00       	call   3ff6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3e42:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3e45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e49:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3e4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e51:	48 8b 00             	mov    (%rax),%rax
    3e54:	48 89 ce             	mov    %rcx,%rsi
    3e57:	48 89 c7             	mov    %rax,%rdi
    3e5a:	e8 a5 01 00 00       	call   4004 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    3e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e63:	48 89 c7             	mov    %rax,%rdi
    3e66:	e8 27 00 00 00       	call   3e92 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    3e6b:	90                   	nop
    3e6c:	c9                   	leave
    3e6d:	c3                   	ret

0000000000003e6e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    3e6e:	55                   	push   %rbp
    3e6f:	48 89 e5             	mov    %rsp,%rbp
    3e72:	48 83 ec 10          	sub    $0x10,%rsp
    3e76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    3e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e7e:	48 8b 10             	mov    (%rax),%rdx
    3e81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e85:	48 89 d6             	mov    %rdx,%rsi
    3e88:	48 89 c7             	mov    %rax,%rdi
    3e8b:	e8 9e 01 00 00       	call   402e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    3e90:	c9                   	leave
    3e91:	c3                   	ret

0000000000003e92 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3e92:	55                   	push   %rbp
    3e93:	48 89 e5             	mov    %rsp,%rbp
    3e96:	48 83 ec 10          	sub    $0x10,%rsp
    3e9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ea2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3ea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3eaa:	48 8b 00             	mov    (%rax),%rax
    3ead:	48 29 c2             	sub    %rax,%rdx
    3eb0:	48 89 d0             	mov    %rdx,%rax
    3eb3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3eb7:	48 89 c2             	mov    %rax,%rdx
    3eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ebe:	48 8b 08             	mov    (%rax),%rcx
    3ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ec5:	48 89 ce             	mov    %rcx,%rsi
    3ec8:	48 89 c7             	mov    %rax,%rdi
    3ecb:	e8 96 01 00 00       	call   4066 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    3ed0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ed4:	48 89 c7             	mov    %rax,%rdi
    3ed7:	e8 84 fe ff ff       	call   3d60 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    3edc:	90                   	nop
    3edd:	c9                   	leave
    3ede:	c3                   	ret
    3edf:	90                   	nop

0000000000003ee0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3ee0:	55                   	push   %rbp
    3ee1:	48 89 e5             	mov    %rsp,%rbp
    3ee4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ee8:	90                   	nop
    3ee9:	5d                   	pop    %rbp
    3eea:	c3                   	ret
    3eeb:	90                   	nop

0000000000003eec <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3eec:	55                   	push   %rbp
    3eed:	48 89 e5             	mov    %rsp,%rbp
    3ef0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ef4:	90                   	nop
    3ef5:	5d                   	pop    %rbp
    3ef6:	c3                   	ret

0000000000003ef7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3ef7:	55                   	push   %rbp
    3ef8:	48 89 e5             	mov    %rsp,%rbp
    3efb:	53                   	push   %rbx
    3efc:	48 83 ec 28          	sub    $0x28,%rsp
    3f00:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3f04:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3f08:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3f0c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f10:	48 89 d6             	mov    %rdx,%rsi
    3f13:	48 89 c7             	mov    %rax,%rdi
    3f16:	e8 25 01 00 00       	call   4040 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    3f1b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f1f:	48 89 c7             	mov    %rax,%rdi
    3f22:	e8 74 01 00 00       	call   409b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    3f27:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3f2b:	0f 92 c3             	setb   %bl
    3f2e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3f32:	48 89 c7             	mov    %rax,%rdi
    3f35:	e8 5e fe ff ff       	call   3d98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    3f3a:	84 db                	test   %bl,%bl
    3f3c:	74 0f                	je     3f4d <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    3f3e:	48 8d 05 fb ec 00 00 	lea    0xecfb(%rip),%rax        # 12c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    3f45:	48 89 c7             	mov    %rax,%rdi
    3f48:	e8 03 f2 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    3f4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3f51:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3f55:	c9                   	leave
    3f56:	c3                   	ret
    3f57:	90                   	nop

0000000000003f58 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3f58:	55                   	push   %rbp
    3f59:	48 89 e5             	mov    %rsp,%rbp
    3f5c:	53                   	push   %rbx
    3f5d:	48 83 ec 28          	sub    $0x28,%rsp
    3f61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3f65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3f69:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3f6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f71:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3f75:	48 89 d6             	mov    %rdx,%rsi
    3f78:	48 89 c7             	mov    %rax,%rdi
    3f7b:	e8 5e 01 00 00       	call   40de <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    3f80:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3f84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f88:	48 89 d6             	mov    %rdx,%rsi
    3f8b:	48 89 c7             	mov    %rax,%rdi
    3f8e:	e8 7d 01 00 00       	call   4110 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    3f93:	eb 1a                	jmp    3faf <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    3f95:	48 89 c3             	mov    %rax,%rbx
    3f98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f9c:	48 89 c7             	mov    %rax,%rdi
    3f9f:	e8 bc fd ff ff       	call   3d60 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    3fa4:	48 89 d8             	mov    %rbx,%rax
    3fa7:	48 89 c7             	mov    %rax,%rdi
    3faa:	e8 21 f6 ff ff       	call   35d0 <_Unwind_Resume@plt>
    3faf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3fb3:	c9                   	leave
    3fb4:	c3                   	ret
    3fb5:	90                   	nop

0000000000003fb6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    3fb6:	55                   	push   %rbp
    3fb7:	48 89 e5             	mov    %rsp,%rbp
    3fba:	48 83 ec 10          	sub    $0x10,%rsp
    3fbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    3fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fca:	48 89 c7             	mov    %rax,%rdi
    3fcd:	e8 24 00 00 00       	call   3ff6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3fd2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fd9:	48 8b 00             	mov    (%rax),%rax
    3fdc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3fe0:	48 89 ce             	mov    %rcx,%rsi
    3fe3:	48 89 c7             	mov    %rax,%rdi
    3fe6:	e8 7b 01 00 00       	call   4166 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    3feb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3fef:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3ff3:	90                   	nop
    3ff4:	c9                   	leave
    3ff5:	c3                   	ret

0000000000003ff6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3ff6:	55                   	push   %rbp
    3ff7:	48 89 e5             	mov    %rsp,%rbp
    3ffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4002:	5d                   	pop    %rbp
    4003:	c3                   	ret

0000000000004004 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    4004:	55                   	push   %rbp
    4005:	48 89 e5             	mov    %rsp,%rbp
    4008:	48 83 ec 20          	sub    $0x20,%rsp
    400c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4010:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4014:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    4018:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    401c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4020:	48 89 d6             	mov    %rdx,%rsi
    4023:	48 89 c7             	mov    %rax,%rdi
    4026:	e8 64 01 00 00       	call   418f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    402b:	90                   	nop
    402c:	c9                   	leave
    402d:	c3                   	ret

000000000000402e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    402e:	55                   	push   %rbp
    402f:	48 89 e5             	mov    %rsp,%rbp
    4032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4036:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    403a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    403e:	5d                   	pop    %rbp
    403f:	c3                   	ret

0000000000004040 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    4040:	55                   	push   %rbp
    4041:	48 89 e5             	mov    %rsp,%rbp
    4044:	48 83 ec 10          	sub    $0x10,%rsp
    4048:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    404c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    4050:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4058:	48 89 d6             	mov    %rdx,%rsi
    405b:	48 89 c7             	mov    %rax,%rdi
    405e:	e8 53 01 00 00       	call   41b6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    4063:	90                   	nop
    4064:	c9                   	leave
    4065:	c3                   	ret

0000000000004066 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    4066:	55                   	push   %rbp
    4067:	48 89 e5             	mov    %rsp,%rbp
    406a:	48 83 ec 20          	sub    $0x20,%rsp
    406e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4072:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4076:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    407a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    407f:	74 17                	je     4098 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    4081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4085:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4089:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    408d:	48 89 ce             	mov    %rcx,%rsi
    4090:	48 89 c7             	mov    %rax,%rdi
    4093:	e8 2d 01 00 00       	call   41c5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    4098:	90                   	nop
    4099:	c9                   	leave
    409a:	c3                   	ret

000000000000409b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    409b:	55                   	push   %rbp
    409c:	48 89 e5             	mov    %rsp,%rbp
    409f:	48 83 ec 20          	sub    $0x20,%rsp
    40a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    40a7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    40ae:	ff ff 0f 
    40b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    40b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40b9:	48 89 c7             	mov    %rax,%rdi
    40bc:	e8 32 01 00 00       	call   41f3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    40c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    40c5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    40c9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    40cd:	48 89 d6             	mov    %rdx,%rsi
    40d0:	48 89 c7             	mov    %rax,%rdi
    40d3:	e8 35 01 00 00       	call   420d <_ZSt3minImERKT_S2_S2_>
    40d8:	48 8b 00             	mov    (%rax),%rax
      }
    40db:	c9                   	leave
    40dc:	c3                   	ret
    40dd:	90                   	nop

00000000000040de <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    40de:	55                   	push   %rbp
    40df:	48 89 e5             	mov    %rsp,%rbp
    40e2:	48 83 ec 10          	sub    $0x10,%rsp
    40e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    40ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40f6:	48 89 d6             	mov    %rdx,%rsi
    40f9:	48 89 c7             	mov    %rax,%rdi
    40fc:	e8 3f ff ff ff       	call   4040 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    4101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4105:	48 89 c7             	mov    %rax,%rdi
    4108:	e8 2b 01 00 00       	call   4238 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    410d:	90                   	nop
    410e:	c9                   	leave
    410f:	c3                   	ret

0000000000004110 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    4110:	55                   	push   %rbp
    4111:	48 89 e5             	mov    %rsp,%rbp
    4114:	48 83 ec 10          	sub    $0x10,%rsp
    4118:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    411c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    4120:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4128:	48 89 d6             	mov    %rdx,%rsi
    412b:	48 89 c7             	mov    %rax,%rdi
    412e:	e8 33 01 00 00       	call   4266 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    4133:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4137:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    413a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    413e:	48 8b 10             	mov    (%rax),%rdx
    4141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4145:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    4149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    414d:	48 8b 00             	mov    (%rax),%rax
    4150:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4154:	48 c1 e2 03          	shl    $0x3,%rdx
    4158:	48 01 c2             	add    %rax,%rdx
    415b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    415f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    4163:	90                   	nop
    4164:	c9                   	leave
    4165:	c3                   	ret

0000000000004166 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    4166:	55                   	push   %rbp
    4167:	48 89 e5             	mov    %rsp,%rbp
    416a:	48 83 ec 20          	sub    $0x20,%rsp
    416e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4172:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4176:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    417a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    417e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4182:	48 89 d6             	mov    %rdx,%rsi
    4185:	48 89 c7             	mov    %rax,%rdi
    4188:	e8 0c 01 00 00       	call   4299 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    418d:	c9                   	leave
    418e:	c3                   	ret

000000000000418f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    418f:	55                   	push   %rbp
    4190:	48 89 e5             	mov    %rsp,%rbp
    4193:	48 83 ec 10          	sub    $0x10,%rsp
    4197:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    419b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    419f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    41a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41a7:	48 89 d6             	mov    %rdx,%rsi
    41aa:	48 89 c7             	mov    %rax,%rdi
    41ad:	e8 10 01 00 00       	call   42c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    41b2:	90                   	nop
    41b3:	c9                   	leave
    41b4:	c3                   	ret
    41b5:	90                   	nop

00000000000041b6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    41b6:	55                   	push   %rbp
    41b7:	48 89 e5             	mov    %rsp,%rbp
    41ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    41c2:	90                   	nop
    41c3:	5d                   	pop    %rbp
    41c4:	c3                   	ret

00000000000041c5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    41c5:	55                   	push   %rbp
    41c6:	48 89 e5             	mov    %rsp,%rbp
    41c9:	48 83 ec 20          	sub    $0x20,%rsp
    41cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    41d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    41d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    41dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    41e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41e5:	48 89 ce             	mov    %rcx,%rsi
    41e8:	48 89 c7             	mov    %rax,%rdi
    41eb:	e8 e2 00 00 00       	call   42d2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    41f0:	90                   	nop
    41f1:	c9                   	leave
    41f2:	c3                   	ret

00000000000041f3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    41f3:	55                   	push   %rbp
    41f4:	48 89 e5             	mov    %rsp,%rbp
    41f7:	48 83 ec 10          	sub    $0x10,%rsp
    41fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    41ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4203:	48 89 c7             	mov    %rax,%rdi
    4206:	e8 f9 00 00 00       	call   4304 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    420b:	c9                   	leave
    420c:	c3                   	ret

000000000000420d <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    420d:	55                   	push   %rbp
    420e:	48 89 e5             	mov    %rsp,%rbp
    4211:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4215:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    4219:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    421d:	48 8b 10             	mov    (%rax),%rdx
    4220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4224:	48 8b 00             	mov    (%rax),%rax
    4227:	48 39 c2             	cmp    %rax,%rdx
    422a:	73 06                	jae    4232 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    422c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4230:	eb 04                	jmp    4236 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    4232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4236:	5d                   	pop    %rbp
    4237:	c3                   	ret

0000000000004238 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4238:	55                   	push   %rbp
    4239:	48 89 e5             	mov    %rsp,%rbp
    423c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4244:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    424b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    424f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4256:	00 
    4257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    425b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4262:	00 
	{ }
    4263:	90                   	nop
    4264:	5d                   	pop    %rbp
    4265:	c3                   	ret

0000000000004266 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    4266:	55                   	push   %rbp
    4267:	48 89 e5             	mov    %rsp,%rbp
    426a:	48 83 ec 10          	sub    $0x10,%rsp
    426e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4272:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    4276:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    427b:	74 15                	je     4292 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    427d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4281:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4285:	48 89 d6             	mov    %rdx,%rsi
    4288:	48 89 c7             	mov    %rax,%rdi
    428b:	e8 8e 00 00 00       	call   431e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    4290:	eb 05                	jmp    4297 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    4292:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    4297:	c9                   	leave
    4298:	c3                   	ret

0000000000004299 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    4299:	55                   	push   %rbp
    429a:	48 89 e5             	mov    %rsp,%rbp
    429d:	48 83 ec 20          	sub    $0x20,%rsp
    42a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    42a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    42a9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    42ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    42b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42b5:	48 89 d6             	mov    %rdx,%rsi
    42b8:	48 89 c7             	mov    %rax,%rdi
    42bb:	e8 88 00 00 00       	call   4348 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    42c0:	c9                   	leave
    42c1:	c3                   	ret

00000000000042c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    42c2:	55                   	push   %rbp
    42c3:	48 89 e5             	mov    %rsp,%rbp
    42c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42ce:	90                   	nop
    42cf:	5d                   	pop    %rbp
    42d0:	c3                   	ret
    42d1:	90                   	nop

00000000000042d2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    42d2:	55                   	push   %rbp
    42d3:	48 89 e5             	mov    %rsp,%rbp
    42d6:	48 83 ec 20          	sub    $0x20,%rsp
    42da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    42e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    42ea:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    42f1:	00 
    42f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    42f6:	48 89 d6             	mov    %rdx,%rsi
    42f9:	48 89 c7             	mov    %rax,%rdi
    42fc:	e8 0f f0 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    4301:	c9                   	leave
    4302:	c3                   	ret
    4303:	90                   	nop

0000000000004304 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    4304:	55                   	push   %rbp
    4305:	48 89 e5             	mov    %rsp,%rbp
    4308:	48 83 ec 10          	sub    $0x10,%rsp
    430c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    4310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4314:	48 89 c7             	mov    %rax,%rdi
    4317:	e8 8a 00 00 00       	call   43a6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    431c:	c9                   	leave
    431d:	c3                   	ret

000000000000431e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    431e:	55                   	push   %rbp
    431f:	48 89 e5             	mov    %rsp,%rbp
    4322:	48 83 ec 10          	sub    $0x10,%rsp
    4326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    432a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    432e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4336:	ba 00 00 00 00       	mov    $0x0,%edx
    433b:	48 89 ce             	mov    %rcx,%rsi
    433e:	48 89 c7             	mov    %rax,%rdi
    4341:	e8 74 00 00 00       	call   43ba <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    4346:	c9                   	leave
    4347:	c3                   	ret

0000000000004348 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    4348:	55                   	push   %rbp
    4349:	48 89 e5             	mov    %rsp,%rbp
    434c:	48 83 ec 20          	sub    $0x20,%rsp
    4350:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4354:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    4358:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    435d:	74 40                	je     439f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    435f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4363:	48 89 c7             	mov    %rax,%rdi
    4366:	e8 b0 00 00 00       	call   441b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    436b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    436f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4373:	48 89 c7             	mov    %rax,%rdi
    4376:	e8 ae 00 00 00       	call   4429 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    437b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    4380:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4384:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    4388:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    438c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4390:	48 89 ce             	mov    %rcx,%rsi
    4393:	48 89 c7             	mov    %rax,%rdi
    4396:	e8 b5 00 00 00       	call   4450 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    439b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    439f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    43a3:	c9                   	leave
    43a4:	c3                   	ret
    43a5:	90                   	nop

00000000000043a6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    43a6:	55                   	push   %rbp
    43a7:	48 89 e5             	mov    %rsp,%rbp
    43aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    43ae:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    43b5:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    43b8:	5d                   	pop    %rbp
    43b9:	c3                   	ret

00000000000043ba <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    43ba:	55                   	push   %rbp
    43bb:	48 89 e5             	mov    %rsp,%rbp
    43be:	48 83 ec 20          	sub    $0x20,%rsp
    43c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    43ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43d2:	48 89 c7             	mov    %rax,%rdi
    43d5:	e8 cc ff ff ff       	call   43a6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    43da:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    43de:	0f 92 c0             	setb   %al
    43e1:	0f b6 c0             	movzbl %al,%eax
    43e4:	48 85 c0             	test   %rax,%rax
    43e7:	0f 95 c0             	setne  %al
    43ea:	84 c0                	test   %al,%al
    43ec:	74 1a                	je     4408 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    43ee:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    43f5:	ff ff 1f 
    43f8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    43fc:	73 05                	jae    4403 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    43fe:	e8 1d ee ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4403:	e8 b8 ec ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4408:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    440c:	48 c1 e0 03          	shl    $0x3,%rax
    4410:	48 89 c7             	mov    %rax,%rdi
    4413:	e8 e8 ee ff ff       	call   3300 <_Znwm@plt>
    4418:	90                   	nop
      }
    4419:	c9                   	leave
    441a:	c3                   	ret

000000000000441b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    441b:	55                   	push   %rbp
    441c:	48 89 e5             	mov    %rsp,%rbp
    441f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    4423:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4427:	5d                   	pop    %rbp
    4428:	c3                   	ret

0000000000004429 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    4429:	55                   	push   %rbp
    442a:	48 89 e5             	mov    %rsp,%rbp
    442d:	48 83 ec 10          	sub    $0x10,%rsp
    4431:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    4435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4439:	48 89 c6             	mov    %rax,%rsi
    443c:	bf 08 00 00 00       	mov    $0x8,%edi
    4441:	e8 fa f8 ff ff       	call   3d40 <_ZnwmPv>
    4446:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    444d:	90                   	nop
    444e:	c9                   	leave
    444f:	c3                   	ret

0000000000004450 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    4450:	55                   	push   %rbp
    4451:	48 89 e5             	mov    %rsp,%rbp
    4454:	48 83 ec 20          	sub    $0x20,%rsp
    4458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    445c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4460:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    4464:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4468:	48 89 c7             	mov    %rax,%rdi
    446b:	e8 24 00 00 00       	call   4494 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    4470:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4474:	48 89 c7             	mov    %rax,%rdi
    4477:	e8 d6 f8 ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    447c:	48 89 c1             	mov    %rax,%rcx
    447f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4483:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4487:	48 89 ce             	mov    %rcx,%rsi
    448a:	48 89 c7             	mov    %rax,%rdi
    448d:	e8 0d 00 00 00       	call   449f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    4492:	c9                   	leave
    4493:	c3                   	ret

0000000000004494 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    4494:	55                   	push   %rbp
    4495:	48 89 e5             	mov    %rsp,%rbp
    4498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    449c:	90                   	nop
    449d:	5d                   	pop    %rbp
    449e:	c3                   	ret

000000000000449f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    449f:	55                   	push   %rbp
    44a0:	48 89 e5             	mov    %rsp,%rbp
    44a3:	48 83 ec 20          	sub    $0x20,%rsp
    44a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44af:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    44b3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    44b8:	75 06                	jne    44c0 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    44ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44be:	eb 3a                	jmp    44fa <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    44c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    44c4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    44cb:	00 
    44cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44d0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    44d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    44d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44dc:	48 89 ce             	mov    %rcx,%rsi
    44df:	48 89 c7             	mov    %rax,%rdi
    44e2:	e8 15 00 00 00       	call   44fc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    44e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    44eb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    44f2:	00 
    44f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44f7:	48 01 d0             	add    %rdx,%rax
    }
    44fa:	c9                   	leave
    44fb:	c3                   	ret

00000000000044fc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    44fc:	55                   	push   %rbp
    44fd:	48 89 e5             	mov    %rsp,%rbp
    4500:	48 83 ec 20          	sub    $0x20,%rsp
    4504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4508:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    450c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    4510:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4514:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    451c:	48 89 ce             	mov    %rcx,%rsi
    451f:	48 89 c7             	mov    %rax,%rdi
    4522:	e8 03 00 00 00       	call   452a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    4527:	90                   	nop
    4528:	c9                   	leave
    4529:	c3                   	ret

000000000000452a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    452a:	55                   	push   %rbp
    452b:	48 89 e5             	mov    %rsp,%rbp
    452e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4532:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4536:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    453a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    453e:	48 8b 00             	mov    (%rax),%rax
    4541:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    4545:	eb 10                	jmp    4557 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    4547:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    454b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    454f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    4552:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    4557:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    455b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    455f:	75 e6                	jne    4547 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    4561:	90                   	nop
    4562:	90                   	nop
    4563:	5d                   	pop    %rbp
    4564:	c3                   	ret

0000000000004565 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    4565:	55                   	push   %rbp
    4566:	48 89 e5             	mov    %rsp,%rbp
    4569:	48 83 ec 20          	sub    $0x20,%rsp
    456d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4570:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4573:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    4577:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    457b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    457f:	be 00 00 00 00       	mov    $0x0,%esi
    4584:	bf 01 20 02 00       	mov    $0x22001,%edi
    4589:	e8 e2 ec ff ff       	call   3270 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    458e:	be 00 00 00 00       	mov    $0x0,%esi
    4593:	bf 03 00 02 00       	mov    $0x20003,%edi
    4598:	e8 d3 ec ff ff       	call   3270 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    459d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    45a1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    45a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45a9:	8b 75 f8             	mov    -0x8(%rbp),%esi
    45ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    45af:	49 89 f8             	mov    %rdi,%r8
    45b2:	89 c7                	mov    %eax,%edi
    45b4:	e8 77 ef ff ff       	call   3530 <glfwCreateWindow@plt>
}
    45b9:	c9                   	leave
    45ba:	c3                   	ret

00000000000045bb <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    45bb:	55                   	push   %rbp
    45bc:	48 89 e5             	mov    %rsp,%rbp
    45bf:	41 54                	push   %r12
    45c1:	53                   	push   %rbx
    45c2:	48 83 ec 20          	sub    $0x20,%rsp
    45c6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    45ca:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    45ce:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    45d2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    45d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    45da:	48 89 ce             	mov    %rcx,%rsi
    45dd:	48 89 c7             	mov    %rax,%rdi
    45e0:	e8 4b ee ff ff       	call   3430 <vkCreateInstance@plt>
    45e5:	85 c0                	test   %eax,%eax
    45e7:	0f 95 c0             	setne  %al
    45ea:	84 c0                	test   %al,%al
    45ec:	74 3b                	je     4629 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    45ee:	bf 10 00 00 00       	mov    $0x10,%edi
    45f3:	e8 48 eb ff ff       	call   3140 <__cxa_allocate_exception@plt>
    45f8:	48 89 c3             	mov    %rax,%rbx
    45fb:	48 8d 05 4e ec 00 00 	lea    0xec4e(%rip),%rax        # 13250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4602:	48 89 c6             	mov    %rax,%rsi
    4605:	48 89 df             	mov    %rbx,%rdi
    4608:	e8 d3 ea ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    460d:	48 8b 05 94 b9 01 00 	mov    0x1b994(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4614:	48 89 c2             	mov    %rax,%rdx
    4617:	48 8d 05 22 b7 01 00 	lea    0x1b722(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    461e:	48 89 c6             	mov    %rax,%rsi
    4621:	48 89 df             	mov    %rbx,%rdi
    4624:	e8 57 ef ff ff       	call   3580 <__cxa_throw@plt>
  }
  return instance;
    4629:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    462d:	eb 16                	jmp    4645 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    462f:	49 89 c4             	mov    %rax,%r12
    4632:	48 89 df             	mov    %rbx,%rdi
    4635:	e8 b6 eb ff ff       	call   31f0 <__cxa_free_exception@plt>
    463a:	4c 89 e0             	mov    %r12,%rax
    463d:	48 89 c7             	mov    %rax,%rdi
    4640:	e8 8b ef ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    4645:	48 83 c4 20          	add    $0x20,%rsp
    4649:	5b                   	pop    %rbx
    464a:	41 5c                	pop    %r12
    464c:	5d                   	pop    %rbp
    464d:	c3                   	ret

000000000000464e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    464e:	55                   	push   %rbp
    464f:	48 89 e5             	mov    %rsp,%rbp
    4652:	41 54                	push   %r12
    4654:	53                   	push   %rbx
    4655:	48 83 ec 30          	sub    $0x30,%rsp
    4659:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    465d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4661:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    4665:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4669:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    466d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    4671:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4675:	48 89 c7             	mov    %rax,%rdi
    4678:	e8 83 ee ff ff       	call   3500 <vkCreateDevice@plt>
    467d:	85 c0                	test   %eax,%eax
    467f:	0f 95 c0             	setne  %al
    4682:	84 c0                	test   %al,%al
    4684:	74 3b                	je     46c1 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    4686:	bf 10 00 00 00       	mov    $0x10,%edi
    468b:	e8 b0 ea ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4690:	48 89 c3             	mov    %rax,%rbx
    4693:	48 8d 05 d6 eb 00 00 	lea    0xebd6(%rip),%rax        # 13270 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    469a:	48 89 c6             	mov    %rax,%rsi
    469d:	48 89 df             	mov    %rbx,%rdi
    46a0:	e8 3b ea ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    46a5:	48 8b 05 fc b8 01 00 	mov    0x1b8fc(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    46ac:	48 89 c2             	mov    %rax,%rdx
    46af:	48 8d 05 8a b6 01 00 	lea    0x1b68a(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    46b6:	48 89 c6             	mov    %rax,%rsi
    46b9:	48 89 df             	mov    %rbx,%rdi
    46bc:	e8 bf ee ff ff       	call   3580 <__cxa_throw@plt>
  }
  return device;
    46c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46c5:	eb 16                	jmp    46dd <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    46c7:	49 89 c4             	mov    %rax,%r12
    46ca:	48 89 df             	mov    %rbx,%rdi
    46cd:	e8 1e eb ff ff       	call   31f0 <__cxa_free_exception@plt>
    46d2:	4c 89 e0             	mov    %r12,%rax
    46d5:	48 89 c7             	mov    %rax,%rdi
    46d8:	e8 f3 ee ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    46dd:	48 83 c4 30          	add    $0x30,%rsp
    46e1:	5b                   	pop    %rbx
    46e2:	41 5c                	pop    %r12
    46e4:	5d                   	pop    %rbp
    46e5:	c3                   	ret

00000000000046e6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    46e6:	55                   	push   %rbp
    46e7:	48 89 e5             	mov    %rsp,%rbp
    46ea:	41 54                	push   %r12
    46ec:	53                   	push   %rbx
    46ed:	48 83 ec 30          	sub    $0x30,%rsp
    46f1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    46f5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    46f9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    46fd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4701:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4705:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    4709:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    470d:	48 89 c7             	mov    %rax,%rdi
    4710:	e8 0b ee ff ff       	call   3520 <glfwCreateWindowSurface@plt>
    4715:	85 c0                	test   %eax,%eax
    4717:	0f 95 c0             	setne  %al
    471a:	84 c0                	test   %al,%al
    471c:	74 3b                	je     4759 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    471e:	bf 10 00 00 00       	mov    $0x10,%edi
    4723:	e8 18 ea ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4728:	48 89 c3             	mov    %rax,%rbx
    472b:	48 8d 05 66 eb 00 00 	lea    0xeb66(%rip),%rax        # 13298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    4732:	48 89 c6             	mov    %rax,%rsi
    4735:	48 89 df             	mov    %rbx,%rdi
    4738:	e8 a3 e9 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    473d:	48 8b 05 64 b8 01 00 	mov    0x1b864(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4744:	48 89 c2             	mov    %rax,%rdx
    4747:	48 8d 05 f2 b5 01 00 	lea    0x1b5f2(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    474e:	48 89 c6             	mov    %rax,%rsi
    4751:	48 89 df             	mov    %rbx,%rdi
    4754:	e8 27 ee ff ff       	call   3580 <__cxa_throw@plt>
  }
  return surface;
    4759:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    475d:	eb 16                	jmp    4775 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    475f:	49 89 c4             	mov    %rax,%r12
    4762:	48 89 df             	mov    %rbx,%rdi
    4765:	e8 86 ea ff ff       	call   31f0 <__cxa_free_exception@plt>
    476a:	4c 89 e0             	mov    %r12,%rax
    476d:	48 89 c7             	mov    %rax,%rdi
    4770:	e8 5b ee ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    4775:	48 83 c4 30          	add    $0x30,%rsp
    4779:	5b                   	pop    %rbx
    477a:	41 5c                	pop    %r12
    477c:	5d                   	pop    %rbp
    477d:	c3                   	ret

000000000000477e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    477e:	55                   	push   %rbp
    477f:	48 89 e5             	mov    %rsp,%rbp
    4782:	41 54                	push   %r12
    4784:	53                   	push   %rbx
    4785:	48 83 ec 30          	sub    $0x30,%rsp
    4789:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    478d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4791:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    4795:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    479c:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    479d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    47a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    47a5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    47a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47ad:	48 89 c7             	mov    %rax,%rdi
    47b0:	e8 5b ec ff ff       	call   3410 <vkCreateSwapchainKHR@plt>
    47b5:	85 c0                	test   %eax,%eax
    47b7:	0f 95 c0             	setne  %al
    47ba:	84 c0                	test   %al,%al
    47bc:	74 3b                	je     47f9 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    47be:	bf 10 00 00 00       	mov    $0x10,%edi
    47c3:	e8 78 e9 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    47c8:	48 89 c3             	mov    %rax,%rbx
    47cb:	48 8d 05 e7 ea 00 00 	lea    0xeae7(%rip),%rax        # 132b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    47d2:	48 89 c6             	mov    %rax,%rsi
    47d5:	48 89 df             	mov    %rbx,%rdi
    47d8:	e8 03 e9 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    47dd:	48 8b 05 c4 b7 01 00 	mov    0x1b7c4(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    47e4:	48 89 c2             	mov    %rax,%rdx
    47e7:	48 8d 05 52 b5 01 00 	lea    0x1b552(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    47ee:	48 89 c6             	mov    %rax,%rsi
    47f1:	48 89 df             	mov    %rbx,%rdi
    47f4:	e8 87 ed ff ff       	call   3580 <__cxa_throw@plt>
  }
  return swapchain;
    47f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    47fd:	eb 16                	jmp    4815 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    47ff:	49 89 c4             	mov    %rax,%r12
    4802:	48 89 df             	mov    %rbx,%rdi
    4805:	e8 e6 e9 ff ff       	call   31f0 <__cxa_free_exception@plt>
    480a:	4c 89 e0             	mov    %r12,%rax
    480d:	48 89 c7             	mov    %rax,%rdi
    4810:	e8 bb ed ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    4815:	48 83 c4 30          	add    $0x30,%rsp
    4819:	5b                   	pop    %rbx
    481a:	41 5c                	pop    %r12
    481c:	5d                   	pop    %rbp
    481d:	c3                   	ret

000000000000481e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    481e:	55                   	push   %rbp
    481f:	48 89 e5             	mov    %rsp,%rbp
    4822:	41 54                	push   %r12
    4824:	53                   	push   %rbx
    4825:	48 83 ec 30          	sub    $0x30,%rsp
    4829:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    482d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4831:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    4835:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4839:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    483d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    4841:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4845:	48 89 c7             	mov    %rax,%rdi
    4848:	e8 f3 ea ff ff       	call   3340 <vkCreateImageView@plt>
    484d:	85 c0                	test   %eax,%eax
    484f:	0f 95 c0             	setne  %al
    4852:	84 c0                	test   %al,%al
    4854:	74 3b                	je     4891 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    4856:	bf 10 00 00 00       	mov    $0x10,%edi
    485b:	e8 e0 e8 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4860:	48 89 c3             	mov    %rax,%rbx
    4863:	48 8d 05 6e ea 00 00 	lea    0xea6e(%rip),%rax        # 132d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    486a:	48 89 c6             	mov    %rax,%rsi
    486d:	48 89 df             	mov    %rbx,%rdi
    4870:	e8 6b e8 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4875:	48 8b 05 2c b7 01 00 	mov    0x1b72c(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    487c:	48 89 c2             	mov    %rax,%rdx
    487f:	48 8d 05 ba b4 01 00 	lea    0x1b4ba(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4886:	48 89 c6             	mov    %rax,%rsi
    4889:	48 89 df             	mov    %rbx,%rdi
    488c:	e8 ef ec ff ff       	call   3580 <__cxa_throw@plt>
  }
  return imageView;
    4891:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4895:	eb 16                	jmp    48ad <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    4897:	49 89 c4             	mov    %rax,%r12
    489a:	48 89 df             	mov    %rbx,%rdi
    489d:	e8 4e e9 ff ff       	call   31f0 <__cxa_free_exception@plt>
    48a2:	4c 89 e0             	mov    %r12,%rax
    48a5:	48 89 c7             	mov    %rax,%rdi
    48a8:	e8 23 ed ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    48ad:	48 83 c4 30          	add    $0x30,%rsp
    48b1:	5b                   	pop    %rbx
    48b2:	41 5c                	pop    %r12
    48b4:	5d                   	pop    %rbp
    48b5:	c3                   	ret

00000000000048b6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:
//   return computePipelines;
// }

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    48b6:	55                   	push   %rbp
    48b7:	48 89 e5             	mov    %rsp,%rbp
    48ba:	41 54                	push   %r12
    48bc:	53                   	push   %rbx
    48bd:	48 83 ec 30          	sub    $0x30,%rsp
    48c1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    48c5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    48c9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    48cd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    48d4:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    48d5:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    48d9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    48dd:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    48e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    48e5:	48 89 c7             	mov    %rax,%rdi
    48e8:	e8 23 e8 ff ff       	call   3110 <vkCreateCommandPool@plt>
    48ed:	85 c0                	test   %eax,%eax
    48ef:	0f 95 c0             	setne  %al
    48f2:	84 c0                	test   %al,%al
    48f4:	74 3b                	je     4931 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    48f6:	bf 10 00 00 00       	mov    $0x10,%edi
    48fb:	e8 40 e8 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4900:	48 89 c3             	mov    %rax,%rbx
    4903:	48 8d 05 ee e9 00 00 	lea    0xe9ee(%rip),%rax        # 132f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    490a:	48 89 c6             	mov    %rax,%rsi
    490d:	48 89 df             	mov    %rbx,%rdi
    4910:	e8 cb e7 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4915:	48 8b 05 8c b6 01 00 	mov    0x1b68c(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    491c:	48 89 c2             	mov    %rax,%rdx
    491f:	48 8d 05 1a b4 01 00 	lea    0x1b41a(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4926:	48 89 c6             	mov    %rax,%rsi
    4929:	48 89 df             	mov    %rbx,%rdi
    492c:	e8 4f ec ff ff       	call   3580 <__cxa_throw@plt>
  }
  return commandPool;
    4931:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4935:	eb 16                	jmp    494d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    4937:	49 89 c4             	mov    %rax,%r12
    493a:	48 89 df             	mov    %rbx,%rdi
    493d:	e8 ae e8 ff ff       	call   31f0 <__cxa_free_exception@plt>
    4942:	4c 89 e0             	mov    %r12,%rax
    4945:	48 89 c7             	mov    %rax,%rdi
    4948:	e8 83 ec ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    494d:	48 83 c4 30          	add    $0x30,%rsp
    4951:	5b                   	pop    %rbx
    4952:	41 5c                	pop    %r12
    4954:	5d                   	pop    %rbp
    4955:	c3                   	ret

0000000000004956 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    4956:	55                   	push   %rbp
    4957:	48 89 e5             	mov    %rsp,%rbp
    495a:	48 83 ec 10          	sub    $0x10,%rsp
    495e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4966:	48 89 c7             	mov    %rax,%rdi
    4969:	e8 42 e7 ff ff       	call   30b0 <glfwDestroyWindow@plt>
    496e:	90                   	nop
    496f:	c9                   	leave
    4970:	c3                   	ret

0000000000004971 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    4971:	55                   	push   %rbp
    4972:	48 89 e5             	mov    %rsp,%rbp
    4975:	48 83 ec 10          	sub    $0x10,%rsp
    4979:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    497d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    4981:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4989:	48 89 d6             	mov    %rdx,%rsi
    498c:	48 89 c7             	mov    %rax,%rdi
    498f:	e8 8c e9 ff ff       	call   3320 <vkDestroyInstance@plt>
}
    4994:	90                   	nop
    4995:	c9                   	leave
    4996:	c3                   	ret

0000000000004997 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    4997:	55                   	push   %rbp
    4998:	48 89 e5             	mov    %rsp,%rbp
    499b:	48 83 ec 10          	sub    $0x10,%rsp
    499f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    49a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    49ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49af:	48 89 d6             	mov    %rdx,%rsi
    49b2:	48 89 c7             	mov    %rax,%rdi
    49b5:	e8 86 e8 ff ff       	call   3240 <vkDestroyDevice@plt>
}
    49ba:	90                   	nop
    49bb:	c9                   	leave
    49bc:	c3                   	ret

00000000000049bd <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    49bd:	55                   	push   %rbp
    49be:	48 89 e5             	mov    %rsp,%rbp
    49c1:	48 83 ec 20          	sub    $0x20,%rsp
    49c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    49cd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    49d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    49d5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    49d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49dd:	48 89 ce             	mov    %rcx,%rsi
    49e0:	48 89 c7             	mov    %rax,%rdi
    49e3:	e8 d8 eb ff ff       	call   35c0 <vkDestroySurfaceKHR@plt>
}
    49e8:	90                   	nop
    49e9:	c9                   	leave
    49ea:	c3                   	ret

00000000000049eb <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    49eb:	55                   	push   %rbp
    49ec:	48 89 e5             	mov    %rsp,%rbp
    49ef:	48 83 ec 20          	sub    $0x20,%rsp
    49f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    49fb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    49ff:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a03:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a0b:	48 89 ce             	mov    %rcx,%rsi
    4a0e:	48 89 c7             	mov    %rax,%rdi
    4a11:	e8 8a e6 ff ff       	call   30a0 <vkDestroySwapchainKHR@plt>
}
    4a16:	90                   	nop
    4a17:	c9                   	leave
    4a18:	c3                   	ret

0000000000004a19 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    4a19:	55                   	push   %rbp
    4a1a:	48 89 e5             	mov    %rsp,%rbp
    4a1d:	48 83 ec 20          	sub    $0x20,%rsp
    4a21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a25:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4a29:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    4a2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a31:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a39:	48 89 ce             	mov    %rcx,%rsi
    4a3c:	48 89 c7             	mov    %rax,%rdi
    4a3f:	e8 ac eb ff ff       	call   35f0 <vkDestroyImageView@plt>
}
    4a44:	90                   	nop
    4a45:	c9                   	leave
    4a46:	c3                   	ret

0000000000004a47 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    4a47:	55                   	push   %rbp
    4a48:	48 89 e5             	mov    %rsp,%rbp
    4a4b:	48 83 ec 20          	sub    $0x20,%rsp
    4a4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4a57:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    4a5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a5f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a67:	48 89 ce             	mov    %rcx,%rsi
    4a6a:	48 89 c7             	mov    %rax,%rdi
    4a6d:	e8 3e e9 ff ff       	call   33b0 <vkDestroyPipeline@plt>
}
    4a72:	90                   	nop
    4a73:	c9                   	leave
    4a74:	c3                   	ret

0000000000004a75 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    4a75:	55                   	push   %rbp
    4a76:	48 89 e5             	mov    %rsp,%rbp
    4a79:	48 83 ec 40          	sub    $0x40,%rsp
    4a7d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4a81:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4a85:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    4a89:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4a8d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a95:	48 89 c7             	mov    %rax,%rdi
    4a98:	e8 95 00 00 00       	call   4b32 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    4a9d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa5:	48 89 c7             	mov    %rax,%rdi
    4aa8:	e8 ab 00 00 00       	call   4b58 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    4aad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4ab1:	eb 36                	jmp    4ae9 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    4ab3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4ab7:	48 89 c7             	mov    %rax,%rdi
    4aba:	e8 1d 01 00 00       	call   4bdc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    4abf:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    4ac3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ac7:	48 8b 08             	mov    (%rax),%rcx
    4aca:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4ace:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ad2:	48 89 ce             	mov    %rcx,%rsi
    4ad5:	48 89 c7             	mov    %rax,%rdi
    4ad8:	e8 d3 e8 ff ff       	call   33b0 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    4add:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4ae1:	48 89 c7             	mov    %rax,%rdi
    4ae4:	e8 d3 00 00 00       	call   4bbc <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    4ae9:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4aed:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4af1:	48 89 d6             	mov    %rdx,%rsi
    4af4:	48 89 c7             	mov    %rax,%rdi
    4af7:	e8 85 00 00 00       	call   4b81 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    4afc:	84 c0                	test   %al,%al
    4afe:	75 b3                	jne    4ab3 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    4b00:	90                   	nop
    4b01:	90                   	nop
    4b02:	c9                   	leave
    4b03:	c3                   	ret

0000000000004b04 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    4b04:	55                   	push   %rbp
    4b05:	48 89 e5             	mov    %rsp,%rbp
    4b08:	48 83 ec 20          	sub    $0x20,%rsp
    4b0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4b14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    4b18:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b1c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4b20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b24:	48 89 ce             	mov    %rcx,%rsi
    4b27:	48 89 c7             	mov    %rax,%rdi
    4b2a:	e8 b1 e9 ff ff       	call   34e0 <vkDestroyCommandPool@plt>
}
    4b2f:	90                   	nop
    4b30:	c9                   	leave
    4b31:	c3                   	ret

0000000000004b32 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4b32:	55                   	push   %rbp
    4b33:	48 89 e5             	mov    %rsp,%rbp
    4b36:	48 83 ec 20          	sub    $0x20,%rsp
    4b3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4b3e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b42:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4b46:	48 89 d6             	mov    %rdx,%rsi
    4b49:	48 89 c7             	mov    %rax,%rdi
    4b4c:	e8 9d 00 00 00       	call   4bee <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4b51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b55:	c9                   	leave
    4b56:	c3                   	ret
    4b57:	90                   	nop

0000000000004b58 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    4b58:	55                   	push   %rbp
    4b59:	48 89 e5             	mov    %rsp,%rbp
    4b5c:	48 83 ec 20          	sub    $0x20,%rsp
    4b60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    4b64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b68:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4b6c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4b70:	48 89 d6             	mov    %rdx,%rsi
    4b73:	48 89 c7             	mov    %rax,%rdi
    4b76:	e8 73 00 00 00       	call   4bee <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    4b7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b7f:	c9                   	leave
    4b80:	c3                   	ret

0000000000004b81 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    4b81:	55                   	push   %rbp
    4b82:	48 89 e5             	mov    %rsp,%rbp
    4b85:	53                   	push   %rbx
    4b86:	48 83 ec 18          	sub    $0x18,%rsp
    4b8a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4b8e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    4b92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b96:	48 89 c7             	mov    %rax,%rdi
    4b99:	e8 6e 00 00 00       	call   4c0c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    4b9e:	48 8b 18             	mov    (%rax),%rbx
    4ba1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ba5:	48 89 c7             	mov    %rax,%rdi
    4ba8:	e8 5f 00 00 00       	call   4c0c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    4bad:	48 8b 00             	mov    (%rax),%rax
    4bb0:	48 39 c3             	cmp    %rax,%rbx
    4bb3:	0f 95 c0             	setne  %al
    4bb6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bba:	c9                   	leave
    4bbb:	c3                   	ret

0000000000004bbc <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    4bbc:	55                   	push   %rbp
    4bbd:	48 89 e5             	mov    %rsp,%rbp
    4bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    4bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bc8:	48 8b 00             	mov    (%rax),%rax
    4bcb:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4bcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    4bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    4bda:	5d                   	pop    %rbp
    4bdb:	c3                   	ret

0000000000004bdc <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    4bdc:	55                   	push   %rbp
    4bdd:	48 89 e5             	mov    %rsp,%rbp
    4be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    4be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4be8:	48 8b 00             	mov    (%rax),%rax
    4beb:	5d                   	pop    %rbp
    4bec:	c3                   	ret
    4bed:	90                   	nop

0000000000004bee <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    4bee:	55                   	push   %rbp
    4bef:	48 89 e5             	mov    %rsp,%rbp
    4bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    4bfa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4bfe:	48 8b 10             	mov    (%rax),%rdx
    4c01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c05:	48 89 10             	mov    %rdx,(%rax)
    4c08:	90                   	nop
    4c09:	5d                   	pop    %rbp
    4c0a:	c3                   	ret
    4c0b:	90                   	nop

0000000000004c0c <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    4c0c:	55                   	push   %rbp
    4c0d:	48 89 e5             	mov    %rsp,%rbp
    4c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    4c14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c18:	5d                   	pop    %rbp
    4c19:	c3                   	ret

0000000000004c1a <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    4c1a:	55                   	push   %rbp
    4c1b:	48 89 e5             	mov    %rsp,%rbp
    4c1e:	53                   	push   %rbx
    4c1f:	48 83 ec 28          	sub    $0x28,%rsp
    4c23:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    4c27:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4c2b:	be 00 00 00 00       	mov    $0x0,%esi
    4c30:	48 89 c7             	mov    %rax,%rdi
    4c33:	e8 a8 e7 ff ff       	call   33e0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    4c38:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4c3b:	89 c3                	mov    %eax,%ebx
    4c3d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4c41:	48 89 c7             	mov    %rax,%rdi
    4c44:	e8 47 11 00 00       	call   5d90 <_ZNSaI17VkLayerPropertiesEC1Ev>
    4c49:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4c4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c51:	48 89 de             	mov    %rbx,%rsi
    4c54:	48 89 c7             	mov    %rax,%rdi
    4c57:	e8 6c 11 00 00       	call   5dc8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    4c5c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4c60:	48 89 c7             	mov    %rax,%rdi
    4c63:	e8 44 11 00 00       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    4c68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c6c:	48 89 c7             	mov    %rax,%rdi
    4c6f:	e8 0e 12 00 00       	call   5e82 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    4c74:	48 89 c2             	mov    %rax,%rdx
    4c77:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4c7b:	48 89 d6             	mov    %rdx,%rsi
    4c7e:	48 89 c7             	mov    %rax,%rdi
    4c81:	e8 5a e7 ff ff       	call   33e0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    4c86:	eb 34                	jmp    4cbc <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    4c88:	48 89 c3             	mov    %rax,%rbx
    4c8b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4c8f:	48 89 c7             	mov    %rax,%rdi
    4c92:	e8 15 11 00 00       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
    4c97:	48 89 d8             	mov    %rbx,%rax
    4c9a:	48 89 c7             	mov    %rax,%rdi
    4c9d:	e8 2e e9 ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    4ca2:	48 89 c3             	mov    %rax,%rbx
    4ca5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ca9:	48 89 c7             	mov    %rax,%rdi
    4cac:	e8 8d 11 00 00       	call   5e3e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    4cb1:	48 89 d8             	mov    %rbx,%rax
    4cb4:	48 89 c7             	mov    %rax,%rdi
    4cb7:	e8 14 e9 ff ff       	call   35d0 <_Unwind_Resume@plt>
    4cbc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cc0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4cc4:	c9                   	leave
    4cc5:	c3                   	ret

0000000000004cc6 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    4cc6:	55                   	push   %rbp
    4cc7:	48 89 e5             	mov    %rsp,%rbp
    4cca:	41 54                	push   %r12
    4ccc:	53                   	push   %rbx
    4ccd:	48 83 ec 20          	sub    $0x20,%rsp
    4cd1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4cd5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    4cd9:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4cdd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4ce1:	ba 00 00 00 00       	mov    $0x0,%edx
    4ce6:	48 89 ce             	mov    %rcx,%rsi
    4ce9:	48 89 c7             	mov    %rax,%rdi
    4cec:	e8 5f e5 ff ff       	call   3250 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    4cf1:	85 c0                	test   %eax,%eax
    4cf3:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    4cf6:	84 c0                	test   %al,%al
    4cf8:	74 3b                	je     4d35 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    4cfa:	bf 10 00 00 00       	mov    $0x10,%edi
    4cff:	e8 3c e4 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4d04:	48 89 c3             	mov    %rax,%rbx
    4d07:	48 8d 05 ba f1 00 00 	lea    0xf1ba(%rip),%rax        # 13ec8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4d0e:	48 89 c6             	mov    %rax,%rsi
    4d11:	48 89 df             	mov    %rbx,%rdi
    4d14:	e8 c7 e3 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4d19:	48 8b 05 88 b2 01 00 	mov    0x1b288(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4d20:	48 89 c2             	mov    %rax,%rdx
    4d23:	48 8d 05 16 b0 01 00 	lea    0x1b016(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4d2a:	48 89 c6             	mov    %rax,%rsi
    4d2d:	48 89 df             	mov    %rbx,%rdi
    4d30:	e8 4b e8 ff ff       	call   3580 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    4d35:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4d38:	89 c3                	mov    %eax,%ebx
    4d3a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d3e:	48 89 c7             	mov    %rax,%rdi
    4d41:	e8 b8 11 00 00       	call   5efe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    4d46:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d4e:	48 89 de             	mov    %rbx,%rsi
    4d51:	48 89 c7             	mov    %rax,%rdi
    4d54:	e8 dd 11 00 00       	call   5f36 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    4d59:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d5d:	48 89 c7             	mov    %rax,%rdi
    4d60:	e8 b5 11 00 00       	call   5f1a <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    4d65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d69:	48 89 c7             	mov    %rax,%rdi
    4d6c:	e8 7f 12 00 00       	call   5ff0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    4d71:	48 89 c2             	mov    %rax,%rdx
    4d74:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4d78:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d7c:	48 89 ce             	mov    %rcx,%rsi
    4d7f:	48 89 c7             	mov    %rax,%rdi
    4d82:	e8 c9 e4 ff ff       	call   3250 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    4d87:	85 c0                	test   %eax,%eax
    4d89:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    4d8c:	84 c0                	test   %al,%al
    4d8e:	0f 84 95 00 00 00    	je     4e29 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    4d94:	bf 10 00 00 00       	mov    $0x10,%edi
    4d99:	e8 a2 e3 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4d9e:	48 89 c3             	mov    %rax,%rbx
    4da1:	48 8d 05 20 f1 00 00 	lea    0xf120(%rip),%rax        # 13ec8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4da8:	48 89 c6             	mov    %rax,%rsi
    4dab:	48 89 df             	mov    %rbx,%rdi
    4dae:	e8 2d e3 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4db3:	48 8b 05 ee b1 01 00 	mov    0x1b1ee(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4dba:	48 89 c2             	mov    %rax,%rdx
    4dbd:	48 8d 05 7c af 01 00 	lea    0x1af7c(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4dc4:	48 89 c6             	mov    %rax,%rsi
    4dc7:	48 89 df             	mov    %rbx,%rdi
    4dca:	e8 b1 e7 ff ff       	call   3580 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    4dcf:	49 89 c4             	mov    %rax,%r12
    4dd2:	48 89 df             	mov    %rbx,%rdi
    4dd5:	e8 16 e4 ff ff       	call   31f0 <__cxa_free_exception@plt>
    4dda:	4c 89 e0             	mov    %r12,%rax
    4ddd:	48 89 c7             	mov    %rax,%rdi
    4de0:	e8 eb e7 ff ff       	call   35d0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    4de5:	48 89 c3             	mov    %rax,%rbx
    4de8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4dec:	48 89 c7             	mov    %rax,%rdi
    4def:	e8 26 11 00 00       	call   5f1a <_ZNSaI21VkExtensionPropertiesED1Ev>
    4df4:	48 89 d8             	mov    %rbx,%rax
    4df7:	48 89 c7             	mov    %rax,%rdi
    4dfa:	e8 d1 e7 ff ff       	call   35d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    4dff:	49 89 c4             	mov    %rax,%r12
    4e02:	48 89 df             	mov    %rbx,%rdi
    4e05:	e8 e6 e3 ff ff       	call   31f0 <__cxa_free_exception@plt>
    4e0a:	4c 89 e3             	mov    %r12,%rbx
    4e0d:	eb 03                	jmp    4e12 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    4e0f:	48 89 c3             	mov    %rax,%rbx
    4e12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e16:	48 89 c7             	mov    %rax,%rdi
    4e19:	e8 8e 11 00 00       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4e1e:	48 89 d8             	mov    %rbx,%rax
    4e21:	48 89 c7             	mov    %rax,%rdi
    4e24:	e8 a7 e7 ff ff       	call   35d0 <_Unwind_Resume@plt>
  return instanceExtensions;
    4e29:	90                   	nop
}
    4e2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e2e:	48 83 c4 20          	add    $0x20,%rsp
    4e32:	5b                   	pop    %rbx
    4e33:	41 5c                	pop    %r12
    4e35:	5d                   	pop    %rbp
    4e36:	c3                   	ret

0000000000004e37 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    4e37:	55                   	push   %rbp
    4e38:	48 89 e5             	mov    %rsp,%rbp
    4e3b:	41 54                	push   %r12
    4e3d:	53                   	push   %rbx
    4e3e:	48 83 ec 30          	sub    $0x30,%rsp
    4e42:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e46:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4e4a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    4e4e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4e52:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4e56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4e5a:	b9 00 00 00 00       	mov    $0x0,%ecx
    4e5f:	48 89 c7             	mov    %rax,%rdi
    4e62:	e8 59 e6 ff ff       	call   34c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    4e67:	85 c0                	test   %eax,%eax
    4e69:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    4e6c:	84 c0                	test   %al,%al
    4e6e:	74 3b                	je     4eab <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    4e70:	bf 10 00 00 00       	mov    $0x10,%edi
    4e75:	e8 c6 e2 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4e7a:	48 89 c3             	mov    %rax,%rbx
    4e7d:	48 8d 05 6c f0 00 00 	lea    0xf06c(%rip),%rax        # 13ef0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    4e84:	48 89 c6             	mov    %rax,%rsi
    4e87:	48 89 df             	mov    %rbx,%rdi
    4e8a:	e8 51 e2 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4e8f:	48 8b 05 12 b1 01 00 	mov    0x1b112(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4e96:	48 89 c2             	mov    %rax,%rdx
    4e99:	48 8d 05 a0 ae 01 00 	lea    0x1aea0(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4ea0:	48 89 c6             	mov    %rax,%rsi
    4ea3:	48 89 df             	mov    %rbx,%rdi
    4ea6:	e8 d5 e6 ff ff       	call   3580 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    4eab:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4eae:	89 c3                	mov    %eax,%ebx
    4eb0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4eb4:	48 89 c7             	mov    %rax,%rdi
    4eb7:	e8 42 10 00 00       	call   5efe <_ZNSaI21VkExtensionPropertiesEC1Ev>
    4ebc:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4ec0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ec4:	48 89 de             	mov    %rbx,%rsi
    4ec7:	48 89 c7             	mov    %rax,%rdi
    4eca:	e8 67 10 00 00       	call   5f36 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    4ecf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4ed3:	48 89 c7             	mov    %rax,%rdi
    4ed6:	e8 3f 10 00 00       	call   5f1a <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    4edb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4edf:	48 89 c7             	mov    %rax,%rdi
    4ee2:	e8 09 11 00 00       	call   5ff0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    4ee7:	48 89 c1             	mov    %rax,%rcx
    4eea:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4eee:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    4ef2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4ef6:	48 89 c7             	mov    %rax,%rdi
    4ef9:	e8 c2 e5 ff ff       	call   34c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    4efe:	85 c0                	test   %eax,%eax
    4f00:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    4f03:	84 c0                	test   %al,%al
    4f05:	0f 84 95 00 00 00    	je     4fa0 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    4f0b:	bf 10 00 00 00       	mov    $0x10,%edi
    4f10:	e8 2b e2 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    4f15:	48 89 c3             	mov    %rax,%rbx
    4f18:	48 8d 05 d1 ef 00 00 	lea    0xefd1(%rip),%rax        # 13ef0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    4f1f:	48 89 c6             	mov    %rax,%rsi
    4f22:	48 89 df             	mov    %rbx,%rdi
    4f25:	e8 b6 e1 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    4f2a:	48 8b 05 77 b0 01 00 	mov    0x1b077(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4f31:	48 89 c2             	mov    %rax,%rdx
    4f34:	48 8d 05 05 ae 01 00 	lea    0x1ae05(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4f3b:	48 89 c6             	mov    %rax,%rsi
    4f3e:	48 89 df             	mov    %rbx,%rdi
    4f41:	e8 3a e6 ff ff       	call   3580 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    4f46:	49 89 c4             	mov    %rax,%r12
    4f49:	48 89 df             	mov    %rbx,%rdi
    4f4c:	e8 9f e2 ff ff       	call   31f0 <__cxa_free_exception@plt>
    4f51:	4c 89 e0             	mov    %r12,%rax
    4f54:	48 89 c7             	mov    %rax,%rdi
    4f57:	e8 74 e6 ff ff       	call   35d0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    4f5c:	48 89 c3             	mov    %rax,%rbx
    4f5f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4f63:	48 89 c7             	mov    %rax,%rdi
    4f66:	e8 af 0f 00 00       	call   5f1a <_ZNSaI21VkExtensionPropertiesED1Ev>
    4f6b:	48 89 d8             	mov    %rbx,%rax
    4f6e:	48 89 c7             	mov    %rax,%rdi
    4f71:	e8 5a e6 ff ff       	call   35d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    4f76:	49 89 c4             	mov    %rax,%r12
    4f79:	48 89 df             	mov    %rbx,%rdi
    4f7c:	e8 6f e2 ff ff       	call   31f0 <__cxa_free_exception@plt>
    4f81:	4c 89 e3             	mov    %r12,%rbx
    4f84:	eb 03                	jmp    4f89 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    4f86:	48 89 c3             	mov    %rax,%rbx
    4f89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f8d:	48 89 c7             	mov    %rax,%rdi
    4f90:	e8 17 10 00 00       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4f95:	48 89 d8             	mov    %rbx,%rax
    4f98:	48 89 c7             	mov    %rax,%rdi
    4f9b:	e8 30 e6 ff ff       	call   35d0 <_Unwind_Resume@plt>
  return deviceExtensions;
    4fa0:	90                   	nop
}
    4fa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fa5:	48 83 c4 30          	add    $0x30,%rsp
    4fa9:	5b                   	pop    %rbx
    4faa:	41 5c                	pop    %r12
    4fac:	5d                   	pop    %rbp
    4fad:	c3                   	ret

0000000000004fae <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    4fae:	55                   	push   %rbp
    4faf:	48 89 e5             	mov    %rsp,%rbp
    4fb2:	53                   	push   %rbx
    4fb3:	48 83 ec 38          	sub    $0x38,%rsp
    4fb7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    4fbb:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4fbf:	48 89 c7             	mov    %rax,%rdi
    4fc2:	e8 49 e2 ff ff       	call   3210 <glfwGetRequiredInstanceExtensions@plt>
    4fc7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    4fcb:	8b 45 d8             	mov    -0x28(%rbp),%eax
    4fce:	89 c3                	mov    %eax,%ebx
    4fd0:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4fd4:	48 89 c7             	mov    %rax,%rdi
    4fd7:	e8 90 10 00 00       	call   606c <_ZNSaIPKcEC1Ev>
    4fdc:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    4fe0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4fe4:	48 89 de             	mov    %rbx,%rsi
    4fe7:	48 89 c7             	mov    %rax,%rdi
    4fea:	e8 b5 10 00 00       	call   60a4 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    4fef:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4ff3:	48 89 c7             	mov    %rax,%rdi
    4ff6:	e8 8d 10 00 00       	call   6088 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    4ffb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    5002:	eb 2e                	jmp    5032 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    5004:	8b 45 ec             	mov    -0x14(%rbp),%eax
    5007:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    500e:	00 
    500f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5013:	48 01 d0             	add    %rdx,%rax
    5016:	48 8b 18             	mov    (%rax),%rbx
    5019:	8b 55 ec             	mov    -0x14(%rbp),%edx
    501c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5020:	48 89 d6             	mov    %rdx,%rsi
    5023:	48 89 c7             	mov    %rax,%rdi
    5026:	e8 ef 10 00 00       	call   611a <_ZNSt6vectorIPKcSaIS1_EEixEm>
    502b:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    502e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    5032:	8b 45 d8             	mov    -0x28(%rbp),%eax
    5035:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    5038:	72 ca                	jb     5004 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    503a:	eb 1a                	jmp    5056 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    503c:	48 89 c3             	mov    %rax,%rbx
    503f:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5043:	48 89 c7             	mov    %rax,%rdi
    5046:	e8 3d 10 00 00       	call   6088 <_ZNSaIPKcED1Ev>
    504b:	48 89 d8             	mov    %rbx,%rax
    504e:	48 89 c7             	mov    %rax,%rdi
    5051:	e8 7a e5 ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    5056:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    505a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    505e:	c9                   	leave
    505f:	c3                   	ret

0000000000005060 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    5060:	55                   	push   %rbp
    5061:	48 89 e5             	mov    %rsp,%rbp
    5064:	53                   	push   %rbx
    5065:	48 83 ec 28          	sub    $0x28,%rsp
    5069:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    506d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5071:	be 00 00 00 00       	mov    $0x0,%esi
    5076:	48 89 c7             	mov    %rax,%rdi
    5079:	e8 62 e3 ff ff       	call   33e0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    507e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    5081:	89 c3                	mov    %eax,%ebx
    5083:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5087:	48 89 c7             	mov    %rax,%rdi
    508a:	e8 01 0d 00 00       	call   5d90 <_ZNSaI17VkLayerPropertiesEC1Ev>
    508f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    5093:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5097:	48 89 de             	mov    %rbx,%rsi
    509a:	48 89 c7             	mov    %rax,%rdi
    509d:	e8 26 0d 00 00       	call   5dc8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    50a2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    50a6:	48 89 c7             	mov    %rax,%rdi
    50a9:	e8 fe 0c 00 00       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    50ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50b2:	48 89 c7             	mov    %rax,%rdi
    50b5:	e8 c8 0d 00 00       	call   5e82 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    50ba:	48 89 c2             	mov    %rax,%rdx
    50bd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    50c1:	48 89 d6             	mov    %rdx,%rsi
    50c4:	48 89 c7             	mov    %rax,%rdi
    50c7:	e8 14 e3 ff ff       	call   33e0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    50cc:	eb 34                	jmp    5102 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    50ce:	48 89 c3             	mov    %rax,%rbx
    50d1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    50d5:	48 89 c7             	mov    %rax,%rdi
    50d8:	e8 cf 0c 00 00       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
    50dd:	48 89 d8             	mov    %rbx,%rax
    50e0:	48 89 c7             	mov    %rax,%rdi
    50e3:	e8 e8 e4 ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    50e8:	48 89 c3             	mov    %rax,%rbx
    50eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50ef:	48 89 c7             	mov    %rax,%rdi
    50f2:	e8 47 0d 00 00       	call   5e3e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    50f7:	48 89 d8             	mov    %rbx,%rax
    50fa:	48 89 c7             	mov    %rax,%rdi
    50fd:	e8 ce e4 ff ff       	call   35d0 <_Unwind_Resume@plt>
    5102:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5106:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    510a:	c9                   	leave
    510b:	c3                   	ret

000000000000510c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    510c:	55                   	push   %rbp
    510d:	48 89 e5             	mov    %rsp,%rbp
    5110:	41 54                	push   %r12
    5112:	53                   	push   %rbx
    5113:	48 83 ec 20          	sub    $0x20,%rsp
    5117:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    511b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    511f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5123:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5127:	ba 00 00 00 00       	mov    $0x0,%edx
    512c:	48 89 ce             	mov    %rcx,%rsi
    512f:	48 89 c7             	mov    %rax,%rdi
    5132:	e8 29 e0 ff ff       	call   3160 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    5137:	8b 45 e8             	mov    -0x18(%rbp),%eax
    513a:	85 c0                	test   %eax,%eax
    513c:	75 3b                	jne    5179 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    513e:	bf 10 00 00 00       	mov    $0x10,%edi
    5143:	e8 f8 df ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5148:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    514b:	48 8d 05 c6 ed 00 00 	lea    0xedc6(%rip),%rax        # 13f18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    5152:	48 89 c6             	mov    %rax,%rsi
    5155:	48 89 df             	mov    %rbx,%rdi
    5158:	e8 83 df ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    515d:	48 8b 05 44 ae 01 00 	mov    0x1ae44(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5164:	48 89 c2             	mov    %rax,%rdx
    5167:	48 8d 05 d2 ab 01 00 	lea    0x1abd2(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    516e:	48 89 c6             	mov    %rax,%rsi
    5171:	48 89 df             	mov    %rbx,%rdi
    5174:	e8 07 e4 ff ff       	call   3580 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    5179:	8b 45 e8             	mov    -0x18(%rbp),%eax
    517c:	89 c3                	mov    %eax,%ebx
    517e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5182:	48 89 c7             	mov    %rax,%rdi
    5185:	e8 fe 0f 00 00       	call   6188 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    518a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    518e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5192:	48 89 de             	mov    %rbx,%rsi
    5195:	48 89 c7             	mov    %rax,%rdi
    5198:	e8 23 10 00 00       	call   61c0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    519d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    51a1:	48 89 c7             	mov    %rax,%rdi
    51a4:	e8 fb 0f 00 00       	call   61a4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    51a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    51ad:	48 89 c7             	mov    %rax,%rdi
    51b0:	e8 c5 10 00 00       	call   627a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    51b5:	48 89 c2             	mov    %rax,%rdx
    51b8:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    51bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    51c0:	48 89 ce             	mov    %rcx,%rsi
    51c3:	48 89 c7             	mov    %rax,%rdi
    51c6:	e8 95 df ff ff       	call   3160 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    51cb:	85 c0                	test   %eax,%eax
    51cd:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    51d0:	84 c0                	test   %al,%al
    51d2:	0f 84 95 00 00 00    	je     526d <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    51d8:	bf 10 00 00 00       	mov    $0x10,%edi
    51dd:	e8 5e df ff ff       	call   3140 <__cxa_allocate_exception@plt>
    51e2:	48 89 c3             	mov    %rax,%rbx
    51e5:	48 8d 05 64 ed 00 00 	lea    0xed64(%rip),%rax        # 13f50 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    51ec:	48 89 c6             	mov    %rax,%rsi
    51ef:	48 89 df             	mov    %rbx,%rdi
    51f2:	e8 e9 de ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    51f7:	48 8b 05 aa ad 01 00 	mov    0x1adaa(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    51fe:	48 89 c2             	mov    %rax,%rdx
    5201:	48 8d 05 38 ab 01 00 	lea    0x1ab38(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5208:	48 89 c6             	mov    %rax,%rsi
    520b:	48 89 df             	mov    %rbx,%rdi
    520e:	e8 6d e3 ff ff       	call   3580 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    5213:	49 89 c4             	mov    %rax,%r12
    5216:	48 89 df             	mov    %rbx,%rdi
    5219:	e8 d2 df ff ff       	call   31f0 <__cxa_free_exception@plt>
    521e:	4c 89 e0             	mov    %r12,%rax
    5221:	48 89 c7             	mov    %rax,%rdi
    5224:	e8 a7 e3 ff ff       	call   35d0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    5229:	48 89 c3             	mov    %rax,%rbx
    522c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5230:	48 89 c7             	mov    %rax,%rdi
    5233:	e8 6c 0f 00 00       	call   61a4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    5238:	48 89 d8             	mov    %rbx,%rax
    523b:	48 89 c7             	mov    %rax,%rdi
    523e:	e8 8d e3 ff ff       	call   35d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    5243:	49 89 c4             	mov    %rax,%r12
    5246:	48 89 df             	mov    %rbx,%rdi
    5249:	e8 a2 df ff ff       	call   31f0 <__cxa_free_exception@plt>
    524e:	4c 89 e3             	mov    %r12,%rbx
    5251:	eb 03                	jmp    5256 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    5253:	48 89 c3             	mov    %rax,%rbx
    5256:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    525a:	48 89 c7             	mov    %rax,%rdi
    525d:	e8 d4 0f 00 00       	call   6236 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5262:	48 89 d8             	mov    %rbx,%rax
    5265:	48 89 c7             	mov    %rax,%rdi
    5268:	e8 63 e3 ff ff       	call   35d0 <_Unwind_Resume@plt>
  return physicalDevices;
    526d:	90                   	nop
}
    526e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5272:	48 83 c4 20          	add    $0x20,%rsp
    5276:	5b                   	pop    %rbx
    5277:	41 5c                	pop    %r12
    5279:	5d                   	pop    %rbp
    527a:	c3                   	ret

000000000000527b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    527b:	55                   	push   %rbp
    527c:	48 89 e5             	mov    %rsp,%rbp
    527f:	48 83 ec 10          	sub    $0x10,%rsp
    5283:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5287:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    528b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    528f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5293:	48 89 d6             	mov    %rdx,%rsi
    5296:	48 89 c7             	mov    %rax,%rdi
    5299:	e8 52 de ff ff       	call   30f0 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    529e:	90                   	nop
}
    529f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a3:	c9                   	leave
    52a4:	c3                   	ret

00000000000052a5 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    52a5:	55                   	push   %rbp
    52a6:	48 89 e5             	mov    %rsp,%rbp
    52a9:	48 83 ec 20          	sub    $0x20,%rsp
    52ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    52b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52bd:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    52c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52cb:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    52cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    52d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52d7:	48 89 d6             	mov    %rdx,%rsi
    52da:	48 89 c7             	mov    %rax,%rdi
    52dd:	e8 de df ff ff       	call   32c0 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    52e2:	90                   	nop
}
    52e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e7:	c9                   	leave
    52e8:	c3                   	ret

00000000000052e9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    52e9:	55                   	push   %rbp
    52ea:	48 89 e5             	mov    %rsp,%rbp
    52ed:	53                   	push   %rbx
    52ee:	48 83 ec 28          	sub    $0x28,%rsp
    52f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    52f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    52fa:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    52fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5302:	ba 00 00 00 00       	mov    $0x0,%edx
    5307:	48 89 ce             	mov    %rcx,%rsi
    530a:	48 89 c7             	mov    %rax,%rdi
    530d:	e8 ee de ff ff       	call   3200 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    5312:	8b 45 e8             	mov    -0x18(%rbp),%eax
    5315:	89 c3                	mov    %eax,%ebx
    5317:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    531b:	48 89 c7             	mov    %rax,%rdi
    531e:	e8 c9 0f 00 00       	call   62ec <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    5323:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    5327:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    532b:	48 89 de             	mov    %rbx,%rsi
    532e:	48 89 c7             	mov    %rax,%rdi
    5331:	e8 ee 0f 00 00       	call   6324 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    5336:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    533a:	48 89 c7             	mov    %rax,%rdi
    533d:	e8 c6 0f 00 00       	call   6308 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    5342:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5346:	48 89 c7             	mov    %rax,%rdi
    5349:	e8 90 10 00 00       	call   63de <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    534e:	48 89 c2             	mov    %rax,%rdx
    5351:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5355:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5359:	48 89 ce             	mov    %rcx,%rsi
    535c:	48 89 c7             	mov    %rax,%rdi
    535f:	e8 9c de ff ff       	call   3200 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    5364:	eb 34                	jmp    539a <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    5366:	48 89 c3             	mov    %rax,%rbx
    5369:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    536d:	48 89 c7             	mov    %rax,%rdi
    5370:	e8 93 0f 00 00       	call   6308 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    5375:	48 89 d8             	mov    %rbx,%rax
    5378:	48 89 c7             	mov    %rax,%rdi
    537b:	e8 50 e2 ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    5380:	48 89 c3             	mov    %rax,%rbx
    5383:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5387:	48 89 c7             	mov    %rax,%rdi
    538a:	e8 0b 10 00 00       	call   639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    538f:	48 89 d8             	mov    %rbx,%rax
    5392:	48 89 c7             	mov    %rax,%rdi
    5395:	e8 36 e2 ff ff       	call   35d0 <_Unwind_Resume@plt>
    539a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    539e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    53a2:	c9                   	leave
    53a3:	c3                   	ret

00000000000053a4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    53a4:	55                   	push   %rbp
    53a5:	48 89 e5             	mov    %rsp,%rbp
    53a8:	53                   	push   %rbx
    53a9:	48 83 ec 68          	sub    $0x68,%rsp
    53ad:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    53b1:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    53b5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    53b9:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    53bd:	48 89 d6             	mov    %rdx,%rsi
    53c0:	48 89 c7             	mov    %rax,%rdi
    53c3:	e8 21 ff ff ff       	call   52e9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    53c8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    53cc:	48 89 c7             	mov    %rax,%rdi
    53cf:	e8 86 10 00 00       	call   645a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    53d4:	48 89 c3             	mov    %rax,%rbx
    53d7:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    53db:	48 89 c7             	mov    %rax,%rdi
    53de:	e8 a5 10 00 00       	call   6488 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    53e3:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    53e7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    53eb:	48 89 de             	mov    %rbx,%rsi
    53ee:	48 89 c7             	mov    %rax,%rdi
    53f1:	e8 ca 10 00 00       	call   64c0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    53f6:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    53fa:	48 89 c7             	mov    %rax,%rdi
    53fd:	e8 a2 10 00 00       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    5402:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5409:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    540a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    540e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5412:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5416:	48 89 c7             	mov    %rax,%rdi
    5419:	e8 5c 11 00 00       	call   657a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    541e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5422:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5426:	48 89 c7             	mov    %rax,%rdi
    5429:	e8 72 11 00 00       	call   65a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    542e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5432:	eb 4e                	jmp    5482 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    5434:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    5438:	48 89 c7             	mov    %rax,%rdi
    543b:	e8 e4 11 00 00       	call   6624 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    5440:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    5444:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5448:	8b 00                	mov    (%rax),%eax
    544a:	83 e0 01             	and    $0x1,%eax
    544d:	85 c0                	test   %eax,%eax
    544f:	74 25                	je     5476 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    5451:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5455:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5459:	48 89 d6             	mov    %rdx,%rsi
    545c:	48 89 c7             	mov    %rax,%rdi
    545f:	e8 d2 11 00 00       	call   6636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    5464:	48 89 c2             	mov    %rax,%rdx
    5467:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    546b:	48 89 c6             	mov    %rax,%rsi
    546e:	48 89 d7             	mov    %rdx,%rdi
    5471:	e8 ea 11 00 00       	call   6660 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    5476:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    547a:	48 89 c7             	mov    %rax,%rdi
    547d:	e8 82 11 00 00       	call   6604 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    5482:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    5486:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    548a:	48 89 d6             	mov    %rdx,%rsi
    548d:	48 89 c7             	mov    %rax,%rdi
    5490:	e8 34 11 00 00       	call   65c9 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    5495:	84 c0                	test   %al,%al
    5497:	75 9b                	jne    5434 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    5499:	90                   	nop
}
    549a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    549e:	48 89 c7             	mov    %rax,%rdi
    54a1:	e8 f4 0e 00 00       	call   639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    54a6:	eb 26                	jmp    54ce <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    54a8:	48 89 c3             	mov    %rax,%rbx
    54ab:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    54af:	48 89 c7             	mov    %rax,%rdi
    54b2:	e8 ed 0f 00 00       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    54b7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    54bb:	48 89 c7             	mov    %rax,%rdi
    54be:	e8 d7 0e 00 00       	call   639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    54c3:	48 89 d8             	mov    %rbx,%rax
    54c6:	48 89 c7             	mov    %rax,%rdi
    54c9:	e8 02 e1 ff ff       	call   35d0 <_Unwind_Resume@plt>
    54ce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    54d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    54d6:	c9                   	leave
    54d7:	c3                   	ret

00000000000054d8 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    54d8:	55                   	push   %rbp
    54d9:	48 89 e5             	mov    %rsp,%rbp
    54dc:	53                   	push   %rbx
    54dd:	48 83 ec 68          	sub    $0x68,%rsp
    54e1:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    54e5:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    54e9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    54ed:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    54f1:	48 89 d6             	mov    %rdx,%rsi
    54f4:	48 89 c7             	mov    %rax,%rdi
    54f7:	e8 ed fd ff ff       	call   52e9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    54fc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5500:	48 89 c7             	mov    %rax,%rdi
    5503:	e8 52 0f 00 00       	call   645a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    5508:	48 89 c3             	mov    %rax,%rbx
    550b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    550f:	48 89 c7             	mov    %rax,%rdi
    5512:	e8 71 0f 00 00       	call   6488 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    5517:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    551b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    551f:	48 89 de             	mov    %rbx,%rsi
    5522:	48 89 c7             	mov    %rax,%rdi
    5525:	e8 96 0f 00 00       	call   64c0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    552a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    552e:	48 89 c7             	mov    %rax,%rdi
    5531:	e8 6e 0f 00 00       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    5536:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    553d:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    553e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5542:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5546:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    554a:	48 89 c7             	mov    %rax,%rdi
    554d:	e8 28 10 00 00       	call   657a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    5552:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5556:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    555a:	48 89 c7             	mov    %rax,%rdi
    555d:	e8 3e 10 00 00       	call   65a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    5562:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5566:	eb 53                	jmp    55bb <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    5568:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    556c:	48 89 c7             	mov    %rax,%rdi
    556f:	e8 b0 10 00 00       	call   6624 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    5574:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    5578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    557c:	8b 00                	mov    (%rax),%eax
    557e:	83 e0 02             	and    $0x2,%eax
    5581:	85 c0                	test   %eax,%eax
    5583:	74 25                	je     55aa <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    5585:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5589:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    558d:	48 89 d6             	mov    %rdx,%rsi
    5590:	48 89 c7             	mov    %rax,%rdi
    5593:	e8 9e 10 00 00       	call   6636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    5598:	48 89 c2             	mov    %rax,%rdx
    559b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    559f:	48 89 c6             	mov    %rax,%rsi
    55a2:	48 89 d7             	mov    %rdx,%rdi
    55a5:	e8 b6 10 00 00       	call   6660 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    55aa:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    55af:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    55b3:	48 89 c7             	mov    %rax,%rdi
    55b6:	e8 49 10 00 00       	call   6604 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    55bb:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    55bf:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    55c3:	48 89 d6             	mov    %rdx,%rsi
    55c6:	48 89 c7             	mov    %rax,%rdi
    55c9:	e8 fb 0f 00 00       	call   65c9 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    55ce:	84 c0                	test   %al,%al
    55d0:	75 96                	jne    5568 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    55d2:	90                   	nop
}
    55d3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    55d7:	48 89 c7             	mov    %rax,%rdi
    55da:	e8 bb 0d 00 00       	call   639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    55df:	eb 26                	jmp    5607 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    55e1:	48 89 c3             	mov    %rax,%rbx
    55e4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    55e8:	48 89 c7             	mov    %rax,%rdi
    55eb:	e8 b4 0e 00 00       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    55f0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    55f4:	48 89 c7             	mov    %rax,%rdi
    55f7:	e8 9e 0d 00 00       	call   639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    55fc:	48 89 d8             	mov    %rbx,%rax
    55ff:	48 89 c7             	mov    %rax,%rdi
    5602:	e8 c9 df ff ff       	call   35d0 <_Unwind_Resume@plt>
    5607:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    560b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    560f:	c9                   	leave
    5610:	c3                   	ret

0000000000005611 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    5611:	55                   	push   %rbp
    5612:	48 89 e5             	mov    %rsp,%rbp
    5615:	53                   	push   %rbx
    5616:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    561d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    5621:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    5625:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    562c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5630:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    5634:	48 89 d6             	mov    %rdx,%rsi
    5637:	48 89 c7             	mov    %rax,%rdi
    563a:	e8 aa fc ff ff       	call   52e9 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    563f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5643:	48 89 c7             	mov    %rax,%rdi
    5646:	e8 0f 0e 00 00       	call   645a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    564b:	48 89 c3             	mov    %rax,%rbx
    564e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    5652:	48 89 c7             	mov    %rax,%rdi
    5655:	e8 2e 0e 00 00       	call   6488 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    565a:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    565e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5662:	48 89 de             	mov    %rbx,%rsi
    5665:	48 89 c7             	mov    %rax,%rdi
    5668:	e8 53 0e 00 00       	call   64c0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    566d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    5671:	48 89 c7             	mov    %rax,%rdi
    5674:	e8 2b 0e 00 00       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    5679:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    5680:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5684:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5688:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    568c:	48 89 c7             	mov    %rax,%rdi
    568f:	e8 e6 0e 00 00       	call   657a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    5694:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5698:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    569c:	48 89 c7             	mov    %rax,%rdi
    569f:	e8 fc 0e 00 00       	call   65a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    56a4:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    56a8:	eb 6c                	jmp    5716 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    56aa:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    56ae:	48 89 c7             	mov    %rax,%rdi
    56b1:	e8 6e 0f 00 00       	call   6624 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    56b6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    56ba:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    56c1:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    56c5:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    56cc:	8b 75 ec             	mov    -0x14(%rbp),%esi
    56cf:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    56d3:	48 89 c7             	mov    %rax,%rdi
    56d6:	e8 a5 dc ff ff       	call   3380 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    56db:	8b 45 9c             	mov    -0x64(%rbp),%eax
    56de:	85 c0                	test   %eax,%eax
    56e0:	74 24                	je     5706 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    56e2:	8b 55 ec             	mov    -0x14(%rbp),%edx
    56e5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    56e9:	48 89 d6             	mov    %rdx,%rsi
    56ec:	48 89 c7             	mov    %rax,%rdi
    56ef:	e8 42 0f 00 00       	call   6636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    56f4:	48 89 c2             	mov    %rax,%rdx
    56f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56fb:	48 89 c6             	mov    %rax,%rsi
    56fe:	48 89 d7             	mov    %rdx,%rdi
    5701:	e8 5a 0f 00 00       	call   6660 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    5706:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    570a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    570e:	48 89 c7             	mov    %rax,%rdi
    5711:	e8 ee 0e 00 00       	call   6604 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    5716:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    571a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    571e:	48 89 d6             	mov    %rdx,%rsi
    5721:	48 89 c7             	mov    %rax,%rdi
    5724:	e8 a0 0e 00 00       	call   65c9 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    5729:	84 c0                	test   %al,%al
    572b:	0f 85 79 ff ff ff    	jne    56aa <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    5731:	90                   	nop
}
    5732:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5736:	48 89 c7             	mov    %rax,%rdi
    5739:	e8 5c 0c 00 00       	call   639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    573e:	eb 37                	jmp    5777 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    5740:	48 89 c3             	mov    %rax,%rbx
    5743:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    5747:	48 89 c7             	mov    %rax,%rdi
    574a:	e8 55 0d 00 00       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    574f:	eb 0f                	jmp    5760 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    5751:	48 89 c3             	mov    %rax,%rbx
    5754:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5758:	48 89 c7             	mov    %rax,%rdi
    575b:	e8 d6 0d 00 00       	call   6536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    5760:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5764:	48 89 c7             	mov    %rax,%rdi
    5767:	e8 2e 0c 00 00       	call   639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    576c:	48 89 d8             	mov    %rbx,%rax
    576f:	48 89 c7             	mov    %rax,%rdi
    5772:	e8 59 de ff ff       	call   35d0 <_Unwind_Resume@plt>
    5777:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    577b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    577f:	c9                   	leave
    5780:	c3                   	ret

0000000000005781 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    5781:	55                   	push   %rbp
    5782:	48 89 e5             	mov    %rsp,%rbp
    5785:	41 54                	push   %r12
    5787:	53                   	push   %rbx
    5788:	48 83 ec 20          	sub    $0x20,%rsp
    578c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5790:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5794:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    5798:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    579c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    57a0:	0f 11 00             	movups %xmm0,(%rax)
    57a3:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    57a7:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    57ab:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    57b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    57b4:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    57b8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    57bc:	48 89 ce             	mov    %rcx,%rsi
    57bf:	48 89 c7             	mov    %rax,%rdi
    57c2:	e8 b9 da ff ff       	call   3280 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    57c7:	85 c0                	test   %eax,%eax
    57c9:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    57cc:	84 c0                	test   %al,%al
    57ce:	74 51                	je     5821 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    57d0:	bf 10 00 00 00       	mov    $0x10,%edi
    57d5:	e8 66 d9 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    57da:	48 89 c3             	mov    %rax,%rbx
    57dd:	48 8d 05 94 e7 00 00 	lea    0xe794(%rip),%rax        # 13f78 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    57e4:	48 89 c6             	mov    %rax,%rsi
    57e7:	48 89 df             	mov    %rbx,%rdi
    57ea:	e8 f1 d8 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    57ef:	48 8b 05 b2 a7 01 00 	mov    0x1a7b2(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    57f6:	48 89 c2             	mov    %rax,%rdx
    57f9:	48 8d 05 40 a5 01 00 	lea    0x1a540(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5800:	48 89 c6             	mov    %rax,%rsi
    5803:	48 89 df             	mov    %rbx,%rdi
    5806:	e8 75 dd ff ff       	call   3580 <__cxa_throw@plt>
    580b:	49 89 c4             	mov    %rax,%r12
    580e:	48 89 df             	mov    %rbx,%rdi
    5811:	e8 da d9 ff ff       	call   31f0 <__cxa_free_exception@plt>
    5816:	4c 89 e0             	mov    %r12,%rax
    5819:	48 89 c7             	mov    %rax,%rdi
    581c:	e8 af dd ff ff       	call   35d0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    5821:	90                   	nop
}
    5822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5826:	48 83 c4 20          	add    $0x20,%rsp
    582a:	5b                   	pop    %rbx
    582b:	41 5c                	pop    %r12
    582d:	5d                   	pop    %rbp
    582e:	c3                   	ret

000000000000582f <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    582f:	55                   	push   %rbp
    5830:	48 89 e5             	mov    %rsp,%rbp
    5833:	41 54                	push   %r12
    5835:	53                   	push   %rbx
    5836:	48 83 ec 30          	sub    $0x30,%rsp
    583a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    583e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5842:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    5846:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    584a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    584e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5852:	b9 00 00 00 00       	mov    $0x0,%ecx
    5857:	48 89 c7             	mov    %rax,%rdi
    585a:	e8 f1 db ff ff       	call   3450 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    585f:	85 c0                	test   %eax,%eax
    5861:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    5864:	84 c0                	test   %al,%al
    5866:	74 3b                	je     58a3 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    5868:	bf 10 00 00 00       	mov    $0x10,%edi
    586d:	e8 ce d8 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5872:	48 89 c3             	mov    %rax,%rbx
    5875:	48 8d 05 24 e7 00 00 	lea    0xe724(%rip),%rax        # 13fa0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    587c:	48 89 c6             	mov    %rax,%rsi
    587f:	48 89 df             	mov    %rbx,%rdi
    5882:	e8 59 d8 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5887:	48 8b 05 1a a7 01 00 	mov    0x1a71a(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    588e:	48 89 c2             	mov    %rax,%rdx
    5891:	48 8d 05 a8 a4 01 00 	lea    0x1a4a8(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5898:	48 89 c6             	mov    %rax,%rsi
    589b:	48 89 df             	mov    %rbx,%rdi
    589e:	e8 dd dc ff ff       	call   3580 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    58a3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    58a6:	89 c3                	mov    %eax,%ebx
    58a8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    58ac:	48 89 c7             	mov    %rax,%rdi
    58af:	e8 84 0e 00 00       	call   6738 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    58b4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    58b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58bc:	48 89 de             	mov    %rbx,%rsi
    58bf:	48 89 c7             	mov    %rax,%rdi
    58c2:	e8 a9 0e 00 00       	call   6770 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    58c7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    58cb:	48 89 c7             	mov    %rax,%rdi
    58ce:	e8 81 0e 00 00       	call   6754 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    58d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58d7:	48 89 c7             	mov    %rax,%rdi
    58da:	e8 4b 0f 00 00       	call   682a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    58df:	48 89 c1             	mov    %rax,%rcx
    58e2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    58e6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    58ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    58ee:	48 89 c7             	mov    %rax,%rdi
    58f1:	e8 5a db ff ff       	call   3450 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    58f6:	85 c0                	test   %eax,%eax
    58f8:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    58fb:	84 c0                	test   %al,%al
    58fd:	0f 84 95 00 00 00    	je     5998 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    5903:	bf 10 00 00 00       	mov    $0x10,%edi
    5908:	e8 33 d8 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    590d:	48 89 c3             	mov    %rax,%rbx
    5910:	48 8d 05 89 e6 00 00 	lea    0xe689(%rip),%rax        # 13fa0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5917:	48 89 c6             	mov    %rax,%rsi
    591a:	48 89 df             	mov    %rbx,%rdi
    591d:	e8 be d7 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5922:	48 8b 05 7f a6 01 00 	mov    0x1a67f(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5929:	48 89 c2             	mov    %rax,%rdx
    592c:	48 8d 05 0d a4 01 00 	lea    0x1a40d(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5933:	48 89 c6             	mov    %rax,%rsi
    5936:	48 89 df             	mov    %rbx,%rdi
    5939:	e8 42 dc ff ff       	call   3580 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    593e:	49 89 c4             	mov    %rax,%r12
    5941:	48 89 df             	mov    %rbx,%rdi
    5944:	e8 a7 d8 ff ff       	call   31f0 <__cxa_free_exception@plt>
    5949:	4c 89 e0             	mov    %r12,%rax
    594c:	48 89 c7             	mov    %rax,%rdi
    594f:	e8 7c dc ff ff       	call   35d0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    5954:	48 89 c3             	mov    %rax,%rbx
    5957:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    595b:	48 89 c7             	mov    %rax,%rdi
    595e:	e8 f1 0d 00 00       	call   6754 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    5963:	48 89 d8             	mov    %rbx,%rax
    5966:	48 89 c7             	mov    %rax,%rdi
    5969:	e8 62 dc ff ff       	call   35d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    596e:	49 89 c4             	mov    %rax,%r12
    5971:	48 89 df             	mov    %rbx,%rdi
    5974:	e8 77 d8 ff ff       	call   31f0 <__cxa_free_exception@plt>
    5979:	4c 89 e3             	mov    %r12,%rbx
    597c:	eb 03                	jmp    5981 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    597e:	48 89 c3             	mov    %rax,%rbx
    5981:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5985:	48 89 c7             	mov    %rax,%rdi
    5988:	e8 59 0e 00 00       	call   67e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    598d:	48 89 d8             	mov    %rbx,%rax
    5990:	48 89 c7             	mov    %rax,%rdi
    5993:	e8 38 dc ff ff       	call   35d0 <_Unwind_Resume@plt>
  return surfaceFormats;
    5998:	90                   	nop
}
    5999:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    599d:	48 83 c4 30          	add    $0x30,%rsp
    59a1:	5b                   	pop    %rbx
    59a2:	41 5c                	pop    %r12
    59a4:	5d                   	pop    %rbp
    59a5:	c3                   	ret

00000000000059a6 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    59a6:	55                   	push   %rbp
    59a7:	48 89 e5             	mov    %rsp,%rbp
    59aa:	41 54                	push   %r12
    59ac:	53                   	push   %rbx
    59ad:	48 83 ec 30          	sub    $0x30,%rsp
    59b1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    59b5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    59b9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    59bd:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    59c1:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    59c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59c9:	b9 00 00 00 00       	mov    $0x0,%ecx
    59ce:	48 89 c7             	mov    %rax,%rdi
    59d1:	e8 8a da ff ff       	call   3460 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    59d6:	85 c0                	test   %eax,%eax
    59d8:	0f 95 c0             	setne  %al
    59db:	84 c0                	test   %al,%al
    59dd:	74 3b                	je     5a1a <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    59df:	bf 10 00 00 00       	mov    $0x10,%edi
    59e4:	e8 57 d7 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    59e9:	48 89 c3             	mov    %rax,%rbx
    59ec:	48 8d 05 d5 e5 00 00 	lea    0xe5d5(%rip),%rax        # 13fc8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    59f3:	48 89 c6             	mov    %rax,%rsi
    59f6:	48 89 df             	mov    %rbx,%rdi
    59f9:	e8 e2 d6 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    59fe:	48 8b 05 a3 a5 01 00 	mov    0x1a5a3(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a05:	48 89 c2             	mov    %rax,%rdx
    5a08:	48 8d 05 31 a3 01 00 	lea    0x1a331(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a0f:	48 89 c6             	mov    %rax,%rsi
    5a12:	48 89 df             	mov    %rbx,%rdi
    5a15:	e8 66 db ff ff       	call   3580 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    5a1a:	8b 45 e8             	mov    -0x18(%rbp),%eax
    5a1d:	89 c3                	mov    %eax,%ebx
    5a1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5a23:	48 89 c7             	mov    %rax,%rdi
    5a26:	e8 71 0e 00 00       	call   689c <_ZNSaI16VkPresentModeKHREC1Ev>
    5a2b:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    5a2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a33:	48 89 de             	mov    %rbx,%rsi
    5a36:	48 89 c7             	mov    %rax,%rdi
    5a39:	e8 96 0e 00 00       	call   68d4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    5a3e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5a42:	48 89 c7             	mov    %rax,%rdi
    5a45:	e8 6e 0e 00 00       	call   68b8 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    5a4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a4e:	48 89 c7             	mov    %rax,%rdi
    5a51:	e8 38 0f 00 00       	call   698e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    5a56:	48 89 c1             	mov    %rax,%rcx
    5a59:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    5a5d:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5a61:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5a65:	48 89 c7             	mov    %rax,%rdi
    5a68:	e8 f3 d9 ff ff       	call   3460 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    5a6d:	85 c0                	test   %eax,%eax
    5a6f:	0f 95 c0             	setne  %al
    5a72:	84 c0                	test   %al,%al
    5a74:	0f 84 95 00 00 00    	je     5b0f <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    5a7a:	bf 10 00 00 00       	mov    $0x10,%edi
    5a7f:	e8 bc d6 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5a84:	48 89 c3             	mov    %rax,%rbx
    5a87:	48 8d 05 3a e5 00 00 	lea    0xe53a(%rip),%rax        # 13fc8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    5a8e:	48 89 c6             	mov    %rax,%rsi
    5a91:	48 89 df             	mov    %rbx,%rdi
    5a94:	e8 47 d6 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5a99:	48 8b 05 08 a5 01 00 	mov    0x1a508(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5aa0:	48 89 c2             	mov    %rax,%rdx
    5aa3:	48 8d 05 96 a2 01 00 	lea    0x1a296(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5aaa:	48 89 c6             	mov    %rax,%rsi
    5aad:	48 89 df             	mov    %rbx,%rdi
    5ab0:	e8 cb da ff ff       	call   3580 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    5ab5:	49 89 c4             	mov    %rax,%r12
    5ab8:	48 89 df             	mov    %rbx,%rdi
    5abb:	e8 30 d7 ff ff       	call   31f0 <__cxa_free_exception@plt>
    5ac0:	4c 89 e0             	mov    %r12,%rax
    5ac3:	48 89 c7             	mov    %rax,%rdi
    5ac6:	e8 05 db ff ff       	call   35d0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    5acb:	48 89 c3             	mov    %rax,%rbx
    5ace:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5ad2:	48 89 c7             	mov    %rax,%rdi
    5ad5:	e8 de 0d 00 00       	call   68b8 <_ZNSaI16VkPresentModeKHRED1Ev>
    5ada:	48 89 d8             	mov    %rbx,%rax
    5add:	48 89 c7             	mov    %rax,%rdi
    5ae0:	e8 eb da ff ff       	call   35d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    5ae5:	49 89 c4             	mov    %rax,%r12
    5ae8:	48 89 df             	mov    %rbx,%rdi
    5aeb:	e8 00 d7 ff ff       	call   31f0 <__cxa_free_exception@plt>
    5af0:	4c 89 e3             	mov    %r12,%rbx
    5af3:	eb 03                	jmp    5af8 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    5af5:	48 89 c3             	mov    %rax,%rbx
    5af8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5afc:	48 89 c7             	mov    %rax,%rdi
    5aff:	e8 46 0e 00 00       	call   694a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    5b04:	48 89 d8             	mov    %rbx,%rax
    5b07:	48 89 c7             	mov    %rax,%rdi
    5b0a:	e8 c1 da ff ff       	call   35d0 <_Unwind_Resume@plt>
  return presentModes;
    5b0f:	90                   	nop
}
    5b10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b14:	48 83 c4 30          	add    $0x30,%rsp
    5b18:	5b                   	pop    %rbx
    5b19:	41 5c                	pop    %r12
    5b1b:	5d                   	pop    %rbp
    5b1c:	c3                   	ret

0000000000005b1d <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    5b1d:	55                   	push   %rbp
    5b1e:	48 89 e5             	mov    %rsp,%rbp
    5b21:	41 54                	push   %r12
    5b23:	53                   	push   %rbx
    5b24:	48 83 ec 30          	sub    $0x30,%rsp
    5b28:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5b2c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5b30:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    5b34:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    5b38:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5b3c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5b40:	b9 00 00 00 00       	mov    $0x0,%ecx
    5b45:	48 89 c7             	mov    %rax,%rdi
    5b48:	e8 33 d6 ff ff       	call   3180 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    5b4d:	85 c0                	test   %eax,%eax
    5b4f:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    5b52:	84 c0                	test   %al,%al
    5b54:	74 3b                	je     5b91 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    5b56:	bf 10 00 00 00       	mov    $0x10,%edi
    5b5b:	e8 e0 d5 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5b60:	48 89 c3             	mov    %rax,%rbx
    5b63:	48 8d 05 8e e4 00 00 	lea    0xe48e(%rip),%rax        # 13ff8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    5b6a:	48 89 c6             	mov    %rax,%rsi
    5b6d:	48 89 df             	mov    %rbx,%rdi
    5b70:	e8 6b d5 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5b75:	48 8b 05 2c a4 01 00 	mov    0x1a42c(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b7c:	48 89 c2             	mov    %rax,%rdx
    5b7f:	48 8d 05 ba a1 01 00 	lea    0x1a1ba(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b86:	48 89 c6             	mov    %rax,%rsi
    5b89:	48 89 df             	mov    %rbx,%rdi
    5b8c:	e8 ef d9 ff ff       	call   3580 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    5b91:	8b 45 e8             	mov    -0x18(%rbp),%eax
    5b94:	89 c3                	mov    %eax,%ebx
    5b96:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5b9a:	48 89 c7             	mov    %rax,%rdi
    5b9d:	e8 5e 0e 00 00       	call   6a00 <_ZNSaIP9VkImage_TEC1Ev>
    5ba2:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    5ba6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5baa:	48 89 de             	mov    %rbx,%rsi
    5bad:	48 89 c7             	mov    %rax,%rdi
    5bb0:	e8 83 0e 00 00       	call   6a38 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    5bb5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5bb9:	48 89 c7             	mov    %rax,%rdi
    5bbc:	e8 5b 0e 00 00       	call   6a1c <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    5bc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bc5:	48 89 c7             	mov    %rax,%rdi
    5bc8:	e8 25 0f 00 00       	call   6af2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    5bcd:	48 89 c1             	mov    %rax,%rcx
    5bd0:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    5bd4:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5bd8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5bdc:	48 89 c7             	mov    %rax,%rdi
    5bdf:	e8 9c d5 ff ff       	call   3180 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    5be4:	85 c0                	test   %eax,%eax
    5be6:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    5be9:	84 c0                	test   %al,%al
    5beb:	0f 84 95 00 00 00    	je     5c86 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    5bf1:	bf 10 00 00 00       	mov    $0x10,%edi
    5bf6:	e8 45 d5 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5bfb:	48 89 c3             	mov    %rax,%rbx
    5bfe:	48 8d 05 f3 e3 00 00 	lea    0xe3f3(%rip),%rax        # 13ff8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    5c05:	48 89 c6             	mov    %rax,%rsi
    5c08:	48 89 df             	mov    %rbx,%rdi
    5c0b:	e8 d0 d4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5c10:	48 8b 05 91 a3 01 00 	mov    0x1a391(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5c17:	48 89 c2             	mov    %rax,%rdx
    5c1a:	48 8d 05 1f a1 01 00 	lea    0x1a11f(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5c21:	48 89 c6             	mov    %rax,%rsi
    5c24:	48 89 df             	mov    %rbx,%rdi
    5c27:	e8 54 d9 ff ff       	call   3580 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    5c2c:	49 89 c4             	mov    %rax,%r12
    5c2f:	48 89 df             	mov    %rbx,%rdi
    5c32:	e8 b9 d5 ff ff       	call   31f0 <__cxa_free_exception@plt>
    5c37:	4c 89 e0             	mov    %r12,%rax
    5c3a:	48 89 c7             	mov    %rax,%rdi
    5c3d:	e8 8e d9 ff ff       	call   35d0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    5c42:	48 89 c3             	mov    %rax,%rbx
    5c45:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c49:	48 89 c7             	mov    %rax,%rdi
    5c4c:	e8 cb 0d 00 00       	call   6a1c <_ZNSaIP9VkImage_TED1Ev>
    5c51:	48 89 d8             	mov    %rbx,%rax
    5c54:	48 89 c7             	mov    %rax,%rdi
    5c57:	e8 74 d9 ff ff       	call   35d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    5c5c:	49 89 c4             	mov    %rax,%r12
    5c5f:	48 89 df             	mov    %rbx,%rdi
    5c62:	e8 89 d5 ff ff       	call   31f0 <__cxa_free_exception@plt>
    5c67:	4c 89 e3             	mov    %r12,%rbx
    5c6a:	eb 03                	jmp    5c6f <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    5c6c:	48 89 c3             	mov    %rax,%rbx
    5c6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c73:	48 89 c7             	mov    %rax,%rdi
    5c76:	e8 33 0e 00 00       	call   6aae <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    5c7b:	48 89 d8             	mov    %rbx,%rax
    5c7e:	48 89 c7             	mov    %rax,%rdi
    5c81:	e8 4a d9 ff ff       	call   35d0 <_Unwind_Resume@plt>
  return swapchainImages;
    5c86:	90                   	nop
}
    5c87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c8b:	48 83 c4 30          	add    $0x30,%rsp
    5c8f:	5b                   	pop    %rbx
    5c90:	41 5c                	pop    %r12
    5c92:	5d                   	pop    %rbp
    5c93:	c3                   	ret

0000000000005c94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5c94:	55                   	push   %rbp
    5c95:	48 89 e5             	mov    %rsp,%rbp
    5c98:	48 83 ec 10          	sub    $0x10,%rsp
    5c9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ca4:	48 89 c7             	mov    %rax,%rdi
    5ca7:	e8 00 01 00 00       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
    5cac:	90                   	nop
    5cad:	c9                   	leave
    5cae:	c3                   	ret
    5caf:	90                   	nop

0000000000005cb0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    5cb0:	55                   	push   %rbp
    5cb1:	48 89 e5             	mov    %rsp,%rbp
    5cb4:	48 83 ec 10          	sub    $0x10,%rsp
    5cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cc0:	48 89 c7             	mov    %rax,%rdi
    5cc3:	e8 52 02 00 00       	call   5f1a <_ZNSaI21VkExtensionPropertiesED1Ev>
    5cc8:	90                   	nop
    5cc9:	c9                   	leave
    5cca:	c3                   	ret
    5ccb:	90                   	nop

0000000000005ccc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    5ccc:	55                   	push   %rbp
    5ccd:	48 89 e5             	mov    %rsp,%rbp
    5cd0:	48 83 ec 10          	sub    $0x10,%rsp
    5cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cdc:	48 89 c7             	mov    %rax,%rdi
    5cdf:	e8 a4 03 00 00       	call   6088 <_ZNSaIPKcED1Ev>
    5ce4:	90                   	nop
    5ce5:	c9                   	leave
    5ce6:	c3                   	ret
    5ce7:	90                   	nop

0000000000005ce8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    5ce8:	55                   	push   %rbp
    5ce9:	48 89 e5             	mov    %rsp,%rbp
    5cec:	48 83 ec 10          	sub    $0x10,%rsp
    5cf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cf8:	48 89 c7             	mov    %rax,%rdi
    5cfb:	e8 a4 04 00 00       	call   61a4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    5d00:	90                   	nop
    5d01:	c9                   	leave
    5d02:	c3                   	ret
    5d03:	90                   	nop

0000000000005d04 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    5d04:	55                   	push   %rbp
    5d05:	48 89 e5             	mov    %rsp,%rbp
    5d08:	48 83 ec 10          	sub    $0x10,%rsp
    5d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d14:	48 89 c7             	mov    %rax,%rdi
    5d17:	e8 ec 05 00 00       	call   6308 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    5d1c:	90                   	nop
    5d1d:	c9                   	leave
    5d1e:	c3                   	ret
    5d1f:	90                   	nop

0000000000005d20 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    5d20:	55                   	push   %rbp
    5d21:	48 89 e5             	mov    %rsp,%rbp
    5d24:	48 83 ec 10          	sub    $0x10,%rsp
    5d28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d30:	48 89 c7             	mov    %rax,%rdi
    5d33:	e8 6c 07 00 00       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    5d38:	90                   	nop
    5d39:	c9                   	leave
    5d3a:	c3                   	ret
    5d3b:	90                   	nop

0000000000005d3c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    5d3c:	55                   	push   %rbp
    5d3d:	48 89 e5             	mov    %rsp,%rbp
    5d40:	48 83 ec 10          	sub    $0x10,%rsp
    5d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d4c:	48 89 c7             	mov    %rax,%rdi
    5d4f:	e8 00 0a 00 00       	call   6754 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    5d54:	90                   	nop
    5d55:	c9                   	leave
    5d56:	c3                   	ret
    5d57:	90                   	nop

0000000000005d58 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    5d58:	55                   	push   %rbp
    5d59:	48 89 e5             	mov    %rsp,%rbp
    5d5c:	48 83 ec 10          	sub    $0x10,%rsp
    5d60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d68:	48 89 c7             	mov    %rax,%rdi
    5d6b:	e8 48 0b 00 00       	call   68b8 <_ZNSaI16VkPresentModeKHRED1Ev>
    5d70:	90                   	nop
    5d71:	c9                   	leave
    5d72:	c3                   	ret
    5d73:	90                   	nop

0000000000005d74 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    5d74:	55                   	push   %rbp
    5d75:	48 89 e5             	mov    %rsp,%rbp
    5d78:	48 83 ec 10          	sub    $0x10,%rsp
    5d7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d84:	48 89 c7             	mov    %rax,%rdi
    5d87:	e8 90 0c 00 00       	call   6a1c <_ZNSaIP9VkImage_TED1Ev>
    5d8c:	90                   	nop
    5d8d:	c9                   	leave
    5d8e:	c3                   	ret
    5d8f:	90                   	nop

0000000000005d90 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5d90:	55                   	push   %rbp
    5d91:	48 89 e5             	mov    %rsp,%rbp
    5d94:	48 83 ec 10          	sub    $0x10,%rsp
    5d98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da0:	48 89 c7             	mov    %rax,%rdi
    5da3:	e8 bc 0d 00 00       	call   6b64 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    5da8:	90                   	nop
    5da9:	c9                   	leave
    5daa:	c3                   	ret
    5dab:	90                   	nop

0000000000005dac <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5dac:	55                   	push   %rbp
    5dad:	48 89 e5             	mov    %rsp,%rbp
    5db0:	48 83 ec 10          	sub    $0x10,%rsp
    5db4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dbc:	48 89 c7             	mov    %rax,%rdi
    5dbf:	e8 ac 0d 00 00       	call   6b70 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    5dc4:	90                   	nop
    5dc5:	c9                   	leave
    5dc6:	c3                   	ret
    5dc7:	90                   	nop

0000000000005dc8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5dc8:	55                   	push   %rbp
    5dc9:	48 89 e5             	mov    %rsp,%rbp
    5dcc:	53                   	push   %rbx
    5dcd:	48 83 ec 28          	sub    $0x28,%rsp
    5dd1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5dd5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5dd9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5ddd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5de1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5de5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5de9:	48 89 d6             	mov    %rdx,%rsi
    5dec:	48 89 c7             	mov    %rax,%rdi
    5def:	e8 87 0d 00 00       	call   6b7b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    5df4:	48 89 c1             	mov    %rax,%rcx
    5df7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5dfb:	48 89 c2             	mov    %rax,%rdx
    5dfe:	48 89 ce             	mov    %rcx,%rsi
    5e01:	48 89 df             	mov    %rbx,%rdi
    5e04:	e8 d3 0d 00 00       	call   6bdc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    5e09:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e11:	48 89 d6             	mov    %rdx,%rsi
    5e14:	48 89 c7             	mov    %rax,%rdi
    5e17:	e8 1e 0e 00 00       	call   6c3a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    5e1c:	eb 1a                	jmp    5e38 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    5e1e:	48 89 c3             	mov    %rax,%rbx
    5e21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e25:	48 89 c7             	mov    %rax,%rdi
    5e28:	e8 79 00 00 00       	call   5ea6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    5e2d:	48 89 d8             	mov    %rbx,%rax
    5e30:	48 89 c7             	mov    %rax,%rdi
    5e33:	e8 98 d7 ff ff       	call   35d0 <_Unwind_Resume@plt>
    5e38:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e3c:	c9                   	leave
    5e3d:	c3                   	ret

0000000000005e3e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5e3e:	55                   	push   %rbp
    5e3f:	48 89 e5             	mov    %rsp,%rbp
    5e42:	48 83 ec 10          	sub    $0x10,%rsp
    5e46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5e4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e4e:	48 89 c7             	mov    %rax,%rdi
    5e51:	e8 24 0e 00 00       	call   6c7a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5e56:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e5d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5e61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e65:	48 8b 00             	mov    (%rax),%rax
    5e68:	48 89 ce             	mov    %rcx,%rsi
    5e6b:	48 89 c7             	mov    %rax,%rdi
    5e6e:	e8 15 0e 00 00       	call   6c88 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    5e73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e77:	48 89 c7             	mov    %rax,%rdi
    5e7a:	e8 27 00 00 00       	call   5ea6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    5e7f:	90                   	nop
    5e80:	c9                   	leave
    5e81:	c3                   	ret

0000000000005e82 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5e82:	55                   	push   %rbp
    5e83:	48 89 e5             	mov    %rsp,%rbp
    5e86:	48 83 ec 10          	sub    $0x10,%rsp
    5e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e92:	48 8b 10             	mov    (%rax),%rdx
    5e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e99:	48 89 d6             	mov    %rdx,%rsi
    5e9c:	48 89 c7             	mov    %rax,%rdi
    5e9f:	e8 0e 0e 00 00       	call   6cb2 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    5ea4:	c9                   	leave
    5ea5:	c3                   	ret

0000000000005ea6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5ea6:	55                   	push   %rbp
    5ea7:	48 89 e5             	mov    %rsp,%rbp
    5eaa:	48 83 ec 10          	sub    $0x10,%rsp
    5eae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebe:	48 8b 00             	mov    (%rax),%rax
    5ec1:	48 29 c2             	sub    %rax,%rdx
    5ec4:	48 c1 fa 03          	sar    $0x3,%rdx
    5ec8:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    5ecf:	fc c0 0f 
    5ed2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5ed6:	48 89 c2             	mov    %rax,%rdx
    5ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5edd:	48 8b 08             	mov    (%rax),%rcx
    5ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee4:	48 89 ce             	mov    %rcx,%rsi
    5ee7:	48 89 c7             	mov    %rax,%rdi
    5eea:	e8 fb 0d 00 00       	call   6cea <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    5eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef3:	48 89 c7             	mov    %rax,%rdi
    5ef6:	e8 99 fd ff ff       	call   5c94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    5efb:	90                   	nop
    5efc:	c9                   	leave
    5efd:	c3                   	ret

0000000000005efe <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5efe:	55                   	push   %rbp
    5eff:	48 89 e5             	mov    %rsp,%rbp
    5f02:	48 83 ec 10          	sub    $0x10,%rsp
    5f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f0e:	48 89 c7             	mov    %rax,%rdi
    5f11:	e8 0a 0e 00 00       	call   6d20 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    5f16:	90                   	nop
    5f17:	c9                   	leave
    5f18:	c3                   	ret
    5f19:	90                   	nop

0000000000005f1a <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5f1a:	55                   	push   %rbp
    5f1b:	48 89 e5             	mov    %rsp,%rbp
    5f1e:	48 83 ec 10          	sub    $0x10,%rsp
    5f22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f2a:	48 89 c7             	mov    %rax,%rdi
    5f2d:	e8 fa 0d 00 00       	call   6d2c <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    5f32:	90                   	nop
    5f33:	c9                   	leave
    5f34:	c3                   	ret
    5f35:	90                   	nop

0000000000005f36 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5f36:	55                   	push   %rbp
    5f37:	48 89 e5             	mov    %rsp,%rbp
    5f3a:	53                   	push   %rbx
    5f3b:	48 83 ec 28          	sub    $0x28,%rsp
    5f3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5f43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5f47:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5f4b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5f4f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5f53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5f57:	48 89 d6             	mov    %rdx,%rsi
    5f5a:	48 89 c7             	mov    %rax,%rdi
    5f5d:	e8 d5 0d 00 00       	call   6d37 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    5f62:	48 89 c1             	mov    %rax,%rcx
    5f65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f69:	48 89 c2             	mov    %rax,%rdx
    5f6c:	48 89 ce             	mov    %rcx,%rsi
    5f6f:	48 89 df             	mov    %rbx,%rdi
    5f72:	e8 21 0e 00 00       	call   6d98 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    5f77:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5f7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f7f:	48 89 d6             	mov    %rdx,%rsi
    5f82:	48 89 c7             	mov    %rax,%rdi
    5f85:	e8 6c 0e 00 00       	call   6df6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    5f8a:	eb 1a                	jmp    5fa6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    5f8c:	48 89 c3             	mov    %rax,%rbx
    5f8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f93:	48 89 c7             	mov    %rax,%rdi
    5f96:	e8 79 00 00 00       	call   6014 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    5f9b:	48 89 d8             	mov    %rbx,%rax
    5f9e:	48 89 c7             	mov    %rax,%rdi
    5fa1:	e8 2a d6 ff ff       	call   35d0 <_Unwind_Resume@plt>
    5fa6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5faa:	c9                   	leave
    5fab:	c3                   	ret

0000000000005fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    5fac:	55                   	push   %rbp
    5fad:	48 89 e5             	mov    %rsp,%rbp
    5fb0:	48 83 ec 10          	sub    $0x10,%rsp
    5fb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    5fb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fbc:	48 89 c7             	mov    %rax,%rdi
    5fbf:	e8 72 0e 00 00       	call   6e36 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    5fc4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fcb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fd3:	48 8b 00             	mov    (%rax),%rax
    5fd6:	48 89 ce             	mov    %rcx,%rsi
    5fd9:	48 89 c7             	mov    %rax,%rdi
    5fdc:	e8 63 0e 00 00       	call   6e44 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    5fe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe5:	48 89 c7             	mov    %rax,%rdi
    5fe8:	e8 27 00 00 00       	call   6014 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    5fed:	90                   	nop
    5fee:	c9                   	leave
    5fef:	c3                   	ret

0000000000005ff0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    5ff0:	55                   	push   %rbp
    5ff1:	48 89 e5             	mov    %rsp,%rbp
    5ff4:	48 83 ec 10          	sub    $0x10,%rsp
    5ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6000:	48 8b 10             	mov    (%rax),%rdx
    6003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6007:	48 89 d6             	mov    %rdx,%rsi
    600a:	48 89 c7             	mov    %rax,%rdi
    600d:	e8 5c 0e 00 00       	call   6e6e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    6012:	c9                   	leave
    6013:	c3                   	ret

0000000000006014 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6014:	55                   	push   %rbp
    6015:	48 89 e5             	mov    %rsp,%rbp
    6018:	48 83 ec 10          	sub    $0x10,%rsp
    601c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6024:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    602c:	48 8b 00             	mov    (%rax),%rax
    602f:	48 29 c2             	sub    %rax,%rdx
    6032:	48 c1 fa 02          	sar    $0x2,%rdx
    6036:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    603d:	fc c0 0f 
    6040:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    6044:	48 89 c2             	mov    %rax,%rdx
    6047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    604b:	48 8b 08             	mov    (%rax),%rcx
    604e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6052:	48 89 ce             	mov    %rcx,%rsi
    6055:	48 89 c7             	mov    %rax,%rdi
    6058:	e8 49 0e 00 00       	call   6ea6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    605d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6061:	48 89 c7             	mov    %rax,%rdi
    6064:	e8 47 fc ff ff       	call   5cb0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    6069:	90                   	nop
    606a:	c9                   	leave
    606b:	c3                   	ret

000000000000606c <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    606c:	55                   	push   %rbp
    606d:	48 89 e5             	mov    %rsp,%rbp
    6070:	48 83 ec 10          	sub    $0x10,%rsp
    6074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    607c:	48 89 c7             	mov    %rax,%rdi
    607f:	e8 58 0e 00 00       	call   6edc <_ZNSt15__new_allocatorIPKcEC1Ev>
    6084:	90                   	nop
    6085:	c9                   	leave
    6086:	c3                   	ret
    6087:	90                   	nop

0000000000006088 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    6088:	55                   	push   %rbp
    6089:	48 89 e5             	mov    %rsp,%rbp
    608c:	48 83 ec 10          	sub    $0x10,%rsp
    6090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6098:	48 89 c7             	mov    %rax,%rdi
    609b:	e8 48 0e 00 00       	call   6ee8 <_ZNSt15__new_allocatorIPKcED1Ev>
    60a0:	90                   	nop
    60a1:	c9                   	leave
    60a2:	c3                   	ret
    60a3:	90                   	nop

00000000000060a4 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    60a4:	55                   	push   %rbp
    60a5:	48 89 e5             	mov    %rsp,%rbp
    60a8:	53                   	push   %rbx
    60a9:	48 83 ec 28          	sub    $0x28,%rsp
    60ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    60b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    60b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    60b9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    60bd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    60c1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    60c5:	48 89 d6             	mov    %rdx,%rsi
    60c8:	48 89 c7             	mov    %rax,%rdi
    60cb:	e8 23 0e 00 00       	call   6ef3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    60d0:	48 89 c1             	mov    %rax,%rcx
    60d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60d7:	48 89 c2             	mov    %rax,%rdx
    60da:	48 89 ce             	mov    %rcx,%rsi
    60dd:	48 89 df             	mov    %rbx,%rdi
    60e0:	e8 6f 0e 00 00       	call   6f54 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    60e5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    60e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60ed:	48 89 d6             	mov    %rdx,%rsi
    60f0:	48 89 c7             	mov    %rax,%rdi
    60f3:	e8 ba 0e 00 00       	call   6fb2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    60f8:	eb 1a                	jmp    6114 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    60fa:	48 89 c3             	mov    %rax,%rbx
    60fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6101:	48 89 c7             	mov    %rax,%rdi
    6104:	e8 31 00 00 00       	call   613a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    6109:	48 89 d8             	mov    %rbx,%rax
    610c:	48 89 c7             	mov    %rax,%rdi
    610f:	e8 bc d4 ff ff       	call   35d0 <_Unwind_Resume@plt>
    6114:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6118:	c9                   	leave
    6119:	c3                   	ret

000000000000611a <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    611a:	55                   	push   %rbp
    611b:	48 89 e5             	mov    %rsp,%rbp
    611e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6122:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    6126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    612a:	48 8b 00             	mov    (%rax),%rax
    612d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6131:	48 c1 e2 03          	shl    $0x3,%rdx
    6135:	48 01 d0             	add    %rdx,%rax
      }
    6138:	5d                   	pop    %rbp
    6139:	c3                   	ret

000000000000613a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    613a:	55                   	push   %rbp
    613b:	48 89 e5             	mov    %rsp,%rbp
    613e:	48 83 ec 10          	sub    $0x10,%rsp
    6142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    614e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6152:	48 8b 00             	mov    (%rax),%rax
    6155:	48 29 c2             	sub    %rax,%rdx
    6158:	48 89 d0             	mov    %rdx,%rax
    615b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    615f:	48 89 c2             	mov    %rax,%rdx
    6162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6166:	48 8b 08             	mov    (%rax),%rcx
    6169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    616d:	48 89 ce             	mov    %rcx,%rsi
    6170:	48 89 c7             	mov    %rax,%rdi
    6173:	e8 ae 0e 00 00       	call   7026 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    6178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    617c:	48 89 c7             	mov    %rax,%rdi
    617f:	e8 48 fb ff ff       	call   5ccc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    6184:	90                   	nop
    6185:	c9                   	leave
    6186:	c3                   	ret
    6187:	90                   	nop

0000000000006188 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    6188:	55                   	push   %rbp
    6189:	48 89 e5             	mov    %rsp,%rbp
    618c:	48 83 ec 10          	sub    $0x10,%rsp
    6190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6198:	48 89 c7             	mov    %rax,%rdi
    619b:	e8 bc 0e 00 00       	call   705c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    61a0:	90                   	nop
    61a1:	c9                   	leave
    61a2:	c3                   	ret
    61a3:	90                   	nop

00000000000061a4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    61a4:	55                   	push   %rbp
    61a5:	48 89 e5             	mov    %rsp,%rbp
    61a8:	48 83 ec 10          	sub    $0x10,%rsp
    61ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b4:	48 89 c7             	mov    %rax,%rdi
    61b7:	e8 ac 0e 00 00       	call   7068 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    61bc:	90                   	nop
    61bd:	c9                   	leave
    61be:	c3                   	ret
    61bf:	90                   	nop

00000000000061c0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    61c0:	55                   	push   %rbp
    61c1:	48 89 e5             	mov    %rsp,%rbp
    61c4:	53                   	push   %rbx
    61c5:	48 83 ec 28          	sub    $0x28,%rsp
    61c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61d1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    61d5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    61d9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    61dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    61e1:	48 89 d6             	mov    %rdx,%rsi
    61e4:	48 89 c7             	mov    %rax,%rdi
    61e7:	e8 87 0e 00 00       	call   7073 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    61ec:	48 89 c1             	mov    %rax,%rcx
    61ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61f3:	48 89 c2             	mov    %rax,%rdx
    61f6:	48 89 ce             	mov    %rcx,%rsi
    61f9:	48 89 df             	mov    %rbx,%rdi
    61fc:	e8 d3 0e 00 00       	call   70d4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    6201:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6209:	48 89 d6             	mov    %rdx,%rsi
    620c:	48 89 c7             	mov    %rax,%rdi
    620f:	e8 1e 0f 00 00       	call   7132 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    6214:	eb 1a                	jmp    6230 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    6216:	48 89 c3             	mov    %rax,%rbx
    6219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    621d:	48 89 c7             	mov    %rax,%rdi
    6220:	e8 79 00 00 00       	call   629e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6225:	48 89 d8             	mov    %rbx,%rax
    6228:	48 89 c7             	mov    %rax,%rdi
    622b:	e8 a0 d3 ff ff       	call   35d0 <_Unwind_Resume@plt>
    6230:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6234:	c9                   	leave
    6235:	c3                   	ret

0000000000006236 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6236:	55                   	push   %rbp
    6237:	48 89 e5             	mov    %rsp,%rbp
    623a:	48 83 ec 10          	sub    $0x10,%rsp
    623e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6246:	48 89 c7             	mov    %rax,%rdi
    6249:	e8 24 0f 00 00       	call   7172 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    624e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6255:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625d:	48 8b 00             	mov    (%rax),%rax
    6260:	48 89 ce             	mov    %rcx,%rsi
    6263:	48 89 c7             	mov    %rax,%rdi
    6266:	e8 15 0f 00 00       	call   7180 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    626b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    626f:	48 89 c7             	mov    %rax,%rdi
    6272:	e8 27 00 00 00       	call   629e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    6277:	90                   	nop
    6278:	c9                   	leave
    6279:	c3                   	ret

000000000000627a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    627a:	55                   	push   %rbp
    627b:	48 89 e5             	mov    %rsp,%rbp
    627e:	48 83 ec 10          	sub    $0x10,%rsp
    6282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628a:	48 8b 10             	mov    (%rax),%rdx
    628d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6291:	48 89 d6             	mov    %rdx,%rsi
    6294:	48 89 c7             	mov    %rax,%rdi
    6297:	e8 0e 0f 00 00       	call   71aa <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    629c:	c9                   	leave
    629d:	c3                   	ret

000000000000629e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    629e:	55                   	push   %rbp
    629f:	48 89 e5             	mov    %rsp,%rbp
    62a2:	48 83 ec 10          	sub    $0x10,%rsp
    62a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    62aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ae:	48 8b 50 10          	mov    0x10(%rax),%rdx
    62b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b6:	48 8b 00             	mov    (%rax),%rax
    62b9:	48 29 c2             	sub    %rax,%rdx
    62bc:	48 89 d0             	mov    %rdx,%rax
    62bf:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    62c3:	48 89 c2             	mov    %rax,%rdx
    62c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ca:	48 8b 08             	mov    (%rax),%rcx
    62cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d1:	48 89 ce             	mov    %rcx,%rsi
    62d4:	48 89 c7             	mov    %rax,%rdi
    62d7:	e8 06 0f 00 00       	call   71e2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    62dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62e0:	48 89 c7             	mov    %rax,%rdi
    62e3:	e8 00 fa ff ff       	call   5ce8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    62e8:	90                   	nop
    62e9:	c9                   	leave
    62ea:	c3                   	ret
    62eb:	90                   	nop

00000000000062ec <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    62ec:	55                   	push   %rbp
    62ed:	48 89 e5             	mov    %rsp,%rbp
    62f0:	48 83 ec 10          	sub    $0x10,%rsp
    62f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62fc:	48 89 c7             	mov    %rax,%rdi
    62ff:	e8 14 0f 00 00       	call   7218 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    6304:	90                   	nop
    6305:	c9                   	leave
    6306:	c3                   	ret
    6307:	90                   	nop

0000000000006308 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    6308:	55                   	push   %rbp
    6309:	48 89 e5             	mov    %rsp,%rbp
    630c:	48 83 ec 10          	sub    $0x10,%rsp
    6310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6318:	48 89 c7             	mov    %rax,%rdi
    631b:	e8 04 0f 00 00       	call   7224 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    6320:	90                   	nop
    6321:	c9                   	leave
    6322:	c3                   	ret
    6323:	90                   	nop

0000000000006324 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6324:	55                   	push   %rbp
    6325:	48 89 e5             	mov    %rsp,%rbp
    6328:	53                   	push   %rbx
    6329:	48 83 ec 28          	sub    $0x28,%rsp
    632d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6331:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6335:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6339:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    633d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6341:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6345:	48 89 d6             	mov    %rdx,%rsi
    6348:	48 89 c7             	mov    %rax,%rdi
    634b:	e8 df 0e 00 00       	call   722f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    6350:	48 89 c1             	mov    %rax,%rcx
    6353:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6357:	48 89 c2             	mov    %rax,%rdx
    635a:	48 89 ce             	mov    %rcx,%rsi
    635d:	48 89 df             	mov    %rbx,%rdi
    6360:	e8 2b 0f 00 00       	call   7290 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    6365:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    636d:	48 89 d6             	mov    %rdx,%rsi
    6370:	48 89 c7             	mov    %rax,%rdi
    6373:	e8 76 0f 00 00       	call   72ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    6378:	eb 1a                	jmp    6394 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    637a:	48 89 c3             	mov    %rax,%rbx
    637d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6381:	48 89 c7             	mov    %rax,%rdi
    6384:	e8 79 00 00 00       	call   6402 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    6389:	48 89 d8             	mov    %rbx,%rax
    638c:	48 89 c7             	mov    %rax,%rdi
    638f:	e8 3c d2 ff ff       	call   35d0 <_Unwind_Resume@plt>
    6394:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6398:	c9                   	leave
    6399:	c3                   	ret

000000000000639a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    639a:	55                   	push   %rbp
    639b:	48 89 e5             	mov    %rsp,%rbp
    639e:	48 83 ec 10          	sub    $0x10,%rsp
    63a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    63a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63aa:	48 89 c7             	mov    %rax,%rdi
    63ad:	e8 7c 0f 00 00       	call   732e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    63b2:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    63b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b9:	48 8b 48 08          	mov    0x8(%rax),%rcx
    63bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63c1:	48 8b 00             	mov    (%rax),%rax
    63c4:	48 89 ce             	mov    %rcx,%rsi
    63c7:	48 89 c7             	mov    %rax,%rdi
    63ca:	e8 6d 0f 00 00       	call   733c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    63cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63d3:	48 89 c7             	mov    %rax,%rdi
    63d6:	e8 27 00 00 00       	call   6402 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    63db:	90                   	nop
    63dc:	c9                   	leave
    63dd:	c3                   	ret

00000000000063de <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    63de:	55                   	push   %rbp
    63df:	48 89 e5             	mov    %rsp,%rbp
    63e2:	48 83 ec 10          	sub    $0x10,%rsp
    63e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    63ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ee:	48 8b 10             	mov    (%rax),%rdx
    63f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63f5:	48 89 d6             	mov    %rdx,%rsi
    63f8:	48 89 c7             	mov    %rax,%rdi
    63fb:	e8 66 0f 00 00       	call   7366 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    6400:	c9                   	leave
    6401:	c3                   	ret

0000000000006402 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6402:	55                   	push   %rbp
    6403:	48 89 e5             	mov    %rsp,%rbp
    6406:	48 83 ec 10          	sub    $0x10,%rsp
    640a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    640e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6412:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    641a:	48 8b 00             	mov    (%rax),%rax
    641d:	48 29 c2             	sub    %rax,%rdx
    6420:	48 c1 fa 03          	sar    $0x3,%rdx
    6424:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    642b:	aa aa aa 
    642e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    6432:	48 89 c2             	mov    %rax,%rdx
    6435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6439:	48 8b 08             	mov    (%rax),%rcx
    643c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6440:	48 89 ce             	mov    %rcx,%rsi
    6443:	48 89 c7             	mov    %rax,%rdi
    6446:	e8 53 0f 00 00       	call   739e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    644b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    644f:	48 89 c7             	mov    %rax,%rdi
    6452:	e8 ad f8 ff ff       	call   5d04 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    6457:	90                   	nop
    6458:	c9                   	leave
    6459:	c3                   	ret

000000000000645a <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    645a:	55                   	push   %rbp
    645b:	48 89 e5             	mov    %rsp,%rbp
    645e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6466:	48 8b 50 08          	mov    0x8(%rax),%rdx
    646a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646e:	48 8b 00             	mov    (%rax),%rax
    6471:	48 29 c2             	sub    %rax,%rdx
    6474:	48 c1 fa 03          	sar    $0x3,%rdx
    6478:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    647f:	aa aa aa 
    6482:	48 0f af c2          	imul   %rdx,%rax
    6486:	5d                   	pop    %rbp
    6487:	c3                   	ret

0000000000006488 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    6488:	55                   	push   %rbp
    6489:	48 89 e5             	mov    %rsp,%rbp
    648c:	48 83 ec 10          	sub    $0x10,%rsp
    6490:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6498:	48 89 c7             	mov    %rax,%rdi
    649b:	e8 34 0f 00 00       	call   73d4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    64a0:	90                   	nop
    64a1:	c9                   	leave
    64a2:	c3                   	ret
    64a3:	90                   	nop

00000000000064a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    64a4:	55                   	push   %rbp
    64a5:	48 89 e5             	mov    %rsp,%rbp
    64a8:	48 83 ec 10          	sub    $0x10,%rsp
    64ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b4:	48 89 c7             	mov    %rax,%rdi
    64b7:	e8 24 0f 00 00       	call   73e0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    64bc:	90                   	nop
    64bd:	c9                   	leave
    64be:	c3                   	ret
    64bf:	90                   	nop

00000000000064c0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    64c0:	55                   	push   %rbp
    64c1:	48 89 e5             	mov    %rsp,%rbp
    64c4:	53                   	push   %rbx
    64c5:	48 83 ec 28          	sub    $0x28,%rsp
    64c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    64cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    64d1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    64d5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    64d9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    64dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    64e1:	48 89 d6             	mov    %rdx,%rsi
    64e4:	48 89 c7             	mov    %rax,%rdi
    64e7:	e8 ff 0e 00 00       	call   73eb <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    64ec:	48 89 c1             	mov    %rax,%rcx
    64ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64f3:	48 89 c2             	mov    %rax,%rdx
    64f6:	48 89 ce             	mov    %rcx,%rsi
    64f9:	48 89 df             	mov    %rbx,%rdi
    64fc:	e8 4b 0f 00 00       	call   744c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    6501:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6505:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6509:	48 89 d6             	mov    %rdx,%rsi
    650c:	48 89 c7             	mov    %rax,%rdi
    650f:	e8 96 0f 00 00       	call   74aa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    6514:	eb 1a                	jmp    6530 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    6516:	48 89 c3             	mov    %rax,%rbx
    6519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    651d:	48 89 c7             	mov    %rax,%rdi
    6520:	e8 bb 01 00 00       	call   66e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    6525:	48 89 d8             	mov    %rbx,%rax
    6528:	48 89 c7             	mov    %rax,%rdi
    652b:	e8 a0 d0 ff ff       	call   35d0 <_Unwind_Resume@plt>
    6530:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6534:	c9                   	leave
    6535:	c3                   	ret

0000000000006536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6536:	55                   	push   %rbp
    6537:	48 89 e5             	mov    %rsp,%rbp
    653a:	48 83 ec 10          	sub    $0x10,%rsp
    653e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6546:	48 89 c7             	mov    %rax,%rdi
    6549:	e8 9c 0f 00 00       	call   74ea <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    654e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6555:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    655d:	48 8b 00             	mov    (%rax),%rax
    6560:	48 89 ce             	mov    %rcx,%rsi
    6563:	48 89 c7             	mov    %rax,%rdi
    6566:	e8 8d 0f 00 00       	call   74f8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    656b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    656f:	48 89 c7             	mov    %rax,%rdi
    6572:	e8 69 01 00 00       	call   66e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    6577:	90                   	nop
    6578:	c9                   	leave
    6579:	c3                   	ret

000000000000657a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    657a:	55                   	push   %rbp
    657b:	48 89 e5             	mov    %rsp,%rbp
    657e:	48 83 ec 20          	sub    $0x20,%rsp
    6582:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6586:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    658a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    658e:	48 89 d6             	mov    %rdx,%rsi
    6591:	48 89 c7             	mov    %rax,%rdi
    6594:	e8 89 0f 00 00       	call   7522 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    6599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    659d:	c9                   	leave
    659e:	c3                   	ret
    659f:	90                   	nop

00000000000065a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    65a0:	55                   	push   %rbp
    65a1:	48 89 e5             	mov    %rsp,%rbp
    65a4:	48 83 ec 20          	sub    $0x20,%rsp
    65a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    65ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65b0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    65b4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    65b8:	48 89 d6             	mov    %rdx,%rsi
    65bb:	48 89 c7             	mov    %rax,%rdi
    65be:	e8 5f 0f 00 00       	call   7522 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    65c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65c7:	c9                   	leave
    65c8:	c3                   	ret

00000000000065c9 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    65c9:	55                   	push   %rbp
    65ca:	48 89 e5             	mov    %rsp,%rbp
    65cd:	53                   	push   %rbx
    65ce:	48 83 ec 18          	sub    $0x18,%rsp
    65d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    65da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65de:	48 89 c7             	mov    %rax,%rdi
    65e1:	e8 5a 0f 00 00       	call   7540 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    65e6:	48 8b 18             	mov    (%rax),%rbx
    65e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65ed:	48 89 c7             	mov    %rax,%rdi
    65f0:	e8 4b 0f 00 00       	call   7540 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    65f5:	48 8b 00             	mov    (%rax),%rax
    65f8:	48 39 c3             	cmp    %rax,%rbx
    65fb:	0f 95 c0             	setne  %al
    65fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6602:	c9                   	leave
    6603:	c3                   	ret

0000000000006604 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6604:	55                   	push   %rbp
    6605:	48 89 e5             	mov    %rsp,%rbp
    6608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    660c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6610:	48 8b 00             	mov    (%rax),%rax
    6613:	48 8d 50 18          	lea    0x18(%rax),%rdx
    6617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    661b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    661e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6622:	5d                   	pop    %rbp
    6623:	c3                   	ret

0000000000006624 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6624:	55                   	push   %rbp
    6625:	48 89 e5             	mov    %rsp,%rbp
    6628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    662c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6630:	48 8b 00             	mov    (%rax),%rax
    6633:	5d                   	pop    %rbp
    6634:	c3                   	ret
    6635:	90                   	nop

0000000000006636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    6636:	55                   	push   %rbp
    6637:	48 89 e5             	mov    %rsp,%rbp
    663a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    663e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    6642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6646:	48 8b 08             	mov    (%rax),%rcx
    6649:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    664d:	48 89 d0             	mov    %rdx,%rax
    6650:	48 c1 e0 03          	shl    $0x3,%rax
    6654:	48 29 d0             	sub    %rdx,%rax
    6657:	48 c1 e0 02          	shl    $0x2,%rax
    665b:	48 01 c8             	add    %rcx,%rax
      }
    665e:	5d                   	pop    %rbp
    665f:	c3                   	ret

0000000000006660 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    6660:	55                   	push   %rbp
    6661:	48 89 e5             	mov    %rsp,%rbp
    6664:	53                   	push   %rbx
    6665:	48 83 ec 18          	sub    $0x18,%rsp
    6669:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    666d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    6671:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6675:	48 89 c7             	mov    %rax,%rdi
    6678:	e8 d1 0e 00 00       	call   754e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    667d:	84 c0                	test   %al,%al
    667f:	74 36                	je     66b7 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    6681:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6685:	48 89 c7             	mov    %rax,%rdi
    6688:	e8 17 0f 00 00       	call   75a4 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    668d:	48 89 c3             	mov    %rax,%rbx
    6690:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6694:	48 89 c7             	mov    %rax,%rdi
    6697:	e8 c4 0e 00 00       	call   7560 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    669c:	48 89 c1             	mov    %rax,%rcx
    669f:	48 8b 03             	mov    (%rbx),%rax
    66a2:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    66a6:	48 89 01             	mov    %rax,(%rcx)
    66a9:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    66ad:	48 8b 43 10          	mov    0x10(%rbx),%rax
    66b1:	48 89 41 10          	mov    %rax,0x10(%rcx)
    66b5:	eb 1e                	jmp    66d5 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    66b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    66bb:	48 89 c7             	mov    %rax,%rdi
    66be:	e8 e1 0e 00 00       	call   75a4 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    66c3:	48 89 c2             	mov    %rax,%rdx
    66c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66ca:	48 89 d6             	mov    %rdx,%rsi
    66cd:	48 89 c7             	mov    %rax,%rdi
    66d0:	e8 dd 0e 00 00       	call   75b2 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    66d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    66d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    66dd:	c9                   	leave
    66de:	c3                   	ret
    66df:	90                   	nop

00000000000066e0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    66e0:	55                   	push   %rbp
    66e1:	48 89 e5             	mov    %rsp,%rbp
    66e4:	48 83 ec 10          	sub    $0x10,%rsp
    66e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    66ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66f0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    66f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66f8:	48 8b 00             	mov    (%rax),%rax
    66fb:	48 29 c2             	sub    %rax,%rdx
    66fe:	48 c1 fa 02          	sar    $0x2,%rdx
    6702:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    6709:	db b6 6d 
    670c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    6710:	48 89 c2             	mov    %rax,%rdx
    6713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6717:	48 8b 08             	mov    (%rax),%rcx
    671a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    671e:	48 89 ce             	mov    %rcx,%rsi
    6721:	48 89 c7             	mov    %rax,%rdi
    6724:	e8 e3 0e 00 00       	call   760c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    6729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672d:	48 89 c7             	mov    %rax,%rdi
    6730:	e8 eb f5 ff ff       	call   5d20 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    6735:	90                   	nop
    6736:	c9                   	leave
    6737:	c3                   	ret

0000000000006738 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    6738:	55                   	push   %rbp
    6739:	48 89 e5             	mov    %rsp,%rbp
    673c:	48 83 ec 10          	sub    $0x10,%rsp
    6740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6748:	48 89 c7             	mov    %rax,%rdi
    674b:	e8 f2 0e 00 00       	call   7642 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    6750:	90                   	nop
    6751:	c9                   	leave
    6752:	c3                   	ret
    6753:	90                   	nop

0000000000006754 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    6754:	55                   	push   %rbp
    6755:	48 89 e5             	mov    %rsp,%rbp
    6758:	48 83 ec 10          	sub    $0x10,%rsp
    675c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6764:	48 89 c7             	mov    %rax,%rdi
    6767:	e8 e2 0e 00 00       	call   764e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    676c:	90                   	nop
    676d:	c9                   	leave
    676e:	c3                   	ret
    676f:	90                   	nop

0000000000006770 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6770:	55                   	push   %rbp
    6771:	48 89 e5             	mov    %rsp,%rbp
    6774:	53                   	push   %rbx
    6775:	48 83 ec 28          	sub    $0x28,%rsp
    6779:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    677d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6781:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6785:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6789:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    678d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6791:	48 89 d6             	mov    %rdx,%rsi
    6794:	48 89 c7             	mov    %rax,%rdi
    6797:	e8 bd 0e 00 00       	call   7659 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    679c:	48 89 c1             	mov    %rax,%rcx
    679f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67a3:	48 89 c2             	mov    %rax,%rdx
    67a6:	48 89 ce             	mov    %rcx,%rsi
    67a9:	48 89 df             	mov    %rbx,%rdi
    67ac:	e8 09 0f 00 00       	call   76ba <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    67b1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    67b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67b9:	48 89 d6             	mov    %rdx,%rsi
    67bc:	48 89 c7             	mov    %rax,%rdi
    67bf:	e8 54 0f 00 00       	call   7718 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    67c4:	eb 1a                	jmp    67e0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    67c6:	48 89 c3             	mov    %rax,%rbx
    67c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67cd:	48 89 c7             	mov    %rax,%rdi
    67d0:	e8 79 00 00 00       	call   684e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    67d5:	48 89 d8             	mov    %rbx,%rax
    67d8:	48 89 c7             	mov    %rax,%rdi
    67db:	e8 f0 cd ff ff       	call   35d0 <_Unwind_Resume@plt>
    67e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    67e4:	c9                   	leave
    67e5:	c3                   	ret

00000000000067e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    67e6:	55                   	push   %rbp
    67e7:	48 89 e5             	mov    %rsp,%rbp
    67ea:	48 83 ec 10          	sub    $0x10,%rsp
    67ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    67f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67f6:	48 89 c7             	mov    %rax,%rdi
    67f9:	e8 5a 0f 00 00       	call   7758 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    67fe:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6805:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6809:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    680d:	48 8b 00             	mov    (%rax),%rax
    6810:	48 89 ce             	mov    %rcx,%rsi
    6813:	48 89 c7             	mov    %rax,%rdi
    6816:	e8 4b 0f 00 00       	call   7766 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    681b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    681f:	48 89 c7             	mov    %rax,%rdi
    6822:	e8 27 00 00 00       	call   684e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    6827:	90                   	nop
    6828:	c9                   	leave
    6829:	c3                   	ret

000000000000682a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    682a:	55                   	push   %rbp
    682b:	48 89 e5             	mov    %rsp,%rbp
    682e:	48 83 ec 10          	sub    $0x10,%rsp
    6832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    683a:	48 8b 10             	mov    (%rax),%rdx
    683d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6841:	48 89 d6             	mov    %rdx,%rsi
    6844:	48 89 c7             	mov    %rax,%rdi
    6847:	e8 44 0f 00 00       	call   7790 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    684c:	c9                   	leave
    684d:	c3                   	ret

000000000000684e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    684e:	55                   	push   %rbp
    684f:	48 89 e5             	mov    %rsp,%rbp
    6852:	48 83 ec 10          	sub    $0x10,%rsp
    6856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    685a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    685e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6866:	48 8b 00             	mov    (%rax),%rax
    6869:	48 29 c2             	sub    %rax,%rdx
    686c:	48 89 d0             	mov    %rdx,%rax
    686f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    6873:	48 89 c2             	mov    %rax,%rdx
    6876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    687a:	48 8b 08             	mov    (%rax),%rcx
    687d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6881:	48 89 ce             	mov    %rcx,%rsi
    6884:	48 89 c7             	mov    %rax,%rdi
    6887:	e8 3c 0f 00 00       	call   77c8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    688c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6890:	48 89 c7             	mov    %rax,%rdi
    6893:	e8 a4 f4 ff ff       	call   5d3c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    6898:	90                   	nop
    6899:	c9                   	leave
    689a:	c3                   	ret
    689b:	90                   	nop

000000000000689c <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    689c:	55                   	push   %rbp
    689d:	48 89 e5             	mov    %rsp,%rbp
    68a0:	48 83 ec 10          	sub    $0x10,%rsp
    68a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ac:	48 89 c7             	mov    %rax,%rdi
    68af:	e8 4a 0f 00 00       	call   77fe <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    68b4:	90                   	nop
    68b5:	c9                   	leave
    68b6:	c3                   	ret
    68b7:	90                   	nop

00000000000068b8 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    68b8:	55                   	push   %rbp
    68b9:	48 89 e5             	mov    %rsp,%rbp
    68bc:	48 83 ec 10          	sub    $0x10,%rsp
    68c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68c8:	48 89 c7             	mov    %rax,%rdi
    68cb:	e8 3a 0f 00 00       	call   780a <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    68d0:	90                   	nop
    68d1:	c9                   	leave
    68d2:	c3                   	ret
    68d3:	90                   	nop

00000000000068d4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    68d4:	55                   	push   %rbp
    68d5:	48 89 e5             	mov    %rsp,%rbp
    68d8:	53                   	push   %rbx
    68d9:	48 83 ec 28          	sub    $0x28,%rsp
    68dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    68e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    68e5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    68e9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    68ed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    68f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    68f5:	48 89 d6             	mov    %rdx,%rsi
    68f8:	48 89 c7             	mov    %rax,%rdi
    68fb:	e8 15 0f 00 00       	call   7815 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    6900:	48 89 c1             	mov    %rax,%rcx
    6903:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6907:	48 89 c2             	mov    %rax,%rdx
    690a:	48 89 ce             	mov    %rcx,%rsi
    690d:	48 89 df             	mov    %rbx,%rdi
    6910:	e8 61 0f 00 00       	call   7876 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    6915:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    691d:	48 89 d6             	mov    %rdx,%rsi
    6920:	48 89 c7             	mov    %rax,%rdi
    6923:	e8 ac 0f 00 00       	call   78d4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    6928:	eb 1a                	jmp    6944 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    692a:	48 89 c3             	mov    %rax,%rbx
    692d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6931:	48 89 c7             	mov    %rax,%rdi
    6934:	e8 79 00 00 00       	call   69b2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    6939:	48 89 d8             	mov    %rbx,%rax
    693c:	48 89 c7             	mov    %rax,%rdi
    693f:	e8 8c cc ff ff       	call   35d0 <_Unwind_Resume@plt>
    6944:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6948:	c9                   	leave
    6949:	c3                   	ret

000000000000694a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    694a:	55                   	push   %rbp
    694b:	48 89 e5             	mov    %rsp,%rbp
    694e:	48 83 ec 10          	sub    $0x10,%rsp
    6952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    695a:	48 89 c7             	mov    %rax,%rdi
    695d:	e8 b2 0f 00 00       	call   7914 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    6962:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6965:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6969:	48 8b 48 08          	mov    0x8(%rax),%rcx
    696d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6971:	48 8b 00             	mov    (%rax),%rax
    6974:	48 89 ce             	mov    %rcx,%rsi
    6977:	48 89 c7             	mov    %rax,%rdi
    697a:	e8 a3 0f 00 00       	call   7922 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    697f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6983:	48 89 c7             	mov    %rax,%rdi
    6986:	e8 27 00 00 00       	call   69b2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    698b:	90                   	nop
    698c:	c9                   	leave
    698d:	c3                   	ret

000000000000698e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    698e:	55                   	push   %rbp
    698f:	48 89 e5             	mov    %rsp,%rbp
    6992:	48 83 ec 10          	sub    $0x10,%rsp
    6996:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    699a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    699e:	48 8b 10             	mov    (%rax),%rdx
    69a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69a5:	48 89 d6             	mov    %rdx,%rsi
    69a8:	48 89 c7             	mov    %rax,%rdi
    69ab:	e8 9c 0f 00 00       	call   794c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    69b0:	c9                   	leave
    69b1:	c3                   	ret

00000000000069b2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    69b2:	55                   	push   %rbp
    69b3:	48 89 e5             	mov    %rsp,%rbp
    69b6:	48 83 ec 10          	sub    $0x10,%rsp
    69ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    69be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69c2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    69c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ca:	48 8b 00             	mov    (%rax),%rax
    69cd:	48 29 c2             	sub    %rax,%rdx
    69d0:	48 89 d0             	mov    %rdx,%rax
    69d3:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    69d7:	48 89 c2             	mov    %rax,%rdx
    69da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69de:	48 8b 08             	mov    (%rax),%rcx
    69e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69e5:	48 89 ce             	mov    %rcx,%rsi
    69e8:	48 89 c7             	mov    %rax,%rdi
    69eb:	e8 94 0f 00 00       	call   7984 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    69f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69f4:	48 89 c7             	mov    %rax,%rdi
    69f7:	e8 5c f3 ff ff       	call   5d58 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    69fc:	90                   	nop
    69fd:	c9                   	leave
    69fe:	c3                   	ret
    69ff:	90                   	nop

0000000000006a00 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    6a00:	55                   	push   %rbp
    6a01:	48 89 e5             	mov    %rsp,%rbp
    6a04:	48 83 ec 10          	sub    $0x10,%rsp
    6a08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a10:	48 89 c7             	mov    %rax,%rdi
    6a13:	e8 a2 0f 00 00       	call   79ba <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    6a18:	90                   	nop
    6a19:	c9                   	leave
    6a1a:	c3                   	ret
    6a1b:	90                   	nop

0000000000006a1c <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    6a1c:	55                   	push   %rbp
    6a1d:	48 89 e5             	mov    %rsp,%rbp
    6a20:	48 83 ec 10          	sub    $0x10,%rsp
    6a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a2c:	48 89 c7             	mov    %rax,%rdi
    6a2f:	e8 92 0f 00 00       	call   79c6 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    6a34:	90                   	nop
    6a35:	c9                   	leave
    6a36:	c3                   	ret
    6a37:	90                   	nop

0000000000006a38 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6a38:	55                   	push   %rbp
    6a39:	48 89 e5             	mov    %rsp,%rbp
    6a3c:	53                   	push   %rbx
    6a3d:	48 83 ec 28          	sub    $0x28,%rsp
    6a41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6a45:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6a49:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6a4d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6a51:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6a55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6a59:	48 89 d6             	mov    %rdx,%rsi
    6a5c:	48 89 c7             	mov    %rax,%rdi
    6a5f:	e8 6d 0f 00 00       	call   79d1 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    6a64:	48 89 c1             	mov    %rax,%rcx
    6a67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a6b:	48 89 c2             	mov    %rax,%rdx
    6a6e:	48 89 ce             	mov    %rcx,%rsi
    6a71:	48 89 df             	mov    %rbx,%rdi
    6a74:	e8 b9 0f 00 00       	call   7a32 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    6a79:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6a7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a81:	48 89 d6             	mov    %rdx,%rsi
    6a84:	48 89 c7             	mov    %rax,%rdi
    6a87:	e8 04 10 00 00       	call   7a90 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    6a8c:	eb 1a                	jmp    6aa8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    6a8e:	48 89 c3             	mov    %rax,%rbx
    6a91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a95:	48 89 c7             	mov    %rax,%rdi
    6a98:	e8 79 00 00 00       	call   6b16 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    6a9d:	48 89 d8             	mov    %rbx,%rax
    6aa0:	48 89 c7             	mov    %rax,%rdi
    6aa3:	e8 28 cb ff ff       	call   35d0 <_Unwind_Resume@plt>
    6aa8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6aac:	c9                   	leave
    6aad:	c3                   	ret

0000000000006aae <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6aae:	55                   	push   %rbp
    6aaf:	48 89 e5             	mov    %rsp,%rbp
    6ab2:	48 83 ec 10          	sub    $0x10,%rsp
    6ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6abe:	48 89 c7             	mov    %rax,%rdi
    6ac1:	e8 0a 10 00 00       	call   7ad0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    6ac6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6ac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6acd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ad5:	48 8b 00             	mov    (%rax),%rax
    6ad8:	48 89 ce             	mov    %rcx,%rsi
    6adb:	48 89 c7             	mov    %rax,%rdi
    6ade:	e8 fb 0f 00 00       	call   7ade <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    6ae3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ae7:	48 89 c7             	mov    %rax,%rdi
    6aea:	e8 27 00 00 00       	call   6b16 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    6aef:	90                   	nop
    6af0:	c9                   	leave
    6af1:	c3                   	ret

0000000000006af2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    6af2:	55                   	push   %rbp
    6af3:	48 89 e5             	mov    %rsp,%rbp
    6af6:	48 83 ec 10          	sub    $0x10,%rsp
    6afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b02:	48 8b 10             	mov    (%rax),%rdx
    6b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b09:	48 89 d6             	mov    %rdx,%rsi
    6b0c:	48 89 c7             	mov    %rax,%rdi
    6b0f:	e8 f4 0f 00 00       	call   7b08 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    6b14:	c9                   	leave
    6b15:	c3                   	ret

0000000000006b16 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6b16:	55                   	push   %rbp
    6b17:	48 89 e5             	mov    %rsp,%rbp
    6b1a:	48 83 ec 10          	sub    $0x10,%rsp
    6b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b26:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b2e:	48 8b 00             	mov    (%rax),%rax
    6b31:	48 29 c2             	sub    %rax,%rdx
    6b34:	48 89 d0             	mov    %rdx,%rax
    6b37:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    6b3b:	48 89 c2             	mov    %rax,%rdx
    6b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b42:	48 8b 08             	mov    (%rax),%rcx
    6b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b49:	48 89 ce             	mov    %rcx,%rsi
    6b4c:	48 89 c7             	mov    %rax,%rdi
    6b4f:	e8 ec 0f 00 00       	call   7b40 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    6b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b58:	48 89 c7             	mov    %rax,%rdi
    6b5b:	e8 14 f2 ff ff       	call   5d74 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    6b60:	90                   	nop
    6b61:	c9                   	leave
    6b62:	c3                   	ret
    6b63:	90                   	nop

0000000000006b64 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6b64:	55                   	push   %rbp
    6b65:	48 89 e5             	mov    %rsp,%rbp
    6b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b6c:	90                   	nop
    6b6d:	5d                   	pop    %rbp
    6b6e:	c3                   	ret
    6b6f:	90                   	nop

0000000000006b70 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6b70:	55                   	push   %rbp
    6b71:	48 89 e5             	mov    %rsp,%rbp
    6b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b78:	90                   	nop
    6b79:	5d                   	pop    %rbp
    6b7a:	c3                   	ret

0000000000006b7b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6b7b:	55                   	push   %rbp
    6b7c:	48 89 e5             	mov    %rsp,%rbp
    6b7f:	53                   	push   %rbx
    6b80:	48 83 ec 28          	sub    $0x28,%rsp
    6b84:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6b88:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6b8c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6b90:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b94:	48 89 d6             	mov    %rdx,%rsi
    6b97:	48 89 c7             	mov    %rax,%rdi
    6b9a:	e8 25 01 00 00       	call   6cc4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    6b9f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6ba3:	48 89 c7             	mov    %rax,%rdi
    6ba6:	e8 ca 0f 00 00       	call   7b75 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    6bab:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6baf:	0f 92 c3             	setb   %bl
    6bb2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6bb6:	48 89 c7             	mov    %rax,%rdi
    6bb9:	e8 ee f1 ff ff       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
    6bbe:	84 db                	test   %bl,%bl
    6bc0:	74 0f                	je     6bd1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    6bc2:	48 8d 05 4f d4 00 00 	lea    0xd44f(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    6bc9:	48 89 c7             	mov    %rax,%rdi
    6bcc:	e8 7f c5 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6bd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6bd5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6bd9:	c9                   	leave
    6bda:	c3                   	ret
    6bdb:	90                   	nop

0000000000006bdc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6bdc:	55                   	push   %rbp
    6bdd:	48 89 e5             	mov    %rsp,%rbp
    6be0:	53                   	push   %rbx
    6be1:	48 83 ec 28          	sub    $0x28,%rsp
    6be5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6be9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6bed:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6bf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6bf5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6bf9:	48 89 d6             	mov    %rdx,%rsi
    6bfc:	48 89 c7             	mov    %rax,%rdi
    6bff:	e8 b4 0f 00 00       	call   7bb8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    6c04:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6c08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c0c:	48 89 d6             	mov    %rdx,%rsi
    6c0f:	48 89 c7             	mov    %rax,%rdi
    6c12:	e8 d3 0f 00 00       	call   7bea <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    6c17:	eb 1a                	jmp    6c33 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    6c19:	48 89 c3             	mov    %rax,%rbx
    6c1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c20:	48 89 c7             	mov    %rax,%rdi
    6c23:	e8 6c f0 ff ff       	call   5c94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    6c28:	48 89 d8             	mov    %rbx,%rax
    6c2b:	48 89 c7             	mov    %rax,%rdi
    6c2e:	e8 9d c9 ff ff       	call   35d0 <_Unwind_Resume@plt>
    6c33:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6c37:	c9                   	leave
    6c38:	c3                   	ret
    6c39:	90                   	nop

0000000000006c3a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6c3a:	55                   	push   %rbp
    6c3b:	48 89 e5             	mov    %rsp,%rbp
    6c3e:	48 83 ec 10          	sub    $0x10,%rsp
    6c42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c4e:	48 89 c7             	mov    %rax,%rdi
    6c51:	e8 24 00 00 00       	call   6c7a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    6c56:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c5d:	48 8b 00             	mov    (%rax),%rax
    6c60:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c64:	48 89 ce             	mov    %rcx,%rsi
    6c67:	48 89 c7             	mov    %rax,%rdi
    6c6a:	e8 dc 0f 00 00       	call   7c4b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6c6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c73:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6c77:	90                   	nop
    6c78:	c9                   	leave
    6c79:	c3                   	ret

0000000000006c7a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6c7a:	55                   	push   %rbp
    6c7b:	48 89 e5             	mov    %rsp,%rbp
    6c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c86:	5d                   	pop    %rbp
    6c87:	c3                   	ret

0000000000006c88 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6c88:	55                   	push   %rbp
    6c89:	48 89 e5             	mov    %rsp,%rbp
    6c8c:	48 83 ec 20          	sub    $0x20,%rsp
    6c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6c9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ca0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ca4:	48 89 d6             	mov    %rdx,%rsi
    6ca7:	48 89 c7             	mov    %rax,%rdi
    6caa:	e8 c5 0f 00 00       	call   7c74 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    6caf:	90                   	nop
    6cb0:	c9                   	leave
    6cb1:	c3                   	ret

0000000000006cb2 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6cb2:	55                   	push   %rbp
    6cb3:	48 89 e5             	mov    %rsp,%rbp
    6cb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6cbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6cc2:	5d                   	pop    %rbp
    6cc3:	c3                   	ret

0000000000006cc4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6cc4:	55                   	push   %rbp
    6cc5:	48 89 e5             	mov    %rsp,%rbp
    6cc8:	48 83 ec 10          	sub    $0x10,%rsp
    6ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6cd4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cdc:	48 89 d6             	mov    %rdx,%rsi
    6cdf:	48 89 c7             	mov    %rax,%rdi
    6ce2:	e8 b3 0f 00 00       	call   7c9a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    6ce7:	90                   	nop
    6ce8:	c9                   	leave
    6ce9:	c3                   	ret

0000000000006cea <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    6cea:	55                   	push   %rbp
    6ceb:	48 89 e5             	mov    %rsp,%rbp
    6cee:	48 83 ec 20          	sub    $0x20,%rsp
    6cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cfa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6cfe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6d03:	74 17                	je     6d1c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6d0d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6d11:	48 89 ce             	mov    %rcx,%rsi
    6d14:	48 89 c7             	mov    %rax,%rdi
    6d17:	e8 8d 0f 00 00       	call   7ca9 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    6d1c:	90                   	nop
    6d1d:	c9                   	leave
    6d1e:	c3                   	ret
    6d1f:	90                   	nop

0000000000006d20 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6d20:	55                   	push   %rbp
    6d21:	48 89 e5             	mov    %rsp,%rbp
    6d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d28:	90                   	nop
    6d29:	5d                   	pop    %rbp
    6d2a:	c3                   	ret
    6d2b:	90                   	nop

0000000000006d2c <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6d2c:	55                   	push   %rbp
    6d2d:	48 89 e5             	mov    %rsp,%rbp
    6d30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d34:	90                   	nop
    6d35:	5d                   	pop    %rbp
    6d36:	c3                   	ret

0000000000006d37 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6d37:	55                   	push   %rbp
    6d38:	48 89 e5             	mov    %rsp,%rbp
    6d3b:	53                   	push   %rbx
    6d3c:	48 83 ec 28          	sub    $0x28,%rsp
    6d40:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6d44:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6d48:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6d4c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d50:	48 89 d6             	mov    %rdx,%rsi
    6d53:	48 89 c7             	mov    %rax,%rdi
    6d56:	e8 25 01 00 00       	call   6e80 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    6d5b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d5f:	48 89 c7             	mov    %rax,%rdi
    6d62:	e8 70 0f 00 00       	call   7cd7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    6d67:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6d6b:	0f 92 c3             	setb   %bl
    6d6e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d72:	48 89 c7             	mov    %rax,%rdi
    6d75:	e8 a0 f1 ff ff       	call   5f1a <_ZNSaI21VkExtensionPropertiesED1Ev>
    6d7a:	84 db                	test   %bl,%bl
    6d7c:	74 0f                	je     6d8d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    6d7e:	48 8d 05 93 d2 00 00 	lea    0xd293(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    6d85:	48 89 c7             	mov    %rax,%rdi
    6d88:	e8 c3 c3 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6d8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6d91:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6d95:	c9                   	leave
    6d96:	c3                   	ret
    6d97:	90                   	nop

0000000000006d98 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6d98:	55                   	push   %rbp
    6d99:	48 89 e5             	mov    %rsp,%rbp
    6d9c:	53                   	push   %rbx
    6d9d:	48 83 ec 28          	sub    $0x28,%rsp
    6da1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6da5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6da9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6dad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6db1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6db5:	48 89 d6             	mov    %rdx,%rsi
    6db8:	48 89 c7             	mov    %rax,%rdi
    6dbb:	e8 5a 0f 00 00       	call   7d1a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    6dc0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6dc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6dc8:	48 89 d6             	mov    %rdx,%rsi
    6dcb:	48 89 c7             	mov    %rax,%rdi
    6dce:	e8 79 0f 00 00       	call   7d4c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    6dd3:	eb 1a                	jmp    6def <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    6dd5:	48 89 c3             	mov    %rax,%rbx
    6dd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ddc:	48 89 c7             	mov    %rax,%rdi
    6ddf:	e8 cc ee ff ff       	call   5cb0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    6de4:	48 89 d8             	mov    %rbx,%rax
    6de7:	48 89 c7             	mov    %rax,%rdi
    6dea:	e8 e1 c7 ff ff       	call   35d0 <_Unwind_Resume@plt>
    6def:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6df3:	c9                   	leave
    6df4:	c3                   	ret
    6df5:	90                   	nop

0000000000006df6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6df6:	55                   	push   %rbp
    6df7:	48 89 e5             	mov    %rsp,%rbp
    6dfa:	48 83 ec 10          	sub    $0x10,%rsp
    6dfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e0a:	48 89 c7             	mov    %rax,%rdi
    6e0d:	e8 24 00 00 00       	call   6e36 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    6e12:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6e15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e19:	48 8b 00             	mov    (%rax),%rax
    6e1c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e20:	48 89 ce             	mov    %rcx,%rsi
    6e23:	48 89 c7             	mov    %rax,%rdi
    6e26:	e8 82 0f 00 00       	call   7dad <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6e2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6e2f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6e33:	90                   	nop
    6e34:	c9                   	leave
    6e35:	c3                   	ret

0000000000006e36 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6e36:	55                   	push   %rbp
    6e37:	48 89 e5             	mov    %rsp,%rbp
    6e3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6e3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e42:	5d                   	pop    %rbp
    6e43:	c3                   	ret

0000000000006e44 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6e44:	55                   	push   %rbp
    6e45:	48 89 e5             	mov    %rsp,%rbp
    6e48:	48 83 ec 20          	sub    $0x20,%rsp
    6e4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6e58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e60:	48 89 d6             	mov    %rdx,%rsi
    6e63:	48 89 c7             	mov    %rax,%rdi
    6e66:	e8 6b 0f 00 00       	call   7dd6 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    6e6b:	90                   	nop
    6e6c:	c9                   	leave
    6e6d:	c3                   	ret

0000000000006e6e <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    6e6e:	55                   	push   %rbp
    6e6f:	48 89 e5             	mov    %rsp,%rbp
    6e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    6e7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6e7e:	5d                   	pop    %rbp
    6e7f:	c3                   	ret

0000000000006e80 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6e80:	55                   	push   %rbp
    6e81:	48 89 e5             	mov    %rsp,%rbp
    6e84:	48 83 ec 10          	sub    $0x10,%rsp
    6e88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6e90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e98:	48 89 d6             	mov    %rdx,%rsi
    6e9b:	48 89 c7             	mov    %rax,%rdi
    6e9e:	e8 59 0f 00 00       	call   7dfc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    6ea3:	90                   	nop
    6ea4:	c9                   	leave
    6ea5:	c3                   	ret

0000000000006ea6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    6ea6:	55                   	push   %rbp
    6ea7:	48 89 e5             	mov    %rsp,%rbp
    6eaa:	48 83 ec 20          	sub    $0x20,%rsp
    6eae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6eb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6eb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6eba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6ebf:	74 17                	je     6ed8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6ec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ec5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ec9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ecd:	48 89 ce             	mov    %rcx,%rsi
    6ed0:	48 89 c7             	mov    %rax,%rdi
    6ed3:	e8 33 0f 00 00       	call   7e0b <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    6ed8:	90                   	nop
    6ed9:	c9                   	leave
    6eda:	c3                   	ret
    6edb:	90                   	nop

0000000000006edc <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6edc:	55                   	push   %rbp
    6edd:	48 89 e5             	mov    %rsp,%rbp
    6ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ee4:	90                   	nop
    6ee5:	5d                   	pop    %rbp
    6ee6:	c3                   	ret
    6ee7:	90                   	nop

0000000000006ee8 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    6ee8:	55                   	push   %rbp
    6ee9:	48 89 e5             	mov    %rsp,%rbp
    6eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ef0:	90                   	nop
    6ef1:	5d                   	pop    %rbp
    6ef2:	c3                   	ret

0000000000006ef3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6ef3:	55                   	push   %rbp
    6ef4:	48 89 e5             	mov    %rsp,%rbp
    6ef7:	53                   	push   %rbx
    6ef8:	48 83 ec 28          	sub    $0x28,%rsp
    6efc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6f00:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6f04:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6f08:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f0c:	48 89 d6             	mov    %rdx,%rsi
    6f0f:	48 89 c7             	mov    %rax,%rdi
    6f12:	e8 e9 00 00 00       	call   7000 <_ZNSaIPKcEC1ERKS1_>
    6f17:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f1b:	48 89 c7             	mov    %rax,%rdi
    6f1e:	e8 16 0f 00 00       	call   7e39 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    6f23:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6f27:	0f 92 c3             	setb   %bl
    6f2a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f2e:	48 89 c7             	mov    %rax,%rdi
    6f31:	e8 52 f1 ff ff       	call   6088 <_ZNSaIPKcED1Ev>
    6f36:	84 db                	test   %bl,%bl
    6f38:	74 0f                	je     6f49 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6f3a:	48 8d 05 d7 d0 00 00 	lea    0xd0d7(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    6f41:	48 89 c7             	mov    %rax,%rdi
    6f44:	e8 07 c2 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6f49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6f4d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f51:	c9                   	leave
    6f52:	c3                   	ret
    6f53:	90                   	nop

0000000000006f54 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6f54:	55                   	push   %rbp
    6f55:	48 89 e5             	mov    %rsp,%rbp
    6f58:	53                   	push   %rbx
    6f59:	48 83 ec 28          	sub    $0x28,%rsp
    6f5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6f65:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    6f69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f6d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6f71:	48 89 d6             	mov    %rdx,%rsi
    6f74:	48 89 c7             	mov    %rax,%rdi
    6f77:	e8 00 0f 00 00       	call   7e7c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    6f7c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6f80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f84:	48 89 d6             	mov    %rdx,%rsi
    6f87:	48 89 c7             	mov    %rax,%rdi
    6f8a:	e8 1f 0f 00 00       	call   7eae <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    6f8f:	eb 1a                	jmp    6fab <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    6f91:	48 89 c3             	mov    %rax,%rbx
    6f94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6f98:	48 89 c7             	mov    %rax,%rdi
    6f9b:	e8 2c ed ff ff       	call   5ccc <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    6fa0:	48 89 d8             	mov    %rbx,%rax
    6fa3:	48 89 c7             	mov    %rax,%rdi
    6fa6:	e8 25 c6 ff ff       	call   35d0 <_Unwind_Resume@plt>
    6fab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6faf:	c9                   	leave
    6fb0:	c3                   	ret
    6fb1:	90                   	nop

0000000000006fb2 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6fb2:	55                   	push   %rbp
    6fb3:	48 89 e5             	mov    %rsp,%rbp
    6fb6:	48 83 ec 10          	sub    $0x10,%rsp
    6fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6fbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6fc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fc6:	48 89 c7             	mov    %rax,%rdi
    6fc9:	e8 24 00 00 00       	call   6ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    6fce:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fd5:	48 8b 00             	mov    (%rax),%rax
    6fd8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6fdc:	48 89 ce             	mov    %rcx,%rsi
    6fdf:	48 89 c7             	mov    %rax,%rdi
    6fe2:	e8 1d 0f 00 00       	call   7f04 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    6fe7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6feb:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6fef:	90                   	nop
    6ff0:	c9                   	leave
    6ff1:	c3                   	ret

0000000000006ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6ff2:	55                   	push   %rbp
    6ff3:	48 89 e5             	mov    %rsp,%rbp
    6ff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6ffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ffe:	5d                   	pop    %rbp
    6fff:	c3                   	ret

0000000000007000 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    7000:	55                   	push   %rbp
    7001:	48 89 e5             	mov    %rsp,%rbp
    7004:	48 83 ec 10          	sub    $0x10,%rsp
    7008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    700c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    7010:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7018:	48 89 d6             	mov    %rdx,%rsi
    701b:	48 89 c7             	mov    %rax,%rdi
    701e:	e8 0b 0f 00 00       	call   7f2e <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    7023:	90                   	nop
    7024:	c9                   	leave
    7025:	c3                   	ret

0000000000007026 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    7026:	55                   	push   %rbp
    7027:	48 89 e5             	mov    %rsp,%rbp
    702a:	48 83 ec 20          	sub    $0x20,%rsp
    702e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7032:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7036:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    703a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    703f:	74 17                	je     7058 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    7041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7045:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7049:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    704d:	48 89 ce             	mov    %rcx,%rsi
    7050:	48 89 c7             	mov    %rax,%rdi
    7053:	e8 e5 0e 00 00       	call   7f3d <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    7058:	90                   	nop
    7059:	c9                   	leave
    705a:	c3                   	ret
    705b:	90                   	nop

000000000000705c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    705c:	55                   	push   %rbp
    705d:	48 89 e5             	mov    %rsp,%rbp
    7060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7064:	90                   	nop
    7065:	5d                   	pop    %rbp
    7066:	c3                   	ret
    7067:	90                   	nop

0000000000007068 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7068:	55                   	push   %rbp
    7069:	48 89 e5             	mov    %rsp,%rbp
    706c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7070:	90                   	nop
    7071:	5d                   	pop    %rbp
    7072:	c3                   	ret

0000000000007073 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    7073:	55                   	push   %rbp
    7074:	48 89 e5             	mov    %rsp,%rbp
    7077:	53                   	push   %rbx
    7078:	48 83 ec 28          	sub    $0x28,%rsp
    707c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7080:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    7084:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7088:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    708c:	48 89 d6             	mov    %rdx,%rsi
    708f:	48 89 c7             	mov    %rax,%rdi
    7092:	e8 25 01 00 00       	call   71bc <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    7097:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    709b:	48 89 c7             	mov    %rax,%rdi
    709e:	e8 c8 0e 00 00       	call   7f6b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    70a3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    70a7:	0f 92 c3             	setb   %bl
    70aa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    70ae:	48 89 c7             	mov    %rax,%rdi
    70b1:	e8 ee f0 ff ff       	call   61a4 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    70b6:	84 db                	test   %bl,%bl
    70b8:	74 0f                	je     70c9 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    70ba:	48 8d 05 57 cf 00 00 	lea    0xcf57(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    70c1:	48 89 c7             	mov    %rax,%rdi
    70c4:	e8 87 c0 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    70c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    70cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    70d1:	c9                   	leave
    70d2:	c3                   	ret
    70d3:	90                   	nop

00000000000070d4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    70d4:	55                   	push   %rbp
    70d5:	48 89 e5             	mov    %rsp,%rbp
    70d8:	53                   	push   %rbx
    70d9:	48 83 ec 28          	sub    $0x28,%rsp
    70dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    70e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    70e5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    70e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70ed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    70f1:	48 89 d6             	mov    %rdx,%rsi
    70f4:	48 89 c7             	mov    %rax,%rdi
    70f7:	e8 b2 0e 00 00       	call   7fae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    70fc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7100:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7104:	48 89 d6             	mov    %rdx,%rsi
    7107:	48 89 c7             	mov    %rax,%rdi
    710a:	e8 d1 0e 00 00       	call   7fe0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    710f:	eb 1a                	jmp    712b <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    7111:	48 89 c3             	mov    %rax,%rbx
    7114:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7118:	48 89 c7             	mov    %rax,%rdi
    711b:	e8 c8 eb ff ff       	call   5ce8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    7120:	48 89 d8             	mov    %rbx,%rax
    7123:	48 89 c7             	mov    %rax,%rdi
    7126:	e8 a5 c4 ff ff       	call   35d0 <_Unwind_Resume@plt>
    712b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    712f:	c9                   	leave
    7130:	c3                   	ret
    7131:	90                   	nop

0000000000007132 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    7132:	55                   	push   %rbp
    7133:	48 89 e5             	mov    %rsp,%rbp
    7136:	48 83 ec 10          	sub    $0x10,%rsp
    713a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    713e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    7142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7146:	48 89 c7             	mov    %rax,%rdi
    7149:	e8 24 00 00 00       	call   7172 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    714e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    7151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7155:	48 8b 00             	mov    (%rax),%rax
    7158:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    715c:	48 89 ce             	mov    %rcx,%rsi
    715f:	48 89 c7             	mov    %rax,%rdi
    7162:	e8 cf 0e 00 00       	call   8036 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    7167:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    716b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    716f:	90                   	nop
    7170:	c9                   	leave
    7171:	c3                   	ret

0000000000007172 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7172:	55                   	push   %rbp
    7173:	48 89 e5             	mov    %rsp,%rbp
    7176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    717a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    717e:	5d                   	pop    %rbp
    717f:	c3                   	ret

0000000000007180 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7180:	55                   	push   %rbp
    7181:	48 89 e5             	mov    %rsp,%rbp
    7184:	48 83 ec 20          	sub    $0x20,%rsp
    7188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    718c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7190:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7194:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    719c:	48 89 d6             	mov    %rdx,%rsi
    719f:	48 89 c7             	mov    %rax,%rdi
    71a2:	e8 b8 0e 00 00       	call   805f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    71a7:	90                   	nop
    71a8:	c9                   	leave
    71a9:	c3                   	ret

00000000000071aa <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    71aa:	55                   	push   %rbp
    71ab:	48 89 e5             	mov    %rsp,%rbp
    71ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    71b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71ba:	5d                   	pop    %rbp
    71bb:	c3                   	ret

00000000000071bc <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    71bc:	55                   	push   %rbp
    71bd:	48 89 e5             	mov    %rsp,%rbp
    71c0:	48 83 ec 10          	sub    $0x10,%rsp
    71c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    71cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71d4:	48 89 d6             	mov    %rdx,%rsi
    71d7:	48 89 c7             	mov    %rax,%rdi
    71da:	e8 a7 0e 00 00       	call   8086 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    71df:	90                   	nop
    71e0:	c9                   	leave
    71e1:	c3                   	ret

00000000000071e2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    71e2:	55                   	push   %rbp
    71e3:	48 89 e5             	mov    %rsp,%rbp
    71e6:	48 83 ec 20          	sub    $0x20,%rsp
    71ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    71f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    71f6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    71fb:	74 17                	je     7214 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    71fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7201:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7205:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7209:	48 89 ce             	mov    %rcx,%rsi
    720c:	48 89 c7             	mov    %rax,%rdi
    720f:	e8 81 0e 00 00       	call   8095 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    7214:	90                   	nop
    7215:	c9                   	leave
    7216:	c3                   	ret
    7217:	90                   	nop

0000000000007218 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7218:	55                   	push   %rbp
    7219:	48 89 e5             	mov    %rsp,%rbp
    721c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7220:	90                   	nop
    7221:	5d                   	pop    %rbp
    7222:	c3                   	ret
    7223:	90                   	nop

0000000000007224 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7224:	55                   	push   %rbp
    7225:	48 89 e5             	mov    %rsp,%rbp
    7228:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    722c:	90                   	nop
    722d:	5d                   	pop    %rbp
    722e:	c3                   	ret

000000000000722f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    722f:	55                   	push   %rbp
    7230:	48 89 e5             	mov    %rsp,%rbp
    7233:	53                   	push   %rbx
    7234:	48 83 ec 28          	sub    $0x28,%rsp
    7238:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    723c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    7240:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7244:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7248:	48 89 d6             	mov    %rdx,%rsi
    724b:	48 89 c7             	mov    %rax,%rdi
    724e:	e8 25 01 00 00       	call   7378 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    7253:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7257:	48 89 c7             	mov    %rax,%rdi
    725a:	e8 64 0e 00 00       	call   80c3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    725f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    7263:	0f 92 c3             	setb   %bl
    7266:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    726a:	48 89 c7             	mov    %rax,%rdi
    726d:	e8 96 f0 ff ff       	call   6308 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7272:	84 db                	test   %bl,%bl
    7274:	74 0f                	je     7285 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    7276:	48 8d 05 9b cd 00 00 	lea    0xcd9b(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    727d:	48 89 c7             	mov    %rax,%rdi
    7280:	e8 cb be ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    7285:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7289:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    728d:	c9                   	leave
    728e:	c3                   	ret
    728f:	90                   	nop

0000000000007290 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    7290:	55                   	push   %rbp
    7291:	48 89 e5             	mov    %rsp,%rbp
    7294:	53                   	push   %rbx
    7295:	48 83 ec 28          	sub    $0x28,%rsp
    7299:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    729d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    72a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    72a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    72ad:	48 89 d6             	mov    %rdx,%rsi
    72b0:	48 89 c7             	mov    %rax,%rdi
    72b3:	e8 4e 0e 00 00       	call   8106 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    72b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    72bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72c0:	48 89 d6             	mov    %rdx,%rsi
    72c3:	48 89 c7             	mov    %rax,%rdi
    72c6:	e8 6d 0e 00 00       	call   8138 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    72cb:	eb 1a                	jmp    72e7 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    72cd:	48 89 c3             	mov    %rax,%rbx
    72d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72d4:	48 89 c7             	mov    %rax,%rdi
    72d7:	e8 28 ea ff ff       	call   5d04 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    72dc:	48 89 d8             	mov    %rbx,%rax
    72df:	48 89 c7             	mov    %rax,%rdi
    72e2:	e8 e9 c2 ff ff       	call   35d0 <_Unwind_Resume@plt>
    72e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    72eb:	c9                   	leave
    72ec:	c3                   	ret
    72ed:	90                   	nop

00000000000072ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    72ee:	55                   	push   %rbp
    72ef:	48 89 e5             	mov    %rsp,%rbp
    72f2:	48 83 ec 10          	sub    $0x10,%rsp
    72f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    72fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7302:	48 89 c7             	mov    %rax,%rdi
    7305:	e8 24 00 00 00       	call   732e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    730a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    730d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7311:	48 8b 00             	mov    (%rax),%rax
    7314:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7318:	48 89 ce             	mov    %rcx,%rsi
    731b:	48 89 c7             	mov    %rax,%rdi
    731e:	e8 75 0e 00 00       	call   8198 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    7323:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7327:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    732b:	90                   	nop
    732c:	c9                   	leave
    732d:	c3                   	ret

000000000000732e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    732e:	55                   	push   %rbp
    732f:	48 89 e5             	mov    %rsp,%rbp
    7332:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    733a:	5d                   	pop    %rbp
    733b:	c3                   	ret

000000000000733c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    733c:	55                   	push   %rbp
    733d:	48 89 e5             	mov    %rsp,%rbp
    7340:	48 83 ec 20          	sub    $0x20,%rsp
    7344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    734c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7350:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7358:	48 89 d6             	mov    %rdx,%rsi
    735b:	48 89 c7             	mov    %rax,%rdi
    735e:	e8 5e 0e 00 00       	call   81c1 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    7363:	90                   	nop
    7364:	c9                   	leave
    7365:	c3                   	ret

0000000000007366 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    7366:	55                   	push   %rbp
    7367:	48 89 e5             	mov    %rsp,%rbp
    736a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    736e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    7372:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7376:	5d                   	pop    %rbp
    7377:	c3                   	ret

0000000000007378 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    7378:	55                   	push   %rbp
    7379:	48 89 e5             	mov    %rsp,%rbp
    737c:	48 83 ec 10          	sub    $0x10,%rsp
    7380:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7384:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    7388:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    738c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7390:	48 89 d6             	mov    %rdx,%rsi
    7393:	48 89 c7             	mov    %rax,%rdi
    7396:	e8 4d 0e 00 00       	call   81e8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    739b:	90                   	nop
    739c:	c9                   	leave
    739d:	c3                   	ret

000000000000739e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    739e:	55                   	push   %rbp
    739f:	48 89 e5             	mov    %rsp,%rbp
    73a2:	48 83 ec 20          	sub    $0x20,%rsp
    73a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    73ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    73b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    73b7:	74 17                	je     73d0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    73b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    73c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    73c5:	48 89 ce             	mov    %rcx,%rsi
    73c8:	48 89 c7             	mov    %rax,%rdi
    73cb:	e8 27 0e 00 00       	call   81f7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    73d0:	90                   	nop
    73d1:	c9                   	leave
    73d2:	c3                   	ret
    73d3:	90                   	nop

00000000000073d4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    73d4:	55                   	push   %rbp
    73d5:	48 89 e5             	mov    %rsp,%rbp
    73d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73dc:	90                   	nop
    73dd:	5d                   	pop    %rbp
    73de:	c3                   	ret
    73df:	90                   	nop

00000000000073e0 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    73e0:	55                   	push   %rbp
    73e1:	48 89 e5             	mov    %rsp,%rbp
    73e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    73e8:	90                   	nop
    73e9:	5d                   	pop    %rbp
    73ea:	c3                   	ret

00000000000073eb <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    73eb:	55                   	push   %rbp
    73ec:	48 89 e5             	mov    %rsp,%rbp
    73ef:	53                   	push   %rbx
    73f0:	48 83 ec 28          	sub    $0x28,%rsp
    73f4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    73f8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    73fc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7400:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7404:	48 89 d6             	mov    %rdx,%rsi
    7407:	48 89 c7             	mov    %rax,%rdi
    740a:	e8 d7 01 00 00       	call   75e6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    740f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7413:	48 89 c7             	mov    %rax,%rdi
    7416:	e8 0a 0e 00 00       	call   8225 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    741b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    741f:	0f 92 c3             	setb   %bl
    7422:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7426:	48 89 c7             	mov    %rax,%rdi
    7429:	e8 76 f0 ff ff       	call   64a4 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    742e:	84 db                	test   %bl,%bl
    7430:	74 0f                	je     7441 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    7432:	48 8d 05 df cb 00 00 	lea    0xcbdf(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    7439:	48 89 c7             	mov    %rax,%rdi
    743c:	e8 0f bd ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    7441:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7445:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7449:	c9                   	leave
    744a:	c3                   	ret
    744b:	90                   	nop

000000000000744c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    744c:	55                   	push   %rbp
    744d:	48 89 e5             	mov    %rsp,%rbp
    7450:	53                   	push   %rbx
    7451:	48 83 ec 28          	sub    $0x28,%rsp
    7455:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7459:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    745d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    7461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7465:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7469:	48 89 d6             	mov    %rdx,%rsi
    746c:	48 89 c7             	mov    %rax,%rdi
    746f:	e8 f4 0d 00 00       	call   8268 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    7474:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7478:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    747c:	48 89 d6             	mov    %rdx,%rsi
    747f:	48 89 c7             	mov    %rax,%rdi
    7482:	e8 13 0e 00 00       	call   829a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    7487:	eb 1a                	jmp    74a3 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    7489:	48 89 c3             	mov    %rax,%rbx
    748c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7490:	48 89 c7             	mov    %rax,%rdi
    7493:	e8 88 e8 ff ff       	call   5d20 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    7498:	48 89 d8             	mov    %rbx,%rax
    749b:	48 89 c7             	mov    %rax,%rdi
    749e:	e8 2d c1 ff ff       	call   35d0 <_Unwind_Resume@plt>
    74a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74a7:	c9                   	leave
    74a8:	c3                   	ret
    74a9:	90                   	nop

00000000000074aa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    74aa:	55                   	push   %rbp
    74ab:	48 89 e5             	mov    %rsp,%rbp
    74ae:	48 83 ec 10          	sub    $0x10,%rsp
    74b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    74ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74be:	48 89 c7             	mov    %rax,%rdi
    74c1:	e8 24 00 00 00       	call   74ea <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    74c6:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    74c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74cd:	48 8b 00             	mov    (%rax),%rax
    74d0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    74d4:	48 89 ce             	mov    %rcx,%rsi
    74d7:	48 89 c7             	mov    %rax,%rdi
    74da:	e8 1c 0e 00 00       	call   82fb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    74df:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    74e3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    74e7:	90                   	nop
    74e8:	c9                   	leave
    74e9:	c3                   	ret

00000000000074ea <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    74ea:	55                   	push   %rbp
    74eb:	48 89 e5             	mov    %rsp,%rbp
    74ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    74f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74f6:	5d                   	pop    %rbp
    74f7:	c3                   	ret

00000000000074f8 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    74f8:	55                   	push   %rbp
    74f9:	48 89 e5             	mov    %rsp,%rbp
    74fc:	48 83 ec 20          	sub    $0x20,%rsp
    7500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7504:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7508:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    750c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7514:	48 89 d6             	mov    %rdx,%rsi
    7517:	48 89 c7             	mov    %rax,%rdi
    751a:	e8 05 0e 00 00       	call   8324 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    751f:	90                   	nop
    7520:	c9                   	leave
    7521:	c3                   	ret

0000000000007522 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    7522:	55                   	push   %rbp
    7523:	48 89 e5             	mov    %rsp,%rbp
    7526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    752a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    752e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7532:	48 8b 10             	mov    (%rax),%rdx
    7535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7539:	48 89 10             	mov    %rdx,(%rax)
    753c:	90                   	nop
    753d:	5d                   	pop    %rbp
    753e:	c3                   	ret
    753f:	90                   	nop

0000000000007540 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    7540:	55                   	push   %rbp
    7541:	48 89 e5             	mov    %rsp,%rbp
    7544:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    7548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    754c:	5d                   	pop    %rbp
    754d:	c3                   	ret

000000000000754e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    754e:	55                   	push   %rbp
    754f:	48 89 e5             	mov    %rsp,%rbp
    7552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    7556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    755a:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    755e:	5d                   	pop    %rbp
    755f:	c3                   	ret

0000000000007560 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    7560:	55                   	push   %rbp
    7561:	48 89 e5             	mov    %rsp,%rbp
    7564:	48 83 ec 10          	sub    $0x10,%rsp
    7568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    756c:	e8 ed c3 ff ff       	call   395e <_ZSt23__is_constant_evaluatedv>
    7571:	84 c0                	test   %al,%al
    7573:	74 1a                	je     758f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    7575:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7579:	48 89 c7             	mov    %rax,%rdi
    757c:	e8 cd ff ff ff       	call   754e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    7581:	83 f0 01             	xor    $0x1,%eax
    7584:	84 c0                	test   %al,%al
    7586:	74 07                	je     758f <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    7588:	b8 01 00 00 00       	mov    $0x1,%eax
    758d:	eb 05                	jmp    7594 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    758f:	b8 00 00 00 00       	mov    $0x0,%eax
    7594:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    7596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    759a:	48 89 c7             	mov    %rax,%rdi
    759d:	e8 a8 0d 00 00       	call   834a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    75a2:	c9                   	leave
    75a3:	c3                   	ret

00000000000075a4 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    75a4:	55                   	push   %rbp
    75a5:	48 89 e5             	mov    %rsp,%rbp
    75a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    75ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75b0:	5d                   	pop    %rbp
    75b1:	c3                   	ret

00000000000075b2 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    75b2:	55                   	push   %rbp
    75b3:	48 89 e5             	mov    %rsp,%rbp
    75b6:	53                   	push   %rbx
    75b7:	48 83 ec 18          	sub    $0x18,%rsp
    75bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    75c3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    75c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    75cb:	48 89 c7             	mov    %rax,%rdi
    75ce:	e8 d1 ff ff ff       	call   75a4 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    75d3:	48 89 c6             	mov    %rax,%rsi
    75d6:	48 89 df             	mov    %rbx,%rdi
    75d9:	e8 7a 0d 00 00       	call   8358 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    75de:	90                   	nop
    75df:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    75e3:	c9                   	leave
    75e4:	c3                   	ret
    75e5:	90                   	nop

00000000000075e6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    75e6:	55                   	push   %rbp
    75e7:	48 89 e5             	mov    %rsp,%rbp
    75ea:	48 83 ec 10          	sub    $0x10,%rsp
    75ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    75f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    75fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75fe:	48 89 d6             	mov    %rdx,%rsi
    7601:	48 89 c7             	mov    %rax,%rdi
    7604:	e8 95 0d 00 00       	call   839e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    7609:	90                   	nop
    760a:	c9                   	leave
    760b:	c3                   	ret

000000000000760c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    760c:	55                   	push   %rbp
    760d:	48 89 e5             	mov    %rsp,%rbp
    7610:	48 83 ec 20          	sub    $0x20,%rsp
    7614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7618:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    761c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    7620:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7625:	74 17                	je     763e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    7627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    762b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    762f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7633:	48 89 ce             	mov    %rcx,%rsi
    7636:	48 89 c7             	mov    %rax,%rdi
    7639:	e8 6f 0d 00 00       	call   83ad <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    763e:	90                   	nop
    763f:	c9                   	leave
    7640:	c3                   	ret
    7641:	90                   	nop

0000000000007642 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7642:	55                   	push   %rbp
    7643:	48 89 e5             	mov    %rsp,%rbp
    7646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    764a:	90                   	nop
    764b:	5d                   	pop    %rbp
    764c:	c3                   	ret
    764d:	90                   	nop

000000000000764e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    764e:	55                   	push   %rbp
    764f:	48 89 e5             	mov    %rsp,%rbp
    7652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7656:	90                   	nop
    7657:	5d                   	pop    %rbp
    7658:	c3                   	ret

0000000000007659 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    7659:	55                   	push   %rbp
    765a:	48 89 e5             	mov    %rsp,%rbp
    765d:	53                   	push   %rbx
    765e:	48 83 ec 28          	sub    $0x28,%rsp
    7662:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7666:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    766a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    766e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7672:	48 89 d6             	mov    %rdx,%rsi
    7675:	48 89 c7             	mov    %rax,%rdi
    7678:	e8 25 01 00 00       	call   77a2 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    767d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7681:	48 89 c7             	mov    %rax,%rdi
    7684:	e8 52 0d 00 00       	call   83db <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    7689:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    768d:	0f 92 c3             	setb   %bl
    7690:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7694:	48 89 c7             	mov    %rax,%rdi
    7697:	e8 b8 f0 ff ff       	call   6754 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    769c:	84 db                	test   %bl,%bl
    769e:	74 0f                	je     76af <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    76a0:	48 8d 05 71 c9 00 00 	lea    0xc971(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    76a7:	48 89 c7             	mov    %rax,%rdi
    76aa:	e8 a1 ba ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    76af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    76b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    76b7:	c9                   	leave
    76b8:	c3                   	ret
    76b9:	90                   	nop

00000000000076ba <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    76ba:	55                   	push   %rbp
    76bb:	48 89 e5             	mov    %rsp,%rbp
    76be:	53                   	push   %rbx
    76bf:	48 83 ec 28          	sub    $0x28,%rsp
    76c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    76cb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    76cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76d3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    76d7:	48 89 d6             	mov    %rdx,%rsi
    76da:	48 89 c7             	mov    %rax,%rdi
    76dd:	e8 3c 0d 00 00       	call   841e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    76e2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    76e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76ea:	48 89 d6             	mov    %rdx,%rsi
    76ed:	48 89 c7             	mov    %rax,%rdi
    76f0:	e8 5b 0d 00 00       	call   8450 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    76f5:	eb 1a                	jmp    7711 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    76f7:	48 89 c3             	mov    %rax,%rbx
    76fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76fe:	48 89 c7             	mov    %rax,%rdi
    7701:	e8 36 e6 ff ff       	call   5d3c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    7706:	48 89 d8             	mov    %rbx,%rax
    7709:	48 89 c7             	mov    %rax,%rdi
    770c:	e8 bf be ff ff       	call   35d0 <_Unwind_Resume@plt>
    7711:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7715:	c9                   	leave
    7716:	c3                   	ret
    7717:	90                   	nop

0000000000007718 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    7718:	55                   	push   %rbp
    7719:	48 89 e5             	mov    %rsp,%rbp
    771c:	48 83 ec 10          	sub    $0x10,%rsp
    7720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7724:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    7728:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    772c:	48 89 c7             	mov    %rax,%rdi
    772f:	e8 24 00 00 00       	call   7758 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    7734:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    7737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    773b:	48 8b 00             	mov    (%rax),%rax
    773e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7742:	48 89 ce             	mov    %rcx,%rsi
    7745:	48 89 c7             	mov    %rax,%rdi
    7748:	e8 59 0d 00 00       	call   84a6 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    774d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7751:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7755:	90                   	nop
    7756:	c9                   	leave
    7757:	c3                   	ret

0000000000007758 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7758:	55                   	push   %rbp
    7759:	48 89 e5             	mov    %rsp,%rbp
    775c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7764:	5d                   	pop    %rbp
    7765:	c3                   	ret

0000000000007766 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7766:	55                   	push   %rbp
    7767:	48 89 e5             	mov    %rsp,%rbp
    776a:	48 83 ec 20          	sub    $0x20,%rsp
    776e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7772:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7776:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    777a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    777e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7782:	48 89 d6             	mov    %rdx,%rsi
    7785:	48 89 c7             	mov    %rax,%rdi
    7788:	e8 42 0d 00 00       	call   84cf <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    778d:	90                   	nop
    778e:	c9                   	leave
    778f:	c3                   	ret

0000000000007790 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    7790:	55                   	push   %rbp
    7791:	48 89 e5             	mov    %rsp,%rbp
    7794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7798:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    779c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    77a0:	5d                   	pop    %rbp
    77a1:	c3                   	ret

00000000000077a2 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    77a2:	55                   	push   %rbp
    77a3:	48 89 e5             	mov    %rsp,%rbp
    77a6:	48 83 ec 10          	sub    $0x10,%rsp
    77aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    77b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    77b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77ba:	48 89 d6             	mov    %rdx,%rsi
    77bd:	48 89 c7             	mov    %rax,%rdi
    77c0:	e8 31 0d 00 00       	call   84f6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    77c5:	90                   	nop
    77c6:	c9                   	leave
    77c7:	c3                   	ret

00000000000077c8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    77c8:	55                   	push   %rbp
    77c9:	48 89 e5             	mov    %rsp,%rbp
    77cc:	48 83 ec 20          	sub    $0x20,%rsp
    77d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    77dc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    77e1:	74 17                	je     77fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    77e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    77eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    77ef:	48 89 ce             	mov    %rcx,%rsi
    77f2:	48 89 c7             	mov    %rax,%rdi
    77f5:	e8 0b 0d 00 00       	call   8505 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    77fa:	90                   	nop
    77fb:	c9                   	leave
    77fc:	c3                   	ret
    77fd:	90                   	nop

00000000000077fe <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    77fe:	55                   	push   %rbp
    77ff:	48 89 e5             	mov    %rsp,%rbp
    7802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7806:	90                   	nop
    7807:	5d                   	pop    %rbp
    7808:	c3                   	ret
    7809:	90                   	nop

000000000000780a <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    780a:	55                   	push   %rbp
    780b:	48 89 e5             	mov    %rsp,%rbp
    780e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7812:	90                   	nop
    7813:	5d                   	pop    %rbp
    7814:	c3                   	ret

0000000000007815 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    7815:	55                   	push   %rbp
    7816:	48 89 e5             	mov    %rsp,%rbp
    7819:	53                   	push   %rbx
    781a:	48 83 ec 28          	sub    $0x28,%rsp
    781e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7822:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    7826:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    782a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    782e:	48 89 d6             	mov    %rdx,%rsi
    7831:	48 89 c7             	mov    %rax,%rdi
    7834:	e8 25 01 00 00       	call   795e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    7839:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    783d:	48 89 c7             	mov    %rax,%rdi
    7840:	e8 ee 0c 00 00       	call   8533 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    7845:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    7849:	0f 92 c3             	setb   %bl
    784c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7850:	48 89 c7             	mov    %rax,%rdi
    7853:	e8 60 f0 ff ff       	call   68b8 <_ZNSaI16VkPresentModeKHRED1Ev>
    7858:	84 db                	test   %bl,%bl
    785a:	74 0f                	je     786b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    785c:	48 8d 05 b5 c7 00 00 	lea    0xc7b5(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    7863:	48 89 c7             	mov    %rax,%rdi
    7866:	e8 e5 b8 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    786b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    786f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7873:	c9                   	leave
    7874:	c3                   	ret
    7875:	90                   	nop

0000000000007876 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    7876:	55                   	push   %rbp
    7877:	48 89 e5             	mov    %rsp,%rbp
    787a:	53                   	push   %rbx
    787b:	48 83 ec 28          	sub    $0x28,%rsp
    787f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7883:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7887:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    788b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    788f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7893:	48 89 d6             	mov    %rdx,%rsi
    7896:	48 89 c7             	mov    %rax,%rdi
    7899:	e8 d8 0c 00 00       	call   8576 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    789e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    78a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78a6:	48 89 d6             	mov    %rdx,%rsi
    78a9:	48 89 c7             	mov    %rax,%rdi
    78ac:	e8 f7 0c 00 00       	call   85a8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    78b1:	eb 1a                	jmp    78cd <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    78b3:	48 89 c3             	mov    %rax,%rbx
    78b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78ba:	48 89 c7             	mov    %rax,%rdi
    78bd:	e8 96 e4 ff ff       	call   5d58 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    78c2:	48 89 d8             	mov    %rbx,%rax
    78c5:	48 89 c7             	mov    %rax,%rdi
    78c8:	e8 03 bd ff ff       	call   35d0 <_Unwind_Resume@plt>
    78cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    78d1:	c9                   	leave
    78d2:	c3                   	ret
    78d3:	90                   	nop

00000000000078d4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    78d4:	55                   	push   %rbp
    78d5:	48 89 e5             	mov    %rsp,%rbp
    78d8:	48 83 ec 10          	sub    $0x10,%rsp
    78dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    78e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78e8:	48 89 c7             	mov    %rax,%rdi
    78eb:	e8 24 00 00 00       	call   7914 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    78f0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    78f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78f7:	48 8b 00             	mov    (%rax),%rax
    78fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    78fe:	48 89 ce             	mov    %rcx,%rsi
    7901:	48 89 c7             	mov    %rax,%rdi
    7904:	e8 f5 0c 00 00       	call   85fe <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    7909:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    790d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7911:	90                   	nop
    7912:	c9                   	leave
    7913:	c3                   	ret

0000000000007914 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7914:	55                   	push   %rbp
    7915:	48 89 e5             	mov    %rsp,%rbp
    7918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    791c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7920:	5d                   	pop    %rbp
    7921:	c3                   	ret

0000000000007922 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7922:	55                   	push   %rbp
    7923:	48 89 e5             	mov    %rsp,%rbp
    7926:	48 83 ec 20          	sub    $0x20,%rsp
    792a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    792e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7932:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7936:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    793a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    793e:	48 89 d6             	mov    %rdx,%rsi
    7941:	48 89 c7             	mov    %rax,%rdi
    7944:	e8 de 0c 00 00       	call   8627 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    7949:	90                   	nop
    794a:	c9                   	leave
    794b:	c3                   	ret

000000000000794c <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    794c:	55                   	push   %rbp
    794d:	48 89 e5             	mov    %rsp,%rbp
    7950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7954:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    7958:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    795c:	5d                   	pop    %rbp
    795d:	c3                   	ret

000000000000795e <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    795e:	55                   	push   %rbp
    795f:	48 89 e5             	mov    %rsp,%rbp
    7962:	48 83 ec 10          	sub    $0x10,%rsp
    7966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    796a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    796e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7976:	48 89 d6             	mov    %rdx,%rsi
    7979:	48 89 c7             	mov    %rax,%rdi
    797c:	e8 cd 0c 00 00       	call   864e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    7981:	90                   	nop
    7982:	c9                   	leave
    7983:	c3                   	ret

0000000000007984 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    7984:	55                   	push   %rbp
    7985:	48 89 e5             	mov    %rsp,%rbp
    7988:	48 83 ec 20          	sub    $0x20,%rsp
    798c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7990:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7994:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    7998:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    799d:	74 17                	je     79b6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    799f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    79a7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    79ab:	48 89 ce             	mov    %rcx,%rsi
    79ae:	48 89 c7             	mov    %rax,%rdi
    79b1:	e8 a7 0c 00 00       	call   865d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    79b6:	90                   	nop
    79b7:	c9                   	leave
    79b8:	c3                   	ret
    79b9:	90                   	nop

00000000000079ba <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    79ba:	55                   	push   %rbp
    79bb:	48 89 e5             	mov    %rsp,%rbp
    79be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79c2:	90                   	nop
    79c3:	5d                   	pop    %rbp
    79c4:	c3                   	ret
    79c5:	90                   	nop

00000000000079c6 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    79c6:	55                   	push   %rbp
    79c7:	48 89 e5             	mov    %rsp,%rbp
    79ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79ce:	90                   	nop
    79cf:	5d                   	pop    %rbp
    79d0:	c3                   	ret

00000000000079d1 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    79d1:	55                   	push   %rbp
    79d2:	48 89 e5             	mov    %rsp,%rbp
    79d5:	53                   	push   %rbx
    79d6:	48 83 ec 28          	sub    $0x28,%rsp
    79da:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    79de:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    79e2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    79e6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79ea:	48 89 d6             	mov    %rdx,%rsi
    79ed:	48 89 c7             	mov    %rax,%rdi
    79f0:	e8 25 01 00 00       	call   7b1a <_ZNSaIP9VkImage_TEC1ERKS1_>
    79f5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79f9:	48 89 c7             	mov    %rax,%rdi
    79fc:	e8 8a 0c 00 00       	call   868b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    7a01:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    7a05:	0f 92 c3             	setb   %bl
    7a08:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a0c:	48 89 c7             	mov    %rax,%rdi
    7a0f:	e8 08 f0 ff ff       	call   6a1c <_ZNSaIP9VkImage_TED1Ev>
    7a14:	84 db                	test   %bl,%bl
    7a16:	74 0f                	je     7a27 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    7a18:	48 8d 05 f9 c5 00 00 	lea    0xc5f9(%rip),%rax        # 14018 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    7a1f:	48 89 c7             	mov    %rax,%rdi
    7a22:	e8 29 b7 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    7a27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    7a2b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a2f:	c9                   	leave
    7a30:	c3                   	ret
    7a31:	90                   	nop

0000000000007a32 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    7a32:	55                   	push   %rbp
    7a33:	48 89 e5             	mov    %rsp,%rbp
    7a36:	53                   	push   %rbx
    7a37:	48 83 ec 28          	sub    $0x28,%rsp
    7a3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a3f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7a43:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    7a47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a4b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7a4f:	48 89 d6             	mov    %rdx,%rsi
    7a52:	48 89 c7             	mov    %rax,%rdi
    7a55:	e8 74 0c 00 00       	call   86ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    7a5a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7a5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a62:	48 89 d6             	mov    %rdx,%rsi
    7a65:	48 89 c7             	mov    %rax,%rdi
    7a68:	e8 93 0c 00 00       	call   8700 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    7a6d:	eb 1a                	jmp    7a89 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    7a6f:	48 89 c3             	mov    %rax,%rbx
    7a72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a76:	48 89 c7             	mov    %rax,%rdi
    7a79:	e8 f6 e2 ff ff       	call   5d74 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    7a7e:	48 89 d8             	mov    %rbx,%rax
    7a81:	48 89 c7             	mov    %rax,%rdi
    7a84:	e8 47 bb ff ff       	call   35d0 <_Unwind_Resume@plt>
    7a89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7a8d:	c9                   	leave
    7a8e:	c3                   	ret
    7a8f:	90                   	nop

0000000000007a90 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    7a90:	55                   	push   %rbp
    7a91:	48 89 e5             	mov    %rsp,%rbp
    7a94:	48 83 ec 10          	sub    $0x10,%rsp
    7a98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    7aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7aa4:	48 89 c7             	mov    %rax,%rdi
    7aa7:	e8 24 00 00 00       	call   7ad0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    7aac:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    7aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ab3:	48 8b 00             	mov    (%rax),%rax
    7ab6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7aba:	48 89 ce             	mov    %rcx,%rsi
    7abd:	48 89 c7             	mov    %rax,%rdi
    7ac0:	e8 91 0c 00 00       	call   8756 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    7ac5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ac9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    7acd:	90                   	nop
    7ace:	c9                   	leave
    7acf:	c3                   	ret

0000000000007ad0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    7ad0:	55                   	push   %rbp
    7ad1:	48 89 e5             	mov    %rsp,%rbp
    7ad4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7adc:	5d                   	pop    %rbp
    7add:	c3                   	ret

0000000000007ade <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    7ade:	55                   	push   %rbp
    7adf:	48 89 e5             	mov    %rsp,%rbp
    7ae2:	48 83 ec 20          	sub    $0x20,%rsp
    7ae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7aea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7aee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    7af2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7afa:	48 89 d6             	mov    %rdx,%rsi
    7afd:	48 89 c7             	mov    %rax,%rdi
    7b00:	e8 7a 0c 00 00       	call   877f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    7b05:	90                   	nop
    7b06:	c9                   	leave
    7b07:	c3                   	ret

0000000000007b08 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    7b08:	55                   	push   %rbp
    7b09:	48 89 e5             	mov    %rsp,%rbp
    7b0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    7b14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b18:	5d                   	pop    %rbp
    7b19:	c3                   	ret

0000000000007b1a <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    7b1a:	55                   	push   %rbp
    7b1b:	48 89 e5             	mov    %rsp,%rbp
    7b1e:	48 83 ec 10          	sub    $0x10,%rsp
    7b22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    7b2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b32:	48 89 d6             	mov    %rdx,%rsi
    7b35:	48 89 c7             	mov    %rax,%rdi
    7b38:	e8 69 0c 00 00       	call   87a6 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    7b3d:	90                   	nop
    7b3e:	c9                   	leave
    7b3f:	c3                   	ret

0000000000007b40 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    7b40:	55                   	push   %rbp
    7b41:	48 89 e5             	mov    %rsp,%rbp
    7b44:	48 83 ec 20          	sub    $0x20,%rsp
    7b48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    7b54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7b59:	74 17                	je     7b72 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    7b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7b67:	48 89 ce             	mov    %rcx,%rsi
    7b6a:	48 89 c7             	mov    %rax,%rdi
    7b6d:	e8 43 0c 00 00       	call   87b5 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    7b72:	90                   	nop
    7b73:	c9                   	leave
    7b74:	c3                   	ret

0000000000007b75 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7b75:	55                   	push   %rbp
    7b76:	48 89 e5             	mov    %rsp,%rbp
    7b79:	48 83 ec 20          	sub    $0x20,%rsp
    7b7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7b81:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    7b88:	03 3f 00 
    7b8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b93:	48 89 c7             	mov    %rax,%rdi
    7b96:	e8 48 0c 00 00       	call   87e3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    7b9b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7b9f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7ba3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7ba7:	48 89 d6             	mov    %rdx,%rsi
    7baa:	48 89 c7             	mov    %rax,%rdi
    7bad:	e8 5b c6 ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    7bb2:	48 8b 00             	mov    (%rax),%rax
      }
    7bb5:	c9                   	leave
    7bb6:	c3                   	ret
    7bb7:	90                   	nop

0000000000007bb8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7bb8:	55                   	push   %rbp
    7bb9:	48 89 e5             	mov    %rsp,%rbp
    7bbc:	48 83 ec 10          	sub    $0x10,%rsp
    7bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7bc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bd0:	48 89 d6             	mov    %rdx,%rsi
    7bd3:	48 89 c7             	mov    %rax,%rdi
    7bd6:	e8 e9 f0 ff ff       	call   6cc4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    7bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bdf:	48 89 c7             	mov    %rax,%rdi
    7be2:	e8 17 0c 00 00       	call   87fe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    7be7:	90                   	nop
    7be8:	c9                   	leave
    7be9:	c3                   	ret

0000000000007bea <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7bea:	55                   	push   %rbp
    7beb:	48 89 e5             	mov    %rsp,%rbp
    7bee:	48 83 ec 10          	sub    $0x10,%rsp
    7bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7bfa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7bfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c02:	48 89 d6             	mov    %rdx,%rsi
    7c05:	48 89 c7             	mov    %rax,%rdi
    7c08:	e8 1f 0c 00 00       	call   882c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    7c0d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c11:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7c14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c18:	48 8b 10             	mov    (%rax),%rdx
    7c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c1f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c27:	48 8b 08             	mov    (%rax),%rcx
    7c2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c2e:	48 89 d0             	mov    %rdx,%rax
    7c31:	48 c1 e0 06          	shl    $0x6,%rax
    7c35:	48 01 d0             	add    %rdx,%rax
    7c38:	48 c1 e0 03          	shl    $0x3,%rax
    7c3c:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    7c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c44:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7c48:	90                   	nop
    7c49:	c9                   	leave
    7c4a:	c3                   	ret

0000000000007c4b <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7c4b:	55                   	push   %rbp
    7c4c:	48 89 e5             	mov    %rsp,%rbp
    7c4f:	48 83 ec 20          	sub    $0x20,%rsp
    7c53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7c5b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7c5f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c67:	48 89 d6             	mov    %rdx,%rsi
    7c6a:	48 89 c7             	mov    %rax,%rdi
    7c6d:	e8 ed 0b 00 00       	call   885f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    7c72:	c9                   	leave
    7c73:	c3                   	ret

0000000000007c74 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7c74:	55                   	push   %rbp
    7c75:	48 89 e5             	mov    %rsp,%rbp
    7c78:	48 83 ec 10          	sub    $0x10,%rsp
    7c7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7c84:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c8c:	48 89 d6             	mov    %rdx,%rsi
    7c8f:	48 89 c7             	mov    %rax,%rdi
    7c92:	e8 f1 0b 00 00       	call   8888 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    7c97:	90                   	nop
    7c98:	c9                   	leave
    7c99:	c3                   	ret

0000000000007c9a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    7c9a:	55                   	push   %rbp
    7c9b:	48 89 e5             	mov    %rsp,%rbp
    7c9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ca2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ca6:	90                   	nop
    7ca7:	5d                   	pop    %rbp
    7ca8:	c3                   	ret

0000000000007ca9 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7ca9:	55                   	push   %rbp
    7caa:	48 89 e5             	mov    %rsp,%rbp
    7cad:	48 83 ec 20          	sub    $0x20,%rsp
    7cb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cb5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7cb9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7cbd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7cc1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cc9:	48 89 ce             	mov    %rcx,%rsi
    7ccc:	48 89 c7             	mov    %rax,%rdi
    7ccf:	e8 c4 0b 00 00       	call   8898 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    7cd4:	90                   	nop
    7cd5:	c9                   	leave
    7cd6:	c3                   	ret

0000000000007cd7 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7cd7:	55                   	push   %rbp
    7cd8:	48 89 e5             	mov    %rsp,%rbp
    7cdb:	48 83 ec 20          	sub    $0x20,%rsp
    7cdf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7ce3:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    7cea:	07 7e 00 
    7ced:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7cf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cf5:	48 89 c7             	mov    %rax,%rdi
    7cf8:	e8 d5 0b 00 00       	call   88d2 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    7cfd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7d01:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7d05:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7d09:	48 89 d6             	mov    %rdx,%rsi
    7d0c:	48 89 c7             	mov    %rax,%rdi
    7d0f:	e8 f9 c4 ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    7d14:	48 8b 00             	mov    (%rax),%rax
      }
    7d17:	c9                   	leave
    7d18:	c3                   	ret
    7d19:	90                   	nop

0000000000007d1a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7d1a:	55                   	push   %rbp
    7d1b:	48 89 e5             	mov    %rsp,%rbp
    7d1e:	48 83 ec 10          	sub    $0x10,%rsp
    7d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7d2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d32:	48 89 d6             	mov    %rdx,%rsi
    7d35:	48 89 c7             	mov    %rax,%rdi
    7d38:	e8 43 f1 ff ff       	call   6e80 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    7d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d41:	48 89 c7             	mov    %rax,%rdi
    7d44:	e8 a3 0b 00 00       	call   88ec <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    7d49:	90                   	nop
    7d4a:	c9                   	leave
    7d4b:	c3                   	ret

0000000000007d4c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7d4c:	55                   	push   %rbp
    7d4d:	48 89 e5             	mov    %rsp,%rbp
    7d50:	48 83 ec 10          	sub    $0x10,%rsp
    7d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7d5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d64:	48 89 d6             	mov    %rdx,%rsi
    7d67:	48 89 c7             	mov    %rax,%rdi
    7d6a:	e8 ab 0b 00 00       	call   891a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    7d6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7d73:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7d76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d7a:	48 8b 10             	mov    (%rax),%rdx
    7d7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d81:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7d85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d89:	48 8b 08             	mov    (%rax),%rcx
    7d8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d90:	48 89 d0             	mov    %rdx,%rax
    7d93:	48 c1 e0 06          	shl    $0x6,%rax
    7d97:	48 01 d0             	add    %rdx,%rax
    7d9a:	48 c1 e0 02          	shl    $0x2,%rax
    7d9e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    7da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7da6:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7daa:	90                   	nop
    7dab:	c9                   	leave
    7dac:	c3                   	ret

0000000000007dad <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7dad:	55                   	push   %rbp
    7dae:	48 89 e5             	mov    %rsp,%rbp
    7db1:	48 83 ec 20          	sub    $0x20,%rsp
    7db5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7db9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7dbd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7dc1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dc9:	48 89 d6             	mov    %rdx,%rsi
    7dcc:	48 89 c7             	mov    %rax,%rdi
    7dcf:	e8 79 0b 00 00       	call   894d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    7dd4:	c9                   	leave
    7dd5:	c3                   	ret

0000000000007dd6 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    7dd6:	55                   	push   %rbp
    7dd7:	48 89 e5             	mov    %rsp,%rbp
    7dda:	48 83 ec 10          	sub    $0x10,%rsp
    7dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7de2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    7de6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dee:	48 89 d6             	mov    %rdx,%rsi
    7df1:	48 89 c7             	mov    %rax,%rdi
    7df4:	e8 7d 0b 00 00       	call   8976 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    7df9:	90                   	nop
    7dfa:	c9                   	leave
    7dfb:	c3                   	ret

0000000000007dfc <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    7dfc:	55                   	push   %rbp
    7dfd:	48 89 e5             	mov    %rsp,%rbp
    7e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e08:	90                   	nop
    7e09:	5d                   	pop    %rbp
    7e0a:	c3                   	ret

0000000000007e0b <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7e0b:	55                   	push   %rbp
    7e0c:	48 89 e5             	mov    %rsp,%rbp
    7e0f:	48 83 ec 20          	sub    $0x20,%rsp
    7e13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7e1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7e23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e2b:	48 89 ce             	mov    %rcx,%rsi
    7e2e:	48 89 c7             	mov    %rax,%rdi
    7e31:	e8 50 0b 00 00       	call   8986 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    7e36:	90                   	nop
    7e37:	c9                   	leave
    7e38:	c3                   	ret

0000000000007e39 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7e39:	55                   	push   %rbp
    7e3a:	48 89 e5             	mov    %rsp,%rbp
    7e3d:	48 83 ec 20          	sub    $0x20,%rsp
    7e41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7e45:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7e4c:	ff ff 0f 
    7e4f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7e53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e57:	48 89 c7             	mov    %rax,%rdi
    7e5a:	e8 61 0b 00 00       	call   89c0 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    7e5f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7e63:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7e67:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7e6b:	48 89 d6             	mov    %rdx,%rsi
    7e6e:	48 89 c7             	mov    %rax,%rdi
    7e71:	e8 97 c3 ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    7e76:	48 8b 00             	mov    (%rax),%rax
      }
    7e79:	c9                   	leave
    7e7a:	c3                   	ret
    7e7b:	90                   	nop

0000000000007e7c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7e7c:	55                   	push   %rbp
    7e7d:	48 89 e5             	mov    %rsp,%rbp
    7e80:	48 83 ec 10          	sub    $0x10,%rsp
    7e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7e8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e94:	48 89 d6             	mov    %rdx,%rsi
    7e97:	48 89 c7             	mov    %rax,%rdi
    7e9a:	e8 61 f1 ff ff       	call   7000 <_ZNSaIPKcEC1ERKS1_>
    7e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea3:	48 89 c7             	mov    %rax,%rdi
    7ea6:	e8 2f 0b 00 00       	call   89da <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    7eab:	90                   	nop
    7eac:	c9                   	leave
    7ead:	c3                   	ret

0000000000007eae <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7eae:	55                   	push   %rbp
    7eaf:	48 89 e5             	mov    %rsp,%rbp
    7eb2:	48 83 ec 10          	sub    $0x10,%rsp
    7eb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7eba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7ebe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ec6:	48 89 d6             	mov    %rdx,%rsi
    7ec9:	48 89 c7             	mov    %rax,%rdi
    7ecc:	e8 37 0b 00 00       	call   8a08 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    7ed1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7ed5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    7ed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7edc:	48 8b 10             	mov    (%rax),%rdx
    7edf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ee3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    7ee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eeb:	48 8b 00             	mov    (%rax),%rax
    7eee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ef2:	48 c1 e2 03          	shl    $0x3,%rdx
    7ef6:	48 01 c2             	add    %rax,%rdx
    7ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7efd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    7f01:	90                   	nop
    7f02:	c9                   	leave
    7f03:	c3                   	ret

0000000000007f04 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    7f04:	55                   	push   %rbp
    7f05:	48 89 e5             	mov    %rsp,%rbp
    7f08:	48 83 ec 20          	sub    $0x20,%rsp
    7f0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    7f18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f20:	48 89 d6             	mov    %rdx,%rsi
    7f23:	48 89 c7             	mov    %rax,%rdi
    7f26:	e8 10 0b 00 00       	call   8a3b <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    7f2b:	c9                   	leave
    7f2c:	c3                   	ret
    7f2d:	90                   	nop

0000000000007f2e <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    7f2e:	55                   	push   %rbp
    7f2f:	48 89 e5             	mov    %rsp,%rbp
    7f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f3a:	90                   	nop
    7f3b:	5d                   	pop    %rbp
    7f3c:	c3                   	ret

0000000000007f3d <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7f3d:	55                   	push   %rbp
    7f3e:	48 89 e5             	mov    %rsp,%rbp
    7f41:	48 83 ec 20          	sub    $0x20,%rsp
    7f45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f4d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7f51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f55:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f5d:	48 89 ce             	mov    %rcx,%rsi
    7f60:	48 89 c7             	mov    %rax,%rdi
    7f63:	e8 fc 0a 00 00       	call   8a64 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    7f68:	90                   	nop
    7f69:	c9                   	leave
    7f6a:	c3                   	ret

0000000000007f6b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    7f6b:	55                   	push   %rbp
    7f6c:	48 89 e5             	mov    %rsp,%rbp
    7f6f:	48 83 ec 20          	sub    $0x20,%rsp
    7f73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    7f77:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7f7e:	ff ff 0f 
    7f81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    7f85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f89:	48 89 c7             	mov    %rax,%rdi
    7f8c:	e8 04 0b 00 00       	call   8a95 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    7f91:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    7f95:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7f99:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7f9d:	48 89 d6             	mov    %rdx,%rsi
    7fa0:	48 89 c7             	mov    %rax,%rdi
    7fa3:	e8 65 c2 ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    7fa8:	48 8b 00             	mov    (%rax),%rax
      }
    7fab:	c9                   	leave
    7fac:	c3                   	ret
    7fad:	90                   	nop

0000000000007fae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    7fae:	55                   	push   %rbp
    7faf:	48 89 e5             	mov    %rsp,%rbp
    7fb2:	48 83 ec 10          	sub    $0x10,%rsp
    7fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    7fbe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7fc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc6:	48 89 d6             	mov    %rdx,%rsi
    7fc9:	48 89 c7             	mov    %rax,%rdi
    7fcc:	e8 eb f1 ff ff       	call   71bc <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    7fd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fd5:	48 89 c7             	mov    %rax,%rdi
    7fd8:	e8 d3 0a 00 00       	call   8ab0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    7fdd:	90                   	nop
    7fde:	c9                   	leave
    7fdf:	c3                   	ret

0000000000007fe0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    7fe0:	55                   	push   %rbp
    7fe1:	48 89 e5             	mov    %rsp,%rbp
    7fe4:	48 83 ec 10          	sub    $0x10,%rsp
    7fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    7ff0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ff8:	48 89 d6             	mov    %rdx,%rsi
    7ffb:	48 89 c7             	mov    %rax,%rdi
    7ffe:	e8 db 0a 00 00       	call   8ade <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    8003:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8007:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    800a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    800e:	48 8b 10             	mov    (%rax),%rdx
    8011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8015:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    8019:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    801d:	48 8b 00             	mov    (%rax),%rax
    8020:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8024:	48 c1 e2 03          	shl    $0x3,%rdx
    8028:	48 01 c2             	add    %rax,%rdx
    802b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    802f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    8033:	90                   	nop
    8034:	c9                   	leave
    8035:	c3                   	ret

0000000000008036 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    8036:	55                   	push   %rbp
    8037:	48 89 e5             	mov    %rsp,%rbp
    803a:	48 83 ec 20          	sub    $0x20,%rsp
    803e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8042:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8046:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    804a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    804e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8052:	48 89 d6             	mov    %rdx,%rsi
    8055:	48 89 c7             	mov    %rax,%rdi
    8058:	e8 b4 0a 00 00       	call   8b11 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    805d:	c9                   	leave
    805e:	c3                   	ret

000000000000805f <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    805f:	55                   	push   %rbp
    8060:	48 89 e5             	mov    %rsp,%rbp
    8063:	48 83 ec 10          	sub    $0x10,%rsp
    8067:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    806b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    806f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8073:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8077:	48 89 d6             	mov    %rdx,%rsi
    807a:	48 89 c7             	mov    %rax,%rdi
    807d:	e8 b8 0a 00 00       	call   8b3a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    8082:	90                   	nop
    8083:	c9                   	leave
    8084:	c3                   	ret
    8085:	90                   	nop

0000000000008086 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    8086:	55                   	push   %rbp
    8087:	48 89 e5             	mov    %rsp,%rbp
    808a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    808e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8092:	90                   	nop
    8093:	5d                   	pop    %rbp
    8094:	c3                   	ret

0000000000008095 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    8095:	55                   	push   %rbp
    8096:	48 89 e5             	mov    %rsp,%rbp
    8099:	48 83 ec 20          	sub    $0x20,%rsp
    809d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    80a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    80a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    80ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    80b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b5:	48 89 ce             	mov    %rcx,%rsi
    80b8:	48 89 c7             	mov    %rax,%rdi
    80bb:	e8 8a 0a 00 00       	call   8b4a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    80c0:	90                   	nop
    80c1:	c9                   	leave
    80c2:	c3                   	ret

00000000000080c3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    80c3:	55                   	push   %rbp
    80c4:	48 89 e5             	mov    %rsp,%rbp
    80c7:	48 83 ec 20          	sub    $0x20,%rsp
    80cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    80cf:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    80d6:	55 55 05 
    80d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    80dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80e1:	48 89 c7             	mov    %rax,%rdi
    80e4:	e8 92 0a 00 00       	call   8b7b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    80e9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    80ed:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    80f1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    80f5:	48 89 d6             	mov    %rdx,%rsi
    80f8:	48 89 c7             	mov    %rax,%rdi
    80fb:	e8 0d c1 ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    8100:	48 8b 00             	mov    (%rax),%rax
      }
    8103:	c9                   	leave
    8104:	c3                   	ret
    8105:	90                   	nop

0000000000008106 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    8106:	55                   	push   %rbp
    8107:	48 89 e5             	mov    %rsp,%rbp
    810a:	48 83 ec 10          	sub    $0x10,%rsp
    810e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8112:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    8116:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    811a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    811e:	48 89 d6             	mov    %rdx,%rsi
    8121:	48 89 c7             	mov    %rax,%rdi
    8124:	e8 4f f2 ff ff       	call   7378 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    8129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    812d:	48 89 c7             	mov    %rax,%rdi
    8130:	e8 61 0a 00 00       	call   8b96 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    8135:	90                   	nop
    8136:	c9                   	leave
    8137:	c3                   	ret

0000000000008138 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    8138:	55                   	push   %rbp
    8139:	48 89 e5             	mov    %rsp,%rbp
    813c:	48 83 ec 10          	sub    $0x10,%rsp
    8140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8144:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    8148:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    814c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8150:	48 89 d6             	mov    %rdx,%rsi
    8153:	48 89 c7             	mov    %rax,%rdi
    8156:	e8 69 0a 00 00       	call   8bc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    815b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    815f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    8162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8166:	48 8b 10             	mov    (%rax),%rdx
    8169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    816d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    8171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8175:	48 8b 08             	mov    (%rax),%rcx
    8178:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    817c:	48 89 d0             	mov    %rdx,%rax
    817f:	48 01 c0             	add    %rax,%rax
    8182:	48 01 d0             	add    %rdx,%rax
    8185:	48 c1 e0 03          	shl    $0x3,%rax
    8189:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    818d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8191:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    8195:	90                   	nop
    8196:	c9                   	leave
    8197:	c3                   	ret

0000000000008198 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    8198:	55                   	push   %rbp
    8199:	48 89 e5             	mov    %rsp,%rbp
    819c:	48 83 ec 20          	sub    $0x20,%rsp
    81a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    81ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    81b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81b4:	48 89 d6             	mov    %rdx,%rsi
    81b7:	48 89 c7             	mov    %rax,%rdi
    81ba:	e8 38 0a 00 00       	call   8bf7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    81bf:	c9                   	leave
    81c0:	c3                   	ret

00000000000081c1 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    81c1:	55                   	push   %rbp
    81c2:	48 89 e5             	mov    %rsp,%rbp
    81c5:	48 83 ec 10          	sub    $0x10,%rsp
    81c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    81d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    81d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81d9:	48 89 d6             	mov    %rdx,%rsi
    81dc:	48 89 c7             	mov    %rax,%rdi
    81df:	e8 3c 0a 00 00       	call   8c20 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    81e4:	90                   	nop
    81e5:	c9                   	leave
    81e6:	c3                   	ret
    81e7:	90                   	nop

00000000000081e8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    81e8:	55                   	push   %rbp
    81e9:	48 89 e5             	mov    %rsp,%rbp
    81ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81f4:	90                   	nop
    81f5:	5d                   	pop    %rbp
    81f6:	c3                   	ret

00000000000081f7 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    81f7:	55                   	push   %rbp
    81f8:	48 89 e5             	mov    %rsp,%rbp
    81fb:	48 83 ec 20          	sub    $0x20,%rsp
    81ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8203:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8207:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    820b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    820f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8217:	48 89 ce             	mov    %rcx,%rsi
    821a:	48 89 c7             	mov    %rax,%rdi
    821d:	e8 0e 0a 00 00       	call   8c30 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    8222:	90                   	nop
    8223:	c9                   	leave
    8224:	c3                   	ret

0000000000008225 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    8225:	55                   	push   %rbp
    8226:	48 89 e5             	mov    %rsp,%rbp
    8229:	48 83 ec 20          	sub    $0x20,%rsp
    822d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    8231:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    8238:	49 92 04 
    823b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    823f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8243:	48 89 c7             	mov    %rax,%rdi
    8246:	e8 1e 0a 00 00       	call   8c69 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    824b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    824f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    8253:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8257:	48 89 d6             	mov    %rdx,%rsi
    825a:	48 89 c7             	mov    %rax,%rdi
    825d:	e8 ab bf ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    8262:	48 8b 00             	mov    (%rax),%rax
      }
    8265:	c9                   	leave
    8266:	c3                   	ret
    8267:	90                   	nop

0000000000008268 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    8268:	55                   	push   %rbp
    8269:	48 89 e5             	mov    %rsp,%rbp
    826c:	48 83 ec 10          	sub    $0x10,%rsp
    8270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8274:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    8278:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    827c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8280:	48 89 d6             	mov    %rdx,%rsi
    8283:	48 89 c7             	mov    %rax,%rdi
    8286:	e8 5b f3 ff ff       	call   75e6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    828b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828f:	48 89 c7             	mov    %rax,%rdi
    8292:	e8 ed 09 00 00       	call   8c84 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    8297:	90                   	nop
    8298:	c9                   	leave
    8299:	c3                   	ret

000000000000829a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    829a:	55                   	push   %rbp
    829b:	48 89 e5             	mov    %rsp,%rbp
    829e:	48 83 ec 10          	sub    $0x10,%rsp
    82a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    82aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    82ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82b2:	48 89 d6             	mov    %rdx,%rsi
    82b5:	48 89 c7             	mov    %rax,%rdi
    82b8:	e8 f5 09 00 00       	call   8cb2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    82bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    82c1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    82c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c8:	48 8b 10             	mov    (%rax),%rdx
    82cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    82d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82d7:	48 8b 08             	mov    (%rax),%rcx
    82da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    82de:	48 89 d0             	mov    %rdx,%rax
    82e1:	48 c1 e0 03          	shl    $0x3,%rax
    82e5:	48 29 d0             	sub    %rdx,%rax
    82e8:	48 c1 e0 02          	shl    $0x2,%rax
    82ec:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    82f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f4:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    82f8:	90                   	nop
    82f9:	c9                   	leave
    82fa:	c3                   	ret

00000000000082fb <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    82fb:	55                   	push   %rbp
    82fc:	48 89 e5             	mov    %rsp,%rbp
    82ff:	48 83 ec 20          	sub    $0x20,%rsp
    8303:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8307:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    830b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    830f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8317:	48 89 d6             	mov    %rdx,%rsi
    831a:	48 89 c7             	mov    %rax,%rdi
    831d:	e8 c3 09 00 00       	call   8ce5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    8322:	c9                   	leave
    8323:	c3                   	ret

0000000000008324 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    8324:	55                   	push   %rbp
    8325:	48 89 e5             	mov    %rsp,%rbp
    8328:	48 83 ec 10          	sub    $0x10,%rsp
    832c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8330:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    8334:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    833c:	48 89 d6             	mov    %rdx,%rsi
    833f:	48 89 c7             	mov    %rax,%rdi
    8342:	e8 c7 09 00 00       	call   8d0e <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    8347:	90                   	nop
    8348:	c9                   	leave
    8349:	c3                   	ret

000000000000834a <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    834a:	55                   	push   %rbp
    834b:	48 89 e5             	mov    %rsp,%rbp
    834e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    8352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8356:	5d                   	pop    %rbp
    8357:	c3                   	ret

0000000000008358 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    8358:	55                   	push   %rbp
    8359:	48 89 e5             	mov    %rsp,%rbp
    835c:	53                   	push   %rbx
    835d:	48 83 ec 18          	sub    $0x18,%rsp
    8361:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8365:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    8369:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    836d:	48 89 c7             	mov    %rax,%rdi
    8370:	e8 2f f2 ff ff       	call   75a4 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8375:	48 89 c3             	mov    %rax,%rbx
    8378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    837c:	48 89 c7             	mov    %rax,%rdi
    837f:	e8 99 09 00 00       	call   8d1d <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    8384:	48 89 de             	mov    %rbx,%rsi
    8387:	48 89 c7             	mov    %rax,%rdi
    838a:	e8 9c 09 00 00       	call   8d2b <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    838f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8393:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    8397:	90                   	nop
    8398:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    839c:	c9                   	leave
    839d:	c3                   	ret

000000000000839e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    839e:	55                   	push   %rbp
    839f:	48 89 e5             	mov    %rsp,%rbp
    83a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83aa:	90                   	nop
    83ab:	5d                   	pop    %rbp
    83ac:	c3                   	ret

00000000000083ad <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    83ad:	55                   	push   %rbp
    83ae:	48 89 e5             	mov    %rsp,%rbp
    83b1:	48 83 ec 20          	sub    $0x20,%rsp
    83b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83bd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    83c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83cd:	48 89 ce             	mov    %rcx,%rsi
    83d0:	48 89 c7             	mov    %rax,%rdi
    83d3:	e8 a4 09 00 00       	call   8d7c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    83d8:	90                   	nop
    83d9:	c9                   	leave
    83da:	c3                   	ret

00000000000083db <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    83db:	55                   	push   %rbp
    83dc:	48 89 e5             	mov    %rsp,%rbp
    83df:	48 83 ec 20          	sub    $0x20,%rsp
    83e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    83e7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    83ee:	ff ff 0f 
    83f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    83f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83f9:	48 89 c7             	mov    %rax,%rdi
    83fc:	e8 b5 09 00 00       	call   8db6 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    8401:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    8405:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    8409:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    840d:	48 89 d6             	mov    %rdx,%rsi
    8410:	48 89 c7             	mov    %rax,%rdi
    8413:	e8 f5 bd ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    8418:	48 8b 00             	mov    (%rax),%rax
      }
    841b:	c9                   	leave
    841c:	c3                   	ret
    841d:	90                   	nop

000000000000841e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    841e:	55                   	push   %rbp
    841f:	48 89 e5             	mov    %rsp,%rbp
    8422:	48 83 ec 10          	sub    $0x10,%rsp
    8426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    842a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    842e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8436:	48 89 d6             	mov    %rdx,%rsi
    8439:	48 89 c7             	mov    %rax,%rdi
    843c:	e8 61 f3 ff ff       	call   77a2 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    8441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8445:	48 89 c7             	mov    %rax,%rdi
    8448:	e8 83 09 00 00       	call   8dd0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    844d:	90                   	nop
    844e:	c9                   	leave
    844f:	c3                   	ret

0000000000008450 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    8450:	55                   	push   %rbp
    8451:	48 89 e5             	mov    %rsp,%rbp
    8454:	48 83 ec 10          	sub    $0x10,%rsp
    8458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    845c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    8460:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8468:	48 89 d6             	mov    %rdx,%rsi
    846b:	48 89 c7             	mov    %rax,%rdi
    846e:	e8 8b 09 00 00       	call   8dfe <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    8473:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8477:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    847a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    847e:	48 8b 10             	mov    (%rax),%rdx
    8481:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8485:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    8489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    848d:	48 8b 00             	mov    (%rax),%rax
    8490:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8494:	48 c1 e2 03          	shl    $0x3,%rdx
    8498:	48 01 c2             	add    %rax,%rdx
    849b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    849f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    84a3:	90                   	nop
    84a4:	c9                   	leave
    84a5:	c3                   	ret

00000000000084a6 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    84a6:	55                   	push   %rbp
    84a7:	48 89 e5             	mov    %rsp,%rbp
    84aa:	48 83 ec 20          	sub    $0x20,%rsp
    84ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    84b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    84ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    84be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84c2:	48 89 d6             	mov    %rdx,%rsi
    84c5:	48 89 c7             	mov    %rax,%rdi
    84c8:	e8 64 09 00 00       	call   8e31 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    84cd:	c9                   	leave
    84ce:	c3                   	ret

00000000000084cf <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    84cf:	55                   	push   %rbp
    84d0:	48 89 e5             	mov    %rsp,%rbp
    84d3:	48 83 ec 10          	sub    $0x10,%rsp
    84d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    84df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    84e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e7:	48 89 d6             	mov    %rdx,%rsi
    84ea:	48 89 c7             	mov    %rax,%rdi
    84ed:	e8 68 09 00 00       	call   8e5a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    84f2:	90                   	nop
    84f3:	c9                   	leave
    84f4:	c3                   	ret
    84f5:	90                   	nop

00000000000084f6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    84f6:	55                   	push   %rbp
    84f7:	48 89 e5             	mov    %rsp,%rbp
    84fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8502:	90                   	nop
    8503:	5d                   	pop    %rbp
    8504:	c3                   	ret

0000000000008505 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    8505:	55                   	push   %rbp
    8506:	48 89 e5             	mov    %rsp,%rbp
    8509:	48 83 ec 20          	sub    $0x20,%rsp
    850d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8511:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8515:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    8519:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    851d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8525:	48 89 ce             	mov    %rcx,%rsi
    8528:	48 89 c7             	mov    %rax,%rdi
    852b:	e8 3a 09 00 00       	call   8e6a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    8530:	90                   	nop
    8531:	c9                   	leave
    8532:	c3                   	ret

0000000000008533 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    8533:	55                   	push   %rbp
    8534:	48 89 e5             	mov    %rsp,%rbp
    8537:	48 83 ec 20          	sub    $0x20,%rsp
    853b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    853f:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    8546:	ff ff 1f 
    8549:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    854d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8551:	48 89 c7             	mov    %rax,%rdi
    8554:	e8 42 09 00 00       	call   8e9b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    8559:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    855d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    8561:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8565:	48 89 d6             	mov    %rdx,%rsi
    8568:	48 89 c7             	mov    %rax,%rdi
    856b:	e8 9d bc ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    8570:	48 8b 00             	mov    (%rax),%rax
      }
    8573:	c9                   	leave
    8574:	c3                   	ret
    8575:	90                   	nop

0000000000008576 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    8576:	55                   	push   %rbp
    8577:	48 89 e5             	mov    %rsp,%rbp
    857a:	48 83 ec 10          	sub    $0x10,%rsp
    857e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8582:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    8586:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    858a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    858e:	48 89 d6             	mov    %rdx,%rsi
    8591:	48 89 c7             	mov    %rax,%rdi
    8594:	e8 c5 f3 ff ff       	call   795e <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    8599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    859d:	48 89 c7             	mov    %rax,%rdi
    85a0:	e8 11 09 00 00       	call   8eb6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    85a5:	90                   	nop
    85a6:	c9                   	leave
    85a7:	c3                   	ret

00000000000085a8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    85a8:	55                   	push   %rbp
    85a9:	48 89 e5             	mov    %rsp,%rbp
    85ac:	48 83 ec 10          	sub    $0x10,%rsp
    85b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    85b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    85bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c0:	48 89 d6             	mov    %rdx,%rsi
    85c3:	48 89 c7             	mov    %rax,%rdi
    85c6:	e8 19 09 00 00       	call   8ee4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    85cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    85cf:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    85d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85d6:	48 8b 10             	mov    (%rax),%rdx
    85d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85dd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    85e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85e5:	48 8b 00             	mov    (%rax),%rax
    85e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    85ec:	48 c1 e2 02          	shl    $0x2,%rdx
    85f0:	48 01 c2             	add    %rax,%rdx
    85f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    85fb:	90                   	nop
    85fc:	c9                   	leave
    85fd:	c3                   	ret

00000000000085fe <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    85fe:	55                   	push   %rbp
    85ff:	48 89 e5             	mov    %rsp,%rbp
    8602:	48 83 ec 20          	sub    $0x20,%rsp
    8606:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    860a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    860e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    8612:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    861a:	48 89 d6             	mov    %rdx,%rsi
    861d:	48 89 c7             	mov    %rax,%rdi
    8620:	e8 f2 08 00 00       	call   8f17 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    8625:	c9                   	leave
    8626:	c3                   	ret

0000000000008627 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    8627:	55                   	push   %rbp
    8628:	48 89 e5             	mov    %rsp,%rbp
    862b:	48 83 ec 10          	sub    $0x10,%rsp
    862f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8633:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    8637:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    863b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    863f:	48 89 d6             	mov    %rdx,%rsi
    8642:	48 89 c7             	mov    %rax,%rdi
    8645:	e8 f6 08 00 00       	call   8f40 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    864a:	90                   	nop
    864b:	c9                   	leave
    864c:	c3                   	ret
    864d:	90                   	nop

000000000000864e <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    864e:	55                   	push   %rbp
    864f:	48 89 e5             	mov    %rsp,%rbp
    8652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8656:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    865a:	90                   	nop
    865b:	5d                   	pop    %rbp
    865c:	c3                   	ret

000000000000865d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    865d:	55                   	push   %rbp
    865e:	48 89 e5             	mov    %rsp,%rbp
    8661:	48 83 ec 20          	sub    $0x20,%rsp
    8665:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8669:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    866d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    8671:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8675:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    867d:	48 89 ce             	mov    %rcx,%rsi
    8680:	48 89 c7             	mov    %rax,%rdi
    8683:	e8 c8 08 00 00       	call   8f50 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    8688:	90                   	nop
    8689:	c9                   	leave
    868a:	c3                   	ret

000000000000868b <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    868b:	55                   	push   %rbp
    868c:	48 89 e5             	mov    %rsp,%rbp
    868f:	48 83 ec 20          	sub    $0x20,%rsp
    8693:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    8697:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    869e:	ff ff 0f 
    86a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    86a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86a9:	48 89 c7             	mov    %rax,%rdi
    86ac:	e8 d0 08 00 00       	call   8f81 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    86b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    86b5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    86b9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    86bd:	48 89 d6             	mov    %rdx,%rsi
    86c0:	48 89 c7             	mov    %rax,%rdi
    86c3:	e8 45 bb ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    86c8:	48 8b 00             	mov    (%rax),%rax
      }
    86cb:	c9                   	leave
    86cc:	c3                   	ret
    86cd:	90                   	nop

00000000000086ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    86ce:	55                   	push   %rbp
    86cf:	48 89 e5             	mov    %rsp,%rbp
    86d2:	48 83 ec 10          	sub    $0x10,%rsp
    86d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    86de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    86e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e6:	48 89 d6             	mov    %rdx,%rsi
    86e9:	48 89 c7             	mov    %rax,%rdi
    86ec:	e8 29 f4 ff ff       	call   7b1a <_ZNSaIP9VkImage_TEC1ERKS1_>
    86f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86f5:	48 89 c7             	mov    %rax,%rdi
    86f8:	e8 9f 08 00 00       	call   8f9c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    86fd:	90                   	nop
    86fe:	c9                   	leave
    86ff:	c3                   	ret

0000000000008700 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    8700:	55                   	push   %rbp
    8701:	48 89 e5             	mov    %rsp,%rbp
    8704:	48 83 ec 10          	sub    $0x10,%rsp
    8708:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    870c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    8710:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8718:	48 89 d6             	mov    %rdx,%rsi
    871b:	48 89 c7             	mov    %rax,%rdi
    871e:	e8 a7 08 00 00       	call   8fca <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    8723:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8727:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    872a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    872e:	48 8b 10             	mov    (%rax),%rdx
    8731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8735:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    8739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    873d:	48 8b 00             	mov    (%rax),%rax
    8740:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8744:	48 c1 e2 03          	shl    $0x3,%rdx
    8748:	48 01 c2             	add    %rax,%rdx
    874b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    874f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    8753:	90                   	nop
    8754:	c9                   	leave
    8755:	c3                   	ret

0000000000008756 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    8756:	55                   	push   %rbp
    8757:	48 89 e5             	mov    %rsp,%rbp
    875a:	48 83 ec 20          	sub    $0x20,%rsp
    875e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8762:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8766:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    876a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    876e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8772:	48 89 d6             	mov    %rdx,%rsi
    8775:	48 89 c7             	mov    %rax,%rdi
    8778:	e8 80 08 00 00       	call   8ffd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    877d:	c9                   	leave
    877e:	c3                   	ret

000000000000877f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    877f:	55                   	push   %rbp
    8780:	48 89 e5             	mov    %rsp,%rbp
    8783:	48 83 ec 10          	sub    $0x10,%rsp
    8787:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    878b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    878f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8797:	48 89 d6             	mov    %rdx,%rsi
    879a:	48 89 c7             	mov    %rax,%rdi
    879d:	e8 84 08 00 00       	call   9026 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    87a2:	90                   	nop
    87a3:	c9                   	leave
    87a4:	c3                   	ret
    87a5:	90                   	nop

00000000000087a6 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    87a6:	55                   	push   %rbp
    87a7:	48 89 e5             	mov    %rsp,%rbp
    87aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    87b2:	90                   	nop
    87b3:	5d                   	pop    %rbp
    87b4:	c3                   	ret

00000000000087b5 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    87b5:	55                   	push   %rbp
    87b6:	48 89 e5             	mov    %rsp,%rbp
    87b9:	48 83 ec 20          	sub    $0x20,%rsp
    87bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    87c5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    87c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    87cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    87d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87d5:	48 89 ce             	mov    %rcx,%rsi
    87d8:	48 89 c7             	mov    %rax,%rdi
    87db:	e8 56 08 00 00       	call   9036 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    87e0:	90                   	nop
    87e1:	c9                   	leave
    87e2:	c3                   	ret

00000000000087e3 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    87e3:	55                   	push   %rbp
    87e4:	48 89 e5             	mov    %rsp,%rbp
    87e7:	48 83 ec 10          	sub    $0x10,%rsp
    87eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    87ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87f3:	48 89 c7             	mov    %rax,%rdi
    87f6:	e8 6d 08 00 00       	call   9068 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    87fb:	c9                   	leave
    87fc:	c3                   	ret
    87fd:	90                   	nop

00000000000087fe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    87fe:	55                   	push   %rbp
    87ff:	48 89 e5             	mov    %rsp,%rbp
    8802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    8806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    880a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8815:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    881c:	00 
    881d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8821:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8828:	00 
	{ }
    8829:	90                   	nop
    882a:	5d                   	pop    %rbp
    882b:	c3                   	ret

000000000000882c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    882c:	55                   	push   %rbp
    882d:	48 89 e5             	mov    %rsp,%rbp
    8830:	48 83 ec 10          	sub    $0x10,%rsp
    8834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8838:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    883c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8841:	74 15                	je     8858 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    8843:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8847:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    884b:	48 89 d6             	mov    %rdx,%rsi
    884e:	48 89 c7             	mov    %rax,%rdi
    8851:	e8 2c 08 00 00       	call   9082 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    8856:	eb 05                	jmp    885d <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    8858:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    885d:	c9                   	leave
    885e:	c3                   	ret

000000000000885f <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    885f:	55                   	push   %rbp
    8860:	48 89 e5             	mov    %rsp,%rbp
    8863:	48 83 ec 20          	sub    $0x20,%rsp
    8867:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    886b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    886f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8873:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8877:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    887b:	48 89 d6             	mov    %rdx,%rsi
    887e:	48 89 c7             	mov    %rax,%rdi
    8881:	e8 26 08 00 00       	call   90ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    8886:	c9                   	leave
    8887:	c3                   	ret

0000000000008888 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    8888:	55                   	push   %rbp
    8889:	48 89 e5             	mov    %rsp,%rbp
    888c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8890:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8894:	90                   	nop
    8895:	5d                   	pop    %rbp
    8896:	c3                   	ret
    8897:	90                   	nop

0000000000008898 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8898:	55                   	push   %rbp
    8899:	48 89 e5             	mov    %rsp,%rbp
    889c:	48 83 ec 20          	sub    $0x20,%rsp
    88a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    88a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    88ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    88b0:	48 89 d0             	mov    %rdx,%rax
    88b3:	48 c1 e0 06          	shl    $0x6,%rax
    88b7:	48 01 d0             	add    %rdx,%rax
    88ba:	48 c1 e0 03          	shl    $0x3,%rax
    88be:	48 89 c2             	mov    %rax,%rdx
    88c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88c5:	48 89 d6             	mov    %rdx,%rsi
    88c8:	48 89 c7             	mov    %rax,%rdi
    88cb:	e8 40 aa ff ff       	call   3310 <_ZdlPvm@plt>
      }
    88d0:	c9                   	leave
    88d1:	c3                   	ret

00000000000088d2 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    88d2:	55                   	push   %rbp
    88d3:	48 89 e5             	mov    %rsp,%rbp
    88d6:	48 83 ec 10          	sub    $0x10,%rsp
    88da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    88de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e2:	48 89 c7             	mov    %rax,%rdi
    88e5:	e8 22 08 00 00       	call   910c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    88ea:	c9                   	leave
    88eb:	c3                   	ret

00000000000088ec <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    88ec:	55                   	push   %rbp
    88ed:	48 89 e5             	mov    %rsp,%rbp
    88f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    88f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88f8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    88ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8903:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    890a:	00 
    890b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    890f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8916:	00 
	{ }
    8917:	90                   	nop
    8918:	5d                   	pop    %rbp
    8919:	c3                   	ret

000000000000891a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    891a:	55                   	push   %rbp
    891b:	48 89 e5             	mov    %rsp,%rbp
    891e:	48 83 ec 10          	sub    $0x10,%rsp
    8922:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8926:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    892a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    892f:	74 15                	je     8946 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    8931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8935:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8939:	48 89 d6             	mov    %rdx,%rsi
    893c:	48 89 c7             	mov    %rax,%rdi
    893f:	e8 e2 07 00 00       	call   9126 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    8944:	eb 05                	jmp    894b <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    8946:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    894b:	c9                   	leave
    894c:	c3                   	ret

000000000000894d <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    894d:	55                   	push   %rbp
    894e:	48 89 e5             	mov    %rsp,%rbp
    8951:	48 83 ec 20          	sub    $0x20,%rsp
    8955:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8959:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    895d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8961:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8965:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8969:	48 89 d6             	mov    %rdx,%rsi
    896c:	48 89 c7             	mov    %rax,%rdi
    896f:	e8 dc 07 00 00       	call   9150 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    8974:	c9                   	leave
    8975:	c3                   	ret

0000000000008976 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    8976:	55                   	push   %rbp
    8977:	48 89 e5             	mov    %rsp,%rbp
    897a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    897e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8982:	90                   	nop
    8983:	5d                   	pop    %rbp
    8984:	c3                   	ret
    8985:	90                   	nop

0000000000008986 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8986:	55                   	push   %rbp
    8987:	48 89 e5             	mov    %rsp,%rbp
    898a:	48 83 ec 20          	sub    $0x20,%rsp
    898e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8992:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8996:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    899a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    899e:	48 89 d0             	mov    %rdx,%rax
    89a1:	48 c1 e0 06          	shl    $0x6,%rax
    89a5:	48 01 d0             	add    %rdx,%rax
    89a8:	48 c1 e0 02          	shl    $0x2,%rax
    89ac:	48 89 c2             	mov    %rax,%rdx
    89af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    89b3:	48 89 d6             	mov    %rdx,%rsi
    89b6:	48 89 c7             	mov    %rax,%rdi
    89b9:	e8 52 a9 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    89be:	c9                   	leave
    89bf:	c3                   	ret

00000000000089c0 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    89c0:	55                   	push   %rbp
    89c1:	48 89 e5             	mov    %rsp,%rbp
    89c4:	48 83 ec 10          	sub    $0x10,%rsp
    89c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    89cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d0:	48 89 c7             	mov    %rax,%rdi
    89d3:	e8 d8 07 00 00       	call   91b0 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    89d8:	c9                   	leave
    89d9:	c3                   	ret

00000000000089da <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    89da:	55                   	push   %rbp
    89db:	48 89 e5             	mov    %rsp,%rbp
    89de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    89e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89e6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    89ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    89f8:	00 
    89f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89fd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8a04:	00 
	{ }
    8a05:	90                   	nop
    8a06:	5d                   	pop    %rbp
    8a07:	c3                   	ret

0000000000008a08 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    8a08:	55                   	push   %rbp
    8a09:	48 89 e5             	mov    %rsp,%rbp
    8a0c:	48 83 ec 10          	sub    $0x10,%rsp
    8a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8a18:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8a1d:	74 15                	je     8a34 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    8a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a27:	48 89 d6             	mov    %rdx,%rsi
    8a2a:	48 89 c7             	mov    %rax,%rdi
    8a2d:	e8 98 07 00 00       	call   91ca <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    8a32:	eb 05                	jmp    8a39 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    8a34:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    8a39:	c9                   	leave
    8a3a:	c3                   	ret

0000000000008a3b <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8a3b:	55                   	push   %rbp
    8a3c:	48 89 e5             	mov    %rsp,%rbp
    8a3f:	48 83 ec 20          	sub    $0x20,%rsp
    8a43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8a4b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8a4f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8a53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a57:	48 89 d6             	mov    %rdx,%rsi
    8a5a:	48 89 c7             	mov    %rax,%rdi
    8a5d:	e8 92 07 00 00       	call   91f4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    8a62:	c9                   	leave
    8a63:	c3                   	ret

0000000000008a64 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8a64:	55                   	push   %rbp
    8a65:	48 89 e5             	mov    %rsp,%rbp
    8a68:	48 83 ec 20          	sub    $0x20,%rsp
    8a6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8a74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8a78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a7c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8a83:	00 
    8a84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a88:	48 89 d6             	mov    %rdx,%rsi
    8a8b:	48 89 c7             	mov    %rax,%rdi
    8a8e:	e8 7d a8 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    8a93:	c9                   	leave
    8a94:	c3                   	ret

0000000000008a95 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    8a95:	55                   	push   %rbp
    8a96:	48 89 e5             	mov    %rsp,%rbp
    8a99:	48 83 ec 10          	sub    $0x10,%rsp
    8a9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    8aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aa5:	48 89 c7             	mov    %rax,%rdi
    8aa8:	e8 a5 07 00 00       	call   9252 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    8aad:	c9                   	leave
    8aae:	c3                   	ret
    8aaf:	90                   	nop

0000000000008ab0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    8ab0:	55                   	push   %rbp
    8ab1:	48 89 e5             	mov    %rsp,%rbp
    8ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    8ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8abc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ac7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8ace:	00 
    8acf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ad3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8ada:	00 
	{ }
    8adb:	90                   	nop
    8adc:	5d                   	pop    %rbp
    8add:	c3                   	ret

0000000000008ade <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    8ade:	55                   	push   %rbp
    8adf:	48 89 e5             	mov    %rsp,%rbp
    8ae2:	48 83 ec 10          	sub    $0x10,%rsp
    8ae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8aea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8aee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8af3:	74 15                	je     8b0a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    8af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8af9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8afd:	48 89 d6             	mov    %rdx,%rsi
    8b00:	48 89 c7             	mov    %rax,%rdi
    8b03:	e8 64 07 00 00       	call   926c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    8b08:	eb 05                	jmp    8b0f <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    8b0a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    8b0f:	c9                   	leave
    8b10:	c3                   	ret

0000000000008b11 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8b11:	55                   	push   %rbp
    8b12:	48 89 e5             	mov    %rsp,%rbp
    8b15:	48 83 ec 20          	sub    $0x20,%rsp
    8b19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8b1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8b21:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8b25:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8b29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b2d:	48 89 d6             	mov    %rdx,%rsi
    8b30:	48 89 c7             	mov    %rax,%rdi
    8b33:	e8 5e 07 00 00       	call   9296 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    8b38:	c9                   	leave
    8b39:	c3                   	ret

0000000000008b3a <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    8b3a:	55                   	push   %rbp
    8b3b:	48 89 e5             	mov    %rsp,%rbp
    8b3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b46:	90                   	nop
    8b47:	5d                   	pop    %rbp
    8b48:	c3                   	ret
    8b49:	90                   	nop

0000000000008b4a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8b4a:	55                   	push   %rbp
    8b4b:	48 89 e5             	mov    %rsp,%rbp
    8b4e:	48 83 ec 20          	sub    $0x20,%rsp
    8b52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b5a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b62:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8b69:	00 
    8b6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b6e:	48 89 d6             	mov    %rdx,%rsi
    8b71:	48 89 c7             	mov    %rax,%rdi
    8b74:	e8 97 a7 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    8b79:	c9                   	leave
    8b7a:	c3                   	ret

0000000000008b7b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    8b7b:	55                   	push   %rbp
    8b7c:	48 89 e5             	mov    %rsp,%rbp
    8b7f:	48 83 ec 10          	sub    $0x10,%rsp
    8b83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    8b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b8b:	48 89 c7             	mov    %rax,%rdi
    8b8e:	e8 61 07 00 00       	call   92f4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    8b93:	c9                   	leave
    8b94:	c3                   	ret
    8b95:	90                   	nop

0000000000008b96 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    8b96:	55                   	push   %rbp
    8b97:	48 89 e5             	mov    %rsp,%rbp
    8b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    8b9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bad:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8bb4:	00 
    8bb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8bc0:	00 
	{ }
    8bc1:	90                   	nop
    8bc2:	5d                   	pop    %rbp
    8bc3:	c3                   	ret

0000000000008bc4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    8bc4:	55                   	push   %rbp
    8bc5:	48 89 e5             	mov    %rsp,%rbp
    8bc8:	48 83 ec 10          	sub    $0x10,%rsp
    8bcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8bd4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8bd9:	74 15                	je     8bf0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    8bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bdf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8be3:	48 89 d6             	mov    %rdx,%rsi
    8be6:	48 89 c7             	mov    %rax,%rdi
    8be9:	e8 20 07 00 00       	call   930e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    8bee:	eb 05                	jmp    8bf5 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    8bf0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    8bf5:	c9                   	leave
    8bf6:	c3                   	ret

0000000000008bf7 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8bf7:	55                   	push   %rbp
    8bf8:	48 89 e5             	mov    %rsp,%rbp
    8bfb:	48 83 ec 20          	sub    $0x20,%rsp
    8bff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8c07:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8c0b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c13:	48 89 d6             	mov    %rdx,%rsi
    8c16:	48 89 c7             	mov    %rax,%rdi
    8c19:	e8 1a 07 00 00       	call   9338 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    8c1e:	c9                   	leave
    8c1f:	c3                   	ret

0000000000008c20 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    8c20:	55                   	push   %rbp
    8c21:	48 89 e5             	mov    %rsp,%rbp
    8c24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8c2c:	90                   	nop
    8c2d:	5d                   	pop    %rbp
    8c2e:	c3                   	ret
    8c2f:	90                   	nop

0000000000008c30 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8c30:	55                   	push   %rbp
    8c31:	48 89 e5             	mov    %rsp,%rbp
    8c34:	48 83 ec 20          	sub    $0x20,%rsp
    8c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8c40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8c44:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8c48:	48 89 d0             	mov    %rdx,%rax
    8c4b:	48 01 c0             	add    %rax,%rax
    8c4e:	48 01 d0             	add    %rdx,%rax
    8c51:	48 c1 e0 03          	shl    $0x3,%rax
    8c55:	48 89 c2             	mov    %rax,%rdx
    8c58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c5c:	48 89 d6             	mov    %rdx,%rsi
    8c5f:	48 89 c7             	mov    %rax,%rdi
    8c62:	e8 a9 a6 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    8c67:	c9                   	leave
    8c68:	c3                   	ret

0000000000008c69 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    8c69:	55                   	push   %rbp
    8c6a:	48 89 e5             	mov    %rsp,%rbp
    8c6d:	48 83 ec 10          	sub    $0x10,%rsp
    8c71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    8c75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c79:	48 89 c7             	mov    %rax,%rdi
    8c7c:	e8 15 07 00 00       	call   9396 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    8c81:	c9                   	leave
    8c82:	c3                   	ret
    8c83:	90                   	nop

0000000000008c84 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    8c84:	55                   	push   %rbp
    8c85:	48 89 e5             	mov    %rsp,%rbp
    8c88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    8c8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c90:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c9b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8ca2:	00 
    8ca3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8cae:	00 
	{ }
    8caf:	90                   	nop
    8cb0:	5d                   	pop    %rbp
    8cb1:	c3                   	ret

0000000000008cb2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    8cb2:	55                   	push   %rbp
    8cb3:	48 89 e5             	mov    %rsp,%rbp
    8cb6:	48 83 ec 10          	sub    $0x10,%rsp
    8cba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8cc2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8cc7:	74 15                	je     8cde <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    8cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ccd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8cd1:	48 89 d6             	mov    %rdx,%rsi
    8cd4:	48 89 c7             	mov    %rax,%rdi
    8cd7:	e8 d4 06 00 00       	call   93b0 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    8cdc:	eb 05                	jmp    8ce3 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    8cde:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    8ce3:	c9                   	leave
    8ce4:	c3                   	ret

0000000000008ce5 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8ce5:	55                   	push   %rbp
    8ce6:	48 89 e5             	mov    %rsp,%rbp
    8ce9:	48 83 ec 20          	sub    $0x20,%rsp
    8ced:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8cf1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8cf5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8cf9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8cfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d01:	48 89 d6             	mov    %rdx,%rsi
    8d04:	48 89 c7             	mov    %rax,%rdi
    8d07:	e8 ce 06 00 00       	call   93da <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    8d0c:	c9                   	leave
    8d0d:	c3                   	ret

0000000000008d0e <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    8d0e:	55                   	push   %rbp
    8d0f:	48 89 e5             	mov    %rsp,%rbp
    8d12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d1a:	90                   	nop
    8d1b:	5d                   	pop    %rbp
    8d1c:	c3                   	ret

0000000000008d1d <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    8d1d:	55                   	push   %rbp
    8d1e:	48 89 e5             	mov    %rsp,%rbp
    8d21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    8d25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d29:	5d                   	pop    %rbp
    8d2a:	c3                   	ret

0000000000008d2b <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    8d2b:	55                   	push   %rbp
    8d2c:	48 89 e5             	mov    %rsp,%rbp
    8d2f:	53                   	push   %rbx
    8d30:	48 83 ec 18          	sub    $0x18,%rsp
    8d34:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d38:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    8d3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d40:	48 89 c6             	mov    %rax,%rsi
    8d43:	bf 18 00 00 00       	mov    $0x18,%edi
    8d48:	e8 f3 af ff ff       	call   3d40 <_ZnwmPv>
    8d4d:	48 89 c3             	mov    %rax,%rbx
    8d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d54:	48 89 c7             	mov    %rax,%rdi
    8d57:	e8 48 e8 ff ff       	call   75a4 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8d5c:	48 89 c1             	mov    %rax,%rcx
    8d5f:	48 8b 01             	mov    (%rcx),%rax
    8d62:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    8d66:	48 89 03             	mov    %rax,(%rbx)
    8d69:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    8d6d:	48 8b 41 10          	mov    0x10(%rcx),%rax
    8d71:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    8d75:	90                   	nop
    8d76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d7a:	c9                   	leave
    8d7b:	c3                   	ret

0000000000008d7c <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8d7c:	55                   	push   %rbp
    8d7d:	48 89 e5             	mov    %rsp,%rbp
    8d80:	48 83 ec 20          	sub    $0x20,%rsp
    8d84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d8c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8d90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d94:	48 89 d0             	mov    %rdx,%rax
    8d97:	48 c1 e0 03          	shl    $0x3,%rax
    8d9b:	48 29 d0             	sub    %rdx,%rax
    8d9e:	48 c1 e0 02          	shl    $0x2,%rax
    8da2:	48 89 c2             	mov    %rax,%rdx
    8da5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8da9:	48 89 d6             	mov    %rdx,%rsi
    8dac:	48 89 c7             	mov    %rax,%rdi
    8daf:	e8 5c a5 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    8db4:	c9                   	leave
    8db5:	c3                   	ret

0000000000008db6 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    8db6:	55                   	push   %rbp
    8db7:	48 89 e5             	mov    %rsp,%rbp
    8dba:	48 83 ec 10          	sub    $0x10,%rsp
    8dbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    8dc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dc6:	48 89 c7             	mov    %rax,%rdi
    8dc9:	e8 52 06 00 00       	call   9420 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    8dce:	c9                   	leave
    8dcf:	c3                   	ret

0000000000008dd0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    8dd0:	55                   	push   %rbp
    8dd1:	48 89 e5             	mov    %rsp,%rbp
    8dd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    8dd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ddc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8de3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8de7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8dee:	00 
    8def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8df3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8dfa:	00 
	{ }
    8dfb:	90                   	nop
    8dfc:	5d                   	pop    %rbp
    8dfd:	c3                   	ret

0000000000008dfe <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    8dfe:	55                   	push   %rbp
    8dff:	48 89 e5             	mov    %rsp,%rbp
    8e02:	48 83 ec 10          	sub    $0x10,%rsp
    8e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8e0e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8e13:	74 15                	je     8e2a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    8e15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e1d:	48 89 d6             	mov    %rdx,%rsi
    8e20:	48 89 c7             	mov    %rax,%rdi
    8e23:	e8 12 06 00 00       	call   943a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    8e28:	eb 05                	jmp    8e2f <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    8e2a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    8e2f:	c9                   	leave
    8e30:	c3                   	ret

0000000000008e31 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8e31:	55                   	push   %rbp
    8e32:	48 89 e5             	mov    %rsp,%rbp
    8e35:	48 83 ec 20          	sub    $0x20,%rsp
    8e39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8e41:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8e45:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8e49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e4d:	48 89 d6             	mov    %rdx,%rsi
    8e50:	48 89 c7             	mov    %rax,%rdi
    8e53:	e8 0c 06 00 00       	call   9464 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    8e58:	c9                   	leave
    8e59:	c3                   	ret

0000000000008e5a <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    8e5a:	55                   	push   %rbp
    8e5b:	48 89 e5             	mov    %rsp,%rbp
    8e5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e66:	90                   	nop
    8e67:	5d                   	pop    %rbp
    8e68:	c3                   	ret
    8e69:	90                   	nop

0000000000008e6a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8e6a:	55                   	push   %rbp
    8e6b:	48 89 e5             	mov    %rsp,%rbp
    8e6e:	48 83 ec 20          	sub    $0x20,%rsp
    8e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8e7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e82:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8e89:	00 
    8e8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e8e:	48 89 d6             	mov    %rdx,%rsi
    8e91:	48 89 c7             	mov    %rax,%rdi
    8e94:	e8 77 a4 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    8e99:	c9                   	leave
    8e9a:	c3                   	ret

0000000000008e9b <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    8e9b:	55                   	push   %rbp
    8e9c:	48 89 e5             	mov    %rsp,%rbp
    8e9f:	48 83 ec 10          	sub    $0x10,%rsp
    8ea3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    8ea7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eab:	48 89 c7             	mov    %rax,%rdi
    8eae:	e8 0f 06 00 00       	call   94c2 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    8eb3:	c9                   	leave
    8eb4:	c3                   	ret
    8eb5:	90                   	nop

0000000000008eb6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    8eb6:	55                   	push   %rbp
    8eb7:	48 89 e5             	mov    %rsp,%rbp
    8eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    8ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ec2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8ec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ecd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8ed4:	00 
    8ed5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8ee0:	00 
	{ }
    8ee1:	90                   	nop
    8ee2:	5d                   	pop    %rbp
    8ee3:	c3                   	ret

0000000000008ee4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    8ee4:	55                   	push   %rbp
    8ee5:	48 89 e5             	mov    %rsp,%rbp
    8ee8:	48 83 ec 10          	sub    $0x10,%rsp
    8eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ef0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8ef4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8ef9:	74 15                	je     8f10 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    8efb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8f03:	48 89 d6             	mov    %rdx,%rsi
    8f06:	48 89 c7             	mov    %rax,%rdi
    8f09:	e8 ce 05 00 00       	call   94dc <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    8f0e:	eb 05                	jmp    8f15 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    8f10:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    8f15:	c9                   	leave
    8f16:	c3                   	ret

0000000000008f17 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8f17:	55                   	push   %rbp
    8f18:	48 89 e5             	mov    %rsp,%rbp
    8f1b:	48 83 ec 20          	sub    $0x20,%rsp
    8f1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8f27:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8f2b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8f2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f33:	48 89 d6             	mov    %rdx,%rsi
    8f36:	48 89 c7             	mov    %rax,%rdi
    8f39:	e8 c8 05 00 00       	call   9506 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    8f3e:	c9                   	leave
    8f3f:	c3                   	ret

0000000000008f40 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    8f40:	55                   	push   %rbp
    8f41:	48 89 e5             	mov    %rsp,%rbp
    8f44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f4c:	90                   	nop
    8f4d:	5d                   	pop    %rbp
    8f4e:	c3                   	ret
    8f4f:	90                   	nop

0000000000008f50 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    8f50:	55                   	push   %rbp
    8f51:	48 89 e5             	mov    %rsp,%rbp
    8f54:	48 83 ec 20          	sub    $0x20,%rsp
    8f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    8f64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f68:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    8f6f:	00 
    8f70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f74:	48 89 d6             	mov    %rdx,%rsi
    8f77:	48 89 c7             	mov    %rax,%rdi
    8f7a:	e8 91 a3 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    8f7f:	c9                   	leave
    8f80:	c3                   	ret

0000000000008f81 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    8f81:	55                   	push   %rbp
    8f82:	48 89 e5             	mov    %rsp,%rbp
    8f85:	48 83 ec 10          	sub    $0x10,%rsp
    8f89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    8f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f91:	48 89 c7             	mov    %rax,%rdi
    8f94:	e8 cb 05 00 00       	call   9564 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    8f99:	c9                   	leave
    8f9a:	c3                   	ret
    8f9b:	90                   	nop

0000000000008f9c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    8f9c:	55                   	push   %rbp
    8f9d:	48 89 e5             	mov    %rsp,%rbp
    8fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    8fa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fa8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8faf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fb3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8fba:	00 
    8fbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fbf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8fc6:	00 
	{ }
    8fc7:	90                   	nop
    8fc8:	5d                   	pop    %rbp
    8fc9:	c3                   	ret

0000000000008fca <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    8fca:	55                   	push   %rbp
    8fcb:	48 89 e5             	mov    %rsp,%rbp
    8fce:	48 83 ec 10          	sub    $0x10,%rsp
    8fd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    8fda:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8fdf:	74 15                	je     8ff6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    8fe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fe5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8fe9:	48 89 d6             	mov    %rdx,%rsi
    8fec:	48 89 c7             	mov    %rax,%rdi
    8fef:	e8 8a 05 00 00       	call   957e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    8ff4:	eb 05                	jmp    8ffb <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    8ff6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    8ffb:	c9                   	leave
    8ffc:	c3                   	ret

0000000000008ffd <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8ffd:	55                   	push   %rbp
    8ffe:	48 89 e5             	mov    %rsp,%rbp
    9001:	48 83 ec 20          	sub    $0x20,%rsp
    9005:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9009:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    900d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    9011:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9015:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9019:	48 89 d6             	mov    %rdx,%rsi
    901c:	48 89 c7             	mov    %rax,%rdi
    901f:	e8 84 05 00 00       	call   95a8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    9024:	c9                   	leave
    9025:	c3                   	ret

0000000000009026 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    9026:	55                   	push   %rbp
    9027:	48 89 e5             	mov    %rsp,%rbp
    902a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    902e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9032:	90                   	nop
    9033:	5d                   	pop    %rbp
    9034:	c3                   	ret
    9035:	90                   	nop

0000000000009036 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    9036:	55                   	push   %rbp
    9037:	48 89 e5             	mov    %rsp,%rbp
    903a:	48 83 ec 20          	sub    $0x20,%rsp
    903e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9042:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9046:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    904a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    904e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9055:	00 
    9056:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    905a:	48 89 d6             	mov    %rdx,%rsi
    905d:	48 89 c7             	mov    %rax,%rdi
    9060:	e8 ab a2 ff ff       	call   3310 <_ZdlPvm@plt>
      }
    9065:	c9                   	leave
    9066:	c3                   	ret
    9067:	90                   	nop

0000000000009068 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    9068:	55                   	push   %rbp
    9069:	48 89 e5             	mov    %rsp,%rbp
    906c:	48 83 ec 10          	sub    $0x10,%rsp
    9070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    9074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9078:	48 89 c7             	mov    %rax,%rdi
    907b:	e8 86 05 00 00       	call   9606 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    9080:	c9                   	leave
    9081:	c3                   	ret

0000000000009082 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    9082:	55                   	push   %rbp
    9083:	48 89 e5             	mov    %rsp,%rbp
    9086:	48 83 ec 10          	sub    $0x10,%rsp
    908a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    908e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    9092:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909a:	ba 00 00 00 00       	mov    $0x0,%edx
    909f:	48 89 ce             	mov    %rcx,%rsi
    90a2:	48 89 c7             	mov    %rax,%rdi
    90a5:	e8 70 05 00 00       	call   961a <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    90aa:	c9                   	leave
    90ab:	c3                   	ret

00000000000090ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    90ac:	55                   	push   %rbp
    90ad:	48 89 e5             	mov    %rsp,%rbp
    90b0:	48 83 ec 20          	sub    $0x20,%rsp
    90b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    90bc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    90c1:	74 43                	je     9106 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    90c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90c7:	48 89 c7             	mov    %rax,%rdi
    90ca:	e8 b6 05 00 00       	call   9685 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    90cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    90d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90d7:	48 89 c7             	mov    %rax,%rdi
    90da:	e8 b4 05 00 00       	call   9693 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    90df:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    90e6:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    90e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90eb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    90ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    90f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90f7:	48 89 ce             	mov    %rcx,%rsi
    90fa:	48 89 c7             	mov    %rax,%rdi
    90fd:	e8 eb 05 00 00       	call   96ed <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    9102:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    9106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    910a:	c9                   	leave
    910b:	c3                   	ret

000000000000910c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    910c:	55                   	push   %rbp
    910d:	48 89 e5             	mov    %rsp,%rbp
    9110:	48 83 ec 10          	sub    $0x10,%rsp
    9114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    9118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    911c:	48 89 c7             	mov    %rax,%rdi
    911f:	e8 0e 06 00 00       	call   9732 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    9124:	c9                   	leave
    9125:	c3                   	ret

0000000000009126 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    9126:	55                   	push   %rbp
    9127:	48 89 e5             	mov    %rsp,%rbp
    912a:	48 83 ec 10          	sub    $0x10,%rsp
    912e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9132:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    9136:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    913a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    913e:	ba 00 00 00 00       	mov    $0x0,%edx
    9143:	48 89 ce             	mov    %rcx,%rsi
    9146:	48 89 c7             	mov    %rax,%rdi
    9149:	e8 f8 05 00 00       	call   9746 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    914e:	c9                   	leave
    914f:	c3                   	ret

0000000000009150 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9150:	55                   	push   %rbp
    9151:	48 89 e5             	mov    %rsp,%rbp
    9154:	48 83 ec 20          	sub    $0x20,%rsp
    9158:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    915c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9160:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9165:	74 43                	je     91aa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    9167:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    916b:	48 89 c7             	mov    %rax,%rdi
    916e:	e8 3e 06 00 00       	call   97b1 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    9173:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    9177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    917b:	48 89 c7             	mov    %rax,%rdi
    917e:	e8 3c 06 00 00       	call   97bf <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    9183:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    918a:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    918b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    918f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9193:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9197:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    919b:	48 89 ce             	mov    %rcx,%rsi
    919e:	48 89 c7             	mov    %rax,%rdi
    91a1:	e8 73 06 00 00       	call   9819 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    91a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    91aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    91ae:	c9                   	leave
    91af:	c3                   	ret

00000000000091b0 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    91b0:	55                   	push   %rbp
    91b1:	48 89 e5             	mov    %rsp,%rbp
    91b4:	48 83 ec 10          	sub    $0x10,%rsp
    91b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    91bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c0:	48 89 c7             	mov    %rax,%rdi
    91c3:	e8 96 06 00 00       	call   985e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    91c8:	c9                   	leave
    91c9:	c3                   	ret

00000000000091ca <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    91ca:	55                   	push   %rbp
    91cb:	48 89 e5             	mov    %rsp,%rbp
    91ce:	48 83 ec 10          	sub    $0x10,%rsp
    91d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    91da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    91de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91e2:	ba 00 00 00 00       	mov    $0x0,%edx
    91e7:	48 89 ce             	mov    %rcx,%rsi
    91ea:	48 89 c7             	mov    %rax,%rdi
    91ed:	e8 80 06 00 00       	call   9872 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    91f2:	c9                   	leave
    91f3:	c3                   	ret

00000000000091f4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    91f4:	55                   	push   %rbp
    91f5:	48 89 e5             	mov    %rsp,%rbp
    91f8:	48 83 ec 20          	sub    $0x20,%rsp
    91fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9200:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9204:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9209:	74 40                	je     924b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    920b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    920f:	48 89 c7             	mov    %rax,%rdi
    9212:	e8 bc 06 00 00       	call   98d3 <_ZSt11__addressofIPKcEPT_RS2_>
    9217:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    921b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    921f:	48 89 c7             	mov    %rax,%rdi
    9222:	e8 ba 06 00 00       	call   98e1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    9227:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    922c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9230:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9234:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    923c:	48 89 ce             	mov    %rcx,%rsi
    923f:	48 89 c7             	mov    %rax,%rdi
    9242:	e8 c1 06 00 00       	call   9908 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    9247:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    924b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    924f:	c9                   	leave
    9250:	c3                   	ret
    9251:	90                   	nop

0000000000009252 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    9252:	55                   	push   %rbp
    9253:	48 89 e5             	mov    %rsp,%rbp
    9256:	48 83 ec 10          	sub    $0x10,%rsp
    925a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    925e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9262:	48 89 c7             	mov    %rax,%rdi
    9265:	e8 e2 06 00 00       	call   994c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    926a:	c9                   	leave
    926b:	c3                   	ret

000000000000926c <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    926c:	55                   	push   %rbp
    926d:	48 89 e5             	mov    %rsp,%rbp
    9270:	48 83 ec 10          	sub    $0x10,%rsp
    9274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9278:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    927c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9284:	ba 00 00 00 00       	mov    $0x0,%edx
    9289:	48 89 ce             	mov    %rcx,%rsi
    928c:	48 89 c7             	mov    %rax,%rdi
    928f:	e8 cc 06 00 00       	call   9960 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    9294:	c9                   	leave
    9295:	c3                   	ret

0000000000009296 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9296:	55                   	push   %rbp
    9297:	48 89 e5             	mov    %rsp,%rbp
    929a:	48 83 ec 20          	sub    $0x20,%rsp
    929e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92a2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    92a6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    92ab:	74 40                	je     92ed <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    92ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92b1:	48 89 c7             	mov    %rax,%rdi
    92b4:	e8 08 07 00 00       	call   99c1 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    92b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    92bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92c1:	48 89 c7             	mov    %rax,%rdi
    92c4:	e8 06 07 00 00       	call   99cf <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    92c9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    92ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    92d2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    92d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92de:	48 89 ce             	mov    %rcx,%rsi
    92e1:	48 89 c7             	mov    %rax,%rdi
    92e4:	e8 0d 07 00 00       	call   99f6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    92e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    92ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    92f1:	c9                   	leave
    92f2:	c3                   	ret
    92f3:	90                   	nop

00000000000092f4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    92f4:	55                   	push   %rbp
    92f5:	48 89 e5             	mov    %rsp,%rbp
    92f8:	48 83 ec 10          	sub    $0x10,%rsp
    92fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    9300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9304:	48 89 c7             	mov    %rax,%rdi
    9307:	e8 2e 07 00 00       	call   9a3a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    930c:	c9                   	leave
    930d:	c3                   	ret

000000000000930e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    930e:	55                   	push   %rbp
    930f:	48 89 e5             	mov    %rsp,%rbp
    9312:	48 83 ec 10          	sub    $0x10,%rsp
    9316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    931a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    931e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9326:	ba 00 00 00 00       	mov    $0x0,%edx
    932b:	48 89 ce             	mov    %rcx,%rsi
    932e:	48 89 c7             	mov    %rax,%rdi
    9331:	e8 18 07 00 00       	call   9a4e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    9336:	c9                   	leave
    9337:	c3                   	ret

0000000000009338 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9338:	55                   	push   %rbp
    9339:	48 89 e5             	mov    %rsp,%rbp
    933c:	48 83 ec 20          	sub    $0x20,%rsp
    9340:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9344:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9348:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    934d:	74 40                	je     938f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    934f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9353:	48 89 c7             	mov    %rax,%rdi
    9356:	e8 c2 f9 ff ff       	call   8d1d <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    935b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    935f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9363:	48 89 c7             	mov    %rax,%rdi
    9366:	e8 4d 07 00 00       	call   9ab8 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    936b:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    9370:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9374:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9378:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    937c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9380:	48 89 ce             	mov    %rcx,%rsi
    9383:	48 89 c7             	mov    %rax,%rdi
    9386:	e8 76 07 00 00       	call   9b01 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    938b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    938f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9393:	c9                   	leave
    9394:	c3                   	ret
    9395:	90                   	nop

0000000000009396 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    9396:	55                   	push   %rbp
    9397:	48 89 e5             	mov    %rsp,%rbp
    939a:	48 83 ec 10          	sub    $0x10,%rsp
    939e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    93a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a6:	48 89 c7             	mov    %rax,%rdi
    93a9:	e8 98 07 00 00       	call   9b46 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    93ae:	c9                   	leave
    93af:	c3                   	ret

00000000000093b0 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    93b0:	55                   	push   %rbp
    93b1:	48 89 e5             	mov    %rsp,%rbp
    93b4:	48 83 ec 10          	sub    $0x10,%rsp
    93b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    93c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c8:	ba 00 00 00 00       	mov    $0x0,%edx
    93cd:	48 89 ce             	mov    %rcx,%rsi
    93d0:	48 89 c7             	mov    %rax,%rdi
    93d3:	e8 82 07 00 00       	call   9b5a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    93d8:	c9                   	leave
    93d9:	c3                   	ret

00000000000093da <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    93da:	55                   	push   %rbp
    93db:	48 89 e5             	mov    %rsp,%rbp
    93de:	48 83 ec 20          	sub    $0x20,%rsp
    93e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    93e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    93ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    93f2:	eb 1e                	jmp    9412 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    93f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f8:	48 89 c7             	mov    %rax,%rdi
    93fb:	e8 c5 07 00 00       	call   9bc5 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    9400:	48 89 c7             	mov    %rax,%rdi
    9403:	e8 cb 07 00 00       	call   9bd3 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    9408:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    940d:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    9412:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9417:	75 db                	jne    93f4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    9419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    941d:	c9                   	leave
    941e:	c3                   	ret
    941f:	90                   	nop

0000000000009420 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    9420:	55                   	push   %rbp
    9421:	48 89 e5             	mov    %rsp,%rbp
    9424:	48 83 ec 10          	sub    $0x10,%rsp
    9428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    942c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9430:	48 89 c7             	mov    %rax,%rdi
    9433:	e8 c4 07 00 00       	call   9bfc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    9438:	c9                   	leave
    9439:	c3                   	ret

000000000000943a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    943a:	55                   	push   %rbp
    943b:	48 89 e5             	mov    %rsp,%rbp
    943e:	48 83 ec 10          	sub    $0x10,%rsp
    9442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9446:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    944a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    944e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9452:	ba 00 00 00 00       	mov    $0x0,%edx
    9457:	48 89 ce             	mov    %rcx,%rsi
    945a:	48 89 c7             	mov    %rax,%rdi
    945d:	e8 ae 07 00 00       	call   9c10 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    9462:	c9                   	leave
    9463:	c3                   	ret

0000000000009464 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9464:	55                   	push   %rbp
    9465:	48 89 e5             	mov    %rsp,%rbp
    9468:	48 83 ec 20          	sub    $0x20,%rsp
    946c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9470:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9474:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9479:	74 40                	je     94bb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    947b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    947f:	48 89 c7             	mov    %rax,%rdi
    9482:	e8 ea 07 00 00       	call   9c71 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    9487:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    948b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    948f:	48 89 c7             	mov    %rax,%rdi
    9492:	e8 e8 07 00 00       	call   9c7f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    9497:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    949c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94a0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    94a4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    94a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94ac:	48 89 ce             	mov    %rcx,%rsi
    94af:	48 89 c7             	mov    %rax,%rdi
    94b2:	e8 f5 07 00 00       	call   9cac <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    94b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    94bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    94bf:	c9                   	leave
    94c0:	c3                   	ret
    94c1:	90                   	nop

00000000000094c2 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    94c2:	55                   	push   %rbp
    94c3:	48 89 e5             	mov    %rsp,%rbp
    94c6:	48 83 ec 10          	sub    $0x10,%rsp
    94ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    94ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d2:	48 89 c7             	mov    %rax,%rdi
    94d5:	e8 16 08 00 00       	call   9cf0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    94da:	c9                   	leave
    94db:	c3                   	ret

00000000000094dc <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    94dc:	55                   	push   %rbp
    94dd:	48 89 e5             	mov    %rsp,%rbp
    94e0:	48 83 ec 10          	sub    $0x10,%rsp
    94e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    94ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f4:	ba 00 00 00 00       	mov    $0x0,%edx
    94f9:	48 89 ce             	mov    %rcx,%rsi
    94fc:	48 89 c7             	mov    %rax,%rdi
    94ff:	e8 00 08 00 00       	call   9d04 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    9504:	c9                   	leave
    9505:	c3                   	ret

0000000000009506 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9506:	55                   	push   %rbp
    9507:	48 89 e5             	mov    %rsp,%rbp
    950a:	48 83 ec 20          	sub    $0x20,%rsp
    950e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9512:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9516:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    951b:	74 40                	je     955d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    951d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9521:	48 89 c7             	mov    %rax,%rdi
    9524:	e8 3c 08 00 00       	call   9d65 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    9529:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    952d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9531:	48 89 c7             	mov    %rax,%rdi
    9534:	e8 3a 08 00 00       	call   9d73 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    9539:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    953e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9542:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9546:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    954a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    954e:	48 89 ce             	mov    %rcx,%rsi
    9551:	48 89 c7             	mov    %rax,%rdi
    9554:	e8 40 08 00 00       	call   9d99 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    9559:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    955d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9561:	c9                   	leave
    9562:	c3                   	ret
    9563:	90                   	nop

0000000000009564 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    9564:	55                   	push   %rbp
    9565:	48 89 e5             	mov    %rsp,%rbp
    9568:	48 83 ec 10          	sub    $0x10,%rsp
    956c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    9570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9574:	48 89 c7             	mov    %rax,%rdi
    9577:	e8 62 08 00 00       	call   9dde <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    957c:	c9                   	leave
    957d:	c3                   	ret

000000000000957e <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    957e:	55                   	push   %rbp
    957f:	48 89 e5             	mov    %rsp,%rbp
    9582:	48 83 ec 10          	sub    $0x10,%rsp
    9586:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    958a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    958e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9596:	ba 00 00 00 00       	mov    $0x0,%edx
    959b:	48 89 ce             	mov    %rcx,%rsi
    959e:	48 89 c7             	mov    %rax,%rdi
    95a1:	e8 4c 08 00 00       	call   9df2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    95a6:	c9                   	leave
    95a7:	c3                   	ret

00000000000095a8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    95a8:	55                   	push   %rbp
    95a9:	48 89 e5             	mov    %rsp,%rbp
    95ac:	48 83 ec 20          	sub    $0x20,%rsp
    95b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    95b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    95b8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    95bd:	74 40                	je     95ff <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    95bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95c3:	48 89 c7             	mov    %rax,%rdi
    95c6:	e8 88 08 00 00       	call   9e53 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    95cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    95cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95d3:	48 89 c7             	mov    %rax,%rdi
    95d6:	e8 86 08 00 00       	call   9e61 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    95db:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    95e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    95e4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    95e8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    95ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95f0:	48 89 ce             	mov    %rcx,%rsi
    95f3:	48 89 c7             	mov    %rax,%rdi
    95f6:	e8 8d 08 00 00       	call   9e88 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    95fb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    95ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9603:	c9                   	leave
    9604:	c3                   	ret
    9605:	90                   	nop

0000000000009606 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9606:	55                   	push   %rbp
    9607:	48 89 e5             	mov    %rsp,%rbp
    960a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    960e:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9615:	03 3f 00 
      }
    9618:	5d                   	pop    %rbp
    9619:	c3                   	ret

000000000000961a <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    961a:	55                   	push   %rbp
    961b:	48 89 e5             	mov    %rsp,%rbp
    961e:	48 83 ec 20          	sub    $0x20,%rsp
    9622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9626:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    962a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    962e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9632:	48 89 c7             	mov    %rax,%rdi
    9635:	e8 cc ff ff ff       	call   9606 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    963a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    963e:	0f 92 c0             	setb   %al
    9641:	0f b6 c0             	movzbl %al,%eax
    9644:	48 85 c0             	test   %rax,%rax
    9647:	0f 95 c0             	setne  %al
    964a:	84 c0                	test   %al,%al
    964c:	74 1a                	je     9668 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    964e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9655:	07 7e 00 
    9658:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    965c:	73 05                	jae    9663 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    965e:	e8 bd 9b ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9663:	e8 58 9a ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9668:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    966c:	48 89 d0             	mov    %rdx,%rax
    966f:	48 c1 e0 06          	shl    $0x6,%rax
    9673:	48 01 d0             	add    %rdx,%rax
    9676:	48 c1 e0 03          	shl    $0x3,%rax
    967a:	48 89 c7             	mov    %rax,%rdi
    967d:	e8 7e 9c ff ff       	call   3300 <_Znwm@plt>
    9682:	90                   	nop
      }
    9683:	c9                   	leave
    9684:	c3                   	ret

0000000000009685 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9685:	55                   	push   %rbp
    9686:	48 89 e5             	mov    %rsp,%rbp
    9689:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    968d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9691:	5d                   	pop    %rbp
    9692:	c3                   	ret

0000000000009693 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9693:	55                   	push   %rbp
    9694:	48 89 e5             	mov    %rsp,%rbp
    9697:	48 83 ec 10          	sub    $0x10,%rsp
    969b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    969f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96a3:	48 89 c6             	mov    %rax,%rsi
    96a6:	bf 08 02 00 00       	mov    $0x208,%edi
    96ab:	e8 90 a6 ff ff       	call   3d40 <_ZnwmPv>
    96b0:	b9 08 02 00 00       	mov    $0x208,%ecx
    96b5:	be 00 00 00 00       	mov    $0x0,%esi
    96ba:	48 89 30             	mov    %rsi,(%rax)
    96bd:	89 ca                	mov    %ecx,%edx
    96bf:	48 01 c2             	add    %rax,%rdx
    96c2:	48 83 c2 08          	add    $0x8,%rdx
    96c6:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    96ca:	48 8d 50 08          	lea    0x8(%rax),%rdx
    96ce:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    96d2:	48 29 d0             	sub    %rdx,%rax
    96d5:	01 c1                	add    %eax,%ecx
    96d7:	83 e1 f8             	and    $0xfffffff8,%ecx
    96da:	89 c8                	mov    %ecx,%eax
    96dc:	c1 e8 03             	shr    $0x3,%eax
    96df:	89 c1                	mov    %eax,%ecx
    96e1:	48 89 d7             	mov    %rdx,%rdi
    96e4:	48 89 f0             	mov    %rsi,%rax
    96e7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    96ea:	90                   	nop
    96eb:	c9                   	leave
    96ec:	c3                   	ret

00000000000096ed <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    96ed:	55                   	push   %rbp
    96ee:	48 89 e5             	mov    %rsp,%rbp
    96f1:	48 83 ec 20          	sub    $0x20,%rsp
    96f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96fd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9701:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9705:	48 89 c7             	mov    %rax,%rdi
    9708:	e8 bf 07 00 00       	call   9ecc <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    970d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9711:	48 89 c7             	mov    %rax,%rdi
    9714:	e8 39 a6 ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9719:	48 89 c1             	mov    %rax,%rcx
    971c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9720:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9724:	48 89 ce             	mov    %rcx,%rsi
    9727:	48 89 c7             	mov    %rax,%rdi
    972a:	e8 a8 07 00 00       	call   9ed7 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    972f:	c9                   	leave
    9730:	c3                   	ret
    9731:	90                   	nop

0000000000009732 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9732:	55                   	push   %rbp
    9733:	48 89 e5             	mov    %rsp,%rbp
    9736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    973a:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9741:	07 7e 00 
      }
    9744:	5d                   	pop    %rbp
    9745:	c3                   	ret

0000000000009746 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9746:	55                   	push   %rbp
    9747:	48 89 e5             	mov    %rsp,%rbp
    974a:	48 83 ec 20          	sub    $0x20,%rsp
    974e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9752:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9756:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    975a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    975e:	48 89 c7             	mov    %rax,%rdi
    9761:	e8 cc ff ff ff       	call   9732 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    9766:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    976a:	0f 92 c0             	setb   %al
    976d:	0f b6 c0             	movzbl %al,%eax
    9770:	48 85 c0             	test   %rax,%rax
    9773:	0f 95 c0             	setne  %al
    9776:	84 c0                	test   %al,%al
    9778:	74 1a                	je     9794 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    977a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    9781:	0f fc 00 
    9784:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9788:	73 05                	jae    978f <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    978a:	e8 91 9a ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    978f:	e8 2c 99 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9794:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9798:	48 89 d0             	mov    %rdx,%rax
    979b:	48 c1 e0 06          	shl    $0x6,%rax
    979f:	48 01 d0             	add    %rdx,%rax
    97a2:	48 c1 e0 02          	shl    $0x2,%rax
    97a6:	48 89 c7             	mov    %rax,%rdi
    97a9:	e8 52 9b ff ff       	call   3300 <_Znwm@plt>
    97ae:	90                   	nop
      }
    97af:	c9                   	leave
    97b0:	c3                   	ret

00000000000097b1 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    97b1:	55                   	push   %rbp
    97b2:	48 89 e5             	mov    %rsp,%rbp
    97b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    97b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97bd:	5d                   	pop    %rbp
    97be:	c3                   	ret

00000000000097bf <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    97bf:	55                   	push   %rbp
    97c0:	48 89 e5             	mov    %rsp,%rbp
    97c3:	48 83 ec 10          	sub    $0x10,%rsp
    97c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    97cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97cf:	48 89 c6             	mov    %rax,%rsi
    97d2:	bf 04 01 00 00       	mov    $0x104,%edi
    97d7:	e8 64 a5 ff ff       	call   3d40 <_ZnwmPv>
    97dc:	b9 04 01 00 00       	mov    $0x104,%ecx
    97e1:	be 00 00 00 00       	mov    $0x0,%esi
    97e6:	48 89 30             	mov    %rsi,(%rax)
    97e9:	89 ca                	mov    %ecx,%edx
    97eb:	48 01 c2             	add    %rax,%rdx
    97ee:	48 83 c2 08          	add    $0x8,%rdx
    97f2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    97f6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    97fa:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    97fe:	48 29 d0             	sub    %rdx,%rax
    9801:	01 c1                	add    %eax,%ecx
    9803:	83 e1 f8             	and    $0xfffffff8,%ecx
    9806:	89 c8                	mov    %ecx,%eax
    9808:	c1 e8 03             	shr    $0x3,%eax
    980b:	89 c1                	mov    %eax,%ecx
    980d:	48 89 d7             	mov    %rdx,%rdi
    9810:	48 89 f0             	mov    %rsi,%rax
    9813:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    9816:	90                   	nop
    9817:	c9                   	leave
    9818:	c3                   	ret

0000000000009819 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9819:	55                   	push   %rbp
    981a:	48 89 e5             	mov    %rsp,%rbp
    981d:	48 83 ec 20          	sub    $0x20,%rsp
    9821:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9825:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9829:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    982d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9831:	48 89 c7             	mov    %rax,%rdi
    9834:	e8 0d 07 00 00       	call   9f46 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9839:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    983d:	48 89 c7             	mov    %rax,%rdi
    9840:	e8 0d a5 ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9845:	48 89 c1             	mov    %rax,%rcx
    9848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    984c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9850:	48 89 ce             	mov    %rcx,%rsi
    9853:	48 89 c7             	mov    %rax,%rdi
    9856:	e8 f6 06 00 00       	call   9f51 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    985b:	c9                   	leave
    985c:	c3                   	ret
    985d:	90                   	nop

000000000000985e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    985e:	55                   	push   %rbp
    985f:	48 89 e5             	mov    %rsp,%rbp
    9862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9866:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    986d:	ff ff 0f 
      }
    9870:	5d                   	pop    %rbp
    9871:	c3                   	ret

0000000000009872 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9872:	55                   	push   %rbp
    9873:	48 89 e5             	mov    %rsp,%rbp
    9876:	48 83 ec 20          	sub    $0x20,%rsp
    987a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    987e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9882:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    988a:	48 89 c7             	mov    %rax,%rdi
    988d:	e8 cc ff ff ff       	call   985e <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    9892:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9896:	0f 92 c0             	setb   %al
    9899:	0f b6 c0             	movzbl %al,%eax
    989c:	48 85 c0             	test   %rax,%rax
    989f:	0f 95 c0             	setne  %al
    98a2:	84 c0                	test   %al,%al
    98a4:	74 1a                	je     98c0 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    98a6:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    98ad:	ff ff 1f 
    98b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    98b4:	73 05                	jae    98bb <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    98b6:	e8 65 99 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    98bb:	e8 00 98 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    98c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    98c4:	48 c1 e0 03          	shl    $0x3,%rax
    98c8:	48 89 c7             	mov    %rax,%rdi
    98cb:	e8 30 9a ff ff       	call   3300 <_Znwm@plt>
    98d0:	90                   	nop
      }
    98d1:	c9                   	leave
    98d2:	c3                   	ret

00000000000098d3 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    98d3:	55                   	push   %rbp
    98d4:	48 89 e5             	mov    %rsp,%rbp
    98d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    98db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98df:	5d                   	pop    %rbp
    98e0:	c3                   	ret

00000000000098e1 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    98e1:	55                   	push   %rbp
    98e2:	48 89 e5             	mov    %rsp,%rbp
    98e5:	48 83 ec 10          	sub    $0x10,%rsp
    98e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    98ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98f1:	48 89 c6             	mov    %rax,%rsi
    98f4:	bf 08 00 00 00       	mov    $0x8,%edi
    98f9:	e8 42 a4 ff ff       	call   3d40 <_ZnwmPv>
    98fe:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    9905:	90                   	nop
    9906:	c9                   	leave
    9907:	c3                   	ret

0000000000009908 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9908:	55                   	push   %rbp
    9909:	48 89 e5             	mov    %rsp,%rbp
    990c:	48 83 ec 20          	sub    $0x20,%rsp
    9910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9914:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9918:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    991c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9920:	48 89 c7             	mov    %rax,%rdi
    9923:	e8 98 06 00 00       	call   9fc0 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9928:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    992c:	48 89 c7             	mov    %rax,%rdi
    992f:	e8 1e a4 ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9934:	48 89 c1             	mov    %rax,%rcx
    9937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    993b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    993f:	48 89 ce             	mov    %rcx,%rsi
    9942:	48 89 c7             	mov    %rax,%rdi
    9945:	e8 81 06 00 00       	call   9fcb <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    994a:	c9                   	leave
    994b:	c3                   	ret

000000000000994c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    994c:	55                   	push   %rbp
    994d:	48 89 e5             	mov    %rsp,%rbp
    9950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9954:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    995b:	ff ff 0f 
      }
    995e:	5d                   	pop    %rbp
    995f:	c3                   	ret

0000000000009960 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9960:	55                   	push   %rbp
    9961:	48 89 e5             	mov    %rsp,%rbp
    9964:	48 83 ec 20          	sub    $0x20,%rsp
    9968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    996c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9970:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9978:	48 89 c7             	mov    %rax,%rdi
    997b:	e8 cc ff ff ff       	call   994c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    9980:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9984:	0f 92 c0             	setb   %al
    9987:	0f b6 c0             	movzbl %al,%eax
    998a:	48 85 c0             	test   %rax,%rax
    998d:	0f 95 c0             	setne  %al
    9990:	84 c0                	test   %al,%al
    9992:	74 1a                	je     99ae <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9994:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    999b:	ff ff 1f 
    999e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    99a2:	73 05                	jae    99a9 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    99a4:	e8 77 98 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    99a9:	e8 12 97 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    99ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    99b2:	48 c1 e0 03          	shl    $0x3,%rax
    99b6:	48 89 c7             	mov    %rax,%rdi
    99b9:	e8 42 99 ff ff       	call   3300 <_Znwm@plt>
    99be:	90                   	nop
      }
    99bf:	c9                   	leave
    99c0:	c3                   	ret

00000000000099c1 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    99c1:	55                   	push   %rbp
    99c2:	48 89 e5             	mov    %rsp,%rbp
    99c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    99c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99cd:	5d                   	pop    %rbp
    99ce:	c3                   	ret

00000000000099cf <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    99cf:	55                   	push   %rbp
    99d0:	48 89 e5             	mov    %rsp,%rbp
    99d3:	48 83 ec 10          	sub    $0x10,%rsp
    99d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    99db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99df:	48 89 c6             	mov    %rax,%rsi
    99e2:	bf 08 00 00 00       	mov    $0x8,%edi
    99e7:	e8 54 a3 ff ff       	call   3d40 <_ZnwmPv>
    99ec:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    99f3:	90                   	nop
    99f4:	c9                   	leave
    99f5:	c3                   	ret

00000000000099f6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    99f6:	55                   	push   %rbp
    99f7:	48 89 e5             	mov    %rsp,%rbp
    99fa:	48 83 ec 20          	sub    $0x20,%rsp
    99fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a06:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9a0a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a0e:	48 89 c7             	mov    %rax,%rdi
    9a11:	e8 12 06 00 00       	call   a028 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9a16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a1a:	48 89 c7             	mov    %rax,%rdi
    9a1d:	e8 30 a3 ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9a22:	48 89 c1             	mov    %rax,%rcx
    9a25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a29:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a2d:	48 89 ce             	mov    %rcx,%rsi
    9a30:	48 89 c7             	mov    %rax,%rdi
    9a33:	e8 fb 05 00 00       	call   a033 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    9a38:	c9                   	leave
    9a39:	c3                   	ret

0000000000009a3a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9a3a:	55                   	push   %rbp
    9a3b:	48 89 e5             	mov    %rsp,%rbp
    9a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9a42:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    9a49:	55 55 05 
      }
    9a4c:	5d                   	pop    %rbp
    9a4d:	c3                   	ret

0000000000009a4e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9a4e:	55                   	push   %rbp
    9a4f:	48 89 e5             	mov    %rsp,%rbp
    9a52:	48 83 ec 20          	sub    $0x20,%rsp
    9a56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a66:	48 89 c7             	mov    %rax,%rdi
    9a69:	e8 cc ff ff ff       	call   9a3a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    9a6e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9a72:	0f 92 c0             	setb   %al
    9a75:	0f b6 c0             	movzbl %al,%eax
    9a78:	48 85 c0             	test   %rax,%rax
    9a7b:	0f 95 c0             	setne  %al
    9a7e:	84 c0                	test   %al,%al
    9a80:	74 1a                	je     9a9c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9a82:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    9a89:	aa aa 0a 
    9a8c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9a90:	73 05                	jae    9a97 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9a92:	e8 89 97 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9a97:	e8 24 96 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9a9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9aa0:	48 89 d0             	mov    %rdx,%rax
    9aa3:	48 01 c0             	add    %rax,%rax
    9aa6:	48 01 d0             	add    %rdx,%rax
    9aa9:	48 c1 e0 03          	shl    $0x3,%rax
    9aad:	48 89 c7             	mov    %rax,%rdi
    9ab0:	e8 4b 98 ff ff       	call   3300 <_Znwm@plt>
    9ab5:	90                   	nop
      }
    9ab6:	c9                   	leave
    9ab7:	c3                   	ret

0000000000009ab8 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9ab8:	55                   	push   %rbp
    9ab9:	48 89 e5             	mov    %rsp,%rbp
    9abc:	48 83 ec 10          	sub    $0x10,%rsp
    9ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac8:	48 89 c6             	mov    %rax,%rsi
    9acb:	bf 18 00 00 00       	mov    $0x18,%edi
    9ad0:	e8 6b a2 ff ff       	call   3d40 <_ZnwmPv>
    9ad5:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    9adb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    9ae2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    9ae9:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    9af0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    9af7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    9afe:	90                   	nop
    9aff:	c9                   	leave
    9b00:	c3                   	ret

0000000000009b01 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9b01:	55                   	push   %rbp
    9b02:	48 89 e5             	mov    %rsp,%rbp
    9b05:	48 83 ec 20          	sub    $0x20,%rsp
    9b09:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b0d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b11:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9b15:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9b19:	48 89 c7             	mov    %rax,%rdi
    9b1c:	e8 6f 05 00 00       	call   a090 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9b21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b25:	48 89 c7             	mov    %rax,%rdi
    9b28:	e8 25 a2 ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9b2d:	48 89 c1             	mov    %rax,%rcx
    9b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b34:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b38:	48 89 ce             	mov    %rcx,%rsi
    9b3b:	48 89 c7             	mov    %rax,%rdi
    9b3e:	e8 58 05 00 00       	call   a09b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    9b43:	c9                   	leave
    9b44:	c3                   	ret
    9b45:	90                   	nop

0000000000009b46 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9b46:	55                   	push   %rbp
    9b47:	48 89 e5             	mov    %rsp,%rbp
    9b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9b4e:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    9b55:	49 92 04 
      }
    9b58:	5d                   	pop    %rbp
    9b59:	c3                   	ret

0000000000009b5a <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9b5a:	55                   	push   %rbp
    9b5b:	48 89 e5             	mov    %rsp,%rbp
    9b5e:	48 83 ec 20          	sub    $0x20,%rsp
    9b62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b6a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b72:	48 89 c7             	mov    %rax,%rdi
    9b75:	e8 cc ff ff ff       	call   9b46 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    9b7a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9b7e:	0f 92 c0             	setb   %al
    9b81:	0f b6 c0             	movzbl %al,%eax
    9b84:	48 85 c0             	test   %rax,%rax
    9b87:	0f 95 c0             	setne  %al
    9b8a:	84 c0                	test   %al,%al
    9b8c:	74 1a                	je     9ba8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9b8e:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    9b95:	92 24 09 
    9b98:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9b9c:	73 05                	jae    9ba3 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9b9e:	e8 7d 96 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9ba3:	e8 18 95 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9ba8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bac:	48 89 d0             	mov    %rdx,%rax
    9baf:	48 c1 e0 03          	shl    $0x3,%rax
    9bb3:	48 29 d0             	sub    %rdx,%rax
    9bb6:	48 c1 e0 02          	shl    $0x2,%rax
    9bba:	48 89 c7             	mov    %rax,%rdi
    9bbd:	e8 3e 97 ff ff       	call   3300 <_Znwm@plt>
    9bc2:	90                   	nop
      }
    9bc3:	c9                   	leave
    9bc4:	c3                   	ret

0000000000009bc5 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9bc5:	55                   	push   %rbp
    9bc6:	48 89 e5             	mov    %rsp,%rbp
    9bc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bd1:	5d                   	pop    %rbp
    9bd2:	c3                   	ret

0000000000009bd3 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9bd3:	55                   	push   %rbp
    9bd4:	48 89 e5             	mov    %rsp,%rbp
    9bd7:	48 83 ec 10          	sub    $0x10,%rsp
    9bdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9bdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be3:	48 89 c6             	mov    %rax,%rsi
    9be6:	bf 1c 00 00 00       	mov    $0x1c,%edi
    9beb:	e8 50 a1 ff ff       	call   3d40 <_ZnwmPv>
    9bf0:	48 89 c7             	mov    %rax,%rdi
    9bf3:	e8 6c 05 00 00       	call   a164 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    9bf8:	90                   	nop
    9bf9:	c9                   	leave
    9bfa:	c3                   	ret
    9bfb:	90                   	nop

0000000000009bfc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9bfc:	55                   	push   %rbp
    9bfd:	48 89 e5             	mov    %rsp,%rbp
    9c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9c04:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9c0b:	ff ff 0f 
      }
    9c0e:	5d                   	pop    %rbp
    9c0f:	c3                   	ret

0000000000009c10 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9c10:	55                   	push   %rbp
    9c11:	48 89 e5             	mov    %rsp,%rbp
    9c14:	48 83 ec 20          	sub    $0x20,%rsp
    9c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c28:	48 89 c7             	mov    %rax,%rdi
    9c2b:	e8 cc ff ff ff       	call   9bfc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    9c30:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9c34:	0f 92 c0             	setb   %al
    9c37:	0f b6 c0             	movzbl %al,%eax
    9c3a:	48 85 c0             	test   %rax,%rax
    9c3d:	0f 95 c0             	setne  %al
    9c40:	84 c0                	test   %al,%al
    9c42:	74 1a                	je     9c5e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9c44:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    9c4b:	ff ff 1f 
    9c4e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9c52:	73 05                	jae    9c59 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9c54:	e8 c7 95 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9c59:	e8 62 94 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9c5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9c62:	48 c1 e0 03          	shl    $0x3,%rax
    9c66:	48 89 c7             	mov    %rax,%rdi
    9c69:	e8 92 96 ff ff       	call   3300 <_Znwm@plt>
    9c6e:	90                   	nop
      }
    9c6f:	c9                   	leave
    9c70:	c3                   	ret

0000000000009c71 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9c71:	55                   	push   %rbp
    9c72:	48 89 e5             	mov    %rsp,%rbp
    9c75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9c79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c7d:	5d                   	pop    %rbp
    9c7e:	c3                   	ret

0000000000009c7f <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9c7f:	55                   	push   %rbp
    9c80:	48 89 e5             	mov    %rsp,%rbp
    9c83:	48 83 ec 10          	sub    $0x10,%rsp
    9c87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9c8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c8f:	48 89 c6             	mov    %rax,%rsi
    9c92:	bf 08 00 00 00       	mov    $0x8,%edi
    9c97:	e8 a4 a0 ff ff       	call   3d40 <_ZnwmPv>
    9c9c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    9ca2:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    9ca9:	90                   	nop
    9caa:	c9                   	leave
    9cab:	c3                   	ret

0000000000009cac <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9cac:	55                   	push   %rbp
    9cad:	48 89 e5             	mov    %rsp,%rbp
    9cb0:	48 83 ec 20          	sub    $0x20,%rsp
    9cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9cbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9cc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9cc4:	48 89 c7             	mov    %rax,%rdi
    9cc7:	e8 b3 04 00 00       	call   a17f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9ccc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9cd0:	48 89 c7             	mov    %rax,%rdi
    9cd3:	e8 7a a0 ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9cd8:	48 89 c1             	mov    %rax,%rcx
    9cdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cdf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ce3:	48 89 ce             	mov    %rcx,%rsi
    9ce6:	48 89 c7             	mov    %rax,%rdi
    9ce9:	e8 9c 04 00 00       	call   a18a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    9cee:	c9                   	leave
    9cef:	c3                   	ret

0000000000009cf0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9cf0:	55                   	push   %rbp
    9cf1:	48 89 e5             	mov    %rsp,%rbp
    9cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9cf8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    9cff:	ff ff 1f 
      }
    9d02:	5d                   	pop    %rbp
    9d03:	c3                   	ret

0000000000009d04 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9d04:	55                   	push   %rbp
    9d05:	48 89 e5             	mov    %rsp,%rbp
    9d08:	48 83 ec 20          	sub    $0x20,%rsp
    9d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d1c:	48 89 c7             	mov    %rax,%rdi
    9d1f:	e8 cc ff ff ff       	call   9cf0 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    9d24:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9d28:	0f 92 c0             	setb   %al
    9d2b:	0f b6 c0             	movzbl %al,%eax
    9d2e:	48 85 c0             	test   %rax,%rax
    9d31:	0f 95 c0             	setne  %al
    9d34:	84 c0                	test   %al,%al
    9d36:	74 1a                	je     9d52 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9d38:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    9d3f:	ff ff 3f 
    9d42:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9d46:	73 05                	jae    9d4d <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9d48:	e8 d3 94 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9d4d:	e8 6e 93 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9d52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d56:	48 c1 e0 02          	shl    $0x2,%rax
    9d5a:	48 89 c7             	mov    %rax,%rdi
    9d5d:	e8 9e 95 ff ff       	call   3300 <_Znwm@plt>
    9d62:	90                   	nop
      }
    9d63:	c9                   	leave
    9d64:	c3                   	ret

0000000000009d65 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9d65:	55                   	push   %rbp
    9d66:	48 89 e5             	mov    %rsp,%rbp
    9d69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9d6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d71:	5d                   	pop    %rbp
    9d72:	c3                   	ret

0000000000009d73 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9d73:	55                   	push   %rbp
    9d74:	48 89 e5             	mov    %rsp,%rbp
    9d77:	48 83 ec 10          	sub    $0x10,%rsp
    9d7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9d7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d83:	48 89 c6             	mov    %rax,%rsi
    9d86:	bf 04 00 00 00       	mov    $0x4,%edi
    9d8b:	e8 b0 9f ff ff       	call   3d40 <_ZnwmPv>
    9d90:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    9d96:	90                   	nop
    9d97:	c9                   	leave
    9d98:	c3                   	ret

0000000000009d99 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9d99:	55                   	push   %rbp
    9d9a:	48 89 e5             	mov    %rsp,%rbp
    9d9d:	48 83 ec 20          	sub    $0x20,%rsp
    9da1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9da5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9da9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9dad:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9db1:	48 89 c7             	mov    %rax,%rdi
    9db4:	e8 2e 04 00 00       	call   a1e7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9db9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9dbd:	48 89 c7             	mov    %rax,%rdi
    9dc0:	e8 8d 9f ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9dc5:	48 89 c1             	mov    %rax,%rcx
    9dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dcc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9dd0:	48 89 ce             	mov    %rcx,%rsi
    9dd3:	48 89 c7             	mov    %rax,%rdi
    9dd6:	e8 17 04 00 00       	call   a1f2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    9ddb:	c9                   	leave
    9ddc:	c3                   	ret
    9ddd:	90                   	nop

0000000000009dde <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    9dde:	55                   	push   %rbp
    9ddf:	48 89 e5             	mov    %rsp,%rbp
    9de2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    9de6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9ded:	ff ff 0f 
      }
    9df0:	5d                   	pop    %rbp
    9df1:	c3                   	ret

0000000000009df2 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9df2:	55                   	push   %rbp
    9df3:	48 89 e5             	mov    %rsp,%rbp
    9df6:	48 83 ec 20          	sub    $0x20,%rsp
    9dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e02:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e0a:	48 89 c7             	mov    %rax,%rdi
    9e0d:	e8 cc ff ff ff       	call   9dde <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    9e12:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9e16:	0f 92 c0             	setb   %al
    9e19:	0f b6 c0             	movzbl %al,%eax
    9e1c:	48 85 c0             	test   %rax,%rax
    9e1f:	0f 95 c0             	setne  %al
    9e22:	84 c0                	test   %al,%al
    9e24:	74 1a                	je     9e40 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9e26:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    9e2d:	ff ff 1f 
    9e30:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9e34:	73 05                	jae    9e3b <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9e36:	e8 e5 93 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9e3b:	e8 80 92 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9e40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e44:	48 c1 e0 03          	shl    $0x3,%rax
    9e48:	48 89 c7             	mov    %rax,%rdi
    9e4b:	e8 b0 94 ff ff       	call   3300 <_Znwm@plt>
    9e50:	90                   	nop
      }
    9e51:	c9                   	leave
    9e52:	c3                   	ret

0000000000009e53 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9e53:	55                   	push   %rbp
    9e54:	48 89 e5             	mov    %rsp,%rbp
    9e57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5f:	5d                   	pop    %rbp
    9e60:	c3                   	ret

0000000000009e61 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9e61:	55                   	push   %rbp
    9e62:	48 89 e5             	mov    %rsp,%rbp
    9e65:	48 83 ec 10          	sub    $0x10,%rsp
    9e69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e71:	48 89 c6             	mov    %rax,%rsi
    9e74:	bf 08 00 00 00       	mov    $0x8,%edi
    9e79:	e8 c2 9e ff ff       	call   3d40 <_ZnwmPv>
    9e7e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    9e85:	90                   	nop
    9e86:	c9                   	leave
    9e87:	c3                   	ret

0000000000009e88 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9e88:	55                   	push   %rbp
    9e89:	48 89 e5             	mov    %rsp,%rbp
    9e8c:	48 83 ec 20          	sub    $0x20,%rsp
    9e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9e9c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9ea0:	48 89 c7             	mov    %rax,%rdi
    9ea3:	e8 a7 03 00 00       	call   a24f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9ea8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9eac:	48 89 c7             	mov    %rax,%rdi
    9eaf:	e8 9e 9e ff ff       	call   3d52 <_ZSt17__size_to_integerm>
    9eb4:	48 89 c1             	mov    %rax,%rcx
    9eb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ebb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ebf:	48 89 ce             	mov    %rcx,%rsi
    9ec2:	48 89 c7             	mov    %rax,%rdi
    9ec5:	e8 90 03 00 00       	call   a25a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    9eca:	c9                   	leave
    9ecb:	c3                   	ret

0000000000009ecc <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    9ecc:	55                   	push   %rbp
    9ecd:	48 89 e5             	mov    %rsp,%rbp
    9ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9ed4:	90                   	nop
    9ed5:	5d                   	pop    %rbp
    9ed6:	c3                   	ret

0000000000009ed7 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    9ed7:	55                   	push   %rbp
    9ed8:	48 89 e5             	mov    %rsp,%rbp
    9edb:	48 83 ec 20          	sub    $0x20,%rsp
    9edf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ee3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ee7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    9eeb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9ef0:	75 06                	jne    9ef8 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    9ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef6:	eb 4c                	jmp    9f44 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    9ef8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9efc:	48 89 d0             	mov    %rdx,%rax
    9eff:	48 c1 e0 06          	shl    $0x6,%rax
    9f03:	48 01 d0             	add    %rdx,%rax
    9f06:	48 c1 e0 03          	shl    $0x3,%rax
    9f0a:	48 89 c2             	mov    %rax,%rdx
    9f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f11:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9f15:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1d:	48 89 ce             	mov    %rcx,%rsi
    9f20:	48 89 c7             	mov    %rax,%rdi
    9f23:	e8 8f 03 00 00       	call   a2b7 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    9f28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f2c:	48 89 d0             	mov    %rdx,%rax
    9f2f:	48 c1 e0 06          	shl    $0x6,%rax
    9f33:	48 01 d0             	add    %rdx,%rax
    9f36:	48 c1 e0 03          	shl    $0x3,%rax
    9f3a:	48 89 c2             	mov    %rax,%rdx
    9f3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f41:	48 01 d0             	add    %rdx,%rax
    }
    9f44:	c9                   	leave
    9f45:	c3                   	ret

0000000000009f46 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    9f46:	55                   	push   %rbp
    9f47:	48 89 e5             	mov    %rsp,%rbp
    9f4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9f4e:	90                   	nop
    9f4f:	5d                   	pop    %rbp
    9f50:	c3                   	ret

0000000000009f51 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    9f51:	55                   	push   %rbp
    9f52:	48 89 e5             	mov    %rsp,%rbp
    9f55:	48 83 ec 20          	sub    $0x20,%rsp
    9f59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f5d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f61:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    9f65:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9f6a:	75 06                	jne    9f72 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    9f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f70:	eb 4c                	jmp    9fbe <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    9f72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f76:	48 89 d0             	mov    %rdx,%rax
    9f79:	48 c1 e0 06          	shl    $0x6,%rax
    9f7d:	48 01 d0             	add    %rdx,%rax
    9f80:	48 c1 e0 02          	shl    $0x2,%rax
    9f84:	48 89 c2             	mov    %rax,%rdx
    9f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f8b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9f8f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f97:	48 89 ce             	mov    %rcx,%rsi
    9f9a:	48 89 c7             	mov    %rax,%rdi
    9f9d:	e8 43 03 00 00       	call   a2e5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    9fa2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fa6:	48 89 d0             	mov    %rdx,%rax
    9fa9:	48 c1 e0 06          	shl    $0x6,%rax
    9fad:	48 01 d0             	add    %rdx,%rax
    9fb0:	48 c1 e0 02          	shl    $0x2,%rax
    9fb4:	48 89 c2             	mov    %rax,%rdx
    9fb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fbb:	48 01 d0             	add    %rdx,%rax
    }
    9fbe:	c9                   	leave
    9fbf:	c3                   	ret

0000000000009fc0 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    9fc0:	55                   	push   %rbp
    9fc1:	48 89 e5             	mov    %rsp,%rbp
    9fc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9fc8:	90                   	nop
    9fc9:	5d                   	pop    %rbp
    9fca:	c3                   	ret

0000000000009fcb <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    9fcb:	55                   	push   %rbp
    9fcc:	48 89 e5             	mov    %rsp,%rbp
    9fcf:	48 83 ec 20          	sub    $0x20,%rsp
    9fd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fdb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    9fdf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9fe4:	75 06                	jne    9fec <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    9fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fea:	eb 3a                	jmp    a026 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    9fec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ff0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9ff7:	00 
    9ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ffc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a000:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a008:	48 89 ce             	mov    %rcx,%rsi
    a00b:	48 89 c7             	mov    %rax,%rdi
    a00e:	e8 00 03 00 00       	call   a313 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    a013:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a017:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a01e:	00 
    a01f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a023:	48 01 d0             	add    %rdx,%rax
    }
    a026:	c9                   	leave
    a027:	c3                   	ret

000000000000a028 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    a028:	55                   	push   %rbp
    a029:	48 89 e5             	mov    %rsp,%rbp
    a02c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    a030:	90                   	nop
    a031:	5d                   	pop    %rbp
    a032:	c3                   	ret

000000000000a033 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    a033:	55                   	push   %rbp
    a034:	48 89 e5             	mov    %rsp,%rbp
    a037:	48 83 ec 20          	sub    $0x20,%rsp
    a03b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a03f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a043:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    a047:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a04c:	75 06                	jne    a054 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    a04e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a052:	eb 3a                	jmp    a08e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    a054:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a058:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a05f:	00 
    a060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a064:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a068:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a06c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a070:	48 89 ce             	mov    %rcx,%rsi
    a073:	48 89 c7             	mov    %rax,%rdi
    a076:	e8 c6 02 00 00       	call   a341 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    a07b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a07f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a086:	00 
    a087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a08b:	48 01 d0             	add    %rdx,%rax
    }
    a08e:	c9                   	leave
    a08f:	c3                   	ret

000000000000a090 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    a090:	55                   	push   %rbp
    a091:	48 89 e5             	mov    %rsp,%rbp
    a094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    a098:	90                   	nop
    a099:	5d                   	pop    %rbp
    a09a:	c3                   	ret

000000000000a09b <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    a09b:	55                   	push   %rbp
    a09c:	48 89 e5             	mov    %rsp,%rbp
    a09f:	48 83 ec 20          	sub    $0x20,%rsp
    a0a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    a0af:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a0b4:	75 06                	jne    a0bc <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    a0b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ba:	eb 4a                	jmp    a106 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    a0bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0c0:	48 89 d0             	mov    %rdx,%rax
    a0c3:	48 01 c0             	add    %rax,%rax
    a0c6:	48 01 d0             	add    %rdx,%rax
    a0c9:	48 c1 e0 03          	shl    $0x3,%rax
    a0cd:	48 89 c2             	mov    %rax,%rdx
    a0d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0d4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a0d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a0dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e0:	48 89 ce             	mov    %rcx,%rsi
    a0e3:	48 89 c7             	mov    %rax,%rdi
    a0e6:	e8 84 02 00 00       	call   a36f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    a0eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0ef:	48 89 d0             	mov    %rdx,%rax
    a0f2:	48 01 c0             	add    %rax,%rax
    a0f5:	48 01 d0             	add    %rdx,%rax
    a0f8:	48 c1 e0 03          	shl    $0x3,%rax
    a0fc:	48 89 c2             	mov    %rax,%rdx
    a0ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a103:	48 01 d0             	add    %rdx,%rax
    }
    a106:	c9                   	leave
    a107:	c3                   	ret

000000000000a108 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    a108:	55                   	push   %rbp
    a109:	48 89 e5             	mov    %rsp,%rbp
    a10c:	48 83 ec 10          	sub    $0x10,%rsp
    a110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a118:	48 89 c7             	mov    %rax,%rdi
    a11b:	e8 7e 02 00 00       	call   a39e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    a120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a124:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    a128:	90                   	nop
    a129:	c9                   	leave
    a12a:	c3                   	ret
    a12b:	90                   	nop

000000000000a12c <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    a12c:	55                   	push   %rbp
    a12d:	48 89 e5             	mov    %rsp,%rbp
    a130:	48 83 ec 10          	sub    $0x10,%rsp
    a134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a13c:	48 89 c7             	mov    %rax,%rdi
    a13f:	e8 c4 ff ff ff       	call   a108 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    a144:	90                   	nop
    a145:	c9                   	leave
    a146:	c3                   	ret
    a147:	90                   	nop

000000000000a148 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    a148:	55                   	push   %rbp
    a149:	48 89 e5             	mov    %rsp,%rbp
    a14c:	48 83 ec 10          	sub    $0x10,%rsp
    a150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a158:	48 89 c7             	mov    %rax,%rdi
    a15b:	e8 cc ff ff ff       	call   a12c <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    a160:	90                   	nop
    a161:	c9                   	leave
    a162:	c3                   	ret
    a163:	90                   	nop

000000000000a164 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    a164:	55                   	push   %rbp
    a165:	48 89 e5             	mov    %rsp,%rbp
    a168:	48 83 ec 10          	sub    $0x10,%rsp
    a16c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a174:	48 89 c7             	mov    %rax,%rdi
    a177:	e8 cc ff ff ff       	call   a148 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    a17c:	90                   	nop
    a17d:	c9                   	leave
    a17e:	c3                   	ret

000000000000a17f <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    a17f:	55                   	push   %rbp
    a180:	48 89 e5             	mov    %rsp,%rbp
    a183:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    a187:	90                   	nop
    a188:	5d                   	pop    %rbp
    a189:	c3                   	ret

000000000000a18a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    a18a:	55                   	push   %rbp
    a18b:	48 89 e5             	mov    %rsp,%rbp
    a18e:	48 83 ec 20          	sub    $0x20,%rsp
    a192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a196:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a19a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    a19e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a1a3:	75 06                	jne    a1ab <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    a1a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a9:	eb 3a                	jmp    a1e5 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    a1ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a1af:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a1b6:	00 
    a1b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1bb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a1bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a1c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1c7:	48 89 ce             	mov    %rcx,%rsi
    a1ca:	48 89 c7             	mov    %rax,%rdi
    a1cd:	e8 d7 01 00 00       	call   a3a9 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    a1d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a1d6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a1dd:	00 
    a1de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1e2:	48 01 d0             	add    %rdx,%rax
    }
    a1e5:	c9                   	leave
    a1e6:	c3                   	ret

000000000000a1e7 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    a1e7:	55                   	push   %rbp
    a1e8:	48 89 e5             	mov    %rsp,%rbp
    a1eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    a1ef:	90                   	nop
    a1f0:	5d                   	pop    %rbp
    a1f1:	c3                   	ret

000000000000a1f2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    a1f2:	55                   	push   %rbp
    a1f3:	48 89 e5             	mov    %rsp,%rbp
    a1f6:	48 83 ec 20          	sub    $0x20,%rsp
    a1fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a202:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    a206:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a20b:	75 06                	jne    a213 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    a20d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a211:	eb 3a                	jmp    a24d <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    a213:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a217:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    a21e:	00 
    a21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a223:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a227:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a22b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a22f:	48 89 ce             	mov    %rcx,%rsi
    a232:	48 89 c7             	mov    %rax,%rdi
    a235:	e8 9d 01 00 00       	call   a3d7 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    a23a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a23e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    a245:	00 
    a246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24a:	48 01 d0             	add    %rdx,%rax
    }
    a24d:	c9                   	leave
    a24e:	c3                   	ret

000000000000a24f <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    a24f:	55                   	push   %rbp
    a250:	48 89 e5             	mov    %rsp,%rbp
    a253:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    a257:	90                   	nop
    a258:	5d                   	pop    %rbp
    a259:	c3                   	ret

000000000000a25a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    a25a:	55                   	push   %rbp
    a25b:	48 89 e5             	mov    %rsp,%rbp
    a25e:	48 83 ec 20          	sub    $0x20,%rsp
    a262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a266:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a26a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    a26e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a273:	75 06                	jne    a27b <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    a275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a279:	eb 3a                	jmp    a2b5 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    a27b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a27f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a286:	00 
    a287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a28b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a28f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a297:	48 89 ce             	mov    %rcx,%rsi
    a29a:	48 89 c7             	mov    %rax,%rdi
    a29d:	e8 63 01 00 00       	call   a405 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    a2a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a2a6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a2ad:	00 
    a2ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2b2:	48 01 d0             	add    %rdx,%rax
    }
    a2b5:	c9                   	leave
    a2b6:	c3                   	ret

000000000000a2b7 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a2b7:	55                   	push   %rbp
    a2b8:	48 89 e5             	mov    %rsp,%rbp
    a2bb:	48 83 ec 20          	sub    $0x20,%rsp
    a2bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a2cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a2cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a2d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d7:	48 89 ce             	mov    %rcx,%rsi
    a2da:	48 89 c7             	mov    %rax,%rdi
    a2dd:	e8 51 01 00 00       	call   a433 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    a2e2:	90                   	nop
    a2e3:	c9                   	leave
    a2e4:	c3                   	ret

000000000000a2e5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a2e5:	55                   	push   %rbp
    a2e6:	48 89 e5             	mov    %rsp,%rbp
    a2e9:	48 83 ec 20          	sub    $0x20,%rsp
    a2ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a2f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a2f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a2fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a305:	48 89 ce             	mov    %rcx,%rsi
    a308:	48 89 c7             	mov    %rax,%rdi
    a30b:	e8 9b 01 00 00       	call   a4ab <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    a310:	90                   	nop
    a311:	c9                   	leave
    a312:	c3                   	ret

000000000000a313 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a313:	55                   	push   %rbp
    a314:	48 89 e5             	mov    %rsp,%rbp
    a317:	48 83 ec 20          	sub    $0x20,%rsp
    a31b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a31f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a323:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a327:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a32b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a32f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a333:	48 89 ce             	mov    %rcx,%rsi
    a336:	48 89 c7             	mov    %rax,%rdi
    a339:	e8 e5 01 00 00       	call   a523 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    a33e:	90                   	nop
    a33f:	c9                   	leave
    a340:	c3                   	ret

000000000000a341 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a341:	55                   	push   %rbp
    a342:	48 89 e5             	mov    %rsp,%rbp
    a345:	48 83 ec 20          	sub    $0x20,%rsp
    a349:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a34d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a351:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a355:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a359:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a35d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a361:	48 89 ce             	mov    %rcx,%rsi
    a364:	48 89 c7             	mov    %rax,%rdi
    a367:	e8 f2 01 00 00       	call   a55e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    a36c:	90                   	nop
    a36d:	c9                   	leave
    a36e:	c3                   	ret

000000000000a36f <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a36f:	55                   	push   %rbp
    a370:	48 89 e5             	mov    %rsp,%rbp
    a373:	48 83 ec 20          	sub    $0x20,%rsp
    a377:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a37b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a37f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a383:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a387:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a38b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a38f:	48 89 ce             	mov    %rcx,%rsi
    a392:	48 89 c7             	mov    %rax,%rdi
    a395:	e8 ff 01 00 00       	call   a599 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    a39a:	90                   	nop
    a39b:	c9                   	leave
    a39c:	c3                   	ret
    a39d:	90                   	nop

000000000000a39e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    a39e:	55                   	push   %rbp
    a39f:	48 89 e5             	mov    %rsp,%rbp
    a3a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3a6:	90                   	nop
    a3a7:	5d                   	pop    %rbp
    a3a8:	c3                   	ret

000000000000a3a9 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a3a9:	55                   	push   %rbp
    a3aa:	48 89 e5             	mov    %rsp,%rbp
    a3ad:	48 83 ec 20          	sub    $0x20,%rsp
    a3b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a3bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3c9:	48 89 ce             	mov    %rcx,%rsi
    a3cc:	48 89 c7             	mov    %rax,%rdi
    a3cf:	e8 08 02 00 00       	call   a5dc <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    a3d4:	90                   	nop
    a3d5:	c9                   	leave
    a3d6:	c3                   	ret

000000000000a3d7 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a3d7:	55                   	push   %rbp
    a3d8:	48 89 e5             	mov    %rsp,%rbp
    a3db:	48 83 ec 20          	sub    $0x20,%rsp
    a3df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a3eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3f7:	48 89 ce             	mov    %rcx,%rsi
    a3fa:	48 89 c7             	mov    %rax,%rdi
    a3fd:	e8 0d 02 00 00       	call   a60f <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    a402:	90                   	nop
    a403:	c9                   	leave
    a404:	c3                   	ret

000000000000a405 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    a405:	55                   	push   %rbp
    a406:	48 89 e5             	mov    %rsp,%rbp
    a409:	48 83 ec 20          	sub    $0x20,%rsp
    a40d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a411:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a415:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    a419:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a41d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a425:	48 89 ce             	mov    %rcx,%rsi
    a428:	48 89 c7             	mov    %rax,%rdi
    a42b:	e8 10 02 00 00       	call   a640 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    a430:	90                   	nop
    a431:	c9                   	leave
    a432:	c3                   	ret

000000000000a433 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a433:	55                   	push   %rbp
    a434:	48 89 e5             	mov    %rsp,%rbp
    a437:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a43b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a43f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    a443:	eb 58                	jmp    a49d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    a445:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a449:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a44d:	b9 08 02 00 00       	mov    $0x208,%ecx
    a452:	48 8b 32             	mov    (%rdx),%rsi
    a455:	48 89 30             	mov    %rsi,(%rax)
    a458:	89 ce                	mov    %ecx,%esi
    a45a:	48 01 c6             	add    %rax,%rsi
    a45d:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    a461:	89 ce                	mov    %ecx,%esi
    a463:	48 01 d6             	add    %rdx,%rsi
    a466:	48 83 c6 08          	add    $0x8,%rsi
    a46a:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    a46e:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    a472:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a476:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a47a:	48 29 f8             	sub    %rdi,%rax
    a47d:	48 29 c2             	sub    %rax,%rdx
    a480:	01 c1                	add    %eax,%ecx
    a482:	83 e1 f8             	and    $0xfffffff8,%ecx
    a485:	89 c8                	mov    %ecx,%eax
    a487:	c1 e8 03             	shr    $0x3,%eax
    a48a:	89 c0                	mov    %eax,%eax
    a48c:	48 89 d6             	mov    %rdx,%rsi
    a48f:	48 89 c1             	mov    %rax,%rcx
    a492:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    a495:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    a49c:	00 
    a49d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a1:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a4a5:	75 9e                	jne    a445 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    a4a7:	90                   	nop
    a4a8:	90                   	nop
    a4a9:	5d                   	pop    %rbp
    a4aa:	c3                   	ret

000000000000a4ab <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a4ab:	55                   	push   %rbp
    a4ac:	48 89 e5             	mov    %rsp,%rbp
    a4af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    a4bb:	eb 58                	jmp    a515 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    a4bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4c5:	b9 04 01 00 00       	mov    $0x104,%ecx
    a4ca:	48 8b 32             	mov    (%rdx),%rsi
    a4cd:	48 89 30             	mov    %rsi,(%rax)
    a4d0:	89 ce                	mov    %ecx,%esi
    a4d2:	48 01 c6             	add    %rax,%rsi
    a4d5:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    a4d9:	89 ce                	mov    %ecx,%esi
    a4db:	48 01 d6             	add    %rdx,%rsi
    a4de:	48 83 c6 08          	add    $0x8,%rsi
    a4e2:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    a4e6:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    a4ea:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a4ee:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    a4f2:	48 29 f8             	sub    %rdi,%rax
    a4f5:	48 29 c2             	sub    %rax,%rdx
    a4f8:	01 c1                	add    %eax,%ecx
    a4fa:	83 e1 f8             	and    $0xfffffff8,%ecx
    a4fd:	89 c8                	mov    %ecx,%eax
    a4ff:	c1 e8 03             	shr    $0x3,%eax
    a502:	89 c0                	mov    %eax,%eax
    a504:	48 89 d6             	mov    %rdx,%rsi
    a507:	48 89 c1             	mov    %rax,%rcx
    a50a:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    a50d:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    a514:	00 
    a515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a519:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a51d:	75 9e                	jne    a4bd <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    a51f:	90                   	nop
    a520:	90                   	nop
    a521:	5d                   	pop    %rbp
    a522:	c3                   	ret

000000000000a523 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a523:	55                   	push   %rbp
    a524:	48 89 e5             	mov    %rsp,%rbp
    a527:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a52b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a52f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    a533:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a537:	48 8b 00             	mov    (%rax),%rax
    a53a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    a53e:	eb 10                	jmp    a550 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    a540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a544:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a548:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    a54b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    a550:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a554:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    a558:	75 e6                	jne    a540 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    a55a:	90                   	nop
    a55b:	90                   	nop
    a55c:	5d                   	pop    %rbp
    a55d:	c3                   	ret

000000000000a55e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a55e:	55                   	push   %rbp
    a55f:	48 89 e5             	mov    %rsp,%rbp
    a562:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a566:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a56a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    a56e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a572:	48 8b 00             	mov    (%rax),%rax
    a575:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    a579:	eb 10                	jmp    a58b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    a57b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a57f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a583:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    a586:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    a58b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a58f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    a593:	75 e6                	jne    a57b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    a595:	90                   	nop
    a596:	90                   	nop
    a597:	5d                   	pop    %rbp
    a598:	c3                   	ret

000000000000a599 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a599:	55                   	push   %rbp
    a59a:	48 89 e5             	mov    %rsp,%rbp
    a59d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    a5a9:	eb 23                	jmp    a5ce <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    a5ab:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a5af:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    a5b3:	48 8b 06             	mov    (%rsi),%rax
    a5b6:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    a5ba:	48 89 01             	mov    %rax,(%rcx)
    a5bd:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    a5c1:	48 8b 46 10          	mov    0x10(%rsi),%rax
    a5c5:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    a5c9:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    a5ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a5d6:	75 d3                	jne    a5ab <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    a5d8:	90                   	nop
    a5d9:	90                   	nop
    a5da:	5d                   	pop    %rbp
    a5db:	c3                   	ret

000000000000a5dc <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a5dc:	55                   	push   %rbp
    a5dd:	48 89 e5             	mov    %rsp,%rbp
    a5e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    a5ec:	eb 13                	jmp    a601 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    a5ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a5f6:	48 8b 12             	mov    (%rdx),%rdx
    a5f9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    a5fc:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    a601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a605:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a609:	75 e3                	jne    a5ee <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    a60b:	90                   	nop
    a60c:	90                   	nop
    a60d:	5d                   	pop    %rbp
    a60e:	c3                   	ret

000000000000a60f <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a60f:	55                   	push   %rbp
    a610:	48 89 e5             	mov    %rsp,%rbp
    a613:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a617:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a61b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    a61f:	eb 11                	jmp    a632 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    a621:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a625:	8b 10                	mov    (%rax),%edx
    a627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a62b:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    a62d:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    a632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a636:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a63a:	75 e5                	jne    a621 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    a63c:	90                   	nop
    a63d:	90                   	nop
    a63e:	5d                   	pop    %rbp
    a63f:	c3                   	ret

000000000000a640 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    a640:	55                   	push   %rbp
    a641:	48 89 e5             	mov    %rsp,%rbp
    a644:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a648:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a64c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    a650:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a654:	48 8b 00             	mov    (%rax),%rax
    a657:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    a65b:	eb 10                	jmp    a66d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    a65d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a661:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a665:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    a668:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    a66d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a671:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    a675:	75 e6                	jne    a65d <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    a677:	90                   	nop
    a678:	90                   	nop
    a679:	5d                   	pop    %rbp
    a67a:	c3                   	ret

000000000000a67b <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    a67b:	55                   	push   %rbp
    a67c:	48 89 e5             	mov    %rsp,%rbp
    a67f:	53                   	push   %rbx
    a680:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    a684:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    a688:	be 00 00 00 00       	mov    $0x0,%esi
    a68d:	48 89 c7             	mov    %rax,%rdi
    a690:	e8 4b 8d ff ff       	call   33e0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    a695:	8b 45 c8             	mov    -0x38(%rbp),%eax
    a698:	89 c3                	mov    %eax,%ebx
    a69a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a69e:	48 89 c7             	mov    %rax,%rdi
    a6a1:	e8 ea b6 ff ff       	call   5d90 <_ZNSaI17VkLayerPropertiesEC1Ev>
    a6a6:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    a6aa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a6ae:	48 89 de             	mov    %rbx,%rsi
    a6b1:	48 89 c7             	mov    %rax,%rdi
    a6b4:	e8 0f b7 ff ff       	call   5dc8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    a6b9:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a6bd:	48 89 c7             	mov    %rax,%rdi
    a6c0:	e8 e7 b6 ff ff       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    a6c5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a6c9:	48 89 c7             	mov    %rax,%rdi
    a6cc:	e8 b1 b7 ff ff       	call   5e82 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    a6d1:	48 89 c2             	mov    %rax,%rdx
    a6d4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    a6d8:	48 89 d6             	mov    %rdx,%rsi
    a6db:	48 89 c7             	mov    %rax,%rdi
    a6de:	e8 fd 8c ff ff       	call   33e0 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    a6e3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a6e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    a6eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6ef:	48 89 c7             	mov    %rax,%rdi
    a6f2:	e8 63 04 00 00       	call   ab5a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    a6f7:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    a6fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6ff:	48 89 c7             	mov    %rax,%rdi
    a702:	e8 79 04 00 00       	call   ab80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    a707:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    a70b:	eb 5b                	jmp    a768 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    a70d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a711:	48 89 c7             	mov    %rax,%rdi
    a714:	e8 ef 04 00 00       	call   ac08 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    a719:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    a71d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a721:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    a725:	48 89 d6             	mov    %rdx,%rsi
    a728:	48 89 c7             	mov    %rax,%rdi
    a72b:	e8 f8 03 00 00       	call   ab28 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    a730:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a734:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a738:	48 8b 3d 61 55 01 00 	mov    0x15561(%rip),%rdi        # 1fca0 <_ZN3vkh19validationLayerNameE>
    a73f:	48 8b 35 62 55 01 00 	mov    0x15562(%rip),%rsi        # 1fca8 <_ZN3vkh19validationLayerNameE+0x8>
    a746:	48 89 d1             	mov    %rdx,%rcx
    a749:	48 89 c2             	mov    %rax,%rdx
    a74c:	e8 da 04 00 00       	call   ac2b <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    a751:	84 c0                	test   %al,%al
    a753:	74 07                	je     a75c <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    a755:	bb 01 00 00 00       	mov    $0x1,%ebx
    a75a:	eb 28                	jmp    a784 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    a75c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a760:	48 89 c7             	mov    %rax,%rdi
    a763:	e8 7c 04 00 00       	call   abe4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    a768:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    a76c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    a770:	48 89 d6             	mov    %rdx,%rsi
    a773:	48 89 c7             	mov    %rax,%rdi
    a776:	e8 2e 04 00 00       	call   aba9 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    a77b:	84 c0                	test   %al,%al
    a77d:	75 8e                	jne    a70d <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    a77f:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    a784:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a788:	48 89 c7             	mov    %rax,%rdi
    a78b:	e8 ae b6 ff ff       	call   5e3e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    a790:	89 d8                	mov    %ebx,%eax
    a792:	eb 34                	jmp    a7c8 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    a794:	48 89 c3             	mov    %rax,%rbx
    a797:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    a79b:	48 89 c7             	mov    %rax,%rdi
    a79e:	e8 09 b6 ff ff       	call   5dac <_ZNSaI17VkLayerPropertiesED1Ev>
    a7a3:	48 89 d8             	mov    %rbx,%rax
    a7a6:	48 89 c7             	mov    %rax,%rdi
    a7a9:	e8 22 8e ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    a7ae:	48 89 c3             	mov    %rax,%rbx
    a7b1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    a7b5:	48 89 c7             	mov    %rax,%rdi
    a7b8:	e8 81 b6 ff ff       	call   5e3e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    a7bd:	48 89 d8             	mov    %rbx,%rax
    a7c0:	48 89 c7             	mov    %rax,%rdi
    a7c3:	e8 08 8e ff ff       	call   35d0 <_Unwind_Resume@plt>
    a7c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a7cc:	c9                   	leave
    a7cd:	c3                   	ret

000000000000a7ce <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    a7ce:	55                   	push   %rbp
    a7cf:	48 89 e5             	mov    %rsp,%rbp
    a7d2:	48 83 ec 20          	sub    $0x20,%rsp
    a7d6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    a7d9:	89 75 f8             	mov    %esi,-0x8(%rbp)
    a7dc:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    a7e0:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    a7e4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    a7e7:	83 f8 01             	cmp    $0x1,%eax
    a7ea:	7e 3c                	jle    a828 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    a7ec:	be 0a 00 00 00       	mov    $0xa,%esi
    a7f1:	48 8d 05 68 5c 01 00 	lea    0x15c68(%rip),%rax        # 20460 <_ZSt4cerr@GLIBCXX_3.4>
    a7f8:	48 89 c7             	mov    %rax,%rdi
    a7fb:	e8 00 8c ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    a800:	48 89 c2             	mov    %rax,%rdx
    a803:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a807:	48 8b 40 28          	mov    0x28(%rax),%rax
    a80b:	48 89 c6             	mov    %rax,%rsi
    a80e:	48 89 d7             	mov    %rdx,%rdi
    a811:	e8 da 8a ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    a816:	48 8b 15 7b 57 01 00 	mov    0x1577b(%rip),%rdx        # 1ff98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    a81d:	48 89 d6             	mov    %rdx,%rsi
    a820:	48 89 c7             	mov    %rax,%rdi
    a823:	e8 38 8b ff ff       	call   3360 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    a828:	b8 00 00 00 00       	mov    $0x0,%eax
}
    a82d:	c9                   	leave
    a82e:	c3                   	ret

000000000000a82f <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    a82f:	55                   	push   %rbp
    a830:	48 89 e5             	mov    %rsp,%rbp
    a833:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    a837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a83b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a83f:	0f 11 00             	movups %xmm0,(%rax)
    a842:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    a846:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    a84a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a84e:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    a854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a858:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    a85f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a863:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    a86a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a86e:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # a7ce <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    a875:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    a879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a87d:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    a884:	00 
}
    a885:	90                   	nop
    a886:	5d                   	pop    %rbp
    a887:	c3                   	ret

000000000000a888 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    a888:	55                   	push   %rbp
    a889:	48 89 e5             	mov    %rsp,%rbp
    a88c:	48 83 ec 30          	sub    $0x30,%rsp
    a890:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a894:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a898:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a89c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    a8a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8a4:	48 8d 15 9d 9d 00 00 	lea    0x9d9d(%rip),%rdx        # 14648 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    a8ab:	48 89 d6             	mov    %rdx,%rsi
    a8ae:	48 89 c7             	mov    %rax,%rdi
    a8b1:	e8 1a 8a ff ff       	call   32d0 <vkGetInstanceProcAddr@plt>
    a8b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    a8ba:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a8bf:	75 07                	jne    a8c8 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    a8c1:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    a8c6:	eb 1b                	jmp    a8e3 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    a8c8:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    a8cc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a8d0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a8d4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    a8d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8dc:	48 89 c7             	mov    %rax,%rdi
    a8df:	41 ff d0             	call   *%r8
    a8e2:	90                   	nop
}
    a8e3:	c9                   	leave
    a8e4:	c3                   	ret

000000000000a8e5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    a8e5:	55                   	push   %rbp
    a8e6:	48 89 e5             	mov    %rsp,%rbp
    a8e9:	41 54                	push   %r12
    a8eb:	53                   	push   %rbx
    a8ec:	48 83 ec 50          	sub    $0x50,%rsp
    a8f0:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    a8f4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    a8f8:	48 89 c7             	mov    %rax,%rdi
    a8fb:	e8 2f ff ff ff       	call   a82f <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    a900:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    a907:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    a908:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    a90c:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    a910:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a914:	48 89 d1             	mov    %rdx,%rcx
    a917:	ba 00 00 00 00       	mov    $0x0,%edx
    a91c:	48 89 c7             	mov    %rax,%rdi
    a91f:	e8 64 ff ff ff       	call   a888 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    a924:	85 c0                	test   %eax,%eax
    a926:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    a929:	84 c0                	test   %al,%al
    a92b:	74 3b                	je     a968 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    a92d:	bf 10 00 00 00       	mov    $0x10,%edi
    a932:	e8 09 88 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    a937:	48 89 c3             	mov    %rax,%rbx
    a93a:	48 8d 05 27 9d 00 00 	lea    0x9d27(%rip),%rax        # 14668 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    a941:	48 89 c6             	mov    %rax,%rsi
    a944:	48 89 df             	mov    %rbx,%rdi
    a947:	e8 94 87 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    a94c:	48 8b 05 55 56 01 00 	mov    0x15655(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a953:	48 89 c2             	mov    %rax,%rdx
    a956:	48 8d 05 e3 53 01 00 	lea    0x153e3(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a95d:	48 89 c6             	mov    %rax,%rsi
    a960:	48 89 df             	mov    %rbx,%rdi
    a963:	e8 18 8c ff ff       	call   3580 <__cxa_throw@plt>
  }
  return debugMessenger;
    a968:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a96c:	eb 16                	jmp    a984 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    a96e:	49 89 c4             	mov    %rax,%r12
    a971:	48 89 df             	mov    %rbx,%rdi
    a974:	e8 77 88 ff ff       	call   31f0 <__cxa_free_exception@plt>
    a979:	4c 89 e0             	mov    %r12,%rax
    a97c:	48 89 c7             	mov    %rax,%rdi
    a97f:	e8 4c 8c ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    a984:	48 83 c4 50          	add    $0x50,%rsp
    a988:	5b                   	pop    %rbx
    a989:	41 5c                	pop    %r12
    a98b:	5d                   	pop    %rbp
    a98c:	c3                   	ret

000000000000a98d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    a98d:	55                   	push   %rbp
    a98e:	48 89 e5             	mov    %rsp,%rbp
    a991:	48 83 ec 30          	sub    $0x30,%rsp
    a995:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a999:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a99d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    a9a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9a5:	48 8d 15 dc 9c 00 00 	lea    0x9cdc(%rip),%rdx        # 14688 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    a9ac:	48 89 d6             	mov    %rdx,%rsi
    a9af:	48 89 c7             	mov    %rax,%rdi
    a9b2:	e8 19 89 ff ff       	call   32d0 <vkGetInstanceProcAddr@plt>
    a9b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    a9bb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a9c0:	74 19                	je     a9db <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    a9c2:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    a9c6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a9ca:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a9ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9d2:	48 89 ce             	mov    %rcx,%rsi
    a9d5:	48 89 c7             	mov    %rax,%rdi
    a9d8:	41 ff d0             	call   *%r8
  }
}
    a9db:	90                   	nop
    a9dc:	c9                   	leave
    a9dd:	c3                   	ret

000000000000a9de <_Z41__static_initialization_and_destruction_0ii>:

    a9de:	55                   	push   %rbp
    a9df:	48 89 e5             	mov    %rsp,%rbp
    a9e2:	48 83 ec 10          	sub    $0x10,%rsp
    a9e6:	89 7d fc             	mov    %edi,-0x4(%rbp)
    a9e9:	89 75 f8             	mov    %esi,-0x8(%rbp)
    a9ec:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    a9f0:	75 3b                	jne    aa2d <_Z41__static_initialization_and_destruction_0ii+0x4f>
    a9f2:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    a9f9:	75 32                	jne    aa2d <_Z41__static_initialization_and_destruction_0ii+0x4f>
    a9fb:	48 8d 05 70 5b 01 00 	lea    0x15b70(%rip),%rax        # 20572 <_ZStL8__ioinit>
    aa02:	48 89 c7             	mov    %rax,%rdi
    aa05:	e8 06 8b ff ff       	call   3510 <_ZNSt8ios_base4InitC1Ev@plt>
    aa0a:	48 8d 05 0f 59 01 00 	lea    0x1590f(%rip),%rax        # 20320 <__dso_handle>
    aa11:	48 89 c2             	mov    %rax,%rdx
    aa14:	48 8d 05 57 5b 01 00 	lea    0x15b57(%rip),%rax        # 20572 <_ZStL8__ioinit>
    aa1b:	48 89 c6             	mov    %rax,%rsi
    aa1e:	48 8b 05 a3 55 01 00 	mov    0x155a3(%rip),%rax        # 1ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    aa25:	48 89 c7             	mov    %rax,%rdi
    aa28:	e8 63 88 ff ff       	call   3290 <__cxa_atexit@plt>
    aa2d:	90                   	nop
    aa2e:	c9                   	leave
    aa2f:	c3                   	ret

000000000000aa30 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    aa30:	55                   	push   %rbp
    aa31:	48 89 e5             	mov    %rsp,%rbp
    aa34:	be ff ff 00 00       	mov    $0xffff,%esi
    aa39:	bf 01 00 00 00       	mov    $0x1,%edi
    aa3e:	e8 9b ff ff ff       	call   a9de <_Z41__static_initialization_and_destruction_0ii>
    aa43:	5d                   	pop    %rbp
    aa44:	c3                   	ret

000000000000aa45 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    aa45:	55                   	push   %rbp
    aa46:	48 89 e5             	mov    %rsp,%rbp
    aa49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    aa51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa55:	0f b6 00             	movzbl (%rax),%eax
    aa58:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    aa5a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa5e:	0f b6 00             	movzbl (%rax),%eax
    aa61:	38 c2                	cmp    %al,%dl
    aa63:	0f 92 c0             	setb   %al
      }
    aa66:	5d                   	pop    %rbp
    aa67:	c3                   	ret

000000000000aa68 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    aa68:	55                   	push   %rbp
    aa69:	48 89 e5             	mov    %rsp,%rbp
    aa6c:	48 83 ec 30          	sub    $0x30,%rsp
    aa70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aa78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    aa7c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    aa81:	75 0a                	jne    aa8d <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    aa83:	b8 00 00 00 00       	mov    $0x0,%eax
    aa88:	e9 99 00 00 00       	jmp    ab26 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    aa8d:	e8 cc 8e ff ff       	call   395e <_ZSt23__is_constant_evaluatedv>
    aa92:	84 c0                	test   %al,%al
    aa94:	74 78                	je     ab0e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    aa96:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    aa9d:	00 
    aa9e:	eb 5d                	jmp    aafd <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    aaa0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aaa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaa8:	48 01 c2             	add    %rax,%rdx
    aaab:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aaaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aab3:	48 01 c8             	add    %rcx,%rax
    aab6:	48 89 d6             	mov    %rdx,%rsi
    aab9:	48 89 c7             	mov    %rax,%rdi
    aabc:	e8 84 ff ff ff       	call   aa45 <_ZNSt11char_traitsIcE2ltERKcS2_>
    aac1:	84 c0                	test   %al,%al
    aac3:	74 07                	je     aacc <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    aac5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    aaca:	eb 5a                	jmp    ab26 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    aacc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aad4:	48 01 c2             	add    %rax,%rdx
    aad7:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    aadb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aadf:	48 01 c8             	add    %rcx,%rax
    aae2:	48 89 d6             	mov    %rdx,%rsi
    aae5:	48 89 c7             	mov    %rax,%rdi
    aae8:	e8 58 ff ff ff       	call   aa45 <_ZNSt11char_traitsIcE2ltERKcS2_>
    aaed:	84 c0                	test   %al,%al
    aaef:	74 07                	je     aaf8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    aaf1:	b8 01 00 00 00       	mov    $0x1,%eax
    aaf6:	eb 2e                	jmp    ab26 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    aaf8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    aafd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab01:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ab05:	72 99                	jb     aaa0 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    ab07:	b8 00 00 00 00       	mov    $0x0,%eax
    ab0c:	eb 18                	jmp    ab26 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    ab0e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ab12:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ab16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab1a:	48 89 ce             	mov    %rcx,%rsi
    ab1d:	48 89 c7             	mov    %rax,%rdi
    ab20:	e8 0b 86 ff ff       	call   3130 <memcmp@plt>
    ab25:	90                   	nop
      }
    ab26:	c9                   	leave
    ab27:	c3                   	ret

000000000000ab28 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    ab28:	55                   	push   %rbp
    ab29:	48 89 e5             	mov    %rsp,%rbp
    ab2c:	48 83 ec 10          	sub    $0x10,%rsp
    ab30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    ab38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab3c:	48 89 c7             	mov    %rax,%rdi
    ab3f:	e8 25 8e ff ff       	call   3969 <_ZNSt11char_traitsIcE6lengthEPKc>
    ab44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ab48:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    ab4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab4f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab53:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    ab57:	90                   	nop
    ab58:	c9                   	leave
    ab59:	c3                   	ret

000000000000ab5a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ab5a:	55                   	push   %rbp
    ab5b:	48 89 e5             	mov    %rsp,%rbp
    ab5e:	48 83 ec 20          	sub    $0x20,%rsp
    ab62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    ab66:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab6a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ab6e:	48 89 d6             	mov    %rdx,%rsi
    ab71:	48 89 c7             	mov    %rax,%rdi
    ab74:	e8 27 01 00 00       	call   aca0 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ab79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab7d:	c9                   	leave
    ab7e:	c3                   	ret
    ab7f:	90                   	nop

000000000000ab80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ab80:	55                   	push   %rbp
    ab81:	48 89 e5             	mov    %rsp,%rbp
    ab84:	48 83 ec 20          	sub    $0x20,%rsp
    ab88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ab8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab90:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ab94:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ab98:	48 89 d6             	mov    %rdx,%rsi
    ab9b:	48 89 c7             	mov    %rax,%rdi
    ab9e:	e8 fd 00 00 00       	call   aca0 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    aba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba7:	c9                   	leave
    aba8:	c3                   	ret

000000000000aba9 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    aba9:	55                   	push   %rbp
    abaa:	48 89 e5             	mov    %rsp,%rbp
    abad:	53                   	push   %rbx
    abae:	48 83 ec 18          	sub    $0x18,%rsp
    abb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abb6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    abba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abbe:	48 89 c7             	mov    %rax,%rdi
    abc1:	e8 f8 00 00 00       	call   acbe <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    abc6:	48 8b 18             	mov    (%rax),%rbx
    abc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    abcd:	48 89 c7             	mov    %rax,%rdi
    abd0:	e8 e9 00 00 00       	call   acbe <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    abd5:	48 8b 00             	mov    (%rax),%rax
    abd8:	48 39 c3             	cmp    %rax,%rbx
    abdb:	0f 95 c0             	setne  %al
    abde:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    abe2:	c9                   	leave
    abe3:	c3                   	ret

000000000000abe4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    abe4:	55                   	push   %rbp
    abe5:	48 89 e5             	mov    %rsp,%rbp
    abe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    abec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abf0:	48 8b 00             	mov    (%rax),%rax
    abf3:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    abfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfe:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    ac01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ac05:	5d                   	pop    %rbp
    ac06:	c3                   	ret
    ac07:	90                   	nop

000000000000ac08 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ac08:	55                   	push   %rbp
    ac09:	48 89 e5             	mov    %rsp,%rbp
    ac0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    ac10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac14:	48 8b 00             	mov    (%rax),%rax
    ac17:	5d                   	pop    %rbp
    ac18:	c3                   	ret
    ac19:	90                   	nop

000000000000ac1a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    ac1a:	55                   	push   %rbp
    ac1b:	48 89 e5             	mov    %rsp,%rbp
    ac1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    ac22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac26:	48 8b 00             	mov    (%rax),%rax
    ac29:	5d                   	pop    %rbp
    ac2a:	c3                   	ret

000000000000ac2b <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    ac2b:	55                   	push   %rbp
    ac2c:	48 89 e5             	mov    %rsp,%rbp
    ac2f:	53                   	push   %rbx
    ac30:	48 83 ec 28          	sub    $0x28,%rsp
    ac34:	48 89 f0             	mov    %rsi,%rax
    ac37:	49 89 f8             	mov    %rdi,%r8
    ac3a:	4c 89 c6             	mov    %r8,%rsi
    ac3d:	4c 89 cf             	mov    %r9,%rdi
    ac40:	48 89 c7             	mov    %rax,%rdi
    ac43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ac47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac4b:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    ac4f:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    ac53:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ac57:	48 89 c7             	mov    %rax,%rdi
    ac5a:	e8 bb ff ff ff       	call   ac1a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    ac5f:	48 89 c3             	mov    %rax,%rbx
    ac62:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ac66:	48 89 c7             	mov    %rax,%rdi
    ac69:	e8 ac ff ff ff       	call   ac1a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    ac6e:	48 39 c3             	cmp    %rax,%rbx
    ac71:	75 22                	jne    ac95 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    ac73:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    ac77:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ac7b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ac7f:	48 89 ce             	mov    %rcx,%rsi
    ac82:	48 89 c7             	mov    %rax,%rdi
    ac85:	e8 42 00 00 00       	call   accc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    ac8a:	85 c0                	test   %eax,%eax
    ac8c:	75 07                	jne    ac95 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    ac8e:	b8 01 00 00 00       	mov    $0x1,%eax
    ac93:	eb 05                	jmp    ac9a <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    ac95:	b8 00 00 00 00       	mov    $0x0,%eax
    ac9a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac9e:	c9                   	leave
    ac9f:	c3                   	ret

000000000000aca0 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    aca0:	55                   	push   %rbp
    aca1:	48 89 e5             	mov    %rsp,%rbp
    aca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aca8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    acac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    acb0:	48 8b 10             	mov    (%rax),%rdx
    acb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb7:	48 89 10             	mov    %rdx,(%rax)
    acba:	90                   	nop
    acbb:	5d                   	pop    %rbp
    acbc:	c3                   	ret
    acbd:	90                   	nop

000000000000acbe <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    acbe:	55                   	push   %rbp
    acbf:	48 89 e5             	mov    %rsp,%rbp
    acc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    acc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acca:	5d                   	pop    %rbp
    accb:	c3                   	ret

000000000000accc <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    accc:	55                   	push   %rbp
    accd:	48 89 e5             	mov    %rsp,%rbp
    acd0:	48 83 ec 30          	sub    $0x30,%rsp
    acd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    acd8:	48 89 d1             	mov    %rdx,%rcx
    acdb:	48 89 f0             	mov    %rsi,%rax
    acde:	48 89 fa             	mov    %rdi,%rdx
    ace1:	48 89 ca             	mov    %rcx,%rdx
    ace4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    ace8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    acec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acf0:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    acf4:	48 89 d6             	mov    %rdx,%rsi
    acf7:	48 89 c7             	mov    %rax,%rdi
    acfa:	e8 0e 95 ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
    acff:	48 8b 00             	mov    (%rax),%rax
    ad02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    ad06:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    ad0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad0e:	48 8b 40 08          	mov    0x8(%rax),%rax
    ad12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad16:	48 89 ce             	mov    %rcx,%rsi
    ad19:	48 89 c7             	mov    %rax,%rdi
    ad1c:	e8 47 fd ff ff       	call   aa68 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    ad21:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    ad24:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    ad28:	75 19                	jne    ad43 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    ad2a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ad2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad32:	48 8b 00             	mov    (%rax),%rax
    ad35:	48 89 d6             	mov    %rdx,%rsi
    ad38:	48 89 c7             	mov    %rax,%rdi
    ad3b:	e8 08 00 00 00       	call   ad48 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    ad40:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    ad43:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    ad46:	c9                   	leave
    ad47:	c3                   	ret

000000000000ad48 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    ad48:	55                   	push   %rbp
    ad49:	48 89 e5             	mov    %rsp,%rbp
    ad4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad50:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    ad54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad58:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    ad5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    ad60:	b8 00 00 00 80       	mov    $0x80000000,%eax
    ad65:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    ad69:	7c 07                	jl     ad72 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    ad6b:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    ad70:	eb 1b                	jmp    ad8d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    ad72:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    ad79:	ff ff ff 
    ad7c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    ad80:	7f 07                	jg     ad89 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    ad82:	b8 00 00 00 80       	mov    $0x80000000,%eax
    ad87:	eb 04                	jmp    ad8d <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    ad89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ad8d:	5d                   	pop    %rbp
    ad8e:	c3                   	ret

000000000000ad8f <_Z41__static_initialization_and_destruction_0ii>:
 */
void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator);

} /* namespace vkh */
    ad8f:	55                   	push   %rbp
    ad90:	48 89 e5             	mov    %rsp,%rbp
    ad93:	48 83 ec 10          	sub    $0x10,%rsp
    ad97:	89 7d fc             	mov    %edi,-0x4(%rbp)
    ad9a:	89 75 f8             	mov    %esi,-0x8(%rbp)
    ad9d:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    ada1:	75 3b                	jne    adde <_Z41__static_initialization_and_destruction_0ii+0x4f>
    ada3:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    adaa:	75 32                	jne    adde <_Z41__static_initialization_and_destruction_0ii+0x4f>
    adac:	48 8d 05 c0 57 01 00 	lea    0x157c0(%rip),%rax        # 20573 <_ZStL8__ioinit>
    adb3:	48 89 c7             	mov    %rax,%rdi
    adb6:	e8 55 87 ff ff       	call   3510 <_ZNSt8ios_base4InitC1Ev@plt>
    adbb:	48 8d 05 5e 55 01 00 	lea    0x1555e(%rip),%rax        # 20320 <__dso_handle>
    adc2:	48 89 c2             	mov    %rax,%rdx
    adc5:	48 8d 05 a7 57 01 00 	lea    0x157a7(%rip),%rax        # 20573 <_ZStL8__ioinit>
    adcc:	48 89 c6             	mov    %rax,%rsi
    adcf:	48 8b 05 f2 51 01 00 	mov    0x151f2(%rip),%rax        # 1ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    add6:	48 89 c7             	mov    %rax,%rdi
    add9:	e8 b2 84 ff ff       	call   3290 <__cxa_atexit@plt>
    adde:	90                   	nop
    addf:	c9                   	leave
    ade0:	c3                   	ret

000000000000ade1 <_GLOBAL__sub_I_vkh.cpp>:
    ade1:	55                   	push   %rbp
    ade2:	48 89 e5             	mov    %rsp,%rbp
    ade5:	be ff ff 00 00       	mov    $0xffff,%esi
    adea:	bf 01 00 00 00       	mov    $0x1,%edi
    adef:	e8 9b ff ff ff       	call   ad8f <_Z41__static_initialization_and_destruction_0ii>
    adf4:	5d                   	pop    %rbp
    adf5:	c3                   	ret

000000000000adf6 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    adf6:	55                   	push   %rbp
    adf7:	48 89 e5             	mov    %rsp,%rbp
    adfa:	48 83 ec 10          	sub    $0x10,%rsp
    adfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    ae02:	e8 e9 85 ff ff       	call   33f0 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    ae07:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ae0d:	b9 00 00 00 00       	mov    $0x0,%ecx
    ae12:	48 8d 05 97 a4 00 00 	lea    0xa497(%rip),%rax        # 152b0 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    ae19:	48 89 c2             	mov    %rax,%rdx
    ae1c:	be 58 02 00 00       	mov    $0x258,%esi
    ae21:	bf 20 03 00 00       	mov    $0x320,%edi
    ae26:	e8 3a 97 ff ff       	call   4565 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    ae2b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae2f:	48 89 02             	mov    %rax,(%rdx)
}
    ae32:	90                   	nop
    ae33:	c9                   	leave
    ae34:	c3                   	ret
    ae35:	90                   	nop

000000000000ae36 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    ae36:	55                   	push   %rbp
    ae37:	48 89 e5             	mov    %rsp,%rbp
    ae3a:	53                   	push   %rbx
    ae3b:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    ae42:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    ae49:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ae4d:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    ae51:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    ae55:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    ae59:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    ae60:	48 8d 05 49 a4 00 00 	lea    0xa449(%rip),%rax        # 152b0 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    ae67:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    ae6b:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    ae72:	48 8d 05 4a a4 00 00 	lea    0xa44a(%rip),%rax        # 152c3 <_ZN6__pstl9execution2v1L5unseqE+0x14>
    ae79:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    ae7d:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    ae84:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    ae8b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ae8f:	48 89 c7             	mov    %rax,%rdi
    ae92:	e8 17 a1 ff ff       	call   4fae <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    ae97:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ae9b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ae9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aea3:	48 89 c7             	mov    %rax,%rdi
    aea6:	e8 c1 2a 00 00       	call   d96c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    aeab:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    aeb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aeb6:	48 89 c7             	mov    %rax,%rdi
    aeb9:	e8 d4 2a 00 00       	call   d992 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    aebe:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    aec5:	eb 3c                	jmp    af03 <_ZN9VulkanApp14createInstanceEv+0xcd>
    aec7:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    aece:	48 89 c7             	mov    %rax,%rdi
    aed1:	e8 40 2b 00 00       	call   da16 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    aed6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    aeda:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    aee1:	48 8d 50 10          	lea    0x10(%rax),%rdx
    aee5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aee9:	48 89 c6             	mov    %rax,%rsi
    aeec:	48 89 d7             	mov    %rdx,%rdi
    aeef:	e8 34 2b 00 00       	call   da28 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    aef4:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    aefb:	48 89 c7             	mov    %rax,%rdi
    aefe:	e8 f3 2a 00 00       	call   d9f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    af03:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    af0a:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    af11:	48 89 d6             	mov    %rdx,%rsi
    af14:	48 89 c7             	mov    %rax,%rdi
    af17:	e8 9f 2a 00 00       	call   d9bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    af1c:	84 c0                	test   %al,%al
    af1e:	75 a7                	jne    aec7 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    af20:	66 0f ef c0          	pxor   %xmm0,%xmm0
    af24:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    af2b:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    af32:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    af36:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    af3d:	48 89 c7             	mov    %rax,%rdi
    af40:	e8 ea f8 ff ff       	call   a82f <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    af45:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    af4c:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    af4f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    af56:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    af5d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    af61:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    af68:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    af6f:	48 83 c0 28          	add    $0x28,%rax
    af73:	48 89 c7             	mov    %rax,%rdi
    af76:	e8 51 2b 00 00       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    af7b:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    af81:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    af88:	48 83 c0 28          	add    $0x28,%rax
    af8c:	48 89 c7             	mov    %rax,%rdi
    af8f:	e8 5c 2b 00 00       	call   daf0 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    af94:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    af9b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    afa2:	48 83 c0 10          	add    $0x10,%rax
    afa6:	48 89 c7             	mov    %rax,%rdi
    afa9:	e8 1e 2b 00 00       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    afae:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    afb4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    afbb:	48 83 c0 10          	add    $0x10,%rax
    afbf:	48 89 c7             	mov    %rax,%rdi
    afc2:	e8 4d 2b 00 00       	call   db14 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    afc7:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    afce:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    afd5:	be 00 00 00 00       	mov    $0x0,%esi
    afda:	48 89 c7             	mov    %rax,%rdi
    afdd:	e8 d9 95 ff ff       	call   45bb <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    afe2:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    afe9:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    afed:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    aff1:	48 89 c7             	mov    %rax,%rdi
    aff4:	e8 2f 29 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    aff9:	eb 1a                	jmp    b015 <_ZN9VulkanApp14createInstanceEv+0x1df>
    affb:	48 89 c3             	mov    %rax,%rbx
    affe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b002:	48 89 c7             	mov    %rax,%rdi
    b005:	e8 1e 29 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b00a:	48 89 d8             	mov    %rbx,%rax
    b00d:	48 89 c7             	mov    %rax,%rdi
    b010:	e8 bb 85 ff ff       	call   35d0 <_Unwind_Resume@plt>
    b015:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b019:	c9                   	leave
    b01a:	c3                   	ret
    b01b:	90                   	nop

000000000000b01c <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    b01c:	55                   	push   %rbp
    b01d:	48 89 e5             	mov    %rsp,%rbp
    b020:	41 54                	push   %r12
    b022:	53                   	push   %rbx
    b023:	48 83 ec 10          	sub    $0x10,%rsp
    b027:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    b02b:	e8 4b f6 ff ff       	call   a67b <_ZN3vkh27checkValidationLayerSupportEv>
    b030:	0f b6 c0             	movzbl %al,%eax
    b033:	85 c0                	test   %eax,%eax
    b035:	0f 94 c0             	sete   %al
    b038:	84 c0                	test   %al,%al
    b03a:	74 3b                	je     b077 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    b03c:	bf 10 00 00 00       	mov    $0x10,%edi
    b041:	e8 fa 80 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    b046:	48 89 c3             	mov    %rax,%rbx
    b049:	48 8d 05 80 a2 00 00 	lea    0xa280(%rip),%rax        # 152d0 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    b050:	48 89 c6             	mov    %rax,%rsi
    b053:	48 89 df             	mov    %rbx,%rdi
    b056:	e8 85 80 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    b05b:	48 8b 05 46 4f 01 00 	mov    0x14f46(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b062:	48 89 c2             	mov    %rax,%rdx
    b065:	48 8d 05 d4 4c 01 00 	lea    0x14cd4(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b06c:	48 89 c6             	mov    %rax,%rsi
    b06f:	48 89 df             	mov    %rbx,%rdi
    b072:	e8 09 85 ff ff       	call   3580 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    b077:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b07b:	48 8b 40 08          	mov    0x8(%rax),%rax
    b07f:	48 89 c7             	mov    %rax,%rdi
    b082:	e8 5e f8 ff ff       	call   a8e5 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    b087:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b08b:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    b08f:	eb 16                	jmp    b0a7 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    b091:	49 89 c4             	mov    %rax,%r12
    b094:	48 89 df             	mov    %rbx,%rdi
    b097:	e8 54 81 ff ff       	call   31f0 <__cxa_free_exception@plt>
    b09c:	4c 89 e0             	mov    %r12,%rax
    b09f:	48 89 c7             	mov    %rax,%rdi
    b0a2:	e8 29 85 ff ff       	call   35d0 <_Unwind_Resume@plt>
}
    b0a7:	48 83 c4 10          	add    $0x10,%rsp
    b0ab:	5b                   	pop    %rbx
    b0ac:	41 5c                	pop    %r12
    b0ae:	5d                   	pop    %rbp
    b0af:	c3                   	ret

000000000000b0b0 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    b0b0:	55                   	push   %rbp
    b0b1:	48 89 e5             	mov    %rsp,%rbp
    b0b4:	48 83 ec 10          	sub    $0x10,%rsp
    b0b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    b0bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0c0:	48 8b 08             	mov    (%rax),%rcx
    b0c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0c7:	48 8b 40 08          	mov    0x8(%rax),%rax
    b0cb:	ba 00 00 00 00       	mov    $0x0,%edx
    b0d0:	48 89 ce             	mov    %rcx,%rsi
    b0d3:	48 89 c7             	mov    %rax,%rdi
    b0d6:	e8 0b 96 ff ff       	call   46e6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    b0db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b0df:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    b0e3:	90                   	nop
    b0e4:	c9                   	leave
    b0e5:	c3                   	ret

000000000000b0e6 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    b0e6:	55                   	push   %rbp
    b0e7:	48 89 e5             	mov    %rsp,%rbp
    b0ea:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    b0f1:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    b0f8:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    b0ff:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    b106:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    b10d:	48 89 d6             	mov    %rdx,%rsi
    b110:	48 89 c7             	mov    %rax,%rdi
    b113:	e8 63 a1 ff ff       	call   527b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    b118:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    b11e:	83 f8 02             	cmp    $0x2,%eax
    b121:	0f 94 c0             	sete   %al
}
    b124:	c9                   	leave
    b125:	c3                   	ret

000000000000b126 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    b126:	55                   	push   %rbp
    b127:	48 89 e5             	mov    %rsp,%rbp
    b12a:	53                   	push   %rbx
    b12b:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    b132:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    b139:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    b140:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    b147:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b14b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    b152:	48 89 d6             	mov    %rdx,%rsi
    b155:	48 89 c7             	mov    %rax,%rdi
    b158:	e8 47 a2 ff ff       	call   53a4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    b15d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    b161:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    b168:	48 89 d6             	mov    %rdx,%rsi
    b16b:	48 89 c7             	mov    %rax,%rdi
    b16e:	e8 65 a3 ff ff       	call   54d8 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    b173:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b17a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    b17e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b185:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    b18c:	48 89 ce             	mov    %rcx,%rsi
    b18f:	48 89 c7             	mov    %rax,%rdi
    b192:	e8 7a a4 ff ff       	call   5611 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    b197:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    b19e:	00 
    b19f:	e9 c5 00 00 00       	jmp    b269 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    b1a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b1a8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b1ac:	48 89 d6             	mov    %rdx,%rsi
    b1af:	48 89 c7             	mov    %rax,%rdi
    b1b2:	e8 7f b4 ff ff       	call   6636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    b1b7:	48 89 c7             	mov    %rax,%rdi
    b1ba:	e8 a7 29 00 00       	call   db66 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    b1bf:	84 c0                	test   %al,%al
    b1c1:	74 48                	je     b20b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    b1c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b1c7:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    b1cb:	48 89 d6             	mov    %rdx,%rsi
    b1ce:	48 89 c7             	mov    %rax,%rdi
    b1d1:	e8 60 b4 ff ff       	call   6636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    b1d6:	48 89 c7             	mov    %rax,%rdi
    b1d9:	e8 88 29 00 00       	call   db66 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    b1de:	84 c0                	test   %al,%al
    b1e0:	74 29                	je     b20b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    b1e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b1e6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b1ed:	48 89 d6             	mov    %rdx,%rsi
    b1f0:	48 89 c7             	mov    %rax,%rdi
    b1f3:	e8 3e b4 ff ff       	call   6636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    b1f8:	48 89 c7             	mov    %rax,%rdi
    b1fb:	e8 66 29 00 00       	call   db66 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    b200:	84 c0                	test   %al,%al
    b202:	74 07                	je     b20b <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    b204:	b8 01 00 00 00       	mov    $0x1,%eax
    b209:	eb 05                	jmp    b210 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    b20b:	b8 00 00 00 00       	mov    $0x0,%eax
    b210:	84 c0                	test   %al,%al
    b212:	74 50                	je     b264 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    b214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b218:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    b21b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b21f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b223:	48 89 d6             	mov    %rdx,%rsi
    b226:	48 89 c7             	mov    %rax,%rdi
    b229:	e8 08 b4 ff ff       	call   6636 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    b22e:	48 89 c7             	mov    %rax,%rdi
    b231:	e8 4a 29 00 00       	call   db80 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    b236:	48 89 c2             	mov    %rax,%rdx
    b239:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    b23d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b241:	48 89 ce             	mov    %rcx,%rsi
    b244:	48 89 c7             	mov    %rax,%rdi
    b247:	e8 66 29 00 00       	call   dbb2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    b24c:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    b250:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    b257:	48 89 d6             	mov    %rdx,%rsi
    b25a:	48 89 c7             	mov    %rax,%rdi
    b25d:	e8 a6 29 00 00       	call   dc08 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    b262:	eb 2f                	jmp    b293 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    b264:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    b269:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b26d:	48 89 c7             	mov    %rax,%rdi
    b270:	e8 c3 28 00 00       	call   db38 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    b275:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    b279:	0f 92 c0             	setb   %al
    b27c:	84 c0                	test   %al,%al
    b27e:	0f 85 20 ff ff ff    	jne    b1a4 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    b284:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    b28b:	48 89 c7             	mov    %rax,%rdi
    b28e:	e8 01 24 00 00       	call   d694 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    b293:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b29a:	48 89 c7             	mov    %rax,%rdi
    b29d:	e8 94 b2 ff ff       	call   6536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b2a2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    b2a6:	48 89 c7             	mov    %rax,%rdi
    b2a9:	e8 88 b2 ff ff       	call   6536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b2ae:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b2b2:	48 89 c7             	mov    %rax,%rdi
    b2b5:	e8 7c b2 ff ff       	call   6536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b2ba:	eb 3f                	jmp    b2fb <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    b2bc:	48 89 c3             	mov    %rax,%rbx
    b2bf:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b2c6:	48 89 c7             	mov    %rax,%rdi
    b2c9:	e8 68 b2 ff ff       	call   6536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b2ce:	eb 03                	jmp    b2d3 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    b2d0:	48 89 c3             	mov    %rax,%rbx
    b2d3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    b2d7:	48 89 c7             	mov    %rax,%rdi
    b2da:	e8 57 b2 ff ff       	call   6536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b2df:	eb 03                	jmp    b2e4 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    b2e1:	48 89 c3             	mov    %rax,%rbx
    b2e4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b2e8:	48 89 c7             	mov    %rax,%rdi
    b2eb:	e8 46 b2 ff ff       	call   6536 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    b2f0:	48 89 d8             	mov    %rbx,%rax
    b2f3:	48 89 c7             	mov    %rax,%rdi
    b2f6:	e8 d5 82 ff ff       	call   35d0 <_Unwind_Resume@plt>
    b2fb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    b302:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b306:	c9                   	leave
    b307:	c3                   	ret

000000000000b308 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    b308:	55                   	push   %rbp
    b309:	48 89 e5             	mov    %rsp,%rbp
    b30c:	41 54                	push   %r12
    b30e:	53                   	push   %rbx
    b30f:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    b316:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    b31d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b324:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b328:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b32c:	48 89 d6             	mov    %rdx,%rsi
    b32f:	48 89 c7             	mov    %rax,%rdi
    b332:	e8 d5 9d ff ff       	call   510c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    b337:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    b33e:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    b33f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b343:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    b347:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    b34b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b34f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b353:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b357:	48 89 c7             	mov    %rax,%rdi
    b35a:	e8 dd 28 00 00       	call   dc3c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    b35f:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    b366:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b36a:	48 89 c7             	mov    %rax,%rdi
    b36d:	e8 f0 28 00 00       	call   dc62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    b372:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    b379:	e9 dd 00 00 00       	jmp    b45b <_ZN9VulkanApp12createDeviceEv+0x153>
    b37e:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    b385:	48 89 c7             	mov    %rax,%rdi
    b388:	e8 59 29 00 00       	call   dce6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    b38d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    b391:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b395:	48 8b 10             	mov    (%rax),%rdx
    b398:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b39f:	48 89 d6             	mov    %rdx,%rsi
    b3a2:	48 89 c7             	mov    %rax,%rdi
    b3a5:	e8 3c fd ff ff       	call   b0e6 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    b3aa:	84 c0                	test   %al,%al
    b3ac:	74 41                	je     b3ef <_ZN9VulkanApp12createDeviceEv+0xe7>
    b3ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b3b2:	48 8b 10             	mov    (%rax),%rdx
    b3b5:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b3bc:	48 89 d6             	mov    %rdx,%rsi
    b3bf:	48 89 c7             	mov    %rax,%rdi
    b3c2:	e8 f9 02 00 00       	call   b6c0 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    b3c7:	84 c0                	test   %al,%al
    b3c9:	74 24                	je     b3ef <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    b3cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b3cf:	48 8b 10             	mov    (%rax),%rdx
    b3d2:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b3d9:	48 89 d6             	mov    %rdx,%rsi
    b3dc:	48 89 c7             	mov    %rax,%rdi
    b3df:	e8 16 06 00 00       	call   b9fa <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    b3e4:	84 c0                	test   %al,%al
    b3e6:	74 07                	je     b3ef <_ZN9VulkanApp12createDeviceEv+0xe7>
    b3e8:	b8 01 00 00 00       	mov    $0x1,%eax
    b3ed:	eb 05                	jmp    b3f4 <_ZN9VulkanApp12createDeviceEv+0xec>
    b3ef:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    b3f4:	84 c0                	test   %al,%al
    b3f6:	74 54                	je     b44c <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    b3f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b3fc:	48 8b 10             	mov    (%rax),%rdx
    b3ff:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    b406:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    b40d:	48 89 ce             	mov    %rcx,%rsi
    b410:	48 89 c7             	mov    %rax,%rdi
    b413:	e8 0e fd ff ff       	call   b126 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    b418:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    b41f:	48 89 c7             	mov    %rax,%rdi
    b422:	e8 d1 28 00 00       	call   dcf8 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    b427:	84 c0                	test   %al,%al
    b429:	74 21                	je     b44c <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    b42b:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    b432:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b436:	48 89 d6             	mov    %rdx,%rsi
    b439:	48 89 c7             	mov    %rax,%rdi
    b43c:	e8 a5 22 00 00       	call   d6e6 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    b441:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b445:	48 8b 00             	mov    (%rax),%rax
    b448:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    b44c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    b453:	48 89 c7             	mov    %rax,%rdi
    b456:	e8 6b 28 00 00       	call   dcc6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    b45b:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    b462:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    b469:	48 89 d6             	mov    %rdx,%rsi
    b46c:	48 89 c7             	mov    %rax,%rdi
    b46f:	e8 17 28 00 00       	call   dc8b <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    b474:	84 c0                	test   %al,%al
    b476:	0f 85 02 ff ff ff    	jne    b37e <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    b47c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b481:	75 3b                	jne    b4be <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    b483:	bf 10 00 00 00       	mov    $0x10,%edi
    b488:	e8 b3 7c ff ff       	call   3140 <__cxa_allocate_exception@plt>
    b48d:	48 89 c3             	mov    %rax,%rbx
    b490:	48 8d 05 61 9e 00 00 	lea    0x9e61(%rip),%rax        # 152f8 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    b497:	48 89 c6             	mov    %rax,%rsi
    b49a:	48 89 df             	mov    %rbx,%rdi
    b49d:	e8 3e 7c ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    b4a2:	48 8b 05 ff 4a 01 00 	mov    0x14aff(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b4a9:	48 89 c2             	mov    %rax,%rdx
    b4ac:	48 8d 05 8d 48 01 00 	lea    0x1488d(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b4b3:	48 89 c6             	mov    %rax,%rsi
    b4b6:	48 89 df             	mov    %rbx,%rdi
    b4b9:	e8 c2 80 ff ff       	call   3580 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    b4be:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b4c2:	48 89 c7             	mov    %rax,%rdi
    b4c5:	e8 46 22 00 00       	call   d710 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    b4ca:	8b 00                	mov    (%rax),%eax
    b4cc:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    b4cf:	f3 0f 10 05 d1 a1 00 	movss  0xa1d1(%rip),%xmm0        # 156a8 <_ZN6__pstl9execution2v1L5unseqE+0x3f9>
    b4d6:	00 
    b4d7:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    b4dc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b4e0:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    b4e7:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    b4ee:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    b4f3:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    b4fa:	00 00 00 
  queueInfo.pNext = nullptr;
    b4fd:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    b504:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    b508:	8b 45 dc             	mov    -0x24(%rbp),%eax
    b50b:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    b511:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    b518:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    b51b:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    b51f:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    b523:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    b52a:	b8 00 00 00 00       	mov    $0x0,%eax
    b52f:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    b534:	48 89 d7             	mov    %rdx,%rdi
    b537:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    b53a:	48 89 fa             	mov    %rdi,%rdx
    b53d:	89 02                	mov    %eax,(%rdx)
    b53f:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    b543:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b547:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    b54e:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    b555:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    b55c:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    b563:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    b56a:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    b56b:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    b572:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    b575:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    b57c:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    b580:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    b587:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    b58a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b591:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    b598:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b59f:	48 05 88 00 00 00    	add    $0x88,%rax
    b5a5:	48 89 c7             	mov    %rax,%rdi
    b5a8:	e8 1f 25 00 00       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    b5ad:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    b5b3:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b5ba:	48 05 88 00 00 00    	add    $0x88,%rax
    b5c0:	48 89 c7             	mov    %rax,%rdi
    b5c3:	e8 4c 25 00 00       	call   db14 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    b5c8:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    b5cf:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    b5d6:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    b5dd:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b5e4:	48 83 c0 28          	add    $0x28,%rax
    b5e8:	48 89 c7             	mov    %rax,%rdi
    b5eb:	e8 dc 24 00 00       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    b5f0:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    b5f6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b5fd:	48 83 c0 28          	add    $0x28,%rax
    b601:	48 89 c7             	mov    %rax,%rdi
    b604:	e8 e7 24 00 00       	call   daf0 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    b609:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    b610:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    b617:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b61b:	ba 00 00 00 00       	mov    $0x0,%edx
    b620:	48 89 ce             	mov    %rcx,%rsi
    b623:	48 89 c7             	mov    %rax,%rdi
    b626:	e8 23 90 ff ff       	call   464e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    b62b:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    b632:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    b636:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b63d:	48 8d 50 60          	lea    0x60(%rax),%rdx
    b641:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b648:	48 8b 40 50          	mov    0x50(%rax),%rax
    b64c:	8b 75 dc             	mov    -0x24(%rbp),%esi
    b64f:	48 89 d1             	mov    %rdx,%rcx
    b652:	ba 00 00 00 00       	mov    $0x0,%edx
    b657:	48 89 c7             	mov    %rax,%rdi
    b65a:	e8 21 7e ff ff       	call   3480 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    b65f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b666:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b66a:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    b66e:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    b675:	8b 55 dc             	mov    -0x24(%rbp),%edx
    b678:	89 50 68             	mov    %edx,0x68(%rax)
}
    b67b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b67f:	48 89 c7             	mov    %rax,%rdi
    b682:	e8 af ab ff ff       	call   6236 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    b687:	eb 2a                	jmp    b6b3 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    b689:	49 89 c4             	mov    %rax,%r12
    b68c:	48 89 df             	mov    %rbx,%rdi
    b68f:	e8 5c 7b ff ff       	call   31f0 <__cxa_free_exception@plt>
    b694:	4c 89 e3             	mov    %r12,%rbx
    b697:	eb 03                	jmp    b69c <_ZN9VulkanApp12createDeviceEv+0x394>
}
    b699:	48 89 c3             	mov    %rax,%rbx
    b69c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b6a0:	48 89 c7             	mov    %rax,%rdi
    b6a3:	e8 8e ab ff ff       	call   6236 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    b6a8:	48 89 d8             	mov    %rbx,%rax
    b6ab:	48 89 c7             	mov    %rax,%rdi
    b6ae:	e8 1d 7f ff ff       	call   35d0 <_Unwind_Resume@plt>
    b6b3:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    b6ba:	5b                   	pop    %rbx
    b6bb:	41 5c                	pop    %r12
    b6bd:	5d                   	pop    %rbp
    b6be:	c3                   	ret
    b6bf:	90                   	nop

000000000000b6c0 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    b6c0:	55                   	push   %rbp
    b6c1:	48 89 e5             	mov    %rsp,%rbp
    b6c4:	53                   	push   %rbx
    b6c5:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    b6cc:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    b6d3:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    b6da:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b6e1:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    b6e8:	ba 00 00 00 00       	mov    $0x0,%edx
    b6ed:	48 89 ce             	mov    %rcx,%rsi
    b6f0:	48 89 c7             	mov    %rax,%rdi
    b6f3:	e8 3f 97 ff ff       	call   4e37 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    b6f8:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    b6ff:	48 89 c7             	mov    %rax,%rdi
    b702:	e8 85 20 00 00       	call   d78c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    b707:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b70e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b716:	48 89 c7             	mov    %rax,%rdi
    b719:	e8 f0 26 00 00       	call   de0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    b71e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    b725:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b729:	48 89 c7             	mov    %rax,%rdi
    b72c:	e8 03 27 00 00       	call   de34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    b731:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    b738:	e9 8c 00 00 00       	jmp    b7c9 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    b73d:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    b744:	48 89 c7             	mov    %rax,%rdi
    b747:	e8 70 27 00 00       	call   debc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    b74c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    b750:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    b757:	48 89 c7             	mov    %rax,%rdi
    b75a:	e8 81 7e ff ff       	call   35e0 <_ZNSaIcEC1Ev@plt>
    b75f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b763:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    b76a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    b771:	48 89 ce             	mov    %rcx,%rsi
    b774:	48 89 c7             	mov    %rax,%rdi
    b777:	e8 a4 82 ff ff       	call   3a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b77c:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    b783:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    b78a:	48 89 d6             	mov    %rdx,%rsi
    b78d:	48 89 c7             	mov    %rax,%rdi
    b790:	e8 39 27 00 00       	call   dece <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b795:	8b 10                	mov    (%rax),%edx
    b797:	83 c2 01             	add    $0x1,%edx
    b79a:	89 10                	mov    %edx,(%rax)
    b79c:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    b7a3:	48 89 c7             	mov    %rax,%rdi
    b7a6:	e8 f5 79 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b7ab:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    b7b2:	48 89 c7             	mov    %rax,%rdi
    b7b5:	e8 e6 7b ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    b7ba:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    b7c1:	48 89 c7             	mov    %rax,%rdi
    b7c4:	e8 cf 26 00 00       	call   de98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b7c9:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    b7d0:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    b7d7:	48 89 d6             	mov    %rdx,%rsi
    b7da:	48 89 c7             	mov    %rax,%rdi
    b7dd:	e8 7b 26 00 00       	call   de5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b7e2:	84 c0                	test   %al,%al
    b7e4:	0f 85 53 ff ff ff    	jne    b73d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    b7ea:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    b7f1:	48 05 88 00 00 00    	add    $0x88,%rax
    b7f7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b7fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b7ff:	48 89 c7             	mov    %rax,%rdi
    b802:	e8 65 21 00 00       	call   d96c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    b807:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    b80e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b812:	48 89 c7             	mov    %rax,%rdi
    b815:	e8 78 21 00 00       	call   d992 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    b81a:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    b821:	e9 ed 00 00 00       	jmp    b913 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    b826:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    b82d:	48 89 c7             	mov    %rax,%rdi
    b830:	e8 e1 21 00 00       	call   da16 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b835:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    b839:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    b83d:	48 89 c7             	mov    %rax,%rdi
    b840:	e8 9b 7d ff ff       	call   35e0 <_ZNSaIcEC1Ev@plt>
    b845:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b849:	48 8b 08             	mov    (%rax),%rcx
    b84c:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    b850:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    b857:	48 89 ce             	mov    %rcx,%rsi
    b85a:	48 89 c7             	mov    %rax,%rdi
    b85d:	e8 be 81 ff ff       	call   3a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b862:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    b869:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    b870:	48 89 d6             	mov    %rdx,%rsi
    b873:	48 89 c7             	mov    %rax,%rdi
    b876:	e8 53 26 00 00       	call   dece <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b87b:	8b 10                	mov    (%rax),%edx
    b87d:	83 c2 01             	add    $0x1,%edx
    b880:	89 10                	mov    %edx,(%rax)
    b882:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    b889:	48 89 c7             	mov    %rax,%rdi
    b88c:	e8 0f 79 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b891:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    b895:	48 89 c7             	mov    %rax,%rdi
    b898:	e8 03 7b ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    b89d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    b8a1:	48 89 c7             	mov    %rax,%rdi
    b8a4:	e8 37 7d ff ff       	call   35e0 <_ZNSaIcEC1Ev@plt>
    b8a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b8ad:	48 8b 08             	mov    (%rax),%rcx
    b8b0:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    b8b4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b8b8:	48 89 ce             	mov    %rcx,%rsi
    b8bb:	48 89 c7             	mov    %rax,%rdi
    b8be:	e8 5d 81 ff ff       	call   3a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b8c3:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    b8c7:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    b8ce:	48 89 d6             	mov    %rdx,%rsi
    b8d1:	48 89 c7             	mov    %rax,%rdi
    b8d4:	e8 f5 25 00 00       	call   dece <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b8d9:	8b 00                	mov    (%rax),%eax
    b8db:	83 f8 01             	cmp    $0x1,%eax
    b8de:	0f 96 c3             	setbe  %bl
    b8e1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b8e5:	48 89 c7             	mov    %rax,%rdi
    b8e8:	e8 b3 78 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b8ed:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    b8f1:	48 89 c7             	mov    %rax,%rdi
    b8f4:	e8 a7 7a ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    b8f9:	84 db                	test   %bl,%bl
    b8fb:	74 07                	je     b904 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    b8fd:	bb 00 00 00 00       	mov    $0x0,%ebx
    b902:	eb 35                	jmp    b939 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    b904:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    b90b:	48 89 c7             	mov    %rax,%rdi
    b90e:	e8 e3 20 00 00       	call   d9f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    b913:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    b91a:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    b921:	48 89 d6             	mov    %rdx,%rsi
    b924:	48 89 c7             	mov    %rax,%rdi
    b927:	e8 8f 20 00 00       	call   d9bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    b92c:	84 c0                	test   %al,%al
    b92e:	0f 85 f2 fe ff ff    	jne    b826 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    b934:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    b939:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    b940:	48 89 c7             	mov    %rax,%rdi
    b943:	e8 60 1e 00 00       	call   d7a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b948:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b94f:	48 89 c7             	mov    %rax,%rdi
    b952:	e8 55 a6 ff ff       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b957:	89 d8                	mov    %ebx,%eax
    b959:	e9 96 00 00 00       	jmp    b9f4 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    b95e:	48 89 c3             	mov    %rax,%rbx
    b961:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    b968:	48 89 c7             	mov    %rax,%rdi
    b96b:	e8 30 78 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b970:	eb 03                	jmp    b975 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    b972:	48 89 c3             	mov    %rax,%rbx
    b975:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    b97c:	48 89 c7             	mov    %rax,%rdi
    b97f:	e8 1c 7a ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    b984:	eb 45                	jmp    b9cb <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    b986:	48 89 c3             	mov    %rax,%rbx
    b989:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    b990:	48 89 c7             	mov    %rax,%rdi
    b993:	e8 08 78 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b998:	eb 03                	jmp    b99d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    b99a:	48 89 c3             	mov    %rax,%rbx
    b99d:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    b9a1:	48 89 c7             	mov    %rax,%rdi
    b9a4:	e8 f7 79 ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    b9a9:	eb 20                	jmp    b9cb <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    b9ab:	48 89 c3             	mov    %rax,%rbx
    b9ae:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b9b2:	48 89 c7             	mov    %rax,%rdi
    b9b5:	e8 e6 77 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b9ba:	eb 03                	jmp    b9bf <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    b9bc:	48 89 c3             	mov    %rax,%rbx
    b9bf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    b9c3:	48 89 c7             	mov    %rax,%rdi
    b9c6:	e8 d5 79 ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
}
    b9cb:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    b9d2:	48 89 c7             	mov    %rax,%rdi
    b9d5:	e8 ce 1d 00 00       	call   d7a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b9da:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b9e1:	48 89 c7             	mov    %rax,%rdi
    b9e4:	e8 c3 a5 ff ff       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b9e9:	48 89 d8             	mov    %rbx,%rax
    b9ec:	48 89 c7             	mov    %rax,%rdi
    b9ef:	e8 dc 7b ff ff       	call   35d0 <_Unwind_Resume@plt>
    b9f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b9f8:	c9                   	leave
    b9f9:	c3                   	ret

000000000000b9fa <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    b9fa:	55                   	push   %rbp
    b9fb:	48 89 e5             	mov    %rsp,%rbp
    b9fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    ba06:	b8 01 00 00 00       	mov    $0x1,%eax
}
    ba0b:	5d                   	pop    %rbp
    ba0c:	c3                   	ret
    ba0d:	90                   	nop

000000000000ba0e <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    ba0e:	55                   	push   %rbp
    ba0f:	48 89 e5             	mov    %rsp,%rbp
    ba12:	41 54                	push   %r12
    ba14:	53                   	push   %rbx
    ba15:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    ba1c:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    ba23:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    ba2a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ba31:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ba35:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ba3c:	48 8b 48 58          	mov    0x58(%rax),%rcx
    ba40:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ba44:	48 89 ce             	mov    %rcx,%rsi
    ba47:	48 89 c7             	mov    %rax,%rdi
    ba4a:	e8 32 9d ff ff       	call   5781 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    ba4f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ba56:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ba5a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ba61:	48 8b 48 58          	mov    0x58(%rax),%rcx
    ba65:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ba6c:	48 89 ce             	mov    %rcx,%rsi
    ba6f:	48 89 c7             	mov    %rax,%rdi
    ba72:	e8 b8 9d ff ff       	call   582f <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    ba77:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ba7e:	48 8b 50 48          	mov    0x48(%rax),%rdx
    ba82:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ba89:	48 8b 48 58          	mov    0x58(%rax),%rcx
    ba8d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ba94:	48 89 ce             	mov    %rcx,%rsi
    ba97:	48 89 c7             	mov    %rax,%rdi
    ba9a:	e8 07 9f ff ff       	call   59a6 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    ba9f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    baa6:	48 89 c6             	mov    %rax,%rsi
    baa9:	b8 00 00 00 00       	mov    $0x0,%eax
    baae:	ba 0d 00 00 00       	mov    $0xd,%edx
    bab3:	48 89 f7             	mov    %rsi,%rdi
    bab6:	48 89 d1             	mov    %rdx,%rcx
    bab9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    babc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bac3:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    bac9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bad0:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bad7:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    bad8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    badf:	48 8b 50 48          	mov    0x48(%rax),%rdx
    bae3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    baea:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    baee:	8b 45 80             	mov    -0x80(%rbp),%eax
    baf1:	83 c0 01             	add    $0x1,%eax
    baf4:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    baf7:	8b 45 84             	mov    -0x7c(%rbp),%eax
    bafa:	85 c0                	test   %eax,%eax
    bafc:	74 0e                	je     bb0c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    bafe:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    bb01:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    bb04:	73 06                	jae    bb0c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    bb06:	8b 45 84             	mov    -0x7c(%rbp),%eax
    bb09:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    bb0c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bb13:	8b 55 ec             	mov    -0x14(%rbp),%edx
    bb16:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    bb19:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    bb20:	48 89 c7             	mov    %rax,%rdi
    bb23:	e8 aa 24 00 00       	call   dfd2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    bb28:	84 c0                	test   %al,%al
    bb2a:	74 3b                	je     bb67 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    bb2c:	bf 10 00 00 00       	mov    $0x10,%edi
    bb31:	e8 0a 76 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    bb36:	48 89 c3             	mov    %rax,%rbx
    bb39:	48 8d 05 dc 97 00 00 	lea    0x97dc(%rip),%rax        # 1531c <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    bb40:	48 89 c6             	mov    %rax,%rsi
    bb43:	48 89 df             	mov    %rbx,%rdi
    bb46:	e8 95 75 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    bb4b:	48 8b 05 56 44 01 00 	mov    0x14456(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    bb52:	48 89 c2             	mov    %rax,%rdx
    bb55:	48 8d 05 e4 41 01 00 	lea    0x141e4(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    bb5c:	48 89 c6             	mov    %rax,%rsi
    bb5f:	48 89 df             	mov    %rbx,%rdi
    bb62:	e8 19 7a ff ff       	call   3580 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    bb67:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    bb6e:	be 00 00 00 00       	mov    $0x0,%esi
    bb73:	48 89 c7             	mov    %rax,%rdi
    bb76:	e8 99 24 00 00       	call   e014 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    bb7b:	8b 10                	mov    (%rax),%edx
    bb7d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bb84:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    bb87:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    bb8e:	be 00 00 00 00       	mov    $0x0,%esi
    bb93:	48 89 c7             	mov    %rax,%rdi
    bb96:	e8 79 24 00 00       	call   e014 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    bb9b:	8b 50 04             	mov    0x4(%rax),%edx
    bb9e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bba5:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    bba8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    bbaf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    bbb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bbb7:	48 89 c7             	mov    %rax,%rdi
    bbba:	e8 75 24 00 00       	call   e034 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    bbbf:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    bbc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bbca:	48 89 c7             	mov    %rax,%rdi
    bbcd:	e8 88 24 00 00       	call   e05a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    bbd2:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    bbd9:	eb 5b                	jmp    bc36 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    bbdb:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    bbe2:	48 89 c7             	mov    %rax,%rdi
    bbe5:	e8 f4 24 00 00       	call   e0de <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    bbea:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    bbee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bbf2:	8b 00                	mov    (%rax),%eax
    bbf4:	83 f8 2b             	cmp    $0x2b,%eax
    bbf7:	75 2e                	jne    bc27 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    bbf9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bbfd:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    bc00:	85 c0                	test   %eax,%eax
    bc02:	75 23                	jne    bc27 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    bc04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bc08:	8b 10                	mov    (%rax),%edx
    bc0a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bc11:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    bc14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bc18:	8b 50 04             	mov    0x4(%rax),%edx
    bc1b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bc22:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    bc25:	eb 2c                	jmp    bc53 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    bc27:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    bc2e:	48 89 c7             	mov    %rax,%rdi
    bc31:	e8 88 24 00 00       	call   e0be <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    bc36:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    bc3d:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    bc44:	48 89 d6             	mov    %rdx,%rsi
    bc47:	48 89 c7             	mov    %rax,%rdi
    bc4a:	e8 34 24 00 00       	call   e083 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    bc4f:	84 c0                	test   %al,%al
    bc51:	75 88                	jne    bbdb <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    bc53:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bc5a:	8b 50 24             	mov    0x24(%rax),%edx
    bc5d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    bc64:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    bc67:	8b 45 88             	mov    -0x78(%rbp),%eax
    bc6a:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    bc6d:	8b 45 8c             	mov    -0x74(%rbp),%eax
    bc70:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    bc73:	8b 45 98             	mov    -0x68(%rbp),%eax
    bc76:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    bc79:	73 06                	jae    bc81 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    bc7b:	8b 45 98             	mov    -0x68(%rbp),%eax
    bc7e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    bc81:	8b 45 9c             	mov    -0x64(%rbp),%eax
    bc84:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    bc87:	73 06                	jae    bc8f <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    bc89:	8b 45 9c             	mov    -0x64(%rbp),%eax
    bc8c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    bc8f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bc96:	8b 55 e8             	mov    -0x18(%rbp),%edx
    bc99:	89 50 2c             	mov    %edx,0x2c(%rax)
    bc9c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bca3:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    bca6:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    bca9:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    bcb0:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    bcb7:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    bcbb:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    bcbf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bcc6:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    bccd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bcd4:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    bcdb:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    bce2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    bce9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    bced:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bcf1:	48 89 c7             	mov    %rax,%rdi
    bcf4:	e8 f7 23 00 00       	call   e0f0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    bcf9:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    bd00:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bd04:	48 89 c7             	mov    %rax,%rdi
    bd07:	e8 0a 24 00 00       	call   e116 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    bd0c:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    bd13:	eb 3c                	jmp    bd51 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    bd15:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    bd1c:	48 89 c7             	mov    %rax,%rdi
    bd1f:	e8 76 24 00 00       	call   e19a <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    bd24:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    bd28:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    bd2c:	8b 00                	mov    (%rax),%eax
    bd2e:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    bd31:	75 0f                	jne    bd42 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    bd33:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bd3a:	8b 55 cc             	mov    -0x34(%rbp),%edx
    bd3d:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    bd40:	eb 2c                	jmp    bd6e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    bd42:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    bd49:	48 89 c7             	mov    %rax,%rdi
    bd4c:	e8 29 24 00 00       	call   e17a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    bd51:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    bd58:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    bd5f:	48 89 d6             	mov    %rdx,%rsi
    bd62:	48 89 c7             	mov    %rax,%rdi
    bd65:	e8 d5 23 00 00       	call   e13f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    bd6a:	84 c0                	test   %al,%al
    bd6c:	75 a7                	jne    bd15 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    bd6e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bd75:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    bd7c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bd83:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    bd8a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bd91:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    bd98:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bd9f:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    bda6:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    bda7:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    bdaa:	83 e0 01             	and    $0x1,%eax
    bdad:	85 c0                	test   %eax,%eax
    bdaf:	74 1e                	je     bdcf <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    bdb1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bdb8:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    bdbf:	8b 45 ac             	mov    -0x54(%rbp),%eax
    bdc2:	83 e0 01             	and    $0x1,%eax
    bdc5:	85 c0                	test   %eax,%eax
    bdc7:	0f 84 9b 00 00 00    	je     be68 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    bdcd:	eb 3b                	jmp    be0a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    bdcf:	bf 10 00 00 00       	mov    $0x10,%edi
    bdd4:	e8 67 73 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    bdd9:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    bddc:	48 8d 05 5d 95 00 00 	lea    0x955d(%rip),%rax        # 15340 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    bde3:	48 89 c6             	mov    %rax,%rsi
    bde6:	48 89 df             	mov    %rbx,%rdi
    bde9:	e8 f2 72 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    bdee:	48 8b 05 b3 41 01 00 	mov    0x141b3(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    bdf5:	48 89 c2             	mov    %rax,%rdx
    bdf8:	48 8d 05 41 3f 01 00 	lea    0x13f41(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    bdff:	48 89 c6             	mov    %rax,%rsi
    be02:	48 89 df             	mov    %rbx,%rdi
    be05:	e8 76 77 ff ff       	call   3580 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    be0a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    be11:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    be18:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    be1f:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    be26:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    be2d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    be34:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    be35:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    be3c:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    be43:	00 

  return swapchainCreateInfo;
    be44:	90                   	nop
}
    be45:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    be4c:	48 89 c7             	mov    %rax,%rdi
    be4f:	e8 f6 aa ff ff       	call   694a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    be54:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    be5b:	48 89 c7             	mov    %rax,%rdi
    be5e:	e8 83 a9 ff ff       	call   67e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    be63:	e9 9c 00 00 00       	jmp    bf04 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    be68:	bf 10 00 00 00       	mov    $0x10,%edi
    be6d:	e8 ce 72 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    be72:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    be75:	48 8d 05 fc 94 00 00 	lea    0x94fc(%rip),%rax        # 15378 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    be7c:	48 89 c6             	mov    %rax,%rsi
    be7f:	48 89 df             	mov    %rbx,%rdi
    be82:	e8 59 72 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    be87:	48 8b 05 1a 41 01 00 	mov    0x1411a(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    be8e:	48 89 c2             	mov    %rax,%rdx
    be91:	48 8d 05 a8 3e 01 00 	lea    0x13ea8(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    be98:	48 89 c6             	mov    %rax,%rsi
    be9b:	48 89 df             	mov    %rbx,%rdi
    be9e:	e8 dd 76 ff ff       	call   3580 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    bea3:	49 89 c4             	mov    %rax,%r12
    bea6:	48 89 df             	mov    %rbx,%rdi
    bea9:	e8 42 73 ff ff       	call   31f0 <__cxa_free_exception@plt>
    beae:	4c 89 e3             	mov    %r12,%rbx
    beb1:	eb 23                	jmp    bed6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    beb3:	49 89 c4             	mov    %rax,%r12
    beb6:	48 89 df             	mov    %rbx,%rdi
    beb9:	e8 32 73 ff ff       	call   31f0 <__cxa_free_exception@plt>
    bebe:	4c 89 e3             	mov    %r12,%rbx
    bec1:	eb 13                	jmp    bed6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    bec3:	49 89 c4             	mov    %rax,%r12
    bec6:	48 89 df             	mov    %rbx,%rdi
    bec9:	e8 22 73 ff ff       	call   31f0 <__cxa_free_exception@plt>
    bece:	4c 89 e3             	mov    %r12,%rbx
    bed1:	eb 03                	jmp    bed6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    bed3:	48 89 c3             	mov    %rax,%rbx
    bed6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    bedd:	48 89 c7             	mov    %rax,%rdi
    bee0:	e8 65 aa ff ff       	call   694a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    bee5:	eb 03                	jmp    beea <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    bee7:	48 89 c3             	mov    %rax,%rbx
    beea:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    bef1:	48 89 c7             	mov    %rax,%rdi
    bef4:	e8 ed a8 ff ff       	call   67e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    bef9:	48 89 d8             	mov    %rbx,%rax
    befc:	48 89 c7             	mov    %rax,%rdi
    beff:	e8 cc 76 ff ff       	call   35d0 <_Unwind_Resume@plt>
    bf04:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    bf0b:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    bf12:	5b                   	pop    %rbx
    bf13:	41 5c                	pop    %r12
    bf15:	5d                   	pop    %rbp
    bf16:	c3                   	ret
    bf17:	90                   	nop

000000000000bf18 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    bf18:	55                   	push   %rbp
    bf19:	48 89 e5             	mov    %rsp,%rbp
    bf1c:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    bf20:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    bf24:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    bf28:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    bf2c:	48 89 d6             	mov    %rdx,%rsi
    bf2f:	48 89 c7             	mov    %rax,%rdi
    bf32:	e8 d7 fa ff ff       	call   ba0e <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    bf37:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bf3b:	48 8b 40 50          	mov    0x50(%rax),%rax
    bf3f:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    bf43:	ba 00 00 00 00       	mov    $0x0,%edx
    bf48:	48 89 ce             	mov    %rcx,%rsi
    bf4b:	48 89 c7             	mov    %rax,%rdi
    bf4e:	e8 2b 88 ff ff       	call   477e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    bf53:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    bf57:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    bf5b:	90                   	nop
    bf5c:	c9                   	leave
    bf5d:	c3                   	ret

000000000000bf5e <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    bf5e:	55                   	push   %rbp
    bf5f:	48 89 e5             	mov    %rsp,%rbp
    bf62:	53                   	push   %rbx
    bf63:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    bf6a:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    bf71:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bf78:	48 8b 50 70          	mov    0x70(%rax),%rdx
    bf7c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bf83:	48 8b 48 50          	mov    0x50(%rax),%rcx
    bf87:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bf8b:	48 89 ce             	mov    %rcx,%rsi
    bf8e:	48 89 c7             	mov    %rax,%rdi
    bf91:	e8 87 9b ff ff       	call   5b1d <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    bf96:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bf9d:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    bfa4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bfa8:	48 89 c6             	mov    %rax,%rsi
    bfab:	48 89 d7             	mov    %rdx,%rdi
    bfae:	e8 f9 21 00 00       	call   e1ac <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    bfb3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bfb7:	48 89 c7             	mov    %rax,%rdi
    bfba:	e8 ef aa ff ff       	call   6aae <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    bfbf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bfc6:	48 05 b8 00 00 00    	add    $0xb8,%rax
    bfcc:	48 89 c7             	mov    %rax,%rdi
    bfcf:	e8 10 22 00 00       	call   e1e4 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    bfd4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    bfd8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bfdf:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    bfe6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bfea:	48 89 c6             	mov    %rax,%rsi
    bfed:	48 89 d7             	mov    %rdx,%rdi
    bff0:	e8 13 22 00 00       	call   e208 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    bff5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    bffc:	00 
    bffd:	e9 f1 00 00 00       	jmp    c0f3 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    c002:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c006:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    c00d:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    c011:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    c015:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    c019:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    c01d:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    c024:	00 00 00 
    imageViewInfo.pNext = nullptr;
    c027:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    c02e:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    c032:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c039:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    c040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c044:	48 89 c6             	mov    %rax,%rsi
    c047:	48 89 d7             	mov    %rdx,%rdi
    c04a:	e8 3f 22 00 00       	call   e28e <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    c04f:	48 8b 00             	mov    (%rax),%rax
    c052:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    c056:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    c05d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c064:	8b 40 78             	mov    0x78(%rax),%eax
    c067:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    c06a:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    c071:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    c078:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    c07f:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    c086:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    c08d:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    c094:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    c09b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    c0a2:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    c0a9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c0b0:	48 8b 40 50          	mov    0x50(%rax),%rax
    c0b4:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    c0bb:	ba 00 00 00 00       	mov    $0x0,%edx
    c0c0:	48 89 ce             	mov    %rcx,%rsi
    c0c3:	48 89 c7             	mov    %rax,%rdi
    c0c6:	e8 53 87 ff ff       	call   481e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    c0cb:	48 89 c3             	mov    %rax,%rbx
    c0ce:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c0d5:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    c0dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0e0:	48 89 c6             	mov    %rax,%rsi
    c0e3:	48 89 d7             	mov    %rdx,%rdi
    c0e6:	e8 c3 21 00 00       	call   e2ae <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    c0eb:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    c0ee:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    c0f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0f7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c0fb:	0f 82 01 ff ff ff    	jb     c002 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    c101:	90                   	nop
    c102:	90                   	nop
    c103:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c107:	c9                   	leave
    c108:	c3                   	ret
    c109:	90                   	nop

000000000000c10a <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    c10a:	55                   	push   %rbp
    c10b:	48 89 e5             	mov    %rsp,%rbp
    c10e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  //
}
    c112:	90                   	nop
    c113:	5d                   	pop    %rbp
    c114:	c3                   	ret
    c115:	90                   	nop

000000000000c116 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    c116:	55                   	push   %rbp
    c117:	48 89 e5             	mov    %rsp,%rbp
    c11a:	48 83 ec 30          	sub    $0x30,%rsp
    c11e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    c122:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c126:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    c12a:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    c12f:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    c136:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    c13d:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    c13e:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    c145:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c149:	8b 40 68             	mov    0x68(%rax),%eax
    c14c:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    c14f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c153:	48 8b 40 50          	mov    0x50(%rax),%rax
    c157:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    c15b:	ba 00 00 00 00       	mov    $0x0,%edx
    c160:	48 89 ce             	mov    %rcx,%rsi
    c163:	48 89 c7             	mov    %rax,%rdi
    c166:	e8 4b 87 ff ff       	call   48b6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    c16b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c16f:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)
}
    c176:	90                   	nop
    c177:	c9                   	leave
    c178:	c3                   	ret
    c179:	90                   	nop

000000000000c17a <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    c17a:	55                   	push   %rbp
    c17b:	48 89 e5             	mov    %rsp,%rbp
    c17e:	41 57                	push   %r15
    c180:	41 56                	push   %r14
    c182:	41 55                	push   %r13
    c184:	41 54                	push   %r12
    c186:	53                   	push   %rbx
    c187:	48 83 ec 38          	sub    $0x38,%rsp
    c18b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    c18f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c193:	48 8d 58 10          	lea    0x10(%rax),%rbx
    c197:	48 8d 05 0b 92 00 00 	lea    0x920b(%rip),%rax        # 153a9 <_ZN6__pstl9execution2v1L5unseqE+0xfa>
    c19e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    c1a2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c1a6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c1aa:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    c1b1:	00 
    c1b2:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    c1b6:	48 89 c7             	mov    %rax,%rdi
    c1b9:	e8 ae 9e ff ff       	call   606c <_ZNSaIPKcEC1Ev>
    c1be:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    c1c2:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    c1c6:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    c1ca:	49 89 f0             	mov    %rsi,%r8
    c1cd:	49 89 f9             	mov    %rdi,%r9
    c1d0:	48 89 fa             	mov    %rdi,%rdx
    c1d3:	48 89 c1             	mov    %rax,%rcx
    c1d6:	4c 89 c6             	mov    %r8,%rsi
    c1d9:	48 89 df             	mov    %rbx,%rdi
    c1dc:	e8 bf 16 00 00       	call   d8a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    c1e1:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    c1e5:	48 89 c7             	mov    %rax,%rdi
    c1e8:	e8 9b 9e ff ff       	call   6088 <_ZNSaIPKcED1Ev>
    c1ed:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c1f1:	48 8d 58 28          	lea    0x28(%rax),%rbx
    c1f5:	4c 8d 35 e4 3a 01 00 	lea    0x13ae4(%rip),%r14        # 1fce0 <C.73.0>
    c1fc:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    c202:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    c206:	48 89 c7             	mov    %rax,%rdi
    c209:	e8 5e 9e ff ff       	call   606c <_ZNSaIPKcEC1Ev>
    c20e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    c212:	4d 89 f0             	mov    %r14,%r8
    c215:	4d 89 f9             	mov    %r15,%r9
    c218:	4c 89 f6             	mov    %r14,%rsi
    c21b:	4c 89 ff             	mov    %r15,%rdi
    c21e:	48 89 fa             	mov    %rdi,%rdx
    c221:	48 89 c1             	mov    %rax,%rcx
    c224:	4c 89 c6             	mov    %r8,%rsi
    c227:	48 89 df             	mov    %rbx,%rdi
    c22a:	e8 71 16 00 00       	call   d8a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    c22f:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    c233:	48 89 c7             	mov    %rax,%rdi
    c236:	e8 4d 9e ff ff       	call   6088 <_ZNSaIPKcED1Ev>
    c23b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c23f:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    c246:	4c 8d 25 a3 3a 01 00 	lea    0x13aa3(%rip),%r12        # 1fcf0 <C.74.1>
    c24d:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    c253:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c257:	48 89 c7             	mov    %rax,%rdi
    c25a:	e8 0d 9e ff ff       	call   606c <_ZNSaIPKcEC1Ev>
    c25f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c263:	4d 89 e0             	mov    %r12,%r8
    c266:	4d 89 e9             	mov    %r13,%r9
    c269:	4c 89 e6             	mov    %r12,%rsi
    c26c:	4c 89 ef             	mov    %r13,%rdi
    c26f:	48 89 fa             	mov    %rdi,%rdx
    c272:	48 89 c1             	mov    %rax,%rcx
    c275:	4c 89 c6             	mov    %r8,%rsi
    c278:	48 89 df             	mov    %rbx,%rdi
    c27b:	e8 20 16 00 00       	call   d8a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    c280:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c284:	48 89 c7             	mov    %rax,%rdi
    c287:	e8 fc 9d ff ff       	call   6088 <_ZNSaIPKcED1Ev>
    c28c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c290:	48 05 a0 00 00 00    	add    $0xa0,%rax
    c296:	48 89 c7             	mov    %rax,%rdi
    c299:	e8 5e 15 00 00       	call   d7fc <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    c29e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2a2:	48 05 b8 00 00 00    	add    $0xb8,%rax
    c2a8:	48 89 c7             	mov    %rax,%rdi
    c2ab:	e8 84 15 00 00       	call   d834 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
  createWindow();
    c2b0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2b4:	48 89 c7             	mov    %rax,%rdi
    c2b7:	e8 3a eb ff ff       	call   adf6 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    c2bc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2c0:	48 89 c7             	mov    %rax,%rdi
    c2c3:	e8 6e eb ff ff       	call   ae36 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    c2c8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2cc:	48 89 c7             	mov    %rax,%rdi
    c2cf:	e8 48 ed ff ff       	call   b01c <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    c2d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2d8:	48 89 c7             	mov    %rax,%rdi
    c2db:	e8 d0 ed ff ff       	call   b0b0 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    c2e0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2e4:	48 89 c7             	mov    %rax,%rdi
    c2e7:	e8 1c f0 ff ff       	call   b308 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    c2ec:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2f0:	48 89 c7             	mov    %rax,%rdi
    c2f3:	e8 20 fc ff ff       	call   bf18 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    c2f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c2fc:	48 89 c7             	mov    %rax,%rdi
    c2ff:	e8 5a fc ff ff       	call   bf5e <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    c304:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c308:	48 89 c7             	mov    %rax,%rdi
    c30b:	e8 fa fd ff ff       	call   c10a <_ZN9VulkanApp22createGraphicsPipelineEv>

  createCommandPool();
    c310:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c314:	48 89 c7             	mov    %rax,%rdi
    c317:	e8 fa fd ff ff       	call   c116 <_ZN9VulkanApp17createCommandPoolEv>
}
    c31c:	e9 a0 00 00 00       	jmp    c3c1 <_ZN9VulkanAppC1Ev+0x247>
VulkanApp::VulkanApp() {
    c321:	48 89 c3             	mov    %rax,%rbx
    c324:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    c328:	48 89 c7             	mov    %rax,%rdi
    c32b:	e8 58 9d ff ff       	call   6088 <_ZNSaIPKcED1Ev>
    c330:	48 89 d8             	mov    %rbx,%rax
    c333:	48 89 c7             	mov    %rax,%rdi
    c336:	e8 95 72 ff ff       	call   35d0 <_Unwind_Resume@plt>
    c33b:	48 89 c3             	mov    %rax,%rbx
    c33e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    c342:	48 89 c7             	mov    %rax,%rdi
    c345:	e8 3e 9d ff ff       	call   6088 <_ZNSaIPKcED1Ev>
    c34a:	eb 5a                	jmp    c3a6 <_ZN9VulkanAppC1Ev+0x22c>
    c34c:	48 89 c3             	mov    %rax,%rbx
    c34f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c353:	48 89 c7             	mov    %rax,%rdi
    c356:	e8 2d 9d ff ff       	call   6088 <_ZNSaIPKcED1Ev>
    c35b:	eb 39                	jmp    c396 <_ZN9VulkanAppC1Ev+0x21c>
}
    c35d:	48 89 c3             	mov    %rax,%rbx
    c360:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c364:	48 05 b8 00 00 00    	add    $0xb8,%rax
    c36a:	48 89 c7             	mov    %rax,%rdi
    c36d:	e8 3c a7 ff ff       	call   6aae <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    c372:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c376:	48 05 a0 00 00 00    	add    $0xa0,%rax
    c37c:	48 89 c7             	mov    %rax,%rdi
    c37f:	e8 dc 1f 00 00       	call   e360 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    c384:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c388:	48 05 88 00 00 00    	add    $0x88,%rax
    c38e:	48 89 c7             	mov    %rax,%rdi
    c391:	e8 92 15 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    c396:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c39a:	48 83 c0 28          	add    $0x28,%rax
}
    c39e:	48 89 c7             	mov    %rax,%rdi
    c3a1:	e8 82 15 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    c3a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c3aa:	48 83 c0 10          	add    $0x10,%rax
    c3ae:	48 89 c7             	mov    %rax,%rdi
    c3b1:	e8 72 15 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    c3b6:	48 89 d8             	mov    %rbx,%rax
    c3b9:	48 89 c7             	mov    %rax,%rdi
    c3bc:	e8 0f 72 ff ff       	call   35d0 <_Unwind_Resume@plt>
    c3c1:	48 83 c4 38          	add    $0x38,%rsp
    c3c5:	5b                   	pop    %rbx
    c3c6:	41 5c                	pop    %r12
    c3c8:	41 5d                	pop    %r13
    c3ca:	41 5e                	pop    %r14
    c3cc:	41 5f                	pop    %r15
    c3ce:	5d                   	pop    %rbp
    c3cf:	c3                   	ret

000000000000c3d0 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    c3d0:	55                   	push   %rbp
    c3d1:	48 89 e5             	mov    %rsp,%rbp
    c3d4:	48 83 ec 30          	sub    $0x30,%rsp
    c3d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    c3dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c3e0:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    c3e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c3eb:	48 8b 40 50          	mov    0x50(%rax),%rax
    c3ef:	ba 00 00 00 00       	mov    $0x0,%edx
    c3f4:	48 89 ce             	mov    %rcx,%rsi
    c3f7:	48 89 c7             	mov    %rax,%rdi
    c3fa:	e8 05 87 ff ff       	call   4b04 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>

  for (auto &imageView : imageViews) {
    c3ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c403:	48 05 a0 00 00 00    	add    $0xa0,%rax
    c409:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c40d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c411:	48 89 c7             	mov    %rax,%rdi
    c414:	e8 b3 1f 00 00       	call   e3cc <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    c419:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c41d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c421:	48 89 c7             	mov    %rax,%rdi
    c424:	e8 c9 1f 00 00       	call   e3f2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    c429:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c42d:	eb 3b                	jmp    c46a <_ZN9VulkanAppD1Ev+0x9a>
    c42f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c433:	48 89 c7             	mov    %rax,%rdi
    c436:	e8 3b 20 00 00       	call   e476 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    c43b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkh::destroyImageView(device, imageView);
    c43f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c443:	48 8b 08             	mov    (%rax),%rcx
    c446:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c44a:	48 8b 40 50          	mov    0x50(%rax),%rax
    c44e:	ba 00 00 00 00       	mov    $0x0,%edx
    c453:	48 89 ce             	mov    %rcx,%rsi
    c456:	48 89 c7             	mov    %rax,%rdi
    c459:	e8 bb 85 ff ff       	call   4a19 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    c45e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c462:	48 89 c7             	mov    %rax,%rdi
    c465:	e8 ec 1f 00 00       	call   e456 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    c46a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    c46e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c472:	48 89 d6             	mov    %rdx,%rsi
    c475:	48 89 c7             	mov    %rax,%rdi
    c478:	e8 9e 1f 00 00       	call   e41b <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    c47d:	84 c0                	test   %al,%al
    c47f:	75 ae                	jne    c42f <_ZN9VulkanAppD1Ev+0x5f>
  }
  vkh::destroySwapchain(device, swapchain.self);
    c481:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c485:	48 8b 48 70          	mov    0x70(%rax),%rcx
    c489:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c48d:	48 8b 40 50          	mov    0x50(%rax),%rax
    c491:	ba 00 00 00 00       	mov    $0x0,%edx
    c496:	48 89 ce             	mov    %rcx,%rsi
    c499:	48 89 c7             	mov    %rax,%rdi
    c49c:	e8 4a 85 ff ff       	call   49eb <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    c4a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4a5:	48 8b 40 50          	mov    0x50(%rax),%rax
    c4a9:	be 00 00 00 00       	mov    $0x0,%esi
    c4ae:	48 89 c7             	mov    %rax,%rdi
    c4b1:	e8 e1 84 ff ff       	call   4997 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    c4b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4ba:	48 8b 48 40          	mov    0x40(%rax),%rcx
    c4be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4c2:	48 8b 40 08          	mov    0x8(%rax),%rax
    c4c6:	ba 00 00 00 00       	mov    $0x0,%edx
    c4cb:	48 89 ce             	mov    %rcx,%rsi
    c4ce:	48 89 c7             	mov    %rax,%rdi
    c4d1:	e8 b7 e4 ff ff       	call   a98d <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    c4d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4da:	48 8b 48 48          	mov    0x48(%rax),%rcx
    c4de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4e2:	48 8b 40 08          	mov    0x8(%rax),%rax
    c4e6:	ba 00 00 00 00       	mov    $0x0,%edx
    c4eb:	48 89 ce             	mov    %rcx,%rsi
    c4ee:	48 89 c7             	mov    %rax,%rdi
    c4f1:	e8 c7 84 ff ff       	call   49bd <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    c4f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4fa:	48 8b 40 08          	mov    0x8(%rax),%rax
    c4fe:	be 00 00 00 00       	mov    $0x0,%esi
    c503:	48 89 c7             	mov    %rax,%rdi
    c506:	e8 66 84 ff ff       	call   4971 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    c50b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c50f:	48 8b 00             	mov    (%rax),%rax
    c512:	48 89 c7             	mov    %rax,%rdi
    c515:	e8 3c 84 ff ff       	call   4956 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    c51a:	e8 11 6e ff ff       	call   3330 <glfwTerminate@plt>
}
    c51f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c523:	48 05 b8 00 00 00    	add    $0xb8,%rax
    c529:	48 89 c7             	mov    %rax,%rdi
    c52c:	e8 7d a5 ff ff       	call   6aae <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    c531:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c535:	48 05 a0 00 00 00    	add    $0xa0,%rax
    c53b:	48 89 c7             	mov    %rax,%rdi
    c53e:	e8 1d 1e 00 00       	call   e360 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    c543:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c547:	48 05 88 00 00 00    	add    $0x88,%rax
    c54d:	48 89 c7             	mov    %rax,%rdi
    c550:	e8 d3 13 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    c555:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c559:	48 83 c0 28          	add    $0x28,%rax
}
    c55d:	48 89 c7             	mov    %rax,%rdi
    c560:	e8 c3 13 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    c565:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c569:	48 83 c0 10          	add    $0x10,%rax
    c56d:	48 89 c7             	mov    %rax,%rdi
    c570:	e8 b3 13 00 00       	call   d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    c575:	90                   	nop
    c576:	c9                   	leave
    c577:	c3                   	ret

000000000000c578 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    c578:	55                   	push   %rbp
    c579:	48 89 e5             	mov    %rsp,%rbp
    c57c:	53                   	push   %rbx
    c57d:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    c584:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    c58b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c58f:	48 89 c7             	mov    %rax,%rdi
    c592:	e8 f1 1e 00 00       	call   e488 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    c597:	f2 0f 10 05 11 91 00 	movsd  0x9111(%rip),%xmm0        # 156b0 <_ZN6__pstl9execution2v1L5unseqE+0x401>
    c59e:	00 
    c59f:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    c5a4:	e9 a1 00 00 00       	jmp    c64a <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    c5a9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    c5ad:	48 89 c7             	mov    %rax,%rdi
    c5b0:	e8 d3 1e 00 00       	call   e488 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    c5b5:	e8 26 6d ff ff       	call   32e0 <glfwPollEvents@plt>

    // for (int i = 0; i < 1'000'000; ++i) {
    // }

    double current = static_cast<double>(time_total.current());
    c5ba:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c5be:	48 89 c7             	mov    %rax,%rdi
    c5c1:	e8 8a 12 00 00       	call   d850 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    c5c6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c5ca:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    c5cf:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    c5d4:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    c5d9:	66 0f 2f 05 cf 90 00 	comisd 0x90cf(%rip),%xmm0        # 156b0 <_ZN6__pstl9execution2v1L5unseqE+0x401>
    c5e0:	00 
    c5e1:	72 5b                	jb     c63e <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    c5e3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    c5e7:	48 89 c7             	mov    %rax,%rdi
    c5ea:	e8 61 12 00 00       	call   d850 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    c5ef:	66 0f ef c9          	pxor   %xmm1,%xmm1
    c5f3:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    c5f8:	f2 0f 10 05 b0 90 00 	movsd  0x90b0(%rip),%xmm0        # 156b0 <_ZN6__pstl9execution2v1L5unseqE+0x401>
    c5ff:	00 
    c600:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    c604:	66 48 0f 7e c0       	movq   %xmm0,%rax
    c609:	66 48 0f 6e c0       	movq   %rax,%xmm0
    c60e:	48 8d 05 2b 3d 01 00 	lea    0x13d2b(%rip),%rax        # 20340 <_ZSt4cout@GLIBCXX_3.4>
    c615:	48 89 c7             	mov    %rax,%rdi
    c618:	e8 13 70 ff ff       	call   3630 <_ZNSolsEd@plt>
    c61d:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    c620:	48 8d 05 95 8d 00 00 	lea    0x8d95(%rip),%rax        # 153bc <_ZN6__pstl9execution2v1L5unseqE+0x10d>
    c627:	48 89 c6             	mov    %rax,%rsi
    c62a:	48 89 d7             	mov    %rdx,%rdi
    c62d:	e8 be 6c ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    c632:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c636:	48 89 c7             	mov    %rax,%rdi
    c639:	e8 5a 1f 00 00       	call   e598 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    c63e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    c642:	48 89 c7             	mov    %rax,%rdi
    c645:	e8 b4 1e 00 00       	call   e4fe <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    c64a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c651:	48 8b 00             	mov    (%rax),%rax
    c654:	48 89 c7             	mov    %rax,%rdi
    c657:	e8 c4 6f ff ff       	call   3620 <glfwWindowShouldClose@plt>
    c65c:	85 c0                	test   %eax,%eax
    c65e:	0f 94 c0             	sete   %al
    c661:	84 c0                	test   %al,%al
    c663:	0f 85 40 ff ff ff    	jne    c5a9 <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    c669:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c670:	48 8b 40 50          	mov    0x50(%rax),%rax
    c674:	48 89 c7             	mov    %rax,%rdi
    c677:	e8 14 6a ff ff       	call   3090 <vkDeviceWaitIdle@plt>
}
    c67c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c680:	48 89 c7             	mov    %rax,%rdi
    c683:	e8 76 1e 00 00       	call   e4fe <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    c688:	eb 2b                	jmp    c6b5 <_ZN9VulkanApp3runEv+0x13d>
  }
    c68a:	48 89 c3             	mov    %rax,%rbx
    c68d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    c691:	48 89 c7             	mov    %rax,%rdi
    c694:	e8 65 1e 00 00       	call   e4fe <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    c699:	eb 03                	jmp    c69e <_ZN9VulkanApp3runEv+0x126>
}
    c69b:	48 89 c3             	mov    %rax,%rbx
    c69e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c6a2:	48 89 c7             	mov    %rax,%rdi
    c6a5:	e8 54 1e 00 00       	call   e4fe <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    c6aa:	48 89 d8             	mov    %rbx,%rax
    c6ad:	48 89 c7             	mov    %rax,%rdi
    c6b0:	e8 1b 6f ff ff       	call   35d0 <_Unwind_Resume@plt>
    c6b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6b9:	c9                   	leave
    c6ba:	c3                   	ret
    c6bb:	90                   	nop

000000000000c6bc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    c6bc:	55                   	push   %rbp
    c6bd:	48 89 e5             	mov    %rsp,%rbp
    c6c0:	41 54                	push   %r12
    c6c2:	53                   	push   %rbx
    c6c3:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    c6ca:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    c6d1:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    c6d8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c6df:	48 89 c7             	mov    %rax,%rdi
    c6e2:	e8 39 6d ff ff       	call   3420 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    c6e7:	be 10 00 00 00       	mov    $0x10,%esi
    c6ec:	bf 08 00 00 00       	mov    $0x8,%edi
    c6f1:	e8 cd 0e 00 00       	call   d5c3 <_ZStorSt13_Ios_OpenmodeS_>
    c6f6:	89 c2                	mov    %eax,%edx
    c6f8:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    c6ff:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c706:	48 89 ce             	mov    %rcx,%rsi
    c709:	48 89 c7             	mov    %rax,%rdi
    c70c:	e8 9f 6d ff ff       	call   34b0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    c711:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c718:	48 89 c7             	mov    %rax,%rdi
    c71b:	e8 80 6e ff ff       	call   35a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    c720:	83 f0 01             	xor    $0x1,%eax
    c723:	84 c0                	test   %al,%al
    c725:	0f 84 97 00 00 00    	je     c7c2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    c72b:	bf 10 00 00 00       	mov    $0x10,%edi
    c730:	e8 0b 6a ff ff       	call   3140 <__cxa_allocate_exception@plt>
    c735:	48 89 c3             	mov    %rax,%rbx
    c738:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    c73f:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    c746:	48 8d 0d 75 8c 00 00 	lea    0x8c75(%rip),%rcx        # 153c2 <_ZN6__pstl9execution2v1L5unseqE+0x113>
    c74d:	48 89 ce             	mov    %rcx,%rsi
    c750:	48 89 c7             	mov    %rax,%rdi
    c753:	e8 60 1e 00 00       	call   e5b8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    c758:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    c75f:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    c766:	ba 0a 00 00 00       	mov    $0xa,%edx
    c76b:	48 89 ce             	mov    %rcx,%rsi
    c76e:	48 89 c7             	mov    %rax,%rdi
    c771:	e8 44 1f 00 00       	call   e6ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    c776:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    c77d:	48 89 c6             	mov    %rax,%rsi
    c780:	48 89 df             	mov    %rbx,%rdi
    c783:	e8 c8 6d ff ff       	call   3550 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    c788:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    c78f:	48 89 c7             	mov    %rax,%rdi
    c792:	e8 09 6a ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    c797:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    c79e:	48 89 c7             	mov    %rax,%rdi
    c7a1:	e8 fa 69 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    c7a6:	48 8b 05 fb 37 01 00 	mov    0x137fb(%rip),%rax        # 1ffa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    c7ad:	48 89 c2             	mov    %rax,%rdx
    c7b0:	48 8d 05 89 35 01 00 	lea    0x13589(%rip),%rax        # 1fd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    c7b7:	48 89 c6             	mov    %rax,%rsi
    c7ba:	48 89 df             	mov    %rbx,%rdi
    c7bd:	e8 be 6d ff ff       	call   3580 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    c7c2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c7c9:	48 83 c0 10          	add    $0x10,%rax
    c7cd:	48 8d 15 fe 8b 00 00 	lea    0x8bfe(%rip),%rdx        # 153d2 <_ZN6__pstl9execution2v1L5unseqE+0x123>
    c7d4:	48 89 d6             	mov    %rdx,%rsi
    c7d7:	48 89 c7             	mov    %rax,%rdi
    c7da:	e8 11 6b ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    c7df:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c7e6:	48 83 c0 10          	add    $0x10,%rax
    c7ea:	48 8d 15 fa 8b 00 00 	lea    0x8bfa(%rip),%rdx        # 153eb <_ZN6__pstl9execution2v1L5unseqE+0x13c>
    c7f1:	48 89 d6             	mov    %rdx,%rsi
    c7f4:	48 89 c7             	mov    %rax,%rdi
    c7f7:	e8 f4 6a ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    c7fc:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    c803:	be 00 00 00 00       	mov    $0x0,%esi
    c808:	48 89 c7             	mov    %rax,%rdi
    c80b:	e8 b6 84 ff ff       	call   4cc6 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    c810:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    c817:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    c81b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c81f:	48 89 c7             	mov    %rax,%rdi
    c822:	e8 e7 15 00 00       	call   de0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    c827:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    c82e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c832:	48 89 c7             	mov    %rax,%rdi
    c835:	e8 fa 15 00 00       	call   de34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    c83a:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    c841:	eb 64                	jmp    c8a7 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    c843:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    c84a:	48 89 c7             	mov    %rax,%rdi
    c84d:	e8 6a 16 00 00       	call   debc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c852:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    c859:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c860:	48 83 c0 10          	add    $0x10,%rax
    c864:	48 8d 15 91 8b 00 00 	lea    0x8b91(%rip),%rdx        # 153fc <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    c86b:	48 89 d6             	mov    %rdx,%rsi
    c86e:	48 89 c7             	mov    %rax,%rdi
    c871:	e8 7a 6a ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c876:	48 89 c2             	mov    %rax,%rdx
    c879:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    c880:	48 89 c6             	mov    %rax,%rsi
    c883:	48 89 d7             	mov    %rdx,%rdi
    c886:	e8 65 6a ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c88b:	be 0a 00 00 00       	mov    $0xa,%esi
    c890:	48 89 c7             	mov    %rax,%rdi
    c893:	e8 68 6b ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    c898:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    c89f:	48 89 c7             	mov    %rax,%rdi
    c8a2:	e8 f1 15 00 00       	call   de98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c8a7:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    c8ae:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    c8b5:	48 89 d6             	mov    %rdx,%rsi
    c8b8:	48 89 c7             	mov    %rax,%rdi
    c8bb:	e8 9d 15 00 00       	call   de5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c8c0:	84 c0                	test   %al,%al
    c8c2:	0f 85 7b ff ff ff    	jne    c843 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    c8c8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c8cf:	48 83 c0 10          	add    $0x10,%rax
    c8d3:	48 8d 15 25 8b 00 00 	lea    0x8b25(%rip),%rdx        # 153ff <_ZN6__pstl9execution2v1L5unseqE+0x150>
    c8da:	48 89 d6             	mov    %rdx,%rsi
    c8dd:	48 89 c7             	mov    %rax,%rdi
    c8e0:	e8 0b 6a ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    c8e5:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    c8ec:	48 83 c0 10          	add    $0x10,%rax
    c8f0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c8f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c8f8:	48 89 c7             	mov    %rax,%rdi
    c8fb:	e8 6c 10 00 00       	call   d96c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    c900:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    c907:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c90b:	48 89 c7             	mov    %rax,%rdi
    c90e:	e8 7f 10 00 00       	call   d992 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    c913:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    c91a:	eb 67                	jmp    c983 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    c91c:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    c923:	48 89 c7             	mov    %rax,%rdi
    c926:	e8 eb 10 00 00       	call   da16 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    c92b:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    c932:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c939:	48 83 c0 10          	add    $0x10,%rax
    c93d:	48 8d 15 b8 8a 00 00 	lea    0x8ab8(%rip),%rdx        # 153fc <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    c944:	48 89 d6             	mov    %rdx,%rsi
    c947:	48 89 c7             	mov    %rax,%rdi
    c94a:	e8 a1 69 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c94f:	48 89 c2             	mov    %rax,%rdx
    c952:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c959:	48 8b 00             	mov    (%rax),%rax
    c95c:	48 89 c6             	mov    %rax,%rsi
    c95f:	48 89 d7             	mov    %rdx,%rdi
    c962:	e8 89 69 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c967:	be 0a 00 00 00       	mov    $0xa,%esi
    c96c:	48 89 c7             	mov    %rax,%rdi
    c96f:	e8 8c 6a ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    c974:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    c97b:	48 89 c7             	mov    %rax,%rdi
    c97e:	e8 73 10 00 00       	call   d9f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    c983:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    c98a:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    c991:	48 89 d6             	mov    %rdx,%rsi
    c994:	48 89 c7             	mov    %rax,%rdi
    c997:	e8 1f 10 00 00       	call   d9bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    c99c:	84 c0                	test   %al,%al
    c99e:	0f 85 78 ff ff ff    	jne    c91c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    c9a4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c9ab:	48 83 c0 10          	add    $0x10,%rax
    c9af:	be 0a 00 00 00       	mov    $0xa,%esi
    c9b4:	48 89 c7             	mov    %rax,%rdi
    c9b7:	e8 44 6a ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    c9bc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c9c3:	48 83 c0 10          	add    $0x10,%rax
    c9c7:	48 8d 15 41 8a 00 00 	lea    0x8a41(%rip),%rdx        # 1540f <_ZN6__pstl9execution2v1L5unseqE+0x160>
    c9ce:	48 89 d6             	mov    %rdx,%rsi
    c9d1:	48 89 c7             	mov    %rax,%rdi
    c9d4:	e8 17 69 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    c9d9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    c9e0:	48 83 c0 10          	add    $0x10,%rax
    c9e4:	48 8d 15 39 8a 00 00 	lea    0x8a39(%rip),%rdx        # 15424 <_ZN6__pstl9execution2v1L5unseqE+0x175>
    c9eb:	48 89 d6             	mov    %rdx,%rsi
    c9ee:	48 89 c7             	mov    %rax,%rdi
    c9f1:	e8 fa 68 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    c9f6:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    c9fd:	48 89 c7             	mov    %rax,%rdi
    ca00:	e8 5b 86 ff ff       	call   5060 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    ca05:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    ca0c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ca10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ca14:	48 89 c7             	mov    %rax,%rdi
    ca17:	e8 3e e1 ff ff       	call   ab5a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    ca1c:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    ca23:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ca27:	48 89 c7             	mov    %rax,%rdi
    ca2a:	e8 51 e1 ff ff       	call   ab80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    ca2f:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    ca36:	eb 5e                	jmp    ca96 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    ca38:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    ca3f:	48 89 c7             	mov    %rax,%rdi
    ca42:	e8 c1 e1 ff ff       	call   ac08 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    ca47:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    ca4b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ca52:	48 83 c0 10          	add    $0x10,%rax
    ca56:	48 8d 15 9f 89 00 00 	lea    0x899f(%rip),%rdx        # 153fc <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    ca5d:	48 89 d6             	mov    %rdx,%rsi
    ca60:	48 89 c7             	mov    %rax,%rdi
    ca63:	e8 88 68 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ca68:	48 89 c2             	mov    %rax,%rdx
    ca6b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ca6f:	48 89 c6             	mov    %rax,%rsi
    ca72:	48 89 d7             	mov    %rdx,%rdi
    ca75:	e8 76 68 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ca7a:	be 0a 00 00 00       	mov    $0xa,%esi
    ca7f:	48 89 c7             	mov    %rax,%rdi
    ca82:	e8 79 69 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    ca87:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    ca8e:	48 89 c7             	mov    %rax,%rdi
    ca91:	e8 4e e1 ff ff       	call   abe4 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    ca96:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    ca9d:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    caa4:	48 89 d6             	mov    %rdx,%rsi
    caa7:	48 89 c7             	mov    %rax,%rdi
    caaa:	e8 fa e0 ff ff       	call   aba9 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    caaf:	84 c0                	test   %al,%al
    cab1:	75 85                	jne    ca38 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    cab3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    caba:	48 83 c0 10          	add    $0x10,%rax
    cabe:	48 8d 15 70 89 00 00 	lea    0x8970(%rip),%rdx        # 15435 <_ZN6__pstl9execution2v1L5unseqE+0x186>
    cac5:	48 89 d6             	mov    %rdx,%rsi
    cac8:	48 89 c7             	mov    %rax,%rdi
    cacb:	e8 20 68 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    cad0:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    cad7:	48 83 c0 28          	add    $0x28,%rax
    cadb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    cadf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cae3:	48 89 c7             	mov    %rax,%rdi
    cae6:	e8 19 1c 00 00       	call   e704 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    caeb:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    caf2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    caf6:	48 89 c7             	mov    %rax,%rdi
    caf9:	e8 2c 1c 00 00       	call   e72a <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    cafe:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    cb05:	eb 61                	jmp    cb68 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    cb07:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    cb0e:	48 89 c7             	mov    %rax,%rdi
    cb11:	e8 98 1c 00 00       	call   e7ae <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    cb16:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    cb1a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cb21:	48 83 c0 10          	add    $0x10,%rax
    cb25:	48 8d 15 d0 88 00 00 	lea    0x88d0(%rip),%rdx        # 153fc <_ZN6__pstl9execution2v1L5unseqE+0x14d>
    cb2c:	48 89 d6             	mov    %rdx,%rsi
    cb2f:	48 89 c7             	mov    %rax,%rdi
    cb32:	e8 b9 67 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cb37:	48 89 c2             	mov    %rax,%rdx
    cb3a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    cb3e:	48 8b 00             	mov    (%rax),%rax
    cb41:	48 89 c6             	mov    %rax,%rsi
    cb44:	48 89 d7             	mov    %rdx,%rdi
    cb47:	e8 a4 67 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cb4c:	be 0a 00 00 00       	mov    $0xa,%esi
    cb51:	48 89 c7             	mov    %rax,%rdi
    cb54:	e8 a7 68 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    cb59:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    cb60:	48 89 c7             	mov    %rax,%rdi
    cb63:	e8 26 1c 00 00       	call   e78e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    cb68:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    cb6f:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    cb76:	48 89 d6             	mov    %rdx,%rsi
    cb79:	48 89 c7             	mov    %rax,%rdi
    cb7c:	e8 d2 1b 00 00       	call   e753 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    cb81:	84 c0                	test   %al,%al
    cb83:	75 82                	jne    cb07 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    cb85:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cb8c:	48 83 c0 10          	add    $0x10,%rax
    cb90:	be 0a 00 00 00       	mov    $0xa,%esi
    cb95:	48 89 c7             	mov    %rax,%rdi
    cb98:	e8 63 68 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    cb9d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cba4:	48 83 c0 10          	add    $0x10,%rax
    cba8:	48 8d 15 96 88 00 00 	lea    0x8896(%rip),%rdx        # 15445 <_ZN6__pstl9execution2v1L5unseqE+0x196>
    cbaf:	48 89 d6             	mov    %rdx,%rsi
    cbb2:	48 89 c7             	mov    %rax,%rdi
    cbb5:	e8 36 67 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    cbba:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    cbc1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    cbc5:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    cbcc:	48 89 d6             	mov    %rdx,%rsi
    cbcf:	48 89 c7             	mov    %rax,%rdi
    cbd2:	e8 35 85 ff ff       	call   510c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    cbd7:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    cbde:	48 8b 50 58          	mov    0x58(%rax),%rdx
    cbe2:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    cbe9:	48 89 d6             	mov    %rdx,%rsi
    cbec:	48 89 c7             	mov    %rax,%rdi
    cbef:	e8 87 86 ff ff       	call   527b <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    cbf4:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    cbfb:	00 
  size_t selectedDeviceIndex = 0;
    cbfc:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    cc03:	00 
  for (const auto &physDev : physicalDeviceList) {
    cc04:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    cc0b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    cc0f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cc13:	48 89 c7             	mov    %rax,%rdi
    cc16:	e8 21 10 00 00       	call   dc3c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    cc1b:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    cc22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cc26:	48 89 c7             	mov    %rax,%rdi
    cc29:	e8 34 10 00 00       	call   dc62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    cc2e:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    cc35:	e9 c7 06 00 00       	jmp    d301 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    cc3a:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    cc41:	48 89 c7             	mov    %rax,%rdi
    cc44:	e8 9d 10 00 00       	call   dce6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    cc49:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    cc4d:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    cc54:	48 89 c7             	mov    %rax,%rdi
    cc57:	e8 84 69 ff ff       	call   35e0 <_ZNSaIcEC1Ev@plt>
    cc5c:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    cc63:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    cc6a:	48 8d 0d ea 87 00 00 	lea    0x87ea(%rip),%rcx        # 1545b <_ZN6__pstl9execution2v1L5unseqE+0x1ac>
    cc71:	48 89 ce             	mov    %rcx,%rsi
    cc74:	48 89 c7             	mov    %rax,%rdi
    cc77:	e8 a4 6d ff ff       	call   3a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    cc7c:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    cc83:	48 89 c7             	mov    %rax,%rdi
    cc86:	e8 15 67 ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    cc8b:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    cc92:	b8 00 00 00 00       	mov    $0x0,%eax
    cc97:	b9 0e 00 00 00       	mov    $0xe,%ecx
    cc9c:	48 89 d7             	mov    %rdx,%rdi
    cc9f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    cca2:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    cca9:	00 00 00 
    vk11Props.pNext = nullptr;
    ccac:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    ccb3:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    ccb7:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    ccbe:	b8 00 00 00 00       	mov    $0x0,%eax
    ccc3:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    ccc8:	48 89 d7             	mov    %rdx,%rdi
    cccb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    ccce:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    ccd5:	00 00 00 
    vk12Props.pNext = &vk11Props;
    ccd8:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    ccdf:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    cce6:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    cced:	b8 00 00 00 00       	mov    $0x0,%eax
    ccf2:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    ccf7:	48 89 d7             	mov    %rdx,%rdi
    ccfa:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    ccfd:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    cd04:	00 00 00 
    vk13Props.pNext = &vk12Props;
    cd07:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    cd0e:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    cd15:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    cd19:	48 8b 08             	mov    (%rax),%rcx
    cd1c:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    cd23:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    cd2a:	48 89 ce             	mov    %rcx,%rsi
    cd2d:	48 89 c7             	mov    %rax,%rdi
    cd30:	e8 70 85 ff ff       	call   52a5 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    cd35:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    cd3b:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    cd41:	39 c2                	cmp    %eax,%edx
    cd43:	75 08                	jne    cd4d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    cd45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd49:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    cd4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cd51:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    cd55:	75 19                	jne    cd70 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    cd57:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    cd5e:	48 8d 15 f7 86 00 00 	lea    0x86f7(%rip),%rdx        # 1545c <_ZN6__pstl9execution2v1L5unseqE+0x1ad>
    cd65:	48 89 d6             	mov    %rdx,%rsi
    cd68:	48 89 c7             	mov    %rax,%rdi
    cd6b:	e8 30 67 ff ff       	call   34a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    cd70:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cd77:	48 83 c0 10          	add    $0x10,%rax
    cd7b:	48 8d 15 e6 86 00 00 	lea    0x86e6(%rip),%rdx        # 15468 <_ZN6__pstl9execution2v1L5unseqE+0x1b9>
    cd82:	48 89 d6             	mov    %rdx,%rsi
    cd85:	48 89 c7             	mov    %rax,%rdi
    cd88:	e8 63 65 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cd8d:	48 89 c2             	mov    %rax,%rdx
    cd90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd94:	48 89 c6             	mov    %rax,%rsi
    cd97:	48 89 d7             	mov    %rdx,%rdi
    cd9a:	e8 e1 62 ff ff       	call   3080 <_ZNSolsEm@plt>
    cd9f:	48 89 c2             	mov    %rax,%rdx
    cda2:	48 8d 05 c3 86 00 00 	lea    0x86c3(%rip),%rax        # 1546c <_ZN6__pstl9execution2v1L5unseqE+0x1bd>
    cda9:	48 89 c6             	mov    %rax,%rsi
    cdac:	48 89 d7             	mov    %rdx,%rdi
    cdaf:	e8 3c 65 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cdb4:	48 89 c2             	mov    %rax,%rdx
    cdb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdbb:	48 89 c6             	mov    %rax,%rsi
    cdbe:	48 89 d7             	mov    %rdx,%rdi
    cdc1:	e8 ba 62 ff ff       	call   3080 <_ZNSolsEm@plt>
    cdc6:	48 89 c2             	mov    %rax,%rdx
    cdc9:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    cdd0:	48 89 c6             	mov    %rax,%rsi
    cdd3:	48 89 d7             	mov    %rdx,%rdi
    cdd6:	e8 c5 64 ff ff       	call   32a0 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    cddb:	48 89 c2             	mov    %rax,%rdx
    cdde:	48 8d 05 90 86 00 00 	lea    0x8690(%rip),%rax        # 15475 <_ZN6__pstl9execution2v1L5unseqE+0x1c6>
    cde5:	48 89 c6             	mov    %rax,%rsi
    cde8:	48 89 d7             	mov    %rdx,%rdi
    cdeb:	e8 00 65 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    cdf0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cdf7:	48 83 c0 10          	add    $0x10,%rax
    cdfb:	48 8d 15 76 86 00 00 	lea    0x8676(%rip),%rdx        # 15478 <_ZN6__pstl9execution2v1L5unseqE+0x1c9>
    ce02:	48 89 d6             	mov    %rdx,%rsi
    ce05:	48 89 c7             	mov    %rax,%rdi
    ce08:	e8 e3 64 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ce0d:	48 89 c2             	mov    %rax,%rdx
    ce10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce14:	48 89 c6             	mov    %rax,%rsi
    ce17:	48 89 d7             	mov    %rdx,%rdi
    ce1a:	e8 61 62 ff ff       	call   3080 <_ZNSolsEm@plt>
    ce1f:	48 89 c2             	mov    %rax,%rdx
    ce22:	48 8d 05 54 86 00 00 	lea    0x8654(%rip),%rax        # 1547d <_ZN6__pstl9execution2v1L5unseqE+0x1ce>
    ce29:	48 89 c6             	mov    %rax,%rsi
    ce2c:	48 89 d7             	mov    %rdx,%rdi
    ce2f:	e8 bc 64 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    ce34:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ce3b:	48 83 c0 10          	add    $0x10,%rax
    ce3f:	48 8d 15 4e 86 00 00 	lea    0x864e(%rip),%rdx        # 15494 <_ZN6__pstl9execution2v1L5unseqE+0x1e5>
    ce46:	48 89 d6             	mov    %rdx,%rsi
    ce49:	48 89 c7             	mov    %rax,%rdi
    ce4c:	e8 9f 64 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ce51:	48 89 c2             	mov    %rax,%rdx
    ce54:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    ce5a:	89 c6                	mov    %eax,%esi
    ce5c:	48 89 d7             	mov    %rdx,%rdi
    ce5f:	e8 2c 66 ff ff       	call   3490 <_ZNSolsEj@plt>
    ce64:	be 0a 00 00 00       	mov    $0xa,%esi
    ce69:	48 89 c7             	mov    %rax,%rdi
    ce6c:	e8 8f 65 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    ce71:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ce78:	48 83 c0 10          	add    $0x10,%rax
    ce7c:	48 8d 15 20 86 00 00 	lea    0x8620(%rip),%rdx        # 154a3 <_ZN6__pstl9execution2v1L5unseqE+0x1f4>
    ce83:	48 89 d6             	mov    %rdx,%rsi
    ce86:	48 89 c7             	mov    %rax,%rdi
    ce89:	e8 62 64 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    ce8e:	48 89 c2             	mov    %rax,%rdx
    ce91:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    ce98:	48 83 c0 24          	add    $0x24,%rax
    ce9c:	48 89 c6             	mov    %rax,%rsi
    ce9f:	48 89 d7             	mov    %rdx,%rdi
    cea2:	e8 49 64 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cea7:	be 0a 00 00 00       	mov    $0xa,%esi
    ceac:	48 89 c7             	mov    %rax,%rdi
    ceaf:	e8 4c 65 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    ceb4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cebb:	48 83 c0 10          	add    $0x10,%rax
    cebf:	48 8d 15 ee 85 00 00 	lea    0x85ee(%rip),%rdx        # 154b4 <_ZN6__pstl9execution2v1L5unseqE+0x205>
    cec6:	48 89 d6             	mov    %rdx,%rsi
    cec9:	48 89 c7             	mov    %rax,%rdi
    cecc:	e8 1f 64 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    ced1:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    ced7:	83 f8 04             	cmp    $0x4,%eax
    ceda:	0f 84 80 00 00 00    	je     cf60 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    cee0:	83 f8 04             	cmp    $0x4,%eax
    cee3:	0f 8f 96 00 00 00    	jg     cf7f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    cee9:	83 f8 03             	cmp    $0x3,%eax
    ceec:	74 53                	je     cf41 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    ceee:	83 f8 03             	cmp    $0x3,%eax
    cef1:	0f 8f 88 00 00 00    	jg     cf7f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    cef7:	83 f8 01             	cmp    $0x1,%eax
    cefa:	74 07                	je     cf03 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    cefc:	83 f8 02             	cmp    $0x2,%eax
    ceff:	74 21                	je     cf22 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    cf01:	eb 7c                	jmp    cf7f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    cf03:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cf0a:	48 83 c0 10          	add    $0x10,%rax
    cf0e:	48 8d 15 b0 85 00 00 	lea    0x85b0(%rip),%rdx        # 154c5 <_ZN6__pstl9execution2v1L5unseqE+0x216>
    cf15:	48 89 d6             	mov    %rdx,%rsi
    cf18:	48 89 c7             	mov    %rax,%rdi
    cf1b:	e8 d0 63 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    cf20:	eb 7b                	jmp    cf9d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    cf22:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cf29:	48 83 c0 10          	add    $0x10,%rax
    cf2d:	48 8d 15 a1 85 00 00 	lea    0x85a1(%rip),%rdx        # 154d5 <_ZN6__pstl9execution2v1L5unseqE+0x226>
    cf34:	48 89 d6             	mov    %rdx,%rsi
    cf37:	48 89 c7             	mov    %rax,%rdi
    cf3a:	e8 b1 63 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    cf3f:	eb 5c                	jmp    cf9d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    cf41:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cf48:	48 83 c0 10          	add    $0x10,%rax
    cf4c:	48 8d 15 90 85 00 00 	lea    0x8590(%rip),%rdx        # 154e3 <_ZN6__pstl9execution2v1L5unseqE+0x234>
    cf53:	48 89 d6             	mov    %rdx,%rsi
    cf56:	48 89 c7             	mov    %rax,%rdi
    cf59:	e8 92 63 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    cf5e:	eb 3d                	jmp    cf9d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    cf60:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cf67:	48 83 c0 10          	add    $0x10,%rax
    cf6b:	48 8d 15 7e 85 00 00 	lea    0x857e(%rip),%rdx        # 154f0 <_ZN6__pstl9execution2v1L5unseqE+0x241>
    cf72:	48 89 d6             	mov    %rdx,%rsi
    cf75:	48 89 c7             	mov    %rax,%rdi
    cf78:	e8 73 63 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    cf7d:	eb 1e                	jmp    cf9d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    cf7f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cf86:	48 83 c0 10          	add    $0x10,%rax
    cf8a:	48 8d 15 64 85 00 00 	lea    0x8564(%rip),%rdx        # 154f5 <_ZN6__pstl9execution2v1L5unseqE+0x246>
    cf91:	48 89 d6             	mov    %rdx,%rsi
    cf94:	48 89 c7             	mov    %rax,%rdi
    cf97:	e8 54 63 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    cf9c:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    cf9d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cfa4:	48 83 c0 10          	add    $0x10,%rax
    cfa8:	48 8d 15 4d 85 00 00 	lea    0x854d(%rip),%rdx        # 154fc <_ZN6__pstl9execution2v1L5unseqE+0x24d>
    cfaf:	48 89 d6             	mov    %rdx,%rsi
    cfb2:	48 89 c7             	mov    %rax,%rdi
    cfb5:	e8 36 63 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cfba:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    cfc0:	89 d6                	mov    %edx,%esi
    cfc2:	48 89 c7             	mov    %rax,%rdi
    cfc5:	e8 e6 65 ff ff       	call   35b0 <_ZNSolsEi@plt>
    cfca:	be 0a 00 00 00       	mov    $0xa,%esi
    cfcf:	48 89 c7             	mov    %rax,%rdi
    cfd2:	e8 29 64 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    cfd7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    cfde:	48 83 c0 10          	add    $0x10,%rax
    cfe2:	48 8d 15 22 85 00 00 	lea    0x8522(%rip),%rdx        # 1550b <_ZN6__pstl9execution2v1L5unseqE+0x25c>
    cfe9:	48 89 d6             	mov    %rdx,%rsi
    cfec:	48 89 c7             	mov    %rax,%rdi
    cfef:	e8 fc 62 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cff4:	48 89 c2             	mov    %rax,%rdx
    cff7:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    cffe:	48 83 c0 14          	add    $0x14,%rax
    d002:	48 89 c6             	mov    %rax,%rsi
    d005:	48 89 d7             	mov    %rdx,%rdi
    d008:	e8 e3 62 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d00d:	be 0a 00 00 00       	mov    $0xa,%esi
    d012:	48 89 c7             	mov    %rax,%rdi
    d015:	e8 e6 63 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    d01a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d021:	48 83 c0 10          	add    $0x10,%rax
    d025:	48 8d 15 f0 84 00 00 	lea    0x84f0(%rip),%rdx        # 1551c <_ZN6__pstl9execution2v1L5unseqE+0x26d>
    d02c:	48 89 d6             	mov    %rdx,%rsi
    d02f:	48 89 c7             	mov    %rax,%rdi
    d032:	e8 b9 62 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d037:	48 89 c2             	mov    %rax,%rdx
    d03a:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    d041:	48 05 14 01 00 00    	add    $0x114,%rax
    d047:	48 89 c6             	mov    %rax,%rsi
    d04a:	48 89 d7             	mov    %rdx,%rdi
    d04d:	e8 9e 62 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d052:	be 0a 00 00 00       	mov    $0xa,%esi
    d057:	48 89 c7             	mov    %rax,%rdi
    d05a:	e8 a1 63 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    d05f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d066:	48 83 c0 10          	add    $0x10,%rax
    d06a:	48 8d 15 bf 84 00 00 	lea    0x84bf(%rip),%rdx        # 15530 <_ZN6__pstl9execution2v1L5unseqE+0x281>
    d071:	48 89 d6             	mov    %rdx,%rsi
    d074:	48 89 c7             	mov    %rax,%rdi
    d077:	e8 74 62 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d07c:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    d07f:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    d086:	48 89 c6             	mov    %rax,%rsi
    d089:	48 89 d7             	mov    %rdx,%rdi
    d08c:	e8 ef 5f ff ff       	call   3080 <_ZNSolsEm@plt>
    d091:	be 0a 00 00 00       	mov    $0xa,%esi
    d096:	48 89 c7             	mov    %rax,%rdi
    d099:	e8 62 63 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    d09e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d0a5:	48 83 c0 10          	add    $0x10,%rax
    d0a9:	48 8d 15 c8 83 00 00 	lea    0x83c8(%rip),%rdx        # 15478 <_ZN6__pstl9execution2v1L5unseqE+0x1c9>
    d0b0:	48 89 d6             	mov    %rdx,%rsi
    d0b3:	48 89 c7             	mov    %rax,%rdi
    d0b6:	e8 35 62 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d0bb:	48 89 c2             	mov    %rax,%rdx
    d0be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0c2:	48 89 c6             	mov    %rax,%rsi
    d0c5:	48 89 d7             	mov    %rdx,%rdi
    d0c8:	e8 b3 5f ff ff       	call   3080 <_ZNSolsEm@plt>
    d0cd:	48 89 c2             	mov    %rax,%rdx
    d0d0:	48 8d 05 81 84 00 00 	lea    0x8481(%rip),%rax        # 15558 <_ZN6__pstl9execution2v1L5unseqE+0x2a9>
    d0d7:	48 89 c6             	mov    %rax,%rsi
    d0da:	48 89 d7             	mov    %rdx,%rdi
    d0dd:	e8 0e 62 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    d0e2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d0e6:	48 8b 08             	mov    (%rax),%rcx
    d0e9:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    d0f0:	ba 00 00 00 00       	mov    $0x0,%edx
    d0f5:	48 89 ce             	mov    %rcx,%rsi
    d0f8:	48 89 c7             	mov    %rax,%rdi
    d0fb:	e8 37 7d ff ff       	call   4e37 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    d100:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    d107:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    d10b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d10f:	48 89 c7             	mov    %rax,%rdi
    d112:	e8 f7 0c 00 00       	call   de0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d117:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
    d11e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d122:	48 89 c7             	mov    %rax,%rdi
    d125:	e8 0a 0d 00 00       	call   de34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d12a:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
    d131:	eb 5e                	jmp    d191 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
    d133:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    d13a:	48 89 c7             	mov    %rax,%rdi
    d13d:	e8 7a 0d 00 00       	call   debc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d142:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
    d146:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d14d:	48 83 c0 10          	add    $0x10,%rax
    d151:	48 8d 15 21 84 00 00 	lea    0x8421(%rip),%rdx        # 15579 <_ZN6__pstl9execution2v1L5unseqE+0x2ca>
    d158:	48 89 d6             	mov    %rdx,%rsi
    d15b:	48 89 c7             	mov    %rax,%rdi
    d15e:	e8 8d 61 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d163:	48 89 c2             	mov    %rax,%rdx
    d166:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d16a:	48 89 c6             	mov    %rax,%rsi
    d16d:	48 89 d7             	mov    %rdx,%rdi
    d170:	e8 7b 61 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d175:	be 0a 00 00 00       	mov    $0xa,%esi
    d17a:	48 89 c7             	mov    %rax,%rdi
    d17d:	e8 7e 62 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
    d182:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    d189:	48 89 c7             	mov    %rax,%rdi
    d18c:	e8 07 0d 00 00       	call   de98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d191:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
    d198:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    d19f:	48 89 d6             	mov    %rdx,%rsi
    d1a2:	48 89 c7             	mov    %rax,%rdi
    d1a5:	e8 b3 0c 00 00       	call   de5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d1aa:	84 c0                	test   %al,%al
    d1ac:	75 85                	jne    d133 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
    d1ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d1b2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    d1b6:	0f 85 fb 00 00 00    	jne    d2b7 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
    d1bc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d1c3:	48 83 c0 10          	add    $0x10,%rax
    d1c7:	48 8d 15 aa 82 00 00 	lea    0x82aa(%rip),%rdx        # 15478 <_ZN6__pstl9execution2v1L5unseqE+0x1c9>
    d1ce:	48 89 d6             	mov    %rdx,%rsi
    d1d1:	48 89 c7             	mov    %rax,%rdi
    d1d4:	e8 17 61 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d1d9:	48 89 c2             	mov    %rax,%rdx
    d1dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1e0:	48 89 c6             	mov    %rax,%rsi
    d1e3:	48 89 d7             	mov    %rdx,%rdi
    d1e6:	e8 95 5e ff ff       	call   3080 <_ZNSolsEm@plt>
    d1eb:	48 89 c2             	mov    %rax,%rdx
    d1ee:	48 8d 05 8b 83 00 00 	lea    0x838b(%rip),%rax        # 15580 <_ZN6__pstl9execution2v1L5unseqE+0x2d1>
    d1f5:	48 89 c6             	mov    %rax,%rsi
    d1f8:	48 89 d7             	mov    %rdx,%rdi
    d1fb:	e8 f0 60 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
    d200:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    d207:	48 05 88 00 00 00    	add    $0x88,%rax
    d20d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    d211:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d215:	48 89 c7             	mov    %rax,%rdi
    d218:	e8 4f 07 00 00       	call   d96c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d21d:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
    d224:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    d228:	48 89 c7             	mov    %rax,%rdi
    d22b:	e8 62 07 00 00       	call   d992 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d230:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
    d237:	eb 61                	jmp    d29a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
    d239:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    d240:	48 89 c7             	mov    %rax,%rdi
    d243:	e8 ce 07 00 00       	call   da16 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d248:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
    d24c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d253:	48 83 c0 10          	add    $0x10,%rax
    d257:	48 8d 15 1b 83 00 00 	lea    0x831b(%rip),%rdx        # 15579 <_ZN6__pstl9execution2v1L5unseqE+0x2ca>
    d25e:	48 89 d6             	mov    %rdx,%rsi
    d261:	48 89 c7             	mov    %rax,%rdi
    d264:	e8 87 60 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d269:	48 89 c2             	mov    %rax,%rdx
    d26c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d270:	48 8b 00             	mov    (%rax),%rax
    d273:	48 89 c6             	mov    %rax,%rsi
    d276:	48 89 d7             	mov    %rdx,%rdi
    d279:	e8 72 60 ff ff       	call   32f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    d27e:	be 0a 00 00 00       	mov    $0xa,%esi
    d283:	48 89 c7             	mov    %rax,%rdi
    d286:	e8 75 61 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
    d28b:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    d292:	48 89 c7             	mov    %rax,%rdi
    d295:	e8 5c 07 00 00       	call   d9f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d29a:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
    d2a1:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    d2a8:	48 89 d6             	mov    %rdx,%rsi
    d2ab:	48 89 c7             	mov    %rax,%rdi
    d2ae:	e8 08 07 00 00       	call   d9bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d2b3:	84 c0                	test   %al,%al
    d2b5:	75 82                	jne    d239 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
    d2b7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d2be:	48 83 c0 10          	add    $0x10,%rax
    d2c2:	be 0a 00 00 00       	mov    $0xa,%esi
    d2c7:	48 89 c7             	mov    %rax,%rdi
    d2ca:	e8 31 61 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
    d2cf:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
    d2d4:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    d2db:	48 89 c7             	mov    %rax,%rdi
    d2de:	e8 c9 8c ff ff       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d2e3:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    d2ea:	48 89 c7             	mov    %rax,%rdi
    d2ed:	e8 ae 5e ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
    d2f2:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    d2f9:	48 89 c7             	mov    %rax,%rdi
    d2fc:	e8 c5 09 00 00       	call   dcc6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d301:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    d308:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    d30f:	48 89 d6             	mov    %rdx,%rsi
    d312:	48 89 c7             	mov    %rax,%rdi
    d315:	e8 71 09 00 00       	call   dc8b <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d31a:	84 c0                	test   %al,%al
    d31c:	0f 85 18 f9 ff ff    	jne    cc3a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
    d322:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d329:	48 83 c0 10          	add    $0x10,%rax
    d32d:	be 0a 00 00 00       	mov    $0xa,%esi
    d332:	48 89 c7             	mov    %rax,%rdi
    d335:	e8 c6 60 ff ff       	call   3400 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    d33a:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    d341:	48 89 c7             	mov    %rax,%rdi
    d344:	e8 ed 8e ff ff       	call   6236 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d349:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    d350:	48 89 c7             	mov    %rax,%rdi
    d353:	e8 e6 8a ff ff       	call   5e3e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    d358:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    d35f:	48 89 c7             	mov    %rax,%rdi
    d362:	e8 45 8c ff ff       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d367:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d36e:	48 89 c7             	mov    %rax,%rdi
    d371:	e8 fa 5c ff ff       	call   3070 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    d376:	e9 cd 00 00 00       	jmp    d448 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    d37b:	49 89 c4             	mov    %rax,%r12
    d37e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d385:	48 89 c7             	mov    %rax,%rdi
    d388:	e8 13 5e ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d38d:	eb 03                	jmp    d392 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
    d38f:	49 89 c4             	mov    %rax,%r12
    d392:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d399:	48 89 c7             	mov    %rax,%rdi
    d39c:	e8 ff 5d ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d3a1:	eb 03                	jmp    d3a6 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
    d3a3:	49 89 c4             	mov    %rax,%r12
    d3a6:	48 89 df             	mov    %rbx,%rdi
    d3a9:	e8 42 5e ff ff       	call   31f0 <__cxa_free_exception@plt>
    d3ae:	4c 89 e3             	mov    %r12,%rbx
    d3b1:	eb 7b                	jmp    d42e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
    d3b3:	48 89 c3             	mov    %rax,%rbx
    d3b6:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d3bd:	48 89 c7             	mov    %rax,%rdi
    d3c0:	e8 db 5f ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    d3c5:	eb 2b                	jmp    d3f2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
    d3c7:	48 89 c3             	mov    %rax,%rbx
    d3ca:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    d3d1:	48 89 c7             	mov    %rax,%rdi
    d3d4:	e8 d3 8b ff ff       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d3d9:	eb 03                	jmp    d3de <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
    d3db:	48 89 c3             	mov    %rax,%rbx
    d3de:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    d3e5:	48 89 c7             	mov    %rax,%rdi
    d3e8:	e8 b3 5d ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d3ed:	eb 03                	jmp    d3f2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
    d3ef:	48 89 c3             	mov    %rax,%rbx
    d3f2:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    d3f9:	48 89 c7             	mov    %rax,%rdi
    d3fc:	e8 35 8e ff ff       	call   6236 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d401:	eb 03                	jmp    d406 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
    d403:	48 89 c3             	mov    %rax,%rbx
    d406:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    d40d:	48 89 c7             	mov    %rax,%rdi
    d410:	e8 29 8a ff ff       	call   5e3e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    d415:	eb 03                	jmp    d41a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
    d417:	48 89 c3             	mov    %rax,%rbx
    d41a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    d421:	48 89 c7             	mov    %rax,%rdi
    d424:	e8 83 8b ff ff       	call   5fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d429:	eb 03                	jmp    d42e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    d42b:	48 89 c3             	mov    %rax,%rbx
    d42e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    d435:	48 89 c7             	mov    %rax,%rdi
    d438:	e8 33 5c ff ff       	call   3070 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    d43d:	48 89 d8             	mov    %rbx,%rax
    d440:	48 89 c7             	mov    %rax,%rdi
    d443:	e8 88 61 ff ff       	call   35d0 <_Unwind_Resume@plt>
    d448:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
    d44f:	5b                   	pop    %rbx
    d450:	41 5c                	pop    %r12
    d452:	5d                   	pop    %rbp
    d453:	c3                   	ret

000000000000d454 <_Z41__static_initialization_and_destruction_0ii>:
    d454:	55                   	push   %rbp
    d455:	48 89 e5             	mov    %rsp,%rbp
    d458:	48 83 ec 10          	sub    $0x10,%rsp
    d45c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d45f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d462:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    d466:	75 3b                	jne    d4a3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d468:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    d46f:	75 32                	jne    d4a3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d471:	48 8d 05 fc 30 01 00 	lea    0x130fc(%rip),%rax        # 20574 <_ZStL8__ioinit>
    d478:	48 89 c7             	mov    %rax,%rdi
    d47b:	e8 90 60 ff ff       	call   3510 <_ZNSt8ios_base4InitC1Ev@plt>
    d480:	48 8d 05 99 2e 01 00 	lea    0x12e99(%rip),%rax        # 20320 <__dso_handle>
    d487:	48 89 c2             	mov    %rax,%rdx
    d48a:	48 8d 05 e3 30 01 00 	lea    0x130e3(%rip),%rax        # 20574 <_ZStL8__ioinit>
    d491:	48 89 c6             	mov    %rax,%rsi
    d494:	48 8b 05 2d 2b 01 00 	mov    0x12b2d(%rip),%rax        # 1ffc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    d49b:	48 89 c7             	mov    %rax,%rdi
    d49e:	e8 ed 5d ff ff       	call   3290 <__cxa_atexit@plt>
    d4a3:	90                   	nop
    d4a4:	c9                   	leave
    d4a5:	c3                   	ret

000000000000d4a6 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    d4a6:	55                   	push   %rbp
    d4a7:	48 89 e5             	mov    %rsp,%rbp
    d4aa:	be ff ff 00 00       	mov    $0xffff,%esi
    d4af:	bf 01 00 00 00       	mov    $0x1,%edi
    d4b4:	e8 9b ff ff ff       	call   d454 <_Z41__static_initialization_and_destruction_0ii>
    d4b9:	5d                   	pop    %rbp
    d4ba:	c3                   	ret
    d4bb:	90                   	nop

000000000000d4bc <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    d4bc:	55                   	push   %rbp
    d4bd:	48 89 e5             	mov    %rsp,%rbp
    d4c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d4c4:	48 8d 15 45 28 01 00 	lea    0x12845(%rip),%rdx        # 1fd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    d4cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4cf:	48 89 10             	mov    %rdx,(%rax)
    d4d2:	90                   	nop
    d4d3:	5d                   	pop    %rbp
    d4d4:	c3                   	ret

000000000000d4d5 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    d4d5:	55                   	push   %rbp
    d4d6:	48 89 e5             	mov    %rsp,%rbp
    d4d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d4dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d4e1:	90                   	nop
    d4e2:	5d                   	pop    %rbp
    d4e3:	c3                   	ret

000000000000d4e4 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    d4e4:	55                   	push   %rbp
    d4e5:	48 89 e5             	mov    %rsp,%rbp
    d4e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    d4ec:	48 8d 05 a5 7d 00 00 	lea    0x7da5(%rip),%rax        # 15298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    d4f3:	5d                   	pop    %rbp
    d4f4:	c3                   	ret
    d4f5:	90                   	nop

000000000000d4f6 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    d4f6:	55                   	push   %rbp
    d4f7:	48 89 e5             	mov    %rsp,%rbp
    d4fa:	48 83 ec 10          	sub    $0x10,%rsp
    d4fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d506:	48 89 c7             	mov    %rax,%rdi
    d509:	e8 ae ff ff ff       	call   d4bc <_ZNSt9exceptionC1Ev>
    d50e:	48 8d 15 ab 27 01 00 	lea    0x127ab(%rip),%rdx        # 1fcc0 <_ZTVSt19bad_optional_access+0x10>
    d515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d519:	48 89 10             	mov    %rdx,(%rax)
    d51c:	90                   	nop
    d51d:	c9                   	leave
    d51e:	c3                   	ret

000000000000d51f <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    d51f:	55                   	push   %rbp
    d520:	48 89 e5             	mov    %rsp,%rbp
    d523:	53                   	push   %rbx
    d524:	48 83 ec 08          	sub    $0x8,%rsp
    d528:	bf 08 00 00 00       	mov    $0x8,%edi
    d52d:	e8 0e 5c ff ff       	call   3140 <__cxa_allocate_exception@plt>
    d532:	48 89 c3             	mov    %rax,%rbx
    d535:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    d53c:	48 89 df             	mov    %rbx,%rdi
    d53f:	e8 b2 ff ff ff       	call   d4f6 <_ZNSt19bad_optional_accessC1Ev>
    d544:	48 8d 05 85 42 00 00 	lea    0x4285(%rip),%rax        # 117d0 <_ZNSt19bad_optional_accessD1Ev>
    d54b:	48 89 c2             	mov    %rax,%rdx
    d54e:	48 8d 05 03 28 01 00 	lea    0x12803(%rip),%rax        # 1fd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    d555:	48 89 c6             	mov    %rax,%rsi
    d558:	48 89 df             	mov    %rbx,%rdi
    d55b:	e8 20 60 ff ff       	call   3580 <__cxa_throw@plt>

000000000000d560 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    d560:	55                   	push   %rbp
    d561:	48 89 e5             	mov    %rsp,%rbp
    d564:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    d568:	e8 3a 00 00 00       	call   d5a7 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    d56d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d571:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    d575:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    d579:	48 89 d6             	mov    %rdx,%rsi
    d57c:	48 89 c7             	mov    %rax,%rdi
    d57f:	e8 06 00 00 00       	call   d58a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    d584:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d588:	c9                   	leave
    d589:	c3                   	ret

000000000000d58a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    d58a:	55                   	push   %rbp
    d58b:	48 89 e5             	mov    %rsp,%rbp
    d58e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d592:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    d596:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d59a:	48 8b 10             	mov    (%rax),%rdx
    d59d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a1:	48 89 10             	mov    %rdx,(%rax)
    d5a4:	90                   	nop
    d5a5:	5d                   	pop    %rbp
    d5a6:	c3                   	ret

000000000000d5a7 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    d5a7:	55                   	push   %rbp
    d5a8:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    d5ab:	b8 00 00 00 00       	mov    $0x0,%eax
    d5b0:	5d                   	pop    %rbp
    d5b1:	c3                   	ret

000000000000d5b2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    d5b2:	55                   	push   %rbp
    d5b3:	48 89 e5             	mov    %rsp,%rbp
    d5b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    d5ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5be:	48 8b 00             	mov    (%rax),%rax
    d5c1:	5d                   	pop    %rbp
    d5c2:	c3                   	ret

000000000000d5c3 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    d5c3:	55                   	push   %rbp
    d5c4:	48 89 e5             	mov    %rsp,%rbp
    d5c7:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d5ca:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d5cd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d5d0:	0b 45 f8             	or     -0x8(%rbp),%eax
    d5d3:	5d                   	pop    %rbp
    d5d4:	c3                   	ret
    d5d5:	90                   	nop

000000000000d5d6 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    d5d6:	55                   	push   %rbp
    d5d7:	48 89 e5             	mov    %rsp,%rbp
    d5da:	48 83 ec 10          	sub    $0x10,%rsp
    d5de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    d5e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5e6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    d5ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5f0:	48 89 c7             	mov    %rax,%rdi
    d5f3:	e8 04 00 00 00       	call   d5fc <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    d5f8:	90                   	nop
    d5f9:	c9                   	leave
    d5fa:	c3                   	ret
    d5fb:	90                   	nop

000000000000d5fc <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    d5fc:	55                   	push   %rbp
    d5fd:	48 89 e5             	mov    %rsp,%rbp
    d600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    d604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d608:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d60f:	00 
      _M_header._M_left = &_M_header;
    d610:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d618:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    d61c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d624:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    d628:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d62c:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    d633:	00 
    }
    d634:	90                   	nop
    d635:	5d                   	pop    %rbp
    d636:	c3                   	ret
    d637:	90                   	nop

000000000000d638 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    d638:	55                   	push   %rbp
    d639:	48 89 e5             	mov    %rsp,%rbp
    d63c:	48 83 ec 10          	sub    $0x10,%rsp
    d640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d648:	48 89 c7             	mov    %rax,%rdi
    d64b:	e8 60 00 00 00       	call   d6b0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    d650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d654:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    d658:	90                   	nop
    d659:	c9                   	leave
    d65a:	c3                   	ret
    d65b:	90                   	nop

000000000000d65c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    d65c:	55                   	push   %rbp
    d65d:	48 89 e5             	mov    %rsp,%rbp
    d660:	48 83 ec 10          	sub    $0x10,%rsp
    d664:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d668:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d66c:	48 89 c7             	mov    %rax,%rdi
    d66f:	e8 c4 ff ff ff       	call   d638 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    d674:	90                   	nop
    d675:	c9                   	leave
    d676:	c3                   	ret
    d677:	90                   	nop

000000000000d678 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    d678:	55                   	push   %rbp
    d679:	48 89 e5             	mov    %rsp,%rbp
    d67c:	48 83 ec 10          	sub    $0x10,%rsp
    d680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d684:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d688:	48 89 c7             	mov    %rax,%rdi
    d68b:	e8 cc ff ff ff       	call   d65c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    d690:	90                   	nop
    d691:	c9                   	leave
    d692:	c3                   	ret
    d693:	90                   	nop

000000000000d694 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    d694:	55                   	push   %rbp
    d695:	48 89 e5             	mov    %rsp,%rbp
    d698:	48 83 ec 10          	sub    $0x10,%rsp
    d69c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6a4:	48 89 c7             	mov    %rax,%rdi
    d6a7:	e8 cc ff ff ff       	call   d678 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    d6ac:	90                   	nop
    d6ad:	c9                   	leave
    d6ae:	c3                   	ret
    d6af:	90                   	nop

000000000000d6b0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    d6b0:	55                   	push   %rbp
    d6b1:	48 89 e5             	mov    %rsp,%rbp
    d6b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6b8:	90                   	nop
    d6b9:	5d                   	pop    %rbp
    d6ba:	c3                   	ret
    d6bb:	90                   	nop

000000000000d6bc <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    d6bc:	55                   	push   %rbp
    d6bd:	48 89 e5             	mov    %rsp,%rbp
    d6c0:	48 83 ec 10          	sub    $0x10,%rsp
    d6c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d6cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d6d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6d4:	48 89 d6             	mov    %rdx,%rsi
    d6d7:	48 89 c7             	mov    %rax,%rdi
    d6da:	e8 33 06 00 00       	call   dd12 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    d6df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6e3:	c9                   	leave
    d6e4:	c3                   	ret
    d6e5:	90                   	nop

000000000000d6e6 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    d6e6:	55                   	push   %rbp
    d6e7:	48 89 e5             	mov    %rsp,%rbp
    d6ea:	48 83 ec 10          	sub    $0x10,%rsp
    d6ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d6f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d6fe:	48 89 d6             	mov    %rdx,%rsi
    d701:	48 89 c7             	mov    %rax,%rdi
    d704:	e8 b3 ff ff ff       	call   d6bc <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
    d709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d70d:	c9                   	leave
    d70e:	c3                   	ret
    d70f:	90                   	nop

000000000000d710 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    d710:	55                   	push   %rbp
    d711:	48 89 e5             	mov    %rsp,%rbp
    d714:	48 83 ec 10          	sub    $0x10,%rsp
    d718:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    d71c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d720:	48 89 c7             	mov    %rax,%rdi
    d723:	e8 1a 00 00 00       	call   d742 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    d728:	84 c0                	test   %al,%al
    d72a:	74 0e                	je     d73a <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
    d72c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d730:	48 89 c7             	mov    %rax,%rdi
    d733:	e8 04 06 00 00       	call   dd3c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
    d738:	eb 05                	jmp    d73f <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
    d73a:	e8 e0 fd ff ff       	call   d51f <_ZSt27__throw_bad_optional_accessv>
      }
    d73f:	c9                   	leave
    d740:	c3                   	ret
    d741:	90                   	nop

000000000000d742 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    d742:	55                   	push   %rbp
    d743:	48 89 e5             	mov    %rsp,%rbp
    d746:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    d74a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d74e:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    d752:	5d                   	pop    %rbp
    d753:	c3                   	ret

000000000000d754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    d754:	55                   	push   %rbp
    d755:	48 89 e5             	mov    %rsp,%rbp
    d758:	48 83 ec 10          	sub    $0x10,%rsp
    d75c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d764:	48 89 c7             	mov    %rax,%rdi
    d767:	e8 4c 06 00 00       	call   ddb8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    d76c:	90                   	nop
    d76d:	c9                   	leave
    d76e:	c3                   	ret
    d76f:	90                   	nop

000000000000d770 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    d770:	55                   	push   %rbp
    d771:	48 89 e5             	mov    %rsp,%rbp
    d774:	48 83 ec 10          	sub    $0x10,%rsp
    d778:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d77c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d780:	48 89 c7             	mov    %rax,%rdi
    d783:	e8 f8 05 00 00       	call   dd80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    d788:	90                   	nop
    d789:	c9                   	leave
    d78a:	c3                   	ret
    d78b:	90                   	nop

000000000000d78c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    d78c:	55                   	push   %rbp
    d78d:	48 89 e5             	mov    %rsp,%rbp
    d790:	48 83 ec 10          	sub    $0x10,%rsp
    d794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d79c:	48 89 c7             	mov    %rax,%rdi
    d79f:	e8 cc ff ff ff       	call   d770 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    d7a4:	90                   	nop
    d7a5:	c9                   	leave
    d7a6:	c3                   	ret
    d7a7:	90                   	nop

000000000000d7a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    d7a8:	55                   	push   %rbp
    d7a9:	48 89 e5             	mov    %rsp,%rbp
    d7ac:	48 83 ec 10          	sub    $0x10,%rsp
    d7b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7b8:	48 89 c7             	mov    %rax,%rdi
    d7bb:	e8 14 06 00 00       	call   ddd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    d7c0:	90                   	nop
    d7c1:	c9                   	leave
    d7c2:	c3                   	ret
    d7c3:	90                   	nop

000000000000d7c4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    d7c4:	55                   	push   %rbp
    d7c5:	48 89 e5             	mov    %rsp,%rbp
    d7c8:	48 83 ec 10          	sub    $0x10,%rsp
    d7cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7d4:	48 89 c7             	mov    %rax,%rdi
    d7d7:	e8 1a 0b 00 00       	call   e2f6 <_ZNSaIP13VkImageView_TED1Ev>
    d7dc:	90                   	nop
    d7dd:	c9                   	leave
    d7de:	c3                   	ret
    d7df:	90                   	nop

000000000000d7e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    d7e0:	55                   	push   %rbp
    d7e1:	48 89 e5             	mov    %rsp,%rbp
    d7e4:	48 83 ec 10          	sub    $0x10,%rsp
    d7e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7f0:	48 89 c7             	mov    %rax,%rdi
    d7f3:	e8 d6 0a 00 00       	call   e2ce <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
    d7f8:	90                   	nop
    d7f9:	c9                   	leave
    d7fa:	c3                   	ret
    d7fb:	90                   	nop

000000000000d7fc <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
    d7fc:	55                   	push   %rbp
    d7fd:	48 89 e5             	mov    %rsp,%rbp
    d800:	48 83 ec 10          	sub    $0x10,%rsp
    d804:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d80c:	48 89 c7             	mov    %rax,%rdi
    d80f:	e8 cc ff ff ff       	call   d7e0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
    d814:	90                   	nop
    d815:	c9                   	leave
    d816:	c3                   	ret
    d817:	90                   	nop

000000000000d818 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    d818:	55                   	push   %rbp
    d819:	48 89 e5             	mov    %rsp,%rbp
    d81c:	48 83 ec 10          	sub    $0x10,%rsp
    d820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d828:	48 89 c7             	mov    %rax,%rdi
    d82b:	e8 74 0b 00 00       	call   e3a4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    d830:	90                   	nop
    d831:	c9                   	leave
    d832:	c3                   	ret
    d833:	90                   	nop

000000000000d834 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
    d834:	55                   	push   %rbp
    d835:	48 89 e5             	mov    %rsp,%rbp
    d838:	48 83 ec 10          	sub    $0x10,%rsp
    d83c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d844:	48 89 c7             	mov    %rax,%rdi
    d847:	e8 cc ff ff ff       	call   d818 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    d84c:	90                   	nop
    d84d:	c9                   	leave
    d84e:	c3                   	ret
    d84f:	90                   	nop

000000000000d850 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
    d850:	55                   	push   %rbp
    d851:	48 89 e5             	mov    %rsp,%rbp
    d854:	53                   	push   %rbx
    d855:	48 83 ec 38          	sub    $0x38,%rsp
    d859:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    d85d:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    d861:	e8 0a 5c ff ff       	call   3470 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    d866:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d86a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d86e:	48 89 de             	mov    %rbx,%rsi
    d871:	48 89 c7             	mov    %rax,%rdi
    d874:	e8 ad 0c 00 00       	call   e526 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    d879:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    d87d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d881:	48 89 c7             	mov    %rax,%rdi
    d884:	e8 e2 0c 00 00       	call   e56b <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    d889:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    d88d:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    d891:	48 89 c7             	mov    %rax,%rdi
    d894:	e8 ed 0c 00 00       	call   e586 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
    d899:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d89d:	c9                   	leave
    d89e:	c3                   	ret
    d89f:	90                   	nop

000000000000d8a0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    d8a0:	55                   	push   %rbp
    d8a1:	48 89 e5             	mov    %rsp,%rbp
    d8a4:	53                   	push   %rbx
    d8a5:	48 83 ec 38          	sub    $0x38,%rsp
    d8a9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d8ad:	48 89 f0             	mov    %rsi,%rax
    d8b0:	48 89 d6             	mov    %rdx,%rsi
    d8b3:	48 89 f2             	mov    %rsi,%rdx
    d8b6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d8ba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d8be:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    d8c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d8ca:	48 89 d6             	mov    %rdx,%rsi
    d8cd:	48 89 c7             	mov    %rax,%rdi
    d8d0:	e8 f9 0e 00 00       	call   e7ce <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    d8d5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d8d9:	48 89 c7             	mov    %rax,%rdi
    d8dc:	e8 25 0f 00 00       	call   e806 <_ZNKSt16initializer_listIPKcE3endEv>
    d8e1:	48 89 c3             	mov    %rax,%rbx
    d8e4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d8e8:	48 89 c7             	mov    %rax,%rdi
    d8eb:	e8 04 0f 00 00       	call   e7f4 <_ZNKSt16initializer_listIPKcE5beginEv>
    d8f0:	48 89 c1             	mov    %rax,%rcx
    d8f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d8f7:	48 89 da             	mov    %rbx,%rdx
    d8fa:	48 89 ce             	mov    %rcx,%rsi
    d8fd:	48 89 c7             	mov    %rax,%rdi
    d900:	e8 67 0f 00 00       	call   e86c <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    d905:	eb 1a                	jmp    d921 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    d907:	48 89 c3             	mov    %rax,%rbx
    d90a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d90e:	48 89 c7             	mov    %rax,%rdi
    d911:	e8 24 88 ff ff       	call   613a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    d916:	48 89 d8             	mov    %rbx,%rax
    d919:	48 89 c7             	mov    %rax,%rdi
    d91c:	e8 af 5c ff ff       	call   35d0 <_Unwind_Resume@plt>
    d921:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d925:	c9                   	leave
    d926:	c3                   	ret
    d927:	90                   	nop

000000000000d928 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    d928:	55                   	push   %rbp
    d929:	48 89 e5             	mov    %rsp,%rbp
    d92c:	48 83 ec 10          	sub    $0x10,%rsp
    d930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    d934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d938:	48 89 c7             	mov    %rax,%rdi
    d93b:	e8 b2 96 ff ff       	call   6ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    d940:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    d943:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d947:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d94b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d94f:	48 8b 00             	mov    (%rax),%rax
    d952:	48 89 ce             	mov    %rcx,%rsi
    d955:	48 89 c7             	mov    %rax,%rdi
    d958:	e8 be 0f 00 00       	call   e91b <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    d95d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d961:	48 89 c7             	mov    %rax,%rdi
    d964:	e8 d1 87 ff ff       	call   613a <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    d969:	90                   	nop
    d96a:	c9                   	leave
    d96b:	c3                   	ret

000000000000d96c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    d96c:	55                   	push   %rbp
    d96d:	48 89 e5             	mov    %rsp,%rbp
    d970:	48 83 ec 20          	sub    $0x20,%rsp
    d974:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    d978:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d97c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d980:	48 89 d6             	mov    %rdx,%rsi
    d983:	48 89 c7             	mov    %rax,%rdi
    d986:	e8 bb 0f 00 00       	call   e946 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    d98b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d98f:	c9                   	leave
    d990:	c3                   	ret
    d991:	90                   	nop

000000000000d992 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d992:	55                   	push   %rbp
    d993:	48 89 e5             	mov    %rsp,%rbp
    d996:	48 83 ec 20          	sub    $0x20,%rsp
    d99a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    d99e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9a2:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d9a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d9aa:	48 89 d6             	mov    %rdx,%rsi
    d9ad:	48 89 c7             	mov    %rax,%rdi
    d9b0:	e8 91 0f 00 00       	call   e946 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    d9b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b9:	c9                   	leave
    d9ba:	c3                   	ret

000000000000d9bb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    d9bb:	55                   	push   %rbp
    d9bc:	48 89 e5             	mov    %rsp,%rbp
    d9bf:	53                   	push   %rbx
    d9c0:	48 83 ec 18          	sub    $0x18,%rsp
    d9c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d9c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    d9cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9d0:	48 89 c7             	mov    %rax,%rdi
    d9d3:	e8 8c 0f 00 00       	call   e964 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    d9d8:	48 8b 18             	mov    (%rax),%rbx
    d9db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d9df:	48 89 c7             	mov    %rax,%rdi
    d9e2:	e8 7d 0f 00 00       	call   e964 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    d9e7:	48 8b 00             	mov    (%rax),%rax
    d9ea:	48 39 c3             	cmp    %rax,%rbx
    d9ed:	0f 95 c0             	setne  %al
    d9f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d9f4:	c9                   	leave
    d9f5:	c3                   	ret

000000000000d9f6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d9f6:	55                   	push   %rbp
    d9f7:	48 89 e5             	mov    %rsp,%rbp
    d9fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    d9fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da02:	48 8b 00             	mov    (%rax),%rax
    da05:	48 8d 50 08          	lea    0x8(%rax),%rdx
    da09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da0d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    da10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    da14:	5d                   	pop    %rbp
    da15:	c3                   	ret

000000000000da16 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    da16:	55                   	push   %rbp
    da17:	48 89 e5             	mov    %rsp,%rbp
    da1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    da1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da22:	48 8b 00             	mov    (%rax),%rax
    da25:	5d                   	pop    %rbp
    da26:	c3                   	ret
    da27:	90                   	nop

000000000000da28 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    da28:	55                   	push   %rbp
    da29:	48 89 e5             	mov    %rsp,%rbp
    da2c:	53                   	push   %rbx
    da2d:	48 83 ec 18          	sub    $0x18,%rsp
    da31:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da35:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    da39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da3d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    da41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da45:	48 8b 40 10          	mov    0x10(%rax),%rax
    da49:	48 39 c2             	cmp    %rax,%rdx
    da4c:	74 3c                	je     da8a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    da4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    da52:	48 89 c7             	mov    %rax,%rdi
    da55:	e8 18 0f 00 00       	call   e972 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    da5a:	48 89 c2             	mov    %rax,%rdx
    da5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da61:	48 8b 48 08          	mov    0x8(%rax),%rcx
    da65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da69:	48 89 ce             	mov    %rcx,%rsi
    da6c:	48 89 c7             	mov    %rax,%rdi
    da6f:	e8 0c 0f 00 00       	call   e980 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    da74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da78:	48 8b 40 08          	mov    0x8(%rax),%rax
    da7c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    da80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da84:	48 89 50 08          	mov    %rdx,0x8(%rax)
    da88:	eb 30                	jmp    daba <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    da8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    da8e:	48 89 c7             	mov    %rax,%rdi
    da91:	e8 dc 0e 00 00       	call   e972 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    da96:	48 89 c3             	mov    %rax,%rbx
    da99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da9d:	48 89 c7             	mov    %rax,%rdi
    daa0:	e8 ed fe ff ff       	call   d992 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    daa5:	48 89 c1             	mov    %rax,%rcx
    daa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daac:	48 89 da             	mov    %rbx,%rdx
    daaf:	48 89 ce             	mov    %rcx,%rsi
    dab2:	48 89 c7             	mov    %rax,%rdi
    dab5:	e8 00 0f 00 00       	call   e9ba <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    daba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dabe:	48 89 c7             	mov    %rax,%rdi
    dac1:	e8 86 10 00 00       	call   eb4c <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    dac6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    daca:	c9                   	leave
    dacb:	c3                   	ret

000000000000dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    dacc:	55                   	push   %rbp
    dacd:	48 89 e5             	mov    %rsp,%rbp
    dad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    dad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dad8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dadc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dae0:	48 8b 00             	mov    (%rax),%rax
    dae3:	48 29 c2             	sub    %rax,%rdx
    dae6:	48 89 d0             	mov    %rdx,%rax
    dae9:	48 c1 f8 03          	sar    $0x3,%rax
    daed:	5d                   	pop    %rbp
    daee:	c3                   	ret
    daef:	90                   	nop

000000000000daf0 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    daf0:	55                   	push   %rbp
    daf1:	48 89 e5             	mov    %rsp,%rbp
    daf4:	48 83 ec 10          	sub    $0x10,%rsp
    daf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    dafc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db00:	48 8b 10             	mov    (%rax),%rdx
    db03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db07:	48 89 d6             	mov    %rdx,%rsi
    db0a:	48 89 c7             	mov    %rax,%rdi
    db0d:	e8 7a 10 00 00       	call   eb8c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    db12:	c9                   	leave
    db13:	c3                   	ret

000000000000db14 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    db14:	55                   	push   %rbp
    db15:	48 89 e5             	mov    %rsp,%rbp
    db18:	48 83 ec 10          	sub    $0x10,%rsp
    db1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    db20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db24:	48 8b 10             	mov    (%rax),%rdx
    db27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db2b:	48 89 d6             	mov    %rdx,%rsi
    db2e:	48 89 c7             	mov    %rax,%rdi
    db31:	e8 56 10 00 00       	call   eb8c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    db36:	c9                   	leave
    db37:	c3                   	ret

000000000000db38 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    db38:	55                   	push   %rbp
    db39:	48 89 e5             	mov    %rsp,%rbp
    db3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    db40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db44:	48 8b 50 08          	mov    0x8(%rax),%rdx
    db48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db4c:	48 8b 00             	mov    (%rax),%rax
    db4f:	48 29 c2             	sub    %rax,%rdx
    db52:	48 c1 fa 02          	sar    $0x2,%rdx
    db56:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    db5d:	db b6 6d 
    db60:	48 0f af c2          	imul   %rdx,%rax
    db64:	5d                   	pop    %rbp
    db65:	c3                   	ret

000000000000db66 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
    db66:	55                   	push   %rbp
    db67:	48 89 e5             	mov    %rsp,%rbp
    db6a:	48 83 ec 10          	sub    $0x10,%rsp
    db6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    db72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db76:	48 89 c7             	mov    %rax,%rdi
    db79:	e8 d0 99 ff ff       	call   754e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    db7e:	c9                   	leave
    db7f:	c3                   	ret

000000000000db80 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
    db80:	55                   	push   %rbp
    db81:	48 89 e5             	mov    %rsp,%rbp
    db84:	48 83 ec 10          	sub    $0x10,%rsp
    db88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
    db8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db90:	48 89 c7             	mov    %rax,%rdi
    db93:	e8 b6 99 ff ff       	call   754e <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    db98:	84 c0                	test   %al,%al
    db9a:	74 0e                	je     dbaa <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
    db9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba0:	48 89 c7             	mov    %rax,%rdi
    dba3:	e8 b8 99 ff ff       	call   7560 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    dba8:	eb 05                	jmp    dbaf <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
    dbaa:	e8 70 f9 ff ff       	call   d51f <_ZSt27__throw_bad_optional_accessv>
      }
    dbaf:	c9                   	leave
    dbb0:	c3                   	ret
    dbb1:	90                   	nop

000000000000dbb2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    dbb2:	55                   	push   %rbp
    dbb3:	48 89 e5             	mov    %rsp,%rbp
    dbb6:	48 83 ec 20          	sub    $0x20,%rsp
    dbba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbbe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dbc2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    dbc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbca:	48 89 c7             	mov    %rax,%rdi
    dbcd:	e8 cc 0f 00 00       	call   eb9e <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
    dbd2:	8b 10                	mov    (%rax),%edx
    dbd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbd8:	89 10                	mov    %edx,(%rax)
    dbda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbde:	48 89 c7             	mov    %rax,%rdi
    dbe1:	e8 c6 0f 00 00       	call   ebac <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
    dbe6:	48 89 c1             	mov    %rax,%rcx
    dbe9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    dbed:	48 8b 01             	mov    (%rcx),%rax
    dbf0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    dbf4:	48 89 46 04          	mov    %rax,0x4(%rsi)
    dbf8:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
    dbfc:	48 8b 41 10          	mov    0x10(%rcx),%rax
    dc00:	48 89 46 14          	mov    %rax,0x14(%rsi)
    dc04:	90                   	nop
    dc05:	c9                   	leave
    dc06:	c3                   	ret
    dc07:	90                   	nop

000000000000dc08 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
    dc08:	55                   	push   %rbp
    dc09:	48 89 e5             	mov    %rsp,%rbp
    dc0c:	53                   	push   %rbx
    dc0d:	48 83 ec 18          	sub    $0x18,%rsp
    dc11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dc15:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
    dc19:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    dc1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dc21:	48 89 c7             	mov    %rax,%rdi
    dc24:	e8 91 0f 00 00       	call   ebba <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    dc29:	48 89 c6             	mov    %rax,%rsi
    dc2c:	48 89 df             	mov    %rbx,%rdi
    dc2f:	e8 ba 0f 00 00       	call   ebee <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
    dc34:	90                   	nop
    dc35:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dc39:	c9                   	leave
    dc3a:	c3                   	ret
    dc3b:	90                   	nop

000000000000dc3c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    dc3c:	55                   	push   %rbp
    dc3d:	48 89 e5             	mov    %rsp,%rbp
    dc40:	48 83 ec 20          	sub    $0x20,%rsp
    dc44:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    dc48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc4c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dc50:	48 89 d6             	mov    %rdx,%rsi
    dc53:	48 89 c7             	mov    %rax,%rdi
    dc56:	e8 c7 0f 00 00       	call   ec22 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    dc5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc5f:	c9                   	leave
    dc60:	c3                   	ret
    dc61:	90                   	nop

000000000000dc62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    dc62:	55                   	push   %rbp
    dc63:	48 89 e5             	mov    %rsp,%rbp
    dc66:	48 83 ec 20          	sub    $0x20,%rsp
    dc6a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    dc6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc72:	48 8d 50 08          	lea    0x8(%rax),%rdx
    dc76:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dc7a:	48 89 d6             	mov    %rdx,%rsi
    dc7d:	48 89 c7             	mov    %rax,%rdi
    dc80:	e8 9d 0f 00 00       	call   ec22 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    dc85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc89:	c9                   	leave
    dc8a:	c3                   	ret

000000000000dc8b <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    dc8b:	55                   	push   %rbp
    dc8c:	48 89 e5             	mov    %rsp,%rbp
    dc8f:	53                   	push   %rbx
    dc90:	48 83 ec 18          	sub    $0x18,%rsp
    dc94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dc98:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    dc9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dca0:	48 89 c7             	mov    %rax,%rdi
    dca3:	e8 98 0f 00 00       	call   ec40 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    dca8:	48 8b 18             	mov    (%rax),%rbx
    dcab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dcaf:	48 89 c7             	mov    %rax,%rdi
    dcb2:	e8 89 0f 00 00       	call   ec40 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    dcb7:	48 8b 00             	mov    (%rax),%rax
    dcba:	48 39 c3             	cmp    %rax,%rbx
    dcbd:	0f 95 c0             	setne  %al
    dcc0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dcc4:	c9                   	leave
    dcc5:	c3                   	ret

000000000000dcc6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    dcc6:	55                   	push   %rbp
    dcc7:	48 89 e5             	mov    %rsp,%rbp
    dcca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    dcce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcd2:	48 8b 00             	mov    (%rax),%rax
    dcd5:	48 8d 50 08          	lea    0x8(%rax),%rdx
    dcd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcdd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    dce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    dce4:	5d                   	pop    %rbp
    dce5:	c3                   	ret

000000000000dce6 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    dce6:	55                   	push   %rbp
    dce7:	48 89 e5             	mov    %rsp,%rbp
    dcea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    dcee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcf2:	48 8b 00             	mov    (%rax),%rax
    dcf5:	5d                   	pop    %rbp
    dcf6:	c3                   	ret
    dcf7:	90                   	nop

000000000000dcf8 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
    dcf8:	55                   	push   %rbp
    dcf9:	48 89 e5             	mov    %rsp,%rbp
    dcfc:	48 83 ec 10          	sub    $0x10,%rsp
    dd00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    dd04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd08:	48 89 c7             	mov    %rax,%rdi
    dd0b:	e8 32 fa ff ff       	call   d742 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    dd10:	c9                   	leave
    dd11:	c3                   	ret

000000000000dd12 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
    dd12:	55                   	push   %rbp
    dd13:	48 89 e5             	mov    %rsp,%rbp
    dd16:	48 83 ec 10          	sub    $0x10,%rsp
    dd1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
    dd22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd2a:	48 89 d6             	mov    %rdx,%rsi
    dd2d:	48 89 c7             	mov    %rax,%rdi
    dd30:	e8 19 0f 00 00       	call   ec4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
    dd35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    dd39:	c9                   	leave
    dd3a:	c3                   	ret
    dd3b:	90                   	nop

000000000000dd3c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    dd3c:	55                   	push   %rbp
    dd3d:	48 89 e5             	mov    %rsp,%rbp
    dd40:	48 83 ec 10          	sub    $0x10,%rsp
    dd44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    dd48:	e8 11 5c ff ff       	call   395e <_ZSt23__is_constant_evaluatedv>
    dd4d:	84 c0                	test   %al,%al
    dd4f:	74 1a                	je     dd6b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    dd51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd55:	48 89 c7             	mov    %rax,%rdi
    dd58:	e8 e5 f9 ff ff       	call   d742 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    dd5d:	83 f0 01             	xor    $0x1,%eax
    dd60:	84 c0                	test   %al,%al
    dd62:	74 07                	je     dd6b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
    dd64:	b8 01 00 00 00       	mov    $0x1,%eax
    dd69:	eb 05                	jmp    dd70 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
    dd6b:	b8 00 00 00 00       	mov    $0x0,%eax
    dd70:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    dd72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd76:	48 89 c7             	mov    %rax,%rdi
    dd79:	e8 62 0f 00 00       	call   ece0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
    dd7e:	c9                   	leave
    dd7f:	c3                   	ret

000000000000dd80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    dd80:	55                   	push   %rbp
    dd81:	48 89 e5             	mov    %rsp,%rbp
    dd84:	48 83 ec 10          	sub    $0x10,%rsp
    dd88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    dd8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd90:	48 89 c7             	mov    %rax,%rdi
    dd93:	e8 56 0f 00 00       	call   ecee <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    dd98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd9c:	48 89 c7             	mov    %rax,%rdi
    dd9f:	e8 66 0f 00 00       	call   ed0a <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    dda4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dda8:	48 83 c0 08          	add    $0x8,%rax
    ddac:	48 89 c7             	mov    %rax,%rdi
    ddaf:	e8 22 f8 ff ff       	call   d5d6 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    ddb4:	90                   	nop
    ddb5:	c9                   	leave
    ddb6:	c3                   	ret
    ddb7:	90                   	nop

000000000000ddb8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    ddb8:	55                   	push   %rbp
    ddb9:	48 89 e5             	mov    %rsp,%rbp
    ddbc:	48 83 ec 10          	sub    $0x10,%rsp
    ddc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddc8:	48 89 c7             	mov    %rax,%rdi
    ddcb:	e8 46 0f 00 00       	call   ed16 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    ddd0:	90                   	nop
    ddd1:	c9                   	leave
    ddd2:	c3                   	ret
    ddd3:	90                   	nop

000000000000ddd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    ddd4:	55                   	push   %rbp
    ddd5:	48 89 e5             	mov    %rsp,%rbp
    ddd8:	48 83 ec 10          	sub    $0x10,%rsp
    dddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    dde0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dde4:	48 89 c7             	mov    %rax,%rdi
    dde7:	e8 9c 0f 00 00       	call   ed88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    ddec:	48 89 c2             	mov    %rax,%rdx
    ddef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddf3:	48 89 d6             	mov    %rdx,%rsi
    ddf6:	48 89 c7             	mov    %rax,%rdi
    ddf9:	e8 24 0f 00 00       	call   ed22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    ddfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de02:	48 89 c7             	mov    %rax,%rdi
    de05:	e8 4a f9 ff ff       	call   d754 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    de0a:	90                   	nop
    de0b:	c9                   	leave
    de0c:	c3                   	ret
    de0d:	90                   	nop

000000000000de0e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    de0e:	55                   	push   %rbp
    de0f:	48 89 e5             	mov    %rsp,%rbp
    de12:	48 83 ec 20          	sub    $0x20,%rsp
    de16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    de1a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    de1e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    de22:	48 89 d6             	mov    %rdx,%rsi
    de25:	48 89 c7             	mov    %rax,%rdi
    de28:	e8 75 0f 00 00       	call   eda2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    de2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de31:	c9                   	leave
    de32:	c3                   	ret
    de33:	90                   	nop

000000000000de34 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    de34:	55                   	push   %rbp
    de35:	48 89 e5             	mov    %rsp,%rbp
    de38:	48 83 ec 20          	sub    $0x20,%rsp
    de3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    de40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de44:	48 8d 50 08          	lea    0x8(%rax),%rdx
    de48:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    de4c:	48 89 d6             	mov    %rdx,%rsi
    de4f:	48 89 c7             	mov    %rax,%rdi
    de52:	e8 4b 0f 00 00       	call   eda2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    de57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de5b:	c9                   	leave
    de5c:	c3                   	ret

000000000000de5d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    de5d:	55                   	push   %rbp
    de5e:	48 89 e5             	mov    %rsp,%rbp
    de61:	53                   	push   %rbx
    de62:	48 83 ec 18          	sub    $0x18,%rsp
    de66:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de6a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    de6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de72:	48 89 c7             	mov    %rax,%rdi
    de75:	e8 46 0f 00 00       	call   edc0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    de7a:	48 8b 18             	mov    (%rax),%rbx
    de7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de81:	48 89 c7             	mov    %rax,%rdi
    de84:	e8 37 0f 00 00       	call   edc0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    de89:	48 8b 00             	mov    (%rax),%rax
    de8c:	48 39 c3             	cmp    %rax,%rbx
    de8f:	0f 95 c0             	setne  %al
    de92:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de96:	c9                   	leave
    de97:	c3                   	ret

000000000000de98 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    de98:	55                   	push   %rbp
    de99:	48 89 e5             	mov    %rsp,%rbp
    de9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    dea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dea4:	48 8b 00             	mov    (%rax),%rax
    dea7:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    deae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb2:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    deb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    deb9:	5d                   	pop    %rbp
    deba:	c3                   	ret
    debb:	90                   	nop

000000000000debc <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    debc:	55                   	push   %rbp
    debd:	48 89 e5             	mov    %rsp,%rbp
    dec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    dec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dec8:	48 8b 00             	mov    (%rax),%rax
    decb:	5d                   	pop    %rbp
    decc:	c3                   	ret
    decd:	90                   	nop

000000000000dece <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    dece:	55                   	push   %rbp
    decf:	48 89 e5             	mov    %rsp,%rbp
    ded2:	53                   	push   %rbx
    ded3:	48 83 ec 48          	sub    $0x48,%rsp
    ded7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    dedb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    dedf:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    dee3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dee7:	48 89 d6             	mov    %rdx,%rsi
    deea:	48 89 c7             	mov    %rax,%rdi
    deed:	e8 dc 0e 00 00       	call   edce <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    def2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    def6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    defa:	48 89 c7             	mov    %rax,%rdi
    defd:	e8 f2 0e 00 00       	call   edf4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    df02:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    df06:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    df0a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    df0e:	48 89 d6             	mov    %rdx,%rsi
    df11:	48 89 c7             	mov    %rax,%rdi
    df14:	e8 f5 0e 00 00       	call   ee0e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    df19:	84 c0                	test   %al,%al
    df1b:	75 32                	jne    df4f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    df1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    df21:	48 89 c7             	mov    %rax,%rdi
    df24:	e8 07 0f 00 00       	call   ee30 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    df29:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    df2d:	48 89 c7             	mov    %rax,%rdi
    df30:	e8 17 0f 00 00       	call   ee4c <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    df35:	48 89 c2             	mov    %rax,%rdx
    df38:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    df3c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    df40:	48 89 ce             	mov    %rcx,%rsi
    df43:	48 89 c7             	mov    %rax,%rdi
    df46:	e8 1f 0f 00 00       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    df4b:	84 c0                	test   %al,%al
    df4d:	74 07                	je     df56 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    df4f:	b8 01 00 00 00       	mov    $0x1,%eax
    df54:	eb 05                	jmp    df5b <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    df56:	b8 00 00 00 00       	mov    $0x0,%eax
    df5b:	84 c0                	test   %al,%al
    df5d:	74 5d                	je     dfbc <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    df5f:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    df63:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    df67:	48 89 c7             	mov    %rax,%rdi
    df6a:	e8 50 08 00 00       	call   e7bf <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    df6f:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    df72:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    df76:	48 89 d6             	mov    %rdx,%rsi
    df79:	48 89 c7             	mov    %rax,%rdi
    df7c:	e8 12 0f 00 00       	call   ee93 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    df81:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    df85:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    df89:	48 89 d6             	mov    %rdx,%rsi
    df8c:	48 89 c7             	mov    %rax,%rdi
    df8f:	e8 34 0f 00 00       	call   eec8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    df94:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    df98:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    df9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfa0:	49 89 c8             	mov    %rcx,%r8
    dfa3:	48 89 d1             	mov    %rdx,%rcx
    dfa6:	48 8d 15 0b 77 00 00 	lea    0x770b(%rip),%rdx        # 156b8 <_ZSt19piecewise_construct>
    dfad:	48 89 c6             	mov    %rax,%rsi
    dfb0:	48 89 df             	mov    %rbx,%rdi
    dfb3:	e8 2e 0f 00 00       	call   eee6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    dfb8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    dfbc:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    dfc0:	48 89 c7             	mov    %rax,%rdi
    dfc3:	e8 84 0e 00 00       	call   ee4c <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    dfc8:	48 83 c0 20          	add    $0x20,%rax
      }
    dfcc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dfd0:	c9                   	leave
    dfd1:	c3                   	ret

000000000000dfd2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    dfd2:	55                   	push   %rbp
    dfd3:	48 89 e5             	mov    %rsp,%rbp
    dfd6:	48 83 ec 20          	sub    $0x20,%rsp
    dfda:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    dfde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfe2:	48 89 c7             	mov    %rax,%rdi
    dfe5:	e8 1e 10 00 00       	call   f008 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    dfea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dfee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dff2:	48 89 c7             	mov    %rax,%rdi
    dff5:	e8 e8 0f 00 00       	call   efe2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    dffa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dffe:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    e002:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e006:	48 89 d6             	mov    %rdx,%rsi
    e009:	48 89 c7             	mov    %rax,%rdi
    e00c:	e8 20 10 00 00       	call   f031 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    e011:	c9                   	leave
    e012:	c3                   	ret
    e013:	90                   	nop

000000000000e014 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e014:	55                   	push   %rbp
    e015:	48 89 e5             	mov    %rsp,%rbp
    e018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e01c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e024:	48 8b 00             	mov    (%rax),%rax
    e027:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e02b:	48 c1 e2 03          	shl    $0x3,%rdx
    e02f:	48 01 d0             	add    %rdx,%rax
      }
    e032:	5d                   	pop    %rbp
    e033:	c3                   	ret

000000000000e034 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e034:	55                   	push   %rbp
    e035:	48 89 e5             	mov    %rsp,%rbp
    e038:	48 83 ec 20          	sub    $0x20,%rsp
    e03c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    e040:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e044:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e048:	48 89 d6             	mov    %rdx,%rsi
    e04b:	48 89 c7             	mov    %rax,%rdi
    e04e:	e8 19 10 00 00       	call   f06c <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e057:	c9                   	leave
    e058:	c3                   	ret
    e059:	90                   	nop

000000000000e05a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    e05a:	55                   	push   %rbp
    e05b:	48 89 e5             	mov    %rsp,%rbp
    e05e:	48 83 ec 20          	sub    $0x20,%rsp
    e062:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    e066:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e06a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e06e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e072:	48 89 d6             	mov    %rdx,%rsi
    e075:	48 89 c7             	mov    %rax,%rdi
    e078:	e8 ef 0f 00 00       	call   f06c <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e07d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e081:	c9                   	leave
    e082:	c3                   	ret

000000000000e083 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    e083:	55                   	push   %rbp
    e084:	48 89 e5             	mov    %rsp,%rbp
    e087:	53                   	push   %rbx
    e088:	48 83 ec 18          	sub    $0x18,%rsp
    e08c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e090:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    e094:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e098:	48 89 c7             	mov    %rax,%rdi
    e09b:	e8 ea 0f 00 00       	call   f08a <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    e0a0:	48 8b 18             	mov    (%rax),%rbx
    e0a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e0a7:	48 89 c7             	mov    %rax,%rdi
    e0aa:	e8 db 0f 00 00       	call   f08a <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    e0af:	48 8b 00             	mov    (%rax),%rax
    e0b2:	48 39 c3             	cmp    %rax,%rbx
    e0b5:	0f 95 c0             	setne  %al
    e0b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e0bc:	c9                   	leave
    e0bd:	c3                   	ret

000000000000e0be <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e0be:	55                   	push   %rbp
    e0bf:	48 89 e5             	mov    %rsp,%rbp
    e0c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    e0c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0ca:	48 8b 00             	mov    (%rax),%rax
    e0cd:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e0d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0d5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    e0d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e0dc:	5d                   	pop    %rbp
    e0dd:	c3                   	ret

000000000000e0de <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e0de:	55                   	push   %rbp
    e0df:	48 89 e5             	mov    %rsp,%rbp
    e0e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0ea:	48 8b 00             	mov    (%rax),%rax
    e0ed:	5d                   	pop    %rbp
    e0ee:	c3                   	ret
    e0ef:	90                   	nop

000000000000e0f0 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e0f0:	55                   	push   %rbp
    e0f1:	48 89 e5             	mov    %rsp,%rbp
    e0f4:	48 83 ec 20          	sub    $0x20,%rsp
    e0f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    e0fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e100:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e104:	48 89 d6             	mov    %rdx,%rsi
    e107:	48 89 c7             	mov    %rax,%rdi
    e10a:	e8 89 0f 00 00       	call   f098 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e10f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e113:	c9                   	leave
    e114:	c3                   	ret
    e115:	90                   	nop

000000000000e116 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    e116:	55                   	push   %rbp
    e117:	48 89 e5             	mov    %rsp,%rbp
    e11a:	48 83 ec 20          	sub    $0x20,%rsp
    e11e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    e122:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e126:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e12a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e12e:	48 89 d6             	mov    %rdx,%rsi
    e131:	48 89 c7             	mov    %rax,%rdi
    e134:	e8 5f 0f 00 00       	call   f098 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e139:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e13d:	c9                   	leave
    e13e:	c3                   	ret

000000000000e13f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    e13f:	55                   	push   %rbp
    e140:	48 89 e5             	mov    %rsp,%rbp
    e143:	53                   	push   %rbx
    e144:	48 83 ec 18          	sub    $0x18,%rsp
    e148:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e14c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    e150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e154:	48 89 c7             	mov    %rax,%rdi
    e157:	e8 5a 0f 00 00       	call   f0b6 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    e15c:	48 8b 18             	mov    (%rax),%rbx
    e15f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e163:	48 89 c7             	mov    %rax,%rdi
    e166:	e8 4b 0f 00 00       	call   f0b6 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    e16b:	48 8b 00             	mov    (%rax),%rax
    e16e:	48 39 c3             	cmp    %rax,%rbx
    e171:	0f 95 c0             	setne  %al
    e174:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e178:	c9                   	leave
    e179:	c3                   	ret

000000000000e17a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e17a:	55                   	push   %rbp
    e17b:	48 89 e5             	mov    %rsp,%rbp
    e17e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    e182:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e186:	48 8b 00             	mov    (%rax),%rax
    e189:	48 8d 50 04          	lea    0x4(%rax),%rdx
    e18d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e191:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    e194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e198:	5d                   	pop    %rbp
    e199:	c3                   	ret

000000000000e19a <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e19a:	55                   	push   %rbp
    e19b:	48 89 e5             	mov    %rsp,%rbp
    e19e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e1a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1a6:	48 8b 00             	mov    (%rax),%rax
    e1a9:	5d                   	pop    %rbp
    e1aa:	c3                   	ret
    e1ab:	90                   	nop

000000000000e1ac <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
    e1ac:	55                   	push   %rbp
    e1ad:	48 89 e5             	mov    %rsp,%rbp
    e1b0:	48 83 ec 20          	sub    $0x20,%rsp
    e1b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e1b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
    e1bc:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
    e1c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e1c4:	48 89 c7             	mov    %rax,%rdi
    e1c7:	e8 f8 0e 00 00       	call   f0c4 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
    e1cc:	48 89 c2             	mov    %rax,%rdx
    e1cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1d3:	48 89 d6             	mov    %rdx,%rsi
    e1d6:	48 89 c7             	mov    %rax,%rdi
    e1d9:	e8 f4 0e 00 00       	call   f0d2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
    e1de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    e1e2:	c9                   	leave
    e1e3:	c3                   	ret

000000000000e1e4 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e1e4:	55                   	push   %rbp
    e1e5:	48 89 e5             	mov    %rsp,%rbp
    e1e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    e1ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1f0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e1f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1f8:	48 8b 00             	mov    (%rax),%rax
    e1fb:	48 29 c2             	sub    %rax,%rdx
    e1fe:	48 89 d0             	mov    %rdx,%rax
    e201:	48 c1 f8 03          	sar    $0x3,%rax
    e205:	5d                   	pop    %rbp
    e206:	c3                   	ret
    e207:	90                   	nop

000000000000e208 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    e208:	55                   	push   %rbp
    e209:	48 89 e5             	mov    %rsp,%rbp
    e20c:	48 83 ec 10          	sub    $0x10,%rsp
    e210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e214:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    e218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e21c:	48 89 c7             	mov    %rax,%rdi
    e21f:	e8 50 0f 00 00       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    e224:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e228:	0f 92 c0             	setb   %al
    e22b:	84 c0                	test   %al,%al
    e22d:	74 24                	je     e253 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    e22f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e233:	48 89 c7             	mov    %rax,%rdi
    e236:	e8 39 0f 00 00       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    e23b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e23f:	48 29 c2             	sub    %rax,%rdx
    e242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e246:	48 89 d6             	mov    %rdx,%rsi
    e249:	48 89 c7             	mov    %rax,%rdi
    e24c:	e8 47 0f 00 00       	call   f198 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
    e251:	eb 38                	jmp    e28b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    e253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e257:	48 89 c7             	mov    %rax,%rdi
    e25a:	e8 15 0f 00 00       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    e25f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    e263:	0f 92 c0             	setb   %al
    e266:	84 c0                	test   %al,%al
    e268:	74 21                	je     e28b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    e26a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e26e:	48 8b 00             	mov    (%rax),%rax
    e271:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e275:	48 c1 e2 03          	shl    $0x3,%rdx
    e279:	48 01 c2             	add    %rax,%rdx
    e27c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e280:	48 89 d6             	mov    %rdx,%rsi
    e283:	48 89 c7             	mov    %rax,%rdi
    e286:	e8 17 11 00 00       	call   f3a2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    e28b:	90                   	nop
    e28c:	c9                   	leave
    e28d:	c3                   	ret

000000000000e28e <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e28e:	55                   	push   %rbp
    e28f:	48 89 e5             	mov    %rsp,%rbp
    e292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e296:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e29a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e29e:	48 8b 00             	mov    (%rax),%rax
    e2a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2a5:	48 c1 e2 03          	shl    $0x3,%rdx
    e2a9:	48 01 d0             	add    %rdx,%rax
      }
    e2ac:	5d                   	pop    %rbp
    e2ad:	c3                   	ret

000000000000e2ae <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e2ae:	55                   	push   %rbp
    e2af:	48 89 e5             	mov    %rsp,%rbp
    e2b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e2ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2be:	48 8b 00             	mov    (%rax),%rax
    e2c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2c5:	48 c1 e2 03          	shl    $0x3,%rdx
    e2c9:	48 01 d0             	add    %rdx,%rax
      }
    e2cc:	5d                   	pop    %rbp
    e2cd:	c3                   	ret

000000000000e2ce <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    e2ce:	55                   	push   %rbp
    e2cf:	48 89 e5             	mov    %rsp,%rbp
    e2d2:	48 83 ec 10          	sub    $0x10,%rsp
    e2d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    e2da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2de:	48 89 c7             	mov    %rax,%rdi
    e2e1:	e8 1c 11 00 00       	call   f402 <_ZNSaIP13VkImageView_TEC1Ev>
    e2e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2ea:	48 89 c7             	mov    %rax,%rdi
    e2ed:	e8 2c 11 00 00       	call   f41e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    e2f2:	90                   	nop
    e2f3:	c9                   	leave
    e2f4:	c3                   	ret
    e2f5:	90                   	nop

000000000000e2f6 <_ZNSaIP13VkImageView_TED1Ev>:
    e2f6:	55                   	push   %rbp
    e2f7:	48 89 e5             	mov    %rsp,%rbp
    e2fa:	48 83 ec 10          	sub    $0x10,%rsp
    e2fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e306:	48 89 c7             	mov    %rax,%rdi
    e309:	e8 3e 11 00 00       	call   f44c <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
    e30e:	90                   	nop
    e30f:	c9                   	leave
    e310:	c3                   	ret
    e311:	90                   	nop

000000000000e312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    e312:	55                   	push   %rbp
    e313:	48 89 e5             	mov    %rsp,%rbp
    e316:	48 83 ec 10          	sub    $0x10,%rsp
    e31a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    e31e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e322:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e32a:	48 8b 00             	mov    (%rax),%rax
    e32d:	48 29 c2             	sub    %rax,%rdx
    e330:	48 89 d0             	mov    %rdx,%rax
    e333:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    e337:	48 89 c2             	mov    %rax,%rdx
    e33a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e33e:	48 8b 08             	mov    (%rax),%rcx
    e341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e345:	48 89 ce             	mov    %rcx,%rsi
    e348:	48 89 c7             	mov    %rax,%rdi
    e34b:	e8 08 11 00 00       	call   f458 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    e350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e354:	48 89 c7             	mov    %rax,%rdi
    e357:	e8 68 f4 ff ff       	call   d7c4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
    e35c:	90                   	nop
    e35d:	c9                   	leave
    e35e:	c3                   	ret
    e35f:	90                   	nop

000000000000e360 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    e360:	55                   	push   %rbp
    e361:	48 89 e5             	mov    %rsp,%rbp
    e364:	48 83 ec 10          	sub    $0x10,%rsp
    e368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    e36c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e370:	48 89 c7             	mov    %rax,%rdi
    e373:	e8 16 11 00 00       	call   f48e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    e378:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    e37b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e37f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e387:	48 8b 00             	mov    (%rax),%rax
    e38a:	48 89 ce             	mov    %rcx,%rsi
    e38d:	48 89 c7             	mov    %rax,%rdi
    e390:	e8 07 11 00 00       	call   f49c <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
    e395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e399:	48 89 c7             	mov    %rax,%rdi
    e39c:	e8 71 ff ff ff       	call   e312 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
    e3a1:	90                   	nop
    e3a2:	c9                   	leave
    e3a3:	c3                   	ret

000000000000e3a4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    e3a4:	55                   	push   %rbp
    e3a5:	48 89 e5             	mov    %rsp,%rbp
    e3a8:	48 83 ec 10          	sub    $0x10,%rsp
    e3ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    e3b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3b4:	48 89 c7             	mov    %rax,%rdi
    e3b7:	e8 44 86 ff ff       	call   6a00 <_ZNSaIP9VkImage_TEC1Ev>
    e3bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3c0:	48 89 c7             	mov    %rax,%rdi
    e3c3:	e8 d4 ab ff ff       	call   8f9c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    e3c8:	90                   	nop
    e3c9:	c9                   	leave
    e3ca:	c3                   	ret
    e3cb:	90                   	nop

000000000000e3cc <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e3cc:	55                   	push   %rbp
    e3cd:	48 89 e5             	mov    %rsp,%rbp
    e3d0:	48 83 ec 20          	sub    $0x20,%rsp
    e3d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    e3d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e3dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e3e0:	48 89 d6             	mov    %rdx,%rsi
    e3e3:	48 89 c7             	mov    %rax,%rdi
    e3e6:	e8 db 10 00 00       	call   f4c6 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    e3eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3ef:	c9                   	leave
    e3f0:	c3                   	ret
    e3f1:	90                   	nop

000000000000e3f2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    e3f2:	55                   	push   %rbp
    e3f3:	48 89 e5             	mov    %rsp,%rbp
    e3f6:	48 83 ec 20          	sub    $0x20,%rsp
    e3fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    e3fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e402:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e406:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e40a:	48 89 d6             	mov    %rdx,%rsi
    e40d:	48 89 c7             	mov    %rax,%rdi
    e410:	e8 b1 10 00 00       	call   f4c6 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    e415:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e419:	c9                   	leave
    e41a:	c3                   	ret

000000000000e41b <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    e41b:	55                   	push   %rbp
    e41c:	48 89 e5             	mov    %rsp,%rbp
    e41f:	53                   	push   %rbx
    e420:	48 83 ec 18          	sub    $0x18,%rsp
    e424:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e428:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    e42c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e430:	48 89 c7             	mov    %rax,%rdi
    e433:	e8 ac 10 00 00       	call   f4e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
    e438:	48 8b 18             	mov    (%rax),%rbx
    e43b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e43f:	48 89 c7             	mov    %rax,%rdi
    e442:	e8 9d 10 00 00       	call   f4e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
    e447:	48 8b 00             	mov    (%rax),%rax
    e44a:	48 39 c3             	cmp    %rax,%rbx
    e44d:	0f 95 c0             	setne  %al
    e450:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e454:	c9                   	leave
    e455:	c3                   	ret

000000000000e456 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e456:	55                   	push   %rbp
    e457:	48 89 e5             	mov    %rsp,%rbp
    e45a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    e45e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e462:	48 8b 00             	mov    (%rax),%rax
    e465:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e46d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    e470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e474:	5d                   	pop    %rbp
    e475:	c3                   	ret

000000000000e476 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e476:	55                   	push   %rbp
    e477:	48 89 e5             	mov    %rsp,%rbp
    e47a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e47e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e482:	48 8b 00             	mov    (%rax),%rax
    e485:	5d                   	pop    %rbp
    e486:	c3                   	ret
    e487:	90                   	nop

000000000000e488 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
    e488:	55                   	push   %rbp
    e489:	48 89 e5             	mov    %rsp,%rbp
    e48c:	53                   	push   %rbx
    e48d:	48 83 ec 18          	sub    $0x18,%rsp
    e491:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e499:	48 89 c7             	mov    %rax,%rdi
    e49c:	e8 51 10 00 00       	call   f4f2 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    e4a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4a5:	48 83 c0 08          	add    $0x8,%rax
    e4a9:	48 89 c7             	mov    %rax,%rdi
    e4ac:	e8 1f 50 ff ff       	call   34d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
    e4b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4b5:	48 83 c0 08          	add    $0x8,%rax
    e4b9:	48 8d 15 12 71 00 00 	lea    0x7112(%rip),%rdx        # 155d2 <_ZN6__pstl9execution2v1L5unseqE+0x323>
    e4c0:	48 89 d6             	mov    %rdx,%rsi
    e4c3:	48 89 c7             	mov    %rax,%rdi
    e4c6:	e8 d5 4f ff ff       	call   34a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
    e4cb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e4cf:	e8 9c 4f ff ff       	call   3470 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    e4d4:	48 89 03             	mov    %rax,(%rbx)
  }
    e4d7:	eb 1e                	jmp    e4f7 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    e4d9:	48 89 c3             	mov    %rax,%rbx
    e4dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4e0:	48 83 c0 08          	add    $0x8,%rax
    e4e4:	48 89 c7             	mov    %rax,%rdi
    e4e7:	e8 b4 4c ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e4ec:	48 89 d8             	mov    %rbx,%rax
    e4ef:	48 89 c7             	mov    %rax,%rdi
    e4f2:	e8 d9 50 ff ff       	call   35d0 <_Unwind_Resume@plt>
    e4f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e4fb:	c9                   	leave
    e4fc:	c3                   	ret
    e4fd:	90                   	nop

000000000000e4fe <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
    e4fe:	55                   	push   %rbp
    e4ff:	48 89 e5             	mov    %rsp,%rbp
    e502:	48 83 ec 20          	sub    $0x20,%rsp
    e506:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
    e50a:	e8 61 4f ff ff       	call   3470 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    e50f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
    e513:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e517:	48 83 c0 08          	add    $0x8,%rax
    e51b:	48 89 c7             	mov    %rax,%rdi
    e51e:	e8 7d 4c ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e523:	90                   	nop
    e524:	c9                   	leave
    e525:	c3                   	ret

000000000000e526 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    e526:	55                   	push   %rbp
    e527:	48 89 e5             	mov    %rsp,%rbp
    e52a:	48 83 ec 20          	sub    $0x20,%rsp
    e52e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e532:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    e536:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e53a:	48 89 c7             	mov    %rax,%rdi
    e53d:	e8 d0 0f 00 00       	call   f512 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    e542:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e546:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e54a:	48 89 c7             	mov    %rax,%rdi
    e54d:	e8 c0 0f 00 00       	call   f512 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    e552:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e556:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    e55a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e55e:	48 89 d6             	mov    %rdx,%rsi
    e561:	48 89 c7             	mov    %rax,%rdi
    e564:	e8 ba 0f 00 00       	call   f523 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    e569:	c9                   	leave
    e56a:	c3                   	ret

000000000000e56b <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    e56b:	55                   	push   %rbp
    e56c:	48 89 e5             	mov    %rsp,%rbp
    e56f:	48 83 ec 10          	sub    $0x10,%rsp
    e573:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    e577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e57b:	48 89 c7             	mov    %rax,%rdi
    e57e:	e8 09 10 00 00       	call   f58c <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    e583:	c9                   	leave
    e584:	c3                   	ret
    e585:	90                   	nop

000000000000e586 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    e586:	55                   	push   %rbp
    e587:	48 89 e5             	mov    %rsp,%rbp
    e58a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    e58e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e592:	48 8b 00             	mov    (%rax),%rax
    e595:	5d                   	pop    %rbp
    e596:	c3                   	ret
    e597:	90                   	nop

000000000000e598 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
    e598:	55                   	push   %rbp
    e599:	48 89 e5             	mov    %rsp,%rbp
    e59c:	53                   	push   %rbx
    e59d:	48 83 ec 18          	sub    $0x18,%rsp
    e5a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e5a5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e5a9:	e8 c2 4e ff ff       	call   3470 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    e5ae:	48 89 03             	mov    %rax,(%rbx)
    e5b1:	90                   	nop
    e5b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e5b6:	c9                   	leave
    e5b7:	c3                   	ret

000000000000e5b8 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    e5b8:	55                   	push   %rbp
    e5b9:	48 89 e5             	mov    %rsp,%rbp
    e5bc:	53                   	push   %rbx
    e5bd:	48 83 ec 38          	sub    $0x38,%rsp
    e5c1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e5c5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e5c9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    e5cd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e5d1:	48 89 c7             	mov    %rax,%rdi
    e5d4:	e8 90 53 ff ff       	call   3969 <_ZNSt11char_traitsIcE6lengthEPKc>
    e5d9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    e5dd:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    e5e1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e5e5:	48 89 d6             	mov    %rdx,%rsi
    e5e8:	48 89 c7             	mov    %rax,%rdi
    e5eb:	e8 e0 4a ff ff       	call   30d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    e5f0:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    e5f4:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    e5f8:	48 89 d6             	mov    %rdx,%rsi
    e5fb:	48 89 c7             	mov    %rax,%rdi
    e5fe:	e8 e2 0f 00 00       	call   f5e5 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    e603:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    e607:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e60b:	48 89 d6             	mov    %rdx,%rsi
    e60e:	48 89 c7             	mov    %rax,%rdi
    e611:	e8 7a 4f ff ff       	call   3590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    e616:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    e61a:	48 89 c7             	mov    %rax,%rdi
    e61d:	e8 7e 4d ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    e622:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    e626:	48 89 c7             	mov    %rax,%rdi
    e629:	e8 72 4d ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    e62e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e632:	48 89 c7             	mov    %rax,%rdi
    e635:	e8 96 4b ff ff       	call   31d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    e63a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e63e:	48 01 c2             	add    %rax,%rdx
    e641:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e645:	48 89 d6             	mov    %rdx,%rsi
    e648:	48 89 c7             	mov    %rax,%rdi
    e64b:	e8 f0 4e ff ff       	call   3540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    e650:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e654:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e658:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e65c:	48 89 ce             	mov    %rcx,%rsi
    e65f:	48 89 c7             	mov    %rax,%rdi
    e662:	e8 d9 49 ff ff       	call   3040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    e667:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e66b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e66f:	48 89 d6             	mov    %rdx,%rsi
    e672:	48 89 c7             	mov    %rax,%rdi
    e675:	e8 c6 4f ff ff       	call   3640 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    e67a:	eb 34                	jmp    e6b0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    e67c:	48 89 c3             	mov    %rax,%rbx
    e67f:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    e683:	48 89 c7             	mov    %rax,%rdi
    e686:	e8 15 4d ff ff       	call   33a0 <_ZNSaIcED1Ev@plt>
    e68b:	48 89 d8             	mov    %rbx,%rax
    e68e:	48 89 c7             	mov    %rax,%rdi
    e691:	e8 3a 4f ff ff       	call   35d0 <_Unwind_Resume@plt>
    }
    e696:	48 89 c3             	mov    %rax,%rbx
    e699:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e69d:	48 89 c7             	mov    %rax,%rdi
    e6a0:	e8 fb 4a ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e6a5:	48 89 d8             	mov    %rbx,%rax
    e6a8:	48 89 c7             	mov    %rax,%rdi
    e6ab:	e8 20 4f ff ff       	call   35d0 <_Unwind_Resume@plt>
    e6b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e6b8:	c9                   	leave
    e6b9:	c3                   	ret

000000000000e6ba <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
    e6ba:	55                   	push   %rbp
    e6bb:	48 89 e5             	mov    %rsp,%rbp
    e6be:	48 83 ec 20          	sub    $0x20,%rsp
    e6c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e6ca:	89 d0                	mov    %edx,%eax
    e6cc:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
    e6cf:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
    e6d3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e6d7:	be 01 00 00 00       	mov    $0x1,%esi
    e6dc:	48 89 c7             	mov    %rax,%rdi
    e6df:	e8 ac 4c ff ff       	call   3390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
    e6e4:	48 89 c7             	mov    %rax,%rdi
    e6e7:	e8 d3 00 00 00       	call   e7bf <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    e6ec:	48 89 c2             	mov    %rax,%rdx
    e6ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6f3:	48 89 d6             	mov    %rdx,%rsi
    e6f6:	48 89 c7             	mov    %rax,%rdi
    e6f9:	e8 92 4a ff ff       	call   3190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
    e6fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e702:	c9                   	leave
    e703:	c3                   	ret

000000000000e704 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    e704:	55                   	push   %rbp
    e705:	48 89 e5             	mov    %rsp,%rbp
    e708:	48 83 ec 20          	sub    $0x20,%rsp
    e70c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    e710:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e714:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e718:	48 89 d6             	mov    %rdx,%rsi
    e71b:	48 89 c7             	mov    %rax,%rdi
    e71e:	e8 eb 0e 00 00       	call   f60e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    e723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e727:	c9                   	leave
    e728:	c3                   	ret
    e729:	90                   	nop

000000000000e72a <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    e72a:	55                   	push   %rbp
    e72b:	48 89 e5             	mov    %rsp,%rbp
    e72e:	48 83 ec 20          	sub    $0x20,%rsp
    e732:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    e736:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e73a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e73e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e742:	48 89 d6             	mov    %rdx,%rsi
    e745:	48 89 c7             	mov    %rax,%rdi
    e748:	e8 c1 0e 00 00       	call   f60e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    e74d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e751:	c9                   	leave
    e752:	c3                   	ret

000000000000e753 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    e753:	55                   	push   %rbp
    e754:	48 89 e5             	mov    %rsp,%rbp
    e757:	53                   	push   %rbx
    e758:	48 83 ec 18          	sub    $0x18,%rsp
    e75c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e760:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    e764:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e768:	48 89 c7             	mov    %rax,%rdi
    e76b:	e8 bc 0e 00 00       	call   f62c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    e770:	48 8b 18             	mov    (%rax),%rbx
    e773:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e777:	48 89 c7             	mov    %rax,%rdi
    e77a:	e8 ad 0e 00 00       	call   f62c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    e77f:	48 8b 00             	mov    (%rax),%rax
    e782:	48 39 c3             	cmp    %rax,%rbx
    e785:	0f 95 c0             	setne  %al
    e788:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e78c:	c9                   	leave
    e78d:	c3                   	ret

000000000000e78e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e78e:	55                   	push   %rbp
    e78f:	48 89 e5             	mov    %rsp,%rbp
    e792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    e796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e79a:	48 8b 00             	mov    (%rax),%rax
    e79d:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e7a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7a5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    e7a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e7ac:	5d                   	pop    %rbp
    e7ad:	c3                   	ret

000000000000e7ae <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    e7ae:	55                   	push   %rbp
    e7af:	48 89 e5             	mov    %rsp,%rbp
    e7b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    e7b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7ba:	48 8b 00             	mov    (%rax),%rax
    e7bd:	5d                   	pop    %rbp
    e7be:	c3                   	ret

000000000000e7bf <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    e7bf:	55                   	push   %rbp
    e7c0:	48 89 e5             	mov    %rsp,%rbp
    e7c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    e7c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7cb:	5d                   	pop    %rbp
    e7cc:	c3                   	ret
    e7cd:	90                   	nop

000000000000e7ce <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    e7ce:	55                   	push   %rbp
    e7cf:	48 89 e5             	mov    %rsp,%rbp
    e7d2:	48 83 ec 10          	sub    $0x10,%rsp
    e7d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    e7de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e7e6:	48 89 d6             	mov    %rdx,%rsi
    e7e9:	48 89 c7             	mov    %rax,%rdi
    e7ec:	e8 8b 96 ff ff       	call   7e7c <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    e7f1:	90                   	nop
    e7f2:	c9                   	leave
    e7f3:	c3                   	ret

000000000000e7f4 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    e7f4:	55                   	push   %rbp
    e7f5:	48 89 e5             	mov    %rsp,%rbp
    e7f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e800:	48 8b 00             	mov    (%rax),%rax
    e803:	5d                   	pop    %rbp
    e804:	c3                   	ret
    e805:	90                   	nop

000000000000e806 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    e806:	55                   	push   %rbp
    e807:	48 89 e5             	mov    %rsp,%rbp
    e80a:	53                   	push   %rbx
    e80b:	48 83 ec 18          	sub    $0x18,%rsp
    e80f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e817:	48 89 c7             	mov    %rax,%rdi
    e81a:	e8 d5 ff ff ff       	call   e7f4 <_ZNKSt16initializer_listIPKcE5beginEv>
    e81f:	48 89 c3             	mov    %rax,%rbx
    e822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e826:	48 89 c7             	mov    %rax,%rdi
    e829:	e8 0c 0e 00 00       	call   f63a <_ZNKSt16initializer_listIPKcE4sizeEv>
    e82e:	48 c1 e0 03          	shl    $0x3,%rax
    e832:	48 01 d8             	add    %rbx,%rax
    e835:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e839:	c9                   	leave
    e83a:	c3                   	ret

000000000000e83b <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    e83b:	55                   	push   %rbp
    e83c:	48 89 e5             	mov    %rsp,%rbp
    e83f:	48 83 ec 10          	sub    $0x10,%rsp
    e843:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e847:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    e84b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e84f:	48 89 c7             	mov    %rax,%rdi
    e852:	e8 f5 0d 00 00       	call   f64c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    e857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e85b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e85f:	48 89 d6             	mov    %rdx,%rsi
    e862:	48 89 c7             	mov    %rax,%rdi
    e865:	e8 ed 0d 00 00       	call   f657 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    e86a:	c9                   	leave
    e86b:	c3                   	ret

000000000000e86c <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    e86c:	55                   	push   %rbp
    e86d:	48 89 e5             	mov    %rsp,%rbp
    e870:	53                   	push   %rbx
    e871:	48 83 ec 38          	sub    $0x38,%rsp
    e875:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e879:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e87d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    e881:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e885:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e889:	48 89 d6             	mov    %rdx,%rsi
    e88c:	48 89 c7             	mov    %rax,%rdi
    e88f:	e8 a7 ff ff ff       	call   e83b <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    e894:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    e898:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e89c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e8a0:	48 89 c7             	mov    %rax,%rdi
    e8a3:	e8 4a 87 ff ff       	call   6ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e8a8:	48 89 c2             	mov    %rax,%rdx
    e8ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e8af:	48 89 d6             	mov    %rdx,%rsi
    e8b2:	48 89 c7             	mov    %rax,%rdi
    e8b5:	e8 39 86 ff ff       	call   6ef3 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    e8ba:	48 89 c6             	mov    %rax,%rsi
    e8bd:	48 89 df             	mov    %rbx,%rdi
    e8c0:	e8 43 a1 ff ff       	call   8a08 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    e8c5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e8c9:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    e8cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e8d0:	48 8b 00             	mov    (%rax),%rax
    e8d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e8d7:	48 c1 e2 03          	shl    $0x3,%rdx
    e8db:	48 01 c2             	add    %rax,%rdx
    e8de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e8e2:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    e8e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e8ea:	48 89 c7             	mov    %rax,%rdi
    e8ed:	e8 00 87 ff ff       	call   6ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e8f2:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    e8f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e8f9:	48 8b 10             	mov    (%rax),%rdx
    e8fc:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    e900:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e904:	48 89 c7             	mov    %rax,%rdi
    e907:	e8 65 0d 00 00       	call   f671 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    e90c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e910:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    e914:	90                   	nop
    e915:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e919:	c9                   	leave
    e91a:	c3                   	ret

000000000000e91b <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e91b:	55                   	push   %rbp
    e91c:	48 89 e5             	mov    %rsp,%rbp
    e91f:	48 83 ec 20          	sub    $0x20,%rsp
    e923:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e927:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e92b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e92f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e937:	48 89 d6             	mov    %rdx,%rsi
    e93a:	48 89 c7             	mov    %rax,%rdi
    e93d:	e8 60 0d 00 00       	call   f6a2 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    e942:	90                   	nop
    e943:	c9                   	leave
    e944:	c3                   	ret
    e945:	90                   	nop

000000000000e946 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e946:	55                   	push   %rbp
    e947:	48 89 e5             	mov    %rsp,%rbp
    e94a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e94e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e952:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e956:	48 8b 10             	mov    (%rax),%rdx
    e959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e95d:	48 89 10             	mov    %rdx,(%rax)
    e960:	90                   	nop
    e961:	5d                   	pop    %rbp
    e962:	c3                   	ret
    e963:	90                   	nop

000000000000e964 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e964:	55                   	push   %rbp
    e965:	48 89 e5             	mov    %rsp,%rbp
    e968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e96c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e970:	5d                   	pop    %rbp
    e971:	c3                   	ret

000000000000e972 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    e972:	55                   	push   %rbp
    e973:	48 89 e5             	mov    %rsp,%rbp
    e976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    e97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e97e:	5d                   	pop    %rbp
    e97f:	c3                   	ret

000000000000e980 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    e980:	55                   	push   %rbp
    e981:	48 89 e5             	mov    %rsp,%rbp
    e984:	48 83 ec 20          	sub    $0x20,%rsp
    e988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e98c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e990:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    e994:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e998:	48 89 c7             	mov    %rax,%rdi
    e99b:	e8 d2 ff ff ff       	call   e972 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    e9a0:	48 89 c2             	mov    %rax,%rdx
    e9a3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e9a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ab:	48 89 ce             	mov    %rcx,%rsi
    e9ae:	48 89 c7             	mov    %rax,%rdi
    e9b1:	e8 12 0d 00 00       	call   f6c8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
    e9b6:	90                   	nop
    e9b7:	c9                   	leave
    e9b8:	c3                   	ret
    e9b9:	90                   	nop

000000000000e9ba <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    e9ba:	55                   	push   %rbp
    e9bb:	48 89 e5             	mov    %rsp,%rbp
    e9be:	53                   	push   %rbx
    e9bf:	48 83 ec 68          	sub    $0x68,%rsp
    e9c3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    e9c7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    e9cb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    e9cf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e9d3:	48 8d 15 fc 6b 00 00 	lea    0x6bfc(%rip),%rdx        # 155d6 <_ZN6__pstl9execution2v1L5unseqE+0x327>
    e9da:	be 01 00 00 00       	mov    $0x1,%esi
    e9df:	48 89 c7             	mov    %rax,%rdi
    e9e2:	e8 23 0d 00 00       	call   f70a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    e9e7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    e9eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e9ef:	48 8b 00             	mov    (%rax),%rax
    e9f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    e9f6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e9fa:	48 8b 40 08          	mov    0x8(%rax),%rax
    e9fe:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    ea02:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea06:	48 89 c7             	mov    %rax,%rdi
    ea09:	e8 5e ef ff ff       	call   d96c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    ea0e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    ea12:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    ea16:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ea1a:	48 89 d6             	mov    %rdx,%rsi
    ea1d:	48 89 c7             	mov    %rax,%rdi
    ea20:	e8 ad 0d 00 00       	call   f7d2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    ea25:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    ea29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ea31:	48 89 d6             	mov    %rdx,%rsi
    ea34:	48 89 c7             	mov    %rax,%rdi
    ea37:	e8 cc 9f ff ff       	call   8a08 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    ea3c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    ea40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ea44:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    ea48:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ea4c:	48 89 c7             	mov    %rax,%rdi
    ea4f:	e8 1e ff ff ff       	call   e972 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    ea54:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    ea57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ea5b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    ea62:	00 
	  _Alloc_traits::construct(this->_M_impl,
    ea63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ea67:	48 01 c1             	add    %rax,%rcx
    ea6a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea6e:	48 89 ce             	mov    %rcx,%rsi
    ea71:	48 89 c7             	mov    %rax,%rdi
    ea74:	e8 07 ff ff ff       	call   e980 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    ea79:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    ea80:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    ea81:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea85:	48 89 c7             	mov    %rax,%rdi
    ea88:	e8 65 85 ff ff       	call   6ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    ea8d:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    ea90:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ea94:	48 89 c7             	mov    %rax,%rdi
    ea97:	e8 c8 fe ff ff       	call   e964 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ea9c:	48 8b 30             	mov    (%rax),%rsi
    ea9f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    eaa3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eaa7:	48 89 d9             	mov    %rbx,%rcx
    eaaa:	48 89 c7             	mov    %rax,%rdi
    eaad:	e8 62 0d 00 00       	call   f814 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    eab2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    eab6:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    eabb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eabf:	48 89 c7             	mov    %rax,%rdi
    eac2:	e8 2b 85 ff ff       	call   6ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    eac7:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    eaca:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    eace:	48 89 c7             	mov    %rax,%rdi
    ead1:	e8 8e fe ff ff       	call   e964 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ead6:	48 8b 00             	mov    (%rax),%rax
    ead9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    eadd:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    eae1:	48 89 d9             	mov    %rbx,%rcx
    eae4:	48 89 c7             	mov    %rax,%rdi
    eae7:	e8 28 0d 00 00       	call   f814 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    eaec:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    eaf0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    eaf4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    eaf8:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    eafc:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    eb00:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    eb04:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    eb08:	48 89 ce             	mov    %rcx,%rsi
    eb0b:	48 89 c7             	mov    %rax,%rdi
    eb0e:	e8 13 85 ff ff       	call   7026 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    eb13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eb17:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    eb1b:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    eb1e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eb22:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    eb26:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    eb2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb2e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    eb35:	00 
    eb36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb3a:	48 01 c2             	add    %rax,%rdx
    eb3d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eb41:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    eb45:	90                   	nop
    eb46:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    eb4a:	c9                   	leave
    eb4b:	c3                   	ret

000000000000eb4c <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    eb4c:	55                   	push   %rbp
    eb4d:	48 89 e5             	mov    %rsp,%rbp
    eb50:	48 83 ec 20          	sub    $0x20,%rsp
    eb54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    eb58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb5c:	48 89 c7             	mov    %rax,%rdi
    eb5f:	e8 2e ee ff ff       	call   d992 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    eb64:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    eb68:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    eb6c:	be 01 00 00 00       	mov    $0x1,%esi
    eb71:	48 89 c7             	mov    %rax,%rdi
    eb74:	e8 cd 0c 00 00       	call   f846 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    eb79:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    eb7d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    eb81:	48 89 c7             	mov    %rax,%rdi
    eb84:	e8 8d ee ff ff       	call   da16 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    eb89:	c9                   	leave
    eb8a:	c3                   	ret
    eb8b:	90                   	nop

000000000000eb8c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    eb8c:	55                   	push   %rbp
    eb8d:	48 89 e5             	mov    %rsp,%rbp
    eb90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    eb98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb9c:	5d                   	pop    %rbp
    eb9d:	c3                   	ret

000000000000eb9e <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    eb9e:	55                   	push   %rbp
    eb9f:	48 89 e5             	mov    %rsp,%rbp
    eba2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    eba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebaa:	5d                   	pop    %rbp
    ebab:	c3                   	ret

000000000000ebac <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ebac:	55                   	push   %rbp
    ebad:	48 89 e5             	mov    %rsp,%rbp
    ebb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ebb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebb8:	5d                   	pop    %rbp
    ebb9:	c3                   	ret

000000000000ebba <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ebba:	55                   	push   %rbp
    ebbb:	48 89 e5             	mov    %rsp,%rbp
    ebbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ebc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebc6:	5d                   	pop    %rbp
    ebc7:	c3                   	ret

000000000000ebc8 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
    ebc8:	55                   	push   %rbp
    ebc9:	48 89 e5             	mov    %rsp,%rbp
    ebcc:	48 83 ec 20          	sub    $0x20,%rsp
    ebd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ebd4:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
    ebd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebdc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ebe0:	48 89 d6             	mov    %rdx,%rsi
    ebe3:	48 89 c7             	mov    %rax,%rdi
    ebe6:	e8 9d 0c 00 00       	call   f888 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
    ebeb:	90                   	nop
    ebec:	c9                   	leave
    ebed:	c3                   	ret

000000000000ebee <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
    ebee:	55                   	push   %rbp
    ebef:	48 89 e5             	mov    %rsp,%rbp
    ebf2:	53                   	push   %rbx
    ebf3:	48 83 ec 18          	sub    $0x18,%rsp
    ebf7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ebfb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
    ebff:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    ec03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec07:	48 89 c7             	mov    %rax,%rdi
    ec0a:	e8 ab ff ff ff       	call   ebba <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    ec0f:	48 89 c6             	mov    %rax,%rsi
    ec12:	48 89 df             	mov    %rbx,%rdi
    ec15:	e8 ae ff ff ff       	call   ebc8 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
    ec1a:	90                   	nop
    ec1b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ec1f:	c9                   	leave
    ec20:	c3                   	ret
    ec21:	90                   	nop

000000000000ec22 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ec22:	55                   	push   %rbp
    ec23:	48 89 e5             	mov    %rsp,%rbp
    ec26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ec2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec32:	48 8b 10             	mov    (%rax),%rdx
    ec35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec39:	48 89 10             	mov    %rdx,(%rax)
    ec3c:	90                   	nop
    ec3d:	5d                   	pop    %rbp
    ec3e:	c3                   	ret
    ec3f:	90                   	nop

000000000000ec40 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ec40:	55                   	push   %rbp
    ec41:	48 89 e5             	mov    %rsp,%rbp
    ec44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ec48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec4c:	5d                   	pop    %rbp
    ec4d:	c3                   	ret

000000000000ec4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
    ec4e:	55                   	push   %rbp
    ec4f:	48 89 e5             	mov    %rsp,%rbp
    ec52:	53                   	push   %rbx
    ec53:	48 83 ec 18          	sub    $0x18,%rsp
    ec57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ec5b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
    ec5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec63:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    ec67:	84 c0                	test   %al,%al
    ec69:	74 35                	je     eca0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
    ec6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec6f:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    ec73:	84 c0                	test   %al,%al
    ec75:	74 29                	je     eca0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
    ec77:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec7b:	48 89 c7             	mov    %rax,%rdi
    ec7e:	e8 41 0c 00 00       	call   f8c4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    ec83:	48 89 c3             	mov    %rax,%rbx
    ec86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec8a:	48 89 c7             	mov    %rax,%rdi
    ec8d:	e8 4e 00 00 00       	call   ece0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    ec92:	48 89 de             	mov    %rbx,%rsi
    ec95:	48 89 c7             	mov    %rax,%rdi
    ec98:	e8 35 0c 00 00       	call   f8d2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
    ec9d:	90                   	nop
      }
    ec9e:	eb 38                	jmp    ecd8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
    eca0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eca4:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    eca8:	84 c0                	test   %al,%al
    ecaa:	74 20                	je     eccc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
    ecac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ecb0:	48 89 c7             	mov    %rax,%rdi
    ecb3:	e8 0c 0c 00 00       	call   f8c4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
    ecb8:	48 89 c2             	mov    %rax,%rdx
    ecbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecbf:	48 89 d6             	mov    %rdx,%rsi
    ecc2:	48 89 c7             	mov    %rax,%rdi
    ecc5:	e8 46 0c 00 00       	call   f910 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
    ecca:	eb 0c                	jmp    ecd8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
    eccc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecd0:	48 89 c7             	mov    %rax,%rdi
    ecd3:	e8 7e 0c 00 00       	call   f956 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
    ecd8:	90                   	nop
    ecd9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ecdd:	c9                   	leave
    ecde:	c3                   	ret
    ecdf:	90                   	nop

000000000000ece0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
    ece0:	55                   	push   %rbp
    ece1:	48 89 e5             	mov    %rsp,%rbp
    ece4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    ece8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecec:	5d                   	pop    %rbp
    eced:	c3                   	ret

000000000000ecee <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    ecee:	55                   	push   %rbp
    ecef:	48 89 e5             	mov    %rsp,%rbp
    ecf2:	48 83 ec 10          	sub    $0x10,%rsp
    ecf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecfe:	48 89 c7             	mov    %rax,%rdi
    ed01:	e8 78 0c 00 00       	call   f97e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    ed06:	90                   	nop
    ed07:	c9                   	leave
    ed08:	c3                   	ret
    ed09:	90                   	nop

000000000000ed0a <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    ed0a:	55                   	push   %rbp
    ed0b:	48 89 e5             	mov    %rsp,%rbp
    ed0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    ed12:	90                   	nop
    ed13:	5d                   	pop    %rbp
    ed14:	c3                   	ret
    ed15:	90                   	nop

000000000000ed16 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ed16:	55                   	push   %rbp
    ed17:	48 89 e5             	mov    %rsp,%rbp
    ed1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed1e:	90                   	nop
    ed1f:	5d                   	pop    %rbp
    ed20:	c3                   	ret
    ed21:	90                   	nop

000000000000ed22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    ed22:	55                   	push   %rbp
    ed23:	48 89 e5             	mov    %rsp,%rbp
    ed26:	48 83 ec 20          	sub    $0x20,%rsp
    ed2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ed2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    ed32:	eb 49                	jmp    ed7d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    ed34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ed38:	48 89 c7             	mov    %rax,%rdi
    ed3b:	e8 49 0c 00 00       	call   f989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    ed40:	48 89 c2             	mov    %rax,%rdx
    ed43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed47:	48 89 d6             	mov    %rdx,%rsi
    ed4a:	48 89 c7             	mov    %rax,%rdi
    ed4d:	e8 d0 ff ff ff       	call   ed22 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    ed52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ed56:	48 89 c7             	mov    %rax,%rdi
    ed59:	e8 3d 0c 00 00       	call   f99b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    ed5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    ed62:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ed66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed6a:	48 89 d6             	mov    %rdx,%rsi
    ed6d:	48 89 c7             	mov    %rax,%rdi
    ed70:	e8 39 0c 00 00       	call   f9ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    ed75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed79:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    ed7d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ed82:	75 b0                	jne    ed34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
    ed84:	90                   	nop
    ed85:	90                   	nop
    ed86:	c9                   	leave
    ed87:	c3                   	ret

000000000000ed88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    ed88:	55                   	push   %rbp
    ed89:	48 89 e5             	mov    %rsp,%rbp
    ed8c:	48 83 ec 10          	sub    $0x10,%rsp
    ed90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    ed94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed98:	48 89 c7             	mov    %rax,%rdi
    ed9b:	e8 48 0c 00 00       	call   f9e8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    eda0:	c9                   	leave
    eda1:	c3                   	ret

000000000000eda2 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    eda2:	55                   	push   %rbp
    eda3:	48 89 e5             	mov    %rsp,%rbp
    eda6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    edaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    edae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    edb2:	48 8b 10             	mov    (%rax),%rdx
    edb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edb9:	48 89 10             	mov    %rdx,(%rax)
    edbc:	90                   	nop
    edbd:	5d                   	pop    %rbp
    edbe:	c3                   	ret
    edbf:	90                   	nop

000000000000edc0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    edc0:	55                   	push   %rbp
    edc1:	48 89 e5             	mov    %rsp,%rbp
    edc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    edc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edcc:	5d                   	pop    %rbp
    edcd:	c3                   	ret

000000000000edce <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    edce:	55                   	push   %rbp
    edcf:	48 89 e5             	mov    %rsp,%rbp
    edd2:	48 83 ec 10          	sub    $0x10,%rsp
    edd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    edda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    edde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ede2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ede6:	48 89 d6             	mov    %rdx,%rsi
    ede9:	48 89 c7             	mov    %rax,%rdi
    edec:	e8 09 0c 00 00       	call   f9fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    edf1:	c9                   	leave
    edf2:	c3                   	ret
    edf3:	90                   	nop

000000000000edf4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    edf4:	55                   	push   %rbp
    edf5:	48 89 e5             	mov    %rsp,%rbp
    edf8:	48 83 ec 10          	sub    $0x10,%rsp
    edfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    ee00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee04:	48 89 c7             	mov    %rax,%rdi
    ee07:	e8 3a 0c 00 00       	call   fa46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    ee0c:	c9                   	leave
    ee0d:	c3                   	ret

000000000000ee0e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    ee0e:	55                   	push   %rbp
    ee0f:	48 89 e5             	mov    %rsp,%rbp
    ee12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    ee1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee1e:	48 8b 10             	mov    (%rax),%rdx
    ee21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee25:	48 8b 00             	mov    (%rax),%rax
    ee28:	48 39 c2             	cmp    %rax,%rdx
    ee2b:	0f 94 c0             	sete   %al
    ee2e:	5d                   	pop    %rbp
    ee2f:	c3                   	ret

000000000000ee30 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    ee30:	55                   	push   %rbp
    ee31:	48 89 e5             	mov    %rsp,%rbp
    ee34:	48 83 ec 10          	sub    $0x10,%rsp
    ee38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    ee3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee40:	48 89 c7             	mov    %rax,%rdi
    ee43:	e8 28 0c 00 00       	call   fa70 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    ee48:	90                   	nop
    ee49:	c9                   	leave
    ee4a:	c3                   	ret
    ee4b:	90                   	nop

000000000000ee4c <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ee4c:	55                   	push   %rbp
    ee4d:	48 89 e5             	mov    %rsp,%rbp
    ee50:	48 83 ec 10          	sub    $0x10,%rsp
    ee54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    ee58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee5c:	48 8b 00             	mov    (%rax),%rax
    ee5f:	48 89 c7             	mov    %rax,%rdi
    ee62:	e8 15 0c 00 00       	call   fa7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    ee67:	c9                   	leave
    ee68:	c3                   	ret
    ee69:	90                   	nop

000000000000ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    ee6a:	55                   	push   %rbp
    ee6b:	48 89 e5             	mov    %rsp,%rbp
    ee6e:	48 83 ec 20          	sub    $0x20,%rsp
    ee72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee7a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    ee7e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee86:	48 89 d6             	mov    %rdx,%rsi
    ee89:	48 89 c7             	mov    %rax,%rdi
    ee8c:	e8 09 0c 00 00       	call   fa9a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    ee91:	c9                   	leave
    ee92:	c3                   	ret

000000000000ee93 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    ee93:	55                   	push   %rbp
    ee94:	48 89 e5             	mov    %rsp,%rbp
    ee97:	48 83 ec 10          	sub    $0x10,%rsp
    ee9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    eea3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eea7:	48 89 c7             	mov    %rax,%rdi
    eeaa:	e8 13 0c 00 00       	call   fac2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    eeaf:	48 89 c2             	mov    %rax,%rdx
    eeb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeb6:	48 89 d6             	mov    %rdx,%rsi
    eeb9:	48 89 c7             	mov    %rax,%rdi
    eebc:	e8 0f 0c 00 00       	call   fad0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    eec1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eec5:	c9                   	leave
    eec6:	c3                   	ret
    eec7:	90                   	nop

000000000000eec8 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    eec8:	55                   	push   %rbp
    eec9:	48 89 e5             	mov    %rsp,%rbp
    eecc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eed0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    eed4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eed8:	48 8b 10             	mov    (%rax),%rdx
    eedb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eedf:	48 89 10             	mov    %rdx,(%rax)
    eee2:	90                   	nop
    eee3:	5d                   	pop    %rbp
    eee4:	c3                   	ret
    eee5:	90                   	nop

000000000000eee6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    eee6:	55                   	push   %rbp
    eee7:	48 89 e5             	mov    %rsp,%rbp
    eeea:	41 54                	push   %r12
    eeec:	53                   	push   %rbx
    eeed:	48 83 ec 60          	sub    $0x60,%rsp
    eef1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    eef5:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    eef9:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    eefd:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    ef01:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    ef05:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ef09:	48 89 c7             	mov    %rax,%rdi
    ef0c:	e8 0e 0c 00 00       	call   fb1f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    ef11:	49 89 c4             	mov    %rax,%r12
    ef14:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ef18:	48 89 c7             	mov    %rax,%rdi
    ef1b:	e8 f1 0b 00 00       	call   fb11 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    ef20:	48 89 c3             	mov    %rax,%rbx
    ef23:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ef27:	48 89 c7             	mov    %rax,%rdi
    ef2a:	e8 d4 0b 00 00       	call   fb03 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    ef2f:	48 89 c2             	mov    %rax,%rdx
    ef32:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    ef36:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ef3a:	4d 89 e0             	mov    %r12,%r8
    ef3d:	48 89 d9             	mov    %rbx,%rcx
    ef40:	48 89 c7             	mov    %rax,%rdi
    ef43:	e8 e6 0b 00 00       	call   fb2e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    ef48:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ef4c:	48 89 c7             	mov    %rax,%rdi
    ef4f:	e8 da 10 00 00       	call   1002e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    ef54:	48 89 c2             	mov    %rax,%rdx
    ef57:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    ef5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef5f:	48 89 ce             	mov    %rcx,%rsi
    ef62:	48 89 c7             	mov    %rax,%rdi
    ef65:	e8 76 0c 00 00       	call   fbe0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    ef6a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ef6e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    ef72:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef76:	48 85 c0             	test   %rax,%rax
    ef79:	74 1c                	je     ef97 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    ef7b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    ef7f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ef83:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ef87:	48 89 ce             	mov    %rcx,%rsi
    ef8a:	48 89 c7             	mov    %rax,%rdi
    ef8d:	e8 ba 10 00 00       	call   1004c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    ef92:	48 89 c3             	mov    %rax,%rbx
    ef95:	eb 17                	jmp    efae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    ef97:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ef9b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ef9f:	48 89 d6             	mov    %rdx,%rsi
    efa2:	48 89 c7             	mov    %rax,%rdi
    efa5:	e8 f8 10 00 00       	call   100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    efaa:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    efae:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    efb2:	48 89 c7             	mov    %rax,%rdi
    efb5:	e8 f0 0b 00 00       	call   fbaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    efba:	48 89 d8             	mov    %rbx,%rax
    efbd:	eb 1a                	jmp    efd9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    efbf:	48 89 c3             	mov    %rax,%rbx
    efc2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    efc6:	48 89 c7             	mov    %rax,%rdi
    efc9:	e8 dc 0b 00 00       	call   fbaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    efce:	48 89 d8             	mov    %rbx,%rax
    efd1:	48 89 c7             	mov    %rax,%rdi
    efd4:	e8 f7 45 ff ff       	call   35d0 <_Unwind_Resume@plt>
    efd9:	48 83 c4 60          	add    $0x60,%rsp
    efdd:	5b                   	pop    %rbx
    efde:	41 5c                	pop    %r12
    efe0:	5d                   	pop    %rbp
    efe1:	c3                   	ret

000000000000efe2 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    efe2:	55                   	push   %rbp
    efe3:	48 89 e5             	mov    %rsp,%rbp
    efe6:	48 83 ec 20          	sub    $0x20,%rsp
    efea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    efee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eff2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    eff6:	48 89 d6             	mov    %rdx,%rsi
    eff9:	48 89 c7             	mov    %rax,%rdi
    effc:	e8 bb 10 00 00       	call   100bc <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    f001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f005:	c9                   	leave
    f006:	c3                   	ret
    f007:	90                   	nop

000000000000f008 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    f008:	55                   	push   %rbp
    f009:	48 89 e5             	mov    %rsp,%rbp
    f00c:	48 83 ec 20          	sub    $0x20,%rsp
    f010:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    f014:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f018:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f01c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f020:	48 89 d6             	mov    %rdx,%rsi
    f023:	48 89 c7             	mov    %rax,%rdi
    f026:	e8 91 10 00 00       	call   100bc <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    f02b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f02f:	c9                   	leave
    f030:	c3                   	ret

000000000000f031 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    f031:	55                   	push   %rbp
    f032:	48 89 e5             	mov    %rsp,%rbp
    f035:	53                   	push   %rbx
    f036:	48 83 ec 18          	sub    $0x18,%rsp
    f03a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f03e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    f042:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f046:	48 89 c7             	mov    %rax,%rdi
    f049:	e8 8c 10 00 00       	call   100da <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f04e:	48 8b 18             	mov    (%rax),%rbx
    f051:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f055:	48 89 c7             	mov    %rax,%rdi
    f058:	e8 7d 10 00 00       	call   100da <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f05d:	48 8b 00             	mov    (%rax),%rax
    f060:	48 39 c3             	cmp    %rax,%rbx
    f063:	0f 94 c0             	sete   %al
    f066:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f06a:	c9                   	leave
    f06b:	c3                   	ret

000000000000f06c <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f06c:	55                   	push   %rbp
    f06d:	48 89 e5             	mov    %rsp,%rbp
    f070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f074:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f078:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f07c:	48 8b 10             	mov    (%rax),%rdx
    f07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f083:	48 89 10             	mov    %rdx,(%rax)
    f086:	90                   	nop
    f087:	5d                   	pop    %rbp
    f088:	c3                   	ret
    f089:	90                   	nop

000000000000f08a <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f08a:	55                   	push   %rbp
    f08b:	48 89 e5             	mov    %rsp,%rbp
    f08e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f096:	5d                   	pop    %rbp
    f097:	c3                   	ret

000000000000f098 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f098:	55                   	push   %rbp
    f099:	48 89 e5             	mov    %rsp,%rbp
    f09c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f0a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f0a8:	48 8b 10             	mov    (%rax),%rdx
    f0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0af:	48 89 10             	mov    %rdx,(%rax)
    f0b2:	90                   	nop
    f0b3:	5d                   	pop    %rbp
    f0b4:	c3                   	ret
    f0b5:	90                   	nop

000000000000f0b6 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f0b6:	55                   	push   %rbp
    f0b7:	48 89 e5             	mov    %rsp,%rbp
    f0ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f0be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0c2:	5d                   	pop    %rbp
    f0c3:	c3                   	ret

000000000000f0c4 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
    f0c4:	55                   	push   %rbp
    f0c5:	48 89 e5             	mov    %rsp,%rbp
    f0c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    f0cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0d0:	5d                   	pop    %rbp
    f0d1:	c3                   	ret

000000000000f0d2 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
    f0d2:	55                   	push   %rbp
    f0d3:	48 89 e5             	mov    %rsp,%rbp
    f0d6:	53                   	push   %rbx
    f0d7:	48 83 ec 38          	sub    $0x38,%rsp
    f0db:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f0df:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
    f0e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f0e7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f0eb:	48 89 d6             	mov    %rdx,%rsi
    f0ee:	48 89 c7             	mov    %rax,%rdi
    f0f1:	e8 f2 0f 00 00       	call   100e8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
    f0f6:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    f0fa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f0fe:	48 89 d6             	mov    %rdx,%rsi
    f101:	48 89 c7             	mov    %rax,%rdi
    f104:	e8 13 10 00 00       	call   1011c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
    f109:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f10d:	48 89 c7             	mov    %rax,%rdi
    f110:	e8 07 79 ff ff       	call   6a1c <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
    f115:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f119:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f11d:	48 89 d6             	mov    %rdx,%rsi
    f120:	48 89 c7             	mov    %rax,%rdi
    f123:	e8 1a 10 00 00       	call   10142 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
    f128:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f12c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f130:	48 89 d6             	mov    %rdx,%rsi
    f133:	48 89 c7             	mov    %rax,%rdi
    f136:	e8 07 10 00 00       	call   10142 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
    f13b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f13f:	48 89 c7             	mov    %rax,%rdi
    f142:	e8 89 89 ff ff       	call   7ad0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    f147:	48 89 c3             	mov    %rax,%rbx
    f14a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f14e:	48 89 c7             	mov    %rax,%rdi
    f151:	e8 7a 89 ff ff       	call   7ad0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    f156:	48 89 de             	mov    %rbx,%rsi
    f159:	48 89 c7             	mov    %rax,%rdi
    f15c:	e8 39 10 00 00       	call   1019a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
    f161:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f165:	48 89 c7             	mov    %rax,%rdi
    f168:	e8 41 79 ff ff       	call   6aae <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    f16d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f171:	c9                   	leave
    f172:	c3                   	ret
    f173:	90                   	nop

000000000000f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    f174:	55                   	push   %rbp
    f175:	48 89 e5             	mov    %rsp,%rbp
    f178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    f17c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f180:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f188:	48 8b 00             	mov    (%rax),%rax
    f18b:	48 29 c2             	sub    %rax,%rdx
    f18e:	48 89 d0             	mov    %rdx,%rax
    f191:	48 c1 f8 03          	sar    $0x3,%rax
    f195:	5d                   	pop    %rbp
    f196:	c3                   	ret
    f197:	90                   	nop

000000000000f198 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    f198:	55                   	push   %rbp
    f199:	48 89 e5             	mov    %rsp,%rbp
    f19c:	53                   	push   %rbx
    f19d:	48 83 ec 38          	sub    $0x38,%rsp
    f1a1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f1a5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    f1a9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    f1ae:	0f 84 e7 01 00 00    	je     f39b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    f1b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f1b8:	48 89 c7             	mov    %rax,%rdi
    f1bb:	e8 b4 ff ff ff       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    f1c0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    f1c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f1c8:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    f1cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f1d0:	48 8b 40 08          	mov    0x8(%rax),%rax
    f1d4:	48 29 c2             	sub    %rax,%rdx
    f1d7:	48 89 d0             	mov    %rdx,%rax
    f1da:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    f1de:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    f1e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f1e6:	48 89 c7             	mov    %rax,%rdi
    f1e9:	e8 cc 0f 00 00       	call   101ba <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    f1ee:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f1f2:	72 16                	jb     f20a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
    f1f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f1f8:	48 89 c7             	mov    %rax,%rdi
    f1fb:	e8 ba 0f 00 00       	call   101ba <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    f200:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f204:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f208:	73 07                	jae    f211 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
    f20a:	b8 01 00 00 00       	mov    $0x1,%eax
    f20f:	eb 05                	jmp    f216 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
    f211:	b8 00 00 00 00       	mov    $0x0,%eax
    f216:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    f218:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f21c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    f220:	72 33                	jb     f255 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    f222:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f226:	48 89 c7             	mov    %rax,%rdi
    f229:	e8 60 02 00 00       	call   f48e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    f22e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    f231:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f235:	48 8b 40 08          	mov    0x8(%rax),%rax
    f239:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f23d:	48 89 ce             	mov    %rcx,%rsi
    f240:	48 89 c7             	mov    %rax,%rdi
    f243:	e8 94 0f 00 00       	call   101dc <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    f248:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f24c:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    f250:	e9 46 01 00 00       	jmp    f39b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    f255:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f259:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f25d:	48 8d 15 8c 63 00 00 	lea    0x638c(%rip),%rdx        # 155f0 <_ZN6__pstl9execution2v1L5unseqE+0x341>
    f264:	48 89 ce             	mov    %rcx,%rsi
    f267:	48 89 c7             	mov    %rax,%rdi
    f26a:	e8 97 0f 00 00       	call   10206 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
    f26f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    f273:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f277:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f27b:	48 89 d6             	mov    %rdx,%rsi
    f27e:	48 89 c7             	mov    %rax,%rdi
    f281:	e8 48 10 00 00       	call   102ce <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
    f286:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    f28a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f28e:	48 89 c7             	mov    %rax,%rdi
    f291:	e8 f8 01 00 00       	call   f48e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    f296:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    f299:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f29d:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    f2a4:	00 
    f2a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f2a9:	48 01 c1             	add    %rax,%rcx
    f2ac:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f2b0:	48 89 c6             	mov    %rax,%rsi
    f2b3:	48 89 cf             	mov    %rcx,%rdi
    f2b6:	e8 21 0f 00 00       	call   101dc <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    f2bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2bf:	48 89 c7             	mov    %rax,%rdi
    f2c2:	e8 c7 01 00 00       	call   f48e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    f2c7:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    f2ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2ce:	48 8b 70 08          	mov    0x8(%rax),%rsi
    f2d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2d6:	48 8b 00             	mov    (%rax),%rax
    f2d9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f2dd:	48 89 c7             	mov    %rax,%rdi
    f2e0:	e8 1c 10 00 00       	call   10301 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    f2e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    f2e9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f2ed:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    f2f1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f2f5:	48 8b 12             	mov    (%rdx),%rdx
    f2f8:	48 29 d1             	sub    %rdx,%rcx
    f2fb:	48 c1 f9 03          	sar    $0x3,%rcx
    f2ff:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    f302:	48 89 d6             	mov    %rdx,%rsi
    f305:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f309:	48 8b 0a             	mov    (%rdx),%rcx
    f30c:	48 89 f2             	mov    %rsi,%rdx
    f30f:	48 89 ce             	mov    %rcx,%rsi
    f312:	48 89 c7             	mov    %rax,%rdi
    f315:	e8 3e 01 00 00       	call   f458 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    f31a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f31e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f322:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    f325:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f329:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f32d:	48 01 d0             	add    %rdx,%rax
    f330:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f337:	00 
    f338:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f33c:	48 01 c2             	add    %rax,%rdx
    f33f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f343:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    f347:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f34b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f352:	00 
    f353:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f357:	48 01 c2             	add    %rax,%rdx
    f35a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f35e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    f362:	eb 37                	jmp    f39b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    f364:	48 89 c7             	mov    %rax,%rdi
    f367:	e8 94 3d ff ff       	call   3100 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    f36c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f370:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f374:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f378:	48 89 ce             	mov    %rcx,%rsi
    f37b:	48 89 c7             	mov    %rax,%rdi
    f37e:	e8 d5 00 00 00       	call   f458 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    f383:	e8 68 41 ff ff       	call   34f0 <__cxa_rethrow@plt>
		  __catch(...)
    f388:	48 89 c3             	mov    %rax,%rbx
    f38b:	e8 e0 41 ff ff       	call   3570 <__cxa_end_catch@plt>
    f390:	48 89 d8             	mov    %rbx,%rax
    f393:	48 89 c7             	mov    %rax,%rdi
    f396:	e8 35 42 ff ff       	call   35d0 <_Unwind_Resume@plt>
    }
    f39b:	90                   	nop
    f39c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f3a0:	c9                   	leave
    f3a1:	c3                   	ret

000000000000f3a2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    f3a2:	55                   	push   %rbp
    f3a3:	48 89 e5             	mov    %rsp,%rbp
    f3a6:	48 83 ec 20          	sub    $0x20,%rsp
    f3aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f3ae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    f3b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3b6:	48 8b 40 08          	mov    0x8(%rax),%rax
    f3ba:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    f3be:	48 c1 f8 03          	sar    $0x3,%rax
    f3c2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f3c6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f3cb:	74 32                	je     f3ff <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    f3cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3d1:	48 89 c7             	mov    %rax,%rdi
    f3d4:	e8 b5 00 00 00       	call   f48e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    f3d9:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    f3dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3e0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    f3e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f3e8:	48 89 ce             	mov    %rcx,%rsi
    f3eb:	48 89 c7             	mov    %rax,%rdi
    f3ee:	e8 a9 00 00 00       	call   f49c <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    f3f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f3f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f3fb:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    f3ff:	90                   	nop
    f400:	c9                   	leave
    f401:	c3                   	ret

000000000000f402 <_ZNSaIP13VkImageView_TEC1Ev>:
    f402:	55                   	push   %rbp
    f403:	48 89 e5             	mov    %rsp,%rbp
    f406:	48 83 ec 10          	sub    $0x10,%rsp
    f40a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f40e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f412:	48 89 c7             	mov    %rax,%rdi
    f415:	e8 1a 0f 00 00       	call   10334 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
    f41a:	90                   	nop
    f41b:	c9                   	leave
    f41c:	c3                   	ret
    f41d:	90                   	nop

000000000000f41e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    f41e:	55                   	push   %rbp
    f41f:	48 89 e5             	mov    %rsp,%rbp
    f422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    f426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f42a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f435:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f43c:	00 
    f43d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f441:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f448:	00 
	{ }
    f449:	90                   	nop
    f44a:	5d                   	pop    %rbp
    f44b:	c3                   	ret

000000000000f44c <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
    f44c:	55                   	push   %rbp
    f44d:	48 89 e5             	mov    %rsp,%rbp
    f450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f454:	90                   	nop
    f455:	5d                   	pop    %rbp
    f456:	c3                   	ret
    f457:	90                   	nop

000000000000f458 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    f458:	55                   	push   %rbp
    f459:	48 89 e5             	mov    %rsp,%rbp
    f45c:	48 83 ec 20          	sub    $0x20,%rsp
    f460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f464:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f468:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    f46c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f471:	74 17                	je     f48a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    f473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f477:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f47b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f47f:	48 89 ce             	mov    %rcx,%rsi
    f482:	48 89 c7             	mov    %rax,%rdi
    f485:	e8 b5 0e 00 00       	call   1033f <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
    f48a:	90                   	nop
    f48b:	c9                   	leave
    f48c:	c3                   	ret
    f48d:	90                   	nop

000000000000f48e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    f48e:	55                   	push   %rbp
    f48f:	48 89 e5             	mov    %rsp,%rbp
    f492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f49a:	5d                   	pop    %rbp
    f49b:	c3                   	ret

000000000000f49c <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    f49c:	55                   	push   %rbp
    f49d:	48 89 e5             	mov    %rsp,%rbp
    f4a0:	48 83 ec 20          	sub    $0x20,%rsp
    f4a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f4ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    f4b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f4b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4b8:	48 89 d6             	mov    %rdx,%rsi
    f4bb:	48 89 c7             	mov    %rax,%rdi
    f4be:	e8 aa 0e 00 00       	call   1036d <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
    f4c3:	90                   	nop
    f4c4:	c9                   	leave
    f4c5:	c3                   	ret

000000000000f4c6 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f4c6:	55                   	push   %rbp
    f4c7:	48 89 e5             	mov    %rsp,%rbp
    f4ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f4d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f4d6:	48 8b 10             	mov    (%rax),%rdx
    f4d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4dd:	48 89 10             	mov    %rdx,(%rax)
    f4e0:	90                   	nop
    f4e1:	5d                   	pop    %rbp
    f4e2:	c3                   	ret
    f4e3:	90                   	nop

000000000000f4e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f4e4:	55                   	push   %rbp
    f4e5:	48 89 e5             	mov    %rsp,%rbp
    f4e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f4ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4f0:	5d                   	pop    %rbp
    f4f1:	c3                   	ret

000000000000f4f2 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
    f4f2:	55                   	push   %rbp
    f4f3:	48 89 e5             	mov    %rsp,%rbp
    f4f6:	53                   	push   %rbx
    f4f7:	48 83 ec 18          	sub    $0x18,%rsp
    f4fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f4ff:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f503:	e8 58 e0 ff ff       	call   d560 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
    f508:	48 89 03             	mov    %rax,(%rbx)
	{ }
    f50b:	90                   	nop
    f50c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f510:	c9                   	leave
    f511:	c3                   	ret

000000000000f512 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    f512:	55                   	push   %rbp
    f513:	48 89 e5             	mov    %rsp,%rbp
    f516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    f51a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f51e:	48 8b 00             	mov    (%rax),%rax
    f521:	5d                   	pop    %rbp
    f522:	c3                   	ret

000000000000f523 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    f523:	55                   	push   %rbp
    f524:	48 89 e5             	mov    %rsp,%rbp
    f527:	53                   	push   %rbx
    f528:	48 83 ec 38          	sub    $0x38,%rsp
    f52c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f530:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    f534:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f538:	48 8b 00             	mov    (%rax),%rax
    f53b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f53f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f543:	48 89 c7             	mov    %rax,%rdi
    f546:	e8 67 e0 ff ff       	call   d5b2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    f54b:	48 89 c3             	mov    %rax,%rbx
    f54e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f552:	48 8b 00             	mov    (%rax),%rax
    f555:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f559:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f55d:	48 89 c7             	mov    %rax,%rdi
    f560:	e8 4d e0 ff ff       	call   d5b2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    f565:	48 29 c3             	sub    %rax,%rbx
    f568:	48 89 da             	mov    %rbx,%rdx
    f56b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f56f:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    f573:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f577:	48 89 d6             	mov    %rdx,%rsi
    f57a:	48 89 c7             	mov    %rax,%rdi
    f57d:	e8 08 e0 ff ff       	call   d58a <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    f582:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    f586:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f58a:	c9                   	leave
    f58b:	c3                   	ret

000000000000f58c <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    f58c:	55                   	push   %rbp
    f58d:	48 89 e5             	mov    %rsp,%rbp
    f590:	48 83 ec 20          	sub    $0x20,%rsp
    f594:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    f598:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f59c:	48 89 c7             	mov    %rax,%rdi
    f59f:	e8 0e e0 ff ff       	call   d5b2 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    f5a4:	48 89 c1             	mov    %rax,%rcx
    f5a7:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    f5ae:	9b c4 20 
    f5b1:	48 89 c8             	mov    %rcx,%rax
    f5b4:	48 f7 ea             	imul   %rdx
    f5b7:	48 89 d0             	mov    %rdx,%rax
    f5ba:	48 c1 f8 07          	sar    $0x7,%rax
    f5be:	48 c1 f9 3f          	sar    $0x3f,%rcx
    f5c2:	48 89 ca             	mov    %rcx,%rdx
    f5c5:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    f5c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f5cc:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    f5d0:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f5d4:	48 89 d6             	mov    %rdx,%rsi
    f5d7:	48 89 c7             	mov    %rax,%rdi
    f5da:	e8 b5 0d 00 00       	call   10394 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    f5df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    f5e3:	c9                   	leave
    f5e4:	c3                   	ret

000000000000f5e5 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    f5e5:	55                   	push   %rbp
    f5e6:	48 89 e5             	mov    %rsp,%rbp
    f5e9:	48 83 ec 10          	sub    $0x10,%rsp
    f5ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f5f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    f5f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5f9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f5fd:	48 89 d6             	mov    %rdx,%rsi
    f600:	48 89 c7             	mov    %rax,%rdi
    f603:	e8 a9 0d 00 00       	call   103b1 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    f608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f60c:	c9                   	leave
    f60d:	c3                   	ret

000000000000f60e <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    f60e:	55                   	push   %rbp
    f60f:	48 89 e5             	mov    %rsp,%rbp
    f612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f616:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    f61a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f61e:	48 8b 10             	mov    (%rax),%rdx
    f621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f625:	48 89 10             	mov    %rdx,(%rax)
    f628:	90                   	nop
    f629:	5d                   	pop    %rbp
    f62a:	c3                   	ret
    f62b:	90                   	nop

000000000000f62c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    f62c:	55                   	push   %rbp
    f62d:	48 89 e5             	mov    %rsp,%rbp
    f630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    f634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f638:	5d                   	pop    %rbp
    f639:	c3                   	ret

000000000000f63a <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    f63a:	55                   	push   %rbp
    f63b:	48 89 e5             	mov    %rsp,%rbp
    f63e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f646:	48 8b 40 08          	mov    0x8(%rax),%rax
    f64a:	5d                   	pop    %rbp
    f64b:	c3                   	ret

000000000000f64c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    f64c:	55                   	push   %rbp
    f64d:	48 89 e5             	mov    %rsp,%rbp
    f650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    f654:	90                   	nop
    f655:	5d                   	pop    %rbp
    f656:	c3                   	ret

000000000000f657 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    f657:	55                   	push   %rbp
    f658:	48 89 e5             	mov    %rsp,%rbp
    f65b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f65f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    f663:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f667:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    f66b:	48 c1 f8 03          	sar    $0x3,%rax
    }
    f66f:	5d                   	pop    %rbp
    f670:	c3                   	ret

000000000000f671 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    f671:	55                   	push   %rbp
    f672:	48 89 e5             	mov    %rsp,%rbp
    f675:	48 83 ec 20          	sub    $0x20,%rsp
    f679:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f67d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f681:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    f685:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    f689:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f68d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f695:	48 89 ce             	mov    %rcx,%rsi
    f698:	48 89 c7             	mov    %rax,%rdi
    f69b:	e8 65 0d 00 00       	call   10405 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    f6a0:	c9                   	leave
    f6a1:	c3                   	ret

000000000000f6a2 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    f6a2:	55                   	push   %rbp
    f6a3:	48 89 e5             	mov    %rsp,%rbp
    f6a6:	48 83 ec 10          	sub    $0x10,%rsp
    f6aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f6ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    f6b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f6b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6ba:	48 89 d6             	mov    %rdx,%rsi
    f6bd:	48 89 c7             	mov    %rax,%rdi
    f6c0:	e8 75 0d 00 00       	call   1043a <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    f6c5:	90                   	nop
    f6c6:	c9                   	leave
    f6c7:	c3                   	ret

000000000000f6c8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    f6c8:	55                   	push   %rbp
    f6c9:	48 89 e5             	mov    %rsp,%rbp
    f6cc:	53                   	push   %rbx
    f6cd:	48 83 ec 28          	sub    $0x28,%rsp
    f6d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f6d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f6d9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    f6dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f6e1:	48 89 c6             	mov    %rax,%rsi
    f6e4:	bf 08 00 00 00       	mov    $0x8,%edi
    f6e9:	e8 52 46 ff ff       	call   3d40 <_ZnwmPv>
    f6ee:	48 89 c3             	mov    %rax,%rbx
    f6f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f6f5:	48 89 c7             	mov    %rax,%rdi
    f6f8:	e8 75 f2 ff ff       	call   e972 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
    f6fd:	48 8b 00             	mov    (%rax),%rax
    f700:	48 89 03             	mov    %rax,(%rbx)
    f703:	90                   	nop
    f704:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f708:	c9                   	leave
    f709:	c3                   	ret

000000000000f70a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    f70a:	55                   	push   %rbp
    f70b:	48 89 e5             	mov    %rsp,%rbp
    f70e:	53                   	push   %rbx
    f70f:	48 83 ec 38          	sub    $0x38,%rsp
    f713:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f717:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f71b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    f71f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f723:	48 89 c7             	mov    %rax,%rdi
    f726:	e8 1f 0d 00 00       	call   1044a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    f72b:	48 89 c3             	mov    %rax,%rbx
    f72e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f732:	48 89 c7             	mov    %rax,%rdi
    f735:	e8 92 e3 ff ff       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    f73a:	48 29 c3             	sub    %rax,%rbx
    f73d:	48 89 da             	mov    %rbx,%rdx
    f740:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f744:	48 39 c2             	cmp    %rax,%rdx
    f747:	0f 92 c0             	setb   %al
    f74a:	84 c0                	test   %al,%al
    f74c:	74 0c                	je     f75a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    f74e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f752:	48 89 c7             	mov    %rax,%rdi
    f755:	e8 f6 39 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    f75a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f75e:	48 89 c7             	mov    %rax,%rdi
    f761:	e8 66 e3 ff ff       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    f766:	48 89 c3             	mov    %rax,%rbx
    f769:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f76d:	48 89 c7             	mov    %rax,%rdi
    f770:	e8 57 e3 ff ff       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    f775:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f779:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f77d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f781:	48 89 d6             	mov    %rdx,%rsi
    f784:	48 89 c7             	mov    %rax,%rdi
    f787:	e8 4e 0c 00 00       	call   103da <_ZSt3maxImERKT_S2_S2_>
    f78c:	48 8b 00             	mov    (%rax),%rax
    f78f:	48 01 d8             	add    %rbx,%rax
    f792:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    f796:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f79a:	48 89 c7             	mov    %rax,%rdi
    f79d:	e8 2a e3 ff ff       	call   dacc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    f7a2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    f7a6:	72 12                	jb     f7ba <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    f7a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f7ac:	48 89 c7             	mov    %rax,%rdi
    f7af:	e8 96 0c 00 00       	call   1044a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    f7b4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f7b8:	73 0e                	jae    f7c8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    f7ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f7be:	48 89 c7             	mov    %rax,%rdi
    f7c1:	e8 84 0c 00 00       	call   1044a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    f7c6:	eb 04                	jmp    f7cc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    f7c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    f7cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f7d0:	c9                   	leave
    f7d1:	c3                   	ret

000000000000f7d2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    f7d2:	55                   	push   %rbp
    f7d3:	48 89 e5             	mov    %rsp,%rbp
    f7d6:	53                   	push   %rbx
    f7d7:	48 83 ec 18          	sub    $0x18,%rsp
    f7db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f7df:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    f7e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7e7:	48 89 c7             	mov    %rax,%rdi
    f7ea:	e8 75 f1 ff ff       	call   e964 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    f7ef:	48 8b 18             	mov    (%rax),%rbx
    f7f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f7f6:	48 89 c7             	mov    %rax,%rdi
    f7f9:	e8 66 f1 ff ff       	call   e964 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    f7fe:	48 8b 00             	mov    (%rax),%rax
    f801:	48 89 da             	mov    %rbx,%rdx
    f804:	48 29 c2             	sub    %rax,%rdx
    f807:	48 89 d0             	mov    %rdx,%rax
    f80a:	48 c1 f8 03          	sar    $0x3,%rax
    f80e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f812:	c9                   	leave
    f813:	c3                   	ret

000000000000f814 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    f814:	55                   	push   %rbp
    f815:	48 89 e5             	mov    %rsp,%rbp
    f818:	48 83 ec 20          	sub    $0x20,%rsp
    f81c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f820:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f824:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    f828:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    f82c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    f830:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f834:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    f838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f83c:	48 89 c7             	mov    %rax,%rdi
    f83f:	e8 28 0c 00 00       	call   1046c <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    f844:	c9                   	leave
    f845:	c3                   	ret

000000000000f846 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    f846:	55                   	push   %rbp
    f847:	48 89 e5             	mov    %rsp,%rbp
    f84a:	48 83 ec 20          	sub    $0x20,%rsp
    f84e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f852:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    f856:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f85a:	48 8b 00             	mov    (%rax),%rax
    f85d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f861:	48 c1 e2 03          	shl    $0x3,%rdx
    f865:	48 f7 da             	neg    %rdx
    f868:	48 01 d0             	add    %rdx,%rax
    f86b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f86f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    f873:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f877:	48 89 d6             	mov    %rdx,%rsi
    f87a:	48 89 c7             	mov    %rax,%rdi
    f87d:	e8 c4 f0 ff ff       	call   e946 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    f882:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f886:	c9                   	leave
    f887:	c3                   	ret

000000000000f888 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
    f888:	55                   	push   %rbp
    f889:	48 89 e5             	mov    %rsp,%rbp
    f88c:	53                   	push   %rbx
    f88d:	48 83 ec 28          	sub    $0x28,%rsp
    f891:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f895:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
    f899:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f89d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f8a1:	48 89 c7             	mov    %rax,%rdi
    f8a4:	e8 11 f3 ff ff       	call   ebba <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
    f8a9:	48 89 c6             	mov    %rax,%rsi
    f8ac:	48 89 df             	mov    %rbx,%rdi
    f8af:	e8 1c 0c 00 00       	call   104d0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
    f8b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8b8:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
    f8bc:	90                   	nop
    f8bd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f8c1:	c9                   	leave
    f8c2:	c3                   	ret
    f8c3:	90                   	nop

000000000000f8c4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
    f8c4:	55                   	push   %rbp
    f8c5:	48 89 e5             	mov    %rsp,%rbp
    f8c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    f8cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f8d0:	5d                   	pop    %rbp
    f8d1:	c3                   	ret

000000000000f8d2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
    f8d2:	55                   	push   %rbp
    f8d3:	48 89 e5             	mov    %rsp,%rbp
    f8d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f8da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
    f8de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f8e2:	8b 10                	mov    (%rax),%edx
    f8e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f8e8:	89 10                	mov    %edx,(%rax)
	second = __p.second;
    f8ea:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f8ee:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    f8f2:	48 8b 46 04          	mov    0x4(%rsi),%rax
    f8f6:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
    f8fa:	48 89 41 04          	mov    %rax,0x4(%rcx)
    f8fe:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
    f902:	48 8b 46 14          	mov    0x14(%rsi),%rax
    f906:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
    f90a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    f90e:	5d                   	pop    %rbp
    f90f:	c3                   	ret

000000000000f910 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    f910:	55                   	push   %rbp
    f911:	48 89 e5             	mov    %rsp,%rbp
    f914:	53                   	push   %rbx
    f915:	48 83 ec 18          	sub    $0x18,%rsp
    f919:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f91d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    f921:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f925:	48 89 c7             	mov    %rax,%rdi
    f928:	e8 f5 0b 00 00       	call   10522 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
    f92d:	48 89 c3             	mov    %rax,%rbx
    f930:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f934:	48 89 c7             	mov    %rax,%rdi
    f937:	e8 d8 0b 00 00       	call   10514 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
    f93c:	48 89 de             	mov    %rbx,%rsi
    f93f:	48 89 c7             	mov    %rax,%rdi
    f942:	e8 e9 0b 00 00       	call   10530 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    f947:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f94b:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
    f94f:	90                   	nop
    f950:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f954:	c9                   	leave
    f955:	c3                   	ret

000000000000f956 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
    f956:	55                   	push   %rbp
    f957:	48 89 e5             	mov    %rsp,%rbp
    f95a:	48 83 ec 10          	sub    $0x10,%rsp
    f95e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
    f962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f966:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    f96a:	84 c0                	test   %al,%al
    f96c:	74 0c                	je     f97a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
    f96e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f972:	48 89 c7             	mov    %rax,%rdi
    f975:	e8 10 0c 00 00       	call   1058a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
    f97a:	90                   	nop
    f97b:	c9                   	leave
    f97c:	c3                   	ret
    f97d:	90                   	nop

000000000000f97e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f97e:	55                   	push   %rbp
    f97f:	48 89 e5             	mov    %rsp,%rbp
    f982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f986:	90                   	nop
    f987:	5d                   	pop    %rbp
    f988:	c3                   	ret

000000000000f989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    f989:	55                   	push   %rbp
    f98a:	48 89 e5             	mov    %rsp,%rbp
    f98d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    f991:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f995:	48 8b 40 18          	mov    0x18(%rax),%rax
    f999:	5d                   	pop    %rbp
    f99a:	c3                   	ret

000000000000f99b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    f99b:	55                   	push   %rbp
    f99c:	48 89 e5             	mov    %rsp,%rbp
    f99f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    f9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9a7:	48 8b 40 10          	mov    0x10(%rax),%rax
    f9ab:	5d                   	pop    %rbp
    f9ac:	c3                   	ret
    f9ad:	90                   	nop

000000000000f9ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    f9ae:	55                   	push   %rbp
    f9af:	48 89 e5             	mov    %rsp,%rbp
    f9b2:	48 83 ec 10          	sub    $0x10,%rsp
    f9b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    f9be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f9c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9c6:	48 89 d6             	mov    %rdx,%rsi
    f9c9:	48 89 c7             	mov    %rax,%rdi
    f9cc:	e8 cd 0b 00 00       	call   1059e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    f9d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f9d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9d9:	48 89 d6             	mov    %rdx,%rsi
    f9dc:	48 89 c7             	mov    %rax,%rdi
    f9df:	e8 f8 0b 00 00       	call   105dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    f9e4:	90                   	nop
    f9e5:	c9                   	leave
    f9e6:	c3                   	ret
    f9e7:	90                   	nop

000000000000f9e8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    f9e8:	55                   	push   %rbp
    f9e9:	48 89 e5             	mov    %rsp,%rbp
    f9ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    f9f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9f4:	48 8b 40 10          	mov    0x10(%rax),%rax
    f9f8:	5d                   	pop    %rbp
    f9f9:	c3                   	ret

000000000000f9fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    f9fa:	55                   	push   %rbp
    f9fb:	48 89 e5             	mov    %rsp,%rbp
    f9fe:	53                   	push   %rbx
    f9ff:	48 83 ec 18          	sub    $0x18,%rsp
    fa03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fa07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    fa0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa0f:	48 89 c7             	mov    %rax,%rdi
    fa12:	e8 fb 0b 00 00       	call   10612 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    fa17:	48 89 c3             	mov    %rax,%rbx
    fa1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa1e:	48 89 c7             	mov    %rax,%rdi
    fa21:	e8 62 f3 ff ff       	call   ed88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    fa26:	48 89 c6             	mov    %rax,%rsi
    fa29:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fa2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa31:	48 89 d1             	mov    %rdx,%rcx
    fa34:	48 89 da             	mov    %rbx,%rdx
    fa37:	48 89 c7             	mov    %rax,%rdi
    fa3a:	e8 e5 0b 00 00       	call   10624 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    fa3f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fa43:	c9                   	leave
    fa44:	c3                   	ret
    fa45:	90                   	nop

000000000000fa46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    fa46:	55                   	push   %rbp
    fa47:	48 89 e5             	mov    %rsp,%rbp
    fa4a:	48 83 ec 20          	sub    $0x20,%rsp
    fa4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    fa52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa56:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fa5a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fa5e:	48 89 d6             	mov    %rdx,%rsi
    fa61:	48 89 c7             	mov    %rax,%rdi
    fa64:	e8 39 06 00 00       	call   100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    fa69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa6d:	c9                   	leave
    fa6e:	c3                   	ret
    fa6f:	90                   	nop

000000000000fa70 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    fa70:	55                   	push   %rbp
    fa71:	48 89 e5             	mov    %rsp,%rbp
    fa74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    fa78:	90                   	nop
    fa79:	5d                   	pop    %rbp
    fa7a:	c3                   	ret
    fa7b:	90                   	nop

000000000000fa7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    fa7c:	55                   	push   %rbp
    fa7d:	48 89 e5             	mov    %rsp,%rbp
    fa80:	48 83 ec 10          	sub    $0x10,%rsp
    fa84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    fa88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa8c:	48 83 c0 20          	add    $0x20,%rax
    fa90:	48 89 c7             	mov    %rax,%rdi
    fa93:	e8 22 0c 00 00       	call   106ba <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    fa98:	c9                   	leave
    fa99:	c3                   	ret

000000000000fa9a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    fa9a:	55                   	push   %rbp
    fa9b:	48 89 e5             	mov    %rsp,%rbp
    fa9e:	48 83 ec 10          	sub    $0x10,%rsp
    faa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    faa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    faaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    faae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fab2:	48 89 d6             	mov    %rdx,%rsi
    fab5:	48 89 c7             	mov    %rax,%rdi
    fab8:	e8 73 35 ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    fabd:	c1 e8 1f             	shr    $0x1f,%eax
    fac0:	c9                   	leave
    fac1:	c3                   	ret

000000000000fac2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    fac2:	55                   	push   %rbp
    fac3:	48 89 e5             	mov    %rsp,%rbp
    fac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    faca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    face:	5d                   	pop    %rbp
    facf:	c3                   	ret

000000000000fad0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    fad0:	55                   	push   %rbp
    fad1:	48 89 e5             	mov    %rsp,%rbp
    fad4:	53                   	push   %rbx
    fad5:	48 83 ec 18          	sub    $0x18,%rsp
    fad9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fadd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    fae1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    fae5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fae9:	48 89 c7             	mov    %rax,%rdi
    faec:	e8 d1 ff ff ff       	call   fac2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    faf1:	48 89 c6             	mov    %rax,%rsi
    faf4:	48 89 df             	mov    %rbx,%rdi
    faf7:	e8 d8 0b 00 00       	call   106d4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    fafc:	90                   	nop
    fafd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fb01:	c9                   	leave
    fb02:	c3                   	ret

000000000000fb03 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    fb03:	55                   	push   %rbp
    fb04:	48 89 e5             	mov    %rsp,%rbp
    fb07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    fb0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb0f:	5d                   	pop    %rbp
    fb10:	c3                   	ret

000000000000fb11 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    fb11:	55                   	push   %rbp
    fb12:	48 89 e5             	mov    %rsp,%rbp
    fb15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    fb19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb1d:	5d                   	pop    %rbp
    fb1e:	c3                   	ret

000000000000fb1f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    fb1f:	55                   	push   %rbp
    fb20:	48 89 e5             	mov    %rsp,%rbp
    fb23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    fb27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb2b:	5d                   	pop    %rbp
    fb2c:	c3                   	ret
    fb2d:	90                   	nop

000000000000fb2e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    fb2e:	55                   	push   %rbp
    fb2f:	48 89 e5             	mov    %rsp,%rbp
    fb32:	41 54                	push   %r12
    fb34:	53                   	push   %rbx
    fb35:	48 83 ec 30          	sub    $0x30,%rsp
    fb39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fb3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fb41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    fb45:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    fb49:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    fb4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb51:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fb55:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    fb58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    fb5c:	48 89 c7             	mov    %rax,%rdi
    fb5f:	e8 bb ff ff ff       	call   fb1f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    fb64:	49 89 c4             	mov    %rax,%r12
    fb67:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fb6b:	48 89 c7             	mov    %rax,%rdi
    fb6e:	e8 9e ff ff ff       	call   fb11 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    fb73:	48 89 c3             	mov    %rax,%rbx
    fb76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fb7a:	48 89 c7             	mov    %rax,%rdi
    fb7d:	e8 81 ff ff ff       	call   fb03 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    fb82:	48 89 c6             	mov    %rax,%rsi
    fb85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fb89:	4c 89 e1             	mov    %r12,%rcx
    fb8c:	48 89 da             	mov    %rbx,%rdx
    fb8f:	48 89 c7             	mov    %rax,%rdi
    fb92:	e8 71 0b 00 00       	call   10708 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    fb97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb9b:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    fb9f:	90                   	nop
    fba0:	48 83 c4 30          	add    $0x30,%rsp
    fba4:	5b                   	pop    %rbx
    fba5:	41 5c                	pop    %r12
    fba7:	5d                   	pop    %rbp
    fba8:	c3                   	ret
    fba9:	90                   	nop

000000000000fbaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    fbaa:	55                   	push   %rbp
    fbab:	48 89 e5             	mov    %rsp,%rbp
    fbae:	48 83 ec 10          	sub    $0x10,%rsp
    fbb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    fbb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbba:	48 8b 40 08          	mov    0x8(%rax),%rax
    fbbe:	48 85 c0             	test   %rax,%rax
    fbc1:	74 1a                	je     fbdd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    fbc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbc7:	48 8b 00             	mov    (%rax),%rax
    fbca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fbce:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    fbd2:	48 89 d6             	mov    %rdx,%rsi
    fbd5:	48 89 c7             	mov    %rax,%rdi
    fbd8:	e8 d1 fd ff ff       	call   f9ae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    fbdd:	90                   	nop
    fbde:	c9                   	leave
    fbdf:	c3                   	ret

000000000000fbe0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    fbe0:	55                   	push   %rbp
    fbe1:	48 89 e5             	mov    %rsp,%rbp
    fbe4:	53                   	push   %rbx
    fbe5:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    fbec:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    fbf3:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    fbfa:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    fc01:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    fc08:	48 89 c7             	mov    %rax,%rdi
    fc0b:	e8 74 0b 00 00       	call   10784 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    fc10:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    fc17:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    fc1e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fc25:	48 89 c7             	mov    %rax,%rdi
    fc28:	e8 e5 09 00 00       	call   10612 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    fc2d:	48 39 c3             	cmp    %rax,%rbx
    fc30:	0f 94 c0             	sete   %al
    fc33:	84 c0                	test   %al,%al
    fc35:	0f 84 c8 00 00 00    	je     fd03 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    fc3b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fc42:	48 89 c7             	mov    %rax,%rdi
    fc45:	e8 62 0b 00 00       	call   107ac <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    fc4a:	48 85 c0             	test   %rax,%rax
    fc4d:	74 44                	je     fc93 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    fc4f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fc56:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fc5d:	48 89 c7             	mov    %rax,%rdi
    fc60:	e8 59 0b 00 00       	call   107be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    fc65:	48 8b 00             	mov    (%rax),%rax
    fc68:	48 89 c7             	mov    %rax,%rdi
    fc6b:	e8 60 0b 00 00       	call   107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    fc70:	48 89 c1             	mov    %rax,%rcx
    fc73:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    fc7a:	48 89 c2             	mov    %rax,%rdx
    fc7d:	48 89 ce             	mov    %rcx,%rsi
    fc80:	48 89 df             	mov    %rbx,%rdi
    fc83:	e8 e2 f1 ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    fc88:	84 c0                	test   %al,%al
    fc8a:	74 07                	je     fc93 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    fc8c:	b8 01 00 00 00       	mov    $0x1,%eax
    fc91:	eb 05                	jmp    fc98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    fc93:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    fc98:	84 c0                	test   %al,%al
    fc9a:	74 49                	je     fce5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    fc9c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fca3:	48 89 c7             	mov    %rax,%rdi
    fca6:	e8 13 0b 00 00       	call   107be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    fcab:	48 89 c2             	mov    %rax,%rdx
    fcae:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    fcb5:	00 00 00 00 
    fcb9:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    fcc0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    fcc7:	48 89 ce             	mov    %rcx,%rsi
    fcca:	48 89 c7             	mov    %rax,%rdi
    fccd:	e8 18 0b 00 00       	call   107ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    fcd2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fcd9:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    fce0:	e9 43 03 00 00       	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    fce5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    fcec:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fcf3:	48 89 d6             	mov    %rdx,%rsi
    fcf6:	48 89 c7             	mov    %rax,%rdi
    fcf9:	e8 1c 0b 00 00       	call   1081a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    fcfe:	e9 25 03 00 00       	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    fd03:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fd0a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    fd11:	48 89 c7             	mov    %rax,%rdi
    fd14:	e8 b7 0a 00 00       	call   107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    fd19:	48 89 c2             	mov    %rax,%rdx
    fd1c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    fd23:	48 89 c6             	mov    %rax,%rsi
    fd26:	48 89 df             	mov    %rbx,%rdi
    fd29:	e8 3c f1 ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    fd2e:	84 c0                	test   %al,%al
    fd30:	0f 84 66 01 00 00    	je     fe9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    fd36:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    fd3d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    fd44:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    fd4b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd52:	48 89 c7             	mov    %rax,%rdi
    fd55:	e8 36 0c 00 00       	call   10990 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    fd5a:	48 8b 00             	mov    (%rax),%rax
    fd5d:	48 39 c3             	cmp    %rax,%rbx
    fd60:	0f 94 c0             	sete   %al
    fd63:	84 c0                	test   %al,%al
    fd65:	74 4c                	je     fdb3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    fd67:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd6e:	48 89 c7             	mov    %rax,%rdi
    fd71:	e8 1a 0c 00 00       	call   10990 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    fd76:	48 89 c3             	mov    %rax,%rbx
    fd79:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd80:	48 89 c7             	mov    %rax,%rdi
    fd83:	e8 08 0c 00 00       	call   10990 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    fd88:	48 89 c1             	mov    %rax,%rcx
    fd8b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fd92:	48 89 da             	mov    %rbx,%rdx
    fd95:	48 89 ce             	mov    %rcx,%rsi
    fd98:	48 89 c7             	mov    %rax,%rdi
    fd9b:	e8 02 0c 00 00       	call   109a2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    fda0:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    fda7:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    fdae:	e9 75 02 00 00       	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    fdb3:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fdba:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    fdc1:	48 89 c7             	mov    %rax,%rdi
    fdc4:	e8 1d 0c 00 00       	call   109e6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    fdc9:	48 8b 00             	mov    (%rax),%rax
    fdcc:	48 89 c7             	mov    %rax,%rdi
    fdcf:	e8 fc 09 00 00       	call   107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    fdd4:	48 89 c1             	mov    %rax,%rcx
    fdd7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    fdde:	48 89 c2             	mov    %rax,%rdx
    fde1:	48 89 ce             	mov    %rcx,%rsi
    fde4:	48 89 df             	mov    %rbx,%rdi
    fde7:	e8 7e f0 ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    fdec:	84 c0                	test   %al,%al
    fdee:	0f 84 8a 00 00 00    	je     fe7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    fdf4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    fdfb:	48 89 c7             	mov    %rax,%rdi
    fdfe:	e8 86 fb ff ff       	call   f989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    fe03:	48 85 c0             	test   %rax,%rax
    fe06:	0f 94 c0             	sete   %al
    fe09:	84 c0                	test   %al,%al
    fe0b:	74 3e                	je     fe4b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    fe0d:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    fe14:	00 00 00 00 
    fe18:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    fe1f:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    fe26:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    fe2d:	48 89 ce             	mov    %rcx,%rsi
    fe30:	48 89 c7             	mov    %rax,%rdi
    fe33:	e8 b2 09 00 00       	call   107ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    fe38:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    fe3f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    fe46:	e9 dd 01 00 00       	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    fe4b:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    fe52:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    fe59:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    fe60:	48 89 ce             	mov    %rcx,%rsi
    fe63:	48 89 c7             	mov    %rax,%rdi
    fe66:	e8 37 0b 00 00       	call   109a2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    fe6b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    fe72:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    fe79:	e9 aa 01 00 00       	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    fe7e:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    fe85:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fe8c:	48 89 d6             	mov    %rdx,%rsi
    fe8f:	48 89 c7             	mov    %rax,%rdi
    fe92:	e8 83 09 00 00       	call   1081a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    fe97:	e9 8c 01 00 00       	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    fe9c:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fea3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    feaa:	48 89 c7             	mov    %rax,%rdi
    fead:	e8 1e 09 00 00       	call   107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    feb2:	48 89 c1             	mov    %rax,%rcx
    feb5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    febc:	48 89 c2             	mov    %rax,%rdx
    febf:	48 89 ce             	mov    %rcx,%rsi
    fec2:	48 89 df             	mov    %rbx,%rdi
    fec5:	e8 a0 ef ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    feca:	84 c0                	test   %al,%al
    fecc:	0f 84 2c 01 00 00    	je     fffe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    fed2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    fed9:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    fee0:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    fee7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    feee:	48 89 c7             	mov    %rax,%rdi
    fef1:	e8 c8 08 00 00       	call   107be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    fef6:	48 8b 00             	mov    (%rax),%rax
    fef9:	48 39 c3             	cmp    %rax,%rbx
    fefc:	0f 94 c0             	sete   %al
    feff:	84 c0                	test   %al,%al
    ff01:	74 3a                	je     ff3d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    ff03:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ff0a:	48 89 c7             	mov    %rax,%rdi
    ff0d:	e8 ac 08 00 00       	call   107be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    ff12:	48 89 c2             	mov    %rax,%rdx
    ff15:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    ff1c:	00 
    ff1d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    ff21:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ff25:	48 89 ce             	mov    %rcx,%rsi
    ff28:	48 89 c7             	mov    %rax,%rdi
    ff2b:	e8 ba 08 00 00       	call   107ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    ff30:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ff34:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ff38:	e9 eb 00 00 00       	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    ff3d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    ff44:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    ff4b:	48 89 c7             	mov    %rax,%rdi
    ff4e:	e8 bb 0a 00 00       	call   10a0e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    ff53:	48 8b 00             	mov    (%rax),%rax
    ff56:	48 89 c7             	mov    %rax,%rdi
    ff59:	e8 72 08 00 00       	call   107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    ff5e:	48 89 c2             	mov    %rax,%rdx
    ff61:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    ff68:	48 89 c6             	mov    %rax,%rsi
    ff6b:	48 89 df             	mov    %rbx,%rdi
    ff6e:	e8 f7 ee ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    ff73:	84 c0                	test   %al,%al
    ff75:	74 6c                	je     ffe3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    ff77:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ff7e:	48 89 c7             	mov    %rax,%rdi
    ff81:	e8 03 fa ff ff       	call   f989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    ff86:	48 85 c0             	test   %rax,%rax
    ff89:	0f 94 c0             	sete   %al
    ff8c:	84 c0                	test   %al,%al
    ff8e:	74 2c                	je     ffbc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    ff90:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    ff97:	00 
    ff98:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    ff9f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    ffa3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ffa7:	48 89 ce             	mov    %rcx,%rsi
    ffaa:	48 89 c7             	mov    %rax,%rdi
    ffad:	e8 38 08 00 00       	call   107ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    ffb2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ffb6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ffba:	eb 6c                	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    ffbc:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    ffc3:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    ffca:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ffce:	48 89 ce             	mov    %rcx,%rsi
    ffd1:	48 89 c7             	mov    %rax,%rdi
    ffd4:	e8 c9 09 00 00       	call   109a2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    ffd9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ffdd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ffe1:	eb 45                	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    ffe3:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    ffea:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fff1:	48 89 d6             	mov    %rdx,%rsi
    fff4:	48 89 c7             	mov    %rax,%rdi
    fff7:	e8 1e 08 00 00       	call   1081a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    fffc:	eb 2a                	jmp    10028 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    fffe:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10005:	00 
   10006:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1000a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   10011:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10015:	48 89 ce             	mov    %rcx,%rsi
   10018:	48 89 c7             	mov    %rax,%rdi
   1001b:	e8 ca 07 00 00       	call   107ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   10020:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10024:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   10028:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1002c:	c9                   	leave
   1002d:	c3                   	ret

000000000001002e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   1002e:	55                   	push   %rbp
   1002f:	48 89 e5             	mov    %rsp,%rbp
   10032:	48 83 ec 10          	sub    $0x10,%rsp
   10036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   1003a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1003e:	48 8b 40 08          	mov    0x8(%rax),%rax
   10042:	48 89 c7             	mov    %rax,%rdi
   10045:	e8 ec 09 00 00       	call   10a36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1004a:	c9                   	leave
   1004b:	c3                   	ret

000000000001004c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   1004c:	55                   	push   %rbp
   1004d:	48 89 e5             	mov    %rsp,%rbp
   10050:	48 83 ec 30          	sub    $0x30,%rsp
   10054:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10058:	48 89 d1             	mov    %rdx,%rcx
   1005b:	48 89 f0             	mov    %rsi,%rax
   1005e:	48 89 fa             	mov    %rdi,%rdx
   10061:	48 89 ca             	mov    %rcx,%rdx
   10064:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10068:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   1006c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10070:	48 8b 00             	mov    (%rax),%rax
   10073:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10077:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1007b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1007f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   10083:	48 89 c7             	mov    %rax,%rdi
   10086:	e8 d7 09 00 00       	call   10a62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   1008b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   1008f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10093:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1009a:	00 
	  return __it;
   1009b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1009f:	c9                   	leave
   100a0:	c3                   	ret
   100a1:	90                   	nop

00000000000100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   100a2:	55                   	push   %rbp
   100a3:	48 89 e5             	mov    %rsp,%rbp
   100a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   100ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   100b6:	48 89 10             	mov    %rdx,(%rax)
   100b9:	90                   	nop
   100ba:	5d                   	pop    %rbp
   100bb:	c3                   	ret

00000000000100bc <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   100bc:	55                   	push   %rbp
   100bd:	48 89 e5             	mov    %rsp,%rbp
   100c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   100c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   100cc:	48 8b 10             	mov    (%rax),%rdx
   100cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100d3:	48 89 10             	mov    %rdx,(%rax)
   100d6:	90                   	nop
   100d7:	5d                   	pop    %rbp
   100d8:	c3                   	ret
   100d9:	90                   	nop

00000000000100da <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   100da:	55                   	push   %rbp
   100db:	48 89 e5             	mov    %rsp,%rbp
   100de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   100e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100e6:	5d                   	pop    %rbp
   100e7:	c3                   	ret

00000000000100e8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   100e8:	55                   	push   %rbp
   100e9:	48 89 e5             	mov    %rsp,%rbp
   100ec:	48 83 ec 10          	sub    $0x10,%rsp
   100f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   100f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   100fc:	48 89 c7             	mov    %rax,%rdi
   100ff:	e8 22 0a 00 00       	call   10b26 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10104:	48 89 c2             	mov    %rax,%rdx
   10107:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1010b:	48 89 d6             	mov    %rdx,%rsi
   1010e:	48 89 c7             	mov    %rax,%rdi
   10111:	e8 04 7a ff ff       	call   7b1a <_ZNSaIP9VkImage_TEC1ERKS1_>
   10116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1011a:	c9                   	leave
   1011b:	c3                   	ret

000000000001011c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1011c:	55                   	push   %rbp
   1011d:	48 89 e5             	mov    %rsp,%rbp
   10120:	48 83 ec 10          	sub    $0x10,%rsp
   10124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10128:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   1012c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10130:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10134:	48 89 d6             	mov    %rdx,%rsi
   10137:	48 89 c7             	mov    %rax,%rdi
   1013a:	e8 f5 09 00 00       	call   10b34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   1013f:	90                   	nop
   10140:	c9                   	leave
   10141:	c3                   	ret

0000000000010142 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   10142:	55                   	push   %rbp
   10143:	48 89 e5             	mov    %rsp,%rbp
   10146:	48 83 ec 30          	sub    $0x30,%rsp
   1014a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1014e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   10152:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10156:	48 89 c7             	mov    %rax,%rdi
   10159:	e8 3e 8e ff ff       	call   8f9c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   1015e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10162:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10166:	48 89 d6             	mov    %rdx,%rsi
   10169:	48 89 c7             	mov    %rax,%rdi
   1016c:	e8 e9 09 00 00       	call   10b5a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   10171:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10175:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10179:	48 89 d6             	mov    %rdx,%rsi
   1017c:	48 89 c7             	mov    %rax,%rdi
   1017f:	e8 d6 09 00 00       	call   10b5a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   10184:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10188:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1018c:	48 89 d6             	mov    %rdx,%rsi
   1018f:	48 89 c7             	mov    %rax,%rdi
   10192:	e8 c3 09 00 00       	call   10b5a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   10197:	90                   	nop
   10198:	c9                   	leave
   10199:	c3                   	ret

000000000001019a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   1019a:	55                   	push   %rbp
   1019b:	48 89 e5             	mov    %rsp,%rbp
   1019e:	48 83 ec 10          	sub    $0x10,%rsp
   101a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   101aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   101ae:	48 89 c7             	mov    %rax,%rdi
   101b1:	e8 e1 09 00 00       	call   10b97 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   101b6:	90                   	nop
   101b7:	c9                   	leave
   101b8:	c3                   	ret
   101b9:	90                   	nop

00000000000101ba <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   101ba:	55                   	push   %rbp
   101bb:	48 89 e5             	mov    %rsp,%rbp
   101be:	48 83 ec 10          	sub    $0x10,%rsp
   101c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   101c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ca:	48 89 c7             	mov    %rax,%rdi
   101cd:	e8 16 0a 00 00       	call   10be8 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   101d2:	48 89 c7             	mov    %rax,%rdi
   101d5:	e8 cb 09 00 00       	call   10ba5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   101da:	c9                   	leave
   101db:	c3                   	ret

00000000000101dc <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   101dc:	55                   	push   %rbp
   101dd:	48 89 e5             	mov    %rsp,%rbp
   101e0:	48 83 ec 20          	sub    $0x20,%rsp
   101e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   101ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   101f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   101f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101f8:	48 89 d6             	mov    %rdx,%rsi
   101fb:	48 89 c7             	mov    %rax,%rdi
   101fe:	e8 f3 09 00 00       	call   10bf6 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   10203:	c9                   	leave
   10204:	c3                   	ret
   10205:	90                   	nop

0000000000010206 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   10206:	55                   	push   %rbp
   10207:	48 89 e5             	mov    %rsp,%rbp
   1020a:	53                   	push   %rbx
   1020b:	48 83 ec 38          	sub    $0x38,%rsp
   1020f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10213:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10217:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1021b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1021f:	48 89 c7             	mov    %rax,%rdi
   10222:	e8 93 ff ff ff       	call   101ba <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   10227:	48 89 c3             	mov    %rax,%rbx
   1022a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1022e:	48 89 c7             	mov    %rax,%rdi
   10231:	e8 3e ef ff ff       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10236:	48 29 c3             	sub    %rax,%rbx
   10239:	48 89 da             	mov    %rbx,%rdx
   1023c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10240:	48 39 c2             	cmp    %rax,%rdx
   10243:	0f 92 c0             	setb   %al
   10246:	84 c0                	test   %al,%al
   10248:	74 0c                	je     10256 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1024a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1024e:	48 89 c7             	mov    %rax,%rdi
   10251:	e8 fa 2e ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   10256:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1025a:	48 89 c7             	mov    %rax,%rdi
   1025d:	e8 12 ef ff ff       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10262:	48 89 c3             	mov    %rax,%rbx
   10265:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10269:	48 89 c7             	mov    %rax,%rdi
   1026c:	e8 03 ef ff ff       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10271:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10275:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10279:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1027d:	48 89 d6             	mov    %rdx,%rsi
   10280:	48 89 c7             	mov    %rax,%rdi
   10283:	e8 52 01 00 00       	call   103da <_ZSt3maxImERKT_S2_S2_>
   10288:	48 8b 00             	mov    (%rax),%rax
   1028b:	48 01 d8             	add    %rbx,%rax
   1028e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   10292:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10296:	48 89 c7             	mov    %rax,%rdi
   10299:	e8 d6 ee ff ff       	call   f174 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1029e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   102a2:	72 12                	jb     102b6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   102a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102a8:	48 89 c7             	mov    %rax,%rdi
   102ab:	e8 0a ff ff ff       	call   101ba <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   102b0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   102b4:	73 0e                	jae    102c4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   102b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102ba:	48 89 c7             	mov    %rax,%rdi
   102bd:	e8 f8 fe ff ff       	call   101ba <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   102c2:	eb 04                	jmp    102c8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   102c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   102c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   102cc:	c9                   	leave
   102cd:	c3                   	ret

00000000000102ce <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   102ce:	55                   	push   %rbp
   102cf:	48 89 e5             	mov    %rsp,%rbp
   102d2:	48 83 ec 10          	sub    $0x10,%rsp
   102d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   102de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   102e3:	74 15                	je     102fa <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   102e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   102ed:	48 89 d6             	mov    %rdx,%rsi
   102f0:	48 89 c7             	mov    %rax,%rdi
   102f3:	e8 27 09 00 00       	call   10c1f <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   102f8:	eb 05                	jmp    102ff <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   102fa:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   102ff:	c9                   	leave
   10300:	c3                   	ret

0000000000010301 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   10301:	55                   	push   %rbp
   10302:	48 89 e5             	mov    %rsp,%rbp
   10305:	48 83 ec 20          	sub    $0x20,%rsp
   10309:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1030d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10311:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   10315:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   10319:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1031d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10321:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10329:	48 89 c7             	mov    %rax,%rdi
   1032c:	e8 18 09 00 00       	call   10c49 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   10331:	c9                   	leave
   10332:	c3                   	ret
   10333:	90                   	nop

0000000000010334 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
   10334:	55                   	push   %rbp
   10335:	48 89 e5             	mov    %rsp,%rbp
   10338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1033c:	90                   	nop
   1033d:	5d                   	pop    %rbp
   1033e:	c3                   	ret

000000000001033f <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1033f:	55                   	push   %rbp
   10340:	48 89 e5             	mov    %rsp,%rbp
   10343:	48 83 ec 20          	sub    $0x20,%rsp
   10347:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1034b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1034f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   10353:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10357:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1035b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1035f:	48 89 ce             	mov    %rcx,%rsi
   10362:	48 89 c7             	mov    %rax,%rdi
   10365:	e8 42 09 00 00       	call   10cac <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   1036a:	90                   	nop
   1036b:	c9                   	leave
   1036c:	c3                   	ret

000000000001036d <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1036d:	55                   	push   %rbp
   1036e:	48 89 e5             	mov    %rsp,%rbp
   10371:	48 83 ec 10          	sub    $0x10,%rsp
   10375:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10379:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1037d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10381:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10385:	48 89 d6             	mov    %rdx,%rsi
   10388:	48 89 c7             	mov    %rax,%rdi
   1038b:	e8 4d 09 00 00       	call   10cdd <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   10390:	90                   	nop
   10391:	c9                   	leave
   10392:	c3                   	ret
   10393:	90                   	nop

0000000000010394 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   10394:	55                   	push   %rbp
   10395:	48 89 e5             	mov    %rsp,%rbp
   10398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1039c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   103a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103a4:	48 8b 10             	mov    (%rax),%rdx
   103a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103ab:	48 89 10             	mov    %rdx,(%rax)
   103ae:	90                   	nop
   103af:	5d                   	pop    %rbp
   103b0:	c3                   	ret

00000000000103b1 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
   103b1:	55                   	push   %rbp
   103b2:	48 89 e5             	mov    %rsp,%rbp
   103b5:	48 83 ec 10          	sub    $0x10,%rsp
   103b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
   103c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   103c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103c9:	48 89 d6             	mov    %rdx,%rsi
   103cc:	48 89 c7             	mov    %rax,%rdi
   103cf:	e8 9c 2d ff ff       	call   3170 <_ZNSaIcEC1ERKS_@plt>
   103d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103d8:	c9                   	leave
   103d9:	c3                   	ret

00000000000103da <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   103da:	55                   	push   %rbp
   103db:	48 89 e5             	mov    %rsp,%rbp
   103de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   103e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103ea:	48 8b 10             	mov    (%rax),%rdx
   103ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103f1:	48 8b 00             	mov    (%rax),%rax
   103f4:	48 39 c2             	cmp    %rax,%rdx
   103f7:	73 06                	jae    103ff <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   103f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103fd:	eb 04                	jmp    10403 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   103ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   10403:	5d                   	pop    %rbp
   10404:	c3                   	ret

0000000000010405 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   10405:	55                   	push   %rbp
   10406:	48 89 e5             	mov    %rsp,%rbp
   10409:	48 83 ec 30          	sub    $0x30,%rsp
   1040d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10411:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10415:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   10419:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1041d:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   10421:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10425:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10429:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1042d:	48 89 ce             	mov    %rcx,%rsi
   10430:	48 89 c7             	mov    %rax,%rdi
   10433:	e8 b4 08 00 00       	call   10cec <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   10438:	c9                   	leave
   10439:	c3                   	ret

000000000001043a <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1043a:	55                   	push   %rbp
   1043b:	48 89 e5             	mov    %rsp,%rbp
   1043e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10442:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10446:	90                   	nop
   10447:	5d                   	pop    %rbp
   10448:	c3                   	ret
   10449:	90                   	nop

000000000001044a <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1044a:	55                   	push   %rbp
   1044b:	48 89 e5             	mov    %rsp,%rbp
   1044e:	48 83 ec 10          	sub    $0x10,%rsp
   10452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   10456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1045a:	48 89 c7             	mov    %rax,%rdi
   1045d:	e8 b8 08 00 00       	call   10d1a <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10462:	48 89 c7             	mov    %rax,%rdi
   10465:	e8 cf 79 ff ff       	call   7e39 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   1046a:	c9                   	leave
   1046b:	c3                   	ret

000000000001046c <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1046c:	55                   	push   %rbp
   1046d:	48 89 e5             	mov    %rsp,%rbp
   10470:	41 54                	push   %r12
   10472:	53                   	push   %rbx
   10473:	48 83 ec 20          	sub    $0x20,%rsp
   10477:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1047b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1047f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10483:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   10487:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1048b:	48 89 c7             	mov    %rax,%rdi
   1048e:	e8 95 08 00 00       	call   10d28 <_ZSt12__niter_baseIPPKcET_S3_>
   10493:	49 89 c4             	mov    %rax,%r12
   10496:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1049a:	48 89 c7             	mov    %rax,%rdi
   1049d:	e8 86 08 00 00       	call   10d28 <_ZSt12__niter_baseIPPKcET_S3_>
   104a2:	48 89 c3             	mov    %rax,%rbx
   104a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104a9:	48 89 c7             	mov    %rax,%rdi
   104ac:	e8 77 08 00 00       	call   10d28 <_ZSt12__niter_baseIPPKcET_S3_>
   104b1:	48 89 c7             	mov    %rax,%rdi
   104b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   104b8:	48 89 c1             	mov    %rax,%rcx
   104bb:	4c 89 e2             	mov    %r12,%rdx
   104be:	48 89 de             	mov    %rbx,%rsi
   104c1:	e8 70 08 00 00       	call   10d36 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   104c6:	48 83 c4 20          	add    $0x20,%rsp
   104ca:	5b                   	pop    %rbx
   104cb:	41 5c                	pop    %r12
   104cd:	5d                   	pop    %rbp
   104ce:	c3                   	ret
   104cf:	90                   	nop

00000000000104d0 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   104d0:	55                   	push   %rbp
   104d1:	48 89 e5             	mov    %rsp,%rbp
   104d4:	48 83 ec 10          	sub    $0x10,%rsp
   104d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   104e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   104e4:	48 89 c7             	mov    %rax,%rdi
   104e7:	e8 ce e6 ff ff       	call   ebba <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   104ec:	48 89 c1             	mov    %rax,%rcx
   104ef:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   104f3:	48 8b 01             	mov    (%rcx),%rax
   104f6:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   104fa:	48 89 06             	mov    %rax,(%rsi)
   104fd:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   10501:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   10505:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   10509:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   1050d:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   10511:	90                   	nop
   10512:	c9                   	leave
   10513:	c3                   	ret

0000000000010514 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   10514:	55                   	push   %rbp
   10515:	48 89 e5             	mov    %rsp,%rbp
   10518:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1051c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10520:	5d                   	pop    %rbp
   10521:	c3                   	ret

0000000000010522 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10522:	55                   	push   %rbp
   10523:	48 89 e5             	mov    %rsp,%rbp
   10526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1052a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1052e:	5d                   	pop    %rbp
   1052f:	c3                   	ret

0000000000010530 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   10530:	55                   	push   %rbp
   10531:	48 89 e5             	mov    %rsp,%rbp
   10534:	53                   	push   %rbx
   10535:	48 83 ec 18          	sub    $0x18,%rsp
   10539:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1053d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   10541:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10545:	48 89 c6             	mov    %rax,%rsi
   10548:	bf 1c 00 00 00       	mov    $0x1c,%edi
   1054d:	e8 ee 37 ff ff       	call   3d40 <_ZnwmPv>
   10552:	48 89 c3             	mov    %rax,%rbx
   10555:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10559:	48 89 c7             	mov    %rax,%rdi
   1055c:	e8 c1 ff ff ff       	call   10522 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   10561:	48 89 c1             	mov    %rax,%rcx
   10564:	48 8b 01             	mov    (%rcx),%rax
   10567:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   1056b:	48 89 03             	mov    %rax,(%rbx)
   1056e:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   10572:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   10576:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   1057a:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   1057e:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   10582:	90                   	nop
   10583:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10587:	c9                   	leave
   10588:	c3                   	ret
   10589:	90                   	nop

000000000001058a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   1058a:	55                   	push   %rbp
   1058b:	48 89 e5             	mov    %rsp,%rbp
   1058e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   10592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10596:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   1059a:	90                   	nop
   1059b:	5d                   	pop    %rbp
   1059c:	c3                   	ret
   1059d:	90                   	nop

000000000001059e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1059e:	55                   	push   %rbp
   1059f:	48 89 e5             	mov    %rsp,%rbp
   105a2:	53                   	push   %rbx
   105a3:	48 83 ec 18          	sub    $0x18,%rsp
   105a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   105ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   105af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   105b3:	48 89 c7             	mov    %rax,%rdi
   105b6:	e8 c1 f4 ff ff       	call   fa7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   105bb:	48 89 c3             	mov    %rax,%rbx
   105be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105c2:	48 89 c7             	mov    %rax,%rdi
   105c5:	e8 d0 07 00 00       	call   10d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   105ca:	48 89 de             	mov    %rbx,%rsi
   105cd:	48 89 c7             	mov    %rax,%rdi
   105d0:	e8 d3 07 00 00       	call   10da8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   105d5:	90                   	nop
   105d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   105da:	c9                   	leave
   105db:	c3                   	ret

00000000000105dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   105dc:	55                   	push   %rbp
   105dd:	48 89 e5             	mov    %rsp,%rbp
   105e0:	48 83 ec 10          	sub    $0x10,%rsp
   105e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   105ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105f0:	48 89 c7             	mov    %rax,%rdi
   105f3:	e8 a2 07 00 00       	call   10d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   105f8:	48 89 c1             	mov    %rax,%rcx
   105fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   105ff:	ba 01 00 00 00       	mov    $0x1,%edx
   10604:	48 89 c6             	mov    %rax,%rsi
   10607:	48 89 cf             	mov    %rcx,%rdi
   1060a:	e8 bf 07 00 00       	call   10dce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   1060f:	90                   	nop
   10610:	c9                   	leave
   10611:	c3                   	ret

0000000000010612 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   10612:	55                   	push   %rbp
   10613:	48 89 e5             	mov    %rsp,%rbp
   10616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   1061a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1061e:	48 83 c0 08          	add    $0x8,%rax
   10622:	5d                   	pop    %rbp
   10623:	c3                   	ret

0000000000010624 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   10624:	55                   	push   %rbp
   10625:	48 89 e5             	mov    %rsp,%rbp
   10628:	53                   	push   %rbx
   10629:	48 83 ec 38          	sub    $0x38,%rsp
   1062d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10631:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10635:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10639:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   1063d:	eb 56                	jmp    10695 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   1063f:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   10643:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10647:	48 89 c7             	mov    %rax,%rdi
   1064a:	e8 e7 03 00 00       	call   10a36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1064f:	48 89 c1             	mov    %rax,%rcx
   10652:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10656:	48 89 c2             	mov    %rax,%rdx
   10659:	48 89 ce             	mov    %rcx,%rsi
   1065c:	48 89 df             	mov    %rbx,%rdi
   1065f:	e8 06 e8 ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10664:	83 f0 01             	xor    $0x1,%eax
   10667:	84 c0                	test   %al,%al
   10669:	74 1a                	je     10685 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   1066b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1066f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10673:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10677:	48 89 c7             	mov    %rax,%rdi
   1067a:	e8 1c f3 ff ff       	call   f99b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   1067f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10683:	eb 10                	jmp    10695 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   10685:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10689:	48 89 c7             	mov    %rax,%rdi
   1068c:	e8 f8 f2 ff ff       	call   f989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   10691:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   10695:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   1069a:	75 a3                	jne    1063f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   1069c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   106a0:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   106a4:	48 89 d6             	mov    %rdx,%rsi
   106a7:	48 89 c7             	mov    %rax,%rdi
   106aa:	e8 f3 f9 ff ff       	call   100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   106af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   106b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   106b7:	c9                   	leave
   106b8:	c3                   	ret
   106b9:	90                   	nop

00000000000106ba <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   106ba:	55                   	push   %rbp
   106bb:	48 89 e5             	mov    %rsp,%rbp
   106be:	48 83 ec 10          	sub    $0x10,%rsp
   106c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   106c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106ca:	48 89 c7             	mov    %rax,%rdi
   106cd:	e8 2a 07 00 00       	call   10dfc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   106d2:	c9                   	leave
   106d3:	c3                   	ret

00000000000106d4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   106d4:	55                   	push   %rbp
   106d5:	48 89 e5             	mov    %rsp,%rbp
   106d8:	53                   	push   %rbx
   106d9:	48 83 ec 18          	sub    $0x18,%rsp
   106dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   106e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   106e5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   106e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   106ed:	48 89 c7             	mov    %rax,%rdi
   106f0:	e8 cd f3 ff ff       	call   fac2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   106f5:	48 89 c6             	mov    %rax,%rsi
   106f8:	48 89 df             	mov    %rbx,%rdi
   106fb:	e8 0a 07 00 00       	call   10e0a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   10700:	90                   	nop
   10701:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10705:	c9                   	leave
   10706:	c3                   	ret
   10707:	90                   	nop

0000000000010708 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   10708:	55                   	push   %rbp
   10709:	48 89 e5             	mov    %rsp,%rbp
   1070c:	41 54                	push   %r12
   1070e:	53                   	push   %rbx
   1070f:	48 83 ec 30          	sub    $0x30,%rsp
   10713:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10717:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1071b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1071f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   10723:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10727:	48 89 c7             	mov    %rax,%rdi
   1072a:	e8 01 07 00 00       	call   10e30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   1072f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   10733:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10737:	48 89 c7             	mov    %rax,%rdi
   1073a:	e8 e0 f3 ff ff       	call   fb1f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1073f:	49 89 c4             	mov    %rax,%r12
   10742:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10746:	48 89 c7             	mov    %rax,%rdi
   10749:	e8 c3 f3 ff ff       	call   fb11 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1074e:	48 89 c3             	mov    %rax,%rbx
   10751:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10755:	48 89 c7             	mov    %rax,%rdi
   10758:	e8 a6 f3 ff ff       	call   fb03 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1075d:	48 89 c2             	mov    %rax,%rdx
   10760:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   10764:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10768:	4d 89 e0             	mov    %r12,%r8
   1076b:	48 89 d9             	mov    %rbx,%rcx
   1076e:	48 89 c7             	mov    %rax,%rdi
   10771:	e8 e2 06 00 00       	call   10e58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   10776:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1077a:	48 83 c4 30          	add    $0x30,%rsp
   1077e:	5b                   	pop    %rbx
   1077f:	41 5c                	pop    %r12
   10781:	5d                   	pop    %rbp
   10782:	c3                   	ret
   10783:	90                   	nop

0000000000010784 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   10784:	55                   	push   %rbp
   10785:	48 89 e5             	mov    %rsp,%rbp
   10788:	48 83 ec 20          	sub    $0x20,%rsp
   1078c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   10790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10794:	48 8b 10             	mov    (%rax),%rdx
   10797:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1079b:	48 89 d6             	mov    %rdx,%rsi
   1079e:	48 89 c7             	mov    %rax,%rdi
   107a1:	e8 fc f8 ff ff       	call   100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   107a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107aa:	c9                   	leave
   107ab:	c3                   	ret

00000000000107ac <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   107ac:	55                   	push   %rbp
   107ad:	48 89 e5             	mov    %rsp,%rbp
   107b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   107b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107b8:	48 8b 40 28          	mov    0x28(%rax),%rax
   107bc:	5d                   	pop    %rbp
   107bd:	c3                   	ret

00000000000107be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   107be:	55                   	push   %rbp
   107bf:	48 89 e5             	mov    %rsp,%rbp
   107c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   107c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107ca:	48 83 c0 20          	add    $0x20,%rax
   107ce:	5d                   	pop    %rbp
   107cf:	c3                   	ret

00000000000107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   107d0:	55                   	push   %rbp
   107d1:	48 89 e5             	mov    %rsp,%rbp
   107d4:	48 83 ec 10          	sub    $0x10,%rsp
   107d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   107dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107e0:	48 89 c7             	mov    %rax,%rdi
   107e3:	e8 4e 02 00 00       	call   10a36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   107e8:	c9                   	leave
   107e9:	c3                   	ret

00000000000107ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   107ea:	55                   	push   %rbp
   107eb:	48 89 e5             	mov    %rsp,%rbp
   107ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   107f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   107fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   107fe:	48 8b 10             	mov    (%rax),%rdx
   10801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10805:	48 89 10             	mov    %rdx,(%rax)
   10808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1080c:	48 8b 10             	mov    (%rax),%rdx
   1080f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10813:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10817:	90                   	nop
   10818:	5d                   	pop    %rbp
   10819:	c3                   	ret

000000000001081a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1081a:	55                   	push   %rbp
   1081b:	48 89 e5             	mov    %rsp,%rbp
   1081e:	53                   	push   %rbx
   1081f:	48 83 ec 78          	sub    $0x78,%rsp
   10823:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   10827:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   1082b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1082f:	48 89 c7             	mov    %rax,%rdi
   10832:	e8 51 e5 ff ff       	call   ed88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   10837:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   1083b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   1083f:	48 89 c7             	mov    %rax,%rdi
   10842:	e8 cb fd ff ff       	call   10612 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   10847:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   1084b:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   1084f:	eb 51                	jmp    108a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   10851:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10855:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   10859:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1085d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10861:	48 89 c7             	mov    %rax,%rdi
   10864:	e8 cd 01 00 00       	call   10a36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   10869:	48 89 c2             	mov    %rax,%rdx
   1086c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   10870:	48 89 c6             	mov    %rax,%rsi
   10873:	48 89 df             	mov    %rbx,%rdi
   10876:	e8 ef e5 ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1087b:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1087e:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   10882:	74 0e                	je     10892 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   10884:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10888:	48 89 c7             	mov    %rax,%rdi
   1088b:	e8 0b f1 ff ff       	call   f99b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   10890:	eb 0c                	jmp    1089e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   10892:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10896:	48 89 c7             	mov    %rax,%rdi
   10899:	e8 eb f0 ff ff       	call   f989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1089e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   108a2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   108a6:	48 85 c0             	test   %rax,%rax
   108a9:	75 a6                	jne    10851 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   108ab:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   108af:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   108b3:	48 89 d6             	mov    %rdx,%rsi
   108b6:	48 89 c7             	mov    %rax,%rdi
   108b9:	e8 e4 f7 ff ff       	call   100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   108be:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   108c2:	74 54                	je     10918 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   108c4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   108c8:	48 89 c7             	mov    %rax,%rdi
   108cb:	e8 5a 06 00 00       	call   10f2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   108d0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   108d4:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   108d8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   108dc:	48 89 d6             	mov    %rdx,%rsi
   108df:	48 89 c7             	mov    %rax,%rdi
   108e2:	e8 27 e5 ff ff       	call   ee0e <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   108e7:	84 c0                	test   %al,%al
   108e9:	74 21                	je     1090c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   108eb:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   108ef:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   108f3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   108f7:	48 89 ce             	mov    %rcx,%rsi
   108fa:	48 89 c7             	mov    %rax,%rdi
   108fd:	e8 52 06 00 00       	call   10f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   10902:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10906:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1090a:	eb 7d                	jmp    10989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   1090c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   10910:	48 89 c7             	mov    %rax,%rdi
   10913:	e8 ce 00 00 00       	call   109e6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   10918:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1091c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10920:	48 89 c7             	mov    %rax,%rdi
   10923:	e8 a8 fe ff ff       	call   107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   10928:	48 89 c1             	mov    %rax,%rcx
   1092b:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1092f:	48 89 c2             	mov    %rax,%rdx
   10932:	48 89 ce             	mov    %rcx,%rsi
   10935:	48 89 df             	mov    %rbx,%rdi
   10938:	e8 2d e5 ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1093d:	84 c0                	test   %al,%al
   1093f:	74 21                	je     10962 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   10941:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   10945:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   10949:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1094d:	48 89 ce             	mov    %rcx,%rsi
   10950:	48 89 c7             	mov    %rax,%rdi
   10953:	e8 fc 05 00 00       	call   10f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   10958:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1095c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10960:	eb 27                	jmp    10989 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   10962:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   10969:	00 
   1096a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1096e:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   10972:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10976:	48 89 ce             	mov    %rcx,%rsi
   10979:	48 89 c7             	mov    %rax,%rdi
   1097c:	e8 69 fe ff ff       	call   107ea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   10981:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10985:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   10989:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1098d:	c9                   	leave
   1098e:	c3                   	ret
   1098f:	90                   	nop

0000000000010990 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   10990:	55                   	push   %rbp
   10991:	48 89 e5             	mov    %rsp,%rbp
   10994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   10998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1099c:	48 83 c0 18          	add    $0x18,%rax
   109a0:	5d                   	pop    %rbp
   109a1:	c3                   	ret

00000000000109a2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   109a2:	55                   	push   %rbp
   109a3:	48 89 e5             	mov    %rsp,%rbp
   109a6:	48 83 ec 20          	sub    $0x20,%rsp
   109aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   109b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   109b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   109ba:	48 89 c7             	mov    %rax,%rdi
   109bd:	e8 d6 05 00 00       	call   10f98 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   109c2:	48 8b 10             	mov    (%rax),%rdx
   109c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109c9:	48 89 10             	mov    %rdx,(%rax)
   109cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109d0:	48 89 c7             	mov    %rax,%rdi
   109d3:	e8 c0 05 00 00       	call   10f98 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   109d8:	48 8b 10             	mov    (%rax),%rdx
   109db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109df:	48 89 50 08          	mov    %rdx,0x8(%rax)
   109e3:	90                   	nop
   109e4:	c9                   	leave
   109e5:	c3                   	ret

00000000000109e6 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   109e6:	55                   	push   %rbp
   109e7:	48 89 e5             	mov    %rsp,%rbp
   109ea:	48 83 ec 10          	sub    $0x10,%rsp
   109ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   109f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109f6:	48 8b 00             	mov    (%rax),%rax
   109f9:	48 89 c7             	mov    %rax,%rdi
   109fc:	e8 4f 29 ff ff       	call   3350 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   10a01:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10a05:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   10a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10a0c:	c9                   	leave
   10a0d:	c3                   	ret

0000000000010a0e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10a0e:	55                   	push   %rbp
   10a0f:	48 89 e5             	mov    %rsp,%rbp
   10a12:	48 83 ec 10          	sub    $0x10,%rsp
   10a16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   10a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a1e:	48 8b 00             	mov    (%rax),%rax
   10a21:	48 89 c7             	mov    %rax,%rdi
   10a24:	e8 97 27 ff ff       	call   31c0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   10a29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10a2d:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   10a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10a34:	c9                   	leave
   10a35:	c3                   	ret

0000000000010a36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   10a36:	55                   	push   %rbp
   10a37:	48 89 e5             	mov    %rsp,%rbp
   10a3a:	48 83 ec 20          	sub    $0x20,%rsp
   10a3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   10a42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a46:	48 89 c7             	mov    %rax,%rdi
   10a49:	e8 58 05 00 00       	call   10fa6 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   10a4e:	48 89 c2             	mov    %rax,%rdx
   10a51:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   10a55:	48 89 d6             	mov    %rdx,%rsi
   10a58:	48 89 c7             	mov    %rax,%rdi
   10a5b:	e8 64 05 00 00       	call   10fc4 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   10a60:	c9                   	leave
   10a61:	c3                   	ret

0000000000010a62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   10a62:	55                   	push   %rbp
   10a63:	48 89 e5             	mov    %rsp,%rbp
   10a66:	41 54                	push   %r12
   10a68:	53                   	push   %rbx
   10a69:	48 83 ec 30          	sub    $0x30,%rsp
   10a6d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10a71:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10a75:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10a79:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   10a7d:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   10a82:	75 43                	jne    10ac7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   10a84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a88:	48 89 c7             	mov    %rax,%rdi
   10a8b:	e8 82 fb ff ff       	call   10612 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   10a90:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   10a94:	74 31                	je     10ac7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   10a96:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   10a9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a9e:	48 89 c7             	mov    %rax,%rdi
   10aa1:	e8 2a fd ff ff       	call   107d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   10aa6:	49 89 c4             	mov    %rax,%r12
   10aa9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10aad:	48 89 c7             	mov    %rax,%rdi
   10ab0:	e8 81 ff ff ff       	call   10a36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   10ab5:	4c 89 e2             	mov    %r12,%rdx
   10ab8:	48 89 c6             	mov    %rax,%rsi
   10abb:	48 89 df             	mov    %rbx,%rdi
   10abe:	e8 a7 e3 ff ff       	call   ee6a <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10ac3:	84 c0                	test   %al,%al
   10ac5:	74 07                	je     10ace <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   10ac7:	b8 01 00 00 00       	mov    $0x1,%eax
   10acc:	eb 05                	jmp    10ad3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   10ace:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   10ad3:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   10ad6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ada:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   10ade:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   10ae2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10ae6:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   10aea:	89 c7                	mov    %eax,%edi
   10aec:	e8 5f 25 ff ff       	call   3050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   10af1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10af5:	48 8b 40 28          	mov    0x28(%rax),%rax
   10af9:	48 8d 50 01          	lea    0x1(%rax),%rdx
   10afd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b01:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   10b05:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10b09:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10b0d:	48 89 d6             	mov    %rdx,%rsi
   10b10:	48 89 c7             	mov    %rax,%rdi
   10b13:	e8 8a f5 ff ff       	call   100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   10b18:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   10b1c:	48 83 c4 30          	add    $0x30,%rsp
   10b20:	5b                   	pop    %rbx
   10b21:	41 5c                	pop    %r12
   10b23:	5d                   	pop    %rbp
   10b24:	c3                   	ret
   10b25:	90                   	nop

0000000000010b26 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   10b26:	55                   	push   %rbp
   10b27:	48 89 e5             	mov    %rsp,%rbp
   10b2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b32:	5d                   	pop    %rbp
   10b33:	c3                   	ret

0000000000010b34 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   10b34:	55                   	push   %rbp
   10b35:	48 89 e5             	mov    %rsp,%rbp
   10b38:	48 83 ec 10          	sub    $0x10,%rsp
   10b3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   10b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b48:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b4c:	48 89 d6             	mov    %rdx,%rsi
   10b4f:	48 89 c7             	mov    %rax,%rdi
   10b52:	e8 77 7b ff ff       	call   86ce <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   10b57:	90                   	nop
   10b58:	c9                   	leave
   10b59:	c3                   	ret

0000000000010b5a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   10b5a:	55                   	push   %rbp
   10b5b:	48 89 e5             	mov    %rsp,%rbp
   10b5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   10b66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b6a:	48 8b 10             	mov    (%rax),%rdx
   10b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b71:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   10b74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b78:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b80:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   10b84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b88:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b90:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   10b94:	90                   	nop
   10b95:	5d                   	pop    %rbp
   10b96:	c3                   	ret

0000000000010b97 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   10b97:	55                   	push   %rbp
   10b98:	48 89 e5             	mov    %rsp,%rbp
   10b9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   10b9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ba3:	5d                   	pop    %rbp
   10ba4:	c3                   	ret

0000000000010ba5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   10ba5:	55                   	push   %rbp
   10ba6:	48 89 e5             	mov    %rsp,%rbp
   10ba9:	48 83 ec 20          	sub    $0x20,%rsp
   10bad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   10bb1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   10bb8:	ff ff 0f 
   10bbb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   10bbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10bc3:	48 89 c7             	mov    %rax,%rdi
   10bc6:	e8 0b 04 00 00       	call   10fd6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   10bcb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   10bcf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10bd3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10bd7:	48 89 d6             	mov    %rdx,%rsi
   10bda:	48 89 c7             	mov    %rax,%rdi
   10bdd:	e8 2b 36 ff ff       	call   420d <_ZSt3minImERKT_S2_S2_>
   10be2:	48 8b 00             	mov    (%rax),%rax
      }
   10be5:	c9                   	leave
   10be6:	c3                   	ret
   10be7:	90                   	nop

0000000000010be8 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   10be8:	55                   	push   %rbp
   10be9:	48 89 e5             	mov    %rsp,%rbp
   10bec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bf4:	5d                   	pop    %rbp
   10bf5:	c3                   	ret

0000000000010bf6 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   10bf6:	55                   	push   %rbp
   10bf7:	48 89 e5             	mov    %rsp,%rbp
   10bfa:	48 83 ec 20          	sub    $0x20,%rsp
   10bfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   10c06:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   10c0a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10c0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c12:	48 89 d6             	mov    %rdx,%rsi
   10c15:	48 89 c7             	mov    %rax,%rdi
   10c18:	e8 d3 03 00 00       	call   10ff0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   10c1d:	c9                   	leave
   10c1e:	c3                   	ret

0000000000010c1f <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   10c1f:	55                   	push   %rbp
   10c20:	48 89 e5             	mov    %rsp,%rbp
   10c23:	48 83 ec 10          	sub    $0x10,%rsp
   10c27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c2b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   10c2f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10c33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c37:	ba 00 00 00 00       	mov    $0x0,%edx
   10c3c:	48 89 ce             	mov    %rcx,%rsi
   10c3f:	48 89 c7             	mov    %rax,%rdi
   10c42:	e8 07 04 00 00       	call   1104e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   10c47:	c9                   	leave
   10c48:	c3                   	ret

0000000000010c49 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   10c49:	55                   	push   %rbp
   10c4a:	48 89 e5             	mov    %rsp,%rbp
   10c4d:	41 54                	push   %r12
   10c4f:	53                   	push   %rbx
   10c50:	48 83 ec 20          	sub    $0x20,%rsp
   10c54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c58:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10c5c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10c60:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   10c64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c68:	48 89 c7             	mov    %rax,%rdi
   10c6b:	e8 3f 04 00 00       	call   110af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   10c70:	49 89 c4             	mov    %rax,%r12
   10c73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c77:	48 89 c7             	mov    %rax,%rdi
   10c7a:	e8 30 04 00 00       	call   110af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   10c7f:	48 89 c3             	mov    %rax,%rbx
   10c82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c86:	48 89 c7             	mov    %rax,%rdi
   10c89:	e8 21 04 00 00       	call   110af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   10c8e:	48 89 c7             	mov    %rax,%rdi
   10c91:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10c95:	48 89 c1             	mov    %rax,%rcx
   10c98:	4c 89 e2             	mov    %r12,%rdx
   10c9b:	48 89 de             	mov    %rbx,%rsi
   10c9e:	e8 1a 04 00 00       	call   110bd <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   10ca3:	48 83 c4 20          	add    $0x20,%rsp
   10ca7:	5b                   	pop    %rbx
   10ca8:	41 5c                	pop    %r12
   10caa:	5d                   	pop    %rbp
   10cab:	c3                   	ret

0000000000010cac <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   10cac:	55                   	push   %rbp
   10cad:	48 89 e5             	mov    %rsp,%rbp
   10cb0:	48 83 ec 20          	sub    $0x20,%rsp
   10cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10cbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   10cc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cc4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10ccb:	00 
   10ccc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10cd0:	48 89 d6             	mov    %rdx,%rsi
   10cd3:	48 89 c7             	mov    %rax,%rdi
   10cd6:	e8 35 26 ff ff       	call   3310 <_ZdlPvm@plt>
      }
   10cdb:	c9                   	leave
   10cdc:	c3                   	ret

0000000000010cdd <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   10cdd:	55                   	push   %rbp
   10cde:	48 89 e5             	mov    %rsp,%rbp
   10ce1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ce5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10ce9:	90                   	nop
   10cea:	5d                   	pop    %rbp
   10ceb:	c3                   	ret

0000000000010cec <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   10cec:	55                   	push   %rbp
   10ced:	48 89 e5             	mov    %rsp,%rbp
   10cf0:	48 83 ec 20          	sub    $0x20,%rsp
   10cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10cf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10cfc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   10d00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10d04:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d0c:	48 89 ce             	mov    %rcx,%rsi
   10d0f:	48 89 c7             	mov    %rax,%rdi
   10d12:	e8 09 04 00 00       	call   11120 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   10d17:	c9                   	leave
   10d18:	c3                   	ret
   10d19:	90                   	nop

0000000000010d1a <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   10d1a:	55                   	push   %rbp
   10d1b:	48 89 e5             	mov    %rsp,%rbp
   10d1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10d22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d26:	5d                   	pop    %rbp
   10d27:	c3                   	ret

0000000000010d28 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   10d28:	55                   	push   %rbp
   10d29:	48 89 e5             	mov    %rsp,%rbp
   10d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   10d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d34:	5d                   	pop    %rbp
   10d35:	c3                   	ret

0000000000010d36 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   10d36:	55                   	push   %rbp
   10d37:	48 89 e5             	mov    %rsp,%rbp
   10d3a:	48 83 ec 30          	sub    $0x30,%rsp
   10d3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10d42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10d46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10d4a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   10d4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d52:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10d56:	48 c1 f8 03          	sar    $0x3,%rax
   10d5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   10d5e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10d63:	7e 1f                	jle    10d84 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   10d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d69:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10d70:	00 
   10d71:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10d75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d79:	48 89 ce             	mov    %rcx,%rsi
   10d7c:	48 89 c7             	mov    %rax,%rdi
   10d7f:	e8 dc 27 ff ff       	call   3560 <memmove@plt>
      return __result + __count;
   10d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d88:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10d8f:	00 
   10d90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d94:	48 01 d0             	add    %rdx,%rax
    }
   10d97:	c9                   	leave
   10d98:	c3                   	ret
   10d99:	90                   	nop

0000000000010d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   10d9a:	55                   	push   %rbp
   10d9b:	48 89 e5             	mov    %rsp,%rbp
   10d9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10da6:	5d                   	pop    %rbp
   10da7:	c3                   	ret

0000000000010da8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   10da8:	55                   	push   %rbp
   10da9:	48 89 e5             	mov    %rsp,%rbp
   10dac:	48 83 ec 10          	sub    $0x10,%rsp
   10db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10db4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   10db8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dc0:	48 89 d6             	mov    %rdx,%rsi
   10dc3:	48 89 c7             	mov    %rax,%rdi
   10dc6:	e8 bd 03 00 00       	call   11188 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   10dcb:	90                   	nop
   10dcc:	c9                   	leave
   10dcd:	c3                   	ret

0000000000010dce <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   10dce:	55                   	push   %rbp
   10dcf:	48 89 e5             	mov    %rsp,%rbp
   10dd2:	48 83 ec 20          	sub    $0x20,%rsp
   10dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10dda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10dde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   10de2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10de6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dee:	48 89 ce             	mov    %rcx,%rsi
   10df1:	48 89 c7             	mov    %rax,%rdi
   10df4:	e8 af 03 00 00       	call   111a8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   10df9:	90                   	nop
   10dfa:	c9                   	leave
   10dfb:	c3                   	ret

0000000000010dfc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   10dfc:	55                   	push   %rbp
   10dfd:	48 89 e5             	mov    %rsp,%rbp
   10e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   10e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e08:	5d                   	pop    %rbp
   10e09:	c3                   	ret

0000000000010e0a <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   10e0a:	55                   	push   %rbp
   10e0b:	48 89 e5             	mov    %rsp,%rbp
   10e0e:	48 83 ec 10          	sub    $0x10,%rsp
   10e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   10e1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10e1e:	48 89 c7             	mov    %rax,%rdi
   10e21:	e8 9c ec ff ff       	call   fac2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   10e26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10e2a:	48 89 02             	mov    %rax,(%rdx)
   10e2d:	90                   	nop
   10e2e:	c9                   	leave
   10e2f:	c3                   	ret

0000000000010e30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   10e30:	55                   	push   %rbp
   10e31:	48 89 e5             	mov    %rsp,%rbp
   10e34:	48 83 ec 10          	sub    $0x10,%rsp
   10e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   10e3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e40:	48 89 c7             	mov    %rax,%rdi
   10e43:	e8 52 ff ff ff       	call   10d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   10e48:	be 01 00 00 00       	mov    $0x1,%esi
   10e4d:	48 89 c7             	mov    %rax,%rdi
   10e50:	e8 8d 03 00 00       	call   111e2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   10e55:	c9                   	leave
   10e56:	c3                   	ret
   10e57:	90                   	nop

0000000000010e58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   10e58:	55                   	push   %rbp
   10e59:	48 89 e5             	mov    %rsp,%rbp
   10e5c:	41 56                	push   %r14
   10e5e:	41 55                	push   %r13
   10e60:	41 54                	push   %r12
   10e62:	53                   	push   %rbx
   10e63:	48 83 ec 30          	sub    $0x30,%rsp
   10e67:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10e6b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10e6f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10e73:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   10e77:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   10e7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10e7f:	48 89 c6             	mov    %rax,%rsi
   10e82:	bf 48 00 00 00       	mov    $0x48,%edi
   10e87:	e8 b4 2e ff ff       	call   3d40 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   10e8c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10e90:	48 89 c7             	mov    %rax,%rdi
   10e93:	e8 87 ec ff ff       	call   fb1f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   10e98:	49 89 c6             	mov    %rax,%r14
   10e9b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10e9f:	48 89 c7             	mov    %rax,%rdi
   10ea2:	e8 6a ec ff ff       	call   fb11 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   10ea7:	49 89 c5             	mov    %rax,%r13
   10eaa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10eae:	48 89 c7             	mov    %rax,%rdi
   10eb1:	e8 4d ec ff ff       	call   fb03 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   10eb6:	49 89 c4             	mov    %rax,%r12
   10eb9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10ebd:	48 89 c7             	mov    %rax,%rdi
   10ec0:	e8 b7 eb ff ff       	call   fa7c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   10ec5:	48 89 c3             	mov    %rax,%rbx
   10ec8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ecc:	48 89 c7             	mov    %rax,%rdi
   10ecf:	e8 c6 fe ff ff       	call   10d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   10ed4:	4d 89 f0             	mov    %r14,%r8
   10ed7:	4c 89 e9             	mov    %r13,%rcx
   10eda:	4c 89 e2             	mov    %r12,%rdx
   10edd:	48 89 de             	mov    %rbx,%rsi
   10ee0:	48 89 c7             	mov    %rax,%rdi
   10ee3:	e8 24 03 00 00       	call   1120c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   10ee8:	eb 33                	jmp    10f1d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   10eea:	48 89 c7             	mov    %rax,%rdi
   10eed:	e8 0e 22 ff ff       	call   3100 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   10ef2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10ef6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10efa:	48 89 d6             	mov    %rdx,%rsi
   10efd:	48 89 c7             	mov    %rax,%rdi
   10f00:	e8 d7 f6 ff ff       	call   105dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   10f05:	e8 e6 25 ff ff       	call   34f0 <__cxa_rethrow@plt>
	  __catch(...)
   10f0a:	48 89 c3             	mov    %rax,%rbx
   10f0d:	e8 5e 26 ff ff       	call   3570 <__cxa_end_catch@plt>
   10f12:	48 89 d8             	mov    %rbx,%rax
   10f15:	48 89 c7             	mov    %rax,%rdi
   10f18:	e8 b3 26 ff ff       	call   35d0 <_Unwind_Resume@plt>
	}
   10f1d:	48 83 c4 30          	add    $0x30,%rsp
   10f21:	5b                   	pop    %rbx
   10f22:	41 5c                	pop    %r12
   10f24:	41 5d                	pop    %r13
   10f26:	41 5e                	pop    %r14
   10f28:	5d                   	pop    %rbp
   10f29:	c3                   	ret

0000000000010f2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10f2a:	55                   	push   %rbp
   10f2b:	48 89 e5             	mov    %rsp,%rbp
   10f2e:	48 83 ec 20          	sub    $0x20,%rsp
   10f32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   10f36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f3a:	48 8b 50 18          	mov    0x18(%rax),%rdx
   10f3e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10f42:	48 89 d6             	mov    %rdx,%rsi
   10f45:	48 89 c7             	mov    %rax,%rdi
   10f48:	e8 55 f1 ff ff       	call   100a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   10f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f51:	c9                   	leave
   10f52:	c3                   	ret
   10f53:	90                   	nop

0000000000010f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   10f54:	55                   	push   %rbp
   10f55:	48 89 e5             	mov    %rsp,%rbp
   10f58:	48 83 ec 20          	sub    $0x20,%rsp
   10f5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10f64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   10f68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10f6c:	48 89 c7             	mov    %rax,%rdi
   10f6f:	e8 04 03 00 00       	call   11278 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   10f74:	48 8b 10             	mov    (%rax),%rdx
   10f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f7b:	48 89 10             	mov    %rdx,(%rax)
   10f7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f82:	48 89 c7             	mov    %rax,%rdi
   10f85:	e8 0e 00 00 00       	call   10f98 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   10f8a:	48 8b 10             	mov    (%rax),%rdx
   10f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f91:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10f95:	90                   	nop
   10f96:	c9                   	leave
   10f97:	c3                   	ret

0000000000010f98 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10f98:	55                   	push   %rbp
   10f99:	48 89 e5             	mov    %rsp,%rbp
   10f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fa4:	5d                   	pop    %rbp
   10fa5:	c3                   	ret

0000000000010fa6 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   10fa6:	55                   	push   %rbp
   10fa7:	48 89 e5             	mov    %rsp,%rbp
   10faa:	48 83 ec 10          	sub    $0x10,%rsp
   10fae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   10fb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fb6:	48 83 c0 20          	add    $0x20,%rax
   10fba:	48 89 c7             	mov    %rax,%rdi
   10fbd:	e8 c4 02 00 00       	call   11286 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   10fc2:	c9                   	leave
   10fc3:	c3                   	ret

0000000000010fc4 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   10fc4:	55                   	push   %rbp
   10fc5:	48 89 e5             	mov    %rsp,%rbp
   10fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   10fd0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10fd4:	5d                   	pop    %rbp
   10fd5:	c3                   	ret

0000000000010fd6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   10fd6:	55                   	push   %rbp
   10fd7:	48 89 e5             	mov    %rsp,%rbp
   10fda:	48 83 ec 10          	sub    $0x10,%rsp
   10fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   10fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fe6:	48 89 c7             	mov    %rax,%rdi
   10fe9:	e8 b2 02 00 00       	call   112a0 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   10fee:	c9                   	leave
   10fef:	c3                   	ret

0000000000010ff0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10ff0:	55                   	push   %rbp
   10ff1:	48 89 e5             	mov    %rsp,%rbp
   10ff4:	48 83 ec 20          	sub    $0x20,%rsp
   10ff8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ffc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   11000:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   11005:	74 40                	je     11047 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   11007:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1100b:	48 89 c7             	mov    %rax,%rdi
   1100e:	e8 a7 02 00 00       	call   112ba <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   11013:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   11017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1101b:	48 89 c7             	mov    %rax,%rdi
   1101e:	e8 a5 02 00 00       	call   112c8 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   11023:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   11028:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1102c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   11030:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11034:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11038:	48 89 ce             	mov    %rcx,%rsi
   1103b:	48 89 c7             	mov    %rax,%rdi
   1103e:	e8 ac 02 00 00       	call   112ef <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   11043:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   11047:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1104b:	c9                   	leave
   1104c:	c3                   	ret
   1104d:	90                   	nop

000000000001104e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1104e:	55                   	push   %rbp
   1104f:	48 89 e5             	mov    %rsp,%rbp
   11052:	48 83 ec 20          	sub    $0x20,%rsp
   11056:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1105a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1105e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   11062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11066:	48 89 c7             	mov    %rax,%rdi
   11069:	e8 c6 02 00 00       	call   11334 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1106e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11072:	0f 92 c0             	setb   %al
   11075:	0f b6 c0             	movzbl %al,%eax
   11078:	48 85 c0             	test   %rax,%rax
   1107b:	0f 95 c0             	setne  %al
   1107e:	84 c0                	test   %al,%al
   11080:	74 1a                	je     1109c <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   11082:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   11089:	ff ff 1f 
   1108c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11090:	73 05                	jae    11097 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   11092:	e8 89 21 ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   11097:	e8 24 20 ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1109c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   110a0:	48 c1 e0 03          	shl    $0x3,%rax
   110a4:	48 89 c7             	mov    %rax,%rdi
   110a7:	e8 54 22 ff ff       	call   3300 <_Znwm@plt>
   110ac:	90                   	nop
      }
   110ad:	c9                   	leave
   110ae:	c3                   	ret

00000000000110af <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   110af:	55                   	push   %rbp
   110b0:	48 89 e5             	mov    %rsp,%rbp
   110b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   110b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110bb:	5d                   	pop    %rbp
   110bc:	c3                   	ret

00000000000110bd <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   110bd:	55                   	push   %rbp
   110be:	48 89 e5             	mov    %rsp,%rbp
   110c1:	48 83 ec 30          	sub    $0x30,%rsp
   110c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   110c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   110cd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   110d1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   110d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   110d9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   110dd:	48 c1 f8 03          	sar    $0x3,%rax
   110e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   110e5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   110ea:	7e 1f                	jle    1110b <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   110ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110f0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   110f7:	00 
   110f8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   110fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11100:	48 89 ce             	mov    %rcx,%rsi
   11103:	48 89 c7             	mov    %rax,%rdi
   11106:	e8 55 24 ff ff       	call   3560 <memmove@plt>
      return __result + __count;
   1110b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1110f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11116:	00 
   11117:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1111b:	48 01 d0             	add    %rdx,%rax
    }
   1111e:	c9                   	leave
   1111f:	c3                   	ret

0000000000011120 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   11120:	55                   	push   %rbp
   11121:	48 89 e5             	mov    %rsp,%rbp
   11124:	53                   	push   %rbx
   11125:	48 83 ec 28          	sub    $0x28,%rsp
   11129:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1112d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11131:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   11135:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11139:	48 89 c7             	mov    %rax,%rdi
   1113c:	e8 07 02 00 00       	call   11348 <_ZSt12__miter_baseIPKPKcET_S4_>
   11141:	48 89 c3             	mov    %rax,%rbx
   11144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11148:	48 89 c7             	mov    %rax,%rdi
   1114b:	e8 f8 01 00 00       	call   11348 <_ZSt12__miter_baseIPKPKcET_S4_>
   11150:	48 89 c1             	mov    %rax,%rcx
   11153:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11157:	48 89 c2             	mov    %rax,%rdx
   1115a:	48 89 de             	mov    %rbx,%rsi
   1115d:	48 89 cf             	mov    %rcx,%rdi
   11160:	e8 f1 01 00 00       	call   11356 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   11165:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11169:	c9                   	leave
   1116a:	c3                   	ret
   1116b:	90                   	nop

000000000001116c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   1116c:	55                   	push   %rbp
   1116d:	48 89 e5             	mov    %rsp,%rbp
   11170:	48 83 ec 10          	sub    $0x10,%rsp
   11174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1117c:	48 89 c7             	mov    %rax,%rdi
   1117f:	e8 1c 20 ff ff       	call   31a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11184:	90                   	nop
   11185:	c9                   	leave
   11186:	c3                   	ret
   11187:	90                   	nop

0000000000011188 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   11188:	55                   	push   %rbp
   11189:	48 89 e5             	mov    %rsp,%rbp
   1118c:	48 83 ec 10          	sub    $0x10,%rsp
   11190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11194:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   11198:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1119c:	48 89 c7             	mov    %rax,%rdi
   1119f:	e8 c8 ff ff ff       	call   1116c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   111a4:	90                   	nop
   111a5:	c9                   	leave
   111a6:	c3                   	ret
   111a7:	90                   	nop

00000000000111a8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   111a8:	55                   	push   %rbp
   111a9:	48 89 e5             	mov    %rsp,%rbp
   111ac:	48 83 ec 20          	sub    $0x20,%rsp
   111b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   111b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   111bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   111c0:	48 89 d0             	mov    %rdx,%rax
   111c3:	48 c1 e0 03          	shl    $0x3,%rax
   111c7:	48 01 d0             	add    %rdx,%rax
   111ca:	48 c1 e0 03          	shl    $0x3,%rax
   111ce:	48 89 c2             	mov    %rax,%rdx
   111d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   111d5:	48 89 d6             	mov    %rdx,%rsi
   111d8:	48 89 c7             	mov    %rax,%rdi
   111db:	e8 30 21 ff ff       	call   3310 <_ZdlPvm@plt>
      }
   111e0:	c9                   	leave
   111e1:	c3                   	ret

00000000000111e2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   111e2:	55                   	push   %rbp
   111e3:	48 89 e5             	mov    %rsp,%rbp
   111e6:	48 83 ec 10          	sub    $0x10,%rsp
   111ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   111f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   111f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111fa:	ba 00 00 00 00       	mov    $0x0,%edx
   111ff:	48 89 ce             	mov    %rcx,%rsi
   11202:	48 89 c7             	mov    %rax,%rdi
   11205:	e8 b6 01 00 00       	call   113c0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   1120a:	c9                   	leave
   1120b:	c3                   	ret

000000000001120c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1120c:	55                   	push   %rbp
   1120d:	48 89 e5             	mov    %rsp,%rbp
   11210:	41 54                	push   %r12
   11212:	53                   	push   %rbx
   11213:	48 83 ec 30          	sub    $0x30,%rsp
   11217:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1121b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1121f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11223:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   11227:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1122b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1122f:	48 89 c7             	mov    %rax,%rdi
   11232:	e8 e8 e8 ff ff       	call   fb1f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   11237:	49 89 c4             	mov    %rax,%r12
   1123a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1123e:	48 89 c7             	mov    %rax,%rdi
   11241:	e8 cb e8 ff ff       	call   fb11 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   11246:	48 89 c3             	mov    %rax,%rbx
   11249:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1124d:	48 89 c7             	mov    %rax,%rdi
   11250:	e8 ae e8 ff ff       	call   fb03 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   11255:	48 89 c2             	mov    %rax,%rdx
   11258:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1125c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11260:	4d 89 e0             	mov    %r12,%r8
   11263:	48 89 d9             	mov    %rbx,%rcx
   11266:	48 89 c7             	mov    %rax,%rdi
   11269:	e8 e4 01 00 00       	call   11452 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   1126e:	90                   	nop
   1126f:	48 83 c4 30          	add    $0x30,%rsp
   11273:	5b                   	pop    %rbx
   11274:	41 5c                	pop    %r12
   11276:	5d                   	pop    %rbp
   11277:	c3                   	ret

0000000000011278 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11278:	55                   	push   %rbp
   11279:	48 89 e5             	mov    %rsp,%rbp
   1127c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11284:	5d                   	pop    %rbp
   11285:	c3                   	ret

0000000000011286 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   11286:	55                   	push   %rbp
   11287:	48 89 e5             	mov    %rsp,%rbp
   1128a:	48 83 ec 10          	sub    $0x10,%rsp
   1128e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   11292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11296:	48 89 c7             	mov    %rax,%rdi
   11299:	e8 64 02 00 00       	call   11502 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1129e:	c9                   	leave
   1129f:	c3                   	ret

00000000000112a0 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   112a0:	55                   	push   %rbp
   112a1:	48 89 e5             	mov    %rsp,%rbp
   112a4:	48 83 ec 10          	sub    $0x10,%rsp
   112a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   112ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112b0:	48 89 c7             	mov    %rax,%rdi
   112b3:	e8 7c 00 00 00       	call   11334 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   112b8:	c9                   	leave
   112b9:	c3                   	ret

00000000000112ba <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   112ba:	55                   	push   %rbp
   112bb:	48 89 e5             	mov    %rsp,%rbp
   112be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   112c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112c6:	5d                   	pop    %rbp
   112c7:	c3                   	ret

00000000000112c8 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   112c8:	55                   	push   %rbp
   112c9:	48 89 e5             	mov    %rsp,%rbp
   112cc:	48 83 ec 10          	sub    $0x10,%rsp
   112d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   112d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112d8:	48 89 c6             	mov    %rax,%rsi
   112db:	bf 08 00 00 00       	mov    $0x8,%edi
   112e0:	e8 5b 2a ff ff       	call   3d40 <_ZnwmPv>
   112e5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   112ec:	90                   	nop
   112ed:	c9                   	leave
   112ee:	c3                   	ret

00000000000112ef <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   112ef:	55                   	push   %rbp
   112f0:	48 89 e5             	mov    %rsp,%rbp
   112f3:	48 83 ec 20          	sub    $0x20,%rsp
   112f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   112fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   112ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   11303:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11307:	48 89 c7             	mov    %rax,%rdi
   1130a:	e8 01 02 00 00       	call   11510 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1130f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11313:	48 89 c7             	mov    %rax,%rdi
   11316:	e8 37 2a ff ff       	call   3d52 <_ZSt17__size_to_integerm>
   1131b:	48 89 c1             	mov    %rax,%rcx
   1131e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11322:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11326:	48 89 ce             	mov    %rcx,%rsi
   11329:	48 89 c7             	mov    %rax,%rdi
   1132c:	e8 ea 01 00 00       	call   1151b <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   11331:	c9                   	leave
   11332:	c3                   	ret
   11333:	90                   	nop

0000000000011334 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   11334:	55                   	push   %rbp
   11335:	48 89 e5             	mov    %rsp,%rbp
   11338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1133c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   11343:	ff ff 0f 
      }
   11346:	5d                   	pop    %rbp
   11347:	c3                   	ret

0000000000011348 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   11348:	55                   	push   %rbp
   11349:	48 89 e5             	mov    %rsp,%rbp
   1134c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   11350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11354:	5d                   	pop    %rbp
   11355:	c3                   	ret

0000000000011356 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   11356:	55                   	push   %rbp
   11357:	48 89 e5             	mov    %rsp,%rbp
   1135a:	41 54                	push   %r12
   1135c:	53                   	push   %rbx
   1135d:	48 83 ec 20          	sub    $0x20,%rsp
   11361:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11365:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11369:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1136d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11371:	48 89 c7             	mov    %rax,%rdi
   11374:	e8 af f9 ff ff       	call   10d28 <_ZSt12__niter_baseIPPKcET_S3_>
   11379:	49 89 c4             	mov    %rax,%r12
   1137c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11380:	48 89 c7             	mov    %rax,%rdi
   11383:	e8 f0 01 00 00       	call   11578 <_ZSt12__niter_baseIPKPKcET_S4_>
   11388:	48 89 c3             	mov    %rax,%rbx
   1138b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1138f:	48 89 c7             	mov    %rax,%rdi
   11392:	e8 e1 01 00 00       	call   11578 <_ZSt12__niter_baseIPKPKcET_S4_>
   11397:	4c 89 e2             	mov    %r12,%rdx
   1139a:	48 89 de             	mov    %rbx,%rsi
   1139d:	48 89 c7             	mov    %rax,%rdi
   113a0:	e8 e1 01 00 00       	call   11586 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   113a5:	48 89 c2             	mov    %rax,%rdx
   113a8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   113ac:	48 89 d6             	mov    %rdx,%rsi
   113af:	48 89 c7             	mov    %rax,%rdi
   113b2:	e8 fc 01 00 00       	call   115b3 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   113b7:	48 83 c4 20          	add    $0x20,%rsp
   113bb:	5b                   	pop    %rbx
   113bc:	41 5c                	pop    %r12
   113be:	5d                   	pop    %rbp
   113bf:	c3                   	ret

00000000000113c0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   113c0:	55                   	push   %rbp
   113c1:	48 89 e5             	mov    %rsp,%rbp
   113c4:	48 83 ec 20          	sub    $0x20,%rsp
   113c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   113cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   113d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   113d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113d8:	48 89 c7             	mov    %rax,%rdi
   113db:	e8 e6 01 00 00       	call   115c6 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   113e0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   113e4:	0f 92 c0             	setb   %al
   113e7:	0f b6 c0             	movzbl %al,%eax
   113ea:	48 85 c0             	test   %rax,%rax
   113ed:	0f 95 c0             	setne  %al
   113f0:	84 c0                	test   %al,%al
   113f2:	74 1a                	je     1140e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   113f4:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   113fb:	38 8e 03 
   113fe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11402:	73 05                	jae    11409 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   11404:	e8 17 1e ff ff       	call   3220 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   11409:	e8 b2 1c ff ff       	call   30c0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1140e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11412:	48 89 d0             	mov    %rdx,%rax
   11415:	48 c1 e0 03          	shl    $0x3,%rax
   11419:	48 01 d0             	add    %rdx,%rax
   1141c:	48 c1 e0 03          	shl    $0x3,%rax
   11420:	48 89 c7             	mov    %rax,%rdi
   11423:	e8 d8 1e ff ff       	call   3300 <_Znwm@plt>
   11428:	90                   	nop
      }
   11429:	c9                   	leave
   1142a:	c3                   	ret
   1142b:	90                   	nop

000000000001142c <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   1142c:	55                   	push   %rbp
   1142d:	48 89 e5             	mov    %rsp,%rbp
   11430:	48 83 ec 10          	sub    $0x10,%rsp
   11434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11438:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1143c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11440:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11444:	48 89 d6             	mov    %rdx,%rsi
   11447:	48 89 c7             	mov    %rax,%rdi
   1144a:	e8 8b 01 00 00       	call   115da <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1144f:	90                   	nop
   11450:	c9                   	leave
   11451:	c3                   	ret

0000000000011452 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   11452:	55                   	push   %rbp
   11453:	48 89 e5             	mov    %rsp,%rbp
   11456:	41 56                	push   %r14
   11458:	41 55                	push   %r13
   1145a:	41 54                	push   %r12
   1145c:	53                   	push   %rbx
   1145d:	48 83 ec 40          	sub    $0x40,%rsp
   11461:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11465:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   11469:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   1146d:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   11471:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   11475:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   11479:	48 89 de             	mov    %rbx,%rsi
   1147c:	bf 28 00 00 00       	mov    $0x28,%edi
   11481:	e8 ba 28 ff ff       	call   3d40 <_ZnwmPv>
   11486:	49 89 c4             	mov    %rax,%r12
   11489:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1148f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11493:	48 89 c7             	mov    %rax,%rdi
   11496:	e8 84 e6 ff ff       	call   fb1f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1149b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1149f:	48 89 c7             	mov    %rax,%rdi
   114a2:	e8 6a e6 ff ff       	call   fb11 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   114a7:	48 89 c2             	mov    %rax,%rdx
   114aa:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   114ae:	48 89 d6             	mov    %rdx,%rsi
   114b1:	48 89 c7             	mov    %rax,%rdi
   114b4:	e8 73 ff ff ff       	call   1142c <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   114b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   114bd:	48 89 c7             	mov    %rax,%rdi
   114c0:	e8 3e e6 ff ff       	call   fb03 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   114c5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   114c9:	48 89 c6             	mov    %rax,%rsi
   114cc:	4c 89 e7             	mov    %r12,%rdi
   114cf:	e8 24 01 00 00       	call   115f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   114d4:	eb 1e                	jmp    114f4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   114d6:	49 89 c5             	mov    %rax,%r13
   114d9:	45 84 f6             	test   %r14b,%r14b
   114dc:	74 0b                	je     114e9 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   114de:	48 89 de             	mov    %rbx,%rsi
   114e1:	4c 89 e7             	mov    %r12,%rdi
   114e4:	e8 ec bf ff ff       	call   d4d5 <_ZdlPvS_>
   114e9:	4c 89 e8             	mov    %r13,%rax
   114ec:	48 89 c7             	mov    %rax,%rdi
   114ef:	e8 dc 20 ff ff       	call   35d0 <_Unwind_Resume@plt>
   114f4:	48 83 c4 40          	add    $0x40,%rsp
   114f8:	5b                   	pop    %rbx
   114f9:	41 5c                	pop    %r12
   114fb:	41 5d                	pop    %r13
   114fd:	41 5e                	pop    %r14
   114ff:	5d                   	pop    %rbp
   11500:	c3                   	ret
   11501:	90                   	nop

0000000000011502 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   11502:	55                   	push   %rbp
   11503:	48 89 e5             	mov    %rsp,%rbp
   11506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   1150a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1150e:	5d                   	pop    %rbp
   1150f:	c3                   	ret

0000000000011510 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   11510:	55                   	push   %rbp
   11511:	48 89 e5             	mov    %rsp,%rbp
   11514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   11518:	90                   	nop
   11519:	5d                   	pop    %rbp
   1151a:	c3                   	ret

000000000001151b <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1151b:	55                   	push   %rbp
   1151c:	48 89 e5             	mov    %rsp,%rbp
   1151f:	48 83 ec 20          	sub    $0x20,%rsp
   11523:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11527:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1152b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1152f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11534:	75 06                	jne    1153c <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   11536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1153a:	eb 3a                	jmp    11576 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1153c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11540:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11547:	00 
   11548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1154c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   11550:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11558:	48 89 ce             	mov    %rcx,%rsi
   1155b:	48 89 c7             	mov    %rax,%rdi
   1155e:	e8 bf 00 00 00       	call   11622 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   11563:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11567:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1156e:	00 
   1156f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11573:	48 01 d0             	add    %rdx,%rax
    }
   11576:	c9                   	leave
   11577:	c3                   	ret

0000000000011578 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   11578:	55                   	push   %rbp
   11579:	48 89 e5             	mov    %rsp,%rbp
   1157c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   11580:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11584:	5d                   	pop    %rbp
   11585:	c3                   	ret

0000000000011586 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   11586:	55                   	push   %rbp
   11587:	48 89 e5             	mov    %rsp,%rbp
   1158a:	48 83 ec 20          	sub    $0x20,%rsp
   1158e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11592:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11596:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1159a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1159e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   115a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115a6:	48 89 ce             	mov    %rcx,%rsi
   115a9:	48 89 c7             	mov    %rax,%rdi
   115ac:	e8 9f 00 00 00       	call   11650 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   115b1:	c9                   	leave
   115b2:	c3                   	ret

00000000000115b3 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   115b3:	55                   	push   %rbp
   115b4:	48 89 e5             	mov    %rsp,%rbp
   115b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   115bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   115c3:	5d                   	pop    %rbp
   115c4:	c3                   	ret
   115c5:	90                   	nop

00000000000115c6 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   115c6:	55                   	push   %rbp
   115c7:	48 89 e5             	mov    %rsp,%rbp
   115ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   115ce:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   115d5:	1c c7 01 
      }
   115d8:	5d                   	pop    %rbp
   115d9:	c3                   	ret

00000000000115da <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   115da:	55                   	push   %rbp
   115db:	48 89 e5             	mov    %rsp,%rbp
   115de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   115e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   115ee:	48 8b 12             	mov    (%rdx),%rdx
   115f1:	48 89 10             	mov    %rdx,(%rax)
      { }
   115f4:	90                   	nop
   115f5:	5d                   	pop    %rbp
   115f6:	c3                   	ret
   115f7:	90                   	nop

00000000000115f8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   115f8:	55                   	push   %rbp
   115f9:	48 89 e5             	mov    %rsp,%rbp
   115fc:	48 83 ec 20          	sub    $0x20,%rsp
   11600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11604:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   11608:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1160c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11614:	48 89 ce             	mov    %rcx,%rsi
   11617:	48 89 c7             	mov    %rax,%rdi
   1161a:	e8 5f 00 00 00       	call   1167e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1161f:	90                   	nop
   11620:	c9                   	leave
   11621:	c3                   	ret

0000000000011622 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   11622:	55                   	push   %rbp
   11623:	48 89 e5             	mov    %rsp,%rbp
   11626:	48 83 ec 20          	sub    $0x20,%rsp
   1162a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1162e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11632:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   11636:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1163a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1163e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11642:	48 89 ce             	mov    %rcx,%rsi
   11645:	48 89 c7             	mov    %rax,%rdi
   11648:	e8 7b 00 00 00       	call   116c8 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1164d:	90                   	nop
   1164e:	c9                   	leave
   1164f:	c3                   	ret

0000000000011650 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   11650:	55                   	push   %rbp
   11651:	48 89 e5             	mov    %rsp,%rbp
   11654:	48 83 ec 20          	sub    $0x20,%rsp
   11658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1165c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11660:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   11664:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11668:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1166c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11670:	48 89 ce             	mov    %rcx,%rsi
   11673:	48 89 c7             	mov    %rax,%rdi
   11676:	e8 88 00 00 00       	call   11703 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   1167b:	c9                   	leave
   1167c:	c3                   	ret
   1167d:	90                   	nop

000000000001167e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1167e:	55                   	push   %rbp
   1167f:	48 89 e5             	mov    %rsp,%rbp
   11682:	53                   	push   %rbx
   11683:	48 83 ec 28          	sub    $0x28,%rsp
   11687:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1168b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1168f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   11693:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11697:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1169b:	48 89 c7             	mov    %rax,%rdi
   1169e:	e8 bf 00 00 00       	call   11762 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   116a3:	48 89 c7             	mov    %rax,%rdi
   116a6:	e8 d1 00 00 00       	call   1177c <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   116ab:	48 89 c6             	mov    %rax,%rsi
   116ae:	48 89 df             	mov    %rbx,%rdi
   116b1:	e8 da 1a ff ff       	call   3190 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   116b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   116ba:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   116c1:	90                   	nop
   116c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   116c6:	c9                   	leave
   116c7:	c3                   	ret

00000000000116c8 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   116c8:	55                   	push   %rbp
   116c9:	48 89 e5             	mov    %rsp,%rbp
   116cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   116d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   116d4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   116d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116dc:	48 8b 00             	mov    (%rax),%rax
   116df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   116e3:	eb 10                	jmp    116f5 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   116e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   116e9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   116ed:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   116f0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   116f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   116f9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   116fd:	75 e6                	jne    116e5 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   116ff:	90                   	nop
   11700:	90                   	nop
   11701:	5d                   	pop    %rbp
   11702:	c3                   	ret

0000000000011703 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   11703:	55                   	push   %rbp
   11704:	48 89 e5             	mov    %rsp,%rbp
   11707:	48 83 ec 30          	sub    $0x30,%rsp
   1170b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1170f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11713:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   11717:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1171b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1171f:	48 c1 f8 03          	sar    $0x3,%rax
   11723:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   11727:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1172c:	74 1f                	je     1174d <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1172e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11732:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11739:	00 
   1173a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1173e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11742:	48 89 ce             	mov    %rcx,%rsi
   11745:	48 89 c7             	mov    %rax,%rdi
   11748:	e8 13 1e ff ff       	call   3560 <memmove@plt>
	  return __result + _Num;
   1174d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11751:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11758:	00 
   11759:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1175d:	48 01 d0             	add    %rdx,%rax
	}
   11760:	c9                   	leave
   11761:	c3                   	ret

0000000000011762 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   11762:	55                   	push   %rbp
   11763:	48 89 e5             	mov    %rsp,%rbp
   11766:	48 83 ec 10          	sub    $0x10,%rsp
   1176a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   1176e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11772:	48 89 c7             	mov    %rax,%rdi
   11775:	e8 10 00 00 00       	call   1178a <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   1177a:	c9                   	leave
   1177b:	c3                   	ret

000000000001177c <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1177c:	55                   	push   %rbp
   1177d:	48 89 e5             	mov    %rsp,%rbp
   11780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11788:	5d                   	pop    %rbp
   11789:	c3                   	ret

000000000001178a <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1178a:	55                   	push   %rbp
   1178b:	48 89 e5             	mov    %rsp,%rbp
   1178e:	48 83 ec 10          	sub    $0x10,%rsp
   11792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   11796:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1179a:	48 89 c7             	mov    %rax,%rdi
   1179d:	e8 02 00 00 00       	call   117a4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   117a2:	c9                   	leave
   117a3:	c3                   	ret

00000000000117a4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   117a4:	55                   	push   %rbp
   117a5:	48 89 e5             	mov    %rsp,%rbp
   117a8:	48 83 ec 10          	sub    $0x10,%rsp
   117ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117b4:	48 89 c7             	mov    %rax,%rdi
   117b7:	e8 02 00 00 00       	call   117be <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   117bc:	c9                   	leave
   117bd:	c3                   	ret

00000000000117be <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   117be:	55                   	push   %rbp
   117bf:	48 89 e5             	mov    %rsp,%rbp
   117c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117ca:	48 8b 00             	mov    (%rax),%rax
   117cd:	5d                   	pop    %rbp
   117ce:	c3                   	ret
   117cf:	90                   	nop

00000000000117d0 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   117d0:	55                   	push   %rbp
   117d1:	48 89 e5             	mov    %rsp,%rbp
   117d4:	48 83 ec 10          	sub    $0x10,%rsp
   117d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117dc:	48 8d 15 dd e4 00 00 	lea    0xe4dd(%rip),%rdx        # 1fcc0 <_ZTVSt19bad_optional_access+0x10>
   117e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117e7:	48 89 10             	mov    %rdx,(%rax)
   117ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117ee:	48 89 c7             	mov    %rax,%rdi
   117f1:	e8 1a 1e ff ff       	call   3610 <_ZNSt9exceptionD2Ev@plt>
   117f6:	90                   	nop
   117f7:	c9                   	leave
   117f8:	c3                   	ret
   117f9:	90                   	nop

00000000000117fa <_ZNSt19bad_optional_accessD0Ev>:
   117fa:	55                   	push   %rbp
   117fb:	48 89 e5             	mov    %rsp,%rbp
   117fe:	48 83 ec 10          	sub    $0x10,%rsp
   11802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1180a:	48 89 c7             	mov    %rax,%rdi
   1180d:	e8 be ff ff ff       	call   117d0 <_ZNSt19bad_optional_accessD1Ev>
   11812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11816:	be 08 00 00 00       	mov    $0x8,%esi
   1181b:	48 89 c7             	mov    %rax,%rdi
   1181e:	e8 ed 1a ff ff       	call   3310 <_ZdlPvm@plt>
   11823:	c9                   	leave
   11824:	c3                   	ret

Disassembly of section .fini:

0000000000011828 <_fini>:
   11828:	48 83 ec 08          	sub    $0x8,%rsp
   1182c:	48 83 c4 08          	add    $0x8,%rsp
   11830:	c3                   	ret
