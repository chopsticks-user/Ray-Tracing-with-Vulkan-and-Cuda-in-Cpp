
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad 9f 01 00 	mov    0x19fad(%rip),%rax        # 1cfb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca 9f 01 00    	push   0x19fca(%rip)        # 1cff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc 9f 01 00    	jmp    *0x19fcc(%rip)        # 1cff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca 9f 01 00    	jmp    *0x19fca(%rip)        # 1d000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 9f 01 00    	jmp    *0x19fc2(%rip)        # 1d008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba 9f 01 00    	jmp    *0x19fba(%rip)        # 1d010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    3060:	ff 25 b2 9f 01 00    	jmp    *0x19fb2(%rip)        # 1d018 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    3070:	ff 25 aa 9f 01 00    	jmp    *0x19faa(%rip)        # 1d020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <vkDestroySwapchainKHR@plt>:
    3080:	ff 25 a2 9f 01 00    	jmp    *0x19fa2(%rip)        # 1d028 <vkDestroySwapchainKHR@Base>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <glfwDestroyWindow@plt>:
    3090:	ff 25 9a 9f 01 00    	jmp    *0x19f9a(%rip)        # 1d030 <glfwDestroyWindow@Base>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZSt17__throw_bad_allocv@plt>:
    30a0:	ff 25 92 9f 01 00    	jmp    *0x19f92(%rip)        # 1d038 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30b0:	ff 25 8a 9f 01 00    	jmp    *0x19f8a(%rip)        # 1d040 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <__cxa_begin_catch@plt>:
    30c0:	ff 25 82 9f 01 00    	jmp    *0x19f82(%rip)        # 1d048 <__cxa_begin_catch@CXXABI_1.3>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <strlen@plt>:
    30d0:	ff 25 7a 9f 01 00    	jmp    *0x19f7a(%rip)        # 1d050 <strlen@GLIBC_2.2.5>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <__cxa_allocate_exception@plt>:
    30e0:	ff 25 72 9f 01 00    	jmp    *0x19f72(%rip)        # 1d058 <__cxa_allocate_exception@CXXABI_1.3>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <_ZSt20__throw_length_errorPKc@plt>:
    30f0:	ff 25 6a 9f 01 00    	jmp    *0x19f6a(%rip)        # 1d060 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <vkEnumeratePhysicalDevices@plt>:
    3100:	ff 25 62 9f 01 00    	jmp    *0x19f62(%rip)        # 1d068 <vkEnumeratePhysicalDevices@Base>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <memset@plt>:
    3110:	ff 25 5a 9f 01 00    	jmp    *0x19f5a(%rip)        # 1d070 <memset@GLIBC_2.2.5>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSaIcEC1ERKS_@plt>:
    3120:	ff 25 52 9f 01 00    	jmp    *0x19f52(%rip)        # 1d078 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <vkGetSwapchainImagesKHR@plt>:
    3130:	ff 25 4a 9f 01 00    	jmp    *0x19f4a(%rip)        # 1d080 <vkGetSwapchainImagesKHR@Base>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>:
    3140:	ff 25 42 9f 01 00    	jmp    *0x19f42(%rip)        # 1d088 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@GLIBCXX_3.4>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3150:	ff 25 3a 9f 01 00    	jmp    *0x19f3a(%rip)        # 1d090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3160:	ff 25 32 9f 01 00    	jmp    *0x19f32(%rip)        # 1d098 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3170:	ff 25 2a 9f 01 00    	jmp    *0x19f2a(%rip)        # 1d0a0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <_ZSt19__throw_logic_errorPKc@plt>:
    3180:	ff 25 22 9f 01 00    	jmp    *0x19f22(%rip)        # 1d0a8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <__cxa_free_exception@plt>:
    3190:	ff 25 1a 9f 01 00    	jmp    *0x19f1a(%rip)        # 1d0b0 <__cxa_free_exception@CXXABI_1.3>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    31a0:	ff 25 12 9f 01 00    	jmp    *0x19f12(%rip)        # 1d0b8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <glfwGetRequiredInstanceExtensions@plt>:
    31b0:	ff 25 0a 9f 01 00    	jmp    *0x19f0a(%rip)        # 1d0c0 <glfwGetRequiredInstanceExtensions@Base>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    31c0:	ff 25 02 9f 01 00    	jmp    *0x19f02(%rip)        # 1d0c8 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <vkCreateShaderModule@plt>:
    31d0:	ff 25 fa 9e 01 00    	jmp    *0x19efa(%rip)        # 1d0d0 <vkCreateShaderModule@Base>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    31e0:	ff 25 f2 9e 01 00    	jmp    *0x19ef2(%rip)        # 1d0d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkDestroyDevice@plt>:
    31f0:	ff 25 ea 9e 01 00    	jmp    *0x19eea(%rip)        # 1d0e0 <vkDestroyDevice@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <vkEnumerateInstanceExtensionProperties@plt>:
    3200:	ff 25 e2 9e 01 00    	jmp    *0x19ee2(%rip)        # 1d0e8 <vkEnumerateInstanceExtensionProperties@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    3210:	ff 25 da 9e 01 00    	jmp    *0x19eda(%rip)        # 1d0f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <glfwWindowHint@plt>:
    3220:	ff 25 d2 9e 01 00    	jmp    *0x19ed2(%rip)        # 1d0f8 <glfwWindowHint@Base>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    3230:	ff 25 ca 9e 01 00    	jmp    *0x19eca(%rip)        # 1d100 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <__cxa_atexit@plt>:
    3240:	ff 25 c2 9e 01 00    	jmp    *0x19ec2(%rip)        # 1d108 <__cxa_atexit@GLIBC_2.2.5>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <vkGetInstanceProcAddr@plt>:
    3250:	ff 25 ba 9e 01 00    	jmp    *0x19eba(%rip)        # 1d110 <vkGetInstanceProcAddr@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <glfwPollEvents@plt>:
    3260:	ff 25 b2 9e 01 00    	jmp    *0x19eb2(%rip)        # 1d118 <glfwPollEvents@Base>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    3270:	ff 25 aa 9e 01 00    	jmp    *0x19eaa(%rip)        # 1d120 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <_Znwm@plt>:
    3280:	ff 25 a2 9e 01 00    	jmp    *0x19ea2(%rip)        # 1d128 <_Znwm@GLIBCXX_3.4>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <_ZdlPvm@plt>:
    3290:	ff 25 9a 9e 01 00    	jmp    *0x19e9a(%rip)        # 1d130 <_ZdlPvm@CXXABI_1.3.9>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <vkDestroyInstance@plt>:
    32a0:	ff 25 92 9e 01 00    	jmp    *0x19e92(%rip)        # 1d138 <vkDestroyInstance@Base>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <glfwTerminate@plt>:
    32b0:	ff 25 8a 9e 01 00    	jmp    *0x19e8a(%rip)        # 1d140 <glfwTerminate@Base>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <vkCreateImageView@plt>:
    32c0:	ff 25 82 9e 01 00    	jmp    *0x19e82(%rip)        # 1d148 <vkCreateImageView@Base>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    32d0:	ff 25 7a 9e 01 00    	jmp    *0x19e7a(%rip)        # 1d150 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <_ZNSolsEPFRSoS_E@plt>:
    32e0:	ff 25 72 9e 01 00    	jmp    *0x19e72(%rip)        # 1d158 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    32f0:	ff 25 6a 9e 01 00    	jmp    *0x19e6a(%rip)        # 1d160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3300:	ff 25 62 9e 01 00    	jmp    *0x19e62(%rip)        # 1d168 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <_ZNSaIcED1Ev@plt>:
    3310:	ff 25 5a 9e 01 00    	jmp    *0x19e5a(%rip)        # 1d170 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    3320:	ff 25 52 9e 01 00    	jmp    *0x19e52(%rip)        # 1d178 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3330:	ff 25 4a 9e 01 00    	jmp    *0x19e4a(%rip)        # 1d180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <vkEnumerateInstanceLayerProperties@plt>:
    3340:	ff 25 42 9e 01 00    	jmp    *0x19e42(%rip)        # 1d188 <vkEnumerateInstanceLayerProperties@Base>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <glfwInit@plt>:
    3350:	ff 25 3a 9e 01 00    	jmp    *0x19e3a(%rip)        # 1d190 <glfwInit@Base>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>:
    3360:	ff 25 32 9e 01 00    	jmp    *0x19e32(%rip)        # 1d198 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3370:	ff 25 2a 9e 01 00    	jmp    *0x19e2a(%rip)        # 1d1a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <vkCreateSwapchainKHR@plt>:
    3380:	ff 25 22 9e 01 00    	jmp    *0x19e22(%rip)        # 1d1a8 <vkCreateSwapchainKHR@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <vkDestroyShaderModule@plt>:
    3390:	ff 25 1a 9e 01 00    	jmp    *0x19e1a(%rip)        # 1d1b0 <vkDestroyShaderModule@Base>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <vkCreateInstance@plt>:
    33a0:	ff 25 12 9e 01 00    	jmp    *0x19e12(%rip)        # 1d1b8 <vkCreateInstance@Base>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    33b0:	ff 25 0a 9e 01 00    	jmp    *0x19e0a(%rip)        # 1d1c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNSi4readEPcl@plt>:
    33c0:	ff 25 02 9e 01 00    	jmp    *0x19e02(%rip)        # 1d1c8 <_ZNSi4readEPcl@GLIBCXX_3.4>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    33d0:	ff 25 fa 9d 01 00    	jmp    *0x19dfa(%rip)        # 1d1d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    33e0:	ff 25 f2 9d 01 00    	jmp    *0x19df2(%rip)        # 1d1d8 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    33f0:	ff 25 ea 9d 01 00    	jmp    *0x19dea(%rip)        # 1d1e0 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <vkGetDeviceQueue@plt>:
    3400:	ff 25 e2 9d 01 00    	jmp    *0x19de2(%rip)        # 1d1e8 <vkGetDeviceQueue@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <vkEnumerateDeviceExtensionProperties@plt>:
    3410:	ff 25 da 9d 01 00    	jmp    *0x19dda(%rip)        # 1d1f0 <vkEnumerateDeviceExtensionProperties@Base>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <strcmp@plt>:
    3420:	ff 25 d2 9d 01 00    	jmp    *0x19dd2(%rip)        # 1d1f8 <strcmp@GLIBC_2.2.5>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <_ZNSaIcEC2ERKS_@plt>:
    3430:	ff 25 ca 9d 01 00    	jmp    *0x19dca(%rip)        # 1d200 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <__cxa_rethrow@plt>:
    3440:	ff 25 c2 9d 01 00    	jmp    *0x19dc2(%rip)        # 1d208 <__cxa_rethrow@CXXABI_1.3>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <vkCreateDevice@plt>:
    3450:	ff 25 ba 9d 01 00    	jmp    *0x19dba(%rip)        # 1d210 <vkCreateDevice@Base>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <_ZNSt8ios_base4InitC1Ev@plt>:
    3460:	ff 25 b2 9d 01 00    	jmp    *0x19db2(%rip)        # 1d218 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <glfwCreateWindowSurface@plt>:
    3470:	ff 25 aa 9d 01 00    	jmp    *0x19daa(%rip)        # 1d220 <glfwCreateWindowSurface@Base>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <glfwCreateWindow@plt>:
    3480:	ff 25 a2 9d 01 00    	jmp    *0x19da2(%rip)        # 1d228 <glfwCreateWindow@Base>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <glfwGetFramebufferSize@plt>:
    3490:	ff 25 9a 9d 01 00    	jmp    *0x19d9a(%rip)        # 1d230 <glfwGetFramebufferSize@Base>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    34a0:	ff 25 92 9d 01 00    	jmp    *0x19d92(%rip)        # 1d238 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    34b0:	ff 25 8a 9d 01 00    	jmp    *0x19d8a(%rip)        # 1d240 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <memmove@plt>:
    34c0:	ff 25 82 9d 01 00    	jmp    *0x19d82(%rip)        # 1d248 <memmove@GLIBC_2.2.5>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <__cxa_end_catch@plt>:
    34d0:	ff 25 7a 9d 01 00    	jmp    *0x19d7a(%rip)        # 1d250 <__cxa_end_catch@CXXABI_1.3>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <__cxa_throw@plt>:
    34e0:	ff 25 72 9d 01 00    	jmp    *0x19d72(%rip)        # 1d258 <__cxa_throw@CXXABI_1.3>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSi5tellgEv@plt>:
    34f0:	ff 25 6a 9d 01 00    	jmp    *0x19d6a(%rip)        # 1d260 <_ZNSi5tellgEv@GLIBCXX_3.4>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <vkDestroySurfaceKHR@plt>:
    3500:	ff 25 62 9d 01 00    	jmp    *0x19d62(%rip)        # 1d268 <vkDestroySurfaceKHR@Base>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <_Unwind_Resume@plt>:
    3510:	ff 25 5a 9d 01 00    	jmp    *0x19d5a(%rip)        # 1d270 <_Unwind_Resume@GCC_3.0>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <_ZNSaIcEC1Ev@plt>:
    3520:	ff 25 52 9d 01 00    	jmp    *0x19d52(%rip)        # 1d278 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003530 <vkDestroyImageView@plt>:
    3530:	ff 25 4a 9d 01 00    	jmp    *0x19d4a(%rip)        # 1d280 <vkDestroyImageView@Base>
    3536:	68 50 00 00 00       	push   $0x50
    353b:	e9 e0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    3540:	ff 25 42 9d 01 00    	jmp    *0x19d42(%rip)        # 1d288 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    3546:	68 51 00 00 00       	push   $0x51
    354b:	e9 d0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003550 <_ZNSt9exceptionD2Ev@plt>:
    3550:	ff 25 3a 9d 01 00    	jmp    *0x19d3a(%rip)        # 1d290 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    3556:	68 52 00 00 00       	push   $0x52
    355b:	e9 c0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003560 <glfwWindowShouldClose@plt>:
    3560:	ff 25 32 9d 01 00    	jmp    *0x19d32(%rip)        # 1d298 <glfwWindowShouldClose@Base>
    3566:	68 53 00 00 00       	push   $0x53
    356b:	e9 b0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3570:	ff 25 2a 9d 01 00    	jmp    *0x19d2a(%rip)        # 1d2a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3576:	68 54 00 00 00       	push   $0x54
    357b:	e9 a0 fa ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003580 <__cxa_finalize@plt>:
    3580:	ff 25 0a 9a 01 00    	jmp    *0x19a0a(%rip)        # 1cf90 <__cxa_finalize@GLIBC_2.2.5>
    3586:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003590 <_start>:
    3590:	31 ed                	xor    %ebp,%ebp
    3592:	49 89 d1             	mov    %rdx,%r9
    3595:	5e                   	pop    %rsi
    3596:	48 89 e2             	mov    %rsp,%rdx
    3599:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    359d:	50                   	push   %rax
    359e:	54                   	push   %rsp
    359f:	45 31 c0             	xor    %r8d,%r8d
    35a2:	31 c9                	xor    %ecx,%ecx
    35a4:	48 8d 3d 40 01 00 00 	lea    0x140(%rip),%rdi        # 36eb <main>
    35ab:	ff 15 ef 99 01 00    	call   *0x199ef(%rip)        # 1cfa0 <__libc_start_main@GLIBC_2.34>
    35b1:	f4                   	hlt
    35b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    35b9:	00 00 00 
    35bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000035c0 <deregister_tm_clones>:
    35c0:	48 8d 3d 01 9d 01 00 	lea    0x19d01(%rip),%rdi        # 1d2c8 <__TMC_END__>
    35c7:	48 8d 05 fa 9c 01 00 	lea    0x19cfa(%rip),%rax        # 1d2c8 <__TMC_END__>
    35ce:	48 39 f8             	cmp    %rdi,%rax
    35d1:	74 15                	je     35e8 <deregister_tm_clones+0x28>
    35d3:	48 8b 05 d6 99 01 00 	mov    0x199d6(%rip),%rax        # 1cfb0 <_ITM_deregisterTMCloneTable@Base>
    35da:	48 85 c0             	test   %rax,%rax
    35dd:	74 09                	je     35e8 <deregister_tm_clones+0x28>
    35df:	ff e0                	jmp    *%rax
    35e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    35e8:	c3                   	ret
    35e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035f0 <register_tm_clones>:
    35f0:	48 8d 3d d1 9c 01 00 	lea    0x19cd1(%rip),%rdi        # 1d2c8 <__TMC_END__>
    35f7:	48 8d 35 ca 9c 01 00 	lea    0x19cca(%rip),%rsi        # 1d2c8 <__TMC_END__>
    35fe:	48 29 fe             	sub    %rdi,%rsi
    3601:	48 89 f0             	mov    %rsi,%rax
    3604:	48 c1 ee 3f          	shr    $0x3f,%rsi
    3608:	48 c1 f8 03          	sar    $0x3,%rax
    360c:	48 01 c6             	add    %rax,%rsi
    360f:	48 d1 fe             	sar    %rsi
    3612:	74 14                	je     3628 <register_tm_clones+0x38>
    3614:	48 8b 05 a5 99 01 00 	mov    0x199a5(%rip),%rax        # 1cfc0 <_ITM_registerTMCloneTable@Base>
    361b:	48 85 c0             	test   %rax,%rax
    361e:	74 08                	je     3628 <register_tm_clones+0x38>
    3620:	ff e0                	jmp    *%rax
    3622:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3628:	c3                   	ret
    3629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003630 <__do_global_dtors_aux>:
    3630:	f3 0f 1e fa          	endbr64
    3634:	80 3d f5 9e 01 00 00 	cmpb   $0x0,0x19ef5(%rip)        # 1d530 <completed.0>
    363b:	75 2b                	jne    3668 <__do_global_dtors_aux+0x38>
    363d:	55                   	push   %rbp
    363e:	48 83 3d 4a 99 01 00 	cmpq   $0x0,0x1994a(%rip)        # 1cf90 <__cxa_finalize@GLIBC_2.2.5>
    3645:	00 
    3646:	48 89 e5             	mov    %rsp,%rbp
    3649:	74 0c                	je     3657 <__do_global_dtors_aux+0x27>
    364b:	48 8b 3d 5e 9c 01 00 	mov    0x19c5e(%rip),%rdi        # 1d2b0 <__dso_handle>
    3652:	e8 29 ff ff ff       	call   3580 <__cxa_finalize@plt>
    3657:	e8 64 ff ff ff       	call   35c0 <deregister_tm_clones>
    365c:	c6 05 cd 9e 01 00 01 	movb   $0x1,0x19ecd(%rip)        # 1d530 <completed.0>
    3663:	5d                   	pop    %rbp
    3664:	c3                   	ret
    3665:	0f 1f 00             	nopl   (%rax)
    3668:	c3                   	ret
    3669:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003670 <frame_dummy>:
    3670:	f3 0f 1e fa          	endbr64
    3674:	e9 77 ff ff ff       	jmp    35f0 <register_tm_clones>

0000000000003679 <_Z14protected_mainiPPc>:

using namespace rt_vulkan;

int protected_main([[maybe_unused]] int argc,
                   [[maybe_unused]] char **argv)
{
    3679:	55                   	push   %rbp
    367a:	48 89 e5             	mov    %rsp,%rbp
    367d:	53                   	push   %rbx
    367e:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    3685:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    368b:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    RenderTriangleApplication app;
    3692:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    3699:	48 89 c7             	mov    %rax,%rdi
    369c:	e8 2f 02 00 00       	call   38d0 <_ZN9rt_vulkan25RenderTriangleApplicationC1Ev>
    app.run();
    36a1:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    36a8:	48 89 c7             	mov    %rax,%rdi
    36ab:	e8 fe 36 00 00       	call   6dae <_ZN9rt_vulkan25RenderTriangleApplication3runEv>

    return EXIT_SUCCESS;
    36b0:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    36b5:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    36bc:	48 89 c7             	mov    %rax,%rdi
    36bf:	e8 82 03 00 00       	call   3a46 <_ZN9rt_vulkan25RenderTriangleApplicationD1Ev>
    return EXIT_SUCCESS;
    36c4:	89 d8                	mov    %ebx,%eax
    36c6:	eb 1d                	jmp    36e5 <_Z14protected_mainiPPc+0x6c>
}
    36c8:	48 89 c3             	mov    %rax,%rbx
    36cb:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    36d2:	48 89 c7             	mov    %rax,%rdi
    36d5:	e8 6c 03 00 00       	call   3a46 <_ZN9rt_vulkan25RenderTriangleApplicationD1Ev>
    36da:	48 89 d8             	mov    %rbx,%rax
    36dd:	48 89 c7             	mov    %rax,%rdi
    36e0:	e8 2b fe ff ff       	call   3510 <_Unwind_Resume@plt>
    36e5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    36e9:	c9                   	leave
    36ea:	c3                   	ret

00000000000036eb <main>:

int main([[maybe_unused]] int argc,
         [[maybe_unused]] char **argv)
{
    36eb:	55                   	push   %rbp
    36ec:	48 89 e5             	mov    %rsp,%rbp
    36ef:	53                   	push   %rbx
    36f0:	48 83 ec 28          	sub    $0x28,%rsp
    36f4:	89 7d dc             	mov    %edi,-0x24(%rbp)
    36f7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    try
    {
        return protected_main(argc, argv);
    36fb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    36ff:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3702:	48 89 d6             	mov    %rdx,%rsi
    3705:	89 c7                	mov    %eax,%edi
    3707:	e8 6d ff ff ff       	call   3679 <_Z14protected_mainiPPc>
    370c:	e9 aa 00 00 00       	jmp    37bb <main+0xd0>
    }
    catch (...)
    {
        std::cerr << "Uncaught exception.\n";
    }
    return EXIT_FAILURE;
    3711:	b8 01 00 00 00       	mov    $0x1,%eax
    3716:	e9 a0 00 00 00       	jmp    37bb <main+0xd0>
    catch (const std::exception &e)
    371b:	48 83 fa 01          	cmp    $0x1,%rdx
    371f:	75 49                	jne    376a <main+0x7f>
    3721:	48 89 c7             	mov    %rax,%rdi
    3724:	e8 97 f9 ff ff       	call   30c0 <__cxa_begin_catch@plt>
    3729:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
        std::cerr << e.what() << '\n';
    372d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3731:	48 8b 00             	mov    (%rax),%rax
    3734:	48 83 c0 10          	add    $0x10,%rax
    3738:	48 8b 10             	mov    (%rax),%rdx
    373b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    373f:	48 89 c7             	mov    %rax,%rdi
    3742:	ff d2                	call   *%rdx
    3744:	48 89 c6             	mov    %rax,%rsi
    3747:	48 8d 05 d2 9c 01 00 	lea    0x19cd2(%rip),%rax        # 1d420 <_ZSt4cerr@GLIBCXX_3.4>
    374e:	48 89 c7             	mov    %rax,%rdi
    3751:	e8 1a fb ff ff       	call   3270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3756:	be 0a 00 00 00       	mov    $0xa,%esi
    375b:	48 89 c7             	mov    %rax,%rdi
    375e:	e8 0d fc ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    }
    3763:	e8 68 fd ff ff       	call   34d0 <__cxa_end_catch@plt>
    3768:	eb a7                	jmp    3711 <main+0x26>
    catch (...)
    376a:	48 89 c7             	mov    %rax,%rdi
    376d:	e8 4e f9 ff ff       	call   30c0 <__cxa_begin_catch@plt>
        std::cerr << "Uncaught exception.\n";
    3772:	48 8d 05 98 de 00 00 	lea    0xde98(%rip),%rax        # 11611 <_ZN6__pstl9execution2v1L5unseqE+0x2e>
    3779:	48 89 c6             	mov    %rax,%rsi
    377c:	48 8d 05 9d 9c 01 00 	lea    0x19c9d(%rip),%rax        # 1d420 <_ZSt4cerr@GLIBCXX_3.4>
    3783:	48 89 c7             	mov    %rax,%rdi
    3786:	e8 e5 fa ff ff       	call   3270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    }
    378b:	e8 40 fd ff ff       	call   34d0 <__cxa_end_catch@plt>
    3790:	e9 7c ff ff ff       	jmp    3711 <main+0x26>
    }
    3795:	48 89 c3             	mov    %rax,%rbx
    3798:	e8 33 fd ff ff       	call   34d0 <__cxa_end_catch@plt>
    379d:	48 89 d8             	mov    %rbx,%rax
    37a0:	48 89 c7             	mov    %rax,%rdi
    37a3:	e8 68 fd ff ff       	call   3510 <_Unwind_Resume@plt>
    }
    37a8:	48 89 c3             	mov    %rax,%rbx
    37ab:	e8 20 fd ff ff       	call   34d0 <__cxa_end_catch@plt>
    37b0:	48 89 d8             	mov    %rbx,%rax
    37b3:	48 89 c7             	mov    %rax,%rdi
    37b6:	e8 55 fd ff ff       	call   3510 <_Unwind_Resume@plt>
    37bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    37bf:	c9                   	leave
    37c0:	c3                   	ret

00000000000037c1 <_Z41__static_initialization_and_destruction_0ii>:
    37c1:	55                   	push   %rbp
    37c2:	48 89 e5             	mov    %rsp,%rbp
    37c5:	48 83 ec 10          	sub    $0x10,%rsp
    37c9:	89 7d fc             	mov    %edi,-0x4(%rbp)
    37cc:	89 75 f8             	mov    %esi,-0x8(%rbp)
    37cf:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    37d3:	75 3b                	jne    3810 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    37d5:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    37dc:	75 32                	jne    3810 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    37de:	48 8d 05 4c 9d 01 00 	lea    0x19d4c(%rip),%rax        # 1d531 <_ZStL8__ioinit>
    37e5:	48 89 c7             	mov    %rax,%rdi
    37e8:	e8 73 fc ff ff       	call   3460 <_ZNSt8ios_base4InitC1Ev@plt>
    37ed:	48 8d 05 bc 9a 01 00 	lea    0x19abc(%rip),%rax        # 1d2b0 <__dso_handle>
    37f4:	48 89 c2             	mov    %rax,%rdx
    37f7:	48 8d 05 33 9d 01 00 	lea    0x19d33(%rip),%rax        # 1d531 <_ZStL8__ioinit>
    37fe:	48 89 c6             	mov    %rax,%rsi
    3801:	48 8b 05 c0 97 01 00 	mov    0x197c0(%rip),%rax        # 1cfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    3808:	48 89 c7             	mov    %rax,%rdi
    380b:	e8 30 fa ff ff       	call   3240 <__cxa_atexit@plt>
    3810:	90                   	nop
    3811:	c9                   	leave
    3812:	c3                   	ret

0000000000003813 <_GLOBAL__sub_I__Z14protected_mainiPPc>:
    3813:	55                   	push   %rbp
    3814:	48 89 e5             	mov    %rsp,%rbp
    3817:	be ff ff 00 00       	mov    $0xffff,%esi
    381c:	bf 01 00 00 00       	mov    $0x1,%edi
    3821:	e8 9b ff ff ff       	call   37c1 <_Z41__static_initialization_and_destruction_0ii>
    3826:	5d                   	pop    %rbp
    3827:	c3                   	ret

0000000000003828 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    3828:	55                   	push   %rbp
    3829:	48 89 e5             	mov    %rsp,%rbp
    382c:	48 83 ec 10          	sub    $0x10,%rsp
    3830:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3838:	48 89 c7             	mov    %rax,%rdi
    383b:	e8 86 03 00 00       	call   3bc6 <_ZNSaIP9VkImage_TED1Ev>
    3840:	90                   	nop
    3841:	c9                   	leave
    3842:	c3                   	ret
    3843:	90                   	nop

0000000000003844 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    3844:	55                   	push   %rbp
    3845:	48 89 e5             	mov    %rsp,%rbp
    3848:	48 83 ec 10          	sub    $0x10,%rsp
    384c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3854:	48 89 c7             	mov    %rax,%rdi
    3857:	e8 42 03 00 00       	call   3b9e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    385c:	90                   	nop
    385d:	c9                   	leave
    385e:	c3                   	ret
    385f:	90                   	nop

0000000000003860 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    3860:	55                   	push   %rbp
    3861:	48 89 e5             	mov    %rsp,%rbp
    3864:	48 83 ec 10          	sub    $0x10,%rsp
    3868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    386c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3870:	48 89 c7             	mov    %rax,%rdi
    3873:	e8 cc ff ff ff       	call   3844 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    3878:	90                   	nop
    3879:	c9                   	leave
    387a:	c3                   	ret
    387b:	90                   	nop

000000000000387c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    387c:	55                   	push   %rbp
    387d:	48 89 e5             	mov    %rsp,%rbp
    3880:	48 83 ec 10          	sub    $0x10,%rsp
    3884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    388c:	48 89 c7             	mov    %rax,%rdi
    388f:	e8 08 04 00 00       	call   3c9c <_ZNSaIP13VkImageView_TED1Ev>
    3894:	90                   	nop
    3895:	c9                   	leave
    3896:	c3                   	ret
    3897:	90                   	nop

0000000000003898 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    3898:	55                   	push   %rbp
    3899:	48 89 e5             	mov    %rsp,%rbp
    389c:	48 83 ec 10          	sub    $0x10,%rsp
    38a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38a8:	48 89 c7             	mov    %rax,%rdi
    38ab:	e8 c4 03 00 00       	call   3c74 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
    38b0:	90                   	nop
    38b1:	c9                   	leave
    38b2:	c3                   	ret
    38b3:	90                   	nop

00000000000038b4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
    38b4:	55                   	push   %rbp
    38b5:	48 89 e5             	mov    %rsp,%rbp
    38b8:	48 83 ec 10          	sub    $0x10,%rsp
    38bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38c4:	48 89 c7             	mov    %rax,%rdi
    38c7:	e8 cc ff ff ff       	call   3898 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
    38cc:	90                   	nop
    38cd:	c9                   	leave
    38ce:	c3                   	ret
    38cf:	90                   	nop

00000000000038d0 <_ZN9rt_vulkan25RenderTriangleApplicationC1Ev>:
    {
    public:
        static const uint32_t init_window_width = 1024;
        static const uint32_t init_window_height = 720;

        RenderTriangleApplication()
    38d0:	55                   	push   %rbp
    38d1:	48 89 e5             	mov    %rsp,%rbp
    38d4:	41 57                	push   %r15
    38d6:	41 56                	push   %r14
    38d8:	41 55                	push   %r13
    38da:	41 54                	push   %r12
    38dc:	53                   	push   %rbx
    38dd:	48 83 ec 38          	sub    $0x38,%rsp
    38e1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
            : window{nullptr, init_window_width, init_window_height} {}
    38e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    38e9:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    38f0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    38f4:	c7 40 08 00 04 00 00 	movl   $0x400,0x8(%rax)
    38fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    38ff:	c7 40 0c d0 02 00 00 	movl   $0x2d0,0xc(%rax)
    3906:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    390a:	48 8d 58 18          	lea    0x18(%rax),%rbx
    390e:	48 8d 05 cf dc 00 00 	lea    0xdccf(%rip),%rax        # 115e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    3915:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    3919:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    391d:	49 89 c6             	mov    %rax,%r14
    3920:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3926:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    392a:	48 89 c7             	mov    %rax,%rdi
    392d:	e8 68 01 00 00       	call   3a9a <_ZNSaIPKcEC1Ev>
    3932:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    3936:	4d 89 f0             	mov    %r14,%r8
    3939:	4d 89 f9             	mov    %r15,%r9
    393c:	4c 89 f6             	mov    %r14,%rsi
    393f:	4c 89 ff             	mov    %r15,%rdi
    3942:	48 89 fa             	mov    %rdi,%rdx
    3945:	48 89 c1             	mov    %rax,%rcx
    3948:	4c 89 c6             	mov    %r8,%rsi
    394b:	48 89 df             	mov    %rbx,%rdi
    394e:	e8 7f 01 00 00       	call   3ad2 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    3953:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    3957:	48 89 c7             	mov    %rax,%rdi
    395a:	e8 57 01 00 00       	call   3ab6 <_ZNSaIPKcED1Ev>
    395f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3963:	c6 40 30 01          	movb   $0x1,0x30(%rax)
    3967:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    396b:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    3972:	00 
    3973:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3977:	48 8d 58 68          	lea    0x68(%rax),%rbx
    397b:	48 8d 05 7e dc 00 00 	lea    0xdc7e(%rip),%rax        # 11600 <_ZN6__pstl9execution2v1L5unseqE+0x1d>
    3982:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3986:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    398a:	49 89 c4             	mov    %rax,%r12
    398d:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    3993:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    3997:	48 89 c7             	mov    %rax,%rdi
    399a:	e8 fb 00 00 00       	call   3a9a <_ZNSaIPKcEC1Ev>
    399f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    39a3:	4d 89 e0             	mov    %r12,%r8
    39a6:	4d 89 e9             	mov    %r13,%r9
    39a9:	4c 89 e6             	mov    %r12,%rsi
    39ac:	4c 89 ef             	mov    %r13,%rdi
    39af:	48 89 fa             	mov    %rdi,%rdx
    39b2:	48 89 c1             	mov    %rax,%rcx
    39b5:	4c 89 c6             	mov    %r8,%rsi
    39b8:	48 89 df             	mov    %rbx,%rdi
    39bb:	e8 12 01 00 00       	call   3ad2 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    39c0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    39c4:	48 89 c7             	mov    %rax,%rdi
    39c7:	e8 ea 00 00 00       	call   3ab6 <_ZNSaIPKcED1Ev>
    39cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    39d0:	48 05 88 00 00 00    	add    $0x88,%rax
    39d6:	48 89 c7             	mov    %rax,%rdi
    39d9:	e8 82 fe ff ff       	call   3860 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    39de:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    39e2:	48 05 b0 00 00 00    	add    $0xb0,%rax
    39e8:	48 89 c7             	mov    %rax,%rdi
    39eb:	e8 c4 fe ff ff       	call   38b4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    39f0:	eb 44                	jmp    3a36 <_ZN9rt_vulkan25RenderTriangleApplicationC1Ev+0x166>
    39f2:	48 89 c3             	mov    %rax,%rbx
    39f5:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    39f9:	48 89 c7             	mov    %rax,%rdi
    39fc:	e8 b5 00 00 00       	call   3ab6 <_ZNSaIPKcED1Ev>
    3a01:	48 89 d8             	mov    %rbx,%rax
    3a04:	48 89 c7             	mov    %rax,%rdi
    3a07:	e8 04 fb ff ff       	call   3510 <_Unwind_Resume@plt>
    3a0c:	48 89 c3             	mov    %rax,%rbx
    3a0f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    3a13:	48 89 c7             	mov    %rax,%rdi
    3a16:	e8 9b 00 00 00       	call   3ab6 <_ZNSaIPKcED1Ev>
    3a1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3a1f:	48 83 c0 18          	add    $0x18,%rax
    3a23:	48 89 c7             	mov    %rax,%rdi
    3a26:	e8 2f 01 00 00       	call   3b5a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3a2b:	48 89 d8             	mov    %rbx,%rax
    3a2e:	48 89 c7             	mov    %rax,%rdi
    3a31:	e8 da fa ff ff       	call   3510 <_Unwind_Resume@plt>
    3a36:	48 83 c4 38          	add    $0x38,%rsp
    3a3a:	5b                   	pop    %rbx
    3a3b:	41 5c                	pop    %r12
    3a3d:	41 5d                	pop    %r13
    3a3f:	41 5e                	pop    %r14
    3a41:	41 5f                	pop    %r15
    3a43:	5d                   	pop    %rbp
    3a44:	c3                   	ret
    3a45:	90                   	nop

0000000000003a46 <_ZN9rt_vulkan25RenderTriangleApplicationD1Ev>:
    class RenderTriangleApplication
    3a46:	55                   	push   %rbp
    3a47:	48 89 e5             	mov    %rsp,%rbp
    3a4a:	48 83 ec 10          	sub    $0x10,%rsp
    3a4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a56:	48 05 b0 00 00 00    	add    $0xb0,%rax
    3a5c:	48 89 c7             	mov    %rax,%rdi
    3a5f:	e8 a2 02 00 00       	call   3d06 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    3a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a68:	48 05 88 00 00 00    	add    $0x88,%rax
    3a6e:	48 89 c7             	mov    %rax,%rdi
    3a71:	e8 ba 01 00 00       	call   3c30 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    3a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a7a:	48 83 c0 68          	add    $0x68,%rax
    3a7e:	48 89 c7             	mov    %rax,%rdi
    3a81:	e8 d4 00 00 00       	call   3b5a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a8a:	48 83 c0 18          	add    $0x18,%rax
    3a8e:	48 89 c7             	mov    %rax,%rdi
    3a91:	e8 c4 00 00 00       	call   3b5a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3a96:	90                   	nop
    3a97:	c9                   	leave
    3a98:	c3                   	ret
    3a99:	90                   	nop

0000000000003a9a <_ZNSaIPKcEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    3a9a:	55                   	push   %rbp
    3a9b:	48 89 e5             	mov    %rsp,%rbp
    3a9e:	48 83 ec 10          	sub    $0x10,%rsp
    3aa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aaa:	48 89 c7             	mov    %rax,%rdi
    3aad:	e8 98 02 00 00       	call   3d4a <_ZNSt15__new_allocatorIPKcEC1Ev>
    3ab2:	90                   	nop
    3ab3:	c9                   	leave
    3ab4:	c3                   	ret
    3ab5:	90                   	nop

0000000000003ab6 <_ZNSaIPKcED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    3ab6:	55                   	push   %rbp
    3ab7:	48 89 e5             	mov    %rsp,%rbp
    3aba:	48 83 ec 10          	sub    $0x10,%rsp
    3abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ac6:	48 89 c7             	mov    %rax,%rdi
    3ac9:	e8 88 02 00 00       	call   3d56 <_ZNSt15__new_allocatorIPKcED1Ev>
    3ace:	90                   	nop
    3acf:	c9                   	leave
    3ad0:	c3                   	ret
    3ad1:	90                   	nop

0000000000003ad2 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    3ad2:	55                   	push   %rbp
    3ad3:	48 89 e5             	mov    %rsp,%rbp
    3ad6:	53                   	push   %rbx
    3ad7:	48 83 ec 38          	sub    $0x38,%rsp
    3adb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3adf:	48 89 f0             	mov    %rsi,%rax
    3ae2:	48 89 d6             	mov    %rdx,%rsi
    3ae5:	48 89 f2             	mov    %rsi,%rdx
    3ae8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3aec:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    3af0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    3af4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3af8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3afc:	48 89 d6             	mov    %rdx,%rsi
    3aff:	48 89 c7             	mov    %rax,%rdi
    3b02:	e8 77 02 00 00       	call   3d7e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    3b07:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3b0b:	48 89 c7             	mov    %rax,%rdi
    3b0e:	e8 f1 02 00 00       	call   3e04 <_ZNKSt16initializer_listIPKcE3endEv>
    3b13:	48 89 c3             	mov    %rax,%rbx
    3b16:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3b1a:	48 89 c7             	mov    %rax,%rdi
    3b1d:	e8 d0 02 00 00       	call   3df2 <_ZNKSt16initializer_listIPKcE5beginEv>
    3b22:	48 89 c1             	mov    %rax,%rcx
    3b25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b29:	48 89 da             	mov    %rbx,%rdx
    3b2c:	48 89 ce             	mov    %rcx,%rsi
    3b2f:	48 89 c7             	mov    %rax,%rdi
    3b32:	e8 33 03 00 00       	call   3e6a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    3b37:	eb 1a                	jmp    3b53 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    3b39:	48 89 c3             	mov    %rax,%rbx
    3b3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3b40:	48 89 c7             	mov    %rax,%rdi
    3b43:	e8 5c 02 00 00       	call   3da4 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    3b48:	48 89 d8             	mov    %rbx,%rax
    3b4b:	48 89 c7             	mov    %rax,%rdi
    3b4e:	e8 bd f9 ff ff       	call   3510 <_Unwind_Resume@plt>
    3b53:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3b57:	c9                   	leave
    3b58:	c3                   	ret
    3b59:	90                   	nop

0000000000003b5a <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    3b5a:	55                   	push   %rbp
    3b5b:	48 89 e5             	mov    %rsp,%rbp
    3b5e:	48 83 ec 10          	sub    $0x10,%rsp
    3b62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    3b66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b6a:	48 89 c7             	mov    %rax,%rdi
    3b6d:	e8 a8 03 00 00       	call   3f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3b72:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b79:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b81:	48 8b 00             	mov    (%rax),%rax
    3b84:	48 89 ce             	mov    %rcx,%rsi
    3b87:	48 89 c7             	mov    %rax,%rdi
    3b8a:	e8 99 03 00 00       	call   3f28 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    3b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b93:	48 89 c7             	mov    %rax,%rdi
    3b96:	e8 09 02 00 00       	call   3da4 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    3b9b:	90                   	nop
    3b9c:	c9                   	leave
    3b9d:	c3                   	ret

0000000000003b9e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    3b9e:	55                   	push   %rbp
    3b9f:	48 89 e5             	mov    %rsp,%rbp
    3ba2:	48 83 ec 10          	sub    $0x10,%rsp
    3ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    3baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bae:	48 89 c7             	mov    %rax,%rdi
    3bb1:	e8 9c 03 00 00       	call   3f52 <_ZNSaIP9VkImage_TEC1Ev>
    3bb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bba:	48 89 c7             	mov    %rax,%rdi
    3bbd:	e8 ac 03 00 00       	call   3f6e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3bc2:	90                   	nop
    3bc3:	c9                   	leave
    3bc4:	c3                   	ret
    3bc5:	90                   	nop

0000000000003bc6 <_ZNSaIP9VkImage_TED1Ev>:
    3bc6:	55                   	push   %rbp
    3bc7:	48 89 e5             	mov    %rsp,%rbp
    3bca:	48 83 ec 10          	sub    $0x10,%rsp
    3bce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bd6:	48 89 c7             	mov    %rax,%rdi
    3bd9:	e8 be 03 00 00       	call   3f9c <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    3bde:	90                   	nop
    3bdf:	c9                   	leave
    3be0:	c3                   	ret
    3be1:	90                   	nop

0000000000003be2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3be2:	55                   	push   %rbp
    3be3:	48 89 e5             	mov    %rsp,%rbp
    3be6:	48 83 ec 10          	sub    $0x10,%rsp
    3bea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3bee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bf2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bfa:	48 8b 00             	mov    (%rax),%rax
    3bfd:	48 29 c2             	sub    %rax,%rdx
    3c00:	48 89 d0             	mov    %rdx,%rax
    3c03:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3c07:	48 89 c2             	mov    %rax,%rdx
    3c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c0e:	48 8b 08             	mov    (%rax),%rcx
    3c11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c15:	48 89 ce             	mov    %rcx,%rsi
    3c18:	48 89 c7             	mov    %rax,%rdi
    3c1b:	e8 88 03 00 00       	call   3fa8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    3c20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c24:	48 89 c7             	mov    %rax,%rdi
    3c27:	e8 fc fb ff ff       	call   3828 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    3c2c:	90                   	nop
    3c2d:	c9                   	leave
    3c2e:	c3                   	ret
    3c2f:	90                   	nop

0000000000003c30 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3c30:	55                   	push   %rbp
    3c31:	48 89 e5             	mov    %rsp,%rbp
    3c34:	48 83 ec 10          	sub    $0x10,%rsp
    3c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3c3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c40:	48 89 c7             	mov    %rax,%rdi
    3c43:	e8 96 03 00 00       	call   3fde <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3c48:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3c4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c4f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c57:	48 8b 00             	mov    (%rax),%rax
    3c5a:	48 89 ce             	mov    %rcx,%rsi
    3c5d:	48 89 c7             	mov    %rax,%rdi
    3c60:	e8 87 03 00 00       	call   3fec <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    3c65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c69:	48 89 c7             	mov    %rax,%rdi
    3c6c:	e8 71 ff ff ff       	call   3be2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    3c71:	90                   	nop
    3c72:	c9                   	leave
    3c73:	c3                   	ret

0000000000003c74 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    3c74:	55                   	push   %rbp
    3c75:	48 89 e5             	mov    %rsp,%rbp
    3c78:	48 83 ec 10          	sub    $0x10,%rsp
    3c7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    3c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c84:	48 89 c7             	mov    %rax,%rdi
    3c87:	e8 8a 03 00 00       	call   4016 <_ZNSaIP13VkImageView_TEC1Ev>
    3c8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c90:	48 89 c7             	mov    %rax,%rdi
    3c93:	e8 9a 03 00 00       	call   4032 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3c98:	90                   	nop
    3c99:	c9                   	leave
    3c9a:	c3                   	ret
    3c9b:	90                   	nop

0000000000003c9c <_ZNSaIP13VkImageView_TED1Ev>:
    3c9c:	55                   	push   %rbp
    3c9d:	48 89 e5             	mov    %rsp,%rbp
    3ca0:	48 83 ec 10          	sub    $0x10,%rsp
    3ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cac:	48 89 c7             	mov    %rax,%rdi
    3caf:	e8 ac 03 00 00       	call   4060 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
    3cb4:	90                   	nop
    3cb5:	c9                   	leave
    3cb6:	c3                   	ret
    3cb7:	90                   	nop

0000000000003cb8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3cb8:	55                   	push   %rbp
    3cb9:	48 89 e5             	mov    %rsp,%rbp
    3cbc:	48 83 ec 10          	sub    $0x10,%rsp
    3cc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3cc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cc8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cd0:	48 8b 00             	mov    (%rax),%rax
    3cd3:	48 29 c2             	sub    %rax,%rdx
    3cd6:	48 89 d0             	mov    %rdx,%rax
    3cd9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3cdd:	48 89 c2             	mov    %rax,%rdx
    3ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ce4:	48 8b 08             	mov    (%rax),%rcx
    3ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ceb:	48 89 ce             	mov    %rcx,%rsi
    3cee:	48 89 c7             	mov    %rax,%rdi
    3cf1:	e8 76 03 00 00       	call   406c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    3cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cfa:	48 89 c7             	mov    %rax,%rdi
    3cfd:	e8 7a fb ff ff       	call   387c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
    3d02:	90                   	nop
    3d03:	c9                   	leave
    3d04:	c3                   	ret
    3d05:	90                   	nop

0000000000003d06 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3d06:	55                   	push   %rbp
    3d07:	48 89 e5             	mov    %rsp,%rbp
    3d0a:	48 83 ec 10          	sub    $0x10,%rsp
    3d0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3d12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d16:	48 89 c7             	mov    %rax,%rdi
    3d19:	e8 84 03 00 00       	call   40a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3d1e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3d21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d25:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d2d:	48 8b 00             	mov    (%rax),%rax
    3d30:	48 89 ce             	mov    %rcx,%rsi
    3d33:	48 89 c7             	mov    %rax,%rdi
    3d36:	e8 75 03 00 00       	call   40b0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
    3d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d3f:	48 89 c7             	mov    %rax,%rdi
    3d42:	e8 71 ff ff ff       	call   3cb8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
    3d47:	90                   	nop
    3d48:	c9                   	leave
    3d49:	c3                   	ret

0000000000003d4a <_ZNSt15__new_allocatorIPKcEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3d4a:	55                   	push   %rbp
    3d4b:	48 89 e5             	mov    %rsp,%rbp
    3d4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d52:	90                   	nop
    3d53:	5d                   	pop    %rbp
    3d54:	c3                   	ret
    3d55:	90                   	nop

0000000000003d56 <_ZNSt15__new_allocatorIPKcED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3d56:	55                   	push   %rbp
    3d57:	48 89 e5             	mov    %rsp,%rbp
    3d5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d5e:	90                   	nop
    3d5f:	5d                   	pop    %rbp
    3d60:	c3                   	ret
    3d61:	90                   	nop

0000000000003d62 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    3d62:	55                   	push   %rbp
    3d63:	48 89 e5             	mov    %rsp,%rbp
    3d66:	48 83 ec 10          	sub    $0x10,%rsp
    3d6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d72:	48 89 c7             	mov    %rax,%rdi
    3d75:	e8 3c fd ff ff       	call   3ab6 <_ZNSaIPKcED1Ev>
    3d7a:	90                   	nop
    3d7b:	c9                   	leave
    3d7c:	c3                   	ret
    3d7d:	90                   	nop

0000000000003d7e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    3d7e:	55                   	push   %rbp
    3d7f:	48 89 e5             	mov    %rsp,%rbp
    3d82:	48 83 ec 10          	sub    $0x10,%rsp
    3d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    3d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3d96:	48 89 d6             	mov    %rdx,%rsi
    3d99:	48 89 c7             	mov    %rax,%rdi
    3d9c:	e8 39 03 00 00       	call   40da <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    3da1:	90                   	nop
    3da2:	c9                   	leave
    3da3:	c3                   	ret

0000000000003da4 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3da4:	55                   	push   %rbp
    3da5:	48 89 e5             	mov    %rsp,%rbp
    3da8:	48 83 ec 10          	sub    $0x10,%rsp
    3dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3db4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dbc:	48 8b 00             	mov    (%rax),%rax
    3dbf:	48 29 c2             	sub    %rax,%rdx
    3dc2:	48 89 d0             	mov    %rdx,%rax
    3dc5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3dc9:	48 89 c2             	mov    %rax,%rdx
    3dcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dd0:	48 8b 08             	mov    (%rax),%rcx
    3dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dd7:	48 89 ce             	mov    %rcx,%rsi
    3dda:	48 89 c7             	mov    %rax,%rdi
    3ddd:	e8 2a 03 00 00       	call   410c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    3de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3de6:	48 89 c7             	mov    %rax,%rdi
    3de9:	e8 74 ff ff ff       	call   3d62 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    3dee:	90                   	nop
    3def:	c9                   	leave
    3df0:	c3                   	ret
    3df1:	90                   	nop

0000000000003df2 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    3df2:	55                   	push   %rbp
    3df3:	48 89 e5             	mov    %rsp,%rbp
    3df6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dfe:	48 8b 00             	mov    (%rax),%rax
    3e01:	5d                   	pop    %rbp
    3e02:	c3                   	ret
    3e03:	90                   	nop

0000000000003e04 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    3e04:	55                   	push   %rbp
    3e05:	48 89 e5             	mov    %rsp,%rbp
    3e08:	53                   	push   %rbx
    3e09:	48 83 ec 18          	sub    $0x18,%rsp
    3e0d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3e11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e15:	48 89 c7             	mov    %rax,%rdi
    3e18:	e8 d5 ff ff ff       	call   3df2 <_ZNKSt16initializer_listIPKcE5beginEv>
    3e1d:	48 89 c3             	mov    %rax,%rbx
    3e20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e24:	48 89 c7             	mov    %rax,%rdi
    3e27:	e8 16 03 00 00       	call   4142 <_ZNKSt16initializer_listIPKcE4sizeEv>
    3e2c:	48 c1 e0 03          	shl    $0x3,%rax
    3e30:	48 01 d8             	add    %rbx,%rax
    3e33:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3e37:	c9                   	leave
    3e38:	c3                   	ret

0000000000003e39 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    3e39:	55                   	push   %rbp
    3e3a:	48 89 e5             	mov    %rsp,%rbp
    3e3d:	48 83 ec 10          	sub    $0x10,%rsp
    3e41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    3e49:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3e4d:	48 89 c7             	mov    %rax,%rdi
    3e50:	e8 ff 02 00 00       	call   4154 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    3e55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e59:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e5d:	48 89 d6             	mov    %rdx,%rsi
    3e60:	48 89 c7             	mov    %rax,%rdi
    3e63:	e8 f7 02 00 00       	call   415f <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    3e68:	c9                   	leave
    3e69:	c3                   	ret

0000000000003e6a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    3e6a:	55                   	push   %rbp
    3e6b:	48 89 e5             	mov    %rsp,%rbp
    3e6e:	53                   	push   %rbx
    3e6f:	48 83 ec 38          	sub    $0x38,%rsp
    3e73:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3e77:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3e7b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    3e7f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    3e83:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3e87:	48 89 d6             	mov    %rdx,%rsi
    3e8a:	48 89 c7             	mov    %rax,%rdi
    3e8d:	e8 a7 ff ff ff       	call   3e39 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    3e92:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    3e96:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    3e9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e9e:	48 89 c7             	mov    %rax,%rdi
    3ea1:	e8 74 00 00 00       	call   3f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3ea6:	48 89 c2             	mov    %rax,%rdx
    3ea9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ead:	48 89 d6             	mov    %rdx,%rsi
    3eb0:	48 89 c7             	mov    %rax,%rdi
    3eb3:	e8 c1 02 00 00       	call   4179 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    3eb8:	48 89 c6             	mov    %rax,%rsi
    3ebb:	48 89 df             	mov    %rbx,%rdi
    3ebe:	e8 17 03 00 00       	call   41da <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    3ec3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3ec7:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    3eca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ece:	48 8b 00             	mov    (%rax),%rax
    3ed1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ed5:	48 c1 e2 03          	shl    $0x3,%rdx
    3ed9:	48 01 c2             	add    %rax,%rdx
    3edc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ee0:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    3ee4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ee8:	48 89 c7             	mov    %rax,%rdi
    3eeb:	e8 2a 00 00 00       	call   3f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3ef0:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    3ef3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3ef7:	48 8b 10             	mov    (%rax),%rdx
    3efa:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    3efe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3f02:	48 89 c7             	mov    %rax,%rdi
    3f05:	e8 03 03 00 00       	call   420d <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    3f0a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3f0e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    3f12:	90                   	nop
    3f13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3f17:	c9                   	leave
    3f18:	c3                   	ret
    3f19:	90                   	nop

0000000000003f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3f1a:	55                   	push   %rbp
    3f1b:	48 89 e5             	mov    %rsp,%rbp
    3f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f26:	5d                   	pop    %rbp
    3f27:	c3                   	ret

0000000000003f28 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3f28:	55                   	push   %rbp
    3f29:	48 89 e5             	mov    %rsp,%rbp
    3f2c:	48 83 ec 20          	sub    $0x20,%rsp
    3f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3f38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    3f3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f44:	48 89 d6             	mov    %rdx,%rsi
    3f47:	48 89 c7             	mov    %rax,%rdi
    3f4a:	e8 ef 02 00 00       	call   423e <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    3f4f:	90                   	nop
    3f50:	c9                   	leave
    3f51:	c3                   	ret

0000000000003f52 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3f52:	55                   	push   %rbp
    3f53:	48 89 e5             	mov    %rsp,%rbp
    3f56:	48 83 ec 10          	sub    $0x10,%rsp
    3f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f62:	48 89 c7             	mov    %rax,%rdi
    3f65:	e8 fa 02 00 00       	call   4264 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    3f6a:	90                   	nop
    3f6b:	c9                   	leave
    3f6c:	c3                   	ret
    3f6d:	90                   	nop

0000000000003f6e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    3f6e:	55                   	push   %rbp
    3f6f:	48 89 e5             	mov    %rsp,%rbp
    3f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    3f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f7a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3f81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f85:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3f8c:	00 
    3f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f91:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3f98:	00 
	{ }
    3f99:	90                   	nop
    3f9a:	5d                   	pop    %rbp
    3f9b:	c3                   	ret

0000000000003f9c <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
    3f9c:	55                   	push   %rbp
    3f9d:	48 89 e5             	mov    %rsp,%rbp
    3fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fa4:	90                   	nop
    3fa5:	5d                   	pop    %rbp
    3fa6:	c3                   	ret
    3fa7:	90                   	nop

0000000000003fa8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    3fa8:	55                   	push   %rbp
    3fa9:	48 89 e5             	mov    %rsp,%rbp
    3fac:	48 83 ec 20          	sub    $0x20,%rsp
    3fb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3fb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3fbc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3fc1:	74 17                	je     3fda <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fc7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3fcb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3fcf:	48 89 ce             	mov    %rcx,%rsi
    3fd2:	48 89 c7             	mov    %rax,%rdi
    3fd5:	e8 95 02 00 00       	call   426f <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    3fda:	90                   	nop
    3fdb:	c9                   	leave
    3fdc:	c3                   	ret
    3fdd:	90                   	nop

0000000000003fde <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3fde:	55                   	push   %rbp
    3fdf:	48 89 e5             	mov    %rsp,%rbp
    3fe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fea:	5d                   	pop    %rbp
    3feb:	c3                   	ret

0000000000003fec <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    3fec:	55                   	push   %rbp
    3fed:	48 89 e5             	mov    %rsp,%rbp
    3ff0:	48 83 ec 20          	sub    $0x20,%rsp
    3ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ff8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3ffc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    4000:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4008:	48 89 d6             	mov    %rdx,%rsi
    400b:	48 89 c7             	mov    %rax,%rdi
    400e:	e8 8a 02 00 00       	call   429d <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    4013:	90                   	nop
    4014:	c9                   	leave
    4015:	c3                   	ret

0000000000004016 <_ZNSaIP13VkImageView_TEC1Ev>:
    4016:	55                   	push   %rbp
    4017:	48 89 e5             	mov    %rsp,%rbp
    401a:	48 83 ec 10          	sub    $0x10,%rsp
    401e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4026:	48 89 c7             	mov    %rax,%rdi
    4029:	e8 96 02 00 00       	call   42c4 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
    402e:	90                   	nop
    402f:	c9                   	leave
    4030:	c3                   	ret
    4031:	90                   	nop

0000000000004032 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4032:	55                   	push   %rbp
    4033:	48 89 e5             	mov    %rsp,%rbp
    4036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    403a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    403e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4049:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4050:	00 
    4051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4055:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    405c:	00 
	{ }
    405d:	90                   	nop
    405e:	5d                   	pop    %rbp
    405f:	c3                   	ret

0000000000004060 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
    4060:	55                   	push   %rbp
    4061:	48 89 e5             	mov    %rsp,%rbp
    4064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4068:	90                   	nop
    4069:	5d                   	pop    %rbp
    406a:	c3                   	ret
    406b:	90                   	nop

000000000000406c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    406c:	55                   	push   %rbp
    406d:	48 89 e5             	mov    %rsp,%rbp
    4070:	48 83 ec 20          	sub    $0x20,%rsp
    4074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4078:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    407c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    4080:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4085:	74 17                	je     409e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    4087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    408b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    408f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4093:	48 89 ce             	mov    %rcx,%rsi
    4096:	48 89 c7             	mov    %rax,%rdi
    4099:	e8 31 02 00 00       	call   42cf <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
    409e:	90                   	nop
    409f:	c9                   	leave
    40a0:	c3                   	ret
    40a1:	90                   	nop

00000000000040a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    40a2:	55                   	push   %rbp
    40a3:	48 89 e5             	mov    %rsp,%rbp
    40a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    40aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40ae:	5d                   	pop    %rbp
    40af:	c3                   	ret

00000000000040b0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    40b0:	55                   	push   %rbp
    40b1:	48 89 e5             	mov    %rsp,%rbp
    40b4:	48 83 ec 20          	sub    $0x20,%rsp
    40b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    40c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    40c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40cc:	48 89 d6             	mov    %rdx,%rsi
    40cf:	48 89 c7             	mov    %rax,%rdi
    40d2:	e8 26 02 00 00       	call   42fd <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
    40d7:	90                   	nop
    40d8:	c9                   	leave
    40d9:	c3                   	ret

00000000000040da <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    40da:	55                   	push   %rbp
    40db:	48 89 e5             	mov    %rsp,%rbp
    40de:	48 83 ec 10          	sub    $0x10,%rsp
    40e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    40e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    40ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40f2:	48 89 d6             	mov    %rdx,%rsi
    40f5:	48 89 c7             	mov    %rax,%rdi
    40f8:	e8 27 02 00 00       	call   4324 <_ZNSaIPKcEC1ERKS1_>
    40fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4101:	48 89 c7             	mov    %rax,%rdi
    4104:	e8 41 02 00 00       	call   434a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    4109:	90                   	nop
    410a:	c9                   	leave
    410b:	c3                   	ret

000000000000410c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    410c:	55                   	push   %rbp
    410d:	48 89 e5             	mov    %rsp,%rbp
    4110:	48 83 ec 20          	sub    $0x20,%rsp
    4114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4118:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    411c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    4120:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4125:	74 17                	je     413e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    4127:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    412b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    412f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4133:	48 89 ce             	mov    %rcx,%rsi
    4136:	48 89 c7             	mov    %rax,%rdi
    4139:	e8 3a 02 00 00       	call   4378 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    413e:	90                   	nop
    413f:	c9                   	leave
    4140:	c3                   	ret
    4141:	90                   	nop

0000000000004142 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    4142:	55                   	push   %rbp
    4143:	48 89 e5             	mov    %rsp,%rbp
    4146:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    414a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    414e:	48 8b 40 08          	mov    0x8(%rax),%rax
    4152:	5d                   	pop    %rbp
    4153:	c3                   	ret

0000000000004154 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4154:	55                   	push   %rbp
    4155:	48 89 e5             	mov    %rsp,%rbp
    4158:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    415c:	90                   	nop
    415d:	5d                   	pop    %rbp
    415e:	c3                   	ret

000000000000415f <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    415f:	55                   	push   %rbp
    4160:	48 89 e5             	mov    %rsp,%rbp
    4163:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4167:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    416b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    416f:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    4173:	48 c1 f8 03          	sar    $0x3,%rax
    }
    4177:	5d                   	pop    %rbp
    4178:	c3                   	ret

0000000000004179 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4179:	55                   	push   %rbp
    417a:	48 89 e5             	mov    %rsp,%rbp
    417d:	53                   	push   %rbx
    417e:	48 83 ec 28          	sub    $0x28,%rsp
    4182:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4186:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    418a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    418e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4192:	48 89 d6             	mov    %rdx,%rsi
    4195:	48 89 c7             	mov    %rax,%rdi
    4198:	e8 87 01 00 00       	call   4324 <_ZNSaIPKcEC1ERKS1_>
    419d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    41a1:	48 89 c7             	mov    %rax,%rdi
    41a4:	e8 fd 01 00 00       	call   43a6 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    41a9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    41ad:	0f 92 c3             	setb   %bl
    41b0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    41b4:	48 89 c7             	mov    %rax,%rdi
    41b7:	e8 fa f8 ff ff       	call   3ab6 <_ZNSaIPKcED1Ev>
    41bc:	84 db                	test   %bl,%bl
    41be:	74 0f                	je     41cf <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    41c0:	48 8d 05 61 d4 00 00 	lea    0xd461(%rip),%rax        # 11628 <_ZN6__pstl9execution2v1L5unseqE+0x45>
    41c7:	48 89 c7             	mov    %rax,%rdi
    41ca:	e8 21 ef ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    41cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    41d3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    41d7:	c9                   	leave
    41d8:	c3                   	ret
    41d9:	90                   	nop

00000000000041da <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    41da:	55                   	push   %rbp
    41db:	48 89 e5             	mov    %rsp,%rbp
    41de:	48 83 ec 10          	sub    $0x10,%rsp
    41e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    41ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    41ef:	74 15                	je     4206 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    41f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    41f9:	48 89 d6             	mov    %rdx,%rsi
    41fc:	48 89 c7             	mov    %rax,%rdi
    41ff:	e8 e4 01 00 00       	call   43e8 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    4204:	eb 05                	jmp    420b <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    4206:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    420b:	c9                   	leave
    420c:	c3                   	ret

000000000000420d <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    420d:	55                   	push   %rbp
    420e:	48 89 e5             	mov    %rsp,%rbp
    4211:	48 83 ec 20          	sub    $0x20,%rsp
    4215:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4219:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    421d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    4221:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    4225:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4229:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    422d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4231:	48 89 ce             	mov    %rcx,%rsi
    4234:	48 89 c7             	mov    %rax,%rdi
    4237:	e8 d6 01 00 00       	call   4412 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    423c:	c9                   	leave
    423d:	c3                   	ret

000000000000423e <_ZSt8_DestroyIPPKcEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    423e:	55                   	push   %rbp
    423f:	48 89 e5             	mov    %rsp,%rbp
    4242:	48 83 ec 10          	sub    $0x10,%rsp
    4246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    424a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    424e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4256:	48 89 d6             	mov    %rdx,%rsi
    4259:	48 89 c7             	mov    %rax,%rdi
    425c:	e8 e6 01 00 00       	call   4447 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    4261:	90                   	nop
    4262:	c9                   	leave
    4263:	c3                   	ret

0000000000004264 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4264:	55                   	push   %rbp
    4265:	48 89 e5             	mov    %rsp,%rbp
    4268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    426c:	90                   	nop
    426d:	5d                   	pop    %rbp
    426e:	c3                   	ret

000000000000426f <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    426f:	55                   	push   %rbp
    4270:	48 89 e5             	mov    %rsp,%rbp
    4273:	48 83 ec 20          	sub    $0x20,%rsp
    4277:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    427b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    427f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4283:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4287:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    428b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    428f:	48 89 ce             	mov    %rcx,%rsi
    4292:	48 89 c7             	mov    %rax,%rdi
    4295:	e8 bc 01 00 00       	call   4456 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    429a:	90                   	nop
    429b:	c9                   	leave
    429c:	c3                   	ret

000000000000429d <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    429d:	55                   	push   %rbp
    429e:	48 89 e5             	mov    %rsp,%rbp
    42a1:	48 83 ec 10          	sub    $0x10,%rsp
    42a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    42ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    42b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42b5:	48 89 d6             	mov    %rdx,%rsi
    42b8:	48 89 c7             	mov    %rax,%rdi
    42bb:	e8 c7 01 00 00       	call   4487 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    42c0:	90                   	nop
    42c1:	c9                   	leave
    42c2:	c3                   	ret
    42c3:	90                   	nop

00000000000042c4 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
    42c4:	55                   	push   %rbp
    42c5:	48 89 e5             	mov    %rsp,%rbp
    42c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42cc:	90                   	nop
    42cd:	5d                   	pop    %rbp
    42ce:	c3                   	ret

00000000000042cf <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    42cf:	55                   	push   %rbp
    42d0:	48 89 e5             	mov    %rsp,%rbp
    42d3:	48 83 ec 20          	sub    $0x20,%rsp
    42d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    42e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    42eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42ef:	48 89 ce             	mov    %rcx,%rsi
    42f2:	48 89 c7             	mov    %rax,%rdi
    42f5:	e8 9c 01 00 00       	call   4496 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
    42fa:	90                   	nop
    42fb:	c9                   	leave
    42fc:	c3                   	ret

00000000000042fd <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    42fd:	55                   	push   %rbp
    42fe:	48 89 e5             	mov    %rsp,%rbp
    4301:	48 83 ec 10          	sub    $0x10,%rsp
    4305:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4309:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    430d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4311:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4315:	48 89 d6             	mov    %rdx,%rsi
    4318:	48 89 c7             	mov    %rax,%rdi
    431b:	e8 a7 01 00 00       	call   44c7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
    4320:	90                   	nop
    4321:	c9                   	leave
    4322:	c3                   	ret
    4323:	90                   	nop

0000000000004324 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    4324:	55                   	push   %rbp
    4325:	48 89 e5             	mov    %rsp,%rbp
    4328:	48 83 ec 10          	sub    $0x10,%rsp
    432c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4330:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    4334:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4338:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    433c:	48 89 d6             	mov    %rdx,%rsi
    433f:	48 89 c7             	mov    %rax,%rdi
    4342:	e8 8f 01 00 00       	call   44d6 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    4347:	90                   	nop
    4348:	c9                   	leave
    4349:	c3                   	ret

000000000000434a <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    434a:	55                   	push   %rbp
    434b:	48 89 e5             	mov    %rsp,%rbp
    434e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4356:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    435d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4361:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4368:	00 
    4369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    436d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4374:	00 
	{ }
    4375:	90                   	nop
    4376:	5d                   	pop    %rbp
    4377:	c3                   	ret

0000000000004378 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4378:	55                   	push   %rbp
    4379:	48 89 e5             	mov    %rsp,%rbp
    437c:	48 83 ec 20          	sub    $0x20,%rsp
    4380:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4384:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4388:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    438c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4390:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4398:	48 89 ce             	mov    %rcx,%rsi
    439b:	48 89 c7             	mov    %rax,%rdi
    439e:	e8 43 01 00 00       	call   44e6 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    43a3:	90                   	nop
    43a4:	c9                   	leave
    43a5:	c3                   	ret

00000000000043a6 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    43a6:	55                   	push   %rbp
    43a7:	48 89 e5             	mov    %rsp,%rbp
    43aa:	48 83 ec 20          	sub    $0x20,%rsp
    43ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    43b2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    43b9:	ff ff 0f 
    43bc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    43c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    43c4:	48 89 c7             	mov    %rax,%rdi
    43c7:	e8 4b 01 00 00       	call   4517 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    43cc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    43d0:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    43d4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    43d8:	48 89 d6             	mov    %rdx,%rsi
    43db:	48 89 c7             	mov    %rax,%rdi
    43de:	e8 4e 01 00 00       	call   4531 <_ZSt3minImERKT_S2_S2_>
    43e3:	48 8b 00             	mov    (%rax),%rax
      }
    43e6:	c9                   	leave
    43e7:	c3                   	ret

00000000000043e8 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    43e8:	55                   	push   %rbp
    43e9:	48 89 e5             	mov    %rsp,%rbp
    43ec:	48 83 ec 10          	sub    $0x10,%rsp
    43f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    43f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    43fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4400:	ba 00 00 00 00       	mov    $0x0,%edx
    4405:	48 89 ce             	mov    %rcx,%rsi
    4408:	48 89 c7             	mov    %rax,%rdi
    440b:	e8 4c 01 00 00       	call   455c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    4410:	c9                   	leave
    4411:	c3                   	ret

0000000000004412 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    4412:	55                   	push   %rbp
    4413:	48 89 e5             	mov    %rsp,%rbp
    4416:	48 83 ec 30          	sub    $0x30,%rsp
    441a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    441e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4422:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    4426:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    442a:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    442e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4432:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4436:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    443a:	48 89 ce             	mov    %rcx,%rsi
    443d:	48 89 c7             	mov    %rax,%rdi
    4440:	e8 78 01 00 00       	call   45bd <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    4445:	c9                   	leave
    4446:	c3                   	ret

0000000000004447 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    4447:	55                   	push   %rbp
    4448:	48 89 e5             	mov    %rsp,%rbp
    444b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    444f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4453:	90                   	nop
    4454:	5d                   	pop    %rbp
    4455:	c3                   	ret

0000000000004456 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4456:	55                   	push   %rbp
    4457:	48 89 e5             	mov    %rsp,%rbp
    445a:	48 83 ec 20          	sub    $0x20,%rsp
    445e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4462:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4466:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    446a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    446e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4475:	00 
    4476:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    447a:	48 89 d6             	mov    %rdx,%rsi
    447d:	48 89 c7             	mov    %rax,%rdi
    4480:	e8 0b ee ff ff       	call   3290 <_ZdlPvm@plt>
      }
    4485:	c9                   	leave
    4486:	c3                   	ret

0000000000004487 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    4487:	55                   	push   %rbp
    4488:	48 89 e5             	mov    %rsp,%rbp
    448b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    448f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4493:	90                   	nop
    4494:	5d                   	pop    %rbp
    4495:	c3                   	ret

0000000000004496 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4496:	55                   	push   %rbp
    4497:	48 89 e5             	mov    %rsp,%rbp
    449a:	48 83 ec 20          	sub    $0x20,%rsp
    449e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    44aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44ae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    44b5:	00 
    44b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    44ba:	48 89 d6             	mov    %rdx,%rsi
    44bd:	48 89 c7             	mov    %rax,%rdi
    44c0:	e8 cb ed ff ff       	call   3290 <_ZdlPvm@plt>
      }
    44c5:	c9                   	leave
    44c6:	c3                   	ret

00000000000044c7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
    44c7:	55                   	push   %rbp
    44c8:	48 89 e5             	mov    %rsp,%rbp
    44cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44d3:	90                   	nop
    44d4:	5d                   	pop    %rbp
    44d5:	c3                   	ret

00000000000044d6 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    44d6:	55                   	push   %rbp
    44d7:	48 89 e5             	mov    %rsp,%rbp
    44da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44e2:	90                   	nop
    44e3:	5d                   	pop    %rbp
    44e4:	c3                   	ret
    44e5:	90                   	nop

00000000000044e6 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    44e6:	55                   	push   %rbp
    44e7:	48 89 e5             	mov    %rsp,%rbp
    44ea:	48 83 ec 20          	sub    $0x20,%rsp
    44ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    44fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44fe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4505:	00 
    4506:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    450a:	48 89 d6             	mov    %rdx,%rsi
    450d:	48 89 c7             	mov    %rax,%rdi
    4510:	e8 7b ed ff ff       	call   3290 <_ZdlPvm@plt>
      }
    4515:	c9                   	leave
    4516:	c3                   	ret

0000000000004517 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4517:	55                   	push   %rbp
    4518:	48 89 e5             	mov    %rsp,%rbp
    451b:	48 83 ec 10          	sub    $0x10,%rsp
    451f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4527:	48 89 c7             	mov    %rax,%rdi
    452a:	e8 bb 00 00 00       	call   45ea <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    452f:	c9                   	leave
    4530:	c3                   	ret

0000000000004531 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    4531:	55                   	push   %rbp
    4532:	48 89 e5             	mov    %rsp,%rbp
    4535:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4539:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    453d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4541:	48 8b 10             	mov    (%rax),%rdx
    4544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4548:	48 8b 00             	mov    (%rax),%rax
    454b:	48 39 c2             	cmp    %rax,%rdx
    454e:	73 06                	jae    4556 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    4550:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4554:	eb 04                	jmp    455a <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    4556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    455a:	5d                   	pop    %rbp
    455b:	c3                   	ret

000000000000455c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    455c:	55                   	push   %rbp
    455d:	48 89 e5             	mov    %rsp,%rbp
    4560:	48 83 ec 20          	sub    $0x20,%rsp
    4564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4568:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    456c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    4570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4574:	48 89 c7             	mov    %rax,%rdi
    4577:	e8 88 00 00 00       	call   4604 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    457c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4580:	0f 92 c0             	setb   %al
    4583:	0f b6 c0             	movzbl %al,%eax
    4586:	48 85 c0             	test   %rax,%rax
    4589:	0f 95 c0             	setne  %al
    458c:	84 c0                	test   %al,%al
    458e:	74 1a                	je     45aa <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4590:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    4597:	ff ff 1f 
    459a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    459e:	73 05                	jae    45a5 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    45a0:	e8 1b ec ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    45a5:	e8 f6 ea ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    45aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    45ae:	48 c1 e0 03          	shl    $0x3,%rax
    45b2:	48 89 c7             	mov    %rax,%rdi
    45b5:	e8 c6 ec ff ff       	call   3280 <_Znwm@plt>
    45ba:	90                   	nop
      }
    45bb:	c9                   	leave
    45bc:	c3                   	ret

00000000000045bd <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    45bd:	55                   	push   %rbp
    45be:	48 89 e5             	mov    %rsp,%rbp
    45c1:	48 83 ec 20          	sub    $0x20,%rsp
    45c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45cd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    45d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    45d5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    45d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45dd:	48 89 ce             	mov    %rcx,%rsi
    45e0:	48 89 c7             	mov    %rax,%rdi
    45e3:	e8 30 00 00 00       	call   4618 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    45e8:	c9                   	leave
    45e9:	c3                   	ret

00000000000045ea <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    45ea:	55                   	push   %rbp
    45eb:	48 89 e5             	mov    %rsp,%rbp
    45ee:	48 83 ec 10          	sub    $0x10,%rsp
    45f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    45f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45fa:	48 89 c7             	mov    %rax,%rdi
    45fd:	e8 02 00 00 00       	call   4604 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    4602:	c9                   	leave
    4603:	c3                   	ret

0000000000004604 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    4604:	55                   	push   %rbp
    4605:	48 89 e5             	mov    %rsp,%rbp
    4608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    460c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    4613:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    4616:	5d                   	pop    %rbp
    4617:	c3                   	ret

0000000000004618 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    4618:	55                   	push   %rbp
    4619:	48 89 e5             	mov    %rsp,%rbp
    461c:	53                   	push   %rbx
    461d:	48 83 ec 28          	sub    $0x28,%rsp
    4621:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4625:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4629:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    462d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4631:	48 89 c7             	mov    %rax,%rdi
    4634:	e8 2a 00 00 00       	call   4663 <_ZSt12__miter_baseIPKPKcET_S4_>
    4639:	48 89 c3             	mov    %rax,%rbx
    463c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4640:	48 89 c7             	mov    %rax,%rdi
    4643:	e8 1b 00 00 00       	call   4663 <_ZSt12__miter_baseIPKPKcET_S4_>
    4648:	48 89 c1             	mov    %rax,%rcx
    464b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    464f:	48 89 c2             	mov    %rax,%rdx
    4652:	48 89 de             	mov    %rbx,%rsi
    4655:	48 89 cf             	mov    %rcx,%rdi
    4658:	e8 14 00 00 00       	call   4671 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    465d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4661:	c9                   	leave
    4662:	c3                   	ret

0000000000004663 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    4663:	55                   	push   %rbp
    4664:	48 89 e5             	mov    %rsp,%rbp
    4667:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    466b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    466f:	5d                   	pop    %rbp
    4670:	c3                   	ret

0000000000004671 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    4671:	55                   	push   %rbp
    4672:	48 89 e5             	mov    %rsp,%rbp
    4675:	41 54                	push   %r12
    4677:	53                   	push   %rbx
    4678:	48 83 ec 20          	sub    $0x20,%rsp
    467c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4680:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4684:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    4688:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    468c:	48 89 c7             	mov    %rax,%rdi
    468f:	e8 55 00 00 00       	call   46e9 <_ZSt12__niter_baseIPPKcET_S3_>
    4694:	49 89 c4             	mov    %rax,%r12
    4697:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    469b:	48 89 c7             	mov    %rax,%rdi
    469e:	e8 38 00 00 00       	call   46db <_ZSt12__niter_baseIPKPKcET_S4_>
    46a3:	48 89 c3             	mov    %rax,%rbx
    46a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    46aa:	48 89 c7             	mov    %rax,%rdi
    46ad:	e8 29 00 00 00       	call   46db <_ZSt12__niter_baseIPKPKcET_S4_>
    46b2:	4c 89 e2             	mov    %r12,%rdx
    46b5:	48 89 de             	mov    %rbx,%rsi
    46b8:	48 89 c7             	mov    %rax,%rdi
    46bb:	e8 37 00 00 00       	call   46f7 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    46c0:	48 89 c2             	mov    %rax,%rdx
    46c3:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    46c7:	48 89 d6             	mov    %rdx,%rsi
    46ca:	48 89 c7             	mov    %rax,%rdi
    46cd:	e8 52 00 00 00       	call   4724 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    46d2:	48 83 c4 20          	add    $0x20,%rsp
    46d6:	5b                   	pop    %rbx
    46d7:	41 5c                	pop    %r12
    46d9:	5d                   	pop    %rbp
    46da:	c3                   	ret

00000000000046db <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    46db:	55                   	push   %rbp
    46dc:	48 89 e5             	mov    %rsp,%rbp
    46df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    46e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46e7:	5d                   	pop    %rbp
    46e8:	c3                   	ret

00000000000046e9 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    46e9:	55                   	push   %rbp
    46ea:	48 89 e5             	mov    %rsp,%rbp
    46ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    46f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46f5:	5d                   	pop    %rbp
    46f6:	c3                   	ret

00000000000046f7 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    46f7:	55                   	push   %rbp
    46f8:	48 89 e5             	mov    %rsp,%rbp
    46fb:	48 83 ec 20          	sub    $0x20,%rsp
    46ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4703:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4707:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    470b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    470f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4717:	48 89 ce             	mov    %rcx,%rsi
    471a:	48 89 c7             	mov    %rax,%rdi
    471d:	e8 14 00 00 00       	call   4736 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    4722:	c9                   	leave
    4723:	c3                   	ret

0000000000004724 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    4724:	55                   	push   %rbp
    4725:	48 89 e5             	mov    %rsp,%rbp
    4728:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    472c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    4730:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4734:	5d                   	pop    %rbp
    4735:	c3                   	ret

0000000000004736 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    4736:	55                   	push   %rbp
    4737:	48 89 e5             	mov    %rsp,%rbp
    473a:	48 83 ec 20          	sub    $0x20,%rsp
    473e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4742:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4746:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    474a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    474e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4756:	48 89 ce             	mov    %rcx,%rsi
    4759:	48 89 c7             	mov    %rax,%rdi
    475c:	e8 02 00 00 00       	call   4763 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    4761:	c9                   	leave
    4762:	c3                   	ret

0000000000004763 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    4763:	55                   	push   %rbp
    4764:	48 89 e5             	mov    %rsp,%rbp
    4767:	48 83 ec 30          	sub    $0x30,%rsp
    476b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    476f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4773:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    4777:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    477b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    477f:	48 c1 f8 03          	sar    $0x3,%rax
    4783:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    4787:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    478c:	74 1f                	je     47ad <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    478e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4792:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4799:	00 
    479a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    479e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47a2:	48 89 ce             	mov    %rcx,%rsi
    47a5:	48 89 c7             	mov    %rax,%rdi
    47a8:	e8 13 ed ff ff       	call   34c0 <memmove@plt>
	  return __result + _Num;
    47ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47b1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    47b8:	00 
    47b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    47bd:	48 01 d0             	add    %rdx,%rax
	}
    47c0:	c9                   	leave
    47c1:	c3                   	ret

00000000000047c2 <_ZN9rt_vulkan28CreateDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
VkResult rt_vulkan::CreateDebugUtilsMessengerEXT(
    VkInstance instance,
    const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger)
{
    47c2:	55                   	push   %rbp
    47c3:	48 89 e5             	mov    %rsp,%rbp
    47c6:	48 83 ec 30          	sub    $0x30,%rsp
    47ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    47ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    47d2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    47d6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    auto func = (PFN_vkCreateDebugUtilsMessengerEXT)
        vkGetInstanceProcAddr(instance, "vkCreateDebugUtilsMessengerEXT");
    47da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    47de:	48 8d 15 53 d4 00 00 	lea    0xd453(%rip),%rdx        # 11c38 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    47e5:	48 89 d6             	mov    %rdx,%rsi
    47e8:	48 89 c7             	mov    %rax,%rdi
    47eb:	e8 60 ea ff ff       	call   3250 <vkGetInstanceProcAddr@plt>
    47f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (func != nullptr)
    47f4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    47f9:	74 1c                	je     4817 <_ZN9rt_vulkan28CreateDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x55>
        return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    47fb:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    47ff:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4803:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4807:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    480b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    480f:	48 89 c7             	mov    %rax,%rdi
    4812:	41 ff d0             	call   *%r8
    4815:	eb 05                	jmp    481c <_ZN9rt_vulkan28CreateDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5a>
    else
        return VK_ERROR_EXTENSION_NOT_PRESENT;
    4817:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
}
    481c:	c9                   	leave
    481d:	c3                   	ret

000000000000481e <_ZN9rt_vulkan29DestroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void rt_vulkan::DestroyDebugUtilsMessengerEXT(
    VkInstance instance,
    VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator)
{
    481e:	55                   	push   %rbp
    481f:	48 89 e5             	mov    %rsp,%rbp
    4822:	48 83 ec 30          	sub    $0x30,%rsp
    4826:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    482a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    482e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)
        vkGetInstanceProcAddr(instance, "vkDestroyDebugUtilsMessengerEXT");
    4832:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4836:	48 8d 15 1b d4 00 00 	lea    0xd41b(%rip),%rdx        # 11c58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    483d:	48 89 d6             	mov    %rdx,%rsi
    4840:	48 89 c7             	mov    %rax,%rdi
    4843:	e8 08 ea ff ff       	call   3250 <vkGetInstanceProcAddr@plt>
    4848:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (func != nullptr)
    484c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4851:	74 1a                	je     486d <_ZN9rt_vulkan29DestroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4f>
        return func(instance, debugMessenger, pAllocator);
    4853:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    4857:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    485b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    485f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4863:	48 89 ce             	mov    %rcx,%rsi
    4866:	48 89 c7             	mov    %rax,%rdi
    4869:	41 ff d0             	call   *%r8
    486c:	90                   	nop
    486d:	c9                   	leave
    486e:	c3                   	ret
    486f:	90                   	nop

0000000000004870 <_ZN9rt_vulkan25RenderTriangleApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
VKAPI_ATTR VkBool32 VKAPI_CALL rt_vulkan::RenderTriangleApplication::debugCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData)
{
    4870:	55                   	push   %rbp
    4871:	48 89 e5             	mov    %rsp,%rbp
    4874:	48 83 ec 20          	sub    $0x20,%rsp
    4878:	89 7d fc             	mov    %edi,-0x4(%rbp)
    487b:	89 75 f8             	mov    %esi,-0x8(%rbp)
    487e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    4882:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    if (messageSeverity >= VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT)
    4886:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4889:	3d ff 00 00 00       	cmp    $0xff,%eax
    488e:	7e 39                	jle    48c9 <_ZN9rt_vulkan25RenderTriangleApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x59>
        std::cerr << pCallbackData->pMessage << '\n'
    4890:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4894:	48 8b 40 28          	mov    0x28(%rax),%rax
    4898:	48 89 c6             	mov    %rax,%rsi
    489b:	48 8d 05 7e 8b 01 00 	lea    0x18b7e(%rip),%rax        # 1d420 <_ZSt4cerr@GLIBCXX_3.4>
    48a2:	48 89 c7             	mov    %rax,%rdi
    48a5:	e8 c6 e9 ff ff       	call   3270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    48aa:	be 0a 00 00 00       	mov    $0xa,%esi
    48af:	48 89 c7             	mov    %rax,%rdi
    48b2:	e8 b9 ea ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
                  << std::endl;
    48b7:	48 8b 15 da 86 01 00 	mov    0x186da(%rip),%rdx        # 1cf98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    48be:	48 89 d6             	mov    %rdx,%rsi
    48c1:	48 89 c7             	mov    %rax,%rdi
    48c4:	e8 17 ea ff ff       	call   32e0 <_ZNSolsEPFRSoS_E@plt>

    return VK_FALSE;
    48c9:	b8 00 00 00 00       	mov    $0x0,%eax
}
    48ce:	c9                   	leave
    48cf:	c3                   	ret

00000000000048d0 <_ZN9rt_vulkan25RenderTriangleApplication22getSupportedExtensionsEv>:

std::vector<VkExtensionProperties>
rt_vulkan::RenderTriangleApplication::getSupportedExtensions()
{
    48d0:	55                   	push   %rbp
    48d1:	48 89 e5             	mov    %rsp,%rbp
    48d4:	53                   	push   %rbx
    48d5:	48 83 ec 28          	sub    $0x28,%rsp
    48d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    48dd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    uint32_t extensionsCount = 0;
    48e1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    48e8:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    48ec:	ba 00 00 00 00       	mov    $0x0,%edx
    48f1:	48 89 c6             	mov    %rax,%rsi
    48f4:	bf 00 00 00 00       	mov    $0x0,%edi
    48f9:	e8 02 e9 ff ff       	call   3200 <vkEnumerateInstanceExtensionProperties@plt>

    std::vector<VkExtensionProperties> extensions{extensionsCount};
    48fe:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4901:	89 c3                	mov    %eax,%ebx
    4903:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4907:	48 89 c7             	mov    %rax,%rdi
    490a:	e8 91 29 00 00       	call   72a0 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    490f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4913:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4917:	48 89 de             	mov    %rbx,%rsi
    491a:	48 89 c7             	mov    %rax,%rdi
    491d:	e8 b6 29 00 00       	call   72d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    4922:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4926:	48 89 c7             	mov    %rax,%rdi
    4929:	e8 8e 29 00 00       	call   72bc <_ZNSaI21VkExtensionPropertiesED1Ev>
    vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, extensions.data());
    492e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4932:	48 89 c7             	mov    %rax,%rdi
    4935:	e8 58 2a 00 00       	call   7392 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    493a:	48 89 c2             	mov    %rax,%rdx
    493d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4941:	48 89 c6             	mov    %rax,%rsi
    4944:	bf 00 00 00 00       	mov    $0x0,%edi
    4949:	e8 b2 e8 ff ff       	call   3200 <vkEnumerateInstanceExtensionProperties@plt>

    return extensions;
    494e:	eb 34                	jmp    4984 <_ZN9rt_vulkan25RenderTriangleApplication22getSupportedExtensionsEv+0xb4>
    std::vector<VkExtensionProperties> extensions{extensionsCount};
    4950:	48 89 c3             	mov    %rax,%rbx
    4953:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4957:	48 89 c7             	mov    %rax,%rdi
    495a:	e8 5d 29 00 00       	call   72bc <_ZNSaI21VkExtensionPropertiesED1Ev>
    495f:	48 89 d8             	mov    %rbx,%rax
    4962:	48 89 c7             	mov    %rax,%rdi
    4965:	e8 a6 eb ff ff       	call   3510 <_Unwind_Resume@plt>
}
    496a:	48 89 c3             	mov    %rax,%rbx
    496d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4971:	48 89 c7             	mov    %rax,%rdi
    4974:	e8 d5 29 00 00       	call   734e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4979:	48 89 d8             	mov    %rbx,%rax
    497c:	48 89 c7             	mov    %rax,%rdi
    497f:	e8 8c eb ff ff       	call   3510 <_Unwind_Resume@plt>
    4984:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4988:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    498c:	c9                   	leave
    498d:	c3                   	ret

000000000000498e <_ZN9rt_vulkan25RenderTriangleApplication21getRequiredExtensionsEv>:

std::vector<const char *> rt_vulkan::RenderTriangleApplication::getRequiredExtensions()
{
    498e:	55                   	push   %rbp
    498f:	48 89 e5             	mov    %rsp,%rbp
    4992:	41 54                	push   %r12
    4994:	53                   	push   %rbx
    4995:	48 83 ec 30          	sub    $0x30,%rsp
    4999:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    499d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    uint32_t glfwExtensionCount = 0;
    49a1:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    const char **glfwExtensions;
    glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    49a8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    49ac:	48 89 c7             	mov    %rax,%rdi
    49af:	e8 fc e7 ff ff       	call   31b0 <glfwGetRequiredInstanceExtensions@plt>
    49b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

    std::vector<const char *> extensions{glfwExtensions, glfwExtensions + glfwExtensionCount};
    49b8:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    49bc:	8b 45 d8             	mov    -0x28(%rbp),%eax
    49bf:	89 c0                	mov    %eax,%eax
    49c1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    49c8:	00 
    49c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    49cd:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    49d1:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    49d5:	48 89 c7             	mov    %rax,%rdi
    49d8:	e8 bd f0 ff ff       	call   3a9a <_ZNSaIPKcEC1Ev>
    49dd:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    49e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    49e5:	48 89 d1             	mov    %rdx,%rcx
    49e8:	4c 89 e2             	mov    %r12,%rdx
    49eb:	48 89 de             	mov    %rbx,%rsi
    49ee:	48 89 c7             	mov    %rax,%rdi
    49f1:	e8 18 2a 00 00       	call   740e <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>
    49f6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    49fa:	48 89 c7             	mov    %rax,%rdi
    49fd:	e8 b4 f0 ff ff       	call   3ab6 <_ZNSaIPKcED1Ev>

    if (enableValidationLayers)
    4a02:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4a06:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    4a0a:	84 c0                	test   %al,%al
    4a0c:	74 54                	je     4a62 <_ZN9rt_vulkan25RenderTriangleApplication21getRequiredExtensionsEv+0xd4>
        extensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    4a0e:	48 8d 05 53 d8 00 00 	lea    0xd853(%rip),%rax        # 12268 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    4a15:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4a19:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4a1d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4a21:	48 89 d6             	mov    %rdx,%rsi
    4a24:	48 89 c7             	mov    %rax,%rdi
    4a27:	e8 54 2a 00 00       	call   7480 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>

    return extensions;
    4a2c:	eb 34                	jmp    4a62 <_ZN9rt_vulkan25RenderTriangleApplication21getRequiredExtensionsEv+0xd4>
    std::vector<const char *> extensions{glfwExtensions, glfwExtensions + glfwExtensionCount};
    4a2e:	48 89 c3             	mov    %rax,%rbx
    4a31:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4a35:	48 89 c7             	mov    %rax,%rdi
    4a38:	e8 79 f0 ff ff       	call   3ab6 <_ZNSaIPKcED1Ev>
    4a3d:	48 89 d8             	mov    %rbx,%rax
    4a40:	48 89 c7             	mov    %rax,%rdi
    4a43:	e8 c8 ea ff ff       	call   3510 <_Unwind_Resume@plt>
}
    4a48:	48 89 c3             	mov    %rax,%rbx
    4a4b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4a4f:	48 89 c7             	mov    %rax,%rdi
    4a52:	e8 03 f1 ff ff       	call   3b5a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    4a57:	48 89 d8             	mov    %rbx,%rax
    4a5a:	48 89 c7             	mov    %rax,%rdi
    4a5d:	e8 ae ea ff ff       	call   3510 <_Unwind_Resume@plt>
    return extensions;
    4a62:	90                   	nop
}
    4a63:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4a67:	48 83 c4 30          	add    $0x30,%rsp
    4a6b:	5b                   	pop    %rbx
    4a6c:	41 5c                	pop    %r12
    4a6e:	5d                   	pop    %rbp
    4a6f:	c3                   	ret

0000000000004a70 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv>:

bool rt_vulkan::RenderTriangleApplication::checkValidationLayerSupport()
{
    4a70:	55                   	push   %rbp
    4a71:	48 89 e5             	mov    %rsp,%rbp
    4a74:	53                   	push   %rbx
    4a75:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    4a7c:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    uint32_t layerCount;
    vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    4a83:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4a87:	be 00 00 00 00       	mov    $0x0,%esi
    4a8c:	48 89 c7             	mov    %rax,%rdi
    4a8f:	e8 ac e8 ff ff       	call   3340 <vkEnumerateInstanceLayerProperties@plt>

    std::vector<VkLayerProperties> availableLayers{layerCount};
    4a94:	8b 45 c0             	mov    -0x40(%rbp),%eax
    4a97:	89 c3                	mov    %eax,%ebx
    4a99:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    4a9d:	48 89 c7             	mov    %rax,%rdi
    4aa0:	e8 0d 2a 00 00       	call   74b2 <_ZNSaI17VkLayerPropertiesEC1Ev>
    4aa5:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
    4aa9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4aad:	48 89 de             	mov    %rbx,%rsi
    4ab0:	48 89 c7             	mov    %rax,%rdi
    4ab3:	e8 32 2a 00 00       	call   74ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    4ab8:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    4abc:	48 89 c7             	mov    %rax,%rdi
    4abf:	e8 0a 2a 00 00       	call   74ce <_ZNSaI17VkLayerPropertiesED1Ev>
    vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    4ac4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4ac8:	48 89 c7             	mov    %rax,%rdi
    4acb:	e8 d4 2a 00 00       	call   75a4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    4ad0:	48 89 c2             	mov    %rax,%rdx
    4ad3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ad7:	48 89 d6             	mov    %rdx,%rsi
    4ada:	48 89 c7             	mov    %rax,%rdi
    4add:	e8 5e e8 ff ff       	call   3340 <vkEnumerateInstanceLayerProperties@plt>

    for (const char *layerName : validationLayers)
    4ae2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    4ae9:	48 83 c0 18          	add    $0x18,%rax
    4aed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4af1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4af5:	48 89 c7             	mov    %rax,%rdi
    4af8:	e8 cb 2a 00 00       	call   75c8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    4afd:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4b01:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4b05:	48 89 c7             	mov    %rax,%rdi
    4b08:	e8 e1 2a 00 00       	call   75ee <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    4b0d:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4b11:	e9 af 00 00 00       	jmp    4bc5 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0x155>
    4b16:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    4b1a:	48 89 c7             	mov    %rax,%rdi
    4b1d:	e8 50 2b 00 00       	call   7672 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    4b22:	48 8b 00             	mov    (%rax),%rax
    4b25:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    {
        bool layerFound = false;
    4b29:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)

        for (const auto &layerProperties : availableLayers)
    4b2d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4b31:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4b35:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b39:	48 89 c7             	mov    %rax,%rdi
    4b3c:	e8 43 2b 00 00       	call   7684 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    4b41:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    4b45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b49:	48 89 c7             	mov    %rax,%rdi
    4b4c:	e8 59 2b 00 00       	call   76aa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    4b51:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    4b55:	eb 39                	jmp    4b90 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0x120>
    4b57:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    4b5b:	48 89 c7             	mov    %rax,%rdi
    4b5e:	e8 cf 2b 00 00       	call   7732 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    4b63:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
        {
            if (strcmp(layerName, layerProperties.layerName) == 0)
    4b67:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4b6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b6f:	48 89 d6             	mov    %rdx,%rsi
    4b72:	48 89 c7             	mov    %rax,%rdi
    4b75:	e8 a6 e8 ff ff       	call   3420 <strcmp@plt>
    4b7a:	85 c0                	test   %eax,%eax
    4b7c:	75 06                	jne    4b84 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0x114>
            {
                layerFound = true;
    4b7e:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
                break;
    4b82:	eb 23                	jmp    4ba7 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0x137>
        for (const auto &layerProperties : availableLayers)
    4b84:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    4b88:	48 89 c7             	mov    %rax,%rdi
    4b8b:	e8 7e 2b 00 00       	call   770e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    4b90:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    4b94:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    4b98:	48 89 d6             	mov    %rdx,%rsi
    4b9b:	48 89 c7             	mov    %rax,%rdi
    4b9e:	e8 30 2b 00 00       	call   76d3 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4ba3:	84 c0                	test   %al,%al
    4ba5:	75 b0                	jne    4b57 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0xe7>
            }
        }

        if (!layerFound)
    4ba7:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    4bab:	83 f0 01             	xor    $0x1,%eax
    4bae:	84 c0                	test   %al,%al
    4bb0:	74 07                	je     4bb9 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0x149>
            return false;
    4bb2:	bb 00 00 00 00       	mov    $0x0,%ebx
    4bb7:	eb 2c                	jmp    4be5 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0x175>
    for (const char *layerName : validationLayers)
    4bb9:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    4bbd:	48 89 c7             	mov    %rax,%rdi
    4bc0:	e8 8d 2a 00 00       	call   7652 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    4bc5:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    4bc9:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    4bcd:	48 89 d6             	mov    %rdx,%rsi
    4bd0:	48 89 c7             	mov    %rax,%rdi
    4bd3:	e8 3f 2a 00 00       	call   7617 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    4bd8:	84 c0                	test   %al,%al
    4bda:	0f 85 36 ff ff ff    	jne    4b16 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0xa6>
    }

    return true;
    4be0:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    4be5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4be9:	48 89 c7             	mov    %rax,%rdi
    4bec:	e8 6f 29 00 00       	call   7560 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    4bf1:	89 d8                	mov    %ebx,%eax
    4bf3:	eb 34                	jmp    4c29 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv+0x1b9>
    std::vector<VkLayerProperties> availableLayers{layerCount};
    4bf5:	48 89 c3             	mov    %rax,%rbx
    4bf8:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    4bfc:	48 89 c7             	mov    %rax,%rdi
    4bff:	e8 ca 28 00 00       	call   74ce <_ZNSaI17VkLayerPropertiesED1Ev>
    4c04:	48 89 d8             	mov    %rbx,%rax
    4c07:	48 89 c7             	mov    %rax,%rdi
    4c0a:	e8 01 e9 ff ff       	call   3510 <_Unwind_Resume@plt>
}
    4c0f:	48 89 c3             	mov    %rax,%rbx
    4c12:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4c16:	48 89 c7             	mov    %rax,%rdi
    4c19:	e8 42 29 00 00       	call   7560 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    4c1e:	48 89 d8             	mov    %rbx,%rax
    4c21:	48 89 c7             	mov    %rax,%rdi
    4c24:	e8 e7 e8 ff ff       	call   3510 <_Unwind_Resume@plt>
    4c29:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c2d:	c9                   	leave
    4c2e:	c3                   	ret
    4c2f:	90                   	nop

0000000000004c30 <_ZN9rt_vulkan25RenderTriangleApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void rt_vulkan::RenderTriangleApplication::populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo)
{
    4c30:	55                   	push   %rbp
    4c31:	48 89 e5             	mov    %rsp,%rbp
    4c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    createInfo = {};
    4c3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c40:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c44:	0f 11 00             	movups %xmm0,(%rax)
    4c47:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4c4b:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    4c4f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c53:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
    createInfo.messageSeverity =
    4c59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c5d:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
        VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
    createInfo.messageType =
    4c64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c68:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
        VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
    createInfo.pfnUserCallback = debugCallback;
    4c6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c73:	48 8d 15 f6 fb ff ff 	lea    -0x40a(%rip),%rdx        # 4870 <_ZN9rt_vulkan25RenderTriangleApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    4c7a:	48 89 50 20          	mov    %rdx,0x20(%rax)
    createInfo.pUserData = nullptr;
    4c7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c82:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    4c89:	00 
}
    4c8a:	90                   	nop
    4c8b:	5d                   	pop    %rbp
    4c8c:	c3                   	ret
    4c8d:	90                   	nop

0000000000004c8e <_ZN9rt_vulkan25RenderTriangleApplication19setupDebugMessengerEv>:

void rt_vulkan::RenderTriangleApplication::setupDebugMessenger()
{
    4c8e:	55                   	push   %rbp
    4c8f:	48 89 e5             	mov    %rsp,%rbp
    4c92:	41 54                	push   %r12
    4c94:	53                   	push   %rbx
    4c95:	48 83 ec 40          	sub    $0x40,%rsp
    4c99:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    if (!enableValidationLayers)
    4c9d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4ca1:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    4ca5:	83 f0 01             	xor    $0x1,%eax
    4ca8:	84 c0                	test   %al,%al
    4caa:	74 06                	je     4cb2 <_ZN9rt_vulkan25RenderTriangleApplication19setupDebugMessengerEv+0x24>
        return;
    4cac:	90                   	nop
    populateDebugMessengerCreateInfo(createInfo);

    if (CreateDebugUtilsMessengerEXT(instance, &createInfo,
                                     nullptr, &debugMessenger) != VK_SUCCESS)
        throw std::runtime_error("Failed to set up debug messenger.");
}
    4cad:	e9 91 00 00 00       	jmp    4d43 <_ZN9rt_vulkan25RenderTriangleApplication19setupDebugMessengerEv+0xb5>
    populateDebugMessengerCreateInfo(createInfo);
    4cb2:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    4cb6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4cba:	48 89 d6             	mov    %rdx,%rsi
    4cbd:	48 89 c7             	mov    %rax,%rdi
    4cc0:	e8 6b ff ff ff       	call   4c30 <_ZN9rt_vulkan25RenderTriangleApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    if (CreateDebugUtilsMessengerEXT(instance, &createInfo,
    4cc5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4cc9:	48 8d 50 38          	lea    0x38(%rax),%rdx
    4ccd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4cd1:	48 8b 40 10          	mov    0x10(%rax),%rax
    4cd5:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    4cd9:	48 89 d1             	mov    %rdx,%rcx
    4cdc:	ba 00 00 00 00       	mov    $0x0,%edx
    4ce1:	48 89 c7             	mov    %rax,%rdi
    4ce4:	e8 d9 fa ff ff       	call   47c2 <_ZN9rt_vulkan28CreateDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                     nullptr, &debugMessenger) != VK_SUCCESS)
    4ce9:	85 c0                	test   %eax,%eax
    4ceb:	0f 95 c0             	setne  %al
    if (CreateDebugUtilsMessengerEXT(instance, &createInfo,
    4cee:	84 c0                	test   %al,%al
    4cf0:	74 51                	je     4d43 <_ZN9rt_vulkan25RenderTriangleApplication19setupDebugMessengerEv+0xb5>
        throw std::runtime_error("Failed to set up debug messenger.");
    4cf2:	bf 10 00 00 00       	mov    $0x10,%edi
    4cf7:	e8 e4 e3 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    4cfc:	48 89 c3             	mov    %rax,%rbx
    4cff:	48 8d 05 7a d5 00 00 	lea    0xd57a(%rip),%rax        # 12280 <_ZN6__pstl9execution2v1L5unseqE+0x19>
    4d06:	48 89 c6             	mov    %rax,%rsi
    4d09:	48 89 df             	mov    %rbx,%rdi
    4d0c:	e8 9f e3 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    4d11:	48 8b 05 90 82 01 00 	mov    0x18290(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4d18:	48 89 c2             	mov    %rax,%rdx
    4d1b:	48 8d 05 1e 80 01 00 	lea    0x1801e(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4d22:	48 89 c6             	mov    %rax,%rsi
    4d25:	48 89 df             	mov    %rbx,%rdi
    4d28:	e8 b3 e7 ff ff       	call   34e0 <__cxa_throw@plt>
    4d2d:	49 89 c4             	mov    %rax,%r12
    4d30:	48 89 df             	mov    %rbx,%rdi
    4d33:	e8 58 e4 ff ff       	call   3190 <__cxa_free_exception@plt>
    4d38:	4c 89 e0             	mov    %r12,%rax
    4d3b:	48 89 c7             	mov    %rax,%rdi
    4d3e:	e8 cd e7 ff ff       	call   3510 <_Unwind_Resume@plt>
}
    4d43:	90                   	nop
    4d44:	48 83 c4 40          	add    $0x40,%rsp
    4d48:	5b                   	pop    %rbx
    4d49:	41 5c                	pop    %r12
    4d4b:	5d                   	pop    %rbp
    4d4c:	c3                   	ret
    4d4d:	90                   	nop

0000000000004d4e <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv>:

void rt_vulkan::RenderTriangleApplication::creatInstance()
{
    4d4e:	55                   	push   %rbp
    4d4f:	48 89 e5             	mov    %rsp,%rbp
    4d52:	41 54                	push   %r12
    4d54:	53                   	push   %rbx
    4d55:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
    4d5c:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    if (enableValidationLayers && !checkValidationLayerSupport())
    4d63:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4d6a:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    4d6e:	84 c0                	test   %al,%al
    4d70:	74 1d                	je     4d8f <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x41>
    4d72:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4d79:	48 89 c7             	mov    %rax,%rdi
    4d7c:	e8 ef fc ff ff       	call   4a70 <_ZN9rt_vulkan25RenderTriangleApplication27checkValidationLayerSupportEv>
    4d81:	83 f0 01             	xor    $0x1,%eax
    4d84:	84 c0                	test   %al,%al
    4d86:	74 07                	je     4d8f <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x41>
    4d88:	b8 01 00 00 00       	mov    $0x1,%eax
    4d8d:	eb 05                	jmp    4d94 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x46>
    4d8f:	b8 00 00 00 00       	mov    $0x0,%eax
    4d94:	84 c0                	test   %al,%al
    4d96:	74 3b                	je     4dd3 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x85>
        throw std::runtime_error("Validation layers requested but not available.");
    4d98:	bf 10 00 00 00       	mov    $0x10,%edi
    4d9d:	e8 3e e3 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    4da2:	48 89 c3             	mov    %rax,%rbx
    4da5:	48 8d 05 fc d4 00 00 	lea    0xd4fc(%rip),%rax        # 122a8 <_ZN6__pstl9execution2v1L5unseqE+0x41>
    4dac:	48 89 c6             	mov    %rax,%rsi
    4daf:	48 89 df             	mov    %rbx,%rdi
    4db2:	e8 f9 e2 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    4db7:	48 8b 05 ea 81 01 00 	mov    0x181ea(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4dbe:	48 89 c2             	mov    %rax,%rdx
    4dc1:	48 8d 05 78 7f 01 00 	lea    0x17f78(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4dc8:	48 89 c6             	mov    %rax,%rsi
    4dcb:	48 89 df             	mov    %rbx,%rdi
    4dce:	e8 0d e7 ff ff       	call   34e0 <__cxa_throw@plt>

    // std::cout << enableValidationLayers << '\n';
    VkApplicationInfo appInfo{};
    4dd3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4dd7:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    4ddb:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    4ddf:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    4de3:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    appInfo.pApplicationName = "Test Triangle";
    4dea:	48 8d 05 e6 d4 00 00 	lea    0xd4e6(%rip),%rax        # 122d7 <_ZN6__pstl9execution2v1L5unseqE+0x70>
    4df1:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    4df5:	c7 45 b8 00 00 40 00 	movl   $0x400000,-0x48(%rbp)
    appInfo.pEngineName = "No Engine";
    4dfc:	48 8d 05 e2 d4 00 00 	lea    0xd4e2(%rip),%rax        # 122e5 <_ZN6__pstl9execution2v1L5unseqE+0x7e>
    4e03:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    4e07:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
    appInfo.apiVersion = VK_API_VERSION_1_0;
    4e0e:	c7 45 cc 00 00 40 00 	movl   $0x400000,-0x34(%rbp)

    VkInstanceCreateInfo createInfo{};
    4e15:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e19:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    4e20:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    4e27:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    4e2b:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    4e2f:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
    4e36:	00 00 00 
    createInfo.pApplicationInfo = &appInfo;
    4e39:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4e3d:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

    auto requiredExtensions = getRequiredExtensions();
    4e44:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4e4b:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    4e52:	48 89 d6             	mov    %rdx,%rsi
    4e55:	48 89 c7             	mov    %rax,%rdi
    4e58:	e8 31 fb ff ff       	call   498e <_ZN9rt_vulkan25RenderTriangleApplication21getRequiredExtensionsEv>
    createInfo.enabledExtensionCount = static_cast<uint32_t>(requiredExtensions.size());
    4e5d:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4e64:	48 89 c7             	mov    %rax,%rdi
    4e67:	e8 d8 28 00 00       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4e6c:	89 45 90             	mov    %eax,-0x70(%rbp)
    createInfo.ppEnabledExtensionNames = requiredExtensions.data();
    4e6f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4e76:	48 89 c7             	mov    %rax,%rdi
    4e79:	e8 ea 28 00 00       	call   7768 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    4e7e:	48 89 45 98          	mov    %rax,-0x68(%rbp)

    VkDebugUtilsMessengerCreateInfoEXT debugCreateInfo{};
    4e82:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e86:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    4e8d:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    4e94:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    if (enableValidationLayers)
    4e9b:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4ea2:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    4ea6:	84 c0                	test   %al,%al
    4ea8:	74 56                	je     4f00 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x1b2>
    {
        createInfo.enabledLayerCount = static_cast<uint32_t>(validationLayers.size());
    4eaa:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4eb1:	48 83 c0 18          	add    $0x18,%rax
    4eb5:	48 89 c7             	mov    %rax,%rdi
    4eb8:	e8 87 28 00 00       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    4ebd:	89 45 80             	mov    %eax,-0x80(%rbp)
        createInfo.ppEnabledLayerNames = validationLayers.data();
    4ec0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4ec7:	48 83 c0 18          	add    $0x18,%rax
    4ecb:	48 89 c7             	mov    %rax,%rdi
    4ece:	e8 b9 28 00 00       	call   778c <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    4ed3:	48 89 45 88          	mov    %rax,-0x78(%rbp)

        populateDebugMessengerCreateInfo(debugCreateInfo);
    4ed7:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    4ede:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4ee5:	48 89 d6             	mov    %rdx,%rsi
    4ee8:	48 89 c7             	mov    %rax,%rdi
    4eeb:	e8 40 fd ff ff       	call   4c30 <_ZN9rt_vulkan25RenderTriangleApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
        createInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    4ef0:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    4ef7:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    4efe:	eb 12                	jmp    4f12 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x1c4>
    }
    else
    {
        createInfo.enabledLayerCount = 0;
    4f00:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%rbp)
        createInfo.pNext = nullptr;
    4f07:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    4f0e:	00 00 00 00 
    }

    if (vkCreateInstance(&createInfo, nullptr, &instance) != VK_SUCCESS)
    4f12:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    4f19:	48 8d 50 10          	lea    0x10(%rax),%rdx
    4f1d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    4f24:	be 00 00 00 00       	mov    $0x0,%esi
    4f29:	48 89 c7             	mov    %rax,%rdi
    4f2c:	e8 6f e4 ff ff       	call   33a0 <vkCreateInstance@plt>
    4f31:	85 c0                	test   %eax,%eax
    4f33:	0f 95 c0             	setne  %al
    4f36:	84 c0                	test   %al,%al
    4f38:	74 3b                	je     4f75 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x227>
        throw std::runtime_error("Failed to create instance.");
    4f3a:	bf 10 00 00 00       	mov    $0x10,%edi
    4f3f:	e8 9c e1 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    4f44:	48 89 c3             	mov    %rax,%rbx
    4f47:	48 8d 05 a1 d3 00 00 	lea    0xd3a1(%rip),%rax        # 122ef <_ZN6__pstl9execution2v1L5unseqE+0x88>
    4f4e:	48 89 c6             	mov    %rax,%rsi
    4f51:	48 89 df             	mov    %rbx,%rdi
    4f54:	e8 57 e1 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    4f59:	48 8b 05 48 80 01 00 	mov    0x18048(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4f60:	48 89 c2             	mov    %rax,%rdx
    4f63:	48 8d 05 d6 7d 01 00 	lea    0x17dd6(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4f6a:	48 89 c6             	mov    %rax,%rsi
    4f6d:	48 89 df             	mov    %rbx,%rdi
    4f70:	e8 6b e5 ff ff       	call   34e0 <__cxa_throw@plt>

    auto supportedExtensions = getSupportedExtensions();
    4f75:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    4f7c:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    4f83:	48 89 d6             	mov    %rdx,%rsi
    4f86:	48 89 c7             	mov    %rax,%rdi
    4f89:	e8 42 f9 ff ff       	call   48d0 <_ZN9rt_vulkan25RenderTriangleApplication22getSupportedExtensionsEv>
    std::cout << "Available extensions:\n";
    4f8e:	48 8d 05 75 d3 00 00 	lea    0xd375(%rip),%rax        # 1230a <_ZN6__pstl9execution2v1L5unseqE+0xa3>
    4f95:	48 89 c6             	mov    %rax,%rsi
    4f98:	48 8d 05 61 83 01 00 	lea    0x18361(%rip),%rax        # 1d300 <_ZSt4cout@GLIBCXX_3.4>
    4f9f:	48 89 c7             	mov    %rax,%rdi
    4fa2:	e8 c9 e2 ff ff       	call   3270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    for (const auto &extension : supportedExtensions)
    4fa7:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    4fae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    4fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fb6:	48 89 c7             	mov    %rax,%rdi
    4fb9:	e8 f2 27 00 00       	call   77b0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    4fbe:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    4fc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fc9:	48 89 c7             	mov    %rax,%rdi
    4fcc:	e8 05 28 00 00       	call   77d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    4fd1:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    4fd8:	eb 55                	jmp    502f <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x2e1>
    4fda:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    4fe1:	48 89 c7             	mov    %rax,%rdi
    4fe4:	e8 75 28 00 00       	call   785e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    4fe9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
        std::cout << '\t' << extension.extensionName << '\n';
    4fed:	be 09 00 00 00       	mov    $0x9,%esi
    4ff2:	48 8d 05 07 83 01 00 	lea    0x18307(%rip),%rax        # 1d300 <_ZSt4cout@GLIBCXX_3.4>
    4ff9:	48 89 c7             	mov    %rax,%rdi
    4ffc:	e8 6f e3 ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    5001:	48 89 c2             	mov    %rax,%rdx
    5004:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5008:	48 89 c6             	mov    %rax,%rsi
    500b:	48 89 d7             	mov    %rdx,%rdi
    500e:	e8 5d e2 ff ff       	call   3270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    5013:	be 0a 00 00 00       	mov    $0xa,%esi
    5018:	48 89 c7             	mov    %rax,%rdi
    501b:	e8 50 e3 ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : supportedExtensions)
    5020:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    5027:	48 89 c7             	mov    %rax,%rdi
    502a:	e8 0b 28 00 00       	call   783a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    502f:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    5036:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    503d:	48 89 d6             	mov    %rdx,%rsi
    5040:	48 89 c7             	mov    %rax,%rdi
    5043:	e8 b7 27 00 00       	call   77ff <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    5048:	84 c0                	test   %al,%al
    504a:	75 8e                	jne    4fda <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x28c>
    std::cout << '\n';
    504c:	be 0a 00 00 00       	mov    $0xa,%esi
    5051:	48 8d 05 a8 82 01 00 	lea    0x182a8(%rip),%rax        # 1d300 <_ZSt4cout@GLIBCXX_3.4>
    5058:	48 89 c7             	mov    %rax,%rdi
    505b:	e8 10 e3 ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

    std::cout << "Required extensions:\n";
    5060:	48 8d 05 ba d2 00 00 	lea    0xd2ba(%rip),%rax        # 12321 <_ZN6__pstl9execution2v1L5unseqE+0xba>
    5067:	48 89 c6             	mov    %rax,%rsi
    506a:	48 8d 05 8f 82 01 00 	lea    0x1828f(%rip),%rax        # 1d300 <_ZSt4cout@GLIBCXX_3.4>
    5071:	48 89 c7             	mov    %rax,%rdi
    5074:	e8 f7 e1 ff ff       	call   3270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    for (const auto &extension : requiredExtensions)
    5079:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    5080:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5084:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5088:	48 89 c7             	mov    %rax,%rdi
    508b:	e8 e0 27 00 00       	call   7870 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    5090:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    5097:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    509b:	48 89 c7             	mov    %rax,%rdi
    509e:	e8 f3 27 00 00       	call   7896 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    50a3:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    50aa:	eb 58                	jmp    5104 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x3b6>
    50ac:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    50b3:	48 89 c7             	mov    %rax,%rdi
    50b6:	e8 5f 28 00 00       	call   791a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    50bb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        std::cout << '\t' << extension << '\n';
    50bf:	be 09 00 00 00       	mov    $0x9,%esi
    50c4:	48 8d 05 35 82 01 00 	lea    0x18235(%rip),%rax        # 1d300 <_ZSt4cout@GLIBCXX_3.4>
    50cb:	48 89 c7             	mov    %rax,%rdi
    50ce:	e8 9d e2 ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    50d3:	48 89 c2             	mov    %rax,%rdx
    50d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50da:	48 8b 00             	mov    (%rax),%rax
    50dd:	48 89 c6             	mov    %rax,%rsi
    50e0:	48 89 d7             	mov    %rdx,%rdi
    50e3:	e8 88 e1 ff ff       	call   3270 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    50e8:	be 0a 00 00 00       	mov    $0xa,%esi
    50ed:	48 89 c7             	mov    %rax,%rdi
    50f0:	e8 7b e2 ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : requiredExtensions)
    50f5:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    50fc:	48 89 c7             	mov    %rax,%rdi
    50ff:	e8 f6 27 00 00       	call   78fa <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    5104:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    510b:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    5112:	48 89 d6             	mov    %rdx,%rsi
    5115:	48 89 c7             	mov    %rax,%rdi
    5118:	e8 a2 27 00 00       	call   78bf <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    511d:	84 c0                	test   %al,%al
    511f:	75 8b                	jne    50ac <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x35e>
    std::cout << '\n';
    5121:	be 0a 00 00 00       	mov    $0xa,%esi
    5126:	48 8d 05 d3 81 01 00 	lea    0x181d3(%rip),%rax        # 1d300 <_ZSt4cout@GLIBCXX_3.4>
    512d:	48 89 c7             	mov    %rax,%rdi
    5130:	e8 3b e2 ff ff       	call   3370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
}
    5135:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    513c:	48 89 c7             	mov    %rax,%rdi
    513f:	e8 0a 22 00 00       	call   734e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    5144:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    514b:	48 89 c7             	mov    %rax,%rdi
    514e:	e8 07 ea ff ff       	call   3b5a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    5153:	eb 57                	jmp    51ac <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x45e>
        throw std::runtime_error("Validation layers requested but not available.");
    5155:	49 89 c4             	mov    %rax,%r12
    5158:	48 89 df             	mov    %rbx,%rdi
    515b:	e8 30 e0 ff ff       	call   3190 <__cxa_free_exception@plt>
    5160:	4c 89 e0             	mov    %r12,%rax
    5163:	48 89 c7             	mov    %rax,%rdi
    5166:	e8 a5 e3 ff ff       	call   3510 <_Unwind_Resume@plt>
        throw std::runtime_error("Failed to create instance.");
    516b:	49 89 c4             	mov    %rax,%r12
    516e:	48 89 df             	mov    %rbx,%rdi
    5171:	e8 1a e0 ff ff       	call   3190 <__cxa_free_exception@plt>
    5176:	4c 89 e3             	mov    %r12,%rbx
    5179:	eb 17                	jmp    5192 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x444>
}
    517b:	48 89 c3             	mov    %rax,%rbx
    517e:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5185:	48 89 c7             	mov    %rax,%rdi
    5188:	e8 c1 21 00 00       	call   734e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    518d:	eb 03                	jmp    5192 <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv+0x444>
    518f:	48 89 c3             	mov    %rax,%rbx
    5192:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    5199:	48 89 c7             	mov    %rax,%rdi
    519c:	e8 b9 e9 ff ff       	call   3b5a <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    51a1:	48 89 d8             	mov    %rbx,%rax
    51a4:	48 89 c7             	mov    %rax,%rdi
    51a7:	e8 64 e3 ff ff       	call   3510 <_Unwind_Resume@plt>
    51ac:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
    51b3:	5b                   	pop    %rbx
    51b4:	41 5c                	pop    %r12
    51b6:	5d                   	pop    %rbp
    51b7:	c3                   	ret

00000000000051b8 <_ZN9rt_vulkan25RenderTriangleApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool rt_vulkan::RenderTriangleApplication::checkDeviceExtensionSupport(VkPhysicalDevice device)
{
    51b8:	55                   	push   %rbp
    51b9:	48 89 e5             	mov    %rsp,%rbp
    51bc:	53                   	push   %rbx
    51bd:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    51c4:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    51cb:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    uint32_t extensionCount;
    vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount, nullptr);
    51d2:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    51d6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    51dd:	b9 00 00 00 00       	mov    $0x0,%ecx
    51e2:	be 00 00 00 00       	mov    $0x0,%esi
    51e7:	48 89 c7             	mov    %rax,%rdi
    51ea:	e8 21 e2 ff ff       	call   3410 <vkEnumerateDeviceExtensionProperties@plt>

    std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    51ef:	8b 45 a8             	mov    -0x58(%rbp),%eax
    51f2:	89 c3                	mov    %eax,%ebx
    51f4:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    51f8:	48 89 c7             	mov    %rax,%rdi
    51fb:	e8 a0 20 00 00       	call   72a0 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    5200:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
    5204:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5208:	48 89 de             	mov    %rbx,%rsi
    520b:	48 89 c7             	mov    %rax,%rdi
    520e:	e8 c5 20 00 00       	call   72d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    5213:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    5217:	48 89 c7             	mov    %rax,%rdi
    521a:	e8 9d 20 00 00       	call   72bc <_ZNSaI21VkExtensionPropertiesED1Ev>
    vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    521f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5223:	48 89 c7             	mov    %rax,%rdi
    5226:	e8 67 21 00 00       	call   7392 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    522b:	48 89 c1             	mov    %rax,%rcx
    522e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    5232:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5239:	be 00 00 00 00       	mov    $0x0,%esi
    523e:	48 89 c7             	mov    %rax,%rdi
    5241:	e8 ca e1 ff ff       	call   3410 <vkEnumerateDeviceExtensionProperties@plt>
                                         availableExtensions.data());

    std::set<std::string> requiredExtensions{deviceExtensions.begin(), deviceExtensions.end()};
    5246:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    524d:	48 83 c0 68          	add    $0x68,%rax
    5251:	48 89 c7             	mov    %rax,%rdi
    5254:	e8 6f 23 00 00       	call   75c8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    5259:	48 89 c3             	mov    %rax,%rbx
    525c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5263:	48 83 c0 68          	add    $0x68,%rax
    5267:	48 89 c7             	mov    %rax,%rdi
    526a:	e8 7f 23 00 00       	call   75ee <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    526f:	48 89 c2             	mov    %rax,%rdx
    5272:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5279:	48 89 de             	mov    %rbx,%rsi
    527c:	48 89 c7             	mov    %rax,%rdi
    527f:	e8 e0 26 00 00       	call   7964 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>

    for (const auto &extension : availableExtensions)
    5284:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5288:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    528c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5290:	48 89 c7             	mov    %rax,%rdi
    5293:	e8 18 25 00 00       	call   77b0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    5298:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    529f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    52a3:	48 89 c7             	mov    %rax,%rdi
    52a6:	e8 2b 25 00 00       	call   77d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    52ab:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    52b2:	eb 73                	jmp    5327 <_ZN9rt_vulkan25RenderTriangleApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x16f>
    52b4:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    52bb:	48 89 c7             	mov    %rax,%rdi
    52be:	e8 9b 25 00 00       	call   785e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    52c3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
        requiredExtensions.erase(extension.extensionName);
    52c7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    52cb:	48 89 c7             	mov    %rax,%rdi
    52ce:	e8 4d e2 ff ff       	call   3520 <_ZNSaIcEC1Ev@plt>
    52d3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    52d7:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    52db:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    52df:	48 89 ce             	mov    %rcx,%rsi
    52e2:	48 89 c7             	mov    %rax,%rdi
    52e5:	e8 22 27 00 00       	call   7a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    52ea:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    52ee:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    52f5:	48 89 d6             	mov    %rdx,%rsi
    52f8:	48 89 c7             	mov    %rax,%rdi
    52fb:	e8 ac 27 00 00       	call   7aac <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    5300:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5304:	48 89 c7             	mov    %rax,%rdi
    5307:	e8 44 de ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    530c:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5310:	48 89 c7             	mov    %rax,%rdi
    5313:	e8 f8 df ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
    for (const auto &extension : availableExtensions)
    5318:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    531f:	48 89 c7             	mov    %rax,%rdi
    5322:	e8 13 25 00 00       	call   783a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    5327:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    532e:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    5335:	48 89 d6             	mov    %rdx,%rsi
    5338:	48 89 c7             	mov    %rax,%rdi
    533b:	e8 bf 24 00 00       	call   77ff <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    5340:	84 c0                	test   %al,%al
    5342:	0f 85 6c ff ff ff    	jne    52b4 <_ZN9rt_vulkan25RenderTriangleApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0xfc>

    return requiredExtensions.empty();
    5348:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    534f:	48 89 c7             	mov    %rax,%rdi
    5352:	e8 7b 27 00 00       	call   7ad2 <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>
    5357:	89 c3                	mov    %eax,%ebx
    5359:	90                   	nop
}
    535a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5361:	48 89 c7             	mov    %rax,%rdi
    5364:	e8 c7 1c 00 00       	call   7030 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    5369:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    536d:	48 89 c7             	mov    %rax,%rdi
    5370:	e8 d9 1f 00 00       	call   734e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    return requiredExtensions.empty();
    5375:	89 d8                	mov    %ebx,%eax
    5377:	eb 65                	jmp    53de <_ZN9rt_vulkan25RenderTriangleApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x226>
    std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    5379:	48 89 c3             	mov    %rax,%rbx
    537c:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    5380:	48 89 c7             	mov    %rax,%rdi
    5383:	e8 34 1f 00 00       	call   72bc <_ZNSaI21VkExtensionPropertiesED1Ev>
    5388:	48 89 d8             	mov    %rbx,%rax
    538b:	48 89 c7             	mov    %rax,%rdi
    538e:	e8 7d e1 ff ff       	call   3510 <_Unwind_Resume@plt>
        requiredExtensions.erase(extension.extensionName);
    5393:	48 89 c3             	mov    %rax,%rbx
    5396:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    539a:	48 89 c7             	mov    %rax,%rdi
    539d:	e8 ae dd ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    53a2:	eb 03                	jmp    53a7 <_ZN9rt_vulkan25RenderTriangleApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x1ef>
    53a4:	48 89 c3             	mov    %rax,%rbx
    53a7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    53ab:	48 89 c7             	mov    %rax,%rdi
    53ae:	e8 5d df ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
}
    53b3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    53ba:	48 89 c7             	mov    %rax,%rdi
    53bd:	e8 6e 1c 00 00       	call   7030 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    53c2:	eb 03                	jmp    53c7 <_ZN9rt_vulkan25RenderTriangleApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x20f>
    53c4:	48 89 c3             	mov    %rax,%rbx
    53c7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    53cb:	48 89 c7             	mov    %rax,%rdi
    53ce:	e8 7b 1f 00 00       	call   734e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    53d3:	48 89 d8             	mov    %rbx,%rax
    53d6:	48 89 c7             	mov    %rax,%rdi
    53d9:	e8 32 e1 ff ff       	call   3510 <_Unwind_Resume@plt>
    53de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    53e2:	c9                   	leave
    53e3:	c3                   	ret

00000000000053e4 <_ZN9rt_vulkan25RenderTriangleApplication21querySwapChainSupportEP18VkPhysicalDevice_T>:

rt_vulkan::RenderTriangleApplication::SwapChainSupportDetails
rt_vulkan::RenderTriangleApplication::querySwapChainSupport(VkPhysicalDevice device)
{
    53e4:	55                   	push   %rbp
    53e5:	48 89 e5             	mov    %rsp,%rbp
    53e8:	53                   	push   %rbx
    53e9:	48 83 ec 38          	sub    $0x38,%rsp
    53ed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    53f1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    53f5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    SwapChainSupportDetails details;
    53f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53fd:	48 89 c7             	mov    %rax,%rdi
    5400:	e8 ef 1c 00 00       	call   70f4 <_ZN9rt_vulkan25RenderTriangleApplication23SwapChainSupportDetailsC1Ev>

    vkGetPhysicalDeviceSurfaceCapabilitiesKHR(device, surface, &details.capabilities);
    5405:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5409:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    540d:	48 8b 48 58          	mov    0x58(%rax),%rcx
    5411:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5415:	48 89 ce             	mov    %rcx,%rsi
    5418:	48 89 c7             	mov    %rax,%rdi
    541b:	e8 10 de ff ff       	call   3230 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>

    uint32_t formatCount;
    vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount, nullptr);
    5420:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5424:	48 8b 70 58          	mov    0x58(%rax),%rsi
    5428:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    542c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5430:	b9 00 00 00 00       	mov    $0x0,%ecx
    5435:	48 89 c7             	mov    %rax,%rdi
    5438:	e8 a3 df ff ff       	call   33e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
    if (formatCount != 0)
    543d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    5440:	85 c0                	test   %eax,%eax
    5442:	74 43                	je     5487 <_ZN9rt_vulkan25RenderTriangleApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xa3>
    {
        details.formats.resize(formatCount);
    5444:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5448:	48 83 c0 38          	add    $0x38,%rax
    544c:	8b 55 ec             	mov    -0x14(%rbp),%edx
    544f:	89 d2                	mov    %edx,%edx
    5451:	48 89 d6             	mov    %rdx,%rsi
    5454:	48 89 c7             	mov    %rax,%rdi
    5457:	e8 3c 28 00 00       	call   7c98 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>
        vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount,
    545c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5460:	48 83 c0 38          	add    $0x38,%rax
    5464:	48 89 c7             	mov    %rax,%rdi
    5467:	e8 b2 28 00 00       	call   7d1e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    546c:	48 89 c1             	mov    %rax,%rcx
    546f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5473:	48 8b 70 58          	mov    0x58(%rax),%rsi
    5477:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    547b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    547f:	48 89 c7             	mov    %rax,%rdi
    5482:	e8 59 df ff ff       	call   33e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                             details.formats.data());
    }

    uint32_t presentModeCount;
    vkGetPhysicalDeviceSurfacePresentModesKHR(device, surface, &presentModeCount, nullptr);
    5487:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    548b:	48 8b 70 58          	mov    0x58(%rax),%rsi
    548f:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    5493:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5497:	b9 00 00 00 00       	mov    $0x0,%ecx
    549c:	48 89 c7             	mov    %rax,%rdi
    549f:	e8 4c df ff ff       	call   33f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    if (presentModeCount != 0)
    54a4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    54a7:	85 c0                	test   %eax,%eax
    54a9:	74 5f                	je     550a <_ZN9rt_vulkan25RenderTriangleApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
    {
        details.presentModes.resize(presentModeCount);
    54ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54af:	48 83 c0 50          	add    $0x50,%rax
    54b3:	8b 55 e8             	mov    -0x18(%rbp),%edx
    54b6:	89 d2                	mov    %edx,%edx
    54b8:	48 89 d6             	mov    %rdx,%rsi
    54bb:	48 89 c7             	mov    %rax,%rdi
    54be:	e8 7f 28 00 00       	call   7d42 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>
        vkGetPhysicalDeviceSurfacePresentModesKHR(device, surface, &presentModeCount,
    54c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54c7:	48 83 c0 50          	add    $0x50,%rax
    54cb:	48 89 c7             	mov    %rax,%rdi
    54ce:	e8 f5 28 00 00       	call   7dc8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    54d3:	48 89 c1             	mov    %rax,%rcx
    54d6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    54da:	48 8b 70 58          	mov    0x58(%rax),%rsi
    54de:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    54e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    54e6:	48 89 c7             	mov    %rax,%rdi
    54e9:	e8 02 df ff ff       	call   33f0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
                                                  details.presentModes.data());
    }

    return details;
    54ee:	eb 1a                	jmp    550a <_ZN9rt_vulkan25RenderTriangleApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
}
    54f0:	48 89 c3             	mov    %rax,%rbx
    54f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54f7:	48 89 c7             	mov    %rax,%rdi
    54fa:	e8 25 1c 00 00       	call   7124 <_ZN9rt_vulkan25RenderTriangleApplication23SwapChainSupportDetailsD1Ev>
    54ff:	48 89 d8             	mov    %rbx,%rax
    5502:	48 89 c7             	mov    %rax,%rdi
    5505:	e8 06 e0 ff ff       	call   3510 <_Unwind_Resume@plt>
    return details;
    550a:	90                   	nop
}
    550b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    550f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5513:	c9                   	leave
    5514:	c3                   	ret
    5515:	90                   	nop

0000000000005516 <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T>:

bool rt_vulkan::RenderTriangleApplication::isSuitableDevice(VkPhysicalDevice device)
{
    5516:	55                   	push   %rbp
    5517:	48 89 e5             	mov    %rsp,%rbp
    551a:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    5521:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    5528:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    QueueFamilyIndices indices = findQueueFamilies(device);
    552f:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    5536:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    553d:	48 89 d6             	mov    %rdx,%rsi
    5540:	48 89 c7             	mov    %rax,%rdi
    5543:	e8 ea 02 00 00       	call   5832 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    5548:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    554c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

    bool extensionsSupported = checkDeviceExtensionSupport(device);
    5550:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    5557:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    555e:	48 89 d6             	mov    %rdx,%rsi
    5561:	48 89 c7             	mov    %rax,%rdi
    5564:	e8 4f fc ff ff       	call   51b8 <_ZN9rt_vulkan25RenderTriangleApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    5569:	88 45 fe             	mov    %al,-0x2(%rbp)

    bool swapChainAdequate = false;
    556c:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    if (extensionsSupported)
    5570:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    5574:	74 72                	je     55e8 <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xd2>
    {
        SwapChainSupportDetails swapChainSupport = querySwapChainSupport(device);
    5576:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    557d:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    5584:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    558b:	48 89 ce             	mov    %rcx,%rsi
    558e:	48 89 c7             	mov    %rax,%rdi
    5591:	e8 4e fe ff ff       	call   53e4 <_ZN9rt_vulkan25RenderTriangleApplication21querySwapChainSupportEP18VkPhysicalDevice_T>
        swapChainAdequate = !swapChainSupport.formats.empty() &&
    5596:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    559d:	48 83 c0 38          	add    $0x38,%rax
    55a1:	48 89 c7             	mov    %rax,%rdi
    55a4:	e8 43 28 00 00       	call   7dec <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    55a9:	83 f0 01             	xor    $0x1,%eax
    55ac:	84 c0                	test   %al,%al
    55ae:	74 21                	je     55d1 <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
                            !swapChainSupport.presentModes.empty();
    55b0:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    55b7:	48 83 c0 50          	add    $0x50,%rax
    55bb:	48 89 c7             	mov    %rax,%rdi
    55be:	e8 6b 28 00 00       	call   7e2e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>
    55c3:	83 f0 01             	xor    $0x1,%eax
        swapChainAdequate = !swapChainSupport.formats.empty() &&
    55c6:	84 c0                	test   %al,%al
    55c8:	74 07                	je     55d1 <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
    55ca:	b8 01 00 00 00       	mov    $0x1,%eax
    55cf:	eb 05                	jmp    55d6 <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xc0>
    55d1:	b8 00 00 00 00       	mov    $0x0,%eax
    55d6:	88 45 ff             	mov    %al,-0x1(%rbp)
    }
    55d9:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    55e0:	48 89 c7             	mov    %rax,%rdi
    55e3:	e8 3c 1b 00 00       	call   7124 <_ZN9rt_vulkan25RenderTriangleApplication23SwapChainSupportDetailsD1Ev>

    return indices.isComplete() &&
    55e8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    55ec:	48 89 c7             	mov    %rax,%rdi
    55ef:	e8 e2 19 00 00       	call   6fd6 <_ZN9rt_vulkan25RenderTriangleApplication18QueueFamilyIndices10isCompleteEv>
           extensionsSupported &&
    55f4:	84 c0                	test   %al,%al
    55f6:	74 13                	je     560b <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    return indices.isComplete() &&
    55f8:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    55fc:	74 0d                	je     560b <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
           extensionsSupported &&
    55fe:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    5602:	74 07                	je     560b <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    5604:	b8 01 00 00 00       	mov    $0x1,%eax
    5609:	eb 05                	jmp    5610 <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xfa>
    560b:	b8 00 00 00 00       	mov    $0x0,%eax
           swapChainAdequate;
}
    5610:	c9                   	leave
    5611:	c3                   	ret

0000000000005612 <_ZN9rt_vulkan25RenderTriangleApplication21rateDeviceSuitabilityEP18VkPhysicalDevice_T>:

int rt_vulkan::RenderTriangleApplication::rateDeviceSuitability(
    [[maybe_unused]] VkPhysicalDevice device)
{
    5612:	55                   	push   %rbp
    5613:	48 89 e5             	mov    %rsp,%rbp
    5616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    561a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    return 0;
    561e:	b8 00 00 00 00       	mov    $0x0,%eax
}
    5623:	5d                   	pop    %rbp
    5624:	c3                   	ret
    5625:	90                   	nop

0000000000005626 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv>:

void rt_vulkan::RenderTriangleApplication::selectPhysicalDevice()
{
    5626:	55                   	push   %rbp
    5627:	48 89 e5             	mov    %rsp,%rbp
    562a:	41 54                	push   %r12
    562c:	53                   	push   %rbx
    562d:	48 83 ec 50          	sub    $0x50,%rsp
    5631:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    uint32_t deviceCount = 0;
    5635:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    vkEnumeratePhysicalDevices(instance, &deviceCount, nullptr);
    563c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5640:	48 8b 40 10          	mov    0x10(%rax),%rax
    5644:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    5648:	ba 00 00 00 00       	mov    $0x0,%edx
    564d:	48 89 ce             	mov    %rcx,%rsi
    5650:	48 89 c7             	mov    %rax,%rdi
    5653:	e8 a8 da ff ff       	call   3100 <vkEnumeratePhysicalDevices@plt>

    if (deviceCount == 0)
    5658:	8b 45 d8             	mov    -0x28(%rbp),%eax
    565b:	85 c0                	test   %eax,%eax
    565d:	75 3b                	jne    569a <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0x74>
        throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    565f:	bf 10 00 00 00       	mov    $0x10,%edi
    5664:	e8 77 da ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    5669:	48 89 c3             	mov    %rax,%rbx
    566c:	48 8d 05 c5 cc 00 00 	lea    0xccc5(%rip),%rax        # 12338 <_ZN6__pstl9execution2v1L5unseqE+0xd1>
    5673:	48 89 c6             	mov    %rax,%rsi
    5676:	48 89 df             	mov    %rbx,%rdi
    5679:	e8 32 da ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    567e:	48 8b 05 23 79 01 00 	mov    0x17923(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5685:	48 89 c2             	mov    %rax,%rdx
    5688:	48 8d 05 b1 76 01 00 	lea    0x176b1(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    568f:	48 89 c6             	mov    %rax,%rsi
    5692:	48 89 df             	mov    %rbx,%rdi
    5695:	e8 46 de ff ff       	call   34e0 <__cxa_throw@plt>

    std::vector<VkPhysicalDevice> devices{deviceCount};
    569a:	8b 45 d8             	mov    -0x28(%rbp),%eax
    569d:	89 c3                	mov    %eax,%ebx
    569f:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    56a3:	48 89 c7             	mov    %rax,%rdi
    56a6:	e8 c5 27 00 00       	call   7e70 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    56ab:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    56af:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    56b3:	48 89 de             	mov    %rbx,%rsi
    56b6:	48 89 c7             	mov    %rax,%rdi
    56b9:	e8 ea 27 00 00       	call   7ea8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    56be:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    56c2:	48 89 c7             	mov    %rax,%rdi
    56c5:	e8 c2 27 00 00       	call   7e8c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    vkEnumeratePhysicalDevices(instance, &deviceCount, devices.data());
    56ca:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    56ce:	48 89 c7             	mov    %rax,%rdi
    56d1:	e8 8c 28 00 00       	call   7f62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    56d6:	48 89 c2             	mov    %rax,%rdx
    56d9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    56dd:	48 8b 40 10          	mov    0x10(%rax),%rax
    56e1:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    56e5:	48 89 ce             	mov    %rcx,%rsi
    56e8:	48 89 c7             	mov    %rax,%rdi
    56eb:	e8 10 da ff ff       	call   3100 <vkEnumeratePhysicalDevices@plt>

    for (const auto &device : devices)
    56f0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    56f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    56f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56fc:	48 89 c7             	mov    %rax,%rdi
    56ff:	e8 82 28 00 00       	call   7f86 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    5704:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5708:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    570c:	48 89 c7             	mov    %rax,%rdi
    570f:	e8 98 28 00 00       	call   7fac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    5714:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5718:	eb 47                	jmp    5761 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0x13b>
    571a:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    571e:	48 89 c7             	mov    %rax,%rdi
    5721:	e8 0a 29 00 00       	call   8030 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    5726:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    {
        if (isSuitableDevice(device))
    572a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    572e:	48 8b 10             	mov    (%rax),%rdx
    5731:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5735:	48 89 d6             	mov    %rdx,%rsi
    5738:	48 89 c7             	mov    %rax,%rdi
    573b:	e8 d6 fd ff ff       	call   5516 <_ZN9rt_vulkan25RenderTriangleApplication16isSuitableDeviceEP18VkPhysicalDevice_T>
    5740:	84 c0                	test   %al,%al
    5742:	74 11                	je     5755 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0x12f>
        {
            physicalDevice = device;
    5744:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5748:	48 8b 10             	mov    (%rax),%rdx
    574b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    574f:	48 89 50 40          	mov    %rdx,0x40(%rax)
            break;
    5753:	eb 23                	jmp    5778 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0x152>
    for (const auto &device : devices)
    5755:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    5759:	48 89 c7             	mov    %rax,%rdi
    575c:	e8 af 28 00 00       	call   8010 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    5761:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    5765:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    5769:	48 89 d6             	mov    %rdx,%rsi
    576c:	48 89 c7             	mov    %rax,%rdi
    576f:	e8 61 28 00 00       	call   7fd5 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    5774:	84 c0                	test   %al,%al
    5776:	75 a2                	jne    571a <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0xf4>
        }
    }

    if (physicalDevice == VK_NULL_HANDLE)
    5778:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    577c:	48 8b 40 40          	mov    0x40(%rax),%rax
    5780:	48 85 c0             	test   %rax,%rax
    5783:	75 3b                	jne    57c0 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0x19a>
        throw std::runtime_error("Failed to find a suitable GPU.");
    5785:	bf 10 00 00 00       	mov    $0x10,%edi
    578a:	e8 51 d9 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    578f:	48 89 c3             	mov    %rax,%rbx
    5792:	48 8d 05 cf cb 00 00 	lea    0xcbcf(%rip),%rax        # 12368 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    5799:	48 89 c6             	mov    %rax,%rsi
    579c:	48 89 df             	mov    %rbx,%rdi
    579f:	e8 0c d9 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    57a4:	48 8b 05 fd 77 01 00 	mov    0x177fd(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    57ab:	48 89 c2             	mov    %rax,%rdx
    57ae:	48 8d 05 8b 75 01 00 	lea    0x1758b(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    57b5:	48 89 c6             	mov    %rax,%rsi
    57b8:	48 89 df             	mov    %rbx,%rdi
    57bb:	e8 20 dd ff ff       	call   34e0 <__cxa_throw@plt>

    // std::cout << "Found GPUs with Vulkan support:\n";
    // for (const auto &device : devices)
    //     std::cout << '\t' << device << '\n';
}
    57c0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    57c4:	48 89 c7             	mov    %rax,%rdi
    57c7:	e8 52 27 00 00       	call   7f1e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    57cc:	eb 5a                	jmp    5828 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0x202>
        throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    57ce:	49 89 c4             	mov    %rax,%r12
    57d1:	48 89 df             	mov    %rbx,%rdi
    57d4:	e8 b7 d9 ff ff       	call   3190 <__cxa_free_exception@plt>
    57d9:	4c 89 e0             	mov    %r12,%rax
    57dc:	48 89 c7             	mov    %rax,%rdi
    57df:	e8 2c dd ff ff       	call   3510 <_Unwind_Resume@plt>
    std::vector<VkPhysicalDevice> devices{deviceCount};
    57e4:	48 89 c3             	mov    %rax,%rbx
    57e7:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    57eb:	48 89 c7             	mov    %rax,%rdi
    57ee:	e8 99 26 00 00       	call   7e8c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    57f3:	48 89 d8             	mov    %rbx,%rax
    57f6:	48 89 c7             	mov    %rax,%rdi
    57f9:	e8 12 dd ff ff       	call   3510 <_Unwind_Resume@plt>
        throw std::runtime_error("Failed to find a suitable GPU.");
    57fe:	49 89 c4             	mov    %rax,%r12
    5801:	48 89 df             	mov    %rbx,%rdi
    5804:	e8 87 d9 ff ff       	call   3190 <__cxa_free_exception@plt>
    5809:	4c 89 e3             	mov    %r12,%rbx
    580c:	eb 03                	jmp    5811 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv+0x1eb>
}
    580e:	48 89 c3             	mov    %rax,%rbx
    5811:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5815:	48 89 c7             	mov    %rax,%rdi
    5818:	e8 01 27 00 00       	call   7f1e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    581d:	48 89 d8             	mov    %rbx,%rax
    5820:	48 89 c7             	mov    %rax,%rdi
    5823:	e8 e8 dc ff ff       	call   3510 <_Unwind_Resume@plt>
    5828:	48 83 c4 50          	add    $0x50,%rsp
    582c:	5b                   	pop    %rbx
    582d:	41 5c                	pop    %r12
    582f:	5d                   	pop    %rbp
    5830:	c3                   	ret
    5831:	90                   	nop

0000000000005832 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T>:

rt_vulkan::RenderTriangleApplication::QueueFamilyIndices
rt_vulkan::RenderTriangleApplication::findQueueFamilies(VkPhysicalDevice device)
{
    5832:	55                   	push   %rbp
    5833:	48 89 e5             	mov    %rsp,%rbp
    5836:	53                   	push   %rbx
    5837:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    583e:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    5845:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    QueueFamilyIndices indices{};
    584c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5850:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    uint32_t queueFamilyCount = 0;
    5854:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    585b:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    585f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5866:	ba 00 00 00 00       	mov    $0x0,%edx
    586b:	48 89 ce             	mov    %rcx,%rsi
    586e:	48 89 c7             	mov    %rax,%rdi
    5871:	e8 2a d9 ff ff       	call   31a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

    std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    5876:	8b 45 ac             	mov    -0x54(%rbp),%eax
    5879:	89 c3                	mov    %eax,%ebx
    587b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    587f:	48 89 c7             	mov    %rax,%rdi
    5882:	e8 bb 27 00 00       	call   8042 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    5887:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    588b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    588f:	48 89 de             	mov    %rbx,%rsi
    5892:	48 89 c7             	mov    %rax,%rdi
    5895:	e8 e0 27 00 00       	call   807a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    589a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    589e:	48 89 c7             	mov    %rax,%rdi
    58a1:	e8 b8 27 00 00       	call   805e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, queueFamilies.data());
    58a6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    58aa:	48 89 c7             	mov    %rax,%rdi
    58ad:	e8 82 28 00 00       	call   8134 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    58b2:	48 89 c2             	mov    %rax,%rdx
    58b5:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    58b9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    58c0:	48 89 ce             	mov    %rcx,%rsi
    58c3:	48 89 c7             	mov    %rax,%rdi
    58c6:	e8 d5 d8 ff ff       	call   31a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

    int i = 0;
    58cb:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    for (const auto &queueFamily : queueFamilies)
    58d2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    58d6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    58da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58de:	48 89 c7             	mov    %rax,%rdi
    58e1:	e8 72 28 00 00       	call   8158 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    58e6:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    58ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58ee:	48 89 c7             	mov    %rax,%rdi
    58f1:	e8 88 28 00 00       	call   817e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    58f6:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    58fd:	e9 a6 00 00 00       	jmp    59a8 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x176>
    5902:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5906:	48 89 c7             	mov    %rax,%rdi
    5909:	e8 f4 28 00 00       	call   8202 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    590e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    {
        if (queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT)
    5912:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5916:	8b 00                	mov    (%rax),%eax
    5918:	83 e0 01             	and    $0x1,%eax
    591b:	85 c0                	test   %eax,%eax
    591d:	74 13                	je     5932 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x100>
            indices.graphicsFamily = i;
    591f:	48 8d 55 8c          	lea    -0x74(%rbp),%rdx
    5923:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5927:	48 89 d6             	mov    %rdx,%rsi
    592a:	48 89 c7             	mov    %rax,%rdi
    592d:	e8 e2 28 00 00       	call   8214 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

        VkBool32 presentSupport = false;
    5932:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    5939:	00 00 00 
        vkGetPhysicalDeviceSurfaceSupportKHR(device, i, surface, &presentSupport);
    593c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5943:	48 8b 50 58          	mov    0x58(%rax),%rdx
    5947:	8b 45 8c             	mov    -0x74(%rbp),%eax
    594a:	89 c6                	mov    %eax,%esi
    594c:	48 8d 8d 74 ff ff ff 	lea    -0x8c(%rbp),%rcx
    5953:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    595a:	48 89 c7             	mov    %rax,%rdi
    595d:	e8 9e d9 ff ff       	call   3300 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>

        if (presentSupport)
    5962:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    5968:	85 c0                	test   %eax,%eax
    596a:	74 17                	je     5983 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x151>
            indices.presentFamily = i;
    596c:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    5970:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    5974:	48 83 c2 08          	add    $0x8,%rdx
    5978:	48 89 c6             	mov    %rax,%rsi
    597b:	48 89 d7             	mov    %rdx,%rdi
    597e:	e8 91 28 00 00       	call   8214 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

        if (indices.isComplete())
    5983:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5987:	48 89 c7             	mov    %rax,%rdi
    598a:	e8 47 16 00 00       	call   6fd6 <_ZN9rt_vulkan25RenderTriangleApplication18QueueFamilyIndices10isCompleteEv>
    598f:	84 c0                	test   %al,%al
    5991:	75 35                	jne    59c8 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x196>
            break;

        ++i;
    5993:	8b 45 8c             	mov    -0x74(%rbp),%eax
    5996:	83 c0 01             	add    $0x1,%eax
    5999:	89 45 8c             	mov    %eax,-0x74(%rbp)
    for (const auto &queueFamily : queueFamilies)
    599c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    59a0:	48 89 c7             	mov    %rax,%rdi
    59a3:	e8 3a 28 00 00       	call   81e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    59a8:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
    59af:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    59b3:	48 89 d6             	mov    %rdx,%rsi
    59b6:	48 89 c7             	mov    %rax,%rdi
    59b9:	e8 e9 27 00 00       	call   81a7 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    59be:	84 c0                	test   %al,%al
    59c0:	0f 85 3c ff ff ff    	jne    5902 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0xd0>
    59c6:	eb 01                	jmp    59c9 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x197>
            break;
    59c8:	90                   	nop
    }

    return indices;
    59c9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    59cd:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    59d1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    59d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
}
    59d9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    59dd:	48 89 c7             	mov    %rax,%rdi
    59e0:	e8 0b 27 00 00       	call   80f0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    return indices;
    59e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    59e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    59ed:	eb 34                	jmp    5a23 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x1f1>
    std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    59ef:	48 89 c3             	mov    %rax,%rbx
    59f2:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    59f6:	48 89 c7             	mov    %rax,%rdi
    59f9:	e8 60 26 00 00       	call   805e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    59fe:	48 89 d8             	mov    %rbx,%rax
    5a01:	48 89 c7             	mov    %rax,%rdi
    5a04:	e8 07 db ff ff       	call   3510 <_Unwind_Resume@plt>
}
    5a09:	48 89 c3             	mov    %rax,%rbx
    5a0c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5a10:	48 89 c7             	mov    %rax,%rdi
    5a13:	e8 d8 26 00 00       	call   80f0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    5a18:	48 89 d8             	mov    %rbx,%rax
    5a1b:	48 89 c7             	mov    %rax,%rdi
    5a1e:	e8 ed da ff ff       	call   3510 <_Unwind_Resume@plt>
    5a23:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5a27:	c9                   	leave
    5a28:	c3                   	ret
    5a29:	90                   	nop

0000000000005a2a <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv>:

void rt_vulkan::RenderTriangleApplication::createLogicalDevice()
{
    5a2a:	55                   	push   %rbp
    5a2b:	48 89 e5             	mov    %rsp,%rbp
    5a2e:	41 55                	push   %r13
    5a30:	41 54                	push   %r12
    5a32:	53                   	push   %rbx
    5a33:	48 81 ec 08 02 00 00 	sub    $0x208,%rsp
    5a3a:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
    QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    5a41:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5a48:	48 8b 50 40          	mov    0x40(%rax),%rdx
    5a4c:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5a53:	48 89 d6             	mov    %rdx,%rsi
    5a56:	48 89 c7             	mov    %rax,%rdi
    5a59:	e8 d4 fd ff ff       	call   5832 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    5a5e:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5a62:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)

    std::vector<VkDeviceQueueCreateInfo> queueCreateInfos;
    5a66:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5a6a:	48 89 c7             	mov    %rax,%rdi
    5a6d:	e8 1a 17 00 00       	call   718c <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
    std::set<uint32_t> uniqueQueueFamilies = {indices.graphicsFamily.value(),
    5a72:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5a76:	48 89 c7             	mov    %rax,%rdi
    5a79:	e8 2a 17 00 00       	call   71a8 <_ZNRSt8optionalIjE5valueEv>
    5a7e:	8b 00                	mov    (%rax),%eax
                                              indices.presentFamily.value()};
    5a80:	89 45 c8             	mov    %eax,-0x38(%rbp)
    5a83:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5a87:	48 83 c0 08          	add    $0x8,%rax
    5a8b:	48 89 c7             	mov    %rax,%rdi
    5a8e:	e8 15 17 00 00       	call   71a8 <_ZNRSt8optionalIjE5valueEv>
    5a93:	8b 00                	mov    (%rax),%eax
    5a95:	89 45 cc             	mov    %eax,-0x34(%rbp)
    5a98:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5a9c:	49 89 c4             	mov    %rax,%r12
    5a9f:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    5aa5:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    5aa9:	48 89 c7             	mov    %rax,%rdi
    5aac:	e8 f1 28 00 00       	call   83a2 <_ZNSaIjEC1Ev>
    5ab1:	4c 8d 45 d3          	lea    -0x2d(%rbp),%r8
    5ab5:	48 8d 55 d2          	lea    -0x2e(%rbp),%rdx
    5ab9:	4c 89 e6             	mov    %r12,%rsi
    5abc:	4c 89 ef             	mov    %r13,%rdi
    5abf:	4c 89 e1             	mov    %r12,%rcx
    5ac2:	4c 89 eb             	mov    %r13,%rbx
    5ac5:	48 89 df             	mov    %rbx,%rdi
    5ac8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5acf:	48 89 d1             	mov    %rdx,%rcx
    5ad2:	48 89 fa             	mov    %rdi,%rdx
    5ad5:	48 89 c7             	mov    %rax,%rdi
    5ad8:	e8 fd 28 00 00       	call   83da <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>
    5add:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    5ae1:	48 89 c7             	mov    %rax,%rdi
    5ae4:	e8 d5 28 00 00       	call   83be <_ZNSaIjED1Ev>

    float queuePriority = 1.0f;
    5ae9:	f3 0f 10 05 5f ca 00 	movss  0xca5f(%rip),%xmm0        # 12550 <_ZN6__pstl9execution2v1L5unseqE+0x2e9>
    5af0:	00 
    5af1:	f3 0f 11 85 5c ff ff 	movss  %xmm0,-0xa4(%rbp)
    5af8:	ff 
    for (uint32_t queueFamily : uniqueQueueFamilies)
    5af9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5b00:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5b04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b08:	48 89 c7             	mov    %rax,%rdi
    5b0b:	e8 ea 29 00 00       	call   84fa <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>
    5b10:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    5b17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b1b:	48 89 c7             	mov    %rax,%rdi
    5b1e:	e8 f1 29 00 00       	call   8514 <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>
    5b23:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    5b2a:	eb 7e                	jmp    5baa <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x180>
    5b2c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    5b33:	48 89 c7             	mov    %rax,%rdi
    5b36:	e8 3d 2a 00 00       	call   8578 <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>
    5b3b:	8b 00                	mov    (%rax),%eax
    5b3d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    {
        VkDeviceQueueCreateInfo queueCreateInfo{};
    5b40:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5b44:	0f 29 85 f0 fd ff ff 	movaps %xmm0,-0x210(%rbp)
    5b4b:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
    5b52:	66 0f d6 85 10 fe ff 	movq   %xmm0,-0x1f0(%rbp)
    5b59:	ff 
        queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    5b5a:	c7 85 f0 fd ff ff 02 	movl   $0x2,-0x210(%rbp)
    5b61:	00 00 00 
        queueCreateInfo.queueFamilyIndex = queueFamily;
    5b64:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    5b67:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%rbp)
        queueCreateInfo.queueCount = 1;
    5b6d:	c7 85 08 fe ff ff 01 	movl   $0x1,-0x1f8(%rbp)
    5b74:	00 00 00 
        queueCreateInfo.pQueuePriorities = &queuePriority;
    5b77:	48 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%rax
    5b7e:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
        queueCreateInfos.push_back(queueCreateInfo);
    5b85:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    5b8c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b90:	48 89 d6             	mov    %rdx,%rsi
    5b93:	48 89 c7             	mov    %rax,%rdi
    5b96:	e8 fb 29 00 00       	call   8596 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>
    for (uint32_t queueFamily : uniqueQueueFamilies)
    5b9b:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    5ba2:	48 89 c7             	mov    %rax,%rdi
    5ba5:	e8 a6 29 00 00       	call   8550 <_ZNSt23_Rb_tree_const_iteratorIjEppEv>
    5baa:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    5bb1:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    5bb8:	48 89 d6             	mov    %rdx,%rsi
    5bbb:	48 89 c7             	mov    %rax,%rdi
    5bbe:	e8 6b 29 00 00       	call   852e <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>
    5bc3:	84 c0                	test   %al,%al
    5bc5:	0f 85 61 ff ff ff    	jne    5b2c <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x102>
    }

    VkPhysicalDeviceFeatures deviceFeatures{};
    5bcb:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    5bd2:	b8 00 00 00 00       	mov    $0x0,%eax
    5bd7:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    5bdc:	48 89 d7             	mov    %rdx,%rdi
    5bdf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    5be2:	48 89 fa             	mov    %rdi,%rdx
    5be5:	89 02                	mov    %eax,(%rdx)
    5be7:	48 83 c2 04          	add    $0x4,%rdx

    VkDeviceCreateInfo createInfo{};
    5beb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5bef:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    5bf6:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    5bfd:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    5c04:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    5c0b:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    5c12:	ff 
    createInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    5c13:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    5c1a:	00 00 00 
    createInfo.queueCreateInfoCount = queueCreateInfos.size();
    5c1d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c21:	48 89 c7             	mov    %rax,%rdi
    5c24:	e8 e9 29 00 00       	call   8612 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    5c29:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
    createInfo.pQueueCreateInfos = queueCreateInfos.data();
    5c2f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c33:	48 89 c7             	mov    %rax,%rdi
    5c36:	e8 05 2a 00 00       	call   8640 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>
    5c3b:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    createInfo.pEnabledFeatures = &deviceFeatures;
    5c42:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    5c49:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    createInfo.enabledExtensionCount = static_cast<uint32_t>(deviceExtensions.size());
    5c50:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5c57:	48 83 c0 68          	add    $0x68,%rax
    5c5b:	48 89 c7             	mov    %rax,%rdi
    5c5e:	e8 e1 1a 00 00       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    5c63:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
    createInfo.ppEnabledExtensionNames = deviceExtensions.data();
    5c69:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5c70:	48 83 c0 68          	add    $0x68,%rax
    5c74:	48 89 c7             	mov    %rax,%rdi
    5c77:	e8 10 1b 00 00       	call   778c <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    5c7c:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)

    if (enableValidationLayers)
    5c83:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5c8a:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    5c8e:	84 c0                	test   %al,%al
    5c90:	74 35                	je     5cc7 <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x29d>
    {
        createInfo.enabledLayerCount = static_cast<uint32_t>(validationLayers.size());
    5c92:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5c99:	48 83 c0 18          	add    $0x18,%rax
    5c9d:	48 89 c7             	mov    %rax,%rdi
    5ca0:	e8 9f 1a 00 00       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    5ca5:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
        createInfo.ppEnabledLayerNames = validationLayers.data();
    5cab:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5cb2:	48 83 c0 18          	add    $0x18,%rax
    5cb6:	48 89 c7             	mov    %rax,%rdi
    5cb9:	e8 ce 1a 00 00       	call   778c <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    5cbe:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
    5cc5:	eb 0a                	jmp    5cd1 <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x2a7>
    }
    else
    {
        createInfo.enabledLayerCount = 0;
    5cc7:	c7 85 50 fe ff ff 00 	movl   $0x0,-0x1b0(%rbp)
    5cce:	00 00 00 
    }

    if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) != VK_SUCCESS)
    5cd1:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5cd8:	48 8d 50 48          	lea    0x48(%rax),%rdx
    5cdc:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5ce3:	48 8b 40 40          	mov    0x40(%rax),%rax
    5ce7:	48 8d b5 30 fe ff ff 	lea    -0x1d0(%rbp),%rsi
    5cee:	48 89 d1             	mov    %rdx,%rcx
    5cf1:	ba 00 00 00 00       	mov    $0x0,%edx
    5cf6:	48 89 c7             	mov    %rax,%rdi
    5cf9:	e8 52 d7 ff ff       	call   3450 <vkCreateDevice@plt>
    5cfe:	85 c0                	test   %eax,%eax
    5d00:	0f 95 c0             	setne  %al
    5d03:	84 c0                	test   %al,%al
    5d05:	74 3b                	je     5d42 <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x318>
        throw std::runtime_error("Failed to create logical device.");
    5d07:	bf 10 00 00 00       	mov    $0x10,%edi
    5d0c:	e8 cf d3 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    5d11:	48 89 c3             	mov    %rax,%rbx
    5d14:	48 8d 05 6d c6 00 00 	lea    0xc66d(%rip),%rax        # 12388 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    5d1b:	48 89 c6             	mov    %rax,%rsi
    5d1e:	48 89 df             	mov    %rbx,%rdi
    5d21:	e8 8a d3 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    5d26:	48 8b 05 7b 72 01 00 	mov    0x1727b(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d2d:	48 89 c2             	mov    %rax,%rdx
    5d30:	48 8d 05 09 70 01 00 	lea    0x17009(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d37:	48 89 c6             	mov    %rax,%rsi
    5d3a:	48 89 df             	mov    %rbx,%rdi
    5d3d:	e8 9e d7 ff ff       	call   34e0 <__cxa_throw@plt>

    vkGetDeviceQueue(device, indices.graphicsFamily.value(), 0, &graphicsQueue);
    5d42:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5d49:	48 8d 58 50          	lea    0x50(%rax),%rbx
    5d4d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5d51:	48 89 c7             	mov    %rax,%rdi
    5d54:	e8 4f 14 00 00       	call   71a8 <_ZNRSt8optionalIjE5valueEv>
    5d59:	8b 30                	mov    (%rax),%esi
    5d5b:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5d62:	48 8b 40 48          	mov    0x48(%rax),%rax
    5d66:	48 89 d9             	mov    %rbx,%rcx
    5d69:	ba 00 00 00 00       	mov    $0x0,%edx
    5d6e:	48 89 c7             	mov    %rax,%rdi
    5d71:	e8 8a d6 ff ff       	call   3400 <vkGetDeviceQueue@plt>
    vkGetDeviceQueue(device, indices.presentFamily.value(), 0, &presentQueue);
    5d76:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5d7d:	48 8d 58 60          	lea    0x60(%rax),%rbx
    5d81:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5d85:	48 83 c0 08          	add    $0x8,%rax
    5d89:	48 89 c7             	mov    %rax,%rdi
    5d8c:	e8 17 14 00 00       	call   71a8 <_ZNRSt8optionalIjE5valueEv>
    5d91:	8b 30                	mov    (%rax),%esi
    5d93:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5d9a:	48 8b 40 48          	mov    0x48(%rax),%rax
    5d9e:	48 89 d9             	mov    %rbx,%rcx
    5da1:	ba 00 00 00 00       	mov    $0x0,%edx
    5da6:	48 89 c7             	mov    %rax,%rdi
    5da9:	e8 52 d6 ff ff       	call   3400 <vkGetDeviceQueue@plt>
}
    5dae:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5db5:	48 89 c7             	mov    %rax,%rdi
    5db8:	e8 2f 14 00 00       	call   71ec <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    5dbd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5dc1:	48 89 c7             	mov    %rax,%rdi
    5dc4:	e8 51 25 00 00       	call   831a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    5dc9:	eb 4f                	jmp    5e1a <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x3f0>
                                              indices.presentFamily.value()};
    5dcb:	48 89 c3             	mov    %rax,%rbx
    5dce:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    5dd2:	48 89 c7             	mov    %rax,%rdi
    5dd5:	e8 e4 25 00 00       	call   83be <_ZNSaIjED1Ev>
    5dda:	eb 27                	jmp    5e03 <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x3d9>
        throw std::runtime_error("Failed to create logical device.");
    5ddc:	49 89 c4             	mov    %rax,%r12
    5ddf:	48 89 df             	mov    %rbx,%rdi
    5de2:	e8 a9 d3 ff ff       	call   3190 <__cxa_free_exception@plt>
    5de7:	4c 89 e3             	mov    %r12,%rbx
    5dea:	eb 03                	jmp    5def <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x3c5>
}
    5dec:	48 89 c3             	mov    %rax,%rbx
    5def:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5df6:	48 89 c7             	mov    %rax,%rdi
    5df9:	e8 ee 13 00 00       	call   71ec <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    5dfe:	eb 03                	jmp    5e03 <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv+0x3d9>
    5e00:	48 89 c3             	mov    %rax,%rbx
    5e03:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5e07:	48 89 c7             	mov    %rax,%rdi
    5e0a:	e8 0b 25 00 00       	call   831a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    5e0f:	48 89 d8             	mov    %rbx,%rax
    5e12:	48 89 c7             	mov    %rax,%rdi
    5e15:	e8 f6 d6 ff ff       	call   3510 <_Unwind_Resume@plt>
    5e1a:	48 81 c4 08 02 00 00 	add    $0x208,%rsp
    5e21:	5b                   	pop    %rbx
    5e22:	41 5c                	pop    %r12
    5e24:	41 5d                	pop    %r13
    5e26:	5d                   	pop    %rbp
    5e27:	c3                   	ret

0000000000005e28 <_ZN9rt_vulkan25RenderTriangleApplication13createSurfaceEv>:

void rt_vulkan::RenderTriangleApplication::createSurface()
{
    5e28:	55                   	push   %rbp
    5e29:	48 89 e5             	mov    %rsp,%rbp
    5e2c:	41 54                	push   %r12
    5e2e:	53                   	push   %rbx
    5e2f:	48 83 ec 10          	sub    $0x10,%rsp
    5e33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    if (glfwCreateWindowSurface(instance, window.ref, nullptr, &surface) != VK_SUCCESS)
    5e37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e3b:	48 8d 50 58          	lea    0x58(%rax),%rdx
    5e3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e43:	48 8b 30             	mov    (%rax),%rsi
    5e46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e4a:	48 8b 40 10          	mov    0x10(%rax),%rax
    5e4e:	48 89 d1             	mov    %rdx,%rcx
    5e51:	ba 00 00 00 00       	mov    $0x0,%edx
    5e56:	48 89 c7             	mov    %rax,%rdi
    5e59:	e8 12 d6 ff ff       	call   3470 <glfwCreateWindowSurface@plt>
    5e5e:	85 c0                	test   %eax,%eax
    5e60:	0f 95 c0             	setne  %al
    5e63:	84 c0                	test   %al,%al
    5e65:	74 51                	je     5eb8 <_ZN9rt_vulkan25RenderTriangleApplication13createSurfaceEv+0x90>
        throw std::runtime_error("Failed to create window surface.");
    5e67:	bf 10 00 00 00       	mov    $0x10,%edi
    5e6c:	e8 6f d2 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    5e71:	48 89 c3             	mov    %rax,%rbx
    5e74:	48 8d 05 35 c5 00 00 	lea    0xc535(%rip),%rax        # 123b0 <_ZN6__pstl9execution2v1L5unseqE+0x149>
    5e7b:	48 89 c6             	mov    %rax,%rsi
    5e7e:	48 89 df             	mov    %rbx,%rdi
    5e81:	e8 2a d2 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    5e86:	48 8b 05 1b 71 01 00 	mov    0x1711b(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5e8d:	48 89 c2             	mov    %rax,%rdx
    5e90:	48 8d 05 a9 6e 01 00 	lea    0x16ea9(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5e97:	48 89 c6             	mov    %rax,%rsi
    5e9a:	48 89 df             	mov    %rbx,%rdi
    5e9d:	e8 3e d6 ff ff       	call   34e0 <__cxa_throw@plt>
    5ea2:	49 89 c4             	mov    %rax,%r12
    5ea5:	48 89 df             	mov    %rbx,%rdi
    5ea8:	e8 e3 d2 ff ff       	call   3190 <__cxa_free_exception@plt>
    5ead:	4c 89 e0             	mov    %r12,%rax
    5eb0:	48 89 c7             	mov    %rax,%rdi
    5eb3:	e8 58 d6 ff ff       	call   3510 <_Unwind_Resume@plt>
}
    5eb8:	90                   	nop
    5eb9:	48 83 c4 10          	add    $0x10,%rsp
    5ebd:	5b                   	pop    %rbx
    5ebe:	41 5c                	pop    %r12
    5ec0:	5d                   	pop    %rbp
    5ec1:	c3                   	ret

0000000000005ec2 <_ZN9rt_vulkan25RenderTriangleApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>:

VkSurfaceFormatKHR rt_vulkan::RenderTriangleApplication::selectSwapSurfaceFormat(
    const std::vector<VkSurfaceFormatKHR> &availableFormats)
{
    5ec2:	55                   	push   %rbp
    5ec3:	48 89 e5             	mov    %rsp,%rbp
    5ec6:	48 83 ec 30          	sub    $0x30,%rsp
    5eca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ece:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    for (const auto &availableFormat : availableFormats)
    5ed2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5ed6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ede:	48 89 c7             	mov    %rax,%rdi
    5ee1:	e8 7e 27 00 00       	call   8664 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    5ee6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eee:	48 89 c7             	mov    %rax,%rdi
    5ef1:	e8 94 27 00 00       	call   868a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    5ef6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5efa:	eb 3b                	jmp    5f37 <_ZN9rt_vulkan25RenderTriangleApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x75>
    5efc:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5f00:	48 89 c7             	mov    %rax,%rdi
    5f03:	e8 06 28 00 00       	call   870e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    5f08:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
        if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    5f0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f10:	8b 00                	mov    (%rax),%eax
    5f12:	83 f8 32             	cmp    $0x32,%eax
    5f15:	75 14                	jne    5f2b <_ZN9rt_vulkan25RenderTriangleApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
            availableFormat.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR)
    5f17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f1b:	8b 40 04             	mov    0x4(%rax),%eax
        if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    5f1e:	85 c0                	test   %eax,%eax
    5f20:	75 09                	jne    5f2b <_ZN9rt_vulkan25RenderTriangleApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
            return availableFormat;
    5f22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f26:	48 8b 00             	mov    (%rax),%rax
    5f29:	eb 37                	jmp    5f62 <_ZN9rt_vulkan25RenderTriangleApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0xa0>
    for (const auto &availableFormat : availableFormats)
    5f2b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5f2f:	48 89 c7             	mov    %rax,%rdi
    5f32:	e8 b7 27 00 00       	call   86ee <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    5f37:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    5f3b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5f3f:	48 89 d6             	mov    %rdx,%rsi
    5f42:	48 89 c7             	mov    %rax,%rdi
    5f45:	e8 69 27 00 00       	call   86b3 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    5f4a:	84 c0                	test   %al,%al
    5f4c:	75 ae                	jne    5efc <_ZN9rt_vulkan25RenderTriangleApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x3a>

    return availableFormats[0];
    5f4e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5f52:	be 00 00 00 00       	mov    $0x0,%esi
    5f57:	48 89 c7             	mov    %rax,%rdi
    5f5a:	e8 c1 27 00 00       	call   8720 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    5f5f:	48 8b 00             	mov    (%rax),%rax
}
    5f62:	c9                   	leave
    5f63:	c3                   	ret

0000000000005f64 <_ZN9rt_vulkan25RenderTriangleApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>:

VkPresentModeKHR rt_vulkan::RenderTriangleApplication::selectSwapPresentMode(
    const std::vector<VkPresentModeKHR> &availablePresentModes)
{
    5f64:	55                   	push   %rbp
    5f65:	48 89 e5             	mov    %rsp,%rbp
    5f68:	48 83 ec 30          	sub    $0x30,%rsp
    5f6c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5f70:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    for (const auto &availablePresentMode : availablePresentModes)
    5f74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5f78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5f7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f80:	48 89 c7             	mov    %rax,%rdi
    5f83:	e8 b8 27 00 00       	call   8740 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    5f88:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f90:	48 89 c7             	mov    %rax,%rdi
    5f93:	e8 ce 27 00 00       	call   8766 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    5f98:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5f9c:	eb 2f                	jmp    5fcd <_ZN9rt_vulkan25RenderTriangleApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x69>
    5f9e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5fa2:	48 89 c7             	mov    %rax,%rdi
    5fa5:	e8 40 28 00 00       	call   87ea <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    5faa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
        if (availablePresentMode == VK_PRESENT_MODE_MAILBOX_KHR)
    5fae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5fb2:	8b 00                	mov    (%rax),%eax
    5fb4:	83 f8 01             	cmp    $0x1,%eax
    5fb7:	75 08                	jne    5fc1 <_ZN9rt_vulkan25RenderTriangleApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x5d>
            return availablePresentMode;
    5fb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5fbd:	8b 00                	mov    (%rax),%eax
    5fbf:	eb 28                	jmp    5fe9 <_ZN9rt_vulkan25RenderTriangleApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x85>
    for (const auto &availablePresentMode : availablePresentModes)
    5fc1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5fc5:	48 89 c7             	mov    %rax,%rdi
    5fc8:	e8 fd 27 00 00       	call   87ca <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    5fcd:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    5fd1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5fd5:	48 89 d6             	mov    %rdx,%rsi
    5fd8:	48 89 c7             	mov    %rax,%rdi
    5fdb:	e8 af 27 00 00       	call   878f <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    5fe0:	84 c0                	test   %al,%al
    5fe2:	75 ba                	jne    5f9e <_ZN9rt_vulkan25RenderTriangleApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x3a>

    return VK_PRESENT_MODE_FIFO_KHR;
    5fe4:	b8 02 00 00 00       	mov    $0x2,%eax
}
    5fe9:	c9                   	leave
    5fea:	c3                   	ret
    5feb:	90                   	nop

0000000000005fec <_ZN9rt_vulkan25RenderTriangleApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>:

VkExtent2D rt_vulkan::RenderTriangleApplication::selectSwapExtent(
    const VkSurfaceCapabilitiesKHR &capabilities)
{
    5fec:	55                   	push   %rbp
    5fed:	48 89 e5             	mov    %rsp,%rbp
    5ff0:	53                   	push   %rbx
    5ff1:	48 83 ec 28          	sub    $0x28,%rsp
    5ff5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ff9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    5ffd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6001:	8b 58 08             	mov    0x8(%rax),%ebx
    6004:	e8 c1 0f 00 00       	call   6fca <_ZNSt14numeric_limitsIjE3maxEv>
    6009:	39 c3                	cmp    %eax,%ebx
    600b:	0f 95 c0             	setne  %al
    600e:	84 c0                	test   %al,%al
    6010:	74 0a                	je     601c <_ZN9rt_vulkan25RenderTriangleApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0x30>
        return capabilities.currentExtent;
    6012:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6016:	48 8b 40 08          	mov    0x8(%rax),%rax
    601a:	eb 76                	jmp    6092 <_ZN9rt_vulkan25RenderTriangleApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0xa6>
    else
    {
        int width, height;
        glfwGetFramebufferSize(window.ref, &width, &height);
    601c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6020:	48 8b 00             	mov    (%rax),%rax
    6023:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6027:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
    602b:	48 89 ce             	mov    %rcx,%rsi
    602e:	48 89 c7             	mov    %rax,%rdi
    6031:	e8 5a d4 ff ff       	call   3490 <glfwGetFramebufferSize@plt>

        VkExtent2D actualExtent = {
            static_cast<uint32_t>(width),
    6036:	8b 45 ec             	mov    -0x14(%rbp),%eax
            static_cast<uint32_t>(height)};
    6039:	89 45 e0             	mov    %eax,-0x20(%rbp)
    603c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    603f:	89 45 e4             	mov    %eax,-0x1c(%rbp)

        actualExtent.width = std::clamp(actualExtent.width,
                                        capabilities.minImageExtent.width,
                                        capabilities.maxImageExtent.width);
    6042:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6046:	48 8d 50 18          	lea    0x18(%rax),%rdx
                                        capabilities.minImageExtent.width,
    604a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    604e:	48 8d 48 10          	lea    0x10(%rax),%rcx
        actualExtent.width = std::clamp(actualExtent.width,
    6052:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6056:	48 89 ce             	mov    %rcx,%rsi
    6059:	48 89 c7             	mov    %rax,%rdi
    605c:	e8 9a 27 00 00       	call   87fb <_ZSt5clampIjERKT_S2_S2_S2_>
    6061:	8b 00                	mov    (%rax),%eax
    6063:	89 45 e0             	mov    %eax,-0x20(%rbp)

        actualExtent.height = std::clamp(actualExtent.height,
                                         capabilities.minImageExtent.height,
                                         capabilities.maxImageExtent.height);
    6066:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    606a:	48 8d 50 1c          	lea    0x1c(%rax),%rdx
                                         capabilities.minImageExtent.height,
    606e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6072:	48 8d 48 14          	lea    0x14(%rax),%rcx
        actualExtent.height = std::clamp(actualExtent.height,
    6076:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    607a:	48 83 c0 04          	add    $0x4,%rax
    607e:	48 89 ce             	mov    %rcx,%rsi
    6081:	48 89 c7             	mov    %rax,%rdi
    6084:	e8 72 27 00 00       	call   87fb <_ZSt5clampIjERKT_S2_S2_S2_>
    6089:	8b 00                	mov    (%rax),%eax
    608b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
        return actualExtent;
    608e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
}
    6092:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6096:	c9                   	leave
    6097:	c3                   	ret

0000000000006098 <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv>:

void rt_vulkan::RenderTriangleApplication::createSwapChain()
{
    6098:	55                   	push   %rbp
    6099:	48 89 e5             	mov    %rsp,%rbp
    609c:	41 54                	push   %r12
    609e:	53                   	push   %rbx
    609f:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    60a6:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    SwapChainSupportDetails swapChainSupport = querySwapChainSupport(physicalDevice);
    60ad:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    60b4:	48 8b 50 40          	mov    0x40(%rax),%rdx
    60b8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    60bc:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
    60c3:	48 89 ce             	mov    %rcx,%rsi
    60c6:	48 89 c7             	mov    %rax,%rdi
    60c9:	e8 16 f3 ff ff       	call   53e4 <_ZN9rt_vulkan25RenderTriangleApplication21querySwapChainSupportEP18VkPhysicalDevice_T>

    VkSurfaceFormatKHR surfaceFormat = selectSwapSurfaceFormat(swapChainSupport.formats);
    60ce:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    60d2:	48 8d 50 38          	lea    0x38(%rax),%rdx
    60d6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    60dd:	48 89 d6             	mov    %rdx,%rsi
    60e0:	48 89 c7             	mov    %rax,%rdi
    60e3:	e8 da fd ff ff       	call   5ec2 <_ZN9rt_vulkan25RenderTriangleApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>
    60e8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    VkPresentModeKHR presentMode = selectSwapPresentMode(swapChainSupport.presentModes);
    60ef:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    60f3:	48 8d 50 50          	lea    0x50(%rax),%rdx
    60f7:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    60fe:	48 89 d6             	mov    %rdx,%rsi
    6101:	48 89 c7             	mov    %rax,%rdi
    6104:	e8 5b fe ff ff       	call   5f64 <_ZN9rt_vulkan25RenderTriangleApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>
    6109:	89 45 ec             	mov    %eax,-0x14(%rbp)
    VkExtent2D extent = selectSwapExtent(swapChainSupport.capabilities);
    610c:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    6110:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6117:	48 89 d6             	mov    %rdx,%rsi
    611a:	48 89 c7             	mov    %rax,%rdi
    611d:	e8 ca fe ff ff       	call   5fec <_ZN9rt_vulkan25RenderTriangleApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>
    6122:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    uint32_t imageCount = swapChainSupport.capabilities.minImageCount + 1;
    6129:	8b 45 80             	mov    -0x80(%rbp),%eax
    612c:	83 c0 01             	add    $0x1,%eax
    612f:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

    if (swapChainSupport.capabilities.maxImageCount > 0 &&
    6135:	8b 45 84             	mov    -0x7c(%rbp),%eax
    6138:	85 c0                	test   %eax,%eax
    613a:	74 16                	je     6152 <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv+0xba>
        imageCount > swapChainSupport.capabilities.maxImageCount)
    613c:	8b 55 84             	mov    -0x7c(%rbp),%edx
    613f:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    if (swapChainSupport.capabilities.maxImageCount > 0 &&
    6145:	39 c2                	cmp    %eax,%edx
    6147:	73 09                	jae    6152 <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv+0xba>
        imageCount = swapChainSupport.capabilities.maxImageCount;
    6149:	8b 45 84             	mov    -0x7c(%rbp),%eax
    614c:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

    VkSwapchainCreateInfoKHR createInfo{};
    6152:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    6159:	b8 00 00 00 00       	mov    $0x0,%eax
    615e:	b9 0d 00 00 00       	mov    $0xd,%ecx
    6163:	48 89 d7             	mov    %rdx,%rdi
    6166:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    createInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    6169:	c7 85 00 ff ff ff e8 	movl   $0x3b9acde8,-0x100(%rbp)
    6170:	cd 9a 3b 
    createInfo.surface = surface;
    6173:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    617a:	48 8b 40 58          	mov    0x58(%rax),%rax
    617e:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    createInfo.minImageCount = imageCount;
    6185:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    618b:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    createInfo.imageFormat = surfaceFormat.format;
    6191:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    6197:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    createInfo.imageColorSpace = surfaceFormat.colorSpace;
    619d:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    61a3:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
    createInfo.imageExtent = extent;
    61a9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    61b0:	48 89 85 2c ff ff ff 	mov    %rax,-0xd4(%rbp)
    createInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    61b7:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    61be:	00 00 00 

    QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    61c1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    61c8:	48 8b 50 40          	mov    0x40(%rax),%rdx
    61cc:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    61d3:	48 89 d6             	mov    %rdx,%rsi
    61d6:	48 89 c7             	mov    %rax,%rdi
    61d9:	e8 54 f6 ff ff       	call   5832 <_ZN9rt_vulkan25RenderTriangleApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    61de:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    61e5:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
    uint32_t QueueFamilyIndices[] = {indices.graphicsFamily.value(),
    61ec:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    61f3:	48 89 c7             	mov    %rax,%rdi
    61f6:	e8 ad 0f 00 00       	call   71a8 <_ZNRSt8optionalIjE5valueEv>
    61fb:	8b 00                	mov    (%rax),%eax
                                     indices.presentFamily.value()};
    61fd:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%rbp)
    6203:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    620a:	48 83 c0 08          	add    $0x8,%rax
    620e:	48 89 c7             	mov    %rax,%rdi
    6211:	e8 92 0f 00 00       	call   71a8 <_ZNRSt8optionalIjE5valueEv>
    6216:	8b 00                	mov    (%rax),%eax
    6218:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)

    if (indices.graphicsFamily != indices.presentFamily)
    621e:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    6225:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6229:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    6230:	48 89 d6             	mov    %rdx,%rsi
    6233:	48 89 c7             	mov    %rax,%rdi
    6236:	e8 22 26 00 00       	call   885d <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>
    623b:	84 c0                	test   %al,%al
    623d:	74 24                	je     6263 <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv+0x1cb>
    {
        createInfo.imageSharingMode = VK_SHARING_MODE_CONCURRENT;
    623f:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%rbp)
    6246:	00 00 00 
        createInfo.queueFamilyIndexCount = 2;
    6249:	c7 85 40 ff ff ff 02 	movl   $0x2,-0xc0(%rbp)
    6250:	00 00 00 
        createInfo.pQueueFamilyIndices = QueueFamilyIndices;
    6253:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    625a:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    6261:	eb 1f                	jmp    6282 <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv+0x1ea>
    }
    else
    {
        createInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    6263:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    626a:	00 00 00 
        createInfo.queueFamilyIndexCount = 0;
    626d:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    6274:	00 00 00 
        createInfo.pQueueFamilyIndices = nullptr;
    6277:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
    627e:	00 00 00 00 
    }

    createInfo.preTransform = swapChainSupport.capabilities.currentTransform;
    6282:	8b 45 a8             	mov    -0x58(%rbp),%eax
    6285:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
    createInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    628b:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
    6292:	00 00 00 
    createInfo.presentMode = presentMode;
    6295:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6298:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
    createInfo.clipped = VK_TRUE;
    629e:	c7 85 5c ff ff ff 01 	movl   $0x1,-0xa4(%rbp)
    62a5:	00 00 00 
    createInfo.oldSwapchain = VK_NULL_HANDLE;
    62a8:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
    62af:	00 00 00 00 

    if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) != VK_SUCCESS)
    62b3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    62ba:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
    62c1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    62c8:	48 8b 40 48          	mov    0x48(%rax),%rax
    62cc:	48 8d b5 00 ff ff ff 	lea    -0x100(%rbp),%rsi
    62d3:	48 89 d1             	mov    %rdx,%rcx
    62d6:	ba 00 00 00 00       	mov    $0x0,%edx
    62db:	48 89 c7             	mov    %rax,%rdi
    62de:	e8 9d d0 ff ff       	call   3380 <vkCreateSwapchainKHR@plt>
    62e3:	85 c0                	test   %eax,%eax
    62e5:	0f 95 c0             	setne  %al
    62e8:	84 c0                	test   %al,%al
    62ea:	74 3b                	je     6327 <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv+0x28f>
        throw std::runtime_error("Failed to create swap chain.");
    62ec:	bf 10 00 00 00       	mov    $0x10,%edi
    62f1:	e8 ea cd ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    62f6:	48 89 c3             	mov    %rax,%rbx
    62f9:	48 8d 05 d1 c0 00 00 	lea    0xc0d1(%rip),%rax        # 123d1 <_ZN6__pstl9execution2v1L5unseqE+0x16a>
    6300:	48 89 c6             	mov    %rax,%rsi
    6303:	48 89 df             	mov    %rbx,%rdi
    6306:	e8 a5 cd ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    630b:	48 8b 05 96 6c 01 00 	mov    0x16c96(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6312:	48 89 c2             	mov    %rax,%rdx
    6315:	48 8d 05 24 6a 01 00 	lea    0x16a24(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    631c:	48 89 c6             	mov    %rax,%rsi
    631f:	48 89 df             	mov    %rbx,%rdi
    6322:	e8 b9 d1 ff ff       	call   34e0 <__cxa_throw@plt>

    vkGetSwapchainImagesKHR(device, swapChain, &imageCount, nullptr);
    6327:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    632e:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
    6335:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    633c:	48 8b 40 48          	mov    0x48(%rax),%rax
    6340:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    6347:	b9 00 00 00 00       	mov    $0x0,%ecx
    634c:	48 89 c7             	mov    %rax,%rdi
    634f:	e8 dc cd ff ff       	call   3130 <vkGetSwapchainImagesKHR@plt>
    swapChainImages.resize(imageCount);
    6354:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    635b:	48 05 88 00 00 00    	add    $0x88,%rax
    6361:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    6367:	89 d2                	mov    %edx,%edx
    6369:	48 89 d6             	mov    %rdx,%rsi
    636c:	48 89 c7             	mov    %rax,%rdi
    636f:	e8 5a 25 00 00       	call   88ce <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>
    vkGetSwapchainImagesKHR(device, swapChain, &imageCount, swapChainImages.data());
    6374:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    637b:	48 05 88 00 00 00    	add    $0x88,%rax
    6381:	48 89 c7             	mov    %rax,%rdi
    6384:	e8 cb 25 00 00       	call   8954 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    6389:	48 89 c1             	mov    %rax,%rcx
    638c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6393:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
    639a:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    63a1:	48 8b 40 48          	mov    0x48(%rax),%rax
    63a5:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    63ac:	48 89 c7             	mov    %rax,%rdi
    63af:	e8 7c cd ff ff       	call   3130 <vkGetSwapchainImagesKHR@plt>

    swapChainImageFormat = surfaceFormat.format;
    63b4:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    63ba:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    63c1:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
    swapChainExtent = extent;
    63c7:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    63ce:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    63d5:	48 89 90 a4 00 00 00 	mov    %rdx,0xa4(%rax)
}
    63dc:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    63e0:	48 89 c7             	mov    %rax,%rdi
    63e3:	e8 3c 0d 00 00       	call   7124 <_ZN9rt_vulkan25RenderTriangleApplication23SwapChainSupportDetailsD1Ev>
    63e8:	eb 2a                	jmp    6414 <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv+0x37c>
        throw std::runtime_error("Failed to create swap chain.");
    63ea:	49 89 c4             	mov    %rax,%r12
    63ed:	48 89 df             	mov    %rbx,%rdi
    63f0:	e8 9b cd ff ff       	call   3190 <__cxa_free_exception@plt>
    63f5:	4c 89 e3             	mov    %r12,%rbx
    63f8:	eb 03                	jmp    63fd <_ZN9rt_vulkan25RenderTriangleApplication15createSwapChainEv+0x365>
}
    63fa:	48 89 c3             	mov    %rax,%rbx
    63fd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6401:	48 89 c7             	mov    %rax,%rdi
    6404:	e8 1b 0d 00 00       	call   7124 <_ZN9rt_vulkan25RenderTriangleApplication23SwapChainSupportDetailsD1Ev>
    6409:	48 89 d8             	mov    %rbx,%rax
    640c:	48 89 c7             	mov    %rax,%rdi
    640f:	e8 fc d0 ff ff       	call   3510 <_Unwind_Resume@plt>
    6414:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
    641b:	5b                   	pop    %rbx
    641c:	41 5c                	pop    %r12
    641e:	5d                   	pop    %rbp
    641f:	c3                   	ret

0000000000006420 <_ZN9rt_vulkan25RenderTriangleApplication15createImageViewEv>:

void rt_vulkan::RenderTriangleApplication::createImageView()
{
    6420:	55                   	push   %rbp
    6421:	48 89 e5             	mov    %rsp,%rbp
    6424:	41 54                	push   %r12
    6426:	53                   	push   %rbx
    6427:	48 83 ec 70          	sub    $0x70,%rsp
    642b:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    swapChainImageViews.resize(swapChainImages.size());
    642f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6433:	48 8d 98 b0 00 00 00 	lea    0xb0(%rax),%rbx
    643a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    643e:	48 05 88 00 00 00    	add    $0x88,%rax
    6444:	48 89 c7             	mov    %rax,%rdi
    6447:	e8 2c 25 00 00       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    644c:	48 89 c6             	mov    %rax,%rsi
    644f:	48 89 df             	mov    %rbx,%rdi
    6452:	e8 45 25 00 00       	call   899c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
    for (size_t i = 0; i < swapChainImages.size(); i++)
    6457:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    645e:	00 
    645f:	e9 15 01 00 00       	jmp    6579 <_ZN9rt_vulkan25RenderTriangleApplication15createImageViewEv+0x159>
    {
        VkImageViewCreateInfo createInfo{};
    6464:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6468:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    646c:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    6470:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    6474:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    6478:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
        createInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    647c:	c7 45 90 0f 00 00 00 	movl   $0xf,-0x70(%rbp)
        createInfo.image = swapChainImages[i];
    6483:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6487:	48 8d 90 88 00 00 00 	lea    0x88(%rax),%rdx
    648e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6492:	48 89 c6             	mov    %rax,%rsi
    6495:	48 89 d7             	mov    %rdx,%rdi
    6498:	e8 85 25 00 00       	call   8a22 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    649d:	48 8b 00             	mov    (%rax),%rax
    64a0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
        createInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    64a4:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
        createInfo.format = swapChainImageFormat;
    64ab:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    64af:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
    64b5:	89 45 b4             	mov    %eax,-0x4c(%rbp)

        createInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    64b8:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
        createInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    64bf:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
        createInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    64c6:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
        createInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    64cd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)

        createInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    64d4:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
        createInfo.subresourceRange.baseArrayLayer = 0;
    64db:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
        createInfo.subresourceRange.levelCount = 1;
    64e2:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
        createInfo.subresourceRange.baseArrayLayer = 0;
    64e9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
        createInfo.subresourceRange.layerCount = 1;
    64f0:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)

        if (vkCreateImageView(device, &createInfo, nullptr, &swapChainImageViews[i]) != VK_SUCCESS)
    64f7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    64fb:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
    6502:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6506:	48 89 c6             	mov    %rax,%rsi
    6509:	48 89 d7             	mov    %rdx,%rdi
    650c:	e8 31 25 00 00       	call   8a42 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    6511:	48 89 c2             	mov    %rax,%rdx
    6514:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6518:	48 8b 40 48          	mov    0x48(%rax),%rax
    651c:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
    6520:	48 89 d1             	mov    %rdx,%rcx
    6523:	ba 00 00 00 00       	mov    $0x0,%edx
    6528:	48 89 c7             	mov    %rax,%rdi
    652b:	e8 90 cd ff ff       	call   32c0 <vkCreateImageView@plt>
    6530:	85 c0                	test   %eax,%eax
    6532:	0f 95 c0             	setne  %al
    6535:	84 c0                	test   %al,%al
    6537:	74 3b                	je     6574 <_ZN9rt_vulkan25RenderTriangleApplication15createImageViewEv+0x154>
            throw std::runtime_error("Failed to create image view.");
    6539:	bf 10 00 00 00       	mov    $0x10,%edi
    653e:	e8 9d cb ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    6543:	48 89 c3             	mov    %rax,%rbx
    6546:	48 8d 05 a1 be 00 00 	lea    0xbea1(%rip),%rax        # 123ee <_ZN6__pstl9execution2v1L5unseqE+0x187>
    654d:	48 89 c6             	mov    %rax,%rsi
    6550:	48 89 df             	mov    %rbx,%rdi
    6553:	e8 58 cb ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    6558:	48 8b 05 49 6a 01 00 	mov    0x16a49(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    655f:	48 89 c2             	mov    %rax,%rdx
    6562:	48 8d 05 d7 67 01 00 	lea    0x167d7(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6569:	48 89 c6             	mov    %rax,%rsi
    656c:	48 89 df             	mov    %rbx,%rdi
    656f:	e8 6c cf ff ff       	call   34e0 <__cxa_throw@plt>
    for (size_t i = 0; i < swapChainImages.size(); i++)
    6574:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    6579:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    657d:	48 05 88 00 00 00    	add    $0x88,%rax
    6583:	48 89 c7             	mov    %rax,%rdi
    6586:	e8 ed 23 00 00       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    658b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    658f:	0f 92 c0             	setb   %al
    6592:	84 c0                	test   %al,%al
    6594:	0f 85 ca fe ff ff    	jne    6464 <_ZN9rt_vulkan25RenderTriangleApplication15createImageViewEv+0x44>
    }
}
    659a:	eb 16                	jmp    65b2 <_ZN9rt_vulkan25RenderTriangleApplication15createImageViewEv+0x192>
            throw std::runtime_error("Failed to create image view.");
    659c:	49 89 c4             	mov    %rax,%r12
    659f:	48 89 df             	mov    %rbx,%rdi
    65a2:	e8 e9 cb ff ff       	call   3190 <__cxa_free_exception@plt>
    65a7:	4c 89 e0             	mov    %r12,%rax
    65aa:	48 89 c7             	mov    %rax,%rdi
    65ad:	e8 5e cf ff ff       	call   3510 <_Unwind_Resume@plt>
}
    65b2:	48 83 c4 70          	add    $0x70,%rsp
    65b6:	5b                   	pop    %rbx
    65b7:	41 5c                	pop    %r12
    65b9:	5d                   	pop    %rbp
    65ba:	c3                   	ret
    65bb:	90                   	nop

00000000000065bc <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

std::vector<char> rt_vulkan::RenderTriangleApplication::readShader(const std::string &filePath)
{
    65bc:	55                   	push   %rbp
    65bd:	48 89 e5             	mov    %rsp,%rbp
    65c0:	41 54                	push   %r12
    65c2:	53                   	push   %rbx
    65c3:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
    65ca:	48 89 bd 98 fd ff ff 	mov    %rdi,-0x268(%rbp)
    65d1:	48 89 b5 90 fd ff ff 	mov    %rsi,-0x270(%rbp)
    65d8:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
    std::ifstream file(filePath, std::ios::ate | std::ios::binary);
    65df:	be 04 00 00 00       	mov    $0x4,%esi
    65e4:	bf 02 00 00 00       	mov    $0x2,%edi
    65e9:	e8 ec 08 00 00       	call   6eda <_ZStorSt13_Ios_OpenmodeS_>
    65ee:	89 c2                	mov    %eax,%edx
    65f0:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
    65f7:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    65fe:	48 89 ce             	mov    %rcx,%rsi
    6601:	48 89 c7             	mov    %rax,%rdi
    6604:	e8 a7 ce ff ff       	call   34b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>

    if (!file.is_open())
    6609:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6610:	48 89 c7             	mov    %rax,%rdi
    6613:	e8 88 ce ff ff       	call   34a0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    6618:	83 f0 01             	xor    $0x1,%eax
    661b:	84 c0                	test   %al,%al
    661d:	74 3b                	je     665a <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
        throw std::runtime_error("Failed to open shader file");
    661f:	bf 10 00 00 00       	mov    $0x10,%edi
    6624:	e8 b7 ca ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    6629:	48 89 c3             	mov    %rax,%rbx
    662c:	48 8d 05 d8 bd 00 00 	lea    0xbdd8(%rip),%rax        # 1240b <_ZN6__pstl9execution2v1L5unseqE+0x1a4>
    6633:	48 89 c6             	mov    %rax,%rsi
    6636:	48 89 df             	mov    %rbx,%rdi
    6639:	e8 72 ca ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    663e:	48 8b 05 63 69 01 00 	mov    0x16963(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6645:	48 89 c2             	mov    %rax,%rdx
    6648:	48 8d 05 f1 66 01 00 	lea    0x166f1(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    664f:	48 89 c6             	mov    %rax,%rsi
    6652:	48 89 df             	mov    %rbx,%rdi
    6655:	e8 86 ce ff ff       	call   34e0 <__cxa_throw@plt>

    size_t fileSize = static_cast<size_t>(file.tellg());
    665a:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6661:	48 89 c7             	mov    %rax,%rdi
    6664:	e8 87 ce ff ff       	call   34f0 <_ZNSi5tellgEv@plt>
    6669:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    666d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    6671:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6675:	48 89 c7             	mov    %rax,%rdi
    6678:	e8 e5 23 00 00       	call   8a62 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    667d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::vector<char> buffer(fileSize);
    6681:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6685:	48 89 c7             	mov    %rax,%rdi
    6688:	e8 93 ce ff ff       	call   3520 <_ZNSaIcEC1Ev@plt>
    668d:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    6691:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6695:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    669c:	48 89 ce             	mov    %rcx,%rsi
    669f:	48 89 c7             	mov    %rax,%rdi
    66a2:	e8 cd 23 00 00       	call   8a74 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    66a7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    66ab:	48 89 c7             	mov    %rax,%rdi
    66ae:	e8 5d cc ff ff       	call   3310 <_ZNSaIcED1Ev@plt>

    file.seekg(0);
    66b3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    66b7:	be 00 00 00 00       	mov    $0x0,%esi
    66bc:	48 89 c7             	mov    %rax,%rdi
    66bf:	e8 6a 24 00 00       	call   8b2e <_ZNSt4fposI11__mbstate_tEC1El>
    66c4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    66c8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    66cc:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    66d3:	48 89 ce             	mov    %rcx,%rsi
    66d6:	48 89 c7             	mov    %rax,%rdi
    66d9:	e8 f2 cc ff ff       	call   33d0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
    file.read(buffer.data(), fileSize);
    66de:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    66e2:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    66e9:	48 89 c7             	mov    %rax,%rdi
    66ec:	e8 6d 24 00 00       	call   8b5e <_ZNSt6vectorIcSaIcEE4dataEv>
    66f1:	48 89 c1             	mov    %rax,%rcx
    66f4:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    66fb:	48 89 da             	mov    %rbx,%rdx
    66fe:	48 89 ce             	mov    %rcx,%rsi
    6701:	48 89 c7             	mov    %rax,%rdi
    6704:	e8 b7 cc ff ff       	call   33c0 <_ZNSi4readEPcl@plt>

    file.close();
    6709:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6710:	48 89 c7             	mov    %rax,%rdi
    6713:	e8 48 c9 ff ff       	call   3060 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>
    return buffer;
    6718:	90                   	nop
}
    6719:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6720:	48 89 c7             	mov    %rax,%rdi
    6723:	e8 48 c9 ff ff       	call   3070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    return buffer;
    6728:	eb 52                	jmp    677c <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c0>
        throw std::runtime_error("Failed to open shader file");
    672a:	49 89 c4             	mov    %rax,%r12
    672d:	48 89 df             	mov    %rbx,%rdi
    6730:	e8 5b ca ff ff       	call   3190 <__cxa_free_exception@plt>
    6735:	4c 89 e3             	mov    %r12,%rbx
    6738:	eb 28                	jmp    6762 <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
    std::vector<char> buffer(fileSize);
    673a:	48 89 c3             	mov    %rax,%rbx
    673d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6741:	48 89 c7             	mov    %rax,%rdi
    6744:	e8 c7 cb ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
    6749:	eb 17                	jmp    6762 <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
}
    674b:	48 89 c3             	mov    %rax,%rbx
    674e:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    6755:	48 89 c7             	mov    %rax,%rdi
    6758:	e8 8d 23 00 00       	call   8aea <_ZNSt6vectorIcSaIcEED1Ev>
    675d:	eb 03                	jmp    6762 <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
    675f:	48 89 c3             	mov    %rax,%rbx
    6762:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6769:	48 89 c7             	mov    %rax,%rdi
    676c:	e8 ff c8 ff ff       	call   3070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    6771:	48 89 d8             	mov    %rbx,%rax
    6774:	48 89 c7             	mov    %rax,%rdi
    6777:	e8 94 cd ff ff       	call   3510 <_Unwind_Resume@plt>
    677c:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    6783:	48 81 c4 70 02 00 00 	add    $0x270,%rsp
    678a:	5b                   	pop    %rbx
    678b:	41 5c                	pop    %r12
    678d:	5d                   	pop    %rbp
    678e:	c3                   	ret
    678f:	90                   	nop

0000000000006790 <_ZN9rt_vulkan25RenderTriangleApplication18createShaderModuleERKSt6vectorIcSaIcEE>:

VkShaderModule rt_vulkan::RenderTriangleApplication::createShaderModule(
    const std::vector<char> &code)
{
    6790:	55                   	push   %rbp
    6791:	48 89 e5             	mov    %rsp,%rbp
    6794:	41 54                	push   %r12
    6796:	53                   	push   %rbx
    6797:	48 83 ec 50          	sub    $0x50,%rsp
    679b:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    679f:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    VkShaderModuleCreateInfo createInfo{};
    67a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    67a7:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    67ab:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    67af:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
    createInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    67b4:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
    createInfo.codeSize = code.size();
    67bb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    67bf:	48 89 c7             	mov    %rax,%rdi
    67c2:	e8 ff 23 00 00       	call   8bc6 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    67c7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());
    67cb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    67cf:	48 89 c7             	mov    %rax,%rdi
    67d2:	e8 0f 24 00 00       	call   8be6 <_ZNKSt6vectorIcSaIcEE4dataEv>
    67d7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    VkShaderModule shaderModule;
    if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) != VK_SUCCESS)
    67db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    67df:	48 8b 40 48          	mov    0x48(%rax),%rax
    67e3:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    67e7:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    67eb:	48 89 d1             	mov    %rdx,%rcx
    67ee:	ba 00 00 00 00       	mov    $0x0,%edx
    67f3:	48 89 c7             	mov    %rax,%rdi
    67f6:	e8 d5 c9 ff ff       	call   31d0 <vkCreateShaderModule@plt>
    67fb:	85 c0                	test   %eax,%eax
    67fd:	0f 95 c0             	setne  %al
    6800:	84 c0                	test   %al,%al
    6802:	74 3b                	je     683f <_ZN9rt_vulkan25RenderTriangleApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xaf>
        throw std::runtime_error("Failed to create shader module.");
    6804:	bf 10 00 00 00       	mov    $0x10,%edi
    6809:	e8 d2 c8 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    680e:	48 89 c3             	mov    %rax,%rbx
    6811:	48 8d 05 10 bc 00 00 	lea    0xbc10(%rip),%rax        # 12428 <_ZN6__pstl9execution2v1L5unseqE+0x1c1>
    6818:	48 89 c6             	mov    %rax,%rsi
    681b:	48 89 df             	mov    %rbx,%rdi
    681e:	e8 8d c8 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    6823:	48 8b 05 7e 67 01 00 	mov    0x1677e(%rip),%rax        # 1cfa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    682a:	48 89 c2             	mov    %rax,%rdx
    682d:	48 8d 05 0c 65 01 00 	lea    0x1650c(%rip),%rax        # 1cd40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6834:	48 89 c6             	mov    %rax,%rsi
    6837:	48 89 df             	mov    %rbx,%rdi
    683a:	e8 a1 cc ff ff       	call   34e0 <__cxa_throw@plt>

    return shaderModule;
    683f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6843:	eb 16                	jmp    685b <_ZN9rt_vulkan25RenderTriangleApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xcb>
        throw std::runtime_error("Failed to create shader module.");
    6845:	49 89 c4             	mov    %rax,%r12
    6848:	48 89 df             	mov    %rbx,%rdi
    684b:	e8 40 c9 ff ff       	call   3190 <__cxa_free_exception@plt>
    6850:	4c 89 e0             	mov    %r12,%rax
    6853:	48 89 c7             	mov    %rax,%rdi
    6856:	e8 b5 cc ff ff       	call   3510 <_Unwind_Resume@plt>
}
    685b:	48 83 c4 50          	add    $0x50,%rsp
    685f:	5b                   	pop    %rbx
    6860:	41 5c                	pop    %r12
    6862:	5d                   	pop    %rbp
    6863:	c3                   	ret

0000000000006864 <_ZN9rt_vulkan25RenderTriangleApplication22createGraphicsPipelineEv>:

void rt_vulkan::RenderTriangleApplication::createGraphicsPipeline()
{
    6864:	55                   	push   %rbp
    6865:	48 89 e5             	mov    %rsp,%rbp
    6868:	53                   	push   %rbx
    6869:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
    6870:	48 89 bd 78 fe ff ff 	mov    %rdi,-0x188(%rbp)
    auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    6877:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    687b:	48 89 c7             	mov    %rax,%rdi
    687e:	e8 9d cc ff ff       	call   3520 <_ZNSaIcEC1Ev@plt>
    6883:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
    6887:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    688b:	48 8d 0d b6 bb 00 00 	lea    0xbbb6(%rip),%rcx        # 12448 <_ZN6__pstl9execution2v1L5unseqE+0x1e1>
    6892:	48 89 ce             	mov    %rcx,%rsi
    6895:	48 89 c7             	mov    %rax,%rdi
    6898:	e8 6f 11 00 00       	call   7a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    689d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    68a4:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    68a8:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
    68af:	48 89 ce             	mov    %rcx,%rsi
    68b2:	48 89 c7             	mov    %rax,%rdi
    68b5:	e8 02 fd ff ff       	call   65bc <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    68ba:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    68be:	48 89 c7             	mov    %rax,%rdi
    68c1:	e8 8a c8 ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    68c6:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    68ca:	48 89 c7             	mov    %rax,%rdi
    68cd:	e8 3e ca ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
    auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    68d2:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    68d6:	48 89 c7             	mov    %rax,%rdi
    68d9:	e8 42 cc ff ff       	call   3520 <_ZNSaIcEC1Ev@plt>
    68de:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    68e2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    68e6:	48 8d 0d 7b bb 00 00 	lea    0xbb7b(%rip),%rcx        # 12468 <_ZN6__pstl9execution2v1L5unseqE+0x201>
    68ed:	48 89 ce             	mov    %rcx,%rsi
    68f0:	48 89 c7             	mov    %rax,%rdi
    68f3:	e8 14 11 00 00       	call   7a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    68f8:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    68ff:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    6903:	48 8b 8d 78 fe ff ff 	mov    -0x188(%rbp),%rcx
    690a:	48 89 ce             	mov    %rcx,%rsi
    690d:	48 89 c7             	mov    %rax,%rdi
    6910:	e8 a7 fc ff ff       	call   65bc <_ZN9rt_vulkan25RenderTriangleApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    6915:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6919:	48 89 c7             	mov    %rax,%rdi
    691c:	e8 2f c8 ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6921:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6925:	48 89 c7             	mov    %rax,%rdi
    6928:	e8 e3 c9 ff ff       	call   3310 <_ZNSaIcED1Ev@plt>

    VkShaderModule vertShaderModule = createShaderModule(vertShaderCode);
    692d:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    6934:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    693b:	48 89 d6             	mov    %rdx,%rsi
    693e:	48 89 c7             	mov    %rax,%rdi
    6941:	e8 4a fe ff ff       	call   6790 <_ZN9rt_vulkan25RenderTriangleApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    6946:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    VkShaderModule fragShaderModule = createShaderModule(fragShaderCode);
    694a:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    6951:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    6958:	48 89 d6             	mov    %rdx,%rsi
    695b:	48 89 c7             	mov    %rax,%rdi
    695e:	e8 2d fe ff ff       	call   6790 <_ZN9rt_vulkan25RenderTriangleApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    6963:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    vkDestroyShaderModule(device, fragShaderModule, nullptr);
    6967:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    696e:	48 8b 40 48          	mov    0x48(%rax),%rax
    6972:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6976:	ba 00 00 00 00       	mov    $0x0,%edx
    697b:	48 89 ce             	mov    %rcx,%rsi
    697e:	48 89 c7             	mov    %rax,%rdi
    6981:	e8 0a ca ff ff       	call   3390 <vkDestroyShaderModule@plt>
    vkDestroyShaderModule(device, vertShaderModule, nullptr);
    6986:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    698d:	48 8b 40 48          	mov    0x48(%rax),%rax
    6991:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6995:	ba 00 00 00 00       	mov    $0x0,%edx
    699a:	48 89 ce             	mov    %rcx,%rsi
    699d:	48 89 c7             	mov    %rax,%rdi
    69a0:	e8 eb c9 ff ff       	call   3390 <vkDestroyShaderModule@plt>

    VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    69a5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    69a9:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    69b0:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    69b7:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    vertShaderStageInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    69be:	c7 85 10 ff ff ff 12 	movl   $0x12,-0xf0(%rbp)
    69c5:	00 00 00 
    vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    69c8:	c7 85 24 ff ff ff 01 	movl   $0x1,-0xdc(%rbp)
    69cf:	00 00 00 
    vertShaderStageInfo.module = vertShaderModule;
    69d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69d6:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    vertShaderStageInfo.pName = "main";
    69dd:	48 8d 05 a4 ba 00 00 	lea    0xbaa4(%rip),%rax        # 12488 <_ZN6__pstl9execution2v1L5unseqE+0x221>
    69e4:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    vertShaderStageInfo.pSpecializationInfo = nullptr;
    69eb:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    69f2:	00 00 00 00 

    VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    69f6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    69fa:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    6a01:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    6a08:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    fragShaderStageInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    6a0f:	c7 85 e0 fe ff ff 12 	movl   $0x12,-0x120(%rbp)
    6a16:	00 00 00 
    fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    6a19:	c7 85 f4 fe ff ff 10 	movl   $0x10,-0x10c(%rbp)
    6a20:	00 00 00 
    fragShaderStageInfo.module = fragShaderModule;
    6a23:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6a27:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
    fragShaderStageInfo.pName = "main";
    6a2e:	48 8d 05 53 ba 00 00 	lea    0xba53(%rip),%rax        # 12488 <_ZN6__pstl9execution2v1L5unseqE+0x221>
    6a35:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
    fragShaderStageInfo.pSpecializationInfo = nullptr;
    6a3c:	48 c7 85 08 ff ff ff 	movq   $0x0,-0xf8(%rbp)
    6a43:	00 00 00 00 

    VkPipelineShaderStageCreateInfo shaderStages[] = {
        vertShaderStageInfo, fragShaderStageInfo
    };
    6a47:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6a4e:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    6a55:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    6a5c:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
    6a63:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    6a6a:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    6a71:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    6a78:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
    6a7f:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    6a86:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    6a8d:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    6a94:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
    6a9b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    6aa2:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6aa9:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    6ab0:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
    6ab7:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    6abe:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    6ac5:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    6acc:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)
    6ad3:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    6ada:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    6ae1:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    6ae8:	48 89 95 d8 fe ff ff 	mov    %rdx,-0x128(%rbp)
}
    6aef:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    6af6:	48 89 c7             	mov    %rax,%rdi
    6af9:	e8 ec 1f 00 00       	call   8aea <_ZNSt6vectorIcSaIcEED1Ev>
    6afe:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    6b05:	48 89 c7             	mov    %rax,%rdi
    6b08:	e8 dd 1f 00 00       	call   8aea <_ZNSt6vectorIcSaIcEED1Ev>
    6b0d:	eb 79                	jmp    6b88 <_ZN9rt_vulkan25RenderTriangleApplication22createGraphicsPipelineEv+0x324>
    auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    6b0f:	48 89 c3             	mov    %rax,%rbx
    6b12:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6b16:	48 89 c7             	mov    %rax,%rdi
    6b19:	e8 32 c6 ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6b1e:	eb 03                	jmp    6b23 <_ZN9rt_vulkan25RenderTriangleApplication22createGraphicsPipelineEv+0x2bf>
    6b20:	48 89 c3             	mov    %rax,%rbx
    6b23:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    6b27:	48 89 c7             	mov    %rax,%rdi
    6b2a:	e8 e1 c7 ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
    6b2f:	48 89 d8             	mov    %rbx,%rax
    6b32:	48 89 c7             	mov    %rax,%rdi
    6b35:	e8 d6 c9 ff ff       	call   3510 <_Unwind_Resume@plt>
    auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    6b3a:	48 89 c3             	mov    %rax,%rbx
    6b3d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6b41:	48 89 c7             	mov    %rax,%rdi
    6b44:	e8 07 c6 ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6b49:	eb 03                	jmp    6b4e <_ZN9rt_vulkan25RenderTriangleApplication22createGraphicsPipelineEv+0x2ea>
    6b4b:	48 89 c3             	mov    %rax,%rbx
    6b4e:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6b52:	48 89 c7             	mov    %rax,%rdi
    6b55:	e8 b6 c7 ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
    6b5a:	eb 12                	jmp    6b6e <_ZN9rt_vulkan25RenderTriangleApplication22createGraphicsPipelineEv+0x30a>
}
    6b5c:	48 89 c3             	mov    %rax,%rbx
    6b5f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    6b66:	48 89 c7             	mov    %rax,%rdi
    6b69:	e8 7c 1f 00 00       	call   8aea <_ZNSt6vectorIcSaIcEED1Ev>
    6b6e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    6b75:	48 89 c7             	mov    %rax,%rdi
    6b78:	e8 6d 1f 00 00       	call   8aea <_ZNSt6vectorIcSaIcEED1Ev>
    6b7d:	48 89 d8             	mov    %rbx,%rax
    6b80:	48 89 c7             	mov    %rax,%rdi
    6b83:	e8 88 c9 ff ff       	call   3510 <_Unwind_Resume@plt>
    6b88:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b8c:	c9                   	leave
    6b8d:	c3                   	ret

0000000000006b8e <_ZN9rt_vulkan25RenderTriangleApplication10initWindowEv>:

void rt_vulkan::RenderTriangleApplication::initWindow()
{
    6b8e:	55                   	push   %rbp
    6b8f:	48 89 e5             	mov    %rsp,%rbp
    6b92:	48 83 ec 10          	sub    $0x10,%rsp
    6b96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    glfwInit();
    6b9a:	e8 b1 c7 ff ff       	call   3350 <glfwInit@plt>

    glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    6b9f:	be 00 00 00 00       	mov    $0x0,%esi
    6ba4:	bf 01 20 02 00       	mov    $0x22001,%edi
    6ba9:	e8 72 c6 ff ff       	call   3220 <glfwWindowHint@plt>
    glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    6bae:	be 00 00 00 00       	mov    $0x0,%esi
    6bb3:	bf 03 00 02 00       	mov    $0x20003,%edi
    6bb8:	e8 63 c6 ff ff       	call   3220 <glfwWindowHint@plt>

    window.ref = glfwCreateWindow(window.width, window.height,
    6bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bc1:	8b 40 0c             	mov    0xc(%rax),%eax
    6bc4:	89 c6                	mov    %eax,%esi
    6bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bca:	8b 40 08             	mov    0x8(%rax),%eax
    6bcd:	89 c7                	mov    %eax,%edi
    6bcf:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    6bd5:	b9 00 00 00 00       	mov    $0x0,%ecx
    6bda:	48 8d 05 ac b8 00 00 	lea    0xb8ac(%rip),%rax        # 1248d <_ZN6__pstl9execution2v1L5unseqE+0x226>
    6be1:	48 89 c2             	mov    %rax,%rdx
    6be4:	e8 97 c8 ff ff       	call   3480 <glfwCreateWindow@plt>
    6be9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6bed:	48 89 02             	mov    %rax,(%rdx)
                                  "Vulkan Triangle Application",
                                  nullptr, nullptr);
}
    6bf0:	90                   	nop
    6bf1:	c9                   	leave
    6bf2:	c3                   	ret
    6bf3:	90                   	nop

0000000000006bf4 <_ZN9rt_vulkan25RenderTriangleApplication10initVulkanEv>:

void rt_vulkan::RenderTriangleApplication::initVulkan()
{
    6bf4:	55                   	push   %rbp
    6bf5:	48 89 e5             	mov    %rsp,%rbp
    6bf8:	48 83 ec 10          	sub    $0x10,%rsp
    6bfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    creatInstance();
    6c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c04:	48 89 c7             	mov    %rax,%rdi
    6c07:	e8 42 e1 ff ff       	call   4d4e <_ZN9rt_vulkan25RenderTriangleApplication13creatInstanceEv>
    setupDebugMessenger();
    6c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c10:	48 89 c7             	mov    %rax,%rdi
    6c13:	e8 76 e0 ff ff       	call   4c8e <_ZN9rt_vulkan25RenderTriangleApplication19setupDebugMessengerEv>
    createSurface();
    6c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c1c:	48 89 c7             	mov    %rax,%rdi
    6c1f:	e8 04 f2 ff ff       	call   5e28 <_ZN9rt_vulkan25RenderTriangleApplication13createSurfaceEv>
    selectPhysicalDevice();
    6c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c28:	48 89 c7             	mov    %rax,%rdi
    6c2b:	e8 f6 e9 ff ff       	call   5626 <_ZN9rt_vulkan25RenderTriangleApplication20selectPhysicalDeviceEv>
    createLogicalDevice();
    6c30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c34:	48 89 c7             	mov    %rax,%rdi
    6c37:	e8 ee ed ff ff       	call   5a2a <_ZN9rt_vulkan25RenderTriangleApplication19createLogicalDeviceEv>
}
    6c3c:	90                   	nop
    6c3d:	c9                   	leave
    6c3e:	c3                   	ret
    6c3f:	90                   	nop

0000000000006c40 <_ZN9rt_vulkan25RenderTriangleApplication8mainLoopEv>:

void rt_vulkan::RenderTriangleApplication::mainLoop()
{
    6c40:	55                   	push   %rbp
    6c41:	48 89 e5             	mov    %rsp,%rbp
    6c44:	48 83 ec 10          	sub    $0x10,%rsp
    6c48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!glfwWindowShouldClose(window.ref))
    6c4c:	eb 05                	jmp    6c53 <_ZN9rt_vulkan25RenderTriangleApplication8mainLoopEv+0x13>
    {
        glfwPollEvents();
    6c4e:	e8 0d c6 ff ff       	call   3260 <glfwPollEvents@plt>
    while (!glfwWindowShouldClose(window.ref))
    6c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c57:	48 8b 00             	mov    (%rax),%rax
    6c5a:	48 89 c7             	mov    %rax,%rdi
    6c5d:	e8 fe c8 ff ff       	call   3560 <glfwWindowShouldClose@plt>
    6c62:	85 c0                	test   %eax,%eax
    6c64:	0f 94 c0             	sete   %al
    6c67:	84 c0                	test   %al,%al
    6c69:	75 e3                	jne    6c4e <_ZN9rt_vulkan25RenderTriangleApplication8mainLoopEv+0xe>
    }
}
    6c6b:	90                   	nop
    6c6c:	90                   	nop
    6c6d:	c9                   	leave
    6c6e:	c3                   	ret
    6c6f:	90                   	nop

0000000000006c70 <_ZN9rt_vulkan25RenderTriangleApplication7cleanUpEv>:

void rt_vulkan::RenderTriangleApplication::cleanUp()
{
    6c70:	55                   	push   %rbp
    6c71:	48 89 e5             	mov    %rsp,%rbp
    6c74:	48 83 ec 30          	sub    $0x30,%rsp
    6c78:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    for (auto imageView : swapChainImageViews)
    6c7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c80:	48 05 b0 00 00 00    	add    $0xb0,%rax
    6c86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c8e:	48 89 c7             	mov    %rax,%rdi
    6c91:	e8 74 1f 00 00       	call   8c0a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    6c96:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c9e:	48 89 c7             	mov    %rax,%rdi
    6ca1:	e8 8a 1f 00 00       	call   8c30 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    6ca6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6caa:	eb 3b                	jmp    6ce7 <_ZN9rt_vulkan25RenderTriangleApplication7cleanUpEv+0x77>
    6cac:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6cb0:	48 89 c7             	mov    %rax,%rdi
    6cb3:	e8 fc 1f 00 00       	call   8cb4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    6cb8:	48 8b 00             	mov    (%rax),%rax
    6cbb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
        vkDestroyImageView(device, imageView, nullptr);
    6cbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6cc3:	48 8b 40 48          	mov    0x48(%rax),%rax
    6cc7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ccb:	ba 00 00 00 00       	mov    $0x0,%edx
    6cd0:	48 89 ce             	mov    %rcx,%rsi
    6cd3:	48 89 c7             	mov    %rax,%rdi
    6cd6:	e8 55 c8 ff ff       	call   3530 <vkDestroyImageView@plt>
    for (auto imageView : swapChainImageViews)
    6cdb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6cdf:	48 89 c7             	mov    %rax,%rdi
    6ce2:	e8 ad 1f 00 00       	call   8c94 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    6ce7:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    6ceb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6cef:	48 89 d6             	mov    %rdx,%rsi
    6cf2:	48 89 c7             	mov    %rax,%rdi
    6cf5:	e8 5f 1f 00 00       	call   8c59 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6cfa:	84 c0                	test   %al,%al
    6cfc:	75 ae                	jne    6cac <_ZN9rt_vulkan25RenderTriangleApplication7cleanUpEv+0x3c>

    vkDestroySwapchainKHR(device, swapChain, nullptr);
    6cfe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d02:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
    6d09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d0d:	48 8b 40 48          	mov    0x48(%rax),%rax
    6d11:	ba 00 00 00 00       	mov    $0x0,%edx
    6d16:	48 89 ce             	mov    %rcx,%rsi
    6d19:	48 89 c7             	mov    %rax,%rdi
    6d1c:	e8 5f c3 ff ff       	call   3080 <vkDestroySwapchainKHR@plt>

    vkDestroyDevice(device, nullptr);
    6d21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d25:	48 8b 40 48          	mov    0x48(%rax),%rax
    6d29:	be 00 00 00 00       	mov    $0x0,%esi
    6d2e:	48 89 c7             	mov    %rax,%rdi
    6d31:	e8 ba c4 ff ff       	call   31f0 <vkDestroyDevice@plt>

    if (enableValidationLayers)
    6d36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d3a:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    6d3e:	84 c0                	test   %al,%al
    6d40:	74 20                	je     6d62 <_ZN9rt_vulkan25RenderTriangleApplication7cleanUpEv+0xf2>
        DestroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    6d42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d46:	48 8b 48 38          	mov    0x38(%rax),%rcx
    6d4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d4e:	48 8b 40 10          	mov    0x10(%rax),%rax
    6d52:	ba 00 00 00 00       	mov    $0x0,%edx
    6d57:	48 89 ce             	mov    %rcx,%rsi
    6d5a:	48 89 c7             	mov    %rax,%rdi
    6d5d:	e8 bc da ff ff       	call   481e <_ZN9rt_vulkan29DestroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>

    vkDestroySurfaceKHR(instance, surface, nullptr);
    6d62:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d66:	48 8b 48 58          	mov    0x58(%rax),%rcx
    6d6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d6e:	48 8b 40 10          	mov    0x10(%rax),%rax
    6d72:	ba 00 00 00 00       	mov    $0x0,%edx
    6d77:	48 89 ce             	mov    %rcx,%rsi
    6d7a:	48 89 c7             	mov    %rax,%rdi
    6d7d:	e8 7e c7 ff ff       	call   3500 <vkDestroySurfaceKHR@plt>

    vkDestroyInstance(instance, nullptr);
    6d82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d86:	48 8b 40 10          	mov    0x10(%rax),%rax
    6d8a:	be 00 00 00 00       	mov    $0x0,%esi
    6d8f:	48 89 c7             	mov    %rax,%rdi
    6d92:	e8 09 c5 ff ff       	call   32a0 <vkDestroyInstance@plt>

    glfwDestroyWindow(window.ref);
    6d97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d9b:	48 8b 00             	mov    (%rax),%rax
    6d9e:	48 89 c7             	mov    %rax,%rdi
    6da1:	e8 ea c2 ff ff       	call   3090 <glfwDestroyWindow@plt>

    glfwTerminate();
    6da6:	e8 05 c5 ff ff       	call   32b0 <glfwTerminate@plt>
}
    6dab:	90                   	nop
    6dac:	c9                   	leave
    6dad:	c3                   	ret

0000000000006dae <_ZN9rt_vulkan25RenderTriangleApplication3runEv>:

void rt_vulkan::RenderTriangleApplication::run()
{
    6dae:	55                   	push   %rbp
    6daf:	48 89 e5             	mov    %rsp,%rbp
    6db2:	48 83 ec 10          	sub    $0x10,%rsp
    6db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    initWindow();
    6dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dbe:	48 89 c7             	mov    %rax,%rdi
    6dc1:	e8 c8 fd ff ff       	call   6b8e <_ZN9rt_vulkan25RenderTriangleApplication10initWindowEv>
    initVulkan();
    6dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dca:	48 89 c7             	mov    %rax,%rdi
    6dcd:	e8 22 fe ff ff       	call   6bf4 <_ZN9rt_vulkan25RenderTriangleApplication10initVulkanEv>
    mainLoop();
    6dd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dd6:	48 89 c7             	mov    %rax,%rdi
    6dd9:	e8 62 fe ff ff       	call   6c40 <_ZN9rt_vulkan25RenderTriangleApplication8mainLoopEv>
    cleanUp();
    6dde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6de2:	48 89 c7             	mov    %rax,%rdi
    6de5:	e8 86 fe ff ff       	call   6c70 <_ZN9rt_vulkan25RenderTriangleApplication7cleanUpEv>
    6dea:	90                   	nop
    6deb:	c9                   	leave
    6dec:	c3                   	ret

0000000000006ded <_Z41__static_initialization_and_destruction_0ii>:
    6ded:	55                   	push   %rbp
    6dee:	48 89 e5             	mov    %rsp,%rbp
    6df1:	48 83 ec 10          	sub    $0x10,%rsp
    6df5:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6df8:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6dfb:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    6dff:	75 3b                	jne    6e3c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6e01:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    6e08:	75 32                	jne    6e3c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    6e0a:	48 8d 05 21 67 01 00 	lea    0x16721(%rip),%rax        # 1d532 <_ZStL8__ioinit>
    6e11:	48 89 c7             	mov    %rax,%rdi
    6e14:	e8 47 c6 ff ff       	call   3460 <_ZNSt8ios_base4InitC1Ev@plt>
    6e19:	48 8d 05 90 64 01 00 	lea    0x16490(%rip),%rax        # 1d2b0 <__dso_handle>
    6e20:	48 89 c2             	mov    %rax,%rdx
    6e23:	48 8d 05 08 67 01 00 	lea    0x16708(%rip),%rax        # 1d532 <_ZStL8__ioinit>
    6e2a:	48 89 c6             	mov    %rax,%rsi
    6e2d:	48 8b 05 94 61 01 00 	mov    0x16194(%rip),%rax        # 1cfc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    6e34:	48 89 c7             	mov    %rax,%rdi
    6e37:	e8 04 c4 ff ff       	call   3240 <__cxa_atexit@plt>
    6e3c:	90                   	nop
    6e3d:	c9                   	leave
    6e3e:	c3                   	ret

0000000000006e3f <_GLOBAL__sub_I__ZN9rt_vulkan25RenderTriangleApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    6e3f:	55                   	push   %rbp
    6e40:	48 89 e5             	mov    %rsp,%rbp
    6e43:	be ff ff 00 00       	mov    $0xffff,%esi
    6e48:	bf 01 00 00 00       	mov    $0x1,%edi
    6e4d:	e8 9b ff ff ff       	call   6ded <_Z41__static_initialization_and_destruction_0ii>
    6e52:	5d                   	pop    %rbp
    6e53:	c3                   	ret

0000000000006e54 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    6e54:	55                   	push   %rbp
    6e55:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    6e58:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    6e5d:	5d                   	pop    %rbp
    6e5e:	c3                   	ret
    6e5f:	90                   	nop

0000000000006e60 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    6e60:	55                   	push   %rbp
    6e61:	48 89 e5             	mov    %rsp,%rbp
    6e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e68:	48 8d 15 a1 5e 01 00 	lea    0x15ea1(%rip),%rdx        # 1cd10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    6e6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e73:	48 89 10             	mov    %rdx,(%rax)
    6e76:	90                   	nop
    6e77:	5d                   	pop    %rbp
    6e78:	c3                   	ret

0000000000006e79 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    6e79:	55                   	push   %rbp
    6e7a:	48 89 e5             	mov    %rsp,%rbp
    6e7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6e89:	5d                   	pop    %rbp
    6e8a:	c3                   	ret

0000000000006e8b <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    6e8b:	55                   	push   %rbp
    6e8c:	48 89 e5             	mov    %rsp,%rbp
    6e8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e97:	90                   	nop
    6e98:	5d                   	pop    %rbp
    6e99:	c3                   	ret

0000000000006e9a <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    6e9a:	55                   	push   %rbp
    6e9b:	48 89 e5             	mov    %rsp,%rbp
    6e9e:	48 83 ec 10          	sub    $0x10,%rsp
    6ea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    6ea6:	e8 a9 ff ff ff       	call   6e54 <_ZSt23__is_constant_evaluatedv>
    6eab:	84 c0                	test   %al,%al
    6ead:	74 0e                	je     6ebd <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    6eaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eb3:	48 89 c7             	mov    %rax,%rdi
    6eb6:	e8 69 03 00 00       	call   7224 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    6ebb:	eb 0d                	jmp    6eca <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    6ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ec1:	48 89 c7             	mov    %rax,%rdi
    6ec4:	e8 07 c2 ff ff       	call   30d0 <strlen@plt>
    6ec9:	90                   	nop
      }
    6eca:	c9                   	leave
    6ecb:	c3                   	ret

0000000000006ecc <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    6ecc:	55                   	push   %rbp
    6ecd:	48 89 e5             	mov    %rsp,%rbp
    6ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ed8:	5d                   	pop    %rbp
    6ed9:	c3                   	ret

0000000000006eda <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    6eda:	55                   	push   %rbp
    6edb:	48 89 e5             	mov    %rsp,%rbp
    6ede:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6ee1:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6ee4:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6ee7:	0b 45 f8             	or     -0x8(%rbp),%eax
    6eea:	5d                   	pop    %rbp
    6eeb:	c3                   	ret

0000000000006eec <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    6eec:	55                   	push   %rbp
    6eed:	48 89 e5             	mov    %rsp,%rbp
    6ef0:	48 83 ec 10          	sub    $0x10,%rsp
    6ef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    6ef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6efc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    6f02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f06:	48 89 c7             	mov    %rax,%rdi
    6f09:	e8 04 00 00 00       	call   6f12 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    6f0e:	90                   	nop
    6f0f:	c9                   	leave
    6f10:	c3                   	ret
    6f11:	90                   	nop

0000000000006f12 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    6f12:	55                   	push   %rbp
    6f13:	48 89 e5             	mov    %rsp,%rbp
    6f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    6f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f1e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6f25:	00 
      _M_header._M_left = &_M_header;
    6f26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f2e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    6f32:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f3a:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    6f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f42:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    6f49:	00 
    }
    6f4a:	90                   	nop
    6f4b:	5d                   	pop    %rbp
    6f4c:	c3                   	ret
    6f4d:	90                   	nop

0000000000006f4e <_ZNKSt19bad_optional_access4whatEv>:
  {
  public:
    bad_optional_access() = default;
    virtual ~bad_optional_access() = default;

    const char* what() const noexcept override
    6f4e:	55                   	push   %rbp
    6f4f:	48 89 e5             	mov    %rsp,%rbp
    6f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    6f56:	48 8d 05 f3 b2 00 00 	lea    0xb2f3(%rip),%rax        # 12250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6f5d:	5d                   	pop    %rbp
    6f5e:	c3                   	ret
    6f5f:	90                   	nop

0000000000006f60 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    6f60:	55                   	push   %rbp
    6f61:	48 89 e5             	mov    %rsp,%rbp
    6f64:	48 83 ec 10          	sub    $0x10,%rsp
    6f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f70:	48 89 c7             	mov    %rax,%rdi
    6f73:	e8 e8 fe ff ff       	call   6e60 <_ZNSt9exceptionC1Ev>
    6f78:	48 8d 15 51 5d 01 00 	lea    0x15d51(%rip),%rdx        # 1ccd0 <_ZTVSt19bad_optional_access+0x10>
    6f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f83:	48 89 10             	mov    %rdx,(%rax)
    6f86:	90                   	nop
    6f87:	c9                   	leave
    6f88:	c3                   	ret

0000000000006f89 <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    6f89:	55                   	push   %rbp
    6f8a:	48 89 e5             	mov    %rsp,%rbp
    6f8d:	53                   	push   %rbx
    6f8e:	48 83 ec 08          	sub    $0x8,%rsp
    6f92:	bf 08 00 00 00       	mov    $0x8,%edi
    6f97:	e8 44 c1 ff ff       	call   30e0 <__cxa_allocate_exception@plt>
    6f9c:	48 89 c3             	mov    %rax,%rbx
    6f9f:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    6fa6:	48 89 df             	mov    %rbx,%rdi
    6fa9:	e8 b2 ff ff ff       	call   6f60 <_ZNSt19bad_optional_accessC1Ev>
    6fae:	48 8d 05 b7 9b 00 00 	lea    0x9bb7(%rip),%rax        # 10b6c <_ZNSt19bad_optional_accessD1Ev>
    6fb5:	48 89 c2             	mov    %rax,%rdx
    6fb8:	48 8d 05 99 5d 01 00 	lea    0x15d99(%rip),%rax        # 1cd58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    6fbf:	48 89 c6             	mov    %rax,%rsi
    6fc2:	48 89 df             	mov    %rbx,%rdi
    6fc5:	e8 16 c5 ff ff       	call   34e0 <__cxa_throw@plt>

0000000000006fca <_ZNSt14numeric_limitsIjE3maxEv>:

      static _GLIBCXX_CONSTEXPR unsigned int
      min() _GLIBCXX_USE_NOEXCEPT { return 0; }

      static _GLIBCXX_CONSTEXPR unsigned int
      max() _GLIBCXX_USE_NOEXCEPT { return __INT_MAX__ * 2U + 1; }
    6fca:	55                   	push   %rbp
    6fcb:	48 89 e5             	mov    %rsp,%rbp
    6fce:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6fd3:	5d                   	pop    %rbp
    6fd4:	c3                   	ret
    6fd5:	90                   	nop

0000000000006fd6 <_ZN9rt_vulkan25RenderTriangleApplication18QueueFamilyIndices10isCompleteEv>:
        struct QueueFamilyIndices
        {
            std::optional<uint32_t> graphicsFamily;
            std::optional<uint32_t> presentFamily;

            bool isComplete()
    6fd6:	55                   	push   %rbp
    6fd7:	48 89 e5             	mov    %rsp,%rbp
    6fda:	48 83 ec 10          	sub    $0x10,%rsp
    6fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
            {
                return graphicsFamily.has_value() && presentFamily.has_value();
    6fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6fe6:	48 89 c7             	mov    %rax,%rdi
    6fe9:	e8 98 02 00 00       	call   7286 <_ZNKSt8optionalIjE9has_valueEv>
    6fee:	84 c0                	test   %al,%al
    6ff0:	74 1b                	je     700d <_ZN9rt_vulkan25RenderTriangleApplication18QueueFamilyIndices10isCompleteEv+0x37>
    6ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ff6:	48 83 c0 08          	add    $0x8,%rax
    6ffa:	48 89 c7             	mov    %rax,%rdi
    6ffd:	e8 84 02 00 00       	call   7286 <_ZNKSt8optionalIjE9has_valueEv>
    7002:	84 c0                	test   %al,%al
    7004:	74 07                	je     700d <_ZN9rt_vulkan25RenderTriangleApplication18QueueFamilyIndices10isCompleteEv+0x37>
    7006:	b8 01 00 00 00       	mov    $0x1,%eax
    700b:	eb 05                	jmp    7012 <_ZN9rt_vulkan25RenderTriangleApplication18QueueFamilyIndices10isCompleteEv+0x3c>
    700d:	b8 00 00 00 00       	mov    $0x0,%eax
            }
    7012:	c9                   	leave
    7013:	c3                   	ret

0000000000007014 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7014:	55                   	push   %rbp
    7015:	48 89 e5             	mov    %rsp,%rbp
    7018:	48 83 ec 10          	sub    $0x10,%rsp
    701c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7024:	48 89 c7             	mov    %rax,%rdi
    7027:	e8 90 02 00 00       	call   72bc <_ZNSaI21VkExtensionPropertiesED1Ev>
    702c:	90                   	nop
    702d:	c9                   	leave
    702e:	c3                   	ret
    702f:	90                   	nop

0000000000007030 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way. Managing the pointer is the user's responsibility.
       */
      ~set() = default;
    7030:	55                   	push   %rbp
    7031:	48 89 e5             	mov    %rsp,%rbp
    7034:	48 83 ec 10          	sub    $0x10,%rsp
    7038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    703c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7040:	48 89 c7             	mov    %rax,%rdi
    7043:	e8 8a 09 00 00       	call   79d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    7048:	90                   	nop
    7049:	c9                   	leave
    704a:	c3                   	ret
    704b:	90                   	nop

000000000000704c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    704c:	55                   	push   %rbp
    704d:	48 89 e5             	mov    %rsp,%rbp
    7050:	48 83 ec 10          	sub    $0x10,%rsp
    7054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    705c:	48 89 c7             	mov    %rax,%rdi
    705f:	e8 b0 0a 00 00       	call   7b14 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7064:	90                   	nop
    7065:	c9                   	leave
    7066:	c3                   	ret
    7067:	90                   	nop

0000000000007068 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    7068:	55                   	push   %rbp
    7069:	48 89 e5             	mov    %rsp,%rbp
    706c:	48 83 ec 10          	sub    $0x10,%rsp
    7070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7078:	48 89 c7             	mov    %rax,%rdi
    707b:	e8 6c 0a 00 00       	call   7aec <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>
    7080:	90                   	nop
    7081:	c9                   	leave
    7082:	c3                   	ret
    7083:	90                   	nop

0000000000007084 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      vector() = default;
    7084:	55                   	push   %rbp
    7085:	48 89 e5             	mov    %rsp,%rbp
    7088:	48 83 ec 10          	sub    $0x10,%rsp
    708c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7094:	48 89 c7             	mov    %rax,%rdi
    7097:	e8 cc ff ff ff       	call   7068 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    709c:	90                   	nop
    709d:	c9                   	leave
    709e:	c3                   	ret
    709f:	90                   	nop

00000000000070a0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    70a0:	55                   	push   %rbp
    70a1:	48 89 e5             	mov    %rsp,%rbp
    70a4:	48 83 ec 10          	sub    $0x10,%rsp
    70a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70b0:	48 89 c7             	mov    %rax,%rdi
    70b3:	e8 32 0b 00 00       	call   7bea <_ZNSaI16VkPresentModeKHRED1Ev>
    70b8:	90                   	nop
    70b9:	c9                   	leave
    70ba:	c3                   	ret
    70bb:	90                   	nop

00000000000070bc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    70bc:	55                   	push   %rbp
    70bd:	48 89 e5             	mov    %rsp,%rbp
    70c0:	48 83 ec 10          	sub    $0x10,%rsp
    70c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70cc:	48 89 c7             	mov    %rax,%rdi
    70cf:	e8 ee 0a 00 00       	call   7bc2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>
    70d4:	90                   	nop
    70d5:	c9                   	leave
    70d6:	c3                   	ret
    70d7:	90                   	nop

00000000000070d8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>:
      vector() = default;
    70d8:	55                   	push   %rbp
    70d9:	48 89 e5             	mov    %rsp,%rbp
    70dc:	48 83 ec 10          	sub    $0x10,%rsp
    70e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70e8:	48 89 c7             	mov    %rax,%rdi
    70eb:	e8 cc ff ff ff       	call   70bc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>
    70f0:	90                   	nop
    70f1:	c9                   	leave
    70f2:	c3                   	ret
    70f3:	90                   	nop

00000000000070f4 <_ZN9rt_vulkan25RenderTriangleApplication23SwapChainSupportDetailsC1Ev>:

        VkSurfaceKHR surface;

        VkQueue presentQueue;

        struct SwapChainSupportDetails
    70f4:	55                   	push   %rbp
    70f5:	48 89 e5             	mov    %rsp,%rbp
    70f8:	48 83 ec 10          	sub    $0x10,%rsp
    70fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7104:	48 83 c0 38          	add    $0x38,%rax
    7108:	48 89 c7             	mov    %rax,%rdi
    710b:	e8 74 ff ff ff       	call   7084 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    7110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7114:	48 83 c0 50          	add    $0x50,%rax
    7118:	48 89 c7             	mov    %rax,%rdi
    711b:	e8 b8 ff ff ff       	call   70d8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>
    7120:	90                   	nop
    7121:	c9                   	leave
    7122:	c3                   	ret
    7123:	90                   	nop

0000000000007124 <_ZN9rt_vulkan25RenderTriangleApplication23SwapChainSupportDetailsD1Ev>:
    7124:	55                   	push   %rbp
    7125:	48 89 e5             	mov    %rsp,%rbp
    7128:	48 83 ec 10          	sub    $0x10,%rsp
    712c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7134:	48 83 c0 50          	add    $0x50,%rax
    7138:	48 89 c7             	mov    %rax,%rdi
    713b:	e8 14 0b 00 00       	call   7c54 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7144:	48 83 c0 38          	add    $0x38,%rax
    7148:	48 89 c7             	mov    %rax,%rdi
    714b:	e8 2e 0a 00 00       	call   7b7e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    7150:	90                   	nop
    7151:	c9                   	leave
    7152:	c3                   	ret
    7153:	90                   	nop

0000000000007154 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7154:	55                   	push   %rbp
    7155:	48 89 e5             	mov    %rsp,%rbp
    7158:	48 83 ec 10          	sub    $0x10,%rsp
    715c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7164:	48 89 c7             	mov    %rax,%rdi
    7167:	e8 3a 11 00 00       	call   82a6 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>
    716c:	90                   	nop
    716d:	c9                   	leave
    716e:	c3                   	ret
    716f:	90                   	nop

0000000000007170 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      _Vector_base() = default;
    7170:	55                   	push   %rbp
    7171:	48 89 e5             	mov    %rsp,%rbp
    7174:	48 83 ec 10          	sub    $0x10,%rsp
    7178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    717c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7180:	48 89 c7             	mov    %rax,%rdi
    7183:	e8 f6 10 00 00       	call   827e <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>
    7188:	90                   	nop
    7189:	c9                   	leave
    718a:	c3                   	ret
    718b:	90                   	nop

000000000000718c <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      vector() = default;
    718c:	55                   	push   %rbp
    718d:	48 89 e5             	mov    %rsp,%rbp
    7190:	48 83 ec 10          	sub    $0x10,%rsp
    7194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    719c:	48 89 c7             	mov    %rax,%rdi
    719f:	e8 cc ff ff ff       	call   7170 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
    71a4:	90                   	nop
    71a5:	c9                   	leave
    71a6:	c3                   	ret
    71a7:	90                   	nop

00000000000071a8 <_ZNRSt8optionalIjE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    71a8:	55                   	push   %rbp
    71a9:	48 89 e5             	mov    %rsp,%rbp
    71ac:	48 83 ec 10          	sub    $0x10,%rsp
    71b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    71b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71b8:	48 89 c7             	mov    %rax,%rdi
    71bb:	e8 1a 00 00 00       	call   71da <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    71c0:	84 c0                	test   %al,%al
    71c2:	74 0e                	je     71d2 <_ZNRSt8optionalIjE5valueEv+0x2a>
	  return this->_M_get();
    71c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c8:	48 89 c7             	mov    %rax,%rdi
    71cb:	e8 8e 11 00 00       	call   835e <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    71d0:	eb 05                	jmp    71d7 <_ZNRSt8optionalIjE5valueEv+0x2f>
	__throw_bad_optional_access();
    71d2:	e8 b2 fd ff ff       	call   6f89 <_ZSt27__throw_bad_optional_accessv>
      }
    71d7:	c9                   	leave
    71d8:	c3                   	ret
    71d9:	90                   	nop

00000000000071da <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    71da:	55                   	push   %rbp
    71db:	48 89 e5             	mov    %rsp,%rbp
    71de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    71e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71e6:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    71ea:	5d                   	pop    %rbp
    71eb:	c3                   	ret

00000000000071ec <_ZNSt3setIjSt4lessIjESaIjEED1Ev>:
    71ec:	55                   	push   %rbp
    71ed:	48 89 e5             	mov    %rsp,%rbp
    71f0:	48 83 ec 10          	sub    $0x10,%rsp
    71f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71fc:	48 89 c7             	mov    %rax,%rdi
    71ff:	e8 bc 12 00 00       	call   84c0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    7204:	90                   	nop
    7205:	c9                   	leave
    7206:	c3                   	ret
    7207:	90                   	nop

0000000000007208 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    7208:	55                   	push   %rbp
    7209:	48 89 e5             	mov    %rsp,%rbp
    720c:	48 83 ec 10          	sub    $0x10,%rsp
    7210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7218:	48 89 c7             	mov    %rax,%rdi
    721b:	e8 30 be ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    7220:	90                   	nop
    7221:	c9                   	leave
    7222:	c3                   	ret
    7223:	90                   	nop

0000000000007224 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    7224:	55                   	push   %rbp
    7225:	48 89 e5             	mov    %rsp,%rbp
    7228:	48 83 ec 20          	sub    $0x20,%rsp
    722c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    7230:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    7237:	00 
      while (!eq(__p[__i], char_type()))
    7238:	eb 05                	jmp    723f <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    723a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    723f:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    7243:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7247:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    724b:	48 01 c2             	add    %rax,%rdx
    724e:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    7252:	48 89 c6             	mov    %rax,%rsi
    7255:	48 89 d7             	mov    %rdx,%rdi
    7258:	e8 68 1a 00 00       	call   8cc5 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    725d:	83 f0 01             	xor    $0x1,%eax
    7260:	84 c0                	test   %al,%al
    7262:	75 d6                	jne    723a <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    7264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    7268:	c9                   	leave
    7269:	c3                   	ret

000000000000726a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    726a:	55                   	push   %rbp
    726b:	48 89 e5             	mov    %rsp,%rbp
    726e:	48 83 ec 10          	sub    $0x10,%rsp
    7272:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7276:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    727a:	48 89 c7             	mov    %rax,%rdi
    727d:	e8 ce bd ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    7282:	90                   	nop
    7283:	c9                   	leave
    7284:	c3                   	ret
    7285:	90                   	nop

0000000000007286 <_ZNKSt8optionalIjE9has_valueEv>:
      constexpr bool has_value() const noexcept
    7286:	55                   	push   %rbp
    7287:	48 89 e5             	mov    %rsp,%rbp
    728a:	48 83 ec 10          	sub    $0x10,%rsp
    728e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    7292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7296:	48 89 c7             	mov    %rax,%rdi
    7299:	e8 3c ff ff ff       	call   71da <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    729e:	c9                   	leave
    729f:	c3                   	ret

00000000000072a0 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    72a0:	55                   	push   %rbp
    72a1:	48 89 e5             	mov    %rsp,%rbp
    72a4:	48 83 ec 10          	sub    $0x10,%rsp
    72a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72b0:	48 89 c7             	mov    %rax,%rdi
    72b3:	e8 5a 1b 00 00       	call   8e12 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    72b8:	90                   	nop
    72b9:	c9                   	leave
    72ba:	c3                   	ret
    72bb:	90                   	nop

00000000000072bc <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    72bc:	55                   	push   %rbp
    72bd:	48 89 e5             	mov    %rsp,%rbp
    72c0:	48 83 ec 10          	sub    $0x10,%rsp
    72c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    72c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72cc:	48 89 c7             	mov    %rax,%rdi
    72cf:	e8 4a 1b 00 00       	call   8e1e <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    72d4:	90                   	nop
    72d5:	c9                   	leave
    72d6:	c3                   	ret
    72d7:	90                   	nop

00000000000072d8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    72d8:	55                   	push   %rbp
    72d9:	48 89 e5             	mov    %rsp,%rbp
    72dc:	53                   	push   %rbx
    72dd:	48 83 ec 28          	sub    $0x28,%rsp
    72e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    72e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    72e9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    72ed:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    72f1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    72f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72f9:	48 89 d6             	mov    %rdx,%rsi
    72fc:	48 89 c7             	mov    %rax,%rdi
    72ff:	e8 25 1b 00 00       	call   8e29 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7304:	48 89 c1             	mov    %rax,%rcx
    7307:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    730b:	48 89 c2             	mov    %rax,%rdx
    730e:	48 89 ce             	mov    %rcx,%rsi
    7311:	48 89 df             	mov    %rbx,%rdi
    7314:	e8 71 1b 00 00       	call   8e8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7319:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    731d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7321:	48 89 d6             	mov    %rdx,%rsi
    7324:	48 89 c7             	mov    %rax,%rdi
    7327:	e8 bc 1b 00 00       	call   8ee8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    732c:	eb 1a                	jmp    7348 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    732e:	48 89 c3             	mov    %rax,%rbx
    7331:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7335:	48 89 c7             	mov    %rax,%rdi
    7338:	e8 79 00 00 00       	call   73b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    733d:	48 89 d8             	mov    %rbx,%rax
    7340:	48 89 c7             	mov    %rax,%rdi
    7343:	e8 c8 c1 ff ff       	call   3510 <_Unwind_Resume@plt>
    7348:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    734c:	c9                   	leave
    734d:	c3                   	ret

000000000000734e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    734e:	55                   	push   %rbp
    734f:	48 89 e5             	mov    %rsp,%rbp
    7352:	48 83 ec 10          	sub    $0x10,%rsp
    7356:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    735a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    735e:	48 89 c7             	mov    %rax,%rdi
    7361:	e8 c2 1b 00 00       	call   8f28 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7366:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    736d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7375:	48 8b 00             	mov    (%rax),%rax
    7378:	48 89 ce             	mov    %rcx,%rsi
    737b:	48 89 c7             	mov    %rax,%rdi
    737e:	e8 b3 1b 00 00       	call   8f36 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7387:	48 89 c7             	mov    %rax,%rdi
    738a:	e8 27 00 00 00       	call   73b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    738f:	90                   	nop
    7390:	c9                   	leave
    7391:	c3                   	ret

0000000000007392 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7392:	55                   	push   %rbp
    7393:	48 89 e5             	mov    %rsp,%rbp
    7396:	48 83 ec 10          	sub    $0x10,%rsp
    739a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    739e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73a2:	48 8b 10             	mov    (%rax),%rdx
    73a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73a9:	48 89 d6             	mov    %rdx,%rsi
    73ac:	48 89 c7             	mov    %rax,%rdi
    73af:	e8 ac 1b 00 00       	call   8f60 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    73b4:	c9                   	leave
    73b5:	c3                   	ret

00000000000073b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    73b6:	55                   	push   %rbp
    73b7:	48 89 e5             	mov    %rsp,%rbp
    73ba:	48 83 ec 10          	sub    $0x10,%rsp
    73be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    73c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    73ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ce:	48 8b 00             	mov    (%rax),%rax
    73d1:	48 29 c2             	sub    %rax,%rdx
    73d4:	48 c1 fa 02          	sar    $0x2,%rdx
    73d8:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    73df:	fc c0 0f 
    73e2:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    73e6:	48 89 c2             	mov    %rax,%rdx
    73e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ed:	48 8b 08             	mov    (%rax),%rcx
    73f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73f4:	48 89 ce             	mov    %rcx,%rsi
    73f7:	48 89 c7             	mov    %rax,%rdi
    73fa:	e8 99 1b 00 00       	call   8f98 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    73ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7403:	48 89 c7             	mov    %rax,%rdi
    7406:	e8 09 fc ff ff       	call   7014 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    740b:	90                   	nop
    740c:	c9                   	leave
    740d:	c3                   	ret

000000000000740e <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>:
	vector(_InputIterator __first, _InputIterator __last,
    740e:	55                   	push   %rbp
    740f:	48 89 e5             	mov    %rsp,%rbp
    7412:	53                   	push   %rbx
    7413:	48 83 ec 38          	sub    $0x38,%rsp
    7417:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    741b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    741f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    7423:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	: _Base(__a)
    7427:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    742b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    742f:	48 89 d6             	mov    %rdx,%rsi
    7432:	48 89 c7             	mov    %rax,%rdi
    7435:	e8 44 c9 ff ff       	call   3d7e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
			      std::__iterator_category(__first));
    743a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    743e:	48 89 c7             	mov    %rax,%rdi
    7441:	e8 87 1b 00 00       	call   8fcd <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
	  _M_range_initialize(__first, __last,
    7446:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    744a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    744e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7452:	48 89 ce             	mov    %rcx,%rsi
    7455:	48 89 c7             	mov    %rax,%rdi
    7458:	e8 ad 1b 00 00       	call   900a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>
	}
    745d:	eb 1a                	jmp    7479 <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_+0x6b>
    745f:	48 89 c3             	mov    %rax,%rbx
    7462:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7466:	48 89 c7             	mov    %rax,%rdi
    7469:	e8 36 c9 ff ff       	call   3da4 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    746e:	48 89 d8             	mov    %rbx,%rax
    7471:	48 89 c7             	mov    %rax,%rdi
    7474:	e8 97 c0 ff ff       	call   3510 <_Unwind_Resume@plt>
    7479:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    747d:	c9                   	leave
    747e:	c3                   	ret
    747f:	90                   	nop

0000000000007480 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
    7480:	55                   	push   %rbp
    7481:	48 89 e5             	mov    %rsp,%rbp
    7484:	48 83 ec 10          	sub    $0x10,%rsp
    7488:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    748c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    7490:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7494:	48 89 c7             	mov    %rax,%rdi
    7497:	e8 1d 1c 00 00       	call   90b9 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    749c:	48 89 c2             	mov    %rax,%rdx
    749f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74a3:	48 89 d6             	mov    %rdx,%rsi
    74a6:	48 89 c7             	mov    %rax,%rdi
    74a9:	e8 1a 1c 00 00       	call   90c8 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    74ae:	90                   	nop
    74af:	c9                   	leave
    74b0:	c3                   	ret
    74b1:	90                   	nop

00000000000074b2 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    74b2:	55                   	push   %rbp
    74b3:	48 89 e5             	mov    %rsp,%rbp
    74b6:	48 83 ec 10          	sub    $0x10,%rsp
    74ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74c2:	48 89 c7             	mov    %rax,%rdi
    74c5:	e8 a2 1c 00 00       	call   916c <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    74ca:	90                   	nop
    74cb:	c9                   	leave
    74cc:	c3                   	ret
    74cd:	90                   	nop

00000000000074ce <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    74ce:	55                   	push   %rbp
    74cf:	48 89 e5             	mov    %rsp,%rbp
    74d2:	48 83 ec 10          	sub    $0x10,%rsp
    74d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74de:	48 89 c7             	mov    %rax,%rdi
    74e1:	e8 92 1c 00 00       	call   9178 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    74e6:	90                   	nop
    74e7:	c9                   	leave
    74e8:	c3                   	ret
    74e9:	90                   	nop

00000000000074ea <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    74ea:	55                   	push   %rbp
    74eb:	48 89 e5             	mov    %rsp,%rbp
    74ee:	53                   	push   %rbx
    74ef:	48 83 ec 28          	sub    $0x28,%rsp
    74f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    74f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    74fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    74ff:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7503:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7507:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    750b:	48 89 d6             	mov    %rdx,%rsi
    750e:	48 89 c7             	mov    %rax,%rdi
    7511:	e8 6d 1c 00 00       	call   9183 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7516:	48 89 c1             	mov    %rax,%rcx
    7519:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    751d:	48 89 c2             	mov    %rax,%rdx
    7520:	48 89 ce             	mov    %rcx,%rsi
    7523:	48 89 df             	mov    %rbx,%rdi
    7526:	e8 d5 1c 00 00       	call   9200 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    752b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    752f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7533:	48 89 d6             	mov    %rdx,%rsi
    7536:	48 89 c7             	mov    %rax,%rdi
    7539:	e8 78 1d 00 00       	call   92b6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    753e:	eb 1a                	jmp    755a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7540:	48 89 c3             	mov    %rax,%rbx
    7543:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7547:	48 89 c7             	mov    %rax,%rdi
    754a:	e8 0f 1d 00 00       	call   925e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    754f:	48 89 d8             	mov    %rbx,%rax
    7552:	48 89 c7             	mov    %rax,%rdi
    7555:	e8 b6 bf ff ff       	call   3510 <_Unwind_Resume@plt>
    755a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    755e:	c9                   	leave
    755f:	c3                   	ret

0000000000007560 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7560:	55                   	push   %rbp
    7561:	48 89 e5             	mov    %rsp,%rbp
    7564:	48 83 ec 10          	sub    $0x10,%rsp
    7568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    756c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7570:	48 89 c7             	mov    %rax,%rdi
    7573:	e8 7e 1d 00 00       	call   92f6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7578:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    757b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    757f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7587:	48 8b 00             	mov    (%rax),%rax
    758a:	48 89 ce             	mov    %rcx,%rsi
    758d:	48 89 c7             	mov    %rax,%rdi
    7590:	e8 6f 1d 00 00       	call   9304 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7599:	48 89 c7             	mov    %rax,%rdi
    759c:	e8 bd 1c 00 00       	call   925e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    75a1:	90                   	nop
    75a2:	c9                   	leave
    75a3:	c3                   	ret

00000000000075a4 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    75a4:	55                   	push   %rbp
    75a5:	48 89 e5             	mov    %rsp,%rbp
    75a8:	48 83 ec 10          	sub    $0x10,%rsp
    75ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    75b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75b4:	48 8b 10             	mov    (%rax),%rdx
    75b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75bb:	48 89 d6             	mov    %rdx,%rsi
    75be:	48 89 c7             	mov    %rax,%rdi
    75c1:	e8 68 1d 00 00       	call   932e <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    75c6:	c9                   	leave
    75c7:	c3                   	ret

00000000000075c8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    75c8:	55                   	push   %rbp
    75c9:	48 89 e5             	mov    %rsp,%rbp
    75cc:	48 83 ec 20          	sub    $0x20,%rsp
    75d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    75d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    75d8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    75dc:	48 89 d6             	mov    %rdx,%rsi
    75df:	48 89 c7             	mov    %rax,%rdi
    75e2:	e8 59 1d 00 00       	call   9340 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    75e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75eb:	c9                   	leave
    75ec:	c3                   	ret
    75ed:	90                   	nop

00000000000075ee <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    75ee:	55                   	push   %rbp
    75ef:	48 89 e5             	mov    %rsp,%rbp
    75f2:	48 83 ec 20          	sub    $0x20,%rsp
    75f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    75fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75fe:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7602:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7606:	48 89 d6             	mov    %rdx,%rsi
    7609:	48 89 c7             	mov    %rax,%rdi
    760c:	e8 2f 1d 00 00       	call   9340 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    7611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7615:	c9                   	leave
    7616:	c3                   	ret

0000000000007617 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    7617:	55                   	push   %rbp
    7618:	48 89 e5             	mov    %rsp,%rbp
    761b:	53                   	push   %rbx
    761c:	48 83 ec 18          	sub    $0x18,%rsp
    7620:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7624:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    7628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    762c:	48 89 c7             	mov    %rax,%rdi
    762f:	e8 2a 1d 00 00       	call   935e <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    7634:	48 8b 18             	mov    (%rax),%rbx
    7637:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    763b:	48 89 c7             	mov    %rax,%rdi
    763e:	e8 1b 1d 00 00       	call   935e <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    7643:	48 8b 00             	mov    (%rax),%rax
    7646:	48 39 c3             	cmp    %rax,%rbx
    7649:	0f 95 c0             	setne  %al
    764c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7650:	c9                   	leave
    7651:	c3                   	ret

0000000000007652 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    7652:	55                   	push   %rbp
    7653:	48 89 e5             	mov    %rsp,%rbp
    7656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    765a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    765e:	48 8b 00             	mov    (%rax),%rax
    7661:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7665:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7669:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    766c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7670:	5d                   	pop    %rbp
    7671:	c3                   	ret

0000000000007672 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    7672:	55                   	push   %rbp
    7673:	48 89 e5             	mov    %rsp,%rbp
    7676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    767a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    767e:	48 8b 00             	mov    (%rax),%rax
    7681:	5d                   	pop    %rbp
    7682:	c3                   	ret
    7683:	90                   	nop

0000000000007684 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    7684:	55                   	push   %rbp
    7685:	48 89 e5             	mov    %rsp,%rbp
    7688:	48 83 ec 20          	sub    $0x20,%rsp
    768c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    7690:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7694:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7698:	48 89 d6             	mov    %rdx,%rsi
    769b:	48 89 c7             	mov    %rax,%rdi
    769e:	e8 c9 1c 00 00       	call   936c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    76a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76a7:	c9                   	leave
    76a8:	c3                   	ret
    76a9:	90                   	nop

00000000000076aa <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    76aa:	55                   	push   %rbp
    76ab:	48 89 e5             	mov    %rsp,%rbp
    76ae:	48 83 ec 20          	sub    $0x20,%rsp
    76b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    76b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76ba:	48 8d 50 08          	lea    0x8(%rax),%rdx
    76be:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    76c2:	48 89 d6             	mov    %rdx,%rsi
    76c5:	48 89 c7             	mov    %rax,%rdi
    76c8:	e8 9f 1c 00 00       	call   936c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    76cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76d1:	c9                   	leave
    76d2:	c3                   	ret

00000000000076d3 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    76d3:	55                   	push   %rbp
    76d4:	48 89 e5             	mov    %rsp,%rbp
    76d7:	53                   	push   %rbx
    76d8:	48 83 ec 18          	sub    $0x18,%rsp
    76dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    76e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76e8:	48 89 c7             	mov    %rax,%rdi
    76eb:	e8 9a 1c 00 00       	call   938a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    76f0:	48 8b 18             	mov    (%rax),%rbx
    76f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    76f7:	48 89 c7             	mov    %rax,%rdi
    76fa:	e8 8b 1c 00 00       	call   938a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    76ff:	48 8b 00             	mov    (%rax),%rax
    7702:	48 39 c3             	cmp    %rax,%rbx
    7705:	0f 95 c0             	setne  %al
    7708:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    770c:	c9                   	leave
    770d:	c3                   	ret

000000000000770e <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    770e:	55                   	push   %rbp
    770f:	48 89 e5             	mov    %rsp,%rbp
    7712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    7716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    771a:	48 8b 00             	mov    (%rax),%rax
    771d:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    7724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7728:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    772b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    772f:	5d                   	pop    %rbp
    7730:	c3                   	ret
    7731:	90                   	nop

0000000000007732 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    7732:	55                   	push   %rbp
    7733:	48 89 e5             	mov    %rsp,%rbp
    7736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    773a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    773e:	48 8b 00             	mov    (%rax),%rax
    7741:	5d                   	pop    %rbp
    7742:	c3                   	ret
    7743:	90                   	nop

0000000000007744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7744:	55                   	push   %rbp
    7745:	48 89 e5             	mov    %rsp,%rbp
    7748:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    774c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7750:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7758:	48 8b 00             	mov    (%rax),%rax
    775b:	48 29 c2             	sub    %rax,%rdx
    775e:	48 89 d0             	mov    %rdx,%rax
    7761:	48 c1 f8 03          	sar    $0x3,%rax
    7765:	5d                   	pop    %rbp
    7766:	c3                   	ret
    7767:	90                   	nop

0000000000007768 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7768:	55                   	push   %rbp
    7769:	48 89 e5             	mov    %rsp,%rbp
    776c:	48 83 ec 10          	sub    $0x10,%rsp
    7770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7778:	48 8b 10             	mov    (%rax),%rdx
    777b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    777f:	48 89 d6             	mov    %rdx,%rsi
    7782:	48 89 c7             	mov    %rax,%rdi
    7785:	e8 0e 1c 00 00       	call   9398 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    778a:	c9                   	leave
    778b:	c3                   	ret

000000000000778c <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    778c:	55                   	push   %rbp
    778d:	48 89 e5             	mov    %rsp,%rbp
    7790:	48 83 ec 10          	sub    $0x10,%rsp
    7794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    779c:	48 8b 10             	mov    (%rax),%rdx
    779f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77a3:	48 89 d6             	mov    %rdx,%rsi
    77a6:	48 89 c7             	mov    %rax,%rdi
    77a9:	e8 ea 1b 00 00       	call   9398 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    77ae:	c9                   	leave
    77af:	c3                   	ret

00000000000077b0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    77b0:	55                   	push   %rbp
    77b1:	48 89 e5             	mov    %rsp,%rbp
    77b4:	48 83 ec 20          	sub    $0x20,%rsp
    77b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    77bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    77c0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    77c4:	48 89 d6             	mov    %rdx,%rsi
    77c7:	48 89 c7             	mov    %rax,%rdi
    77ca:	e8 db 1b 00 00       	call   93aa <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    77cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77d3:	c9                   	leave
    77d4:	c3                   	ret
    77d5:	90                   	nop

00000000000077d6 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    77d6:	55                   	push   %rbp
    77d7:	48 89 e5             	mov    %rsp,%rbp
    77da:	48 83 ec 20          	sub    $0x20,%rsp
    77de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    77e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77e6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    77ea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    77ee:	48 89 d6             	mov    %rdx,%rsi
    77f1:	48 89 c7             	mov    %rax,%rdi
    77f4:	e8 b1 1b 00 00       	call   93aa <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    77f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77fd:	c9                   	leave
    77fe:	c3                   	ret

00000000000077ff <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    77ff:	55                   	push   %rbp
    7800:	48 89 e5             	mov    %rsp,%rbp
    7803:	53                   	push   %rbx
    7804:	48 83 ec 18          	sub    $0x18,%rsp
    7808:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    780c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    7810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7814:	48 89 c7             	mov    %rax,%rdi
    7817:	e8 ac 1b 00 00       	call   93c8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    781c:	48 8b 18             	mov    (%rax),%rbx
    781f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7823:	48 89 c7             	mov    %rax,%rdi
    7826:	e8 9d 1b 00 00       	call   93c8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    782b:	48 8b 00             	mov    (%rax),%rax
    782e:	48 39 c3             	cmp    %rax,%rbx
    7831:	0f 95 c0             	setne  %al
    7834:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7838:	c9                   	leave
    7839:	c3                   	ret

000000000000783a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    783a:	55                   	push   %rbp
    783b:	48 89 e5             	mov    %rsp,%rbp
    783e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    7842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7846:	48 8b 00             	mov    (%rax),%rax
    7849:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    7850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7854:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    7857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    785b:	5d                   	pop    %rbp
    785c:	c3                   	ret
    785d:	90                   	nop

000000000000785e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    785e:	55                   	push   %rbp
    785f:	48 89 e5             	mov    %rsp,%rbp
    7862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    7866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    786a:	48 8b 00             	mov    (%rax),%rax
    786d:	5d                   	pop    %rbp
    786e:	c3                   	ret
    786f:	90                   	nop

0000000000007870 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    7870:	55                   	push   %rbp
    7871:	48 89 e5             	mov    %rsp,%rbp
    7874:	48 83 ec 20          	sub    $0x20,%rsp
    7878:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    787c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7880:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7884:	48 89 d6             	mov    %rdx,%rsi
    7887:	48 89 c7             	mov    %rax,%rdi
    788a:	e8 47 1b 00 00       	call   93d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    788f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7893:	c9                   	leave
    7894:	c3                   	ret
    7895:	90                   	nop

0000000000007896 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    7896:	55                   	push   %rbp
    7897:	48 89 e5             	mov    %rsp,%rbp
    789a:	48 83 ec 20          	sub    $0x20,%rsp
    789e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    78a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78a6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    78aa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    78ae:	48 89 d6             	mov    %rdx,%rsi
    78b1:	48 89 c7             	mov    %rax,%rdi
    78b4:	e8 1d 1b 00 00       	call   93d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    78b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78bd:	c9                   	leave
    78be:	c3                   	ret

00000000000078bf <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    78bf:	55                   	push   %rbp
    78c0:	48 89 e5             	mov    %rsp,%rbp
    78c3:	53                   	push   %rbx
    78c4:	48 83 ec 18          	sub    $0x18,%rsp
    78c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    78cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    78d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78d4:	48 89 c7             	mov    %rax,%rdi
    78d7:	e8 18 1b 00 00       	call   93f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    78dc:	48 8b 18             	mov    (%rax),%rbx
    78df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    78e3:	48 89 c7             	mov    %rax,%rdi
    78e6:	e8 09 1b 00 00       	call   93f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    78eb:	48 8b 00             	mov    (%rax),%rax
    78ee:	48 39 c3             	cmp    %rax,%rbx
    78f1:	0f 95 c0             	setne  %al
    78f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    78f8:	c9                   	leave
    78f9:	c3                   	ret

00000000000078fa <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    78fa:	55                   	push   %rbp
    78fb:	48 89 e5             	mov    %rsp,%rbp
    78fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    7902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7906:	48 8b 00             	mov    (%rax),%rax
    7909:	48 8d 50 08          	lea    0x8(%rax),%rdx
    790d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7911:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    7914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    7918:	5d                   	pop    %rbp
    7919:	c3                   	ret

000000000000791a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    791a:	55                   	push   %rbp
    791b:	48 89 e5             	mov    %rsp,%rbp
    791e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    7922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7926:	48 8b 00             	mov    (%rax),%rax
    7929:	5d                   	pop    %rbp
    792a:	c3                   	ret
    792b:	90                   	nop

000000000000792c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    792c:	55                   	push   %rbp
    792d:	48 89 e5             	mov    %rsp,%rbp
    7930:	48 83 ec 10          	sub    $0x10,%rsp
    7934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    793c:	48 89 c7             	mov    %rax,%rdi
    793f:	e8 f6 1a 00 00       	call   943a <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    7944:	90                   	nop
    7945:	c9                   	leave
    7946:	c3                   	ret
    7947:	90                   	nop

0000000000007948 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    7948:	55                   	push   %rbp
    7949:	48 89 e5             	mov    %rsp,%rbp
    794c:	48 83 ec 10          	sub    $0x10,%rsp
    7950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7958:	48 89 c7             	mov    %rax,%rdi
    795b:	e8 a2 1a 00 00       	call   9402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>
    7960:	90                   	nop
    7961:	c9                   	leave
    7962:	c3                   	ret
    7963:	90                   	nop

0000000000007964 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>:
	set(_InputIterator __first, _InputIterator __last)
    7964:	55                   	push   %rbp
    7965:	48 89 e5             	mov    %rsp,%rbp
    7968:	53                   	push   %rbx
    7969:	48 83 ec 28          	sub    $0x28,%rsp
    796d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7971:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7975:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _M_t()
    7979:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    797d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7981:	0f 11 00             	movups %xmm0,(%rax)
    7984:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7988:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    798c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7990:	48 89 c7             	mov    %rax,%rdi
    7993:	e8 b0 ff ff ff       	call   7948 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>
	{ _M_t._M_insert_range_unique(__first, __last); }
    7998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    799c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    79a0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    79a4:	48 89 ce             	mov    %rcx,%rsi
    79a7:	48 89 c7             	mov    %rax,%rdi
    79aa:	e8 a7 1a 00 00       	call   9456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>
    79af:	eb 1a                	jmp    79cb <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_+0x67>
    79b1:	48 89 c3             	mov    %rax,%rbx
    79b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79b8:	48 89 c7             	mov    %rax,%rdi
    79bb:	e8 12 00 00 00       	call   79d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    79c0:	48 89 d8             	mov    %rbx,%rax
    79c3:	48 89 c7             	mov    %rax,%rdi
    79c6:	e8 45 bb ff ff       	call   3510 <_Unwind_Resume@plt>
    79cb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    79cf:	c9                   	leave
    79d0:	c3                   	ret
    79d1:	90                   	nop

00000000000079d2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    79d2:	55                   	push   %rbp
    79d3:	48 89 e5             	mov    %rsp,%rbp
    79d6:	48 83 ec 10          	sub    $0x10,%rsp
    79da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    79de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79e2:	48 89 c7             	mov    %rax,%rdi
    79e5:	e8 2e 1b 00 00       	call   9518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    79ea:	48 89 c2             	mov    %rax,%rdx
    79ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79f1:	48 89 d6             	mov    %rdx,%rsi
    79f4:	48 89 c7             	mov    %rax,%rdi
    79f7:	e8 b6 1a 00 00       	call   94b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
    79fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a00:	48 89 c7             	mov    %rax,%rdi
    7a03:	e8 24 ff ff ff       	call   792c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>
    7a08:	90                   	nop
    7a09:	c9                   	leave
    7a0a:	c3                   	ret
    7a0b:	90                   	nop

0000000000007a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    7a0c:	55                   	push   %rbp
    7a0d:	48 89 e5             	mov    %rsp,%rbp
    7a10:	53                   	push   %rbx
    7a11:	48 83 ec 38          	sub    $0x38,%rsp
    7a15:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7a19:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7a1d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    7a21:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    7a25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a29:	48 89 c7             	mov    %rax,%rdi
    7a2c:	e8 af b7 ff ff       	call   31e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    7a31:	48 89 c1             	mov    %rax,%rcx
    7a34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a38:	48 89 c2             	mov    %rax,%rdx
    7a3b:	48 89 ce             	mov    %rcx,%rsi
    7a3e:	48 89 df             	mov    %rbx,%rdi
    7a41:	e8 aa b8 ff ff       	call   32f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    7a46:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    7a4b:	75 0f                	jne    7a5c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    7a4d:	48 8d 05 5c aa 00 00 	lea    0xaa5c(%rip),%rax        # 124b0 <_ZN6__pstl9execution2v1L5unseqE+0x249>
    7a54:	48 89 c7             	mov    %rax,%rdi
    7a57:	e8 24 b7 ff ff       	call   3180 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    7a5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a60:	48 89 c7             	mov    %rax,%rdi
    7a63:	e8 32 f4 ff ff       	call   6e9a <_ZNSt11char_traitsIcE6lengthEPKc>
    7a68:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    7a6c:	48 01 d0             	add    %rdx,%rax
    7a6f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    7a73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7a77:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    7a7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a7f:	48 89 ce             	mov    %rcx,%rsi
    7a82:	48 89 c7             	mov    %rax,%rdi
    7a85:	e8 a0 12 00 00       	call   8d2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    7a8a:	eb 1a                	jmp    7aa6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    7a8c:	48 89 c3             	mov    %rax,%rbx
    7a8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a93:	48 89 c7             	mov    %rax,%rdi
    7a96:	e8 cf f7 ff ff       	call   726a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    7a9b:	48 89 d8             	mov    %rbx,%rax
    7a9e:	48 89 c7             	mov    %rax,%rdi
    7aa1:	e8 6a ba ff ff       	call   3510 <_Unwind_Resume@plt>
    7aa6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7aaa:	c9                   	leave
    7aab:	c3                   	ret

0000000000007aac <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
    7aac:	55                   	push   %rbp
    7aad:	48 89 e5             	mov    %rsp,%rbp
    7ab0:	48 83 ec 10          	sub    $0x10,%rsp
    7ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ab8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.erase(__x); }
    7abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ac0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ac4:	48 89 d6             	mov    %rdx,%rsi
    7ac7:	48 89 c7             	mov    %rax,%rdi
    7aca:	e8 63 1a 00 00       	call   9532 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    7acf:	c9                   	leave
    7ad0:	c3                   	ret
    7ad1:	90                   	nop

0000000000007ad2 <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    7ad2:	55                   	push   %rbp
    7ad3:	48 89 e5             	mov    %rsp,%rbp
    7ad6:	48 83 ec 10          	sub    $0x10,%rsp
    7ada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.empty(); }
    7ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ae2:	48 89 c7             	mov    %rax,%rdi
    7ae5:	e8 dc 1a 00 00       	call   95c6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>
    7aea:	c9                   	leave
    7aeb:	c3                   	ret

0000000000007aec <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    7aec:	55                   	push   %rbp
    7aed:	48 89 e5             	mov    %rsp,%rbp
    7af0:	48 83 ec 10          	sub    $0x10,%rsp
    7af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    7af8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7afc:	48 89 c7             	mov    %rax,%rdi
    7aff:	e8 da 1a 00 00       	call   95de <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    7b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b08:	48 89 c7             	mov    %rax,%rdi
    7b0b:	e8 ea 1a 00 00       	call   95fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    7b10:	90                   	nop
    7b11:	c9                   	leave
    7b12:	c3                   	ret
    7b13:	90                   	nop

0000000000007b14 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
    7b14:	55                   	push   %rbp
    7b15:	48 89 e5             	mov    %rsp,%rbp
    7b18:	48 83 ec 10          	sub    $0x10,%rsp
    7b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b24:	48 89 c7             	mov    %rax,%rdi
    7b27:	e8 fc 1a 00 00       	call   9628 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    7b2c:	90                   	nop
    7b2d:	c9                   	leave
    7b2e:	c3                   	ret
    7b2f:	90                   	nop

0000000000007b30 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7b30:	55                   	push   %rbp
    7b31:	48 89 e5             	mov    %rsp,%rbp
    7b34:	48 83 ec 10          	sub    $0x10,%rsp
    7b38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b40:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7b44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b48:	48 8b 00             	mov    (%rax),%rax
    7b4b:	48 29 c2             	sub    %rax,%rdx
    7b4e:	48 89 d0             	mov    %rdx,%rax
    7b51:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    7b55:	48 89 c2             	mov    %rax,%rdx
    7b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b5c:	48 8b 08             	mov    (%rax),%rcx
    7b5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b63:	48 89 ce             	mov    %rcx,%rsi
    7b66:	48 89 c7             	mov    %rax,%rdi
    7b69:	e8 c6 1a 00 00       	call   9634 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    7b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b72:	48 89 c7             	mov    %rax,%rdi
    7b75:	e8 d2 f4 ff ff       	call   704c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    7b7a:	90                   	nop
    7b7b:	c9                   	leave
    7b7c:	c3                   	ret
    7b7d:	90                   	nop

0000000000007b7e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7b7e:	55                   	push   %rbp
    7b7f:	48 89 e5             	mov    %rsp,%rbp
    7b82:	48 83 ec 10          	sub    $0x10,%rsp
    7b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b8e:	48 89 c7             	mov    %rax,%rdi
    7b91:	e8 d4 1a 00 00       	call   966a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    7b96:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b9d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7ba1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ba5:	48 8b 00             	mov    (%rax),%rax
    7ba8:	48 89 ce             	mov    %rcx,%rsi
    7bab:	48 89 c7             	mov    %rax,%rdi
    7bae:	e8 c5 1a 00 00       	call   9678 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    7bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bb7:	48 89 c7             	mov    %rax,%rdi
    7bba:	e8 71 ff ff ff       	call   7b30 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    7bbf:	90                   	nop
    7bc0:	c9                   	leave
    7bc1:	c3                   	ret

0000000000007bc2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    7bc2:	55                   	push   %rbp
    7bc3:	48 89 e5             	mov    %rsp,%rbp
    7bc6:	48 83 ec 10          	sub    $0x10,%rsp
    7bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    7bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bd2:	48 89 c7             	mov    %rax,%rdi
    7bd5:	e8 c8 1a 00 00       	call   96a2 <_ZNSaI16VkPresentModeKHREC1Ev>
    7bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bde:	48 89 c7             	mov    %rax,%rdi
    7be1:	e8 d8 1a 00 00       	call   96be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    7be6:	90                   	nop
    7be7:	c9                   	leave
    7be8:	c3                   	ret
    7be9:	90                   	nop

0000000000007bea <_ZNSaI16VkPresentModeKHRED1Ev>:
    7bea:	55                   	push   %rbp
    7beb:	48 89 e5             	mov    %rsp,%rbp
    7bee:	48 83 ec 10          	sub    $0x10,%rsp
    7bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bfa:	48 89 c7             	mov    %rax,%rdi
    7bfd:	e8 ea 1a 00 00       	call   96ec <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    7c02:	90                   	nop
    7c03:	c9                   	leave
    7c04:	c3                   	ret
    7c05:	90                   	nop

0000000000007c06 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7c06:	55                   	push   %rbp
    7c07:	48 89 e5             	mov    %rsp,%rbp
    7c0a:	48 83 ec 10          	sub    $0x10,%rsp
    7c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c16:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c1e:	48 8b 00             	mov    (%rax),%rax
    7c21:	48 29 c2             	sub    %rax,%rdx
    7c24:	48 89 d0             	mov    %rdx,%rax
    7c27:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    7c2b:	48 89 c2             	mov    %rax,%rdx
    7c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c32:	48 8b 08             	mov    (%rax),%rcx
    7c35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c39:	48 89 ce             	mov    %rcx,%rsi
    7c3c:	48 89 c7             	mov    %rax,%rdi
    7c3f:	e8 b4 1a 00 00       	call   96f8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    7c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c48:	48 89 c7             	mov    %rax,%rdi
    7c4b:	e8 50 f4 ff ff       	call   70a0 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    7c50:	90                   	nop
    7c51:	c9                   	leave
    7c52:	c3                   	ret
    7c53:	90                   	nop

0000000000007c54 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7c54:	55                   	push   %rbp
    7c55:	48 89 e5             	mov    %rsp,%rbp
    7c58:	48 83 ec 10          	sub    $0x10,%rsp
    7c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c64:	48 89 c7             	mov    %rax,%rdi
    7c67:	e8 c2 1a 00 00       	call   972e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    7c6c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c73:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7c77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c7b:	48 8b 00             	mov    (%rax),%rax
    7c7e:	48 89 ce             	mov    %rcx,%rsi
    7c81:	48 89 c7             	mov    %rax,%rdi
    7c84:	e8 b3 1a 00 00       	call   973c <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    7c89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c8d:	48 89 c7             	mov    %rax,%rdi
    7c90:	e8 71 ff ff ff       	call   7c06 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    7c95:	90                   	nop
    7c96:	c9                   	leave
    7c97:	c3                   	ret

0000000000007c98 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    7c98:	55                   	push   %rbp
    7c99:	48 89 e5             	mov    %rsp,%rbp
    7c9c:	48 83 ec 10          	sub    $0x10,%rsp
    7ca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ca4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    7ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cac:	48 89 c7             	mov    %rax,%rdi
    7caf:	e8 b2 1a 00 00       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    7cb4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7cb8:	0f 92 c0             	setb   %al
    7cbb:	84 c0                	test   %al,%al
    7cbd:	74 24                	je     7ce3 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    7cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cc3:	48 89 c7             	mov    %rax,%rdi
    7cc6:	e8 9b 1a 00 00       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    7ccb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ccf:	48 29 c2             	sub    %rax,%rdx
    7cd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cd6:	48 89 d6             	mov    %rdx,%rsi
    7cd9:	48 89 c7             	mov    %rax,%rdi
    7cdc:	e8 a9 1a 00 00       	call   978a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>
      }
    7ce1:	eb 38                	jmp    7d1b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    7ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ce7:	48 89 c7             	mov    %rax,%rdi
    7cea:	e8 77 1a 00 00       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    7cef:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    7cf3:	0f 92 c0             	setb   %al
    7cf6:	84 c0                	test   %al,%al
    7cf8:	74 21                	je     7d1b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    7cfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cfe:	48 8b 00             	mov    (%rax),%rax
    7d01:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d05:	48 c1 e2 03          	shl    $0x3,%rdx
    7d09:	48 01 c2             	add    %rax,%rdx
    7d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d10:	48 89 d6             	mov    %rdx,%rsi
    7d13:	48 89 c7             	mov    %rax,%rdi
    7d16:	e8 79 1c 00 00       	call   9994 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    7d1b:	90                   	nop
    7d1c:	c9                   	leave
    7d1d:	c3                   	ret

0000000000007d1e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7d1e:	55                   	push   %rbp
    7d1f:	48 89 e5             	mov    %rsp,%rbp
    7d22:	48 83 ec 10          	sub    $0x10,%rsp
    7d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7d2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d2e:	48 8b 10             	mov    (%rax),%rdx
    7d31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d35:	48 89 d6             	mov    %rdx,%rsi
    7d38:	48 89 c7             	mov    %rax,%rdi
    7d3b:	e8 b4 1c 00 00       	call   99f4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7d40:	c9                   	leave
    7d41:	c3                   	ret

0000000000007d42 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    7d42:	55                   	push   %rbp
    7d43:	48 89 e5             	mov    %rsp,%rbp
    7d46:	48 83 ec 10          	sub    $0x10,%rsp
    7d4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    7d52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d56:	48 89 c7             	mov    %rax,%rdi
    7d59:	e8 a8 1c 00 00       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    7d5e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7d62:	0f 92 c0             	setb   %al
    7d65:	84 c0                	test   %al,%al
    7d67:	74 24                	je     7d8d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    7d69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d6d:	48 89 c7             	mov    %rax,%rdi
    7d70:	e8 91 1c 00 00       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    7d75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7d79:	48 29 c2             	sub    %rax,%rdx
    7d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d80:	48 89 d6             	mov    %rdx,%rsi
    7d83:	48 89 c7             	mov    %rax,%rdi
    7d86:	e8 9f 1c 00 00       	call   9a2a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>
      }
    7d8b:	eb 38                	jmp    7dc5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    7d8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d91:	48 89 c7             	mov    %rax,%rdi
    7d94:	e8 6d 1c 00 00       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    7d99:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    7d9d:	0f 92 c0             	setb   %al
    7da0:	84 c0                	test   %al,%al
    7da2:	74 21                	je     7dc5 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    7da4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7da8:	48 8b 00             	mov    (%rax),%rax
    7dab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7daf:	48 c1 e2 02          	shl    $0x2,%rdx
    7db3:	48 01 c2             	add    %rax,%rdx
    7db6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dba:	48 89 d6             	mov    %rdx,%rsi
    7dbd:	48 89 c7             	mov    %rax,%rdi
    7dc0:	e8 6f 1e 00 00       	call   9c34 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    7dc5:	90                   	nop
    7dc6:	c9                   	leave
    7dc7:	c3                   	ret

0000000000007dc8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7dc8:	55                   	push   %rbp
    7dc9:	48 89 e5             	mov    %rsp,%rbp
    7dcc:	48 83 ec 10          	sub    $0x10,%rsp
    7dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dd8:	48 8b 10             	mov    (%rax),%rdx
    7ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ddf:	48 89 d6             	mov    %rdx,%rsi
    7de2:	48 89 c7             	mov    %rax,%rdi
    7de5:	e8 aa 1e 00 00       	call   9c94 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7dea:	c9                   	leave
    7deb:	c3                   	ret

0000000000007dec <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    7dec:	55                   	push   %rbp
    7ded:	48 89 e5             	mov    %rsp,%rbp
    7df0:	48 83 ec 20          	sub    $0x20,%rsp
    7df4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    7df8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dfc:	48 89 c7             	mov    %rax,%rdi
    7dff:	e8 86 08 00 00       	call   868a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    7e04:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7e08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e0c:	48 89 c7             	mov    %rax,%rdi
    7e0f:	e8 50 08 00 00       	call   8664 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    7e14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7e18:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7e1c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7e20:	48 89 d6             	mov    %rdx,%rsi
    7e23:	48 89 c7             	mov    %rax,%rdi
    7e26:	e8 7b 1e 00 00       	call   9ca6 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    7e2b:	c9                   	leave
    7e2c:	c3                   	ret
    7e2d:	90                   	nop

0000000000007e2e <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    7e2e:	55                   	push   %rbp
    7e2f:	48 89 e5             	mov    %rsp,%rbp
    7e32:	48 83 ec 20          	sub    $0x20,%rsp
    7e36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    7e3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e3e:	48 89 c7             	mov    %rax,%rdi
    7e41:	e8 20 09 00 00       	call   8766 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    7e46:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7e4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e4e:	48 89 c7             	mov    %rax,%rdi
    7e51:	e8 ea 08 00 00       	call   8740 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    7e56:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7e5a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    7e5e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7e62:	48 89 d6             	mov    %rdx,%rsi
    7e65:	48 89 c7             	mov    %rax,%rdi
    7e68:	e8 74 1e 00 00       	call   9ce1 <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    7e6d:	c9                   	leave
    7e6e:	c3                   	ret
    7e6f:	90                   	nop

0000000000007e70 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7e70:	55                   	push   %rbp
    7e71:	48 89 e5             	mov    %rsp,%rbp
    7e74:	48 83 ec 10          	sub    $0x10,%rsp
    7e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e80:	48 89 c7             	mov    %rax,%rdi
    7e83:	e8 94 1e 00 00       	call   9d1c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    7e88:	90                   	nop
    7e89:	c9                   	leave
    7e8a:	c3                   	ret
    7e8b:	90                   	nop

0000000000007e8c <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7e8c:	55                   	push   %rbp
    7e8d:	48 89 e5             	mov    %rsp,%rbp
    7e90:	48 83 ec 10          	sub    $0x10,%rsp
    7e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e9c:	48 89 c7             	mov    %rax,%rdi
    7e9f:	e8 84 1e 00 00       	call   9d28 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    7ea4:	90                   	nop
    7ea5:	c9                   	leave
    7ea6:	c3                   	ret
    7ea7:	90                   	nop

0000000000007ea8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7ea8:	55                   	push   %rbp
    7ea9:	48 89 e5             	mov    %rsp,%rbp
    7eac:	53                   	push   %rbx
    7ead:	48 83 ec 28          	sub    $0x28,%rsp
    7eb1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7eb5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7eb9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7ebd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7ec1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7ec5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ec9:	48 89 d6             	mov    %rdx,%rsi
    7ecc:	48 89 c7             	mov    %rax,%rdi
    7ecf:	e8 5f 1e 00 00       	call   9d33 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    7ed4:	48 89 c1             	mov    %rax,%rcx
    7ed7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7edb:	48 89 c2             	mov    %rax,%rdx
    7ede:	48 89 ce             	mov    %rcx,%rsi
    7ee1:	48 89 df             	mov    %rbx,%rdi
    7ee4:	e8 c7 1e 00 00       	call   9db0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    7ee9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ef1:	48 89 d6             	mov    %rdx,%rsi
    7ef4:	48 89 c7             	mov    %rax,%rdi
    7ef7:	e8 60 1f 00 00       	call   9e5c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    7efc:	eb 1a                	jmp    7f18 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    7efe:	48 89 c3             	mov    %rax,%rbx
    7f01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f05:	48 89 c7             	mov    %rax,%rdi
    7f08:	e8 01 1f 00 00       	call   9e0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7f0d:	48 89 d8             	mov    %rbx,%rax
    7f10:	48 89 c7             	mov    %rax,%rdi
    7f13:	e8 f8 b5 ff ff       	call   3510 <_Unwind_Resume@plt>
    7f18:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f1c:	c9                   	leave
    7f1d:	c3                   	ret

0000000000007f1e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7f1e:	55                   	push   %rbp
    7f1f:	48 89 e5             	mov    %rsp,%rbp
    7f22:	48 83 ec 10          	sub    $0x10,%rsp
    7f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f2e:	48 89 c7             	mov    %rax,%rdi
    7f31:	e8 66 1f 00 00       	call   9e9c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    7f36:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7f39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f3d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f45:	48 8b 00             	mov    (%rax),%rax
    7f48:	48 89 ce             	mov    %rcx,%rsi
    7f4b:	48 89 c7             	mov    %rax,%rdi
    7f4e:	e8 57 1f 00 00       	call   9eaa <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    7f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f57:	48 89 c7             	mov    %rax,%rdi
    7f5a:	e8 af 1e 00 00       	call   9e0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7f5f:	90                   	nop
    7f60:	c9                   	leave
    7f61:	c3                   	ret

0000000000007f62 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7f62:	55                   	push   %rbp
    7f63:	48 89 e5             	mov    %rsp,%rbp
    7f66:	48 83 ec 10          	sub    $0x10,%rsp
    7f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f72:	48 8b 10             	mov    (%rax),%rdx
    7f75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f79:	48 89 d6             	mov    %rdx,%rsi
    7f7c:	48 89 c7             	mov    %rax,%rdi
    7f7f:	e8 50 1f 00 00       	call   9ed4 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    7f84:	c9                   	leave
    7f85:	c3                   	ret

0000000000007f86 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    7f86:	55                   	push   %rbp
    7f87:	48 89 e5             	mov    %rsp,%rbp
    7f8a:	48 83 ec 20          	sub    $0x20,%rsp
    7f8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    7f92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7f9a:	48 89 d6             	mov    %rdx,%rsi
    7f9d:	48 89 c7             	mov    %rax,%rdi
    7fa0:	e8 41 1f 00 00       	call   9ee6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    7fa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa9:	c9                   	leave
    7faa:	c3                   	ret
    7fab:	90                   	nop

0000000000007fac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    7fac:	55                   	push   %rbp
    7fad:	48 89 e5             	mov    %rsp,%rbp
    7fb0:	48 83 ec 20          	sub    $0x20,%rsp
    7fb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    7fb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fbc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7fc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7fc4:	48 89 d6             	mov    %rdx,%rsi
    7fc7:	48 89 c7             	mov    %rax,%rdi
    7fca:	e8 17 1f 00 00       	call   9ee6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    7fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fd3:	c9                   	leave
    7fd4:	c3                   	ret

0000000000007fd5 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    7fd5:	55                   	push   %rbp
    7fd6:	48 89 e5             	mov    %rsp,%rbp
    7fd9:	53                   	push   %rbx
    7fda:	48 83 ec 18          	sub    $0x18,%rsp
    7fde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7fe2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    7fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fea:	48 89 c7             	mov    %rax,%rdi
    7fed:	e8 12 1f 00 00       	call   9f04 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    7ff2:	48 8b 18             	mov    (%rax),%rbx
    7ff5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ff9:	48 89 c7             	mov    %rax,%rdi
    7ffc:	e8 03 1f 00 00       	call   9f04 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    8001:	48 8b 00             	mov    (%rax),%rax
    8004:	48 39 c3             	cmp    %rax,%rbx
    8007:	0f 95 c0             	setne  %al
    800a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    800e:	c9                   	leave
    800f:	c3                   	ret

0000000000008010 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8010:	55                   	push   %rbp
    8011:	48 89 e5             	mov    %rsp,%rbp
    8014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    801c:	48 8b 00             	mov    (%rax),%rax
    801f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8023:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8027:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    802a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    802e:	5d                   	pop    %rbp
    802f:	c3                   	ret

0000000000008030 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8030:	55                   	push   %rbp
    8031:	48 89 e5             	mov    %rsp,%rbp
    8034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    803c:	48 8b 00             	mov    (%rax),%rax
    803f:	5d                   	pop    %rbp
    8040:	c3                   	ret
    8041:	90                   	nop

0000000000008042 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8042:	55                   	push   %rbp
    8043:	48 89 e5             	mov    %rsp,%rbp
    8046:	48 83 ec 10          	sub    $0x10,%rsp
    804a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    804e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8052:	48 89 c7             	mov    %rax,%rdi
    8055:	e8 b8 1e 00 00       	call   9f12 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    805a:	90                   	nop
    805b:	c9                   	leave
    805c:	c3                   	ret
    805d:	90                   	nop

000000000000805e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    805e:	55                   	push   %rbp
    805f:	48 89 e5             	mov    %rsp,%rbp
    8062:	48 83 ec 10          	sub    $0x10,%rsp
    8066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    806a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    806e:	48 89 c7             	mov    %rax,%rdi
    8071:	e8 a8 1e 00 00       	call   9f1e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    8076:	90                   	nop
    8077:	c9                   	leave
    8078:	c3                   	ret
    8079:	90                   	nop

000000000000807a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    807a:	55                   	push   %rbp
    807b:	48 89 e5             	mov    %rsp,%rbp
    807e:	53                   	push   %rbx
    807f:	48 83 ec 28          	sub    $0x28,%rsp
    8083:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8087:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    808b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    808f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8093:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8097:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    809b:	48 89 d6             	mov    %rdx,%rsi
    809e:	48 89 c7             	mov    %rax,%rdi
    80a1:	e8 83 1e 00 00       	call   9f29 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    80a6:	48 89 c1             	mov    %rax,%rcx
    80a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    80ad:	48 89 c2             	mov    %rax,%rdx
    80b0:	48 89 ce             	mov    %rcx,%rsi
    80b3:	48 89 df             	mov    %rbx,%rdi
    80b6:	e8 eb 1e 00 00       	call   9fa6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    80bb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    80bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80c3:	48 89 d6             	mov    %rdx,%rsi
    80c6:	48 89 c7             	mov    %rax,%rdi
    80c9:	e8 8e 1f 00 00       	call   a05c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    80ce:	eb 1a                	jmp    80ea <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    80d0:	48 89 c3             	mov    %rax,%rbx
    80d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80d7:	48 89 c7             	mov    %rax,%rdi
    80da:	e8 25 1f 00 00       	call   a004 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    80df:	48 89 d8             	mov    %rbx,%rax
    80e2:	48 89 c7             	mov    %rax,%rdi
    80e5:	e8 26 b4 ff ff       	call   3510 <_Unwind_Resume@plt>
    80ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    80ee:	c9                   	leave
    80ef:	c3                   	ret

00000000000080f0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    80f0:	55                   	push   %rbp
    80f1:	48 89 e5             	mov    %rsp,%rbp
    80f4:	48 83 ec 10          	sub    $0x10,%rsp
    80f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    80fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8100:	48 89 c7             	mov    %rax,%rdi
    8103:	e8 94 1f 00 00       	call   a09c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8108:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    810b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    810f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8117:	48 8b 00             	mov    (%rax),%rax
    811a:	48 89 ce             	mov    %rcx,%rsi
    811d:	48 89 c7             	mov    %rax,%rdi
    8120:	e8 85 1f 00 00       	call   a0aa <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8125:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8129:	48 89 c7             	mov    %rax,%rdi
    812c:	e8 d3 1e 00 00       	call   a004 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8131:	90                   	nop
    8132:	c9                   	leave
    8133:	c3                   	ret

0000000000008134 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8134:	55                   	push   %rbp
    8135:	48 89 e5             	mov    %rsp,%rbp
    8138:	48 83 ec 10          	sub    $0x10,%rsp
    813c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8144:	48 8b 10             	mov    (%rax),%rdx
    8147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    814b:	48 89 d6             	mov    %rdx,%rsi
    814e:	48 89 c7             	mov    %rax,%rdi
    8151:	e8 7e 1f 00 00       	call   a0d4 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8156:	c9                   	leave
    8157:	c3                   	ret

0000000000008158 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    8158:	55                   	push   %rbp
    8159:	48 89 e5             	mov    %rsp,%rbp
    815c:	48 83 ec 20          	sub    $0x20,%rsp
    8160:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8164:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8168:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    816c:	48 89 d6             	mov    %rdx,%rsi
    816f:	48 89 c7             	mov    %rax,%rdi
    8172:	e8 6f 1f 00 00       	call   a0e6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    817b:	c9                   	leave
    817c:	c3                   	ret
    817d:	90                   	nop

000000000000817e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    817e:	55                   	push   %rbp
    817f:	48 89 e5             	mov    %rsp,%rbp
    8182:	48 83 ec 20          	sub    $0x20,%rsp
    8186:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    818a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    818e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8192:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8196:	48 89 d6             	mov    %rdx,%rsi
    8199:	48 89 c7             	mov    %rax,%rdi
    819c:	e8 45 1f 00 00       	call   a0e6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    81a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81a5:	c9                   	leave
    81a6:	c3                   	ret

00000000000081a7 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    81a7:	55                   	push   %rbp
    81a8:	48 89 e5             	mov    %rsp,%rbp
    81ab:	53                   	push   %rbx
    81ac:	48 83 ec 18          	sub    $0x18,%rsp
    81b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    81b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    81b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81bc:	48 89 c7             	mov    %rax,%rdi
    81bf:	e8 40 1f 00 00       	call   a104 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    81c4:	48 8b 18             	mov    (%rax),%rbx
    81c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81cb:	48 89 c7             	mov    %rax,%rdi
    81ce:	e8 31 1f 00 00       	call   a104 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    81d3:	48 8b 00             	mov    (%rax),%rax
    81d6:	48 39 c3             	cmp    %rax,%rbx
    81d9:	0f 95 c0             	setne  %al
    81dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    81e0:	c9                   	leave
    81e1:	c3                   	ret

00000000000081e2 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    81e2:	55                   	push   %rbp
    81e3:	48 89 e5             	mov    %rsp,%rbp
    81e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    81ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81ee:	48 8b 00             	mov    (%rax),%rax
    81f1:	48 8d 50 18          	lea    0x18(%rax),%rdx
    81f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81f9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    81fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8200:	5d                   	pop    %rbp
    8201:	c3                   	ret

0000000000008202 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8202:	55                   	push   %rbp
    8203:	48 89 e5             	mov    %rsp,%rbp
    8206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    820a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    820e:	48 8b 00             	mov    (%rax),%rax
    8211:	5d                   	pop    %rbp
    8212:	c3                   	ret
    8213:	90                   	nop

0000000000008214 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>:
	operator=(_Up&& __u)
    8214:	55                   	push   %rbp
    8215:	48 89 e5             	mov    %rsp,%rbp
    8218:	53                   	push   %rbx
    8219:	48 83 ec 18          	sub    $0x18,%rsp
    821d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8221:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (this->_M_is_engaged())
    8225:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8229:	48 89 c7             	mov    %rax,%rdi
    822c:	e8 a9 ef ff ff       	call   71da <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    8231:	84 c0                	test   %al,%al
    8233:	74 20                	je     8255 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x41>
	    this->_M_get() = std::forward<_Up>(__u);
    8235:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8239:	48 89 c7             	mov    %rax,%rdi
    823c:	e8 d1 1e 00 00       	call   a112 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    8241:	8b 00                	mov    (%rax),%eax
    8243:	89 c3                	mov    %eax,%ebx
    8245:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8249:	48 89 c7             	mov    %rax,%rdi
    824c:	e8 0d 01 00 00       	call   835e <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    8251:	89 18                	mov    %ebx,(%rax)
    8253:	eb 1e                	jmp    8273 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x5f>
	    this->_M_construct(std::forward<_Up>(__u));
    8255:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8259:	48 89 c7             	mov    %rax,%rdi
    825c:	e8 b1 1e 00 00       	call   a112 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    8261:	48 89 c2             	mov    %rax,%rdx
    8264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8268:	48 89 d6             	mov    %rdx,%rsi
    826b:	48 89 c7             	mov    %rax,%rdi
    826e:	e8 ad 1e 00 00       	call   a120 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>
	  return *this;
    8273:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8277:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    827b:	c9                   	leave
    827c:	c3                   	ret
    827d:	90                   	nop

000000000000827e <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    827e:	55                   	push   %rbp
    827f:	48 89 e5             	mov    %rsp,%rbp
    8282:	48 83 ec 10          	sub    $0x10,%rsp
    8286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    828a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828e:	48 89 c7             	mov    %rax,%rdi
    8291:	e8 be 1e 00 00       	call   a154 <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>
    8296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    829a:	48 89 c7             	mov    %rax,%rdi
    829d:	e8 ce 1e 00 00       	call   a170 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    82a2:	90                   	nop
    82a3:	c9                   	leave
    82a4:	c3                   	ret
    82a5:	90                   	nop

00000000000082a6 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>:
    82a6:	55                   	push   %rbp
    82a7:	48 89 e5             	mov    %rsp,%rbp
    82aa:	48 83 ec 10          	sub    $0x10,%rsp
    82ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82b6:	48 89 c7             	mov    %rax,%rdi
    82b9:	e8 e0 1e 00 00       	call   a19e <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>
    82be:	90                   	nop
    82bf:	c9                   	leave
    82c0:	c3                   	ret
    82c1:	90                   	nop

00000000000082c2 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    82c2:	55                   	push   %rbp
    82c3:	48 89 e5             	mov    %rsp,%rbp
    82c6:	48 83 ec 10          	sub    $0x10,%rsp
    82ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    82ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82d2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    82d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82da:	48 8b 00             	mov    (%rax),%rax
    82dd:	48 29 c2             	sub    %rax,%rdx
    82e0:	48 c1 fa 03          	sar    $0x3,%rdx
    82e4:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    82eb:	cc cc cc 
    82ee:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    82f2:	48 89 c2             	mov    %rax,%rdx
    82f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f9:	48 8b 08             	mov    (%rax),%rcx
    82fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8300:	48 89 ce             	mov    %rcx,%rsi
    8303:	48 89 c7             	mov    %rax,%rdi
    8306:	e8 9f 1e 00 00       	call   a1aa <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
    830b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    830f:	48 89 c7             	mov    %rax,%rdi
    8312:	e8 3d ee ff ff       	call   7154 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>
    8317:	90                   	nop
    8318:	c9                   	leave
    8319:	c3                   	ret

000000000000831a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    831a:	55                   	push   %rbp
    831b:	48 89 e5             	mov    %rsp,%rbp
    831e:	48 83 ec 10          	sub    $0x10,%rsp
    8322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    832a:	48 89 c7             	mov    %rax,%rdi
    832d:	e8 ae 1e 00 00       	call   a1e0 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    8332:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8339:	48 8b 48 08          	mov    0x8(%rax),%rcx
    833d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8341:	48 8b 00             	mov    (%rax),%rax
    8344:	48 89 ce             	mov    %rcx,%rsi
    8347:	48 89 c7             	mov    %rax,%rdi
    834a:	e8 9f 1e 00 00       	call   a1ee <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>
      }
    834f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8353:	48 89 c7             	mov    %rax,%rdi
    8356:	e8 67 ff ff ff       	call   82c2 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    835b:	90                   	nop
    835c:	c9                   	leave
    835d:	c3                   	ret

000000000000835e <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    835e:	55                   	push   %rbp
    835f:	48 89 e5             	mov    %rsp,%rbp
    8362:	48 83 ec 10          	sub    $0x10,%rsp
    8366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    836a:	e8 e5 ea ff ff       	call   6e54 <_ZSt23__is_constant_evaluatedv>
    836f:	84 c0                	test   %al,%al
    8371:	74 1a                	je     838d <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    8373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8377:	48 89 c7             	mov    %rax,%rdi
    837a:	e8 5b ee ff ff       	call   71da <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    837f:	83 f0 01             	xor    $0x1,%eax
    8382:	84 c0                	test   %al,%al
    8384:	74 07                	je     838d <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    8386:	b8 01 00 00 00       	mov    $0x1,%eax
    838b:	eb 05                	jmp    8392 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    838d:	b8 00 00 00 00       	mov    $0x0,%eax
    8392:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    8394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8398:	48 89 c7             	mov    %rax,%rdi
    839b:	e8 78 1e 00 00       	call   a218 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>
      }
    83a0:	c9                   	leave
    83a1:	c3                   	ret

00000000000083a2 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    83a2:	55                   	push   %rbp
    83a3:	48 89 e5             	mov    %rsp,%rbp
    83a6:	48 83 ec 10          	sub    $0x10,%rsp
    83aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b2:	48 89 c7             	mov    %rax,%rdi
    83b5:	e8 6c 1e 00 00       	call   a226 <_ZNSt15__new_allocatorIjEC1Ev>
    83ba:	90                   	nop
    83bb:	c9                   	leave
    83bc:	c3                   	ret
    83bd:	90                   	nop

00000000000083be <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    83be:	55                   	push   %rbp
    83bf:	48 89 e5             	mov    %rsp,%rbp
    83c2:	48 83 ec 10          	sub    $0x10,%rsp
    83c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83ce:	48 89 c7             	mov    %rax,%rdi
    83d1:	e8 5c 1e 00 00       	call   a232 <_ZNSt15__new_allocatorIjED1Ev>
    83d6:	90                   	nop
    83d7:	c9                   	leave
    83d8:	c3                   	ret
    83d9:	90                   	nop

00000000000083da <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>:
      set(initializer_list<value_type> __l,
    83da:	55                   	push   %rbp
    83db:	48 89 e5             	mov    %rsp,%rbp
    83de:	41 54                	push   %r12
    83e0:	53                   	push   %rbx
    83e1:	48 83 ec 40          	sub    $0x40,%rsp
    83e5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    83e9:	48 89 f0             	mov    %rsi,%rax
    83ec:	48 89 d6             	mov    %rdx,%rsi
    83ef:	48 89 f2             	mov    %rsi,%rdx
    83f2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    83f6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    83fa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    83fe:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      : _M_t(__comp, _Key_alloc_type(__a))
    8402:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8406:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    840a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    840e:	48 89 d6             	mov    %rdx,%rsi
    8411:	48 89 c7             	mov    %rax,%rdi
    8414:	e8 25 1e 00 00       	call   a23e <_ZNSaIjEC1ERKS_>
    8419:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    841d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8421:	48 89 c6             	mov    %rax,%rsi
    8424:	48 89 df             	mov    %rbx,%rdi
    8427:	e8 38 1e 00 00       	call   a264 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>
    842c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8430:	48 89 c7             	mov    %rax,%rdi
    8433:	e8 86 ff ff ff       	call   83be <_ZNSaIjED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    8438:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    843c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    8440:	48 89 c7             	mov    %rax,%rdi
    8443:	e8 9c 1e 00 00       	call   a2e4 <_ZNKSt16initializer_listIjE3endEv>
    8448:	49 89 c4             	mov    %rax,%r12
    844b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    844f:	48 89 c7             	mov    %rax,%rdi
    8452:	e8 7b 1e 00 00       	call   a2d2 <_ZNKSt16initializer_listIjE5beginEv>
    8457:	4c 89 e2             	mov    %r12,%rdx
    845a:	48 89 c6             	mov    %rax,%rsi
    845d:	48 89 df             	mov    %rbx,%rdi
    8460:	e8 b5 1e 00 00       	call   a31a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>
    8465:	eb 34                	jmp    849b <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_+0xc1>
      : _M_t(__comp, _Key_alloc_type(__a))
    8467:	48 89 c3             	mov    %rax,%rbx
    846a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    846e:	48 89 c7             	mov    %rax,%rdi
    8471:	e8 48 ff ff ff       	call   83be <_ZNSaIjED1Ev>
    8476:	48 89 d8             	mov    %rbx,%rax
    8479:	48 89 c7             	mov    %rax,%rdi
    847c:	e8 8f b0 ff ff       	call   3510 <_Unwind_Resume@plt>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    8481:	48 89 c3             	mov    %rax,%rbx
    8484:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8488:	48 89 c7             	mov    %rax,%rdi
    848b:	e8 30 00 00 00       	call   84c0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    8490:	48 89 d8             	mov    %rbx,%rax
    8493:	48 89 c7             	mov    %rax,%rdi
    8496:	e8 75 b0 ff ff       	call   3510 <_Unwind_Resume@plt>
    849b:	48 83 c4 40          	add    $0x40,%rsp
    849f:	5b                   	pop    %rbx
    84a0:	41 5c                	pop    %r12
    84a2:	5d                   	pop    %rbp
    84a3:	c3                   	ret

00000000000084a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>:
	struct _Rb_tree_impl
    84a4:	55                   	push   %rbp
    84a5:	48 89 e5             	mov    %rsp,%rbp
    84a8:	48 83 ec 10          	sub    $0x10,%rsp
    84ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84b4:	48 89 c7             	mov    %rax,%rdi
    84b7:	e8 d6 1e 00 00       	call   a392 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    84bc:	90                   	nop
    84bd:	c9                   	leave
    84be:	c3                   	ret
    84bf:	90                   	nop

00000000000084c0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    84c0:	55                   	push   %rbp
    84c1:	48 89 e5             	mov    %rsp,%rbp
    84c4:	48 83 ec 10          	sub    $0x10,%rsp
    84c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    84cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84d0:	48 89 c7             	mov    %rax,%rdi
    84d3:	e8 3c 1f 00 00       	call   a414 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
    84d8:	48 89 c2             	mov    %rax,%rdx
    84db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84df:	48 89 d6             	mov    %rdx,%rsi
    84e2:	48 89 c7             	mov    %rax,%rdi
    84e5:	e8 c4 1e 00 00       	call   a3ae <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
    84ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ee:	48 89 c7             	mov    %rax,%rdi
    84f1:	e8 ae ff ff ff       	call   84a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>
    84f6:	90                   	nop
    84f7:	c9                   	leave
    84f8:	c3                   	ret
    84f9:	90                   	nop

00000000000084fa <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    84fa:	55                   	push   %rbp
    84fb:	48 89 e5             	mov    %rsp,%rbp
    84fe:	48 83 ec 10          	sub    $0x10,%rsp
    8502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.begin(); }
    8506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    850a:	48 89 c7             	mov    %rax,%rdi
    850d:	e8 1c 1f 00 00       	call   a42e <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
    8512:	c9                   	leave
    8513:	c3                   	ret

0000000000008514 <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    8514:	55                   	push   %rbp
    8515:	48 89 e5             	mov    %rsp,%rbp
    8518:	48 83 ec 10          	sub    $0x10,%rsp
    851c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    8520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8524:	48 89 c7             	mov    %rax,%rdi
    8527:	e8 2c 1f 00 00       	call   a458 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    852c:	c9                   	leave
    852d:	c3                   	ret

000000000000852e <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    852e:	55                   	push   %rbp
    852f:	48 89 e5             	mov    %rsp,%rbp
    8532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8536:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
    853a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    853e:	48 8b 10             	mov    (%rax),%rdx
    8541:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8545:	48 8b 00             	mov    (%rax),%rax
    8548:	48 39 c2             	cmp    %rax,%rdx
    854b:	0f 95 c0             	setne  %al
    854e:	5d                   	pop    %rbp
    854f:	c3                   	ret

0000000000008550 <_ZNSt23_Rb_tree_const_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8550:	55                   	push   %rbp
    8551:	48 89 e5             	mov    %rsp,%rbp
    8554:	48 83 ec 10          	sub    $0x10,%rsp
    8558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    855c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8560:	48 8b 00             	mov    (%rax),%rax
    8563:	48 89 c7             	mov    %rax,%rdi
    8566:	e8 f5 ad ff ff       	call   3360 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    856b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    856f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    8572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8576:	c9                   	leave
    8577:	c3                   	ret

0000000000008578 <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8578:	55                   	push   %rbp
    8579:	48 89 e5             	mov    %rsp,%rbp
    857c:	48 83 ec 10          	sub    $0x10,%rsp
    8580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    8584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8588:	48 8b 00             	mov    (%rax),%rax
    858b:	48 89 c7             	mov    %rax,%rdi
    858e:	e8 ef 1e 00 00       	call   a482 <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
    8593:	c9                   	leave
    8594:	c3                   	ret
    8595:	90                   	nop

0000000000008596 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>:
      push_back(const value_type& __x)
    8596:	55                   	push   %rbp
    8597:	48 89 e5             	mov    %rsp,%rbp
    859a:	48 83 ec 10          	sub    $0x10,%rsp
    859e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    85a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85aa:	48 8b 50 08          	mov    0x8(%rax),%rdx
    85ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85b2:	48 8b 40 10          	mov    0x10(%rax),%rax
    85b6:	48 39 c2             	cmp    %rax,%rdx
    85b9:	74 31                	je     85ec <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x56>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    85bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85bf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    85c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    85cb:	48 89 ce             	mov    %rcx,%rsi
    85ce:	48 89 c7             	mov    %rax,%rdi
    85d1:	e8 ca 1e 00 00       	call   a4a0 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    85d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85da:	48 8b 40 08          	mov    0x8(%rax),%rax
    85de:	48 8d 50 28          	lea    0x28(%rax),%rdx
    85e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85e6:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    85ea:	eb 22                	jmp    860e <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x78>
	  _M_realloc_insert(end(), __x);
    85ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f0:	48 89 c7             	mov    %rax,%rdi
    85f3:	e8 e2 1e 00 00       	call   a4da <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>
    85f8:	48 89 c1             	mov    %rax,%rcx
    85fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    85ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8603:	48 89 ce             	mov    %rcx,%rsi
    8606:	48 89 c7             	mov    %rax,%rdi
    8609:	e8 f6 1e 00 00       	call   a504 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
      }
    860e:	90                   	nop
    860f:	c9                   	leave
    8610:	c3                   	ret
    8611:	90                   	nop

0000000000008612 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8612:	55                   	push   %rbp
    8613:	48 89 e5             	mov    %rsp,%rbp
    8616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    861a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    861e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8626:	48 8b 00             	mov    (%rax),%rax
    8629:	48 29 c2             	sub    %rax,%rdx
    862c:	48 c1 fa 03          	sar    $0x3,%rdx
    8630:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    8637:	cc cc cc 
    863a:	48 0f af c2          	imul   %rdx,%rax
    863e:	5d                   	pop    %rbp
    863f:	c3                   	ret

0000000000008640 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8640:	55                   	push   %rbp
    8641:	48 89 e5             	mov    %rsp,%rbp
    8644:	48 83 ec 10          	sub    $0x10,%rsp
    8648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    864c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8650:	48 8b 10             	mov    (%rax),%rdx
    8653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8657:	48 89 d6             	mov    %rdx,%rsi
    865a:	48 89 c7             	mov    %rax,%rdi
    865d:	e8 5c 20 00 00       	call   a6be <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8662:	c9                   	leave
    8663:	c3                   	ret

0000000000008664 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    8664:	55                   	push   %rbp
    8665:	48 89 e5             	mov    %rsp,%rbp
    8668:	48 83 ec 20          	sub    $0x20,%rsp
    866c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    8670:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8674:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8678:	48 89 d6             	mov    %rdx,%rsi
    867b:	48 89 c7             	mov    %rax,%rdi
    867e:	e8 4d 20 00 00       	call   a6d0 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    8683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8687:	c9                   	leave
    8688:	c3                   	ret
    8689:	90                   	nop

000000000000868a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    868a:	55                   	push   %rbp
    868b:	48 89 e5             	mov    %rsp,%rbp
    868e:	48 83 ec 20          	sub    $0x20,%rsp
    8692:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    8696:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    869a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    869e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    86a2:	48 89 d6             	mov    %rdx,%rsi
    86a5:	48 89 c7             	mov    %rax,%rdi
    86a8:	e8 23 20 00 00       	call   a6d0 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    86ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86b1:	c9                   	leave
    86b2:	c3                   	ret

00000000000086b3 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    86b3:	55                   	push   %rbp
    86b4:	48 89 e5             	mov    %rsp,%rbp
    86b7:	53                   	push   %rbx
    86b8:	48 83 ec 18          	sub    $0x18,%rsp
    86bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    86c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    86c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86c8:	48 89 c7             	mov    %rax,%rdi
    86cb:	e8 1e 20 00 00       	call   a6ee <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    86d0:	48 8b 18             	mov    (%rax),%rbx
    86d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86d7:	48 89 c7             	mov    %rax,%rdi
    86da:	e8 0f 20 00 00       	call   a6ee <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    86df:	48 8b 00             	mov    (%rax),%rax
    86e2:	48 39 c3             	cmp    %rax,%rbx
    86e5:	0f 95 c0             	setne  %al
    86e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86ec:	c9                   	leave
    86ed:	c3                   	ret

00000000000086ee <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    86ee:	55                   	push   %rbp
    86ef:	48 89 e5             	mov    %rsp,%rbp
    86f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    86f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86fa:	48 8b 00             	mov    (%rax),%rax
    86fd:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8701:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8705:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    870c:	5d                   	pop    %rbp
    870d:	c3                   	ret

000000000000870e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    870e:	55                   	push   %rbp
    870f:	48 89 e5             	mov    %rsp,%rbp
    8712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    871a:	48 8b 00             	mov    (%rax),%rax
    871d:	5d                   	pop    %rbp
    871e:	c3                   	ret
    871f:	90                   	nop

0000000000008720 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
    8720:	55                   	push   %rbp
    8721:	48 89 e5             	mov    %rsp,%rbp
    8724:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8728:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    872c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8730:	48 8b 00             	mov    (%rax),%rax
    8733:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8737:	48 c1 e2 03          	shl    $0x3,%rdx
    873b:	48 01 d0             	add    %rdx,%rax
      }
    873e:	5d                   	pop    %rbp
    873f:	c3                   	ret

0000000000008740 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    8740:	55                   	push   %rbp
    8741:	48 89 e5             	mov    %rsp,%rbp
    8744:	48 83 ec 20          	sub    $0x20,%rsp
    8748:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    874c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8750:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8754:	48 89 d6             	mov    %rdx,%rsi
    8757:	48 89 c7             	mov    %rax,%rdi
    875a:	e8 9d 1f 00 00       	call   a6fc <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    875f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8763:	c9                   	leave
    8764:	c3                   	ret
    8765:	90                   	nop

0000000000008766 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    8766:	55                   	push   %rbp
    8767:	48 89 e5             	mov    %rsp,%rbp
    876a:	48 83 ec 20          	sub    $0x20,%rsp
    876e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    8772:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8776:	48 8d 50 08          	lea    0x8(%rax),%rdx
    877a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    877e:	48 89 d6             	mov    %rdx,%rsi
    8781:	48 89 c7             	mov    %rax,%rdi
    8784:	e8 73 1f 00 00       	call   a6fc <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    8789:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    878d:	c9                   	leave
    878e:	c3                   	ret

000000000000878f <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    878f:	55                   	push   %rbp
    8790:	48 89 e5             	mov    %rsp,%rbp
    8793:	53                   	push   %rbx
    8794:	48 83 ec 18          	sub    $0x18,%rsp
    8798:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    879c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    87a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87a4:	48 89 c7             	mov    %rax,%rdi
    87a7:	e8 6e 1f 00 00       	call   a71a <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    87ac:	48 8b 18             	mov    (%rax),%rbx
    87af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87b3:	48 89 c7             	mov    %rax,%rdi
    87b6:	e8 5f 1f 00 00       	call   a71a <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    87bb:	48 8b 00             	mov    (%rax),%rax
    87be:	48 39 c3             	cmp    %rax,%rbx
    87c1:	0f 95 c0             	setne  %al
    87c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87c8:	c9                   	leave
    87c9:	c3                   	ret

00000000000087ca <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    87ca:	55                   	push   %rbp
    87cb:	48 89 e5             	mov    %rsp,%rbp
    87ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    87d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87d6:	48 8b 00             	mov    (%rax),%rax
    87d9:	48 8d 50 04          	lea    0x4(%rax),%rdx
    87dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87e1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    87e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    87e8:	5d                   	pop    %rbp
    87e9:	c3                   	ret

00000000000087ea <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    87ea:	55                   	push   %rbp
    87eb:	48 89 e5             	mov    %rsp,%rbp
    87ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    87f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87f6:	48 8b 00             	mov    (%rax),%rax
    87f9:	5d                   	pop    %rbp
    87fa:	c3                   	ret

00000000000087fb <_ZSt5clampIjERKT_S2_S2_S2_>:
   *  @retval `__val` otherwise.
   *  @pre `_Tp` is LessThanComparable and `(__hi < __lo)` is false.
   */
  template<typename _Tp>
    constexpr const _Tp&
    clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)
    87fb:	55                   	push   %rbp
    87fc:	48 89 e5             	mov    %rsp,%rbp
    87ff:	48 83 ec 20          	sub    $0x20,%rsp
    8803:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8807:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    880b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      __glibcxx_assert(!(__hi < __lo));
    880f:	e8 40 e6 ff ff       	call   6e54 <_ZSt23__is_constant_evaluatedv>
    8814:	84 c0                	test   %al,%al
    8816:	74 17                	je     882f <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    8818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    881c:	8b 10                	mov    (%rax),%edx
    881e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8822:	8b 00                	mov    (%rax),%eax
    8824:	39 c2                	cmp    %eax,%edx
    8826:	73 07                	jae    882f <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    8828:	b8 01 00 00 00       	mov    $0x1,%eax
    882d:	eb 05                	jmp    8834 <_ZSt5clampIjERKT_S2_S2_S2_+0x39>
    882f:	b8 00 00 00 00       	mov    $0x0,%eax
    8834:	84 c0                	test   %al,%al
      return std::min(std::max(__val, __lo), __hi);
    8836:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    883a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    883e:	48 89 d6             	mov    %rdx,%rsi
    8841:	48 89 c7             	mov    %rax,%rdi
    8844:	e8 df 1e 00 00       	call   a728 <_ZSt3maxIjERKT_S2_S2_>
    8849:	48 89 c2             	mov    %rax,%rdx
    884c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8850:	48 89 c6             	mov    %rax,%rsi
    8853:	48 89 d7             	mov    %rdx,%rdi
    8856:	e8 f5 1e 00 00       	call   a750 <_ZSt3minIjERKT_S2_S2_>
    }
    885b:	c9                   	leave
    885c:	c3                   	ret

000000000000885d <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>:
	     && (!__lhs || *__lhs == *__rhs);
    }

  template<typename _Tp, typename _Up>
    constexpr auto
    operator!=(const optional<_Tp>& __lhs, const optional<_Up>& __rhs)
    885d:	55                   	push   %rbp
    885e:	48 89 e5             	mov    %rsp,%rbp
    8861:	53                   	push   %rbx
    8862:	48 83 ec 18          	sub    $0x18,%rsp
    8866:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    886a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    -> __optional_ne_t<_Tp, _Up>
    {
      return static_cast<bool>(__lhs) != static_cast<bool>(__rhs)
    886e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8872:	48 89 c7             	mov    %rax,%rdi
    8875:	e8 fe 1e 00 00       	call   a778 <_ZNKSt8optionalIjEcvbEv>
    887a:	89 c3                	mov    %eax,%ebx
    887c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8880:	48 89 c7             	mov    %rax,%rdi
    8883:	e8 f0 1e 00 00       	call   a778 <_ZNKSt8optionalIjEcvbEv>
	|| (static_cast<bool>(__lhs) && *__lhs != *__rhs);
    8888:	38 c3                	cmp    %al,%bl
    888a:	75 30                	jne    88bc <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x5f>
    888c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8890:	48 89 c7             	mov    %rax,%rdi
    8893:	e8 e0 1e 00 00       	call   a778 <_ZNKSt8optionalIjEcvbEv>
    8898:	84 c0                	test   %al,%al
    889a:	74 27                	je     88c3 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    889c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88a0:	48 89 c7             	mov    %rax,%rdi
    88a3:	e8 ea 1e 00 00       	call   a792 <_ZNKRSt8optionalIjEdeEv>
    88a8:	8b 18                	mov    (%rax),%ebx
    88aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88ae:	48 89 c7             	mov    %rax,%rdi
    88b1:	e8 dc 1e 00 00       	call   a792 <_ZNKRSt8optionalIjEdeEv>
    88b6:	8b 00                	mov    (%rax),%eax
    88b8:	39 c3                	cmp    %eax,%ebx
    88ba:	74 07                	je     88c3 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    88bc:	b8 01 00 00 00       	mov    $0x1,%eax
    88c1:	eb 05                	jmp    88c8 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x6b>
    88c3:	b8 00 00 00 00       	mov    $0x0,%eax
    }
    88c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88cc:	c9                   	leave
    88cd:	c3                   	ret

00000000000088ce <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    88ce:	55                   	push   %rbp
    88cf:	48 89 e5             	mov    %rsp,%rbp
    88d2:	48 83 ec 10          	sub    $0x10,%rsp
    88d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    88de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e2:	48 89 c7             	mov    %rax,%rdi
    88e5:	e8 8e 00 00 00       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    88ea:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    88ee:	0f 92 c0             	setb   %al
    88f1:	84 c0                	test   %al,%al
    88f3:	74 24                	je     8919 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    88f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88f9:	48 89 c7             	mov    %rax,%rdi
    88fc:	e8 77 00 00 00       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    8901:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8905:	48 29 c2             	sub    %rax,%rdx
    8908:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    890c:	48 89 d6             	mov    %rdx,%rsi
    890f:	48 89 c7             	mov    %rax,%rdi
    8912:	e8 95 1e 00 00       	call   a7ac <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>
      }
    8917:	eb 38                	jmp    8951 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    8919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    891d:	48 89 c7             	mov    %rax,%rdi
    8920:	e8 53 00 00 00       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    8925:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    8929:	0f 92 c0             	setb   %al
    892c:	84 c0                	test   %al,%al
    892e:	74 21                	je     8951 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    8930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8934:	48 8b 00             	mov    (%rax),%rax
    8937:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    893b:	48 c1 e2 03          	shl    $0x3,%rdx
    893f:	48 01 c2             	add    %rax,%rdx
    8942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8946:	48 89 d6             	mov    %rdx,%rsi
    8949:	48 89 c7             	mov    %rax,%rdi
    894c:	e8 65 20 00 00       	call   a9b6 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    8951:	90                   	nop
    8952:	c9                   	leave
    8953:	c3                   	ret

0000000000008954 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8954:	55                   	push   %rbp
    8955:	48 89 e5             	mov    %rsp,%rbp
    8958:	48 83 ec 10          	sub    $0x10,%rsp
    895c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8964:	48 8b 10             	mov    (%rax),%rdx
    8967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    896b:	48 89 d6             	mov    %rdx,%rsi
    896e:	48 89 c7             	mov    %rax,%rdi
    8971:	e8 a0 20 00 00       	call   aa16 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8976:	c9                   	leave
    8977:	c3                   	ret

0000000000008978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8978:	55                   	push   %rbp
    8979:	48 89 e5             	mov    %rsp,%rbp
    897c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8984:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    898c:	48 8b 00             	mov    (%rax),%rax
    898f:	48 29 c2             	sub    %rax,%rdx
    8992:	48 89 d0             	mov    %rdx,%rax
    8995:	48 c1 f8 03          	sar    $0x3,%rax
    8999:	5d                   	pop    %rbp
    899a:	c3                   	ret
    899b:	90                   	nop

000000000000899c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    899c:	55                   	push   %rbp
    899d:	48 89 e5             	mov    %rsp,%rbp
    89a0:	48 83 ec 10          	sub    $0x10,%rsp
    89a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    89ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89b0:	48 89 c7             	mov    %rax,%rdi
    89b3:	e8 70 20 00 00       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    89b8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    89bc:	0f 92 c0             	setb   %al
    89bf:	84 c0                	test   %al,%al
    89c1:	74 24                	je     89e7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    89c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c7:	48 89 c7             	mov    %rax,%rdi
    89ca:	e8 59 20 00 00       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    89cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    89d3:	48 29 c2             	sub    %rax,%rdx
    89d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89da:	48 89 d6             	mov    %rdx,%rsi
    89dd:	48 89 c7             	mov    %rax,%rdi
    89e0:	e8 67 20 00 00       	call   aa4c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
    89e5:	eb 38                	jmp    8a1f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    89e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89eb:	48 89 c7             	mov    %rax,%rdi
    89ee:	e8 35 20 00 00       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    89f3:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    89f7:	0f 92 c0             	setb   %al
    89fa:	84 c0                	test   %al,%al
    89fc:	74 21                	je     8a1f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    89fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a02:	48 8b 00             	mov    (%rax),%rax
    8a05:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a09:	48 c1 e2 03          	shl    $0x3,%rdx
    8a0d:	48 01 c2             	add    %rax,%rdx
    8a10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a14:	48 89 d6             	mov    %rdx,%rsi
    8a17:	48 89 c7             	mov    %rax,%rdi
    8a1a:	e8 37 22 00 00       	call   ac56 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    8a1f:	90                   	nop
    8a20:	c9                   	leave
    8a21:	c3                   	ret

0000000000008a22 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8a22:	55                   	push   %rbp
    8a23:	48 89 e5             	mov    %rsp,%rbp
    8a26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a32:	48 8b 00             	mov    (%rax),%rax
    8a35:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a39:	48 c1 e2 03          	shl    $0x3,%rdx
    8a3d:	48 01 d0             	add    %rdx,%rax
      }
    8a40:	5d                   	pop    %rbp
    8a41:	c3                   	ret

0000000000008a42 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8a42:	55                   	push   %rbp
    8a43:	48 89 e5             	mov    %rsp,%rbp
    8a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a52:	48 8b 00             	mov    (%rax),%rax
    8a55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8a59:	48 c1 e2 03          	shl    $0x3,%rdx
    8a5d:	48 01 d0             	add    %rdx,%rax
      }
    8a60:	5d                   	pop    %rbp
    8a61:	c3                   	ret

0000000000008a62 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    8a62:	55                   	push   %rbp
    8a63:	48 89 e5             	mov    %rsp,%rbp
    8a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a6e:	48 8b 00             	mov    (%rax),%rax
    8a71:	5d                   	pop    %rbp
    8a72:	c3                   	ret
    8a73:	90                   	nop

0000000000008a74 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8a74:	55                   	push   %rbp
    8a75:	48 89 e5             	mov    %rsp,%rbp
    8a78:	53                   	push   %rbx
    8a79:	48 83 ec 28          	sub    $0x28,%rsp
    8a7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a81:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a85:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8a89:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8a8d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8a91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8a95:	48 89 d6             	mov    %rdx,%rsi
    8a98:	48 89 c7             	mov    %rax,%rdi
    8a9b:	e8 16 22 00 00       	call   acb6 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    8aa0:	48 89 c1             	mov    %rax,%rcx
    8aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8aa7:	48 89 c2             	mov    %rax,%rdx
    8aaa:	48 89 ce             	mov    %rcx,%rsi
    8aad:	48 89 df             	mov    %rbx,%rdi
    8ab0:	e8 61 22 00 00       	call   ad16 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    8ab5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8abd:	48 89 d6             	mov    %rdx,%rsi
    8ac0:	48 89 c7             	mov    %rax,%rdi
    8ac3:	e8 ac 22 00 00       	call   ad74 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    8ac8:	eb 1a                	jmp    8ae4 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    8aca:	48 89 c3             	mov    %rax,%rbx
    8acd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ad1:	48 89 c7             	mov    %rax,%rdi
    8ad4:	e8 a9 00 00 00       	call   8b82 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    8ad9:	48 89 d8             	mov    %rbx,%rax
    8adc:	48 89 c7             	mov    %rax,%rdi
    8adf:	e8 2c aa ff ff       	call   3510 <_Unwind_Resume@plt>
    8ae4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ae8:	c9                   	leave
    8ae9:	c3                   	ret

0000000000008aea <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8aea:	55                   	push   %rbp
    8aeb:	48 89 e5             	mov    %rsp,%rbp
    8aee:	48 83 ec 10          	sub    $0x10,%rsp
    8af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8afa:	48 89 c7             	mov    %rax,%rdi
    8afd:	e8 b2 22 00 00       	call   adb4 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    8b02:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b09:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8b0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b11:	48 8b 00             	mov    (%rax),%rax
    8b14:	48 89 ce             	mov    %rcx,%rsi
    8b17:	48 89 c7             	mov    %rax,%rdi
    8b1a:	e8 a3 22 00 00       	call   adc2 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    8b1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b23:	48 89 c7             	mov    %rax,%rdi
    8b26:	e8 57 00 00 00       	call   8b82 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    8b2b:	90                   	nop
    8b2c:	c9                   	leave
    8b2d:	c3                   	ret

0000000000008b2e <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    8b2e:	55                   	push   %rbp
    8b2f:	48 89 e5             	mov    %rsp,%rbp
    8b32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    8b3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b3e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8b42:	48 89 10             	mov    %rdx,(%rax)
    8b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b49:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    8b50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b54:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    8b5b:	90                   	nop
    8b5c:	5d                   	pop    %rbp
    8b5d:	c3                   	ret

0000000000008b5e <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8b5e:	55                   	push   %rbp
    8b5f:	48 89 e5             	mov    %rsp,%rbp
    8b62:	48 83 ec 10          	sub    $0x10,%rsp
    8b66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8b6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b6e:	48 8b 10             	mov    (%rax),%rdx
    8b71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b75:	48 89 d6             	mov    %rdx,%rsi
    8b78:	48 89 c7             	mov    %rax,%rdi
    8b7b:	e8 6c 22 00 00       	call   adec <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    8b80:	c9                   	leave
    8b81:	c3                   	ret

0000000000008b82 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8b82:	55                   	push   %rbp
    8b83:	48 89 e5             	mov    %rsp,%rbp
    8b86:	48 83 ec 10          	sub    $0x10,%rsp
    8b8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b92:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b9a:	48 8b 00             	mov    (%rax),%rax
    8b9d:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    8ba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba4:	48 8b 08             	mov    (%rax),%rcx
    8ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bab:	48 89 ce             	mov    %rcx,%rsi
    8bae:	48 89 c7             	mov    %rax,%rdi
    8bb1:	e8 48 22 00 00       	call   adfe <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    8bb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bba:	48 89 c7             	mov    %rax,%rdi
    8bbd:	e8 46 e6 ff ff       	call   7208 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    8bc2:	90                   	nop
    8bc3:	c9                   	leave
    8bc4:	c3                   	ret
    8bc5:	90                   	nop

0000000000008bc6 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8bc6:	55                   	push   %rbp
    8bc7:	48 89 e5             	mov    %rsp,%rbp
    8bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bd2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bda:	48 8b 00             	mov    (%rax),%rax
    8bdd:	48 29 c2             	sub    %rax,%rdx
    8be0:	48 89 d0             	mov    %rdx,%rax
    8be3:	5d                   	pop    %rbp
    8be4:	c3                   	ret
    8be5:	90                   	nop

0000000000008be6 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    8be6:	55                   	push   %rbp
    8be7:	48 89 e5             	mov    %rsp,%rbp
    8bea:	48 83 ec 10          	sub    $0x10,%rsp
    8bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bf6:	48 8b 10             	mov    (%rax),%rdx
    8bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bfd:	48 89 d6             	mov    %rdx,%rsi
    8c00:	48 89 c7             	mov    %rax,%rdi
    8c03:	e8 e4 21 00 00       	call   adec <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    8c08:	c9                   	leave
    8c09:	c3                   	ret

0000000000008c0a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    8c0a:	55                   	push   %rbp
    8c0b:	48 89 e5             	mov    %rsp,%rbp
    8c0e:	48 83 ec 20          	sub    $0x20,%rsp
    8c12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8c16:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8c1a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8c1e:	48 89 d6             	mov    %rdx,%rsi
    8c21:	48 89 c7             	mov    %rax,%rdi
    8c24:	e8 0b 22 00 00       	call   ae34 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    8c29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c2d:	c9                   	leave
    8c2e:	c3                   	ret
    8c2f:	90                   	nop

0000000000008c30 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8c30:	55                   	push   %rbp
    8c31:	48 89 e5             	mov    %rsp,%rbp
    8c34:	48 83 ec 20          	sub    $0x20,%rsp
    8c38:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8c3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c40:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8c44:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8c48:	48 89 d6             	mov    %rdx,%rsi
    8c4b:	48 89 c7             	mov    %rax,%rdi
    8c4e:	e8 e1 21 00 00       	call   ae34 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    8c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c57:	c9                   	leave
    8c58:	c3                   	ret

0000000000008c59 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8c59:	55                   	push   %rbp
    8c5a:	48 89 e5             	mov    %rsp,%rbp
    8c5d:	53                   	push   %rbx
    8c5e:	48 83 ec 18          	sub    $0x18,%rsp
    8c62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c66:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8c6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c6e:	48 89 c7             	mov    %rax,%rdi
    8c71:	e8 dc 21 00 00       	call   ae52 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
    8c76:	48 8b 18             	mov    (%rax),%rbx
    8c79:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c7d:	48 89 c7             	mov    %rax,%rdi
    8c80:	e8 cd 21 00 00       	call   ae52 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
    8c85:	48 8b 00             	mov    (%rax),%rax
    8c88:	48 39 c3             	cmp    %rax,%rbx
    8c8b:	0f 95 c0             	setne  %al
    8c8e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c92:	c9                   	leave
    8c93:	c3                   	ret

0000000000008c94 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8c94:	55                   	push   %rbp
    8c95:	48 89 e5             	mov    %rsp,%rbp
    8c98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8c9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca0:	48 8b 00             	mov    (%rax),%rax
    8ca3:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8ca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cab:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8cae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8cb2:	5d                   	pop    %rbp
    8cb3:	c3                   	ret

0000000000008cb4 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8cb4:	55                   	push   %rbp
    8cb5:	48 89 e5             	mov    %rsp,%rbp
    8cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc0:	48 8b 00             	mov    (%rax),%rax
    8cc3:	5d                   	pop    %rbp
    8cc4:	c3                   	ret

0000000000008cc5 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    8cc5:	55                   	push   %rbp
    8cc6:	48 89 e5             	mov    %rsp,%rbp
    8cc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ccd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    8cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd5:	0f b6 10             	movzbl (%rax),%edx
    8cd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cdc:	0f b6 00             	movzbl (%rax),%eax
    8cdf:	38 c2                	cmp    %al,%dl
    8ce1:	0f 94 c0             	sete   %al
    8ce4:	5d                   	pop    %rbp
    8ce5:	c3                   	ret

0000000000008ce6 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    8ce6:	55                   	push   %rbp
    8ce7:	48 89 e5             	mov    %rsp,%rbp
    8cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8cfa:	48 89 10             	mov    %rdx,(%rax)
    8cfd:	90                   	nop
    8cfe:	5d                   	pop    %rbp
    8cff:	c3                   	ret

0000000000008d00 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    8d00:	55                   	push   %rbp
    8d01:	48 89 e5             	mov    %rsp,%rbp
    8d04:	48 83 ec 10          	sub    $0x10,%rsp
    8d08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d10:	48 8b 00             	mov    (%rax),%rax
    8d13:	48 85 c0             	test   %rax,%rax
    8d16:	74 0f                	je     8d27 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    8d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d1c:	48 8b 00             	mov    (%rax),%rax
    8d1f:	48 89 c7             	mov    %rax,%rdi
    8d22:	e8 89 a6 ff ff       	call   33b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    8d27:	90                   	nop
    8d28:	c9                   	leave
    8d29:	c3                   	ret

0000000000008d2a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    8d2a:	55                   	push   %rbp
    8d2b:	48 89 e5             	mov    %rsp,%rbp
    8d2e:	48 83 ec 40          	sub    $0x40,%rsp
    8d32:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8d36:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8d3a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    8d3e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8d42:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8d46:	48 89 d6             	mov    %rdx,%rsi
    8d49:	48 89 c7             	mov    %rax,%rdi
    8d4c:	e8 1a 21 00 00       	call   ae6b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    8d51:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    8d55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d59:	48 83 f8 0f          	cmp    $0xf,%rax
    8d5d:	76 3f                	jbe    8d9e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    8d5f:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    8d63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d67:	ba 00 00 00 00       	mov    $0x0,%edx
    8d6c:	48 89 ce             	mov    %rcx,%rsi
    8d6f:	48 89 c7             	mov    %rax,%rdi
    8d72:	e8 c9 a7 ff ff       	call   3540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    8d77:	48 89 c2             	mov    %rax,%rdx
    8d7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d7e:	48 89 d6             	mov    %rdx,%rsi
    8d81:	48 89 c7             	mov    %rax,%rdi
    8d84:	e8 87 a4 ff ff       	call   3210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    8d89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d91:	48 89 d6             	mov    %rdx,%rsi
    8d94:	48 89 c7             	mov    %rax,%rdi
    8d97:	e8 d4 a7 ff ff       	call   3570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    8d9c:	eb 15                	jmp    8db3 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    8d9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8da2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    8da6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8daa:	48 89 c7             	mov    %rax,%rdi
    8dad:	e8 2e a4 ff ff       	call   31e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    8db2:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    8db3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8db7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8dbb:	48 89 d6             	mov    %rdx,%rsi
    8dbe:	48 89 c7             	mov    %rax,%rdi
    8dc1:	e8 20 ff ff ff       	call   8ce6 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    8dc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8dca:	48 89 c7             	mov    %rax,%rdi
    8dcd:	e8 4e a5 ff ff       	call   3320 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    8dd2:	48 89 c1             	mov    %rax,%rcx
    8dd5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8dd9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ddd:	48 89 c6             	mov    %rax,%rsi
    8de0:	48 89 cf             	mov    %rcx,%rdi
    8de3:	e8 48 a5 ff ff       	call   3330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    8de8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8def:	00 

	_M_set_length(__dnew);
    8df0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8df4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8df8:	48 89 d6             	mov    %rdx,%rsi
    8dfb:	48 89 c7             	mov    %rax,%rdi
    8dfe:	e8 5d a3 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    8e03:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8e07:	48 89 c7             	mov    %rax,%rdi
    8e0a:	e8 f1 fe ff ff       	call   8d00 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    8e0f:	c9                   	leave
    8e10:	c3                   	ret
    8e11:	90                   	nop

0000000000008e12 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e12:	55                   	push   %rbp
    8e13:	48 89 e5             	mov    %rsp,%rbp
    8e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e1a:	90                   	nop
    8e1b:	5d                   	pop    %rbp
    8e1c:	c3                   	ret
    8e1d:	90                   	nop

0000000000008e1e <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e1e:	55                   	push   %rbp
    8e1f:	48 89 e5             	mov    %rsp,%rbp
    8e22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e26:	90                   	nop
    8e27:	5d                   	pop    %rbp
    8e28:	c3                   	ret

0000000000008e29 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8e29:	55                   	push   %rbp
    8e2a:	48 89 e5             	mov    %rsp,%rbp
    8e2d:	53                   	push   %rbx
    8e2e:	48 83 ec 28          	sub    $0x28,%rsp
    8e32:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8e36:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8e3a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8e3e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e42:	48 89 d6             	mov    %rdx,%rsi
    8e45:	48 89 c7             	mov    %rax,%rdi
    8e48:	e8 25 01 00 00       	call   8f72 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8e4d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e51:	48 89 c7             	mov    %rax,%rdi
    8e54:	e8 43 20 00 00       	call   ae9c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8e59:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8e5d:	0f 92 c3             	setb   %bl
    8e60:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e64:	48 89 c7             	mov    %rax,%rdi
    8e67:	e8 50 e4 ff ff       	call   72bc <_ZNSaI21VkExtensionPropertiesED1Ev>
    8e6c:	84 db                	test   %bl,%bl
    8e6e:	74 0f                	je     8e7f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8e70:	48 8d 05 71 96 00 00 	lea    0x9671(%rip),%rax        # 124e8 <_ZN6__pstl9execution2v1L5unseqE+0x281>
    8e77:	48 89 c7             	mov    %rax,%rdi
    8e7a:	e8 71 a2 ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8e7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8e83:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e87:	c9                   	leave
    8e88:	c3                   	ret
    8e89:	90                   	nop

0000000000008e8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8e8a:	55                   	push   %rbp
    8e8b:	48 89 e5             	mov    %rsp,%rbp
    8e8e:	53                   	push   %rbx
    8e8f:	48 83 ec 28          	sub    $0x28,%rsp
    8e93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8e9b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8e9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ea3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8ea7:	48 89 d6             	mov    %rdx,%rsi
    8eaa:	48 89 c7             	mov    %rax,%rdi
    8ead:	e8 2c 20 00 00       	call   aede <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8eb2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8eb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8eba:	48 89 d6             	mov    %rdx,%rsi
    8ebd:	48 89 c7             	mov    %rax,%rdi
    8ec0:	e8 4b 20 00 00       	call   af10 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8ec5:	eb 1a                	jmp    8ee1 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8ec7:	48 89 c3             	mov    %rax,%rbx
    8eca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ece:	48 89 c7             	mov    %rax,%rdi
    8ed1:	e8 3e e1 ff ff       	call   7014 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8ed6:	48 89 d8             	mov    %rbx,%rax
    8ed9:	48 89 c7             	mov    %rax,%rdi
    8edc:	e8 2f a6 ff ff       	call   3510 <_Unwind_Resume@plt>
    8ee1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ee5:	c9                   	leave
    8ee6:	c3                   	ret
    8ee7:	90                   	nop

0000000000008ee8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8ee8:	55                   	push   %rbp
    8ee9:	48 89 e5             	mov    %rsp,%rbp
    8eec:	48 83 ec 10          	sub    $0x10,%rsp
    8ef0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ef4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8ef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8efc:	48 89 c7             	mov    %rax,%rdi
    8eff:	e8 24 00 00 00       	call   8f28 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8f04:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8f07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f0b:	48 8b 00             	mov    (%rax),%rax
    8f0e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f12:	48 89 ce             	mov    %rcx,%rsi
    8f15:	48 89 c7             	mov    %rax,%rdi
    8f18:	e8 54 20 00 00       	call   af71 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8f1d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f21:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8f25:	90                   	nop
    8f26:	c9                   	leave
    8f27:	c3                   	ret

0000000000008f28 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8f28:	55                   	push   %rbp
    8f29:	48 89 e5             	mov    %rsp,%rbp
    8f2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f34:	5d                   	pop    %rbp
    8f35:	c3                   	ret

0000000000008f36 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8f36:	55                   	push   %rbp
    8f37:	48 89 e5             	mov    %rsp,%rbp
    8f3a:	48 83 ec 20          	sub    $0x20,%rsp
    8f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8f4a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8f4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f52:	48 89 d6             	mov    %rdx,%rsi
    8f55:	48 89 c7             	mov    %rax,%rdi
    8f58:	e8 3d 20 00 00       	call   af9a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8f5d:	90                   	nop
    8f5e:	c9                   	leave
    8f5f:	c3                   	ret

0000000000008f60 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8f60:	55                   	push   %rbp
    8f61:	48 89 e5             	mov    %rsp,%rbp
    8f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8f6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f70:	5d                   	pop    %rbp
    8f71:	c3                   	ret

0000000000008f72 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8f72:	55                   	push   %rbp
    8f73:	48 89 e5             	mov    %rsp,%rbp
    8f76:	48 83 ec 10          	sub    $0x10,%rsp
    8f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8f82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f8a:	48 89 d6             	mov    %rdx,%rsi
    8f8d:	48 89 c7             	mov    %rax,%rdi
    8f90:	e8 2b 20 00 00       	call   afc0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8f95:	90                   	nop
    8f96:	c9                   	leave
    8f97:	c3                   	ret

0000000000008f98 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8f98:	55                   	push   %rbp
    8f99:	48 89 e5             	mov    %rsp,%rbp
    8f9c:	48 83 ec 20          	sub    $0x20,%rsp
    8fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8fa8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8fac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8fb1:	74 17                	je     8fca <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8fbb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8fbf:	48 89 ce             	mov    %rcx,%rsi
    8fc2:	48 89 c7             	mov    %rax,%rdi
    8fc5:	e8 05 20 00 00       	call   afcf <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    8fca:	90                   	nop
    8fcb:	c9                   	leave
    8fcc:	c3                   	ret

0000000000008fcd <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    8fcd:	55                   	push   %rbp
    8fce:	48 89 e5             	mov    %rsp,%rbp
    8fd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8fd5:	90                   	nop
    8fd6:	5d                   	pop    %rbp
    8fd7:	c3                   	ret

0000000000008fd8 <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
    8fd8:	55                   	push   %rbp
    8fd9:	48 89 e5             	mov    %rsp,%rbp
    8fdc:	48 83 ec 10          	sub    $0x10,%rsp
    8fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fe4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    8fe8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8fec:	48 89 c7             	mov    %rax,%rdi
    8fef:	e8 d9 ff ff ff       	call   8fcd <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
    8ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ff8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ffc:	48 89 d6             	mov    %rdx,%rsi
    8fff:	48 89 c7             	mov    %rax,%rdi
    9002:	e8 f6 1f 00 00       	call   affd <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
    9007:	c9                   	leave
    9008:	c3                   	ret
    9009:	90                   	nop

000000000000900a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    900a:	55                   	push   %rbp
    900b:	48 89 e5             	mov    %rsp,%rbp
    900e:	53                   	push   %rbx
    900f:	48 83 ec 38          	sub    $0x38,%rsp
    9013:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9017:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    901b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    901f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9023:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9027:	48 89 d6             	mov    %rdx,%rsi
    902a:	48 89 c7             	mov    %rax,%rdi
    902d:	e8 a6 ff ff ff       	call   8fd8 <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>
    9032:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    9036:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    903a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    903e:	48 89 c7             	mov    %rax,%rdi
    9041:	e8 d4 ae ff ff       	call   3f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9046:	48 89 c2             	mov    %rax,%rdx
    9049:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    904d:	48 89 d6             	mov    %rdx,%rsi
    9050:	48 89 c7             	mov    %rax,%rdi
    9053:	e8 21 b1 ff ff       	call   4179 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    9058:	48 89 c6             	mov    %rax,%rsi
    905b:	48 89 df             	mov    %rbx,%rdi
    905e:	e8 77 b1 ff ff       	call   41da <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9063:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9067:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    906a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    906e:	48 8b 00             	mov    (%rax),%rax
    9071:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9075:	48 c1 e2 03          	shl    $0x3,%rdx
    9079:	48 01 c2             	add    %rax,%rdx
    907c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9080:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    9084:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9088:	48 89 c7             	mov    %rax,%rdi
    908b:	e8 8a ae ff ff       	call   3f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9090:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    9093:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9097:	48 8b 10             	mov    (%rax),%rdx
    909a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    909e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    90a2:	48 89 c7             	mov    %rax,%rdi
    90a5:	e8 6d 1f 00 00       	call   b017 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    90aa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    90ae:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    90b2:	90                   	nop
    90b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90b7:	c9                   	leave
    90b8:	c3                   	ret

00000000000090b9 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    90b9:	55                   	push   %rbp
    90ba:	48 89 e5             	mov    %rsp,%rbp
    90bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    90c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90c5:	5d                   	pop    %rbp
    90c6:	c3                   	ret
    90c7:	90                   	nop

00000000000090c8 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    90c8:	55                   	push   %rbp
    90c9:	48 89 e5             	mov    %rsp,%rbp
    90cc:	53                   	push   %rbx
    90cd:	48 83 ec 18          	sub    $0x18,%rsp
    90d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    90d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90dd:	48 8b 50 08          	mov    0x8(%rax),%rdx
    90e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90e5:	48 8b 40 10          	mov    0x10(%rax),%rax
    90e9:	48 39 c2             	cmp    %rax,%rdx
    90ec:	74 3c                	je     912a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    90ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90f2:	48 89 c7             	mov    %rax,%rdi
    90f5:	e8 4e 1f 00 00       	call   b048 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    90fa:	48 89 c2             	mov    %rax,%rdx
    90fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9101:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9105:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9109:	48 89 ce             	mov    %rcx,%rsi
    910c:	48 89 c7             	mov    %rax,%rdi
    910f:	e8 42 1f 00 00       	call   b056 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    9114:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9118:	48 8b 40 08          	mov    0x8(%rax),%rax
    911c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9120:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9124:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9128:	eb 30                	jmp    915a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    912a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    912e:	48 89 c7             	mov    %rax,%rdi
    9131:	e8 12 1f 00 00       	call   b048 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    9136:	48 89 c3             	mov    %rax,%rbx
    9139:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    913d:	48 89 c7             	mov    %rax,%rdi
    9140:	e8 51 e7 ff ff       	call   7896 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    9145:	48 89 c1             	mov    %rax,%rcx
    9148:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    914c:	48 89 da             	mov    %rbx,%rdx
    914f:	48 89 ce             	mov    %rcx,%rsi
    9152:	48 89 c7             	mov    %rax,%rdi
    9155:	e8 36 1f 00 00       	call   b090 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    915a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    915e:	48 89 c7             	mov    %rax,%rdi
    9161:	e8 bc 20 00 00       	call   b222 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    9166:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    916a:	c9                   	leave
    916b:	c3                   	ret

000000000000916c <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    916c:	55                   	push   %rbp
    916d:	48 89 e5             	mov    %rsp,%rbp
    9170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9174:	90                   	nop
    9175:	5d                   	pop    %rbp
    9176:	c3                   	ret
    9177:	90                   	nop

0000000000009178 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9178:	55                   	push   %rbp
    9179:	48 89 e5             	mov    %rsp,%rbp
    917c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9180:	90                   	nop
    9181:	5d                   	pop    %rbp
    9182:	c3                   	ret

0000000000009183 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9183:	55                   	push   %rbp
    9184:	48 89 e5             	mov    %rsp,%rbp
    9187:	53                   	push   %rbx
    9188:	48 83 ec 28          	sub    $0x28,%rsp
    918c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9190:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9194:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9198:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    919c:	48 89 d6             	mov    %rdx,%rsi
    919f:	48 89 c7             	mov    %rax,%rdi
    91a2:	e8 fd 20 00 00       	call   b2a4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    91a7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91ab:	48 89 c7             	mov    %rax,%rdi
    91ae:	e8 ae 20 00 00       	call   b261 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    91b3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    91b7:	0f 92 c3             	setb   %bl
    91ba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    91be:	48 89 c7             	mov    %rax,%rdi
    91c1:	e8 08 e3 ff ff       	call   74ce <_ZNSaI17VkLayerPropertiesED1Ev>
    91c6:	84 db                	test   %bl,%bl
    91c8:	74 0f                	je     91d9 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    91ca:	48 8d 05 17 93 00 00 	lea    0x9317(%rip),%rax        # 124e8 <_ZN6__pstl9execution2v1L5unseqE+0x281>
    91d1:	48 89 c7             	mov    %rax,%rdi
    91d4:	e8 17 9f ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    91d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    91dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91e1:	c9                   	leave
    91e2:	c3                   	ret
    91e3:	90                   	nop

00000000000091e4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    91e4:	55                   	push   %rbp
    91e5:	48 89 e5             	mov    %rsp,%rbp
    91e8:	48 83 ec 10          	sub    $0x10,%rsp
    91ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91f4:	48 89 c7             	mov    %rax,%rdi
    91f7:	e8 d2 e2 ff ff       	call   74ce <_ZNSaI17VkLayerPropertiesED1Ev>
    91fc:	90                   	nop
    91fd:	c9                   	leave
    91fe:	c3                   	ret
    91ff:	90                   	nop

0000000000009200 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9200:	55                   	push   %rbp
    9201:	48 89 e5             	mov    %rsp,%rbp
    9204:	53                   	push   %rbx
    9205:	48 83 ec 28          	sub    $0x28,%rsp
    9209:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    920d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9211:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9219:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    921d:	48 89 d6             	mov    %rdx,%rsi
    9220:	48 89 c7             	mov    %rax,%rdi
    9223:	e8 a2 20 00 00       	call   b2ca <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9228:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    922c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9230:	48 89 d6             	mov    %rdx,%rsi
    9233:	48 89 c7             	mov    %rax,%rdi
    9236:	e8 c1 20 00 00       	call   b2fc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    923b:	eb 1a                	jmp    9257 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    923d:	48 89 c3             	mov    %rax,%rbx
    9240:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9244:	48 89 c7             	mov    %rax,%rdi
    9247:	e8 98 ff ff ff       	call   91e4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    924c:	48 89 d8             	mov    %rbx,%rax
    924f:	48 89 c7             	mov    %rax,%rdi
    9252:	e8 b9 a2 ff ff       	call   3510 <_Unwind_Resume@plt>
    9257:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    925b:	c9                   	leave
    925c:	c3                   	ret
    925d:	90                   	nop

000000000000925e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    925e:	55                   	push   %rbp
    925f:	48 89 e5             	mov    %rsp,%rbp
    9262:	48 83 ec 10          	sub    $0x10,%rsp
    9266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    926a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    926e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9276:	48 8b 00             	mov    (%rax),%rax
    9279:	48 29 c2             	sub    %rax,%rdx
    927c:	48 c1 fa 03          	sar    $0x3,%rdx
    9280:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    9287:	fc c0 0f 
    928a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    928e:	48 89 c2             	mov    %rax,%rdx
    9291:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9295:	48 8b 08             	mov    (%rax),%rcx
    9298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    929c:	48 89 ce             	mov    %rcx,%rsi
    929f:	48 89 c7             	mov    %rax,%rdi
    92a2:	e8 b7 20 00 00       	call   b35e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    92a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ab:	48 89 c7             	mov    %rax,%rdi
    92ae:	e8 31 ff ff ff       	call   91e4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    92b3:	90                   	nop
    92b4:	c9                   	leave
    92b5:	c3                   	ret

00000000000092b6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    92b6:	55                   	push   %rbp
    92b7:	48 89 e5             	mov    %rsp,%rbp
    92ba:	48 83 ec 10          	sub    $0x10,%rsp
    92be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    92c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ca:	48 89 c7             	mov    %rax,%rdi
    92cd:	e8 24 00 00 00       	call   92f6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    92d2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    92d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d9:	48 8b 00             	mov    (%rax),%rax
    92dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    92e0:	48 89 ce             	mov    %rcx,%rsi
    92e3:	48 89 c7             	mov    %rax,%rdi
    92e6:	e8 a8 20 00 00       	call   b393 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    92eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    92ef:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    92f3:	90                   	nop
    92f4:	c9                   	leave
    92f5:	c3                   	ret

00000000000092f6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    92f6:	55                   	push   %rbp
    92f7:	48 89 e5             	mov    %rsp,%rbp
    92fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    92fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9302:	5d                   	pop    %rbp
    9303:	c3                   	ret

0000000000009304 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9304:	55                   	push   %rbp
    9305:	48 89 e5             	mov    %rsp,%rbp
    9308:	48 83 ec 20          	sub    $0x20,%rsp
    930c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9314:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9318:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    931c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9320:	48 89 d6             	mov    %rdx,%rsi
    9323:	48 89 c7             	mov    %rax,%rdi
    9326:	e8 91 20 00 00       	call   b3bc <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    932b:	90                   	nop
    932c:	c9                   	leave
    932d:	c3                   	ret

000000000000932e <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    932e:	55                   	push   %rbp
    932f:	48 89 e5             	mov    %rsp,%rbp
    9332:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9336:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    933a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    933e:	5d                   	pop    %rbp
    933f:	c3                   	ret

0000000000009340 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    9340:	55                   	push   %rbp
    9341:	48 89 e5             	mov    %rsp,%rbp
    9344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    934c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9350:	48 8b 10             	mov    (%rax),%rdx
    9353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9357:	48 89 10             	mov    %rdx,(%rax)
    935a:	90                   	nop
    935b:	5d                   	pop    %rbp
    935c:	c3                   	ret
    935d:	90                   	nop

000000000000935e <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    935e:	55                   	push   %rbp
    935f:	48 89 e5             	mov    %rsp,%rbp
    9362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    936a:	5d                   	pop    %rbp
    936b:	c3                   	ret

000000000000936c <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    936c:	55                   	push   %rbp
    936d:	48 89 e5             	mov    %rsp,%rbp
    9370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9374:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    9378:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    937c:	48 8b 10             	mov    (%rax),%rdx
    937f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9383:	48 89 10             	mov    %rdx,(%rax)
    9386:	90                   	nop
    9387:	5d                   	pop    %rbp
    9388:	c3                   	ret
    9389:	90                   	nop

000000000000938a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    938a:	55                   	push   %rbp
    938b:	48 89 e5             	mov    %rsp,%rbp
    938e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9396:	5d                   	pop    %rbp
    9397:	c3                   	ret

0000000000009398 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9398:	55                   	push   %rbp
    9399:	48 89 e5             	mov    %rsp,%rbp
    939c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    93a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93a8:	5d                   	pop    %rbp
    93a9:	c3                   	ret

00000000000093aa <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    93aa:	55                   	push   %rbp
    93ab:	48 89 e5             	mov    %rsp,%rbp
    93ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    93b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93ba:	48 8b 10             	mov    (%rax),%rdx
    93bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c1:	48 89 10             	mov    %rdx,(%rax)
    93c4:	90                   	nop
    93c5:	5d                   	pop    %rbp
    93c6:	c3                   	ret
    93c7:	90                   	nop

00000000000093c8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    93c8:	55                   	push   %rbp
    93c9:	48 89 e5             	mov    %rsp,%rbp
    93cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    93d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93d4:	5d                   	pop    %rbp
    93d5:	c3                   	ret

00000000000093d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    93d6:	55                   	push   %rbp
    93d7:	48 89 e5             	mov    %rsp,%rbp
    93da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    93e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93e6:	48 8b 10             	mov    (%rax),%rdx
    93e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ed:	48 89 10             	mov    %rdx,(%rax)
    93f0:	90                   	nop
    93f1:	5d                   	pop    %rbp
    93f2:	c3                   	ret
    93f3:	90                   	nop

00000000000093f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    93f4:	55                   	push   %rbp
    93f5:	48 89 e5             	mov    %rsp,%rbp
    93f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    93fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9400:	5d                   	pop    %rbp
    9401:	c3                   	ret

0000000000009402 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    9402:	55                   	push   %rbp
    9403:	48 89 e5             	mov    %rsp,%rbp
    9406:	48 83 ec 10          	sub    $0x10,%rsp
    940a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    940e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9412:	48 89 c7             	mov    %rax,%rdi
    9415:	e8 c8 1f 00 00       	call   b3e2 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    941a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    941e:	48 89 c7             	mov    %rax,%rdi
    9421:	e8 d8 1f 00 00       	call   b3fe <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    9426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    942a:	48 83 c0 08          	add    $0x8,%rax
    942e:	48 89 c7             	mov    %rax,%rdi
    9431:	e8 b6 da ff ff       	call   6eec <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    9436:	90                   	nop
    9437:	c9                   	leave
    9438:	c3                   	ret
    9439:	90                   	nop

000000000000943a <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    943a:	55                   	push   %rbp
    943b:	48 89 e5             	mov    %rsp,%rbp
    943e:	48 83 ec 10          	sub    $0x10,%rsp
    9442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    944a:	48 89 c7             	mov    %rax,%rdi
    944d:	e8 b8 1f 00 00       	call   b40a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    9452:	90                   	nop
    9453:	c9                   	leave
    9454:	c3                   	ret
    9455:	90                   	nop

0000000000009456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>:
	    _M_insert_unique_(end(), *__first, __an);
	}

      template<typename _InputIterator>
	__enable_if_t<!__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    9456:	55                   	push   %rbp
    9457:	48 89 e5             	mov    %rsp,%rbp
    945a:	48 83 ec 20          	sub    $0x20,%rsp
    945e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9462:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9466:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	{
	  for (; __first != __last; ++__first)
    946a:	eb 2a                	jmp    9496 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x40>
	    _M_emplace_unique(*__first);
    946c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    9470:	48 89 c7             	mov    %rax,%rdi
    9473:	e8 fa e1 ff ff       	call   7672 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    9478:	48 89 c2             	mov    %rax,%rdx
    947b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947f:	48 89 d6             	mov    %rdx,%rsi
    9482:	48 89 c7             	mov    %rax,%rdi
    9485:	e8 8c 1f 00 00       	call   b416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>
	  for (; __first != __last; ++__first)
    948a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    948e:	48 89 c7             	mov    %rax,%rdi
    9491:	e8 bc e1 ff ff       	call   7652 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    9496:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    949a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    949e:	48 89 d6             	mov    %rdx,%rsi
    94a1:	48 89 c7             	mov    %rax,%rdi
    94a4:	e8 6e e1 ff ff       	call   7617 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    94a9:	84 c0                	test   %al,%al
    94ab:	75 bf                	jne    946c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x16>
	}
    94ad:	90                   	nop
    94ae:	90                   	nop
    94af:	c9                   	leave
    94b0:	c3                   	ret
    94b1:	90                   	nop

00000000000094b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    94b2:	55                   	push   %rbp
    94b3:	48 89 e5             	mov    %rsp,%rbp
    94b6:	48 83 ec 20          	sub    $0x20,%rsp
    94ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    94be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    94c2:	eb 49                	jmp    950d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    94c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94c8:	48 89 c7             	mov    %rax,%rdi
    94cb:	e8 6a 20 00 00       	call   b53a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    94d0:	48 89 c2             	mov    %rax,%rdx
    94d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94d7:	48 89 d6             	mov    %rdx,%rsi
    94da:	48 89 c7             	mov    %rax,%rdi
    94dd:	e8 d0 ff ff ff       	call   94b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	  _Link_type __y = _S_left(__x);
    94e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94e6:	48 89 c7             	mov    %rax,%rdi
    94e9:	e8 5e 20 00 00       	call   b54c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    94ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    94f2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    94f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    94fa:	48 89 d6             	mov    %rdx,%rsi
    94fd:	48 89 c7             	mov    %rax,%rdi
    9500:	e8 59 20 00 00       	call   b55e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	  __x = __y;
    9505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9509:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    950d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9512:	75 b0                	jne    94c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x12>
	}
    }
    9514:	90                   	nop
    9515:	90                   	nop
    9516:	c9                   	leave
    9517:	c3                   	ret

0000000000009518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    9518:	55                   	push   %rbp
    9519:	48 89 e5             	mov    %rsp,%rbp
    951c:	48 83 ec 10          	sub    $0x10,%rsp
    9520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    9524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9528:	48 89 c7             	mov    %rax,%rdi
    952b:	e8 68 20 00 00       	call   b598 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>
    9530:	c9                   	leave
    9531:	c3                   	ret

0000000000009532 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    9532:	55                   	push   %rbp
    9533:	48 89 e5             	mov    %rsp,%rbp
    9536:	48 83 ec 40          	sub    $0x40,%rsp
    953a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    953e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
    9542:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9546:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    954a:	48 89 d6             	mov    %rdx,%rsi
    954d:	48 89 c7             	mov    %rax,%rdi
    9550:	e8 55 20 00 00       	call   b5aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>
    9555:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    9559:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const size_type __old_size = size();
    955d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9561:	48 89 c7             	mov    %rax,%rdi
    9564:	e8 df 21 00 00       	call   b748 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    9569:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_erase_aux(__p.first, __p.second);
    956d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    9571:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9575:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    9579:	48 89 d6             	mov    %rdx,%rsi
    957c:	48 89 c7             	mov    %rax,%rdi
    957f:	e8 d6 21 00 00       	call   b75a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    9584:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    9588:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    958c:	48 89 d6             	mov    %rdx,%rsi
    958f:	48 89 c7             	mov    %rax,%rdi
    9592:	e8 c3 21 00 00       	call   b75a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    9597:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    959b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    959f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95a3:	48 89 ce             	mov    %rcx,%rsi
    95a6:	48 89 c7             	mov    %rax,%rdi
    95a9:	e8 ca 21 00 00       	call   b778 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>
      return __old_size - size();
    95ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    95b2:	48 89 c7             	mov    %rax,%rdi
    95b5:	e8 8e 21 00 00       	call   b748 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    95ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    95be:	48 29 c2             	sub    %rax,%rdx
    95c1:	48 89 d0             	mov    %rdx,%rax
    }
    95c4:	c9                   	leave
    95c5:	c3                   	ret

00000000000095c6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    95c6:	55                   	push   %rbp
    95c7:	48 89 e5             	mov    %rsp,%rbp
    95ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count == 0; }
    95ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95d2:	48 8b 40 28          	mov    0x28(%rax),%rax
    95d6:	48 85 c0             	test   %rax,%rax
    95d9:	0f 94 c0             	sete   %al
    95dc:	5d                   	pop    %rbp
    95dd:	c3                   	ret

00000000000095de <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    95de:	55                   	push   %rbp
    95df:	48 89 e5             	mov    %rsp,%rbp
    95e2:	48 83 ec 10          	sub    $0x10,%rsp
    95e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ee:	48 89 c7             	mov    %rax,%rdi
    95f1:	e8 66 22 00 00       	call   b85c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    95f6:	90                   	nop
    95f7:	c9                   	leave
    95f8:	c3                   	ret
    95f9:	90                   	nop

00000000000095fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    95fa:	55                   	push   %rbp
    95fb:	48 89 e5             	mov    %rsp,%rbp
    95fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    9602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9606:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    960d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9611:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9618:	00 
    9619:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    961d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    9624:	00 
	{ }
    9625:	90                   	nop
    9626:	5d                   	pop    %rbp
    9627:	c3                   	ret

0000000000009628 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
    9628:	55                   	push   %rbp
    9629:	48 89 e5             	mov    %rsp,%rbp
    962c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9630:	90                   	nop
    9631:	5d                   	pop    %rbp
    9632:	c3                   	ret
    9633:	90                   	nop

0000000000009634 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9634:	55                   	push   %rbp
    9635:	48 89 e5             	mov    %rsp,%rbp
    9638:	48 83 ec 20          	sub    $0x20,%rsp
    963c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9640:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9644:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9648:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    964d:	74 17                	je     9666 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    964f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9653:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9657:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    965b:	48 89 ce             	mov    %rcx,%rsi
    965e:	48 89 c7             	mov    %rax,%rdi
    9661:	e8 01 22 00 00       	call   b867 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    9666:	90                   	nop
    9667:	c9                   	leave
    9668:	c3                   	ret
    9669:	90                   	nop

000000000000966a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    966a:	55                   	push   %rbp
    966b:	48 89 e5             	mov    %rsp,%rbp
    966e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9676:	5d                   	pop    %rbp
    9677:	c3                   	ret

0000000000009678 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9678:	55                   	push   %rbp
    9679:	48 89 e5             	mov    %rsp,%rbp
    967c:	48 83 ec 20          	sub    $0x20,%rsp
    9680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9688:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    968c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9694:	48 89 d6             	mov    %rdx,%rsi
    9697:	48 89 c7             	mov    %rax,%rdi
    969a:	e8 f6 21 00 00       	call   b895 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    969f:	90                   	nop
    96a0:	c9                   	leave
    96a1:	c3                   	ret

00000000000096a2 <_ZNSaI16VkPresentModeKHREC1Ev>:
    96a2:	55                   	push   %rbp
    96a3:	48 89 e5             	mov    %rsp,%rbp
    96a6:	48 83 ec 10          	sub    $0x10,%rsp
    96aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b2:	48 89 c7             	mov    %rax,%rdi
    96b5:	e8 02 22 00 00       	call   b8bc <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    96ba:	90                   	nop
    96bb:	c9                   	leave
    96bc:	c3                   	ret
    96bd:	90                   	nop

00000000000096be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    96be:	55                   	push   %rbp
    96bf:	48 89 e5             	mov    %rsp,%rbp
    96c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    96c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96ca:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    96d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96d5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    96dc:	00 
    96dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96e1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    96e8:	00 
	{ }
    96e9:	90                   	nop
    96ea:	5d                   	pop    %rbp
    96eb:	c3                   	ret

00000000000096ec <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
    96ec:	55                   	push   %rbp
    96ed:	48 89 e5             	mov    %rsp,%rbp
    96f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96f4:	90                   	nop
    96f5:	5d                   	pop    %rbp
    96f6:	c3                   	ret
    96f7:	90                   	nop

00000000000096f8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    96f8:	55                   	push   %rbp
    96f9:	48 89 e5             	mov    %rsp,%rbp
    96fc:	48 83 ec 20          	sub    $0x20,%rsp
    9700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9704:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9708:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    970c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9711:	74 17                	je     972a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9713:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9717:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    971b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    971f:	48 89 ce             	mov    %rcx,%rsi
    9722:	48 89 c7             	mov    %rax,%rdi
    9725:	e8 9d 21 00 00       	call   b8c7 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    972a:	90                   	nop
    972b:	c9                   	leave
    972c:	c3                   	ret
    972d:	90                   	nop

000000000000972e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    972e:	55                   	push   %rbp
    972f:	48 89 e5             	mov    %rsp,%rbp
    9732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    973a:	5d                   	pop    %rbp
    973b:	c3                   	ret

000000000000973c <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    973c:	55                   	push   %rbp
    973d:	48 89 e5             	mov    %rsp,%rbp
    9740:	48 83 ec 20          	sub    $0x20,%rsp
    9744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    974c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9750:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9758:	48 89 d6             	mov    %rdx,%rsi
    975b:	48 89 c7             	mov    %rax,%rdi
    975e:	e8 92 21 00 00       	call   b8f5 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9763:	90                   	nop
    9764:	c9                   	leave
    9765:	c3                   	ret

0000000000009766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    9766:	55                   	push   %rbp
    9767:	48 89 e5             	mov    %rsp,%rbp
    976a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    976e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9772:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    977a:	48 8b 00             	mov    (%rax),%rax
    977d:	48 29 c2             	sub    %rax,%rdx
    9780:	48 89 d0             	mov    %rdx,%rax
    9783:	48 c1 f8 03          	sar    $0x3,%rax
    9787:	5d                   	pop    %rbp
    9788:	c3                   	ret
    9789:	90                   	nop

000000000000978a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    978a:	55                   	push   %rbp
    978b:	48 89 e5             	mov    %rsp,%rbp
    978e:	53                   	push   %rbx
    978f:	48 83 ec 38          	sub    $0x38,%rsp
    9793:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    9797:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    979b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    97a0:	0f 84 e7 01 00 00    	je     998d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    97a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97aa:	48 89 c7             	mov    %rax,%rdi
    97ad:	e8 b4 ff ff ff       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    97b2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    97b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97ba:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    97be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97c2:	48 8b 40 08          	mov    0x8(%rax),%rax
    97c6:	48 29 c2             	sub    %rax,%rdx
    97c9:	48 89 d0             	mov    %rdx,%rax
    97cc:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    97d0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    97d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97d8:	48 89 c7             	mov    %rax,%rdi
    97db:	e8 3c 21 00 00       	call   b91c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    97e0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    97e4:	72 16                	jb     97fc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x72>
    97e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    97ea:	48 89 c7             	mov    %rax,%rdi
    97ed:	e8 2a 21 00 00       	call   b91c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    97f2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    97f6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    97fa:	73 07                	jae    9803 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x79>
    97fc:	b8 01 00 00 00       	mov    $0x1,%eax
    9801:	eb 05                	jmp    9808 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x7e>
    9803:	b8 00 00 00 00       	mov    $0x0,%eax
    9808:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    980a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    980e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    9812:	72 33                	jb     9847 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    9814:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9818:	48 89 c7             	mov    %rax,%rdi
    981b:	e8 4a fe ff ff       	call   966a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9820:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    9823:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9827:	48 8b 40 08          	mov    0x8(%rax),%rax
    982b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    982f:	48 89 ce             	mov    %rcx,%rsi
    9832:	48 89 c7             	mov    %rax,%rdi
    9835:	e8 04 21 00 00       	call   b93e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    983a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    983e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    9842:	e9 46 01 00 00       	jmp    998d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    9847:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    984b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    984f:	48 8d 15 c3 8c 00 00 	lea    0x8cc3(%rip),%rdx        # 12519 <_ZN6__pstl9execution2v1L5unseqE+0x2b2>
    9856:	48 89 ce             	mov    %rcx,%rsi
    9859:	48 89 c7             	mov    %rax,%rdi
    985c:	e8 07 21 00 00       	call   b968 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>
    9861:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    9865:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9869:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    986d:	48 89 d6             	mov    %rdx,%rsi
    9870:	48 89 c7             	mov    %rax,%rdi
    9873:	e8 b8 21 00 00       	call   ba30 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    9878:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    987c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9880:	48 89 c7             	mov    %rax,%rdi
    9883:	e8 e2 fd ff ff       	call   966a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9888:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    988b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    988f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    9896:	00 
    9897:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    989b:	48 01 c1             	add    %rax,%rcx
    989e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    98a2:	48 89 c6             	mov    %rax,%rsi
    98a5:	48 89 cf             	mov    %rcx,%rdi
    98a8:	e8 91 20 00 00       	call   b93e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    98ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    98b1:	48 89 c7             	mov    %rax,%rdi
    98b4:	e8 b1 fd ff ff       	call   966a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    98b9:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    98bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    98c0:	48 8b 70 08          	mov    0x8(%rax),%rsi
    98c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    98c8:	48 8b 00             	mov    (%rax),%rax
    98cb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    98cf:	48 89 c7             	mov    %rax,%rdi
    98d2:	e8 8c 21 00 00       	call   ba63 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    98d7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    98db:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    98df:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    98e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    98e7:	48 8b 12             	mov    (%rdx),%rdx
    98ea:	48 29 d1             	sub    %rdx,%rcx
    98ed:	48 c1 f9 03          	sar    $0x3,%rcx
    98f1:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    98f4:	48 89 d6             	mov    %rdx,%rsi
    98f7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    98fb:	48 8b 0a             	mov    (%rdx),%rcx
    98fe:	48 89 f2             	mov    %rsi,%rdx
    9901:	48 89 ce             	mov    %rcx,%rsi
    9904:	48 89 c7             	mov    %rax,%rdi
    9907:	e8 28 fd ff ff       	call   9634 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    990c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9910:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9914:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9917:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    991b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    991f:	48 01 d0             	add    %rdx,%rax
    9922:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9929:	00 
    992a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    992e:	48 01 c2             	add    %rax,%rdx
    9931:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9935:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    9939:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    993d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9944:	00 
    9945:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9949:	48 01 c2             	add    %rax,%rdx
    994c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9950:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    9954:	eb 37                	jmp    998d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    9956:	48 89 c7             	mov    %rax,%rdi
    9959:	e8 62 97 ff ff       	call   30c0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    995e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9962:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9966:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    996a:	48 89 ce             	mov    %rcx,%rsi
    996d:	48 89 c7             	mov    %rax,%rdi
    9970:	e8 bf fc ff ff       	call   9634 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    9975:	e8 c6 9a ff ff       	call   3440 <__cxa_rethrow@plt>
		  __catch(...)
    997a:	48 89 c3             	mov    %rax,%rbx
    997d:	e8 4e 9b ff ff       	call   34d0 <__cxa_end_catch@plt>
    9982:	48 89 d8             	mov    %rbx,%rax
    9985:	48 89 c7             	mov    %rax,%rdi
    9988:	e8 83 9b ff ff       	call   3510 <_Unwind_Resume@plt>
    }
    998d:	90                   	nop
    998e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9992:	c9                   	leave
    9993:	c3                   	ret

0000000000009994 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    9994:	55                   	push   %rbp
    9995:	48 89 e5             	mov    %rsp,%rbp
    9998:	48 83 ec 20          	sub    $0x20,%rsp
    999c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    99a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99a8:	48 8b 40 08          	mov    0x8(%rax),%rax
    99ac:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    99b0:	48 c1 f8 03          	sar    $0x3,%rax
    99b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    99b8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    99bd:	74 32                	je     99f1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    99bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99c3:	48 89 c7             	mov    %rax,%rdi
    99c6:	e8 9f fc ff ff       	call   966a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    99cb:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    99ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99d2:	48 8b 48 08          	mov    0x8(%rax),%rcx
    99d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99da:	48 89 ce             	mov    %rcx,%rsi
    99dd:	48 89 c7             	mov    %rax,%rdi
    99e0:	e8 93 fc ff ff       	call   9678 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    99e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99e9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    99ed:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    99f1:	90                   	nop
    99f2:	c9                   	leave
    99f3:	c3                   	ret

00000000000099f4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    99f4:	55                   	push   %rbp
    99f5:	48 89 e5             	mov    %rsp,%rbp
    99f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9a00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a04:	5d                   	pop    %rbp
    9a05:	c3                   	ret

0000000000009a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    9a06:	55                   	push   %rbp
    9a07:	48 89 e5             	mov    %rsp,%rbp
    9a0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a12:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9a16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a1a:	48 8b 00             	mov    (%rax),%rax
    9a1d:	48 29 c2             	sub    %rax,%rdx
    9a20:	48 89 d0             	mov    %rdx,%rax
    9a23:	48 c1 f8 02          	sar    $0x2,%rax
    9a27:	5d                   	pop    %rbp
    9a28:	c3                   	ret
    9a29:	90                   	nop

0000000000009a2a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    9a2a:	55                   	push   %rbp
    9a2b:	48 89 e5             	mov    %rsp,%rbp
    9a2e:	53                   	push   %rbx
    9a2f:	48 83 ec 38          	sub    $0x38,%rsp
    9a33:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    9a37:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    9a3b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    9a40:	0f 84 e7 01 00 00    	je     9c2d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    9a46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9a4a:	48 89 c7             	mov    %rax,%rdi
    9a4d:	e8 b4 ff ff ff       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    9a52:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    9a56:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9a5a:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    9a5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9a62:	48 8b 40 08          	mov    0x8(%rax),%rax
    9a66:	48 29 c2             	sub    %rax,%rdx
    9a69:	48 89 d0             	mov    %rdx,%rax
    9a6c:	48 c1 f8 02          	sar    $0x2,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    9a70:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    9a74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9a78:	48 89 c7             	mov    %rax,%rdi
    9a7b:	e8 16 20 00 00       	call   ba96 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    9a80:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9a84:	72 16                	jb     9a9c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x72>
    9a86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9a8a:	48 89 c7             	mov    %rax,%rdi
    9a8d:	e8 04 20 00 00       	call   ba96 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    9a92:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    9a96:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    9a9a:	73 07                	jae    9aa3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x79>
    9a9c:	b8 01 00 00 00       	mov    $0x1,%eax
    9aa1:	eb 05                	jmp    9aa8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x7e>
    9aa3:	b8 00 00 00 00       	mov    $0x0,%eax
    9aa8:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    9aaa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9aae:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    9ab2:	72 33                	jb     9ae7 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    9ab4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9ab8:	48 89 c7             	mov    %rax,%rdi
    9abb:	e8 6e fc ff ff       	call   972e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9ac0:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    9ac3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9ac7:	48 8b 40 08          	mov    0x8(%rax),%rax
    9acb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    9acf:	48 89 ce             	mov    %rcx,%rsi
    9ad2:	48 89 c7             	mov    %rax,%rdi
    9ad5:	e8 de 1f 00 00       	call   bab8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    9ada:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9ade:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    9ae2:	e9 46 01 00 00       	jmp    9c2d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    9ae7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    9aeb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9aef:	48 8d 15 23 8a 00 00 	lea    0x8a23(%rip),%rdx        # 12519 <_ZN6__pstl9execution2v1L5unseqE+0x2b2>
    9af6:	48 89 ce             	mov    %rcx,%rsi
    9af9:	48 89 c7             	mov    %rax,%rdi
    9afc:	e8 e1 1f 00 00       	call   bae2 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>
    9b01:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    9b05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9b09:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9b0d:	48 89 d6             	mov    %rdx,%rsi
    9b10:	48 89 c7             	mov    %rax,%rdi
    9b13:	e8 92 20 00 00       	call   bbaa <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    9b18:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    9b1c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9b20:	48 89 c7             	mov    %rax,%rdi
    9b23:	e8 06 fc ff ff       	call   972e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9b28:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    9b2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b2f:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    9b36:	00 
    9b37:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9b3b:	48 01 c1             	add    %rax,%rcx
    9b3e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9b42:	48 89 c6             	mov    %rax,%rsi
    9b45:	48 89 cf             	mov    %rcx,%rdi
    9b48:	e8 6b 1f 00 00       	call   bab8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    9b4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9b51:	48 89 c7             	mov    %rax,%rdi
    9b54:	e8 d5 fb ff ff       	call   972e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9b59:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    9b5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9b60:	48 8b 70 08          	mov    0x8(%rax),%rsi
    9b64:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9b68:	48 8b 00             	mov    (%rax),%rax
    9b6b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9b6f:	48 89 c7             	mov    %rax,%rdi
    9b72:	e8 66 20 00 00       	call   bbdd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    9b77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    9b7b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9b7f:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    9b83:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9b87:	48 8b 12             	mov    (%rdx),%rdx
    9b8a:	48 29 d1             	sub    %rdx,%rcx
    9b8d:	48 c1 f9 02          	sar    $0x2,%rcx
    9b91:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    9b94:	48 89 d6             	mov    %rdx,%rsi
    9b97:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9b9b:	48 8b 0a             	mov    (%rdx),%rcx
    9b9e:	48 89 f2             	mov    %rsi,%rdx
    9ba1:	48 89 ce             	mov    %rcx,%rsi
    9ba4:	48 89 c7             	mov    %rax,%rdi
    9ba7:	e8 4c fb ff ff       	call   96f8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    9bac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9bb0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9bb4:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    9bb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9bbb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9bbf:	48 01 d0             	add    %rdx,%rax
    9bc2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9bc9:	00 
    9bca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9bce:	48 01 c2             	add    %rax,%rdx
    9bd1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9bd5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    9bd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bdd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    9be4:	00 
    9be5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9be9:	48 01 c2             	add    %rax,%rdx
    9bec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9bf0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    9bf4:	eb 37                	jmp    9c2d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    9bf6:	48 89 c7             	mov    %rax,%rdi
    9bf9:	e8 c2 94 ff ff       	call   30c0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    9bfe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9c02:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9c06:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9c0a:	48 89 ce             	mov    %rcx,%rsi
    9c0d:	48 89 c7             	mov    %rax,%rdi
    9c10:	e8 e3 fa ff ff       	call   96f8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    9c15:	e8 26 98 ff ff       	call   3440 <__cxa_rethrow@plt>
		  __catch(...)
    9c1a:	48 89 c3             	mov    %rax,%rbx
    9c1d:	e8 ae 98 ff ff       	call   34d0 <__cxa_end_catch@plt>
    9c22:	48 89 d8             	mov    %rbx,%rax
    9c25:	48 89 c7             	mov    %rax,%rdi
    9c28:	e8 e3 98 ff ff       	call   3510 <_Unwind_Resume@plt>
    }
    9c2d:	90                   	nop
    9c2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c32:	c9                   	leave
    9c33:	c3                   	ret

0000000000009c34 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    9c34:	55                   	push   %rbp
    9c35:	48 89 e5             	mov    %rsp,%rbp
    9c38:	48 83 ec 20          	sub    $0x20,%rsp
    9c3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9c40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    9c44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c48:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c4c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    9c50:	48 c1 f8 02          	sar    $0x2,%rax
    9c54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9c58:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9c5d:	74 32                	je     9c91 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    9c5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c63:	48 89 c7             	mov    %rax,%rdi
    9c66:	e8 c3 fa ff ff       	call   972e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9c6b:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    9c6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c72:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9c76:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c7a:	48 89 ce             	mov    %rcx,%rsi
    9c7d:	48 89 c7             	mov    %rax,%rdi
    9c80:	e8 b7 fa ff ff       	call   973c <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    9c85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c89:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9c8d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    9c91:	90                   	nop
    9c92:	c9                   	leave
    9c93:	c3                   	ret

0000000000009c94 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9c94:	55                   	push   %rbp
    9c95:	48 89 e5             	mov    %rsp,%rbp
    9c98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9ca0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ca4:	5d                   	pop    %rbp
    9ca5:	c3                   	ret

0000000000009ca6 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    9ca6:	55                   	push   %rbp
    9ca7:	48 89 e5             	mov    %rsp,%rbp
    9caa:	53                   	push   %rbx
    9cab:	48 83 ec 18          	sub    $0x18,%rsp
    9caf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9cb3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    9cb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cbb:	48 89 c7             	mov    %rax,%rdi
    9cbe:	e8 2b 0a 00 00       	call   a6ee <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    9cc3:	48 8b 18             	mov    (%rax),%rbx
    9cc6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9cca:	48 89 c7             	mov    %rax,%rdi
    9ccd:	e8 1c 0a 00 00       	call   a6ee <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    9cd2:	48 8b 00             	mov    (%rax),%rax
    9cd5:	48 39 c3             	cmp    %rax,%rbx
    9cd8:	0f 94 c0             	sete   %al
    9cdb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9cdf:	c9                   	leave
    9ce0:	c3                   	ret

0000000000009ce1 <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    9ce1:	55                   	push   %rbp
    9ce2:	48 89 e5             	mov    %rsp,%rbp
    9ce5:	53                   	push   %rbx
    9ce6:	48 83 ec 18          	sub    $0x18,%rsp
    9cea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9cee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    9cf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cf6:	48 89 c7             	mov    %rax,%rdi
    9cf9:	e8 1c 0a 00 00       	call   a71a <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    9cfe:	48 8b 18             	mov    (%rax),%rbx
    9d01:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9d05:	48 89 c7             	mov    %rax,%rdi
    9d08:	e8 0d 0a 00 00       	call   a71a <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    9d0d:	48 8b 00             	mov    (%rax),%rax
    9d10:	48 39 c3             	cmp    %rax,%rbx
    9d13:	0f 94 c0             	sete   %al
    9d16:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d1a:	c9                   	leave
    9d1b:	c3                   	ret

0000000000009d1c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9d1c:	55                   	push   %rbp
    9d1d:	48 89 e5             	mov    %rsp,%rbp
    9d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d24:	90                   	nop
    9d25:	5d                   	pop    %rbp
    9d26:	c3                   	ret
    9d27:	90                   	nop

0000000000009d28 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9d28:	55                   	push   %rbp
    9d29:	48 89 e5             	mov    %rsp,%rbp
    9d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d30:	90                   	nop
    9d31:	5d                   	pop    %rbp
    9d32:	c3                   	ret

0000000000009d33 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9d33:	55                   	push   %rbp
    9d34:	48 89 e5             	mov    %rsp,%rbp
    9d37:	53                   	push   %rbx
    9d38:	48 83 ec 28          	sub    $0x28,%rsp
    9d3c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9d40:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9d44:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9d48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d4c:	48 89 d6             	mov    %rdx,%rsi
    9d4f:	48 89 c7             	mov    %rax,%rdi
    9d52:	e8 fb 1e 00 00       	call   bc52 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9d57:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d5b:	48 89 c7             	mov    %rax,%rdi
    9d5e:	e8 ac 1e 00 00       	call   bc0f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    9d63:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9d67:	0f 92 c3             	setb   %bl
    9d6a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d6e:	48 89 c7             	mov    %rax,%rdi
    9d71:	e8 16 e1 ff ff       	call   7e8c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    9d76:	84 db                	test   %bl,%bl
    9d78:	74 0f                	je     9d89 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9d7a:	48 8d 05 67 87 00 00 	lea    0x8767(%rip),%rax        # 124e8 <_ZN6__pstl9execution2v1L5unseqE+0x281>
    9d81:	48 89 c7             	mov    %rax,%rdi
    9d84:	e8 67 93 ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9d89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9d8d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d91:	c9                   	leave
    9d92:	c3                   	ret
    9d93:	90                   	nop

0000000000009d94 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    9d94:	55                   	push   %rbp
    9d95:	48 89 e5             	mov    %rsp,%rbp
    9d98:	48 83 ec 10          	sub    $0x10,%rsp
    9d9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9da4:	48 89 c7             	mov    %rax,%rdi
    9da7:	e8 e0 e0 ff ff       	call   7e8c <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    9dac:	90                   	nop
    9dad:	c9                   	leave
    9dae:	c3                   	ret
    9daf:	90                   	nop

0000000000009db0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9db0:	55                   	push   %rbp
    9db1:	48 89 e5             	mov    %rsp,%rbp
    9db4:	53                   	push   %rbx
    9db5:	48 83 ec 28          	sub    $0x28,%rsp
    9db9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9dbd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9dc1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9dc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9dc9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9dcd:	48 89 d6             	mov    %rdx,%rsi
    9dd0:	48 89 c7             	mov    %rax,%rdi
    9dd3:	e8 a0 1e 00 00       	call   bc78 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9dd8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9ddc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9de0:	48 89 d6             	mov    %rdx,%rsi
    9de3:	48 89 c7             	mov    %rax,%rdi
    9de6:	e8 bf 1e 00 00       	call   bcaa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    9deb:	eb 1a                	jmp    9e07 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    9ded:	48 89 c3             	mov    %rax,%rbx
    9df0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9df4:	48 89 c7             	mov    %rax,%rdi
    9df7:	e8 98 ff ff ff       	call   9d94 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9dfc:	48 89 d8             	mov    %rbx,%rax
    9dff:	48 89 c7             	mov    %rax,%rdi
    9e02:	e8 09 97 ff ff       	call   3510 <_Unwind_Resume@plt>
    9e07:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9e0b:	c9                   	leave
    9e0c:	c3                   	ret
    9e0d:	90                   	nop

0000000000009e0e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9e0e:	55                   	push   %rbp
    9e0f:	48 89 e5             	mov    %rsp,%rbp
    9e12:	48 83 ec 10          	sub    $0x10,%rsp
    9e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9e22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e26:	48 8b 00             	mov    (%rax),%rax
    9e29:	48 29 c2             	sub    %rax,%rdx
    9e2c:	48 89 d0             	mov    %rdx,%rax
    9e2f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9e33:	48 89 c2             	mov    %rax,%rdx
    9e36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e3a:	48 8b 08             	mov    (%rax),%rcx
    9e3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e41:	48 89 ce             	mov    %rcx,%rsi
    9e44:	48 89 c7             	mov    %rax,%rdi
    9e47:	e8 b4 1e 00 00       	call   bd00 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    9e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e50:	48 89 c7             	mov    %rax,%rdi
    9e53:	e8 3c ff ff ff       	call   9d94 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9e58:	90                   	nop
    9e59:	c9                   	leave
    9e5a:	c3                   	ret
    9e5b:	90                   	nop

0000000000009e5c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9e5c:	55                   	push   %rbp
    9e5d:	48 89 e5             	mov    %rsp,%rbp
    9e60:	48 83 ec 10          	sub    $0x10,%rsp
    9e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e70:	48 89 c7             	mov    %rax,%rdi
    9e73:	e8 24 00 00 00       	call   9e9c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9e78:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9e7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e7f:	48 8b 00             	mov    (%rax),%rax
    9e82:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e86:	48 89 ce             	mov    %rcx,%rsi
    9e89:	48 89 c7             	mov    %rax,%rdi
    9e8c:	e8 a4 1e 00 00       	call   bd35 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9e91:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e95:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9e99:	90                   	nop
    9e9a:	c9                   	leave
    9e9b:	c3                   	ret

0000000000009e9c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9e9c:	55                   	push   %rbp
    9e9d:	48 89 e5             	mov    %rsp,%rbp
    9ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea8:	5d                   	pop    %rbp
    9ea9:	c3                   	ret

0000000000009eaa <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9eaa:	55                   	push   %rbp
    9eab:	48 89 e5             	mov    %rsp,%rbp
    9eae:	48 83 ec 20          	sub    $0x20,%rsp
    9eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9eba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9ebe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ec6:	48 89 d6             	mov    %rdx,%rsi
    9ec9:	48 89 c7             	mov    %rax,%rdi
    9ecc:	e8 8d 1e 00 00       	call   bd5e <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9ed1:	90                   	nop
    9ed2:	c9                   	leave
    9ed3:	c3                   	ret

0000000000009ed4 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9ed4:	55                   	push   %rbp
    9ed5:	48 89 e5             	mov    %rsp,%rbp
    9ed8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9edc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9ee0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ee4:	5d                   	pop    %rbp
    9ee5:	c3                   	ret

0000000000009ee6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    9ee6:	55                   	push   %rbp
    9ee7:	48 89 e5             	mov    %rsp,%rbp
    9eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    9ef2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ef6:	48 8b 10             	mov    (%rax),%rdx
    9ef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9efd:	48 89 10             	mov    %rdx,(%rax)
    9f00:	90                   	nop
    9f01:	5d                   	pop    %rbp
    9f02:	c3                   	ret
    9f03:	90                   	nop

0000000000009f04 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    9f04:	55                   	push   %rbp
    9f05:	48 89 e5             	mov    %rsp,%rbp
    9f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f10:	5d                   	pop    %rbp
    9f11:	c3                   	ret

0000000000009f12 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9f12:	55                   	push   %rbp
    9f13:	48 89 e5             	mov    %rsp,%rbp
    9f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f1a:	90                   	nop
    9f1b:	5d                   	pop    %rbp
    9f1c:	c3                   	ret
    9f1d:	90                   	nop

0000000000009f1e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9f1e:	55                   	push   %rbp
    9f1f:	48 89 e5             	mov    %rsp,%rbp
    9f22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f26:	90                   	nop
    9f27:	5d                   	pop    %rbp
    9f28:	c3                   	ret

0000000000009f29 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9f29:	55                   	push   %rbp
    9f2a:	48 89 e5             	mov    %rsp,%rbp
    9f2d:	53                   	push   %rbx
    9f2e:	48 83 ec 28          	sub    $0x28,%rsp
    9f32:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9f36:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9f3a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9f3e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9f42:	48 89 d6             	mov    %rdx,%rsi
    9f45:	48 89 c7             	mov    %rax,%rdi
    9f48:	e8 79 1e 00 00       	call   bdc6 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    9f4d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9f51:	48 89 c7             	mov    %rax,%rdi
    9f54:	e8 2b 1e 00 00       	call   bd84 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    9f59:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9f5d:	0f 92 c3             	setb   %bl
    9f60:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9f64:	48 89 c7             	mov    %rax,%rdi
    9f67:	e8 f2 e0 ff ff       	call   805e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9f6c:	84 db                	test   %bl,%bl
    9f6e:	74 0f                	je     9f7f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9f70:	48 8d 05 71 85 00 00 	lea    0x8571(%rip),%rax        # 124e8 <_ZN6__pstl9execution2v1L5unseqE+0x281>
    9f77:	48 89 c7             	mov    %rax,%rdi
    9f7a:	e8 71 91 ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9f7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9f83:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f87:	c9                   	leave
    9f88:	c3                   	ret
    9f89:	90                   	nop

0000000000009f8a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    9f8a:	55                   	push   %rbp
    9f8b:	48 89 e5             	mov    %rsp,%rbp
    9f8e:	48 83 ec 10          	sub    $0x10,%rsp
    9f92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f9a:	48 89 c7             	mov    %rax,%rdi
    9f9d:	e8 bc e0 ff ff       	call   805e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9fa2:	90                   	nop
    9fa3:	c9                   	leave
    9fa4:	c3                   	ret
    9fa5:	90                   	nop

0000000000009fa6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9fa6:	55                   	push   %rbp
    9fa7:	48 89 e5             	mov    %rsp,%rbp
    9faa:	53                   	push   %rbx
    9fab:	48 83 ec 28          	sub    $0x28,%rsp
    9faf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9fb3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9fb7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9fbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fbf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9fc3:	48 89 d6             	mov    %rdx,%rsi
    9fc6:	48 89 c7             	mov    %rax,%rdi
    9fc9:	e8 1e 1e 00 00       	call   bdec <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9fce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9fd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fd6:	48 89 d6             	mov    %rdx,%rsi
    9fd9:	48 89 c7             	mov    %rax,%rdi
    9fdc:	e8 3d 1e 00 00       	call   be1e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    9fe1:	eb 1a                	jmp    9ffd <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    9fe3:	48 89 c3             	mov    %rax,%rbx
    9fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fea:	48 89 c7             	mov    %rax,%rdi
    9fed:	e8 98 ff ff ff       	call   9f8a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    9ff2:	48 89 d8             	mov    %rbx,%rax
    9ff5:	48 89 c7             	mov    %rax,%rdi
    9ff8:	e8 13 95 ff ff       	call   3510 <_Unwind_Resume@plt>
    9ffd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a001:	c9                   	leave
    a002:	c3                   	ret
    a003:	90                   	nop

000000000000a004 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a004:	55                   	push   %rbp
    a005:	48 89 e5             	mov    %rsp,%rbp
    a008:	48 83 ec 10          	sub    $0x10,%rsp
    a00c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a014:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a01c:	48 8b 00             	mov    (%rax),%rax
    a01f:	48 29 c2             	sub    %rax,%rdx
    a022:	48 c1 fa 03          	sar    $0x3,%rdx
    a026:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    a02d:	aa aa aa 
    a030:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    a034:	48 89 c2             	mov    %rax,%rdx
    a037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a03b:	48 8b 08             	mov    (%rax),%rcx
    a03e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a042:	48 89 ce             	mov    %rcx,%rsi
    a045:	48 89 c7             	mov    %rax,%rdi
    a048:	e8 31 1e 00 00       	call   be7e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    a04d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a051:	48 89 c7             	mov    %rax,%rdi
    a054:	e8 31 ff ff ff       	call   9f8a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    a059:	90                   	nop
    a05a:	c9                   	leave
    a05b:	c3                   	ret

000000000000a05c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    a05c:	55                   	push   %rbp
    a05d:	48 89 e5             	mov    %rsp,%rbp
    a060:	48 83 ec 10          	sub    $0x10,%rsp
    a064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a068:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    a06c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a070:	48 89 c7             	mov    %rax,%rdi
    a073:	e8 24 00 00 00       	call   a09c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    a078:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    a07b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a07f:	48 8b 00             	mov    (%rax),%rax
    a082:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a086:	48 89 ce             	mov    %rcx,%rsi
    a089:	48 89 c7             	mov    %rax,%rdi
    a08c:	e8 22 1e 00 00       	call   beb3 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    a091:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a095:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    a099:	90                   	nop
    a09a:	c9                   	leave
    a09b:	c3                   	ret

000000000000a09c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a09c:	55                   	push   %rbp
    a09d:	48 89 e5             	mov    %rsp,%rbp
    a0a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a0a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a8:	5d                   	pop    %rbp
    a0a9:	c3                   	ret

000000000000a0aa <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a0aa:	55                   	push   %rbp
    a0ab:	48 89 e5             	mov    %rsp,%rbp
    a0ae:	48 83 ec 20          	sub    $0x20,%rsp
    a0b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a0be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0c6:	48 89 d6             	mov    %rdx,%rsi
    a0c9:	48 89 c7             	mov    %rax,%rdi
    a0cc:	e8 0b 1e 00 00       	call   bedc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    a0d1:	90                   	nop
    a0d2:	c9                   	leave
    a0d3:	c3                   	ret

000000000000a0d4 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a0d4:	55                   	push   %rbp
    a0d5:	48 89 e5             	mov    %rsp,%rbp
    a0d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a0e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0e4:	5d                   	pop    %rbp
    a0e5:	c3                   	ret

000000000000a0e6 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    a0e6:	55                   	push   %rbp
    a0e7:	48 89 e5             	mov    %rsp,%rbp
    a0ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    a0f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0f6:	48 8b 10             	mov    (%rax),%rdx
    a0f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0fd:	48 89 10             	mov    %rdx,(%rax)
    a100:	90                   	nop
    a101:	5d                   	pop    %rbp
    a102:	c3                   	ret
    a103:	90                   	nop

000000000000a104 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    a104:	55                   	push   %rbp
    a105:	48 89 e5             	mov    %rsp,%rbp
    a108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    a10c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a110:	5d                   	pop    %rbp
    a111:	c3                   	ret

000000000000a112 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a112:	55                   	push   %rbp
    a113:	48 89 e5             	mov    %rsp,%rbp
    a116:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a11a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a11e:	5d                   	pop    %rbp
    a11f:	c3                   	ret

000000000000a120 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a120:	55                   	push   %rbp
    a121:	48 89 e5             	mov    %rsp,%rbp
    a124:	53                   	push   %rbx
    a125:	48 83 ec 18          	sub    $0x18,%rsp
    a129:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a12d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    a131:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a135:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a139:	48 89 c7             	mov    %rax,%rdi
    a13c:	e8 d1 ff ff ff       	call   a112 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    a141:	48 89 c6             	mov    %rax,%rsi
    a144:	48 89 df             	mov    %rbx,%rdi
    a147:	e8 b6 1d 00 00       	call   bf02 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>
	}
    a14c:	90                   	nop
    a14d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a151:	c9                   	leave
    a152:	c3                   	ret
    a153:	90                   	nop

000000000000a154 <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>:
    a154:	55                   	push   %rbp
    a155:	48 89 e5             	mov    %rsp,%rbp
    a158:	48 83 ec 10          	sub    $0x10,%rsp
    a15c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a164:	48 89 c7             	mov    %rax,%rdi
    a167:	e8 dc 1d 00 00       	call   bf48 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>
    a16c:	90                   	nop
    a16d:	c9                   	leave
    a16e:	c3                   	ret
    a16f:	90                   	nop

000000000000a170 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a170:	55                   	push   %rbp
    a171:	48 89 e5             	mov    %rsp,%rbp
    a174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a17c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a187:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a18e:	00 
    a18f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a193:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a19a:	00 
	{ }
    a19b:	90                   	nop
    a19c:	5d                   	pop    %rbp
    a19d:	c3                   	ret

000000000000a19e <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>:
    a19e:	55                   	push   %rbp
    a19f:	48 89 e5             	mov    %rsp,%rbp
    a1a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1a6:	90                   	nop
    a1a7:	5d                   	pop    %rbp
    a1a8:	c3                   	ret
    a1a9:	90                   	nop

000000000000a1aa <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    a1aa:	55                   	push   %rbp
    a1ab:	48 89 e5             	mov    %rsp,%rbp
    a1ae:	48 83 ec 20          	sub    $0x20,%rsp
    a1b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    a1be:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a1c3:	74 17                	je     a1dc <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    a1c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a1cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a1d1:	48 89 ce             	mov    %rcx,%rsi
    a1d4:	48 89 c7             	mov    %rax,%rdi
    a1d7:	e8 77 1d 00 00       	call   bf53 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>
      }
    a1dc:	90                   	nop
    a1dd:	c9                   	leave
    a1de:	c3                   	ret
    a1df:	90                   	nop

000000000000a1e0 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    a1e0:	55                   	push   %rbp
    a1e1:	48 89 e5             	mov    %rsp,%rbp
    a1e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    a1e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ec:	5d                   	pop    %rbp
    a1ed:	c3                   	ret

000000000000a1ee <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    a1ee:	55                   	push   %rbp
    a1ef:	48 89 e5             	mov    %rsp,%rbp
    a1f2:	48 83 ec 20          	sub    $0x20,%rsp
    a1f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    a202:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a20a:	48 89 d6             	mov    %rdx,%rsi
    a20d:	48 89 c7             	mov    %rax,%rdi
    a210:	e8 6c 1d 00 00       	call   bf81 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>
    }
    a215:	90                   	nop
    a216:	c9                   	leave
    a217:	c3                   	ret

000000000000a218 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() noexcept
    a218:	55                   	push   %rbp
    a219:	48 89 e5             	mov    %rsp,%rbp
    a21c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a224:	5d                   	pop    %rbp
    a225:	c3                   	ret

000000000000a226 <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a226:	55                   	push   %rbp
    a227:	48 89 e5             	mov    %rsp,%rbp
    a22a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a22e:	90                   	nop
    a22f:	5d                   	pop    %rbp
    a230:	c3                   	ret
    a231:	90                   	nop

000000000000a232 <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a232:	55                   	push   %rbp
    a233:	48 89 e5             	mov    %rsp,%rbp
    a236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a23a:	90                   	nop
    a23b:	5d                   	pop    %rbp
    a23c:	c3                   	ret
    a23d:	90                   	nop

000000000000a23e <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    a23e:	55                   	push   %rbp
    a23f:	48 89 e5             	mov    %rsp,%rbp
    a242:	48 83 ec 10          	sub    $0x10,%rsp
    a246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a24a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    a24e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a256:	48 89 d6             	mov    %rdx,%rsi
    a259:	48 89 c7             	mov    %rax,%rdi
    a25c:	e8 47 1d 00 00       	call   bfa8 <_ZNSt15__new_allocatorIjEC1ERKS0_>
    a261:	90                   	nop
    a262:	c9                   	leave
    a263:	c3                   	ret

000000000000a264 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>:
      _Rb_tree(const _Compare& __comp,
    a264:	55                   	push   %rbp
    a265:	48 89 e5             	mov    %rsp,%rbp
    a268:	53                   	push   %rbx
    a269:	48 83 ec 38          	sub    $0x38,%rsp
    a26d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a271:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a275:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_impl(__comp, _Node_allocator(__a)) { }
    a279:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    a27d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a281:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a285:	48 89 d6             	mov    %rdx,%rsi
    a288:	48 89 c7             	mov    %rax,%rdi
    a28b:	e8 28 1d 00 00       	call   bfb8 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>
    a290:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    a294:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a298:	48 89 c6             	mov    %rax,%rsi
    a29b:	48 89 df             	mov    %rbx,%rdi
    a29e:	e8 35 1d 00 00       	call   bfd8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>
    a2a3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a2a7:	48 89 c7             	mov    %rax,%rdi
    a2aa:	e8 e3 00 00 00       	call   a392 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    a2af:	eb 1a                	jmp    a2cb <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_+0x67>
    a2b1:	48 89 c3             	mov    %rax,%rbx
    a2b4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a2b8:	48 89 c7             	mov    %rax,%rdi
    a2bb:	e8 d2 00 00 00       	call   a392 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    a2c0:	48 89 d8             	mov    %rbx,%rax
    a2c3:	48 89 c7             	mov    %rax,%rdi
    a2c6:	e8 45 92 ff ff       	call   3510 <_Unwind_Resume@plt>
    a2cb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a2cf:	c9                   	leave
    a2d0:	c3                   	ret
    a2d1:	90                   	nop

000000000000a2d2 <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
    a2d2:	55                   	push   %rbp
    a2d3:	48 89 e5             	mov    %rsp,%rbp
    a2d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2de:	48 8b 00             	mov    (%rax),%rax
    a2e1:	5d                   	pop    %rbp
    a2e2:	c3                   	ret
    a2e3:	90                   	nop

000000000000a2e4 <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
    a2e4:	55                   	push   %rbp
    a2e5:	48 89 e5             	mov    %rsp,%rbp
    a2e8:	53                   	push   %rbx
    a2e9:	48 83 ec 18          	sub    $0x18,%rsp
    a2ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a2f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2f5:	48 89 c7             	mov    %rax,%rdi
    a2f8:	e8 d5 ff ff ff       	call   a2d2 <_ZNKSt16initializer_listIjE5beginEv>
    a2fd:	48 89 c3             	mov    %rax,%rbx
    a300:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a304:	48 89 c7             	mov    %rax,%rdi
    a307:	e8 24 1d 00 00       	call   c030 <_ZNKSt16initializer_listIjE4sizeEv>
    a30c:	48 c1 e0 02          	shl    $0x2,%rax
    a310:	48 01 d8             	add    %rbx,%rax
    a313:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a317:	c9                   	leave
    a318:	c3                   	ret
    a319:	90                   	nop

000000000000a31a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    a31a:	55                   	push   %rbp
    a31b:	48 89 e5             	mov    %rsp,%rbp
    a31e:	48 83 ec 40          	sub    $0x40,%rsp
    a322:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a326:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a32a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Alloc_node __an(*this);
    a32e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a332:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    a336:	48 89 d6             	mov    %rdx,%rsi
    a339:	48 89 c7             	mov    %rax,%rdi
    a33c:	e8 01 1d 00 00       	call   c042 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>
	  for (; __first != __last; ++__first)
    a341:	eb 40                	jmp    a383 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x69>
	    _M_insert_unique_(end(), *__first, __an);
    a343:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a347:	48 89 c7             	mov    %rax,%rdi
    a34a:	e8 0d 1d 00 00       	call   c05c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    a34f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a353:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    a357:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    a35b:	48 89 d6             	mov    %rdx,%rsi
    a35e:	48 89 c7             	mov    %rax,%rdi
    a361:	e8 20 1d 00 00       	call   c086 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>
    a366:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    a36a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a36e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    a372:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a376:	48 89 c7             	mov    %rax,%rdi
    a379:	e8 26 1d 00 00       	call   c0a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>
	  for (; __first != __last; ++__first)
    a37e:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
    a383:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a387:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    a38b:	75 b6                	jne    a343 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x29>
	}
    a38d:	90                   	nop
    a38e:	90                   	nop
    a38f:	c9                   	leave
    a390:	c3                   	ret
    a391:	90                   	nop

000000000000a392 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a392:	55                   	push   %rbp
    a393:	48 89 e5             	mov    %rsp,%rbp
    a396:	48 83 ec 10          	sub    $0x10,%rsp
    a39a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a39e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3a2:	48 89 c7             	mov    %rax,%rdi
    a3a5:	e8 92 1d 00 00       	call   c13c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>
    a3aa:	90                   	nop
    a3ab:	c9                   	leave
    a3ac:	c3                   	ret
    a3ad:	90                   	nop

000000000000a3ae <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    a3ae:	55                   	push   %rbp
    a3af:	48 89 e5             	mov    %rsp,%rbp
    a3b2:	48 83 ec 20          	sub    $0x20,%rsp
    a3b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a3ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    a3be:	eb 49                	jmp    a409 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x5b>
	  _M_erase(_S_right(__x));
    a3c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3c4:	48 89 c7             	mov    %rax,%rdi
    a3c7:	e8 7b 1d 00 00       	call   c147 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    a3cc:	48 89 c2             	mov    %rax,%rdx
    a3cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3d3:	48 89 d6             	mov    %rdx,%rsi
    a3d6:	48 89 c7             	mov    %rax,%rdi
    a3d9:	e8 d0 ff ff ff       	call   a3ae <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
	  _Link_type __y = _S_left(__x);
    a3de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a3e2:	48 89 c7             	mov    %rax,%rdi
    a3e5:	e8 6f 1d 00 00       	call   c159 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
    a3ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    a3ee:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a3f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3f6:	48 89 d6             	mov    %rdx,%rsi
    a3f9:	48 89 c7             	mov    %rax,%rdi
    a3fc:	e8 6b 1d 00 00       	call   c16c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>
	  __x = __y;
    a401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a405:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    a409:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    a40e:	75 b0                	jne    a3c0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x12>
    }
    a410:	90                   	nop
    a411:	90                   	nop
    a412:	c9                   	leave
    a413:	c3                   	ret

000000000000a414 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    a414:	55                   	push   %rbp
    a415:	48 89 e5             	mov    %rsp,%rbp
    a418:	48 83 ec 10          	sub    $0x10,%rsp
    a41c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    a420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a424:	48 89 c7             	mov    %rax,%rdi
    a427:	e8 7a 1d 00 00       	call   c1a6 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>
    a42c:	c9                   	leave
    a42d:	c3                   	ret

000000000000a42e <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    a42e:	55                   	push   %rbp
    a42f:	48 89 e5             	mov    %rsp,%rbp
    a432:	48 83 ec 20          	sub    $0x20,%rsp
    a436:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_header._M_left); }
    a43a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a43e:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a442:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a446:	48 89 d6             	mov    %rdx,%rsi
    a449:	48 89 c7             	mov    %rax,%rdi
    a44c:	e8 67 1d 00 00       	call   c1b8 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    a451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a455:	c9                   	leave
    a456:	c3                   	ret
    a457:	90                   	nop

000000000000a458 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    a458:	55                   	push   %rbp
    a459:	48 89 e5             	mov    %rsp,%rbp
    a45c:	48 83 ec 20          	sub    $0x20,%rsp
    a460:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(&this->_M_impl._M_header); }
    a464:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a468:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a46c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a470:	48 89 d6             	mov    %rdx,%rsi
    a473:	48 89 c7             	mov    %rax,%rdi
    a476:	e8 3d 1d 00 00       	call   c1b8 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    a47b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a47f:	c9                   	leave
    a480:	c3                   	ret
    a481:	90                   	nop

000000000000a482 <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr() const
    a482:	55                   	push   %rbp
    a483:	48 89 e5             	mov    %rsp,%rbp
    a486:	48 83 ec 10          	sub    $0x10,%rsp
    a48a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    a48e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a492:	48 83 c0 20          	add    $0x20,%rax
    a496:	48 89 c7             	mov    %rax,%rdi
    a499:	e8 34 1d 00 00       	call   c1d2 <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
    a49e:	c9                   	leave
    a49f:	c3                   	ret

000000000000a4a0 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a4a0:	55                   	push   %rbp
    a4a1:	48 89 e5             	mov    %rsp,%rbp
    a4a4:	48 83 ec 20          	sub    $0x20,%rsp
    a4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a4b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4b8:	48 89 c7             	mov    %rax,%rdi
    a4bb:	e8 2c 1d 00 00       	call   c1ec <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    a4c0:	48 89 c2             	mov    %rax,%rdx
    a4c3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a4c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4cb:	48 89 ce             	mov    %rcx,%rsi
    a4ce:	48 89 c7             	mov    %rax,%rdi
    a4d1:	e8 24 1d 00 00       	call   c1fa <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>
	}
    a4d6:	90                   	nop
    a4d7:	c9                   	leave
    a4d8:	c3                   	ret
    a4d9:	90                   	nop

000000000000a4da <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    a4da:	55                   	push   %rbp
    a4db:	48 89 e5             	mov    %rsp,%rbp
    a4de:	48 83 ec 20          	sub    $0x20,%rsp
    a4e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    a4e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a4ea:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a4ee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a4f2:	48 89 d6             	mov    %rdx,%rsi
    a4f5:	48 89 c7             	mov    %rax,%rdi
    a4f8:	e8 5f 1d 00 00       	call   c25c <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    a4fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a501:	c9                   	leave
    a502:	c3                   	ret
    a503:	90                   	nop

000000000000a504 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
    a504:	55                   	push   %rbp
    a505:	48 89 e5             	mov    %rsp,%rbp
    a508:	53                   	push   %rbx
    a509:	48 83 ec 68          	sub    $0x68,%rsp
    a50d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    a511:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    a515:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    a519:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a51d:	48 8d 15 0f 80 00 00 	lea    0x800f(%rip),%rdx        # 12533 <_ZN6__pstl9execution2v1L5unseqE+0x2cc>
    a524:	be 01 00 00 00       	mov    $0x1,%esi
    a529:	48 89 c7             	mov    %rax,%rdi
    a52c:	e8 49 1d 00 00       	call   c27a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>
    a531:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    a535:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a539:	48 8b 00             	mov    (%rax),%rax
    a53c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    a540:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a544:	48 8b 40 08          	mov    0x8(%rax),%rax
    a548:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    a54c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a550:	48 89 c7             	mov    %rax,%rdi
    a553:	e8 ea 1d 00 00       	call   c342 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>
    a558:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    a55c:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    a560:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a564:	48 89 d6             	mov    %rdx,%rsi
    a567:	48 89 c7             	mov    %rax,%rdi
    a56a:	e8 f8 1d 00 00       	call   c367 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
    a56f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    a573:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a577:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a57b:	48 89 d6             	mov    %rdx,%rsi
    a57e:	48 89 c7             	mov    %rax,%rdi
    a581:	e8 2e 1e 00 00       	call   c3b4 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>
    a586:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    a58a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a58e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    a592:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a596:	48 89 c7             	mov    %rax,%rdi
    a599:	e8 4e 1c 00 00       	call   c1ec <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    a59e:	48 89 c6             	mov    %rax,%rsi
				   __new_start + __elems_before,
    a5a1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a5a5:	48 89 d0             	mov    %rdx,%rax
    a5a8:	48 c1 e0 02          	shl    $0x2,%rax
    a5ac:	48 01 d0             	add    %rdx,%rax
    a5af:	48 c1 e0 03          	shl    $0x3,%rax
    a5b3:	48 89 c2             	mov    %rax,%rdx
	  _Alloc_traits::construct(this->_M_impl,
    a5b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a5ba:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a5be:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a5c2:	48 89 f2             	mov    %rsi,%rdx
    a5c5:	48 89 ce             	mov    %rcx,%rsi
    a5c8:	48 89 c7             	mov    %rax,%rdi
    a5cb:	e8 d0 fe ff ff       	call   a4a0 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
    a5d0:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    a5d7:	00 
					 __new_start, _M_get_Tp_allocator());
    a5d8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a5dc:	48 89 c7             	mov    %rax,%rdi
    a5df:	e8 fc fb ff ff       	call   a1e0 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    a5e4:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    a5e7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a5eb:	48 89 c7             	mov    %rax,%rdi
    a5ee:	e8 27 1e 00 00       	call   c41a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    a5f3:	48 8b 30             	mov    (%rax),%rsi
    a5f6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a5fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a5fe:	48 89 d9             	mov    %rbx,%rcx
    a601:	48 89 c7             	mov    %rax,%rdi
    a604:	e8 de 1d 00 00       	call   c3e7 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    a609:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    a60d:	48 83 45 c0 28       	addq   $0x28,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    a612:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a616:	48 89 c7             	mov    %rax,%rdi
    a619:	e8 c2 fb ff ff       	call   a1e0 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    a61e:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    a621:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    a625:	48 89 c7             	mov    %rax,%rdi
    a628:	e8 ed 1d 00 00       	call   c41a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    a62d:	48 8b 00             	mov    (%rax),%rax
    a630:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    a634:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    a638:	48 89 d9             	mov    %rbx,%rcx
    a63b:	48 89 c7             	mov    %rax,%rdi
    a63e:	e8 a4 1d 00 00       	call   c3e7 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    a643:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    a647:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    a64b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    a64f:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    a653:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    a657:	48 89 d1             	mov    %rdx,%rcx
    a65a:	48 c1 f9 03          	sar    $0x3,%rcx
    a65e:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
    a665:	cc cc cc 
    a668:	48 0f af d1          	imul   %rcx,%rdx
      _M_deallocate(__old_start,
    a66c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    a670:	48 89 ce             	mov    %rcx,%rsi
    a673:	48 89 c7             	mov    %rax,%rdi
    a676:	e8 2f fb ff ff       	call   a1aa <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      this->_M_impl._M_start = __new_start;
    a67b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a67f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a683:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    a686:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a68a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    a68e:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    a692:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a696:	48 89 d0             	mov    %rdx,%rax
    a699:	48 c1 e0 02          	shl    $0x2,%rax
    a69d:	48 01 d0             	add    %rdx,%rax
    a6a0:	48 c1 e0 03          	shl    $0x3,%rax
    a6a4:	48 89 c2             	mov    %rax,%rdx
    a6a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a6ab:	48 01 c2             	add    %rax,%rdx
    a6ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a6b2:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    a6b6:	90                   	nop
    a6b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a6bb:	c9                   	leave
    a6bc:	c3                   	ret
    a6bd:	90                   	nop

000000000000a6be <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    a6be:	55                   	push   %rbp
    a6bf:	48 89 e5             	mov    %rsp,%rbp
    a6c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    a6ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a6ce:	5d                   	pop    %rbp
    a6cf:	c3                   	ret

000000000000a6d0 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    a6d0:	55                   	push   %rbp
    a6d1:	48 89 e5             	mov    %rsp,%rbp
    a6d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    a6dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a6e0:	48 8b 10             	mov    (%rax),%rdx
    a6e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6e7:	48 89 10             	mov    %rdx,(%rax)
    a6ea:	90                   	nop
    a6eb:	5d                   	pop    %rbp
    a6ec:	c3                   	ret
    a6ed:	90                   	nop

000000000000a6ee <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    a6ee:	55                   	push   %rbp
    a6ef:	48 89 e5             	mov    %rsp,%rbp
    a6f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    a6f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6fa:	5d                   	pop    %rbp
    a6fb:	c3                   	ret

000000000000a6fc <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    a6fc:	55                   	push   %rbp
    a6fd:	48 89 e5             	mov    %rsp,%rbp
    a700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a704:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    a708:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a70c:	48 8b 10             	mov    (%rax),%rdx
    a70f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a713:	48 89 10             	mov    %rdx,(%rax)
    a716:	90                   	nop
    a717:	5d                   	pop    %rbp
    a718:	c3                   	ret
    a719:	90                   	nop

000000000000a71a <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    a71a:	55                   	push   %rbp
    a71b:	48 89 e5             	mov    %rsp,%rbp
    a71e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    a722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a726:	5d                   	pop    %rbp
    a727:	c3                   	ret

000000000000a728 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    a728:	55                   	push   %rbp
    a729:	48 89 e5             	mov    %rsp,%rbp
    a72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    a734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a738:	8b 10                	mov    (%rax),%edx
    a73a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a73e:	8b 00                	mov    (%rax),%eax
    a740:	39 c2                	cmp    %eax,%edx
    a742:	73 06                	jae    a74a <_ZSt3maxIjERKT_S2_S2_+0x22>
	return __b;
    a744:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a748:	eb 04                	jmp    a74e <_ZSt3maxIjERKT_S2_S2_+0x26>
      return __a;
    a74a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    a74e:	5d                   	pop    %rbp
    a74f:	c3                   	ret

000000000000a750 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    a750:	55                   	push   %rbp
    a751:	48 89 e5             	mov    %rsp,%rbp
    a754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    a75c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a760:	8b 10                	mov    (%rax),%edx
    a762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a766:	8b 00                	mov    (%rax),%eax
    a768:	39 c2                	cmp    %eax,%edx
    a76a:	73 06                	jae    a772 <_ZSt3minIjERKT_S2_S2_+0x22>
	return __b;
    a76c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a770:	eb 04                	jmp    a776 <_ZSt3minIjERKT_S2_S2_+0x26>
      return __a;
    a772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    a776:	5d                   	pop    %rbp
    a777:	c3                   	ret

000000000000a778 <_ZNKSt8optionalIjEcvbEv>:
      constexpr explicit operator bool() const noexcept
    a778:	55                   	push   %rbp
    a779:	48 89 e5             	mov    %rsp,%rbp
    a77c:	48 83 ec 10          	sub    $0x10,%rsp
    a780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    a784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a788:	48 89 c7             	mov    %rax,%rdi
    a78b:	e8 4a ca ff ff       	call   71da <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    a790:	c9                   	leave
    a791:	c3                   	ret

000000000000a792 <_ZNKRSt8optionalIjEdeEv>:
      operator*() const& noexcept
    a792:	55                   	push   %rbp
    a793:	48 89 e5             	mov    %rsp,%rbp
    a796:	48 83 ec 10          	sub    $0x10,%rsp
    a79a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_get(); }
    a79e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7a2:	48 89 c7             	mov    %rax,%rdi
    a7a5:	e8 7e 1c 00 00       	call   c428 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    a7aa:	c9                   	leave
    a7ab:	c3                   	ret

000000000000a7ac <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    a7ac:	55                   	push   %rbp
    a7ad:	48 89 e5             	mov    %rsp,%rbp
    a7b0:	53                   	push   %rbx
    a7b1:	48 83 ec 38          	sub    $0x38,%rsp
    a7b5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    a7b9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    a7bd:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    a7c2:	0f 84 e7 01 00 00    	je     a9af <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    a7c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a7cc:	48 89 c7             	mov    %rax,%rdi
    a7cf:	e8 a4 e1 ff ff       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    a7d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    a7d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a7dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    a7e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a7e4:	48 8b 40 08          	mov    0x8(%rax),%rax
    a7e8:	48 29 c2             	sub    %rax,%rdx
    a7eb:	48 89 d0             	mov    %rdx,%rax
    a7ee:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    a7f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    a7f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a7fa:	48 89 c7             	mov    %rax,%rdi
    a7fd:	e8 6a 1c 00 00       	call   c46c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    a802:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    a806:	72 16                	jb     a81e <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x72>
    a808:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a80c:	48 89 c7             	mov    %rax,%rdi
    a80f:	e8 58 1c 00 00       	call   c46c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    a814:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    a818:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    a81c:	73 07                	jae    a825 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x79>
    a81e:	b8 01 00 00 00       	mov    $0x1,%eax
    a823:	eb 05                	jmp    a82a <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x7e>
    a825:	b8 00 00 00 00       	mov    $0x0,%eax
    a82a:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    a82c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a830:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    a834:	72 33                	jb     a869 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    a836:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a83a:	48 89 c7             	mov    %rax,%rdi
    a83d:	e8 9c 97 ff ff       	call   3fde <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a842:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    a845:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a849:	48 8b 40 08          	mov    0x8(%rax),%rax
    a84d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    a851:	48 89 ce             	mov    %rcx,%rsi
    a854:	48 89 c7             	mov    %rax,%rdi
    a857:	e8 32 1c 00 00       	call   c48e <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    a85c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a860:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    a864:	e9 46 01 00 00       	jmp    a9af <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    a869:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    a86d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a871:	48 8d 15 a1 7c 00 00 	lea    0x7ca1(%rip),%rdx        # 12519 <_ZN6__pstl9execution2v1L5unseqE+0x2b2>
    a878:	48 89 ce             	mov    %rcx,%rsi
    a87b:	48 89 c7             	mov    %rax,%rdi
    a87e:	e8 35 1c 00 00       	call   c4b8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>
    a883:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    a887:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a88b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a88f:	48 89 d6             	mov    %rdx,%rsi
    a892:	48 89 c7             	mov    %rax,%rdi
    a895:	e8 e6 1c 00 00       	call   c580 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a89a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    a89e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8a2:	48 89 c7             	mov    %rax,%rdi
    a8a5:	e8 34 97 ff ff       	call   3fde <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a8aa:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    a8ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8b1:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    a8b8:	00 
    a8b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a8bd:	48 01 c1             	add    %rax,%rcx
    a8c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a8c4:	48 89 c6             	mov    %rax,%rsi
    a8c7:	48 89 cf             	mov    %rcx,%rdi
    a8ca:	e8 bf 1b 00 00       	call   c48e <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    a8cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8d3:	48 89 c7             	mov    %rax,%rdi
    a8d6:	e8 03 97 ff ff       	call   3fde <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a8db:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    a8de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8e2:	48 8b 70 08          	mov    0x8(%rax),%rsi
    a8e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a8ea:	48 8b 00             	mov    (%rax),%rax
    a8ed:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a8f1:	48 89 c7             	mov    %rax,%rdi
    a8f4:	e8 ba 1c 00 00       	call   c5b3 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    a8f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    a8fd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a901:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    a905:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a909:	48 8b 12             	mov    (%rdx),%rdx
    a90c:	48 29 d1             	sub    %rdx,%rcx
    a90f:	48 c1 f9 03          	sar    $0x3,%rcx
    a913:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    a916:	48 89 d6             	mov    %rdx,%rsi
    a919:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a91d:	48 8b 0a             	mov    (%rdx),%rcx
    a920:	48 89 f2             	mov    %rsi,%rdx
    a923:	48 89 ce             	mov    %rcx,%rsi
    a926:	48 89 c7             	mov    %rax,%rdi
    a929:	e8 7a 96 ff ff       	call   3fa8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    a92e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a932:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a936:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    a939:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a93d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a941:	48 01 d0             	add    %rdx,%rax
    a944:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a94b:	00 
    a94c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a950:	48 01 c2             	add    %rax,%rdx
    a953:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a957:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    a95b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a95f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a966:	00 
    a967:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a96b:	48 01 c2             	add    %rax,%rdx
    a96e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a972:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    a976:	eb 37                	jmp    a9af <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    a978:	48 89 c7             	mov    %rax,%rdi
    a97b:	e8 40 87 ff ff       	call   30c0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    a980:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a984:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a988:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    a98c:	48 89 ce             	mov    %rcx,%rsi
    a98f:	48 89 c7             	mov    %rax,%rdi
    a992:	e8 11 96 ff ff       	call   3fa8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    a997:	e8 a4 8a ff ff       	call   3440 <__cxa_rethrow@plt>
		  __catch(...)
    a99c:	48 89 c3             	mov    %rax,%rbx
    a99f:	e8 2c 8b ff ff       	call   34d0 <__cxa_end_catch@plt>
    a9a4:	48 89 d8             	mov    %rbx,%rax
    a9a7:	48 89 c7             	mov    %rax,%rdi
    a9aa:	e8 61 8b ff ff       	call   3510 <_Unwind_Resume@plt>
    }
    a9af:	90                   	nop
    a9b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a9b4:	c9                   	leave
    a9b5:	c3                   	ret

000000000000a9b6 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    a9b6:	55                   	push   %rbp
    a9b7:	48 89 e5             	mov    %rsp,%rbp
    a9ba:	48 83 ec 20          	sub    $0x20,%rsp
    a9be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a9c2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    a9c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9ca:	48 8b 40 08          	mov    0x8(%rax),%rax
    a9ce:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    a9d2:	48 c1 f8 03          	sar    $0x3,%rax
    a9d6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a9da:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    a9df:	74 32                	je     aa13 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    a9e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9e5:	48 89 c7             	mov    %rax,%rdi
    a9e8:	e8 f1 95 ff ff       	call   3fde <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    a9ed:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    a9f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9f4:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a9f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a9fc:	48 89 ce             	mov    %rcx,%rsi
    a9ff:	48 89 c7             	mov    %rax,%rdi
    aa02:	e8 e5 95 ff ff       	call   3fec <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    aa07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa0b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa0f:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    aa13:	90                   	nop
    aa14:	c9                   	leave
    aa15:	c3                   	ret

000000000000aa16 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    aa16:	55                   	push   %rbp
    aa17:	48 89 e5             	mov    %rsp,%rbp
    aa1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    aa22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa26:	5d                   	pop    %rbp
    aa27:	c3                   	ret

000000000000aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    aa28:	55                   	push   %rbp
    aa29:	48 89 e5             	mov    %rsp,%rbp
    aa2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    aa30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa34:	48 8b 50 08          	mov    0x8(%rax),%rdx
    aa38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa3c:	48 8b 00             	mov    (%rax),%rax
    aa3f:	48 29 c2             	sub    %rax,%rdx
    aa42:	48 89 d0             	mov    %rdx,%rax
    aa45:	48 c1 f8 03          	sar    $0x3,%rax
    aa49:	5d                   	pop    %rbp
    aa4a:	c3                   	ret
    aa4b:	90                   	nop

000000000000aa4c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    aa4c:	55                   	push   %rbp
    aa4d:	48 89 e5             	mov    %rsp,%rbp
    aa50:	53                   	push   %rbx
    aa51:	48 83 ec 38          	sub    $0x38,%rsp
    aa55:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    aa59:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    aa5d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    aa62:	0f 84 e7 01 00 00    	je     ac4f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    aa68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aa6c:	48 89 c7             	mov    %rax,%rdi
    aa6f:	e8 b4 ff ff ff       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    aa74:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    aa78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aa7c:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    aa80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aa84:	48 8b 40 08          	mov    0x8(%rax),%rax
    aa88:	48 29 c2             	sub    %rax,%rdx
    aa8b:	48 89 d0             	mov    %rdx,%rax
    aa8e:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    aa92:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    aa96:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aa9a:	48 89 c7             	mov    %rax,%rdi
    aa9d:	e8 44 1b 00 00       	call   c5e6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    aaa2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    aaa6:	72 16                	jb     aabe <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
    aaa8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aaac:	48 89 c7             	mov    %rax,%rdi
    aaaf:	e8 32 1b 00 00       	call   c5e6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    aab4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    aab8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    aabc:	73 07                	jae    aac5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
    aabe:	b8 01 00 00 00       	mov    $0x1,%eax
    aac3:	eb 05                	jmp    aaca <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
    aac5:	b8 00 00 00 00       	mov    $0x0,%eax
    aaca:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    aacc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aad0:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    aad4:	72 33                	jb     ab09 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    aad6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aada:	48 89 c7             	mov    %rax,%rdi
    aadd:	e8 c0 95 ff ff       	call   40a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    aae2:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    aae5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    aae9:	48 8b 40 08          	mov    0x8(%rax),%rax
    aaed:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    aaf1:	48 89 ce             	mov    %rcx,%rsi
    aaf4:	48 89 c7             	mov    %rax,%rdi
    aaf7:	e8 0c 1b 00 00       	call   c608 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    aafc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ab00:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    ab04:	e9 46 01 00 00       	jmp    ac4f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    ab09:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    ab0d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ab11:	48 8d 15 01 7a 00 00 	lea    0x7a01(%rip),%rdx        # 12519 <_ZN6__pstl9execution2v1L5unseqE+0x2b2>
    ab18:	48 89 ce             	mov    %rcx,%rsi
    ab1b:	48 89 c7             	mov    %rax,%rdi
    ab1e:	e8 0f 1b 00 00       	call   c632 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
    ab23:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    ab27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ab2b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ab2f:	48 89 d6             	mov    %rdx,%rsi
    ab32:	48 89 c7             	mov    %rax,%rdi
    ab35:	e8 c0 1b 00 00       	call   c6fa <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
    ab3a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    ab3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ab42:	48 89 c7             	mov    %rax,%rdi
    ab45:	e8 58 95 ff ff       	call   40a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ab4a:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    ab4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab51:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    ab58:	00 
    ab59:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ab5d:	48 01 c1             	add    %rax,%rcx
    ab60:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ab64:	48 89 c6             	mov    %rax,%rsi
    ab67:	48 89 cf             	mov    %rcx,%rdi
    ab6a:	e8 99 1a 00 00       	call   c608 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    ab6f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ab73:	48 89 c7             	mov    %rax,%rdi
    ab76:	e8 27 95 ff ff       	call   40a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ab7b:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    ab7e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ab82:	48 8b 70 08          	mov    0x8(%rax),%rsi
    ab86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ab8a:	48 8b 00             	mov    (%rax),%rax
    ab8d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ab91:	48 89 c7             	mov    %rax,%rdi
    ab94:	e8 94 1b 00 00       	call   c72d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    ab99:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    ab9d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    aba1:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    aba5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    aba9:	48 8b 12             	mov    (%rdx),%rdx
    abac:	48 29 d1             	sub    %rdx,%rcx
    abaf:	48 c1 f9 03          	sar    $0x3,%rcx
    abb3:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    abb6:	48 89 d6             	mov    %rdx,%rsi
    abb9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    abbd:	48 8b 0a             	mov    (%rdx),%rcx
    abc0:	48 89 f2             	mov    %rsi,%rdx
    abc3:	48 89 ce             	mov    %rcx,%rsi
    abc6:	48 89 c7             	mov    %rax,%rdi
    abc9:	e8 9e 94 ff ff       	call   406c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    abce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    abd2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    abd6:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    abd9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abdd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    abe1:	48 01 d0             	add    %rdx,%rax
    abe4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    abeb:	00 
    abec:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    abf0:	48 01 c2             	add    %rax,%rdx
    abf3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    abf7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    abfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    abff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ac06:	00 
    ac07:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ac0b:	48 01 c2             	add    %rax,%rdx
    ac0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ac12:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    ac16:	eb 37                	jmp    ac4f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    ac18:	48 89 c7             	mov    %rax,%rdi
    ac1b:	e8 a0 84 ff ff       	call   30c0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    ac20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ac24:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ac28:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    ac2c:	48 89 ce             	mov    %rcx,%rsi
    ac2f:	48 89 c7             	mov    %rax,%rdi
    ac32:	e8 35 94 ff ff       	call   406c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    ac37:	e8 04 88 ff ff       	call   3440 <__cxa_rethrow@plt>
		  __catch(...)
    ac3c:	48 89 c3             	mov    %rax,%rbx
    ac3f:	e8 8c 88 ff ff       	call   34d0 <__cxa_end_catch@plt>
    ac44:	48 89 d8             	mov    %rbx,%rax
    ac47:	48 89 c7             	mov    %rax,%rdi
    ac4a:	e8 c1 88 ff ff       	call   3510 <_Unwind_Resume@plt>
    }
    ac4f:	90                   	nop
    ac50:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac54:	c9                   	leave
    ac55:	c3                   	ret

000000000000ac56 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    ac56:	55                   	push   %rbp
    ac57:	48 89 e5             	mov    %rsp,%rbp
    ac5a:	48 83 ec 20          	sub    $0x20,%rsp
    ac5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac62:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    ac66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac6a:	48 8b 40 08          	mov    0x8(%rax),%rax
    ac6e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    ac72:	48 c1 f8 03          	sar    $0x3,%rax
    ac76:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ac7a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ac7f:	74 32                	je     acb3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    ac81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac85:	48 89 c7             	mov    %rax,%rdi
    ac88:	e8 15 94 ff ff       	call   40a2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ac8d:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    ac90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac94:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ac98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac9c:	48 89 ce             	mov    %rcx,%rsi
    ac9f:	48 89 c7             	mov    %rax,%rdi
    aca2:	e8 09 94 ff ff       	call   40b0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    aca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acab:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    acaf:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    acb3:	90                   	nop
    acb4:	c9                   	leave
    acb5:	c3                   	ret

000000000000acb6 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    acb6:	55                   	push   %rbp
    acb7:	48 89 e5             	mov    %rsp,%rbp
    acba:	53                   	push   %rbx
    acbb:	48 83 ec 28          	sub    $0x28,%rsp
    acbf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    acc3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    acc7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    accb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    accf:	48 89 d6             	mov    %rdx,%rsi
    acd2:	48 89 c7             	mov    %rax,%rdi
    acd5:	e8 46 84 ff ff       	call   3120 <_ZNSaIcEC1ERKS_@plt>
    acda:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    acde:	48 89 c7             	mov    %rax,%rdi
    ace1:	e8 79 1a 00 00       	call   c75f <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    ace6:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    acea:	0f 92 c3             	setb   %bl
    aced:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    acf1:	48 89 c7             	mov    %rax,%rdi
    acf4:	e8 17 86 ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
    acf9:	84 db                	test   %bl,%bl
    acfb:	74 0f                	je     ad0c <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    acfd:	48 8d 05 e4 77 00 00 	lea    0x77e4(%rip),%rax        # 124e8 <_ZN6__pstl9execution2v1L5unseqE+0x281>
    ad04:	48 89 c7             	mov    %rax,%rdi
    ad07:	e8 e4 83 ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    ad0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ad10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad14:	c9                   	leave
    ad15:	c3                   	ret

000000000000ad16 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ad16:	55                   	push   %rbp
    ad17:	48 89 e5             	mov    %rsp,%rbp
    ad1a:	53                   	push   %rbx
    ad1b:	48 83 ec 28          	sub    $0x28,%rsp
    ad1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ad27:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    ad2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad2f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ad33:	48 89 d6             	mov    %rdx,%rsi
    ad36:	48 89 c7             	mov    %rax,%rdi
    ad39:	e8 64 1a 00 00       	call   c7a2 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    ad3e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad46:	48 89 d6             	mov    %rdx,%rsi
    ad49:	48 89 c7             	mov    %rax,%rdi
    ad4c:	e8 83 1a 00 00       	call   c7d4 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    ad51:	eb 1a                	jmp    ad6d <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    ad53:	48 89 c3             	mov    %rax,%rbx
    ad56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad5a:	48 89 c7             	mov    %rax,%rdi
    ad5d:	e8 a6 c4 ff ff       	call   7208 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    ad62:	48 89 d8             	mov    %rbx,%rax
    ad65:	48 89 c7             	mov    %rax,%rdi
    ad68:	e8 a3 87 ff ff       	call   3510 <_Unwind_Resume@plt>
    ad6d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad71:	c9                   	leave
    ad72:	c3                   	ret
    ad73:	90                   	nop

000000000000ad74 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ad74:	55                   	push   %rbp
    ad75:	48 89 e5             	mov    %rsp,%rbp
    ad78:	48 83 ec 10          	sub    $0x10,%rsp
    ad7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ad84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad88:	48 89 c7             	mov    %rax,%rdi
    ad8b:	e8 24 00 00 00       	call   adb4 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    ad90:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ad93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad97:	48 8b 00             	mov    (%rax),%rax
    ad9a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ad9e:	48 89 ce             	mov    %rcx,%rsi
    ada1:	48 89 c7             	mov    %rax,%rdi
    ada4:	e8 7d 1a 00 00       	call   c826 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ada9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    adad:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    adb1:	90                   	nop
    adb2:	c9                   	leave
    adb3:	c3                   	ret

000000000000adb4 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    adb4:	55                   	push   %rbp
    adb5:	48 89 e5             	mov    %rsp,%rbp
    adb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    adbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adc0:	5d                   	pop    %rbp
    adc1:	c3                   	ret

000000000000adc2 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    adc2:	55                   	push   %rbp
    adc3:	48 89 e5             	mov    %rsp,%rbp
    adc6:	48 83 ec 20          	sub    $0x20,%rsp
    adca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    add2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    add6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    adda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adde:	48 89 d6             	mov    %rdx,%rsi
    ade1:	48 89 c7             	mov    %rax,%rdi
    ade4:	e8 66 1a 00 00       	call   c84f <_ZSt8_DestroyIPcEvT_S1_>
    }
    ade9:	90                   	nop
    adea:	c9                   	leave
    adeb:	c3                   	ret

000000000000adec <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    adec:	55                   	push   %rbp
    aded:	48 89 e5             	mov    %rsp,%rbp
    adf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adf4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    adf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adfc:	5d                   	pop    %rbp
    adfd:	c3                   	ret

000000000000adfe <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    adfe:	55                   	push   %rbp
    adff:	48 89 e5             	mov    %rsp,%rbp
    ae02:	48 83 ec 20          	sub    $0x20,%rsp
    ae06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae0e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ae12:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ae17:	74 17                	je     ae30 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ae19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ae21:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ae25:	48 89 ce             	mov    %rcx,%rsi
    ae28:	48 89 c7             	mov    %rax,%rdi
    ae2b:	e8 45 1a 00 00       	call   c875 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    ae30:	90                   	nop
    ae31:	c9                   	leave
    ae32:	c3                   	ret
    ae33:	90                   	nop

000000000000ae34 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ae34:	55                   	push   %rbp
    ae35:	48 89 e5             	mov    %rsp,%rbp
    ae38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ae40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae44:	48 8b 10             	mov    (%rax),%rdx
    ae47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae4b:	48 89 10             	mov    %rdx,(%rax)
    ae4e:	90                   	nop
    ae4f:	5d                   	pop    %rbp
    ae50:	c3                   	ret
    ae51:	90                   	nop

000000000000ae52 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ae52:	55                   	push   %rbp
    ae53:	48 89 e5             	mov    %rsp,%rbp
    ae56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ae5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae5e:	5d                   	pop    %rbp
    ae5f:	c3                   	ret

000000000000ae60 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    ae60:	55                   	push   %rbp
    ae61:	48 89 e5             	mov    %rsp,%rbp
    ae64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ae68:	90                   	nop
    ae69:	5d                   	pop    %rbp
    ae6a:	c3                   	ret

000000000000ae6b <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    ae6b:	55                   	push   %rbp
    ae6c:	48 89 e5             	mov    %rsp,%rbp
    ae6f:	48 83 ec 10          	sub    $0x10,%rsp
    ae73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae77:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    ae7b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ae7f:	48 89 c7             	mov    %rax,%rdi
    ae82:	e8 1c 1a 00 00       	call   c8a3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    ae87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae8f:	48 89 d6             	mov    %rdx,%rsi
    ae92:	48 89 c7             	mov    %rax,%rdi
    ae95:	e8 14 1a 00 00       	call   c8ae <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    ae9a:	c9                   	leave
    ae9b:	c3                   	ret

000000000000ae9c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ae9c:	55                   	push   %rbp
    ae9d:	48 89 e5             	mov    %rsp,%rbp
    aea0:	48 83 ec 20          	sub    $0x20,%rsp
    aea4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    aea8:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    aeaf:	07 7e 00 
    aeb2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    aeb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aeba:	48 89 c7             	mov    %rax,%rdi
    aebd:	e8 02 1a 00 00       	call   c8c4 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    aec2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    aec6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    aeca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    aece:	48 89 d6             	mov    %rdx,%rsi
    aed1:	48 89 c7             	mov    %rax,%rdi
    aed4:	e8 58 96 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    aed9:	48 8b 00             	mov    (%rax),%rax
      }
    aedc:	c9                   	leave
    aedd:	c3                   	ret

000000000000aede <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    aede:	55                   	push   %rbp
    aedf:	48 89 e5             	mov    %rsp,%rbp
    aee2:	48 83 ec 10          	sub    $0x10,%rsp
    aee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    aeee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef6:	48 89 d6             	mov    %rdx,%rsi
    aef9:	48 89 c7             	mov    %rax,%rdi
    aefc:	e8 71 e0 ff ff       	call   8f72 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    af01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af05:	48 89 c7             	mov    %rax,%rdi
    af08:	e8 d1 19 00 00       	call   c8de <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    af0d:	90                   	nop
    af0e:	c9                   	leave
    af0f:	c3                   	ret

000000000000af10 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    af10:	55                   	push   %rbp
    af11:	48 89 e5             	mov    %rsp,%rbp
    af14:	48 83 ec 10          	sub    $0x10,%rsp
    af18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    af20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af28:	48 89 d6             	mov    %rdx,%rsi
    af2b:	48 89 c7             	mov    %rax,%rdi
    af2e:	e8 d9 19 00 00       	call   c90c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    af33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    af37:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    af3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af3e:	48 8b 10             	mov    (%rax),%rdx
    af41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af45:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    af49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af4d:	48 8b 08             	mov    (%rax),%rcx
    af50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af54:	48 89 d0             	mov    %rdx,%rax
    af57:	48 c1 e0 06          	shl    $0x6,%rax
    af5b:	48 01 d0             	add    %rdx,%rax
    af5e:	48 c1 e0 02          	shl    $0x2,%rax
    af62:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    af66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af6a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    af6e:	90                   	nop
    af6f:	c9                   	leave
    af70:	c3                   	ret

000000000000af71 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    af71:	55                   	push   %rbp
    af72:	48 89 e5             	mov    %rsp,%rbp
    af75:	48 83 ec 20          	sub    $0x20,%rsp
    af79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af81:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    af85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af8d:	48 89 d6             	mov    %rdx,%rsi
    af90:	48 89 c7             	mov    %rax,%rdi
    af93:	e8 a7 19 00 00       	call   c93f <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    af98:	c9                   	leave
    af99:	c3                   	ret

000000000000af9a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    af9a:	55                   	push   %rbp
    af9b:	48 89 e5             	mov    %rsp,%rbp
    af9e:	48 83 ec 10          	sub    $0x10,%rsp
    afa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    afaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    afae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afb2:	48 89 d6             	mov    %rdx,%rsi
    afb5:	48 89 c7             	mov    %rax,%rdi
    afb8:	e8 ab 19 00 00       	call   c968 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    afbd:	90                   	nop
    afbe:	c9                   	leave
    afbf:	c3                   	ret

000000000000afc0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    afc0:	55                   	push   %rbp
    afc1:	48 89 e5             	mov    %rsp,%rbp
    afc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afcc:	90                   	nop
    afcd:	5d                   	pop    %rbp
    afce:	c3                   	ret

000000000000afcf <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    afcf:	55                   	push   %rbp
    afd0:	48 89 e5             	mov    %rsp,%rbp
    afd3:	48 83 ec 20          	sub    $0x20,%rsp
    afd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afdb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    afdf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    afe3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    afe7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    afeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afef:	48 89 ce             	mov    %rcx,%rsi
    aff2:	48 89 c7             	mov    %rax,%rdi
    aff5:	e8 7e 19 00 00       	call   c978 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    affa:	90                   	nop
    affb:	c9                   	leave
    affc:	c3                   	ret

000000000000affd <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    affd:	55                   	push   %rbp
    affe:	48 89 e5             	mov    %rsp,%rbp
    b001:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b005:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    b009:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b00d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    b011:	48 c1 f8 03          	sar    $0x3,%rax
    }
    b015:	5d                   	pop    %rbp
    b016:	c3                   	ret

000000000000b017 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    b017:	55                   	push   %rbp
    b018:	48 89 e5             	mov    %rsp,%rbp
    b01b:	48 83 ec 20          	sub    $0x20,%rsp
    b01f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b023:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b027:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    b02b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    b02f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b033:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b03b:	48 89 ce             	mov    %rcx,%rsi
    b03e:	48 89 c7             	mov    %rax,%rdi
    b041:	e8 6c 19 00 00       	call   c9b2 <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>
    }
    b046:	c9                   	leave
    b047:	c3                   	ret

000000000000b048 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    b048:	55                   	push   %rbp
    b049:	48 89 e5             	mov    %rsp,%rbp
    b04c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    b050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b054:	5d                   	pop    %rbp
    b055:	c3                   	ret

000000000000b056 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    b056:	55                   	push   %rbp
    b057:	48 89 e5             	mov    %rsp,%rbp
    b05a:	48 83 ec 20          	sub    $0x20,%rsp
    b05e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b062:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b066:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    b06a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b06e:	48 89 c7             	mov    %rax,%rdi
    b071:	e8 d2 ff ff ff       	call   b048 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    b076:	48 89 c2             	mov    %rax,%rdx
    b079:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b07d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b081:	48 89 ce             	mov    %rcx,%rsi
    b084:	48 89 c7             	mov    %rax,%rdi
    b087:	e8 5c 19 00 00       	call   c9e8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    b08c:	90                   	nop
    b08d:	c9                   	leave
    b08e:	c3                   	ret
    b08f:	90                   	nop

000000000000b090 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
    b090:	55                   	push   %rbp
    b091:	48 89 e5             	mov    %rsp,%rbp
    b094:	53                   	push   %rbx
    b095:	48 83 ec 68          	sub    $0x68,%rsp
    b099:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    b09d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    b0a1:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    b0a5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b0a9:	48 8d 15 83 74 00 00 	lea    0x7483(%rip),%rdx        # 12533 <_ZN6__pstl9execution2v1L5unseqE+0x2cc>
    b0b0:	be 01 00 00 00       	mov    $0x1,%esi
    b0b5:	48 89 c7             	mov    %rax,%rdi
    b0b8:	e8 6d 19 00 00       	call   ca2a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    b0bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    b0c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b0c5:	48 8b 00             	mov    (%rax),%rax
    b0c8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    b0cc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b0d0:	48 8b 40 08          	mov    0x8(%rax),%rax
    b0d4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    b0d8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b0dc:	48 89 c7             	mov    %rax,%rdi
    b0df:	e8 8c c7 ff ff       	call   7870 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    b0e4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    b0e8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    b0ec:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b0f0:	48 89 d6             	mov    %rdx,%rsi
    b0f3:	48 89 c7             	mov    %rax,%rdi
    b0f6:	e8 f7 19 00 00       	call   caf2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    b0fb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    b0ff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b103:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b107:	48 89 d6             	mov    %rdx,%rsi
    b10a:	48 89 c7             	mov    %rax,%rdi
    b10d:	e8 c8 90 ff ff       	call   41da <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    b112:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    b116:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b11a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    b11e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b122:	48 89 c7             	mov    %rax,%rdi
    b125:	e8 1e ff ff ff       	call   b048 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    b12a:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    b12d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b131:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    b138:	00 
	  _Alloc_traits::construct(this->_M_impl,
    b139:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b13d:	48 01 c1             	add    %rax,%rcx
    b140:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b144:	48 89 ce             	mov    %rcx,%rsi
    b147:	48 89 c7             	mov    %rax,%rdi
    b14a:	e8 07 ff ff ff       	call   b056 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
    b14f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    b156:	00 
					 __new_start, _M_get_Tp_allocator());
    b157:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b15b:	48 89 c7             	mov    %rax,%rdi
    b15e:	e8 b7 8d ff ff       	call   3f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    b163:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    b166:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b16a:	48 89 c7             	mov    %rax,%rdi
    b16d:	e8 82 e2 ff ff       	call   93f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    b172:	48 8b 30             	mov    (%rax),%rsi
    b175:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b179:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b17d:	48 89 d9             	mov    %rbx,%rcx
    b180:	48 89 c7             	mov    %rax,%rdi
    b183:	e8 ac 19 00 00       	call   cb34 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    b188:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    b18c:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    b191:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b195:	48 89 c7             	mov    %rax,%rdi
    b198:	e8 7d 8d ff ff       	call   3f1a <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    b19d:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    b1a0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b1a4:	48 89 c7             	mov    %rax,%rdi
    b1a7:	e8 48 e2 ff ff       	call   93f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    b1ac:	48 8b 00             	mov    (%rax),%rax
    b1af:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b1b3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    b1b7:	48 89 d9             	mov    %rbx,%rcx
    b1ba:	48 89 c7             	mov    %rax,%rdi
    b1bd:	e8 72 19 00 00       	call   cb34 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    b1c2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    b1c6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    b1ca:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    b1ce:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    b1d2:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    b1d6:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    b1da:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    b1de:	48 89 ce             	mov    %rcx,%rsi
    b1e1:	48 89 c7             	mov    %rax,%rdi
    b1e4:	e8 23 8f ff ff       	call   410c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    b1e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b1ed:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b1f1:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    b1f4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b1f8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b1fc:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    b200:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b204:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b20b:	00 
    b20c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b210:	48 01 c2             	add    %rax,%rdx
    b213:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b217:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    b21b:	90                   	nop
    b21c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b220:	c9                   	leave
    b221:	c3                   	ret

000000000000b222 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    b222:	55                   	push   %rbp
    b223:	48 89 e5             	mov    %rsp,%rbp
    b226:	48 83 ec 20          	sub    $0x20,%rsp
    b22a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    b22e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b232:	48 89 c7             	mov    %rax,%rdi
    b235:	e8 5c c6 ff ff       	call   7896 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    b23a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b23e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b242:	be 01 00 00 00       	mov    $0x1,%esi
    b247:	48 89 c7             	mov    %rax,%rdi
    b24a:	e8 17 19 00 00       	call   cb66 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    b24f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    b253:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b257:	48 89 c7             	mov    %rax,%rdi
    b25a:	e8 bb c6 ff ff       	call   791a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    b25f:	c9                   	leave
    b260:	c3                   	ret

000000000000b261 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    b261:	55                   	push   %rbp
    b262:	48 89 e5             	mov    %rsp,%rbp
    b265:	48 83 ec 20          	sub    $0x20,%rsp
    b269:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    b26d:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b274:	03 3f 00 
    b277:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    b27b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b27f:	48 89 c7             	mov    %rax,%rdi
    b282:	e8 21 19 00 00       	call   cba8 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    b287:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    b28b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b28f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b293:	48 89 d6             	mov    %rdx,%rsi
    b296:	48 89 c7             	mov    %rax,%rdi
    b299:	e8 93 92 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    b29e:	48 8b 00             	mov    (%rax),%rax
      }
    b2a1:	c9                   	leave
    b2a2:	c3                   	ret
    b2a3:	90                   	nop

000000000000b2a4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    b2a4:	55                   	push   %rbp
    b2a5:	48 89 e5             	mov    %rsp,%rbp
    b2a8:	48 83 ec 10          	sub    $0x10,%rsp
    b2ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    b2b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2bc:	48 89 d6             	mov    %rdx,%rsi
    b2bf:	48 89 c7             	mov    %rax,%rdi
    b2c2:	e8 fb 18 00 00       	call   cbc2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    b2c7:	90                   	nop
    b2c8:	c9                   	leave
    b2c9:	c3                   	ret

000000000000b2ca <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    b2ca:	55                   	push   %rbp
    b2cb:	48 89 e5             	mov    %rsp,%rbp
    b2ce:	48 83 ec 10          	sub    $0x10,%rsp
    b2d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    b2da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e2:	48 89 d6             	mov    %rdx,%rsi
    b2e5:	48 89 c7             	mov    %rax,%rdi
    b2e8:	e8 b7 ff ff ff       	call   b2a4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    b2ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2f1:	48 89 c7             	mov    %rax,%rdi
    b2f4:	e8 d9 18 00 00       	call   cbd2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    b2f9:	90                   	nop
    b2fa:	c9                   	leave
    b2fb:	c3                   	ret

000000000000b2fc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    b2fc:	55                   	push   %rbp
    b2fd:	48 89 e5             	mov    %rsp,%rbp
    b300:	48 83 ec 10          	sub    $0x10,%rsp
    b304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    b30c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b314:	48 89 d6             	mov    %rdx,%rsi
    b317:	48 89 c7             	mov    %rax,%rdi
    b31a:	e8 e1 18 00 00       	call   cc00 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    b31f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b323:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    b326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b32a:	48 8b 10             	mov    (%rax),%rdx
    b32d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b331:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    b335:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b339:	48 8b 08             	mov    (%rax),%rcx
    b33c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b340:	48 89 d0             	mov    %rdx,%rax
    b343:	48 c1 e0 06          	shl    $0x6,%rax
    b347:	48 01 d0             	add    %rdx,%rax
    b34a:	48 c1 e0 03          	shl    $0x3,%rax
    b34e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b356:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    b35a:	90                   	nop
    b35b:	c9                   	leave
    b35c:	c3                   	ret
    b35d:	90                   	nop

000000000000b35e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b35e:	55                   	push   %rbp
    b35f:	48 89 e5             	mov    %rsp,%rbp
    b362:	48 83 ec 20          	sub    $0x20,%rsp
    b366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b36a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b36e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b372:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b377:	74 17                	je     b390 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b37d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b381:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b385:	48 89 ce             	mov    %rcx,%rsi
    b388:	48 89 c7             	mov    %rax,%rdi
    b38b:	e8 a3 18 00 00       	call   cc33 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    b390:	90                   	nop
    b391:	c9                   	leave
    b392:	c3                   	ret

000000000000b393 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b393:	55                   	push   %rbp
    b394:	48 89 e5             	mov    %rsp,%rbp
    b397:	48 83 ec 20          	sub    $0x20,%rsp
    b39b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b39f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b3a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b3a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3af:	48 89 d6             	mov    %rdx,%rsi
    b3b2:	48 89 c7             	mov    %rax,%rdi
    b3b5:	e8 a7 18 00 00       	call   cc61 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    b3ba:	c9                   	leave
    b3bb:	c3                   	ret

000000000000b3bc <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b3bc:	55                   	push   %rbp
    b3bd:	48 89 e5             	mov    %rsp,%rbp
    b3c0:	48 83 ec 10          	sub    $0x10,%rsp
    b3c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b3cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3d4:	48 89 d6             	mov    %rdx,%rsi
    b3d7:	48 89 c7             	mov    %rax,%rdi
    b3da:	e8 ab 18 00 00       	call   cc8a <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    b3df:	90                   	nop
    b3e0:	c9                   	leave
    b3e1:	c3                   	ret

000000000000b3e2 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    b3e2:	55                   	push   %rbp
    b3e3:	48 89 e5             	mov    %rsp,%rbp
    b3e6:	48 83 ec 10          	sub    $0x10,%rsp
    b3ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f2:	48 89 c7             	mov    %rax,%rdi
    b3f5:	e8 a0 18 00 00       	call   cc9a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    b3fa:	90                   	nop
    b3fb:	c9                   	leave
    b3fc:	c3                   	ret
    b3fd:	90                   	nop

000000000000b3fe <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    b3fe:	55                   	push   %rbp
    b3ff:	48 89 e5             	mov    %rsp,%rbp
    b402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    b406:	90                   	nop
    b407:	5d                   	pop    %rbp
    b408:	c3                   	ret
    b409:	90                   	nop

000000000000b40a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b40a:	55                   	push   %rbp
    b40b:	48 89 e5             	mov    %rsp,%rbp
    b40e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b412:	90                   	nop
    b413:	5d                   	pop    %rbp
    b414:	c3                   	ret
    b415:	90                   	nop

000000000000b416 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    b416:	55                   	push   %rbp
    b417:	48 89 e5             	mov    %rsp,%rbp
    b41a:	41 55                	push   %r13
    b41c:	41 54                	push   %r12
    b41e:	53                   	push   %rbx
    b41f:	48 83 ec 78          	sub    $0x78,%rsp
    b423:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    b42a:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    b431:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    b438:	48 89 c7             	mov    %rax,%rdi
    b43b:	e8 65 18 00 00       	call   cca5 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    b440:	48 89 c2             	mov    %rax,%rdx
    b443:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
    b44a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b44e:	48 89 ce             	mov    %rcx,%rsi
    b451:	48 89 c7             	mov    %rax,%rdi
    b454:	e8 5b 18 00 00       	call   ccb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>
	auto __res = _M_get_insert_unique_pos(__z._M_key());
    b459:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b45d:	48 89 c7             	mov    %rax,%rdi
    b460:	e8 43 1a 00 00       	call   cea8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>
    b465:	48 89 c2             	mov    %rax,%rdx
    b468:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    b46f:	48 89 d6             	mov    %rdx,%rsi
    b472:	48 89 c7             	mov    %rax,%rdi
    b475:	e8 b8 18 00 00       	call   cd32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>
    b47a:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    b47e:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
	if (__res.second)
    b482:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b486:	48 85 c0             	test   %rax,%rax
    b489:	74 40                	je     b4cb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xb5>
	  return {__z._M_insert(__res), true};
    b48b:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    b48f:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    b493:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b497:	48 89 ce             	mov    %rcx,%rsi
    b49a:	48 89 c7             	mov    %rax,%rdi
    b49d:	e8 24 1a 00 00       	call   cec6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>
    b4a2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    b4a6:	c6 45 bf 01          	movb   $0x1,-0x41(%rbp)
    b4aa:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    b4ae:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    b4b2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    b4b6:	48 89 ce             	mov    %rcx,%rsi
    b4b9:	48 89 c7             	mov    %rax,%rdi
    b4bc:	e8 5b 1a 00 00       	call   cf1c <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
    b4c1:	4c 8b 65 a0          	mov    -0x60(%rbp),%r12
    b4c5:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    b4c9:	eb 36                	jmp    b501 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xeb>
	return {iterator(__res.first), false};
    b4cb:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    b4cf:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    b4d3:	48 89 d6             	mov    %rdx,%rsi
    b4d6:	48 89 c7             	mov    %rax,%rdi
    b4d9:	e8 82 1a 00 00       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    b4de:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
    b4e2:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    b4e6:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b4ea:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b4ee:	48 89 ce             	mov    %rcx,%rsi
    b4f1:	48 89 c7             	mov    %rax,%rdi
    b4f4:	e8 23 1a 00 00       	call   cf1c <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
    b4f9:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    b4fd:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
      }
    b501:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b505:	48 89 c7             	mov    %rax,%rdi
    b508:	e8 ef 17 00 00       	call   ccfc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
    b50d:	4c 89 e0             	mov    %r12,%rax
    b510:	4c 89 ea             	mov    %r13,%rdx
    b513:	eb 1a                	jmp    b52f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0x119>
    b515:	48 89 c3             	mov    %rax,%rbx
    b518:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b51c:	48 89 c7             	mov    %rax,%rdi
    b51f:	e8 d8 17 00 00       	call   ccfc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
    b524:	48 89 d8             	mov    %rbx,%rax
    b527:	48 89 c7             	mov    %rax,%rdi
    b52a:	e8 e1 7f ff ff       	call   3510 <_Unwind_Resume@plt>
    b52f:	48 83 c4 78          	add    $0x78,%rsp
    b533:	5b                   	pop    %rbx
    b534:	41 5c                	pop    %r12
    b536:	41 5d                	pop    %r13
    b538:	5d                   	pop    %rbp
    b539:	c3                   	ret

000000000000b53a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    b53a:	55                   	push   %rbp
    b53b:	48 89 e5             	mov    %rsp,%rbp
    b53e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    b542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b546:	48 8b 40 18          	mov    0x18(%rax),%rax
    b54a:	5d                   	pop    %rbp
    b54b:	c3                   	ret

000000000000b54c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    b54c:	55                   	push   %rbp
    b54d:	48 89 e5             	mov    %rsp,%rbp
    b550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    b554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b558:	48 8b 40 10          	mov    0x10(%rax),%rax
    b55c:	5d                   	pop    %rbp
    b55d:	c3                   	ret

000000000000b55e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    b55e:	55                   	push   %rbp
    b55f:	48 89 e5             	mov    %rsp,%rbp
    b562:	48 83 ec 10          	sub    $0x10,%rsp
    b566:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b56a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    b56e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b576:	48 89 d6             	mov    %rdx,%rsi
    b579:	48 89 c7             	mov    %rax,%rdi
    b57c:	e8 f9 19 00 00       	call   cf7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>
	_M_put_node(__p);
    b581:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b589:	48 89 d6             	mov    %rdx,%rsi
    b58c:	48 89 c7             	mov    %rax,%rdi
    b58f:	e8 24 1a 00 00       	call   cfb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
      }
    b594:	90                   	nop
    b595:	c9                   	leave
    b596:	c3                   	ret
    b597:	90                   	nop

000000000000b598 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    b598:	55                   	push   %rbp
    b599:	48 89 e5             	mov    %rsp,%rbp
    b59c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    b5a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a4:	48 8b 40 10          	mov    0x10(%rax),%rax
    b5a8:	5d                   	pop    %rbp
    b5a9:	c3                   	ret

000000000000b5aa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    b5aa:	55                   	push   %rbp
    b5ab:	48 89 e5             	mov    %rsp,%rbp
    b5ae:	53                   	push   %rbx
    b5af:	48 83 ec 78          	sub    $0x78,%rsp
    b5b3:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    b5b7:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    b5bb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b5bf:	48 89 c7             	mov    %rax,%rdi
    b5c2:	e8 51 df ff ff       	call   9518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    b5c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      _Base_ptr __y = _M_end();
    b5cb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b5cf:	48 89 c7             	mov    %rax,%rdi
    b5d2:	e8 17 1a 00 00       	call   cfee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
    b5d7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    b5db:	e9 12 01 00 00       	jmp    b6f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
    b5e0:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    b5e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5e8:	48 89 c7             	mov    %rax,%rdi
    b5eb:	e8 10 1a 00 00       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    b5f0:	48 89 c1             	mov    %rax,%rcx
    b5f3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b5f7:	48 89 c2             	mov    %rax,%rdx
    b5fa:	48 89 ce             	mov    %rcx,%rsi
    b5fd:	48 89 df             	mov    %rbx,%rdi
    b600:	e8 27 1a 00 00       	call   d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b605:	84 c0                	test   %al,%al
    b607:	74 15                	je     b61e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x74>
	    __x = _S_right(__x);
    b609:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b60d:	48 89 c7             	mov    %rax,%rdi
    b610:	e8 25 ff ff ff       	call   b53a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    b615:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b619:	e9 d4 00 00 00       	jmp    b6f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
    b61e:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    b622:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b626:	48 89 c7             	mov    %rax,%rdi
    b629:	e8 d2 19 00 00       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    b62e:	48 89 c2             	mov    %rax,%rdx
    b631:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b635:	48 89 c6             	mov    %rax,%rsi
    b638:	48 89 df             	mov    %rbx,%rdi
    b63b:	e8 ec 19 00 00       	call   d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    b640:	84 c0                	test   %al,%al
    b642:	74 1d                	je     b661 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xb7>
	    __y = __x, __x = _S_left(__x);
    b644:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b648:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b64c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b650:	48 89 c7             	mov    %rax,%rdi
    b653:	e8 f4 fe ff ff       	call   b54c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    b658:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b65c:	e9 91 00 00 00       	jmp    b6f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	      _Link_type __xu(__x);
    b661:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b665:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      _Base_ptr __yu(__y);
    b669:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b66d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	      __y = __x, __x = _S_left(__x);
    b671:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b675:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b679:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b67d:	48 89 c7             	mov    %rax,%rdi
    b680:	e8 c7 fe ff ff       	call   b54c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    b685:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	      __xu = _S_right(__xu);
    b689:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b68d:	48 89 c7             	mov    %rax,%rdi
    b690:	e8 a5 fe ff ff       	call   b53a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    b695:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
				    _M_upper_bound(__xu, __yu, __k));
    b699:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    b69d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b6a1:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    b6a5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b6a9:	48 89 c7             	mov    %rax,%rdi
    b6ac:	e8 3b 1a 00 00       	call   d0ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
    b6b1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
			  iterator>(_M_lower_bound(__x, __y, __k),
    b6b5:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    b6b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b6bd:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    b6c1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b6c5:	48 89 c7             	mov    %rax,%rdi
    b6c8:	e8 89 19 00 00       	call   d056 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
    b6cd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
	      return pair<iterator,
    b6d1:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    b6d5:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
    b6d9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b6dd:	48 89 ce             	mov    %rcx,%rsi
    b6e0:	48 89 c7             	mov    %rax,%rdi
    b6e3:	e8 94 1a 00 00       	call   d17c <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				    _M_upper_bound(__xu, __yu, __k));
    b6e8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b6ec:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    b6f0:	eb 50                	jmp    b742 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x198>
      while (__x != 0)
    b6f2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    b6f7:	0f 85 e3 fe ff ff    	jne    b5e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x36>
				      iterator(__y));
    b6fd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b701:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b705:	48 89 d6             	mov    %rdx,%rsi
    b708:	48 89 c7             	mov    %rax,%rdi
    b70b:	e8 50 18 00 00       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      return pair<iterator, iterator>(iterator(__y),
    b710:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b714:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    b718:	48 89 d6             	mov    %rdx,%rsi
    b71b:	48 89 c7             	mov    %rax,%rdi
    b71e:	e8 3d 18 00 00       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    b723:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    b727:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    b72b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b72f:	48 89 ce             	mov    %rcx,%rsi
    b732:	48 89 c7             	mov    %rax,%rdi
    b735:	e8 42 1a 00 00       	call   d17c <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				      iterator(__y));
    b73a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b73e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    }
    b742:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b746:	c9                   	leave
    b747:	c3                   	ret

000000000000b748 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    b748:	55                   	push   %rbp
    b749:	48 89 e5             	mov    %rsp,%rbp
    b74c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    b750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b754:	48 8b 40 28          	mov    0x28(%rax),%rax
    b758:	5d                   	pop    %rbp
    b759:	c3                   	ret

000000000000b75a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    b75a:	55                   	push   %rbp
    b75b:	48 89 e5             	mov    %rsp,%rbp
    b75e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b762:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    b766:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b76a:	48 8b 10             	mov    (%rax),%rdx
    b76d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b771:	48 89 10             	mov    %rdx,(%rax)
    b774:	90                   	nop
    b775:	5d                   	pop    %rbp
    b776:	c3                   	ret
    b777:	90                   	nop

000000000000b778 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    b778:	55                   	push   %rbp
    b779:	48 89 e5             	mov    %rsp,%rbp
    b77c:	48 83 ec 40          	sub    $0x40,%rsp
    b780:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b784:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b788:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      if (__first == begin() && __last == end())
    b78c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b790:	48 89 c7             	mov    %rax,%rdi
    b793:	e8 28 1a 00 00       	call   d1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
    b798:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    b79c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    b7a0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    b7a4:	48 89 d6             	mov    %rdx,%rsi
    b7a7:	48 89 c7             	mov    %rax,%rdi
    b7aa:	e8 ab ff ff ff       	call   b75a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    b7af:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    b7b3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    b7b7:	48 89 d6             	mov    %rdx,%rsi
    b7ba:	48 89 c7             	mov    %rax,%rdi
    b7bd:	e8 27 1a 00 00       	call   d1e9 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    b7c2:	84 c0                	test   %al,%al
    b7c4:	74 41                	je     b807 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
    b7c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b7ca:	48 89 c7             	mov    %rax,%rdi
    b7cd:	e8 3a 1a 00 00       	call   d20c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>
    b7d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b7d6:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    b7da:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b7de:	48 89 d6             	mov    %rdx,%rsi
    b7e1:	48 89 c7             	mov    %rax,%rdi
    b7e4:	e8 71 ff ff ff       	call   b75a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    b7e9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    b7ed:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    b7f1:	48 89 d6             	mov    %rdx,%rsi
    b7f4:	48 89 c7             	mov    %rax,%rdi
    b7f7:	e8 ed 19 00 00       	call   d1e9 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    b7fc:	84 c0                	test   %al,%al
    b7fe:	74 07                	je     b807 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
    b800:	b8 01 00 00 00       	mov    $0x1,%eax
    b805:	eb 05                	jmp    b80c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x94>
    b807:	b8 00 00 00 00       	mov    $0x0,%eax
    b80c:	84 c0                	test   %al,%al
    b80e:	74 31                	je     b841 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xc9>
	clear();
    b810:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b814:	48 89 c7             	mov    %rax,%rdi
    b817:	e8 1a 1a 00 00       	call   d236 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>
    }
    b81c:	eb 3a                	jmp    b858 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xe0>
	  _M_erase_aux(__first++);
    b81e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    b822:	be 00 00 00 00       	mov    $0x0,%esi
    b827:	48 89 c7             	mov    %rax,%rdi
    b82a:	e8 67 1a 00 00       	call   d296 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>
    b82f:	48 89 c2             	mov    %rax,%rdx
    b832:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b836:	48 89 d6             	mov    %rdx,%rsi
    b839:	48 89 c7             	mov    %rax,%rdi
    b83c:	e8 8b 1a 00 00       	call   d2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>
	while (__first != __last)
    b841:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    b845:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    b849:	48 89 d6             	mov    %rdx,%rsi
    b84c:	48 89 c7             	mov    %rax,%rdi
    b84f:	e8 1f 1a 00 00       	call   d273 <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    b854:	84 c0                	test   %al,%al
    b856:	75 c6                	jne    b81e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xa6>
    }
    b858:	90                   	nop
    b859:	c9                   	leave
    b85a:	c3                   	ret
    b85b:	90                   	nop

000000000000b85c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b85c:	55                   	push   %rbp
    b85d:	48 89 e5             	mov    %rsp,%rbp
    b860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b864:	90                   	nop
    b865:	5d                   	pop    %rbp
    b866:	c3                   	ret

000000000000b867 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b867:	55                   	push   %rbp
    b868:	48 89 e5             	mov    %rsp,%rbp
    b86b:	48 83 ec 20          	sub    $0x20,%rsp
    b86f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b873:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b877:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b87b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b87f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b883:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b887:	48 89 ce             	mov    %rcx,%rsi
    b88a:	48 89 c7             	mov    %rax,%rdi
    b88d:	e8 90 1a 00 00       	call   d322 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    b892:	90                   	nop
    b893:	c9                   	leave
    b894:	c3                   	ret

000000000000b895 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b895:	55                   	push   %rbp
    b896:	48 89 e5             	mov    %rsp,%rbp
    b899:	48 83 ec 10          	sub    $0x10,%rsp
    b89d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b8a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8ad:	48 89 d6             	mov    %rdx,%rsi
    b8b0:	48 89 c7             	mov    %rax,%rdi
    b8b3:	e8 9b 1a 00 00       	call   d353 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    b8b8:	90                   	nop
    b8b9:	c9                   	leave
    b8ba:	c3                   	ret
    b8bb:	90                   	nop

000000000000b8bc <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
    b8bc:	55                   	push   %rbp
    b8bd:	48 89 e5             	mov    %rsp,%rbp
    b8c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8c4:	90                   	nop
    b8c5:	5d                   	pop    %rbp
    b8c6:	c3                   	ret

000000000000b8c7 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    b8c7:	55                   	push   %rbp
    b8c8:	48 89 e5             	mov    %rsp,%rbp
    b8cb:	48 83 ec 20          	sub    $0x20,%rsp
    b8cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    b8db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b8df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b8e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8e7:	48 89 ce             	mov    %rcx,%rsi
    b8ea:	48 89 c7             	mov    %rax,%rdi
    b8ed:	e8 70 1a 00 00       	call   d362 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    b8f2:	90                   	nop
    b8f3:	c9                   	leave
    b8f4:	c3                   	ret

000000000000b8f5 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    b8f5:	55                   	push   %rbp
    b8f6:	48 89 e5             	mov    %rsp,%rbp
    b8f9:	48 83 ec 10          	sub    $0x10,%rsp
    b8fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b901:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    b905:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b90d:	48 89 d6             	mov    %rdx,%rsi
    b910:	48 89 c7             	mov    %rax,%rdi
    b913:	e8 7b 1a 00 00       	call   d393 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    b918:	90                   	nop
    b919:	c9                   	leave
    b91a:	c3                   	ret
    b91b:	90                   	nop

000000000000b91c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    b91c:	55                   	push   %rbp
    b91d:	48 89 e5             	mov    %rsp,%rbp
    b920:	48 83 ec 10          	sub    $0x10,%rsp
    b924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    b928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b92c:	48 89 c7             	mov    %rax,%rdi
    b92f:	e8 b0 1a 00 00       	call   d3e4 <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b934:	48 89 c7             	mov    %rax,%rdi
    b937:	e8 66 1a 00 00       	call   d3a2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    b93c:	c9                   	leave
    b93d:	c3                   	ret

000000000000b93e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    b93e:	55                   	push   %rbp
    b93f:	48 89 e5             	mov    %rsp,%rbp
    b942:	48 83 ec 20          	sub    $0x20,%rsp
    b946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b94a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b94e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    b952:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b95a:	48 89 d6             	mov    %rdx,%rsi
    b95d:	48 89 c7             	mov    %rax,%rdi
    b960:	e8 8d 1a 00 00       	call   d3f2 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    b965:	c9                   	leave
    b966:	c3                   	ret
    b967:	90                   	nop

000000000000b968 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    b968:	55                   	push   %rbp
    b969:	48 89 e5             	mov    %rsp,%rbp
    b96c:	53                   	push   %rbx
    b96d:	48 83 ec 38          	sub    $0x38,%rsp
    b971:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b975:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b979:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    b97d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b981:	48 89 c7             	mov    %rax,%rdi
    b984:	e8 93 ff ff ff       	call   b91c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    b989:	48 89 c3             	mov    %rax,%rbx
    b98c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b990:	48 89 c7             	mov    %rax,%rdi
    b993:	e8 ce dd ff ff       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    b998:	48 29 c3             	sub    %rax,%rbx
    b99b:	48 89 da             	mov    %rbx,%rdx
    b99e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b9a2:	48 39 c2             	cmp    %rax,%rdx
    b9a5:	0f 92 c0             	setb   %al
    b9a8:	84 c0                	test   %al,%al
    b9aa:	74 0c                	je     b9b8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    b9ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b9b0:	48 89 c7             	mov    %rax,%rdi
    b9b3:	e8 38 77 ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    b9b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b9bc:	48 89 c7             	mov    %rax,%rdi
    b9bf:	e8 a2 dd ff ff       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    b9c4:	48 89 c3             	mov    %rax,%rbx
    b9c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b9cb:	48 89 c7             	mov    %rax,%rdi
    b9ce:	e8 93 dd ff ff       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    b9d3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b9d7:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    b9db:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    b9df:	48 89 d6             	mov    %rdx,%rsi
    b9e2:	48 89 c7             	mov    %rax,%rdi
    b9e5:	e8 31 1a 00 00       	call   d41b <_ZSt3maxImERKT_S2_S2_>
    b9ea:	48 8b 00             	mov    (%rax),%rax
    b9ed:	48 01 d8             	add    %rbx,%rax
    b9f0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    b9f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b9f8:	48 89 c7             	mov    %rax,%rdi
    b9fb:	e8 66 dd ff ff       	call   9766 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    ba00:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    ba04:	72 12                	jb     ba18 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
    ba06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ba0a:	48 89 c7             	mov    %rax,%rdi
    ba0d:	e8 0a ff ff ff       	call   b91c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    ba12:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    ba16:	73 0e                	jae    ba26 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
    ba18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ba1c:	48 89 c7             	mov    %rax,%rdi
    ba1f:	e8 f8 fe ff ff       	call   b91c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    ba24:	eb 04                	jmp    ba2a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
    ba26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    ba2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ba2e:	c9                   	leave
    ba2f:	c3                   	ret

000000000000ba30 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ba30:	55                   	push   %rbp
    ba31:	48 89 e5             	mov    %rsp,%rbp
    ba34:	48 83 ec 10          	sub    $0x10,%rsp
    ba38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ba40:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ba45:	74 15                	je     ba5c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    ba47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba4b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba4f:	48 89 d6             	mov    %rdx,%rsi
    ba52:	48 89 c7             	mov    %rax,%rdi
    ba55:	e8 ec 19 00 00       	call   d446 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    ba5a:	eb 05                	jmp    ba61 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    ba5c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ba61:	c9                   	leave
    ba62:	c3                   	ret

000000000000ba63 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    ba63:	55                   	push   %rbp
    ba64:	48 89 e5             	mov    %rsp,%rbp
    ba67:	48 83 ec 20          	sub    $0x20,%rsp
    ba6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba6f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba73:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    ba77:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    ba7b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ba7f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba83:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    ba87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba8b:	48 89 c7             	mov    %rax,%rdi
    ba8e:	e8 dd 19 00 00       	call   d470 <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    ba93:	c9                   	leave
    ba94:	c3                   	ret
    ba95:	90                   	nop

000000000000ba96 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    ba96:	55                   	push   %rbp
    ba97:	48 89 e5             	mov    %rsp,%rbp
    ba9a:	48 83 ec 10          	sub    $0x10,%rsp
    ba9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    baa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa6:	48 89 c7             	mov    %rax,%rdi
    baa9:	e8 68 1a 00 00       	call   d516 <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    baae:	48 89 c7             	mov    %rax,%rdi
    bab1:	e8 1d 1a 00 00       	call   d4d3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    bab6:	c9                   	leave
    bab7:	c3                   	ret

000000000000bab8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bab8:	55                   	push   %rbp
    bab9:	48 89 e5             	mov    %rsp,%rbp
    babc:	48 83 ec 20          	sub    $0x20,%rsp
    bac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bac4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bac8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bacc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bad4:	48 89 d6             	mov    %rdx,%rsi
    bad7:	48 89 c7             	mov    %rax,%rdi
    bada:	e8 45 1a 00 00       	call   d524 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    badf:	c9                   	leave
    bae0:	c3                   	ret
    bae1:	90                   	nop

000000000000bae2 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    bae2:	55                   	push   %rbp
    bae3:	48 89 e5             	mov    %rsp,%rbp
    bae6:	53                   	push   %rbx
    bae7:	48 83 ec 38          	sub    $0x38,%rsp
    baeb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    baef:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    baf3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    baf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bafb:	48 89 c7             	mov    %rax,%rdi
    bafe:	e8 93 ff ff ff       	call   ba96 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    bb03:	48 89 c3             	mov    %rax,%rbx
    bb06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb0a:	48 89 c7             	mov    %rax,%rdi
    bb0d:	e8 f4 de ff ff       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    bb12:	48 29 c3             	sub    %rax,%rbx
    bb15:	48 89 da             	mov    %rbx,%rdx
    bb18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bb1c:	48 39 c2             	cmp    %rax,%rdx
    bb1f:	0f 92 c0             	setb   %al
    bb22:	84 c0                	test   %al,%al
    bb24:	74 0c                	je     bb32 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    bb26:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    bb2a:	48 89 c7             	mov    %rax,%rdi
    bb2d:	e8 be 75 ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    bb32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb36:	48 89 c7             	mov    %rax,%rdi
    bb39:	e8 c8 de ff ff       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    bb3e:	48 89 c3             	mov    %rax,%rbx
    bb41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb45:	48 89 c7             	mov    %rax,%rdi
    bb48:	e8 b9 de ff ff       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    bb4d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    bb51:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    bb55:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    bb59:	48 89 d6             	mov    %rdx,%rsi
    bb5c:	48 89 c7             	mov    %rax,%rdi
    bb5f:	e8 b7 18 00 00       	call   d41b <_ZSt3maxImERKT_S2_S2_>
    bb64:	48 8b 00             	mov    (%rax),%rax
    bb67:	48 01 d8             	add    %rbx,%rax
    bb6a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    bb6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb72:	48 89 c7             	mov    %rax,%rdi
    bb75:	e8 8c de ff ff       	call   9a06 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    bb7a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    bb7e:	72 12                	jb     bb92 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
    bb80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb84:	48 89 c7             	mov    %rax,%rdi
    bb87:	e8 0a ff ff ff       	call   ba96 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    bb8c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    bb90:	73 0e                	jae    bba0 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
    bb92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb96:	48 89 c7             	mov    %rax,%rdi
    bb99:	e8 f8 fe ff ff       	call   ba96 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    bb9e:	eb 04                	jmp    bba4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
    bba0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    bba4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bba8:	c9                   	leave
    bba9:	c3                   	ret

000000000000bbaa <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    bbaa:	55                   	push   %rbp
    bbab:	48 89 e5             	mov    %rsp,%rbp
    bbae:	48 83 ec 10          	sub    $0x10,%rsp
    bbb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    bbba:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bbbf:	74 15                	je     bbd6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    bbc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bbc9:	48 89 d6             	mov    %rdx,%rsi
    bbcc:	48 89 c7             	mov    %rax,%rdi
    bbcf:	e8 79 19 00 00       	call   d54d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    bbd4:	eb 05                	jmp    bbdb <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    bbd6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    bbdb:	c9                   	leave
    bbdc:	c3                   	ret

000000000000bbdd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    bbdd:	55                   	push   %rbp
    bbde:	48 89 e5             	mov    %rsp,%rbp
    bbe1:	48 83 ec 20          	sub    $0x20,%rsp
    bbe5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbe9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    bbf1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    bbf5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    bbf9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbfd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    bc01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc05:	48 89 c7             	mov    %rax,%rdi
    bc08:	e8 6a 19 00 00       	call   d577 <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    bc0d:	c9                   	leave
    bc0e:	c3                   	ret

000000000000bc0f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bc0f:	55                   	push   %rbp
    bc10:	48 89 e5             	mov    %rsp,%rbp
    bc13:	48 83 ec 20          	sub    $0x20,%rsp
    bc17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bc1b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bc22:	ff ff 0f 
    bc25:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bc29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bc2d:	48 89 c7             	mov    %rax,%rdi
    bc30:	e8 a5 19 00 00       	call   d5da <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    bc35:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bc39:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bc3d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc41:	48 89 d6             	mov    %rdx,%rsi
    bc44:	48 89 c7             	mov    %rax,%rdi
    bc47:	e8 e5 88 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    bc4c:	48 8b 00             	mov    (%rax),%rax
      }
    bc4f:	c9                   	leave
    bc50:	c3                   	ret
    bc51:	90                   	nop

000000000000bc52 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    bc52:	55                   	push   %rbp
    bc53:	48 89 e5             	mov    %rsp,%rbp
    bc56:	48 83 ec 10          	sub    $0x10,%rsp
    bc5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    bc62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc6a:	48 89 d6             	mov    %rdx,%rsi
    bc6d:	48 89 c7             	mov    %rax,%rdi
    bc70:	e8 7f 19 00 00       	call   d5f4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    bc75:	90                   	nop
    bc76:	c9                   	leave
    bc77:	c3                   	ret

000000000000bc78 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bc78:	55                   	push   %rbp
    bc79:	48 89 e5             	mov    %rsp,%rbp
    bc7c:	48 83 ec 10          	sub    $0x10,%rsp
    bc80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    bc88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc90:	48 89 d6             	mov    %rdx,%rsi
    bc93:	48 89 c7             	mov    %rax,%rdi
    bc96:	e8 b7 ff ff ff       	call   bc52 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    bc9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9f:	48 89 c7             	mov    %rax,%rdi
    bca2:	e8 5d 19 00 00       	call   d604 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    bca7:	90                   	nop
    bca8:	c9                   	leave
    bca9:	c3                   	ret

000000000000bcaa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    bcaa:	55                   	push   %rbp
    bcab:	48 89 e5             	mov    %rsp,%rbp
    bcae:	48 83 ec 10          	sub    $0x10,%rsp
    bcb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    bcba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bcbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcc2:	48 89 d6             	mov    %rdx,%rsi
    bcc5:	48 89 c7             	mov    %rax,%rdi
    bcc8:	e8 65 19 00 00       	call   d632 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    bccd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bcd1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    bcd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd8:	48 8b 10             	mov    (%rax),%rdx
    bcdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcdf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    bce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bce7:	48 8b 00             	mov    (%rax),%rax
    bcea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bcee:	48 c1 e2 03          	shl    $0x3,%rdx
    bcf2:	48 01 c2             	add    %rax,%rdx
    bcf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    bcfd:	90                   	nop
    bcfe:	c9                   	leave
    bcff:	c3                   	ret

000000000000bd00 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    bd00:	55                   	push   %rbp
    bd01:	48 89 e5             	mov    %rsp,%rbp
    bd04:	48 83 ec 20          	sub    $0x20,%rsp
    bd08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    bd14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bd19:	74 17                	je     bd32 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    bd1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bd27:	48 89 ce             	mov    %rcx,%rsi
    bd2a:	48 89 c7             	mov    %rax,%rdi
    bd2d:	e8 33 19 00 00       	call   d665 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    bd32:	90                   	nop
    bd33:	c9                   	leave
    bd34:	c3                   	ret

000000000000bd35 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    bd35:	55                   	push   %rbp
    bd36:	48 89 e5             	mov    %rsp,%rbp
    bd39:	48 83 ec 20          	sub    $0x20,%rsp
    bd3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd45:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bd49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd51:	48 89 d6             	mov    %rdx,%rsi
    bd54:	48 89 c7             	mov    %rax,%rdi
    bd57:	e8 37 19 00 00       	call   d693 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    bd5c:	c9                   	leave
    bd5d:	c3                   	ret

000000000000bd5e <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bd5e:	55                   	push   %rbp
    bd5f:	48 89 e5             	mov    %rsp,%rbp
    bd62:	48 83 ec 10          	sub    $0x10,%rsp
    bd66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bd6e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd76:	48 89 d6             	mov    %rdx,%rsi
    bd79:	48 89 c7             	mov    %rax,%rdi
    bd7c:	e8 3b 19 00 00       	call   d6bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    bd81:	90                   	nop
    bd82:	c9                   	leave
    bd83:	c3                   	ret

000000000000bd84 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    bd84:	55                   	push   %rbp
    bd85:	48 89 e5             	mov    %rsp,%rbp
    bd88:	48 83 ec 20          	sub    $0x20,%rsp
    bd8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    bd90:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    bd97:	55 55 05 
    bd9a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    bd9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bda2:	48 89 c7             	mov    %rax,%rdi
    bda5:	e8 21 19 00 00       	call   d6cb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    bdaa:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    bdae:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    bdb2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bdb6:	48 89 d6             	mov    %rdx,%rsi
    bdb9:	48 89 c7             	mov    %rax,%rdi
    bdbc:	e8 70 87 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    bdc1:	48 8b 00             	mov    (%rax),%rax
      }
    bdc4:	c9                   	leave
    bdc5:	c3                   	ret

000000000000bdc6 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    bdc6:	55                   	push   %rbp
    bdc7:	48 89 e5             	mov    %rsp,%rbp
    bdca:	48 83 ec 10          	sub    $0x10,%rsp
    bdce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    bdd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdde:	48 89 d6             	mov    %rdx,%rsi
    bde1:	48 89 c7             	mov    %rax,%rdi
    bde4:	e8 fd 18 00 00       	call   d6e6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    bde9:	90                   	nop
    bdea:	c9                   	leave
    bdeb:	c3                   	ret

000000000000bdec <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    bdec:	55                   	push   %rbp
    bded:	48 89 e5             	mov    %rsp,%rbp
    bdf0:	48 83 ec 10          	sub    $0x10,%rsp
    bdf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    bdfc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be04:	48 89 d6             	mov    %rdx,%rsi
    be07:	48 89 c7             	mov    %rax,%rdi
    be0a:	e8 b7 ff ff ff       	call   bdc6 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    be0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be13:	48 89 c7             	mov    %rax,%rdi
    be16:	e8 db 18 00 00       	call   d6f6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    be1b:	90                   	nop
    be1c:	c9                   	leave
    be1d:	c3                   	ret

000000000000be1e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    be1e:	55                   	push   %rbp
    be1f:	48 89 e5             	mov    %rsp,%rbp
    be22:	48 83 ec 10          	sub    $0x10,%rsp
    be26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    be2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be36:	48 89 d6             	mov    %rdx,%rsi
    be39:	48 89 c7             	mov    %rax,%rdi
    be3c:	e8 e3 18 00 00       	call   d724 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    be41:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    be45:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    be48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be4c:	48 8b 10             	mov    (%rax),%rdx
    be4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be53:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    be57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be5b:	48 8b 08             	mov    (%rax),%rcx
    be5e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be62:	48 89 d0             	mov    %rdx,%rax
    be65:	48 01 c0             	add    %rax,%rax
    be68:	48 01 d0             	add    %rdx,%rax
    be6b:	48 c1 e0 03          	shl    $0x3,%rax
    be6f:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    be73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be77:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    be7b:	90                   	nop
    be7c:	c9                   	leave
    be7d:	c3                   	ret

000000000000be7e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    be7e:	55                   	push   %rbp
    be7f:	48 89 e5             	mov    %rsp,%rbp
    be82:	48 83 ec 20          	sub    $0x20,%rsp
    be86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    be92:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    be97:	74 17                	je     beb0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    be99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be9d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bea1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bea5:	48 89 ce             	mov    %rcx,%rsi
    bea8:	48 89 c7             	mov    %rax,%rdi
    beab:	e8 a7 18 00 00       	call   d757 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    beb0:	90                   	nop
    beb1:	c9                   	leave
    beb2:	c3                   	ret

000000000000beb3 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    beb3:	55                   	push   %rbp
    beb4:	48 89 e5             	mov    %rsp,%rbp
    beb7:	48 83 ec 20          	sub    $0x20,%rsp
    bebb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bebf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bec3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    bec7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    becb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    becf:	48 89 d6             	mov    %rdx,%rsi
    bed2:	48 89 c7             	mov    %rax,%rdi
    bed5:	e8 ab 18 00 00       	call   d785 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    beda:	c9                   	leave
    bedb:	c3                   	ret

000000000000bedc <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bedc:	55                   	push   %rbp
    bedd:	48 89 e5             	mov    %rsp,%rbp
    bee0:	48 83 ec 10          	sub    $0x10,%rsp
    bee4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bee8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    beec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bef4:	48 89 d6             	mov    %rdx,%rsi
    bef7:	48 89 c7             	mov    %rax,%rdi
    befa:	e8 af 18 00 00       	call   d7ae <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    beff:	90                   	nop
    bf00:	c9                   	leave
    bf01:	c3                   	ret

000000000000bf02 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    bf02:	55                   	push   %rbp
    bf03:	48 89 e5             	mov    %rsp,%rbp
    bf06:	53                   	push   %rbx
    bf07:	48 83 ec 18          	sub    $0x18,%rsp
    bf0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf0f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    bf13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bf17:	48 89 c7             	mov    %rax,%rdi
    bf1a:	e8 f3 e1 ff ff       	call   a112 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    bf1f:	48 89 c3             	mov    %rax,%rbx
    bf22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf26:	48 89 c7             	mov    %rax,%rdi
    bf29:	e8 8f 18 00 00       	call   d7bd <_ZSt11__addressofIjEPT_RS0_>
    bf2e:	48 89 de             	mov    %rbx,%rsi
    bf31:	48 89 c7             	mov    %rax,%rdi
    bf34:	e8 92 18 00 00       	call   d7cb <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>
	  this->_M_engaged = true;
    bf39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf3d:	c6 40 04 01          	movb   $0x1,0x4(%rax)
	}
    bf41:	90                   	nop
    bf42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bf46:	c9                   	leave
    bf47:	c3                   	ret

000000000000bf48 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>:
    bf48:	55                   	push   %rbp
    bf49:	48 89 e5             	mov    %rsp,%rbp
    bf4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf50:	90                   	nop
    bf51:	5d                   	pop    %rbp
    bf52:	c3                   	ret

000000000000bf53 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    bf53:	55                   	push   %rbp
    bf54:	48 89 e5             	mov    %rsp,%rbp
    bf57:	48 83 ec 20          	sub    $0x20,%rsp
    bf5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf63:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    bf67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf6b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bf6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf73:	48 89 ce             	mov    %rcx,%rsi
    bf76:	48 89 c7             	mov    %rax,%rdi
    bf79:	e8 8a 18 00 00       	call   d808 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>
    bf7e:	90                   	nop
    bf7f:	c9                   	leave
    bf80:	c3                   	ret

000000000000bf81 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    bf81:	55                   	push   %rbp
    bf82:	48 89 e5             	mov    %rsp,%rbp
    bf85:	48 83 ec 10          	sub    $0x10,%rsp
    bf89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf8d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    bf91:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf99:	48 89 d6             	mov    %rdx,%rsi
    bf9c:	48 89 c7             	mov    %rax,%rdi
    bf9f:	e8 9e 18 00 00       	call   d842 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>
    }
    bfa4:	90                   	nop
    bfa5:	c9                   	leave
    bfa6:	c3                   	ret
    bfa7:	90                   	nop

000000000000bfa8 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    bfa8:	55                   	push   %rbp
    bfa9:	48 89 e5             	mov    %rsp,%rbp
    bfac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bfb4:	90                   	nop
    bfb5:	5d                   	pop    %rbp
    bfb6:	c3                   	ret
    bfb7:	90                   	nop

000000000000bfb8 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
    bfb8:	55                   	push   %rbp
    bfb9:	48 89 e5             	mov    %rsp,%rbp
    bfbc:	48 83 ec 10          	sub    $0x10,%rsp
    bfc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bfc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfcc:	48 89 c7             	mov    %rax,%rdi
    bfcf:	e8 7e 18 00 00       	call   d852 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>
    bfd4:	90                   	nop
    bfd5:	c9                   	leave
    bfd6:	c3                   	ret
    bfd7:	90                   	nop

000000000000bfd8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
    bfd8:	55                   	push   %rbp
    bfd9:	48 89 e5             	mov    %rsp,%rbp
    bfdc:	48 83 ec 20          	sub    $0x20,%rsp
    bfe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfe4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bfe8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
    bfec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bff0:	48 89 c7             	mov    %rax,%rdi
    bff3:	e8 65 18 00 00       	call   d85d <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>
    bff8:	48 89 c2             	mov    %rax,%rdx
    bffb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfff:	48 89 d6             	mov    %rdx,%rsi
    c002:	48 89 c7             	mov    %rax,%rdi
    c005:	e8 62 18 00 00       	call   d86c <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>
    c00a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c00e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c012:	48 89 d6             	mov    %rdx,%rsi
    c015:	48 89 c7             	mov    %rax,%rdi
    c018:	e8 75 18 00 00       	call   d892 <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>
    c01d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c021:	48 83 c0 08          	add    $0x8,%rax
    c025:	48 89 c7             	mov    %rax,%rdi
    c028:	e8 bf ae ff ff       	call   6eec <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    c02d:	90                   	nop
    c02e:	c9                   	leave
    c02f:	c3                   	ret

000000000000c030 <_ZNKSt16initializer_listIjE4sizeEv>:
      size() const noexcept { return _M_len; }
    c030:	55                   	push   %rbp
    c031:	48 89 e5             	mov    %rsp,%rbp
    c034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c03c:	48 8b 40 08          	mov    0x8(%rax),%rax
    c040:	5d                   	pop    %rbp
    c041:	c3                   	ret

000000000000c042 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>:
	_Alloc_node(_Rb_tree& __t)
    c042:	55                   	push   %rbp
    c043:	48 89 e5             	mov    %rsp,%rbp
    c046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c04a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__t) { }
    c04e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c052:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c056:	48 89 10             	mov    %rdx,(%rax)
    c059:	90                   	nop
    c05a:	5d                   	pop    %rbp
    c05b:	c3                   	ret

000000000000c05c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c05c:	55                   	push   %rbp
    c05d:	48 89 e5             	mov    %rsp,%rbp
    c060:	48 83 ec 20          	sub    $0x20,%rsp
    c064:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    c068:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c06c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c070:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c074:	48 89 d6             	mov    %rdx,%rsi
    c077:	48 89 c7             	mov    %rax,%rdi
    c07a:	e8 23 18 00 00       	call   d8a2 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
    c07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c083:	c9                   	leave
    c084:	c3                   	ret
    c085:	90                   	nop

000000000000c086 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    c086:	55                   	push   %rbp
    c087:	48 89 e5             	mov    %rsp,%rbp
    c08a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c08e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    c092:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c096:	48 8b 10             	mov    (%rax),%rdx
    c099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c09d:	48 89 10             	mov    %rdx,(%rax)
    c0a0:	90                   	nop
    c0a1:	5d                   	pop    %rbp
    c0a2:	c3                   	ret
    c0a3:	90                   	nop

000000000000c0a4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    c0a4:	55                   	push   %rbp
    c0a5:	48 89 e5             	mov    %rsp,%rbp
    c0a8:	48 83 ec 40          	sub    $0x40,%rsp
    c0ac:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c0b0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c0b4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    c0b8:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
    c0bc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c0c0:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    c0c4:	48 89 d6             	mov    %rdx,%rsi
    c0c7:	48 89 c7             	mov    %rax,%rdi
    c0ca:	e8 3b 1c 00 00       	call   dd0a <_ZNKSt9_IdentityIjEclERKj>
    c0cf:	48 89 c2             	mov    %rax,%rdx
    c0d2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c0d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c0da:	48 89 ce             	mov    %rcx,%rsi
    c0dd:	48 89 c7             	mov    %rax,%rdi
    c0e0:	e8 d7 17 00 00       	call   d8bc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>
    c0e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c0e9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__res.second)
    c0ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c0f1:	48 85 c0             	test   %rax,%rax
    c0f4:	74 2c                	je     c122 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x7e>
	return _M_insert_(__res.first, __res.second,
    c0f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c0fa:	48 89 c7             	mov    %rax,%rdi
    c0fd:	e8 1a 1c 00 00       	call   dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
    c102:	48 89 c1             	mov    %rax,%rcx
    c105:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c109:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c10d:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    c111:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c115:	49 89 f8             	mov    %rdi,%r8
    c118:	48 89 c7             	mov    %rax,%rdi
    c11b:	e8 0a 1c 00 00       	call   dd2a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>
			  __node_gen);
    c120:	eb 17                	jmp    c139 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x95>
      return iterator(__res.first);
    c122:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c126:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c12a:	48 89 d6             	mov    %rdx,%rsi
    c12d:	48 89 c7             	mov    %rax,%rdi
    c130:	e8 6d 17 00 00       	call   d8a2 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
    c135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    c139:	c9                   	leave
    c13a:	c3                   	ret
    c13b:	90                   	nop

000000000000c13c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c13c:	55                   	push   %rbp
    c13d:	48 89 e5             	mov    %rsp,%rbp
    c140:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c144:	90                   	nop
    c145:	5d                   	pop    %rbp
    c146:	c3                   	ret

000000000000c147 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    c147:	55                   	push   %rbp
    c148:	48 89 e5             	mov    %rsp,%rbp
    c14b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    c14f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c153:	48 8b 40 18          	mov    0x18(%rax),%rax
    c157:	5d                   	pop    %rbp
    c158:	c3                   	ret

000000000000c159 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    c159:	55                   	push   %rbp
    c15a:	48 89 e5             	mov    %rsp,%rbp
    c15d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    c161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c165:	48 8b 40 10          	mov    0x10(%rax),%rax
    c169:	5d                   	pop    %rbp
    c16a:	c3                   	ret
    c16b:	90                   	nop

000000000000c16c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    c16c:	55                   	push   %rbp
    c16d:	48 89 e5             	mov    %rsp,%rbp
    c170:	48 83 ec 10          	sub    $0x10,%rsp
    c174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c178:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    c17c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c184:	48 89 d6             	mov    %rdx,%rsi
    c187:	48 89 c7             	mov    %rax,%rdi
    c18a:	e8 8b 1c 00 00       	call   de1a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>
	_M_put_node(__p);
    c18f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c197:	48 89 d6             	mov    %rdx,%rsi
    c19a:	48 89 c7             	mov    %rax,%rdi
    c19d:	e8 b6 1c 00 00       	call   de58 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>
      }
    c1a2:	90                   	nop
    c1a3:	c9                   	leave
    c1a4:	c3                   	ret
    c1a5:	90                   	nop

000000000000c1a6 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    c1a6:	55                   	push   %rbp
    c1a7:	48 89 e5             	mov    %rsp,%rbp
    c1aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    c1ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1b2:	48 8b 40 10          	mov    0x10(%rax),%rax
    c1b6:	5d                   	pop    %rbp
    c1b7:	c3                   	ret

000000000000c1b8 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    c1b8:	55                   	push   %rbp
    c1b9:	48 89 e5             	mov    %rsp,%rbp
    c1bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    c1c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c1cc:	48 89 10             	mov    %rdx,(%rax)
    c1cf:	90                   	nop
    c1d0:	5d                   	pop    %rbp
    c1d1:	c3                   	ret

000000000000c1d2 <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
    c1d2:	55                   	push   %rbp
    c1d3:	48 89 e5             	mov    %rsp,%rbp
    c1d6:	48 83 ec 10          	sub    $0x10,%rsp
    c1da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    c1de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1e2:	48 89 c7             	mov    %rax,%rdi
    c1e5:	e8 a4 1c 00 00       	call   de8e <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
    c1ea:	c9                   	leave
    c1eb:	c3                   	ret

000000000000c1ec <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    c1ec:	55                   	push   %rbp
    c1ed:	48 89 e5             	mov    %rsp,%rbp
    c1f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    c1f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1f8:	5d                   	pop    %rbp
    c1f9:	c3                   	ret

000000000000c1fa <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    c1fa:	55                   	push   %rbp
    c1fb:	48 89 e5             	mov    %rsp,%rbp
    c1fe:	53                   	push   %rbx
    c1ff:	48 83 ec 28          	sub    $0x28,%rsp
    c203:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c207:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c20b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    c20f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c213:	48 89 c6             	mov    %rax,%rsi
    c216:	bf 28 00 00 00       	mov    $0x28,%edi
    c21b:	e8 59 ac ff ff       	call   6e79 <_ZnwmPv>
    c220:	48 89 c3             	mov    %rax,%rbx
    c223:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c227:	48 89 c7             	mov    %rax,%rdi
    c22a:	e8 bd ff ff ff       	call   c1ec <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    c22f:	48 8b 30             	mov    (%rax),%rsi
    c232:	48 8b 78 08          	mov    0x8(%rax),%rdi
    c236:	48 89 33             	mov    %rsi,(%rbx)
    c239:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
    c23d:	48 8b 70 10          	mov    0x10(%rax),%rsi
    c241:	48 8b 78 18          	mov    0x18(%rax),%rdi
    c245:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    c249:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    c24d:	48 8b 40 20          	mov    0x20(%rax),%rax
    c251:	48 89 43 20          	mov    %rax,0x20(%rbx)
    c255:	90                   	nop
    c256:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c25a:	c9                   	leave
    c25b:	c3                   	ret

000000000000c25c <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c25c:	55                   	push   %rbp
    c25d:	48 89 e5             	mov    %rsp,%rbp
    c260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c264:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c268:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c26c:	48 8b 10             	mov    (%rax),%rdx
    c26f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c273:	48 89 10             	mov    %rdx,(%rax)
    c276:	90                   	nop
    c277:	5d                   	pop    %rbp
    c278:	c3                   	ret
    c279:	90                   	nop

000000000000c27a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    c27a:	55                   	push   %rbp
    c27b:	48 89 e5             	mov    %rsp,%rbp
    c27e:	53                   	push   %rbx
    c27f:	48 83 ec 38          	sub    $0x38,%rsp
    c283:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c287:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c28b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    c28f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c293:	48 89 c7             	mov    %rax,%rdi
    c296:	e8 01 1c 00 00       	call   de9c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
    c29b:	48 89 c3             	mov    %rax,%rbx
    c29e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c2a2:	48 89 c7             	mov    %rax,%rdi
    c2a5:	e8 68 c3 ff ff       	call   8612 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    c2aa:	48 29 c3             	sub    %rax,%rbx
    c2ad:	48 89 da             	mov    %rbx,%rdx
    c2b0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c2b4:	48 39 c2             	cmp    %rax,%rdx
    c2b7:	0f 92 c0             	setb   %al
    c2ba:	84 c0                	test   %al,%al
    c2bc:	74 0c                	je     c2ca <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    c2be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c2c2:	48 89 c7             	mov    %rax,%rdi
    c2c5:	e8 26 6e ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    c2ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c2ce:	48 89 c7             	mov    %rax,%rdi
    c2d1:	e8 3c c3 ff ff       	call   8612 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    c2d6:	48 89 c3             	mov    %rax,%rbx
    c2d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c2dd:	48 89 c7             	mov    %rax,%rdi
    c2e0:	e8 2d c3 ff ff       	call   8612 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    c2e5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c2e9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    c2ed:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c2f1:	48 89 d6             	mov    %rdx,%rsi
    c2f4:	48 89 c7             	mov    %rax,%rdi
    c2f7:	e8 1f 11 00 00       	call   d41b <_ZSt3maxImERKT_S2_S2_>
    c2fc:	48 8b 00             	mov    (%rax),%rax
    c2ff:	48 01 d8             	add    %rbx,%rax
    c302:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    c306:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c30a:	48 89 c7             	mov    %rax,%rdi
    c30d:	e8 00 c3 ff ff       	call   8612 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    c312:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    c316:	72 12                	jb     c32a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xb0>
    c318:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c31c:	48 89 c7             	mov    %rax,%rdi
    c31f:	e8 78 1b 00 00       	call   de9c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
    c324:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    c328:	73 0e                	jae    c338 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xbe>
    c32a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c32e:	48 89 c7             	mov    %rax,%rdi
    c331:	e8 66 1b 00 00       	call   de9c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
    c336:	eb 04                	jmp    c33c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xc2>
    c338:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    c33c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c340:	c9                   	leave
    c341:	c3                   	ret

000000000000c342 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c342:	55                   	push   %rbp
    c343:	48 89 e5             	mov    %rsp,%rbp
    c346:	48 83 ec 20          	sub    $0x20,%rsp
    c34a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c34e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c352:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c356:	48 89 d6             	mov    %rdx,%rsi
    c359:	48 89 c7             	mov    %rax,%rdi
    c35c:	e8 fb fe ff ff       	call   c25c <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c365:	c9                   	leave
    c366:	c3                   	ret

000000000000c367 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    c367:	55                   	push   %rbp
    c368:	48 89 e5             	mov    %rsp,%rbp
    c36b:	53                   	push   %rbx
    c36c:	48 83 ec 18          	sub    $0x18,%rsp
    c370:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c374:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    c378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c37c:	48 89 c7             	mov    %rax,%rdi
    c37f:	e8 96 00 00 00       	call   c41a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    c384:	48 8b 18             	mov    (%rax),%rbx
    c387:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c38b:	48 89 c7             	mov    %rax,%rdi
    c38e:	e8 87 00 00 00       	call   c41a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    c393:	48 8b 00             	mov    (%rax),%rax
    c396:	48 29 c3             	sub    %rax,%rbx
    c399:	48 89 da             	mov    %rbx,%rdx
    c39c:	48 c1 fa 03          	sar    $0x3,%rdx
    c3a0:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    c3a7:	cc cc cc 
    c3aa:	48 0f af c2          	imul   %rdx,%rax
    c3ae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c3b2:	c9                   	leave
    c3b3:	c3                   	ret

000000000000c3b4 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c3b4:	55                   	push   %rbp
    c3b5:	48 89 e5             	mov    %rsp,%rbp
    c3b8:	48 83 ec 10          	sub    $0x10,%rsp
    c3bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c3c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c3c9:	74 15                	je     c3e0 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
    c3cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c3d3:	48 89 d6             	mov    %rdx,%rsi
    c3d6:	48 89 c7             	mov    %rax,%rdi
    c3d9:	e8 e0 1a 00 00       	call   debe <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>
    c3de:	eb 05                	jmp    c3e5 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x31>
    c3e0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c3e5:	c9                   	leave
    c3e6:	c3                   	ret

000000000000c3e7 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    c3e7:	55                   	push   %rbp
    c3e8:	48 89 e5             	mov    %rsp,%rbp
    c3eb:	48 83 ec 20          	sub    $0x20,%rsp
    c3ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    c3fb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    c3ff:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c403:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c407:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    c40b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c40f:	48 89 c7             	mov    %rax,%rdi
    c412:	e8 d1 1a 00 00       	call   dee8 <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    c417:	c9                   	leave
    c418:	c3                   	ret
    c419:	90                   	nop

000000000000c41a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c41a:	55                   	push   %rbp
    c41b:	48 89 e5             	mov    %rsp,%rbp
    c41e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c426:	5d                   	pop    %rbp
    c427:	c3                   	ret

000000000000c428 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() const noexcept
    c428:	55                   	push   %rbp
    c429:	48 89 e5             	mov    %rsp,%rbp
    c42c:	48 83 ec 10          	sub    $0x10,%rsp
    c430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    c434:	e8 1b aa ff ff       	call   6e54 <_ZSt23__is_constant_evaluatedv>
    c439:	84 c0                	test   %al,%al
    c43b:	74 1a                	je     c457 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    c43d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c441:	48 89 c7             	mov    %rax,%rdi
    c444:	e8 91 ad ff ff       	call   71da <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    c449:	83 f0 01             	xor    $0x1,%eax
    c44c:	84 c0                	test   %al,%al
    c44e:	74 07                	je     c457 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    c450:	b8 01 00 00 00       	mov    $0x1,%eax
    c455:	eb 05                	jmp    c45c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    c457:	b8 00 00 00 00       	mov    $0x0,%eax
    c45c:	84 c0                	test   %al,%al
	return static_cast<const _Dp*>(this)->_M_payload._M_get();
    c45e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c462:	48 89 c7             	mov    %rax,%rdi
    c465:	e8 e2 1a 00 00       	call   df4c <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>
      }
    c46a:	c9                   	leave
    c46b:	c3                   	ret

000000000000c46c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    c46c:	55                   	push   %rbp
    c46d:	48 89 e5             	mov    %rsp,%rbp
    c470:	48 83 ec 10          	sub    $0x10,%rsp
    c474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    c478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c47c:	48 89 c7             	mov    %rax,%rdi
    c47f:	e8 18 1b 00 00       	call   df9c <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c484:	48 89 c7             	mov    %rax,%rdi
    c487:	e8 ce 1a 00 00       	call   df5a <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    c48c:	c9                   	leave
    c48d:	c3                   	ret

000000000000c48e <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    c48e:	55                   	push   %rbp
    c48f:	48 89 e5             	mov    %rsp,%rbp
    c492:	48 83 ec 20          	sub    $0x20,%rsp
    c496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c49a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c49e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    c4a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c4a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4aa:	48 89 d6             	mov    %rdx,%rsi
    c4ad:	48 89 c7             	mov    %rax,%rdi
    c4b0:	e8 f5 1a 00 00       	call   dfaa <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    c4b5:	c9                   	leave
    c4b6:	c3                   	ret
    c4b7:	90                   	nop

000000000000c4b8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    c4b8:	55                   	push   %rbp
    c4b9:	48 89 e5             	mov    %rsp,%rbp
    c4bc:	53                   	push   %rbx
    c4bd:	48 83 ec 38          	sub    $0x38,%rsp
    c4c1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c4c5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c4c9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    c4cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4d1:	48 89 c7             	mov    %rax,%rdi
    c4d4:	e8 93 ff ff ff       	call   c46c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    c4d9:	48 89 c3             	mov    %rax,%rbx
    c4dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4e0:	48 89 c7             	mov    %rax,%rdi
    c4e3:	e8 90 c4 ff ff       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    c4e8:	48 29 c3             	sub    %rax,%rbx
    c4eb:	48 89 da             	mov    %rbx,%rdx
    c4ee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c4f2:	48 39 c2             	cmp    %rax,%rdx
    c4f5:	0f 92 c0             	setb   %al
    c4f8:	84 c0                	test   %al,%al
    c4fa:	74 0c                	je     c508 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    c4fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c500:	48 89 c7             	mov    %rax,%rdi
    c503:	e8 e8 6b ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    c508:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c50c:	48 89 c7             	mov    %rax,%rdi
    c50f:	e8 64 c4 ff ff       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    c514:	48 89 c3             	mov    %rax,%rbx
    c517:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c51b:	48 89 c7             	mov    %rax,%rdi
    c51e:	e8 55 c4 ff ff       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    c523:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c527:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    c52b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c52f:	48 89 d6             	mov    %rdx,%rsi
    c532:	48 89 c7             	mov    %rax,%rdi
    c535:	e8 e1 0e 00 00       	call   d41b <_ZSt3maxImERKT_S2_S2_>
    c53a:	48 8b 00             	mov    (%rax),%rax
    c53d:	48 01 d8             	add    %rbx,%rax
    c540:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    c544:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c548:	48 89 c7             	mov    %rax,%rdi
    c54b:	e8 28 c4 ff ff       	call   8978 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    c550:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    c554:	72 12                	jb     c568 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
    c556:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c55a:	48 89 c7             	mov    %rax,%rdi
    c55d:	e8 0a ff ff ff       	call   c46c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    c562:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    c566:	73 0e                	jae    c576 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
    c568:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c56c:	48 89 c7             	mov    %rax,%rdi
    c56f:	e8 f8 fe ff ff       	call   c46c <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    c574:	eb 04                	jmp    c57a <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
    c576:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    c57a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c57e:	c9                   	leave
    c57f:	c3                   	ret

000000000000c580 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c580:	55                   	push   %rbp
    c581:	48 89 e5             	mov    %rsp,%rbp
    c584:	48 83 ec 10          	sub    $0x10,%rsp
    c588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c58c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c590:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c595:	74 15                	je     c5ac <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    c597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c59b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c59f:	48 89 d6             	mov    %rdx,%rsi
    c5a2:	48 89 c7             	mov    %rax,%rdi
    c5a5:	e8 29 1a 00 00       	call   dfd3 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    c5aa:	eb 05                	jmp    c5b1 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    c5ac:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c5b1:	c9                   	leave
    c5b2:	c3                   	ret

000000000000c5b3 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    c5b3:	55                   	push   %rbp
    c5b4:	48 89 e5             	mov    %rsp,%rbp
    c5b7:	48 83 ec 20          	sub    $0x20,%rsp
    c5bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5c3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    c5c7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    c5cb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c5cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c5d3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    c5d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5db:	48 89 c7             	mov    %rax,%rdi
    c5de:	e8 1a 1a 00 00       	call   dffd <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    c5e3:	c9                   	leave
    c5e4:	c3                   	ret
    c5e5:	90                   	nop

000000000000c5e6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    c5e6:	55                   	push   %rbp
    c5e7:	48 89 e5             	mov    %rsp,%rbp
    c5ea:	48 83 ec 10          	sub    $0x10,%rsp
    c5ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    c5f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5f6:	48 89 c7             	mov    %rax,%rdi
    c5f9:	e8 a4 1a 00 00       	call   e0a2 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c5fe:	48 89 c7             	mov    %rax,%rdi
    c601:	e8 5a 1a 00 00       	call   e060 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
    c606:	c9                   	leave
    c607:	c3                   	ret

000000000000c608 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    c608:	55                   	push   %rbp
    c609:	48 89 e5             	mov    %rsp,%rbp
    c60c:	48 83 ec 20          	sub    $0x20,%rsp
    c610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c614:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c618:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    c61c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c624:	48 89 d6             	mov    %rdx,%rsi
    c627:	48 89 c7             	mov    %rax,%rdi
    c62a:	e8 81 1a 00 00       	call   e0b0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
    c62f:	c9                   	leave
    c630:	c3                   	ret
    c631:	90                   	nop

000000000000c632 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    c632:	55                   	push   %rbp
    c633:	48 89 e5             	mov    %rsp,%rbp
    c636:	53                   	push   %rbx
    c637:	48 83 ec 38          	sub    $0x38,%rsp
    c63b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c63f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c643:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    c647:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c64b:	48 89 c7             	mov    %rax,%rdi
    c64e:	e8 93 ff ff ff       	call   c5e6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    c653:	48 89 c3             	mov    %rax,%rbx
    c656:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c65a:	48 89 c7             	mov    %rax,%rdi
    c65d:	e8 c6 e3 ff ff       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    c662:	48 29 c3             	sub    %rax,%rbx
    c665:	48 89 da             	mov    %rbx,%rdx
    c668:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c66c:	48 39 c2             	cmp    %rax,%rdx
    c66f:	0f 92 c0             	setb   %al
    c672:	84 c0                	test   %al,%al
    c674:	74 0c                	je     c682 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    c676:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c67a:	48 89 c7             	mov    %rax,%rdi
    c67d:	e8 6e 6a ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    c682:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c686:	48 89 c7             	mov    %rax,%rdi
    c689:	e8 9a e3 ff ff       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    c68e:	48 89 c3             	mov    %rax,%rbx
    c691:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c695:	48 89 c7             	mov    %rax,%rdi
    c698:	e8 8b e3 ff ff       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    c69d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    c6a1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    c6a5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c6a9:	48 89 d6             	mov    %rdx,%rsi
    c6ac:	48 89 c7             	mov    %rax,%rdi
    c6af:	e8 67 0d 00 00       	call   d41b <_ZSt3maxImERKT_S2_S2_>
    c6b4:	48 8b 00             	mov    (%rax),%rax
    c6b7:	48 01 d8             	add    %rbx,%rax
    c6ba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    c6be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c6c2:	48 89 c7             	mov    %rax,%rdi
    c6c5:	e8 5e e3 ff ff       	call   aa28 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    c6ca:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    c6ce:	72 12                	jb     c6e2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
    c6d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c6d4:	48 89 c7             	mov    %rax,%rdi
    c6d7:	e8 0a ff ff ff       	call   c5e6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    c6dc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    c6e0:	73 0e                	jae    c6f0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
    c6e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c6e6:	48 89 c7             	mov    %rax,%rdi
    c6e9:	e8 f8 fe ff ff       	call   c5e6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    c6ee:	eb 04                	jmp    c6f4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
    c6f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    c6f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6f8:	c9                   	leave
    c6f9:	c3                   	ret

000000000000c6fa <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c6fa:	55                   	push   %rbp
    c6fb:	48 89 e5             	mov    %rsp,%rbp
    c6fe:	48 83 ec 10          	sub    $0x10,%rsp
    c702:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c706:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c70a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c70f:	74 15                	je     c726 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
    c711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c715:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c719:	48 89 d6             	mov    %rdx,%rsi
    c71c:	48 89 c7             	mov    %rax,%rdi
    c71f:	e8 b5 19 00 00       	call   e0d9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
    c724:	eb 05                	jmp    c72b <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
    c726:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c72b:	c9                   	leave
    c72c:	c3                   	ret

000000000000c72d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    c72d:	55                   	push   %rbp
    c72e:	48 89 e5             	mov    %rsp,%rbp
    c731:	48 83 ec 20          	sub    $0x20,%rsp
    c735:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c739:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c73d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    c741:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    c745:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c749:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c74d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    c751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c755:	48 89 c7             	mov    %rax,%rdi
    c758:	e8 a6 19 00 00       	call   e103 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    c75d:	c9                   	leave
    c75e:	c3                   	ret

000000000000c75f <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    c75f:	55                   	push   %rbp
    c760:	48 89 e5             	mov    %rsp,%rbp
    c763:	48 83 ec 20          	sub    $0x20,%rsp
    c767:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    c76b:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    c772:	ff ff 7f 
    c775:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    c779:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c77d:	48 89 c7             	mov    %rax,%rdi
    c780:	e8 e1 19 00 00       	call   e166 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    c785:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    c789:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    c78d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c791:	48 89 d6             	mov    %rdx,%rsi
    c794:	48 89 c7             	mov    %rax,%rdi
    c797:	e8 95 7d ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    c79c:	48 8b 00             	mov    (%rax),%rax
      }
    c79f:	c9                   	leave
    c7a0:	c3                   	ret
    c7a1:	90                   	nop

000000000000c7a2 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    c7a2:	55                   	push   %rbp
    c7a3:	48 89 e5             	mov    %rsp,%rbp
    c7a6:	48 83 ec 10          	sub    $0x10,%rsp
    c7aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    c7b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c7b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ba:	48 89 d6             	mov    %rdx,%rsi
    c7bd:	48 89 c7             	mov    %rax,%rdi
    c7c0:	e8 6b 6c ff ff       	call   3430 <_ZNSaIcEC2ERKS_@plt>
    c7c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c9:	48 89 c7             	mov    %rax,%rdi
    c7cc:	e8 af 19 00 00       	call   e180 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    c7d1:	90                   	nop
    c7d2:	c9                   	leave
    c7d3:	c3                   	ret

000000000000c7d4 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    c7d4:	55                   	push   %rbp
    c7d5:	48 89 e5             	mov    %rsp,%rbp
    c7d8:	48 83 ec 10          	sub    $0x10,%rsp
    c7dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    c7e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c7e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ec:	48 89 d6             	mov    %rdx,%rsi
    c7ef:	48 89 c7             	mov    %rax,%rdi
    c7f2:	e8 b7 19 00 00       	call   e1ae <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    c7f7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c7fb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    c7fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c802:	48 8b 10             	mov    (%rax),%rdx
    c805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c809:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c80d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c811:	48 8b 10             	mov    (%rax),%rdx
    c814:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c818:	48 01 c2             	add    %rax,%rdx
    c81b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c81f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    c823:	90                   	nop
    c824:	c9                   	leave
    c825:	c3                   	ret

000000000000c826 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    c826:	55                   	push   %rbp
    c827:	48 89 e5             	mov    %rsp,%rbp
    c82a:	48 83 ec 20          	sub    $0x20,%rsp
    c82e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c832:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c836:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    c83a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c842:	48 89 d6             	mov    %rdx,%rsi
    c845:	48 89 c7             	mov    %rax,%rdi
    c848:	e8 94 19 00 00       	call   e1e1 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    c84d:	c9                   	leave
    c84e:	c3                   	ret

000000000000c84f <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    c84f:	55                   	push   %rbp
    c850:	48 89 e5             	mov    %rsp,%rbp
    c853:	48 83 ec 10          	sub    $0x10,%rsp
    c857:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c85b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    c85f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c867:	48 89 d6             	mov    %rdx,%rsi
    c86a:	48 89 c7             	mov    %rax,%rdi
    c86d:	e8 98 19 00 00       	call   e20a <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    c872:	90                   	nop
    c873:	c9                   	leave
    c874:	c3                   	ret

000000000000c875 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    c875:	55                   	push   %rbp
    c876:	48 89 e5             	mov    %rsp,%rbp
    c879:	48 83 ec 20          	sub    $0x20,%rsp
    c87d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c881:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c885:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    c889:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c88d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c895:	48 89 ce             	mov    %rcx,%rsi
    c898:	48 89 c7             	mov    %rax,%rdi
    c89b:	e8 7a 19 00 00       	call   e21a <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    c8a0:	90                   	nop
    c8a1:	c9                   	leave
    c8a2:	c3                   	ret

000000000000c8a3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c8a3:	55                   	push   %rbp
    c8a4:	48 89 e5             	mov    %rsp,%rbp
    c8a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c8ab:	90                   	nop
    c8ac:	5d                   	pop    %rbp
    c8ad:	c3                   	ret

000000000000c8ae <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    c8ae:	55                   	push   %rbp
    c8af:	48 89 e5             	mov    %rsp,%rbp
    c8b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    c8ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c8be:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    c8c2:	5d                   	pop    %rbp
    c8c3:	c3                   	ret

000000000000c8c4 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    c8c4:	55                   	push   %rbp
    c8c5:	48 89 e5             	mov    %rsp,%rbp
    c8c8:	48 83 ec 10          	sub    $0x10,%rsp
    c8cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    c8d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8d4:	48 89 c7             	mov    %rax,%rdi
    c8d7:	e8 76 19 00 00       	call   e252 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    c8dc:	c9                   	leave
    c8dd:	c3                   	ret

000000000000c8de <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    c8de:	55                   	push   %rbp
    c8df:	48 89 e5             	mov    %rsp,%rbp
    c8e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    c8e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8ea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    c8f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    c8fc:	00 
    c8fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c901:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    c908:	00 
	{ }
    c909:	90                   	nop
    c90a:	5d                   	pop    %rbp
    c90b:	c3                   	ret

000000000000c90c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    c90c:	55                   	push   %rbp
    c90d:	48 89 e5             	mov    %rsp,%rbp
    c910:	48 83 ec 10          	sub    $0x10,%rsp
    c914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    c91c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c921:	74 15                	je     c938 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    c923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c927:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c92b:	48 89 d6             	mov    %rdx,%rsi
    c92e:	48 89 c7             	mov    %rax,%rdi
    c931:	e8 36 19 00 00       	call   e26c <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    c936:	eb 05                	jmp    c93d <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    c938:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    c93d:	c9                   	leave
    c93e:	c3                   	ret

000000000000c93f <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    c93f:	55                   	push   %rbp
    c940:	48 89 e5             	mov    %rsp,%rbp
    c943:	48 83 ec 20          	sub    $0x20,%rsp
    c947:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c94b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    c94f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    c953:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c957:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c95b:	48 89 d6             	mov    %rdx,%rsi
    c95e:	48 89 c7             	mov    %rax,%rdi
    c961:	e8 30 19 00 00       	call   e296 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    c966:	c9                   	leave
    c967:	c3                   	ret

000000000000c968 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    c968:	55                   	push   %rbp
    c969:	48 89 e5             	mov    %rsp,%rbp
    c96c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c970:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c974:	90                   	nop
    c975:	5d                   	pop    %rbp
    c976:	c3                   	ret
    c977:	90                   	nop

000000000000c978 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    c978:	55                   	push   %rbp
    c979:	48 89 e5             	mov    %rsp,%rbp
    c97c:	48 83 ec 20          	sub    $0x20,%rsp
    c980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c984:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c988:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    c98c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c990:	48 89 d0             	mov    %rdx,%rax
    c993:	48 c1 e0 06          	shl    $0x6,%rax
    c997:	48 01 d0             	add    %rdx,%rax
    c99a:	48 c1 e0 02          	shl    $0x2,%rax
    c99e:	48 89 c2             	mov    %rax,%rdx
    c9a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c9a5:	48 89 d6             	mov    %rdx,%rsi
    c9a8:	48 89 c7             	mov    %rax,%rdi
    c9ab:	e8 e0 68 ff ff       	call   3290 <_ZdlPvm@plt>
      }
    c9b0:	c9                   	leave
    c9b1:	c3                   	ret

000000000000c9b2 <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    c9b2:	55                   	push   %rbp
    c9b3:	48 89 e5             	mov    %rsp,%rbp
    c9b6:	48 83 ec 30          	sub    $0x30,%rsp
    c9ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9be:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c9c2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    c9c6:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    c9ca:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    c9ce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c9d2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c9d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9da:	48 89 ce             	mov    %rcx,%rsi
    c9dd:	48 89 c7             	mov    %rax,%rdi
    c9e0:	e8 11 19 00 00       	call   e2f6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>
    }
    c9e5:	c9                   	leave
    c9e6:	c3                   	ret
    c9e7:	90                   	nop

000000000000c9e8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    c9e8:	55                   	push   %rbp
    c9e9:	48 89 e5             	mov    %rsp,%rbp
    c9ec:	53                   	push   %rbx
    c9ed:	48 83 ec 28          	sub    $0x28,%rsp
    c9f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c9f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    c9fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca01:	48 89 c6             	mov    %rax,%rsi
    ca04:	bf 08 00 00 00       	mov    $0x8,%edi
    ca09:	e8 6b a4 ff ff       	call   6e79 <_ZnwmPv>
    ca0e:	48 89 c3             	mov    %rax,%rbx
    ca11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ca15:	48 89 c7             	mov    %rax,%rdi
    ca18:	e8 2b e6 ff ff       	call   b048 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    ca1d:	48 8b 00             	mov    (%rax),%rax
    ca20:	48 89 03             	mov    %rax,(%rbx)
    ca23:	90                   	nop
    ca24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca28:	c9                   	leave
    ca29:	c3                   	ret

000000000000ca2a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    ca2a:	55                   	push   %rbp
    ca2b:	48 89 e5             	mov    %rsp,%rbp
    ca2e:	53                   	push   %rbx
    ca2f:	48 83 ec 38          	sub    $0x38,%rsp
    ca33:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ca37:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ca3b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    ca3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ca43:	48 89 c7             	mov    %rax,%rdi
    ca46:	e8 d9 18 00 00       	call   e324 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    ca4b:	48 89 c3             	mov    %rax,%rbx
    ca4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ca52:	48 89 c7             	mov    %rax,%rdi
    ca55:	e8 ea ac ff ff       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ca5a:	48 29 c3             	sub    %rax,%rbx
    ca5d:	48 89 da             	mov    %rbx,%rdx
    ca60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ca64:	48 39 c2             	cmp    %rax,%rdx
    ca67:	0f 92 c0             	setb   %al
    ca6a:	84 c0                	test   %al,%al
    ca6c:	74 0c                	je     ca7a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    ca6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ca72:	48 89 c7             	mov    %rax,%rdi
    ca75:	e8 76 66 ff ff       	call   30f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    ca7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ca7e:	48 89 c7             	mov    %rax,%rdi
    ca81:	e8 be ac ff ff       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ca86:	48 89 c3             	mov    %rax,%rbx
    ca89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ca8d:	48 89 c7             	mov    %rax,%rdi
    ca90:	e8 af ac ff ff       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ca95:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ca99:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    ca9d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    caa1:	48 89 d6             	mov    %rdx,%rsi
    caa4:	48 89 c7             	mov    %rax,%rdi
    caa7:	e8 6f 09 00 00       	call   d41b <_ZSt3maxImERKT_S2_S2_>
    caac:	48 8b 00             	mov    (%rax),%rax
    caaf:	48 01 d8             	add    %rbx,%rax
    cab2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    cab6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    caba:	48 89 c7             	mov    %rax,%rdi
    cabd:	e8 82 ac ff ff       	call   7744 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    cac2:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    cac6:	72 12                	jb     cada <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    cac8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cacc:	48 89 c7             	mov    %rax,%rdi
    cacf:	e8 50 18 00 00       	call   e324 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    cad4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    cad8:	73 0e                	jae    cae8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    cada:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cade:	48 89 c7             	mov    %rax,%rdi
    cae1:	e8 3e 18 00 00       	call   e324 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    cae6:	eb 04                	jmp    caec <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    cae8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    caec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    caf0:	c9                   	leave
    caf1:	c3                   	ret

000000000000caf2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    caf2:	55                   	push   %rbp
    caf3:	48 89 e5             	mov    %rsp,%rbp
    caf6:	53                   	push   %rbx
    caf7:	48 83 ec 18          	sub    $0x18,%rsp
    cafb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    caff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
    cb03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb07:	48 89 c7             	mov    %rax,%rdi
    cb0a:	e8 e5 c8 ff ff       	call   93f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cb0f:	48 8b 18             	mov    (%rax),%rbx
    cb12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb16:	48 89 c7             	mov    %rax,%rdi
    cb19:	e8 d6 c8 ff ff       	call   93f4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cb1e:	48 8b 00             	mov    (%rax),%rax
    cb21:	48 89 da             	mov    %rbx,%rdx
    cb24:	48 29 c2             	sub    %rax,%rdx
    cb27:	48 89 d0             	mov    %rdx,%rax
    cb2a:	48 c1 f8 03          	sar    $0x3,%rax
    cb2e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb32:	c9                   	leave
    cb33:	c3                   	ret

000000000000cb34 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    cb34:	55                   	push   %rbp
    cb35:	48 89 e5             	mov    %rsp,%rbp
    cb38:	48 83 ec 20          	sub    $0x20,%rsp
    cb3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    cb48:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    cb4c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    cb50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb54:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    cb58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb5c:	48 89 c7             	mov    %rax,%rdi
    cb5f:	e8 e2 17 00 00       	call   e346 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    cb64:	c9                   	leave
    cb65:	c3                   	ret

000000000000cb66 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    cb66:	55                   	push   %rbp
    cb67:	48 89 e5             	mov    %rsp,%rbp
    cb6a:	48 83 ec 20          	sub    $0x20,%rsp
    cb6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb72:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    cb76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb7a:	48 8b 00             	mov    (%rax),%rax
    cb7d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cb81:	48 c1 e2 03          	shl    $0x3,%rdx
    cb85:	48 f7 da             	neg    %rdx
    cb88:	48 01 d0             	add    %rdx,%rax
    cb8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cb8f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    cb93:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    cb97:	48 89 d6             	mov    %rdx,%rsi
    cb9a:	48 89 c7             	mov    %rax,%rdi
    cb9d:	e8 34 c8 ff ff       	call   93d6 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    cba2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cba6:	c9                   	leave
    cba7:	c3                   	ret

000000000000cba8 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    cba8:	55                   	push   %rbp
    cba9:	48 89 e5             	mov    %rsp,%rbp
    cbac:	48 83 ec 10          	sub    $0x10,%rsp
    cbb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    cbb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbb8:	48 89 c7             	mov    %rax,%rdi
    cbbb:	e8 ea 17 00 00       	call   e3aa <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    cbc0:	c9                   	leave
    cbc1:	c3                   	ret

000000000000cbc2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    cbc2:	55                   	push   %rbp
    cbc3:	48 89 e5             	mov    %rsp,%rbp
    cbc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cbce:	90                   	nop
    cbcf:	5d                   	pop    %rbp
    cbd0:	c3                   	ret
    cbd1:	90                   	nop

000000000000cbd2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    cbd2:	55                   	push   %rbp
    cbd3:	48 89 e5             	mov    %rsp,%rbp
    cbd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    cbda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbde:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    cbe5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbe9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    cbf0:	00 
    cbf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbf5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    cbfc:	00 
	{ }
    cbfd:	90                   	nop
    cbfe:	5d                   	pop    %rbp
    cbff:	c3                   	ret

000000000000cc00 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    cc00:	55                   	push   %rbp
    cc01:	48 89 e5             	mov    %rsp,%rbp
    cc04:	48 83 ec 10          	sub    $0x10,%rsp
    cc08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    cc10:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cc15:	74 15                	je     cc2c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    cc17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc1b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cc1f:	48 89 d6             	mov    %rdx,%rsi
    cc22:	48 89 c7             	mov    %rax,%rdi
    cc25:	e8 9a 17 00 00       	call   e3c4 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    cc2a:	eb 05                	jmp    cc31 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    cc2c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    cc31:	c9                   	leave
    cc32:	c3                   	ret

000000000000cc33 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    cc33:	55                   	push   %rbp
    cc34:	48 89 e5             	mov    %rsp,%rbp
    cc37:	48 83 ec 20          	sub    $0x20,%rsp
    cc3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cc43:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    cc47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cc4b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cc4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc53:	48 89 ce             	mov    %rcx,%rsi
    cc56:	48 89 c7             	mov    %rax,%rdi
    cc59:	e8 90 17 00 00       	call   e3ee <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    cc5e:	90                   	nop
    cc5f:	c9                   	leave
    cc60:	c3                   	ret

000000000000cc61 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    cc61:	55                   	push   %rbp
    cc62:	48 89 e5             	mov    %rsp,%rbp
    cc65:	48 83 ec 20          	sub    $0x20,%rsp
    cc69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    cc71:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    cc75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cc79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc7d:	48 89 d6             	mov    %rdx,%rsi
    cc80:	48 89 c7             	mov    %rax,%rdi
    cc83:	e8 a0 17 00 00       	call   e428 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    cc88:	c9                   	leave
    cc89:	c3                   	ret

000000000000cc8a <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    cc8a:	55                   	push   %rbp
    cc8b:	48 89 e5             	mov    %rsp,%rbp
    cc8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cc96:	90                   	nop
    cc97:	5d                   	pop    %rbp
    cc98:	c3                   	ret
    cc99:	90                   	nop

000000000000cc9a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    cc9a:	55                   	push   %rbp
    cc9b:	48 89 e5             	mov    %rsp,%rbp
    cc9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cca2:	90                   	nop
    cca3:	5d                   	pop    %rbp
    cca4:	c3                   	ret

000000000000cca5 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    cca5:	55                   	push   %rbp
    cca6:	48 89 e5             	mov    %rsp,%rbp
    cca9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ccad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccb1:	5d                   	pop    %rbp
    ccb2:	c3                   	ret
    ccb3:	90                   	nop

000000000000ccb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    ccb4:	55                   	push   %rbp
    ccb5:	48 89 e5             	mov    %rsp,%rbp
    ccb8:	48 83 ec 20          	sub    $0x20,%rsp
    ccbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ccc4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _M_t(__t),
    ccc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cccc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ccd0:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    ccd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccd7:	48 89 c7             	mov    %rax,%rdi
    ccda:	e8 c6 ff ff ff       	call   cca5 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    ccdf:	48 89 c2             	mov    %rax,%rdx
    cce2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cce6:	48 89 d6             	mov    %rdx,%rsi
    cce9:	48 89 c7             	mov    %rax,%rdi
    ccec:	e8 97 17 00 00       	call   e488 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>
    ccf1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ccf5:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    ccf9:	90                   	nop
    ccfa:	c9                   	leave
    ccfb:	c3                   	ret

000000000000ccfc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    ccfc:	55                   	push   %rbp
    ccfd:	48 89 e5             	mov    %rsp,%rbp
    cd00:	48 83 ec 10          	sub    $0x10,%rsp
    cd04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    cd08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd0c:	48 8b 40 08          	mov    0x8(%rax),%rax
    cd10:	48 85 c0             	test   %rax,%rax
    cd13:	74 1a                	je     cd2f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    cd15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd19:	48 8b 00             	mov    (%rax),%rax
    cd1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd20:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    cd24:	48 89 d6             	mov    %rdx,%rsi
    cd27:	48 89 c7             	mov    %rax,%rdi
    cd2a:	e8 2f e8 ff ff       	call   b55e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	}
    cd2f:	90                   	nop
    cd30:	c9                   	leave
    cd31:	c3                   	ret

000000000000cd32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    cd32:	55                   	push   %rbp
    cd33:	48 89 e5             	mov    %rsp,%rbp
    cd36:	53                   	push   %rbx
    cd37:	48 83 ec 78          	sub    $0x78,%rsp
    cd3b:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    cd3f:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    cd43:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    cd47:	48 89 c7             	mov    %rax,%rdi
    cd4a:	e8 c9 c7 ff ff       	call   9518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    cd4f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    cd53:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    cd57:	48 89 c7             	mov    %rax,%rdi
    cd5a:	e8 8f 02 00 00       	call   cfee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
    cd5f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    cd63:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    cd67:	eb 51                	jmp    cdba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x88>
	  __y = __x;
    cd69:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cd6d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    cd71:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    cd75:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cd79:	48 89 c7             	mov    %rax,%rdi
    cd7c:	e8 7f 02 00 00       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    cd81:	48 89 c2             	mov    %rax,%rdx
    cd84:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    cd88:	48 89 c6             	mov    %rax,%rsi
    cd8b:	48 89 df             	mov    %rbx,%rdi
    cd8e:	e8 99 02 00 00       	call   d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    cd93:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    cd96:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    cd9a:	74 0e                	je     cdaa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x78>
    cd9c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cda0:	48 89 c7             	mov    %rax,%rdi
    cda3:	e8 a4 e7 ff ff       	call   b54c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    cda8:	eb 0c                	jmp    cdb6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x84>
    cdaa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cdae:	48 89 c7             	mov    %rax,%rdi
    cdb1:	e8 84 e7 ff ff       	call   b53a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    cdb6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    cdba:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cdbe:	48 85 c0             	test   %rax,%rax
    cdc1:	75 a6                	jne    cd69 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x37>
      iterator __j = iterator(__y);
    cdc3:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    cdc7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cdcb:	48 89 d6             	mov    %rdx,%rsi
    cdce:	48 89 c7             	mov    %rax,%rdi
    cdd1:	e8 8a 01 00 00       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    cdd6:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    cdda:	74 54                	je     ce30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xfe>
	  if (__j == begin())
    cddc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    cde0:	48 89 c7             	mov    %rax,%rdi
    cde3:	e8 d8 03 00 00       	call   d1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
    cde8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    cdec:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    cdf0:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cdf4:	48 89 d6             	mov    %rdx,%rsi
    cdf7:	48 89 c7             	mov    %rax,%rdi
    cdfa:	e8 d1 16 00 00       	call   e4d0 <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    cdff:	84 c0                	test   %al,%al
    ce01:	74 21                	je     ce24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xf2>
	    return _Res(__x, __y);
    ce03:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    ce07:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    ce0b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ce0f:	48 89 ce             	mov    %rcx,%rsi
    ce12:	48 89 c7             	mov    %rax,%rdi
    ce15:	e8 d8 16 00 00       	call   e4f2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
    ce1a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ce1e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    ce22:	eb 7d                	jmp    cea1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
	    --__j;
    ce24:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ce28:	48 89 c7             	mov    %rax,%rdi
    ce2b:	e8 06 17 00 00       	call   e536 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    ce30:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    ce34:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ce38:	48 89 c7             	mov    %rax,%rdi
    ce3b:	e8 1e 17 00 00       	call   e55e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
    ce40:	48 89 c1             	mov    %rax,%rcx
    ce43:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ce47:	48 89 c2             	mov    %rax,%rdx
    ce4a:	48 89 ce             	mov    %rcx,%rsi
    ce4d:	48 89 df             	mov    %rbx,%rdi
    ce50:	e8 d7 01 00 00       	call   d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    ce55:	84 c0                	test   %al,%al
    ce57:	74 21                	je     ce7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x148>
	return _Res(__x, __y);
    ce59:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    ce5d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    ce61:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ce65:	48 89 ce             	mov    %rcx,%rsi
    ce68:	48 89 c7             	mov    %rax,%rdi
    ce6b:	e8 82 16 00 00       	call   e4f2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
    ce70:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ce74:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ce78:	eb 27                	jmp    cea1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
      return _Res(__j._M_node, 0);
    ce7a:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    ce81:	00 
    ce82:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    ce86:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    ce8a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ce8e:	48 89 ce             	mov    %rcx,%rsi
    ce91:	48 89 c7             	mov    %rax,%rdi
    ce94:	e8 df 16 00 00       	call   e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    ce99:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ce9d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    cea1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cea5:	c9                   	leave
    cea6:	c3                   	ret
    cea7:	90                   	nop

000000000000cea8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    cea8:	55                   	push   %rbp
    cea9:	48 89 e5             	mov    %rsp,%rbp
    ceac:	48 83 ec 10          	sub    $0x10,%rsp
    ceb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    ceb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceb8:	48 8b 40 08          	mov    0x8(%rax),%rax
    cebc:	48 89 c7             	mov    %rax,%rdi
    cebf:	e8 3c 01 00 00       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    cec4:	c9                   	leave
    cec5:	c3                   	ret

000000000000cec6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    cec6:	55                   	push   %rbp
    cec7:	48 89 e5             	mov    %rsp,%rbp
    ceca:	48 83 ec 30          	sub    $0x30,%rsp
    cece:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ced2:	48 89 d1             	mov    %rdx,%rcx
    ced5:	48 89 f0             	mov    %rsi,%rax
    ced8:	48 89 fa             	mov    %rdi,%rdx
    cedb:	48 89 ca             	mov    %rcx,%rdx
    cede:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cee2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    cee6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ceea:	48 8b 00             	mov    (%rax),%rax
    ceed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cef1:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    cef5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cef9:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    cefd:	48 89 c7             	mov    %rax,%rdi
    cf00:	e8 a3 16 00 00       	call   e5a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>
    cf05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    cf09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf0d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    cf14:	00 
	  return __it;
    cf15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    cf19:	c9                   	leave
    cf1a:	c3                   	ret
    cf1b:	90                   	nop

000000000000cf1c <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    cf1c:	55                   	push   %rbp
    cf1d:	48 89 e5             	mov    %rsp,%rbp
    cf20:	48 83 ec 20          	sub    $0x20,%rsp
    cf24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cf2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    cf30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cf34:	48 89 c7             	mov    %rax,%rdi
    cf37:	e8 2f 17 00 00       	call   e66b <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
    cf3c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf40:	48 8b 00             	mov    (%rax),%rax
    cf43:	48 89 02             	mov    %rax,(%rdx)
    cf46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf4a:	48 89 c7             	mov    %rax,%rdi
    cf4d:	e8 27 17 00 00       	call   e679 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
    cf52:	0f b6 10             	movzbl (%rax),%edx
    cf55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf59:	88 50 08             	mov    %dl,0x8(%rax)
    cf5c:	90                   	nop
    cf5d:	c9                   	leave
    cf5e:	c3                   	ret
    cf5f:	90                   	nop

000000000000cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    cf60:	55                   	push   %rbp
    cf61:	48 89 e5             	mov    %rsp,%rbp
    cf64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    cf6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf74:	48 89 10             	mov    %rdx,(%rax)
    cf77:	90                   	nop
    cf78:	5d                   	pop    %rbp
    cf79:	c3                   	ret

000000000000cf7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    cf7a:	55                   	push   %rbp
    cf7b:	48 89 e5             	mov    %rsp,%rbp
    cf7e:	53                   	push   %rbx
    cf7f:	48 83 ec 18          	sub    $0x18,%rsp
    cf83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cf87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    cf8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf8f:	48 89 c7             	mov    %rax,%rdi
    cf92:	e8 ff 16 00 00       	call   e696 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
    cf97:	48 89 c3             	mov    %rax,%rbx
    cf9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf9e:	48 89 c7             	mov    %rax,%rdi
    cfa1:	e8 e2 16 00 00       	call   e688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
    cfa6:	48 89 de             	mov    %rbx,%rsi
    cfa9:	48 89 c7             	mov    %rax,%rdi
    cfac:	e8 03 17 00 00       	call   e6b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>
      }
    cfb1:	90                   	nop
    cfb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cfb6:	c9                   	leave
    cfb7:	c3                   	ret

000000000000cfb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    cfb8:	55                   	push   %rbp
    cfb9:	48 89 e5             	mov    %rsp,%rbp
    cfbc:	48 83 ec 10          	sub    $0x10,%rsp
    cfc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    cfc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfcc:	48 89 c7             	mov    %rax,%rdi
    cfcf:	e8 b4 16 00 00       	call   e688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
    cfd4:	48 89 c1             	mov    %rax,%rcx
    cfd7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cfdb:	ba 01 00 00 00       	mov    $0x1,%edx
    cfe0:	48 89 c6             	mov    %rax,%rsi
    cfe3:	48 89 cf             	mov    %rcx,%rdi
    cfe6:	e8 ef 16 00 00       	call   e6da <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>
    cfeb:	90                   	nop
    cfec:	c9                   	leave
    cfed:	c3                   	ret

000000000000cfee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    cfee:	55                   	push   %rbp
    cfef:	48 89 e5             	mov    %rsp,%rbp
    cff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    cff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cffa:	48 83 c0 08          	add    $0x8,%rax
    cffe:	5d                   	pop    %rbp
    cfff:	c3                   	ret

000000000000d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>:
      _S_key(_Const_Link_type __x)
    d000:	55                   	push   %rbp
    d001:	48 89 e5             	mov    %rsp,%rbp
    d004:	48 83 ec 20          	sub    $0x20,%rsp
    d008:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    d00c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d010:	48 89 c7             	mov    %rax,%rdi
    d013:	e8 f0 16 00 00       	call   e708 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
    d018:	48 89 c2             	mov    %rax,%rdx
    d01b:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    d01f:	48 89 d6             	mov    %rdx,%rsi
    d022:	48 89 c7             	mov    %rax,%rdi
    d025:	e8 fc 16 00 00       	call   e726 <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>
      }
    d02a:	c9                   	leave
    d02b:	c3                   	ret

000000000000d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    d02c:	55                   	push   %rbp
    d02d:	48 89 e5             	mov    %rsp,%rbp
    d030:	48 83 ec 20          	sub    $0x20,%rsp
    d034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d038:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d03c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    d040:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d044:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d048:	48 89 d6             	mov    %rdx,%rsi
    d04b:	48 89 c7             	mov    %rax,%rdi
    d04e:	e8 e5 16 00 00       	call   e738 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    d053:	c9                   	leave
    d054:	c3                   	ret
    d055:	90                   	nop

000000000000d056 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d056:	55                   	push   %rbp
    d057:	48 89 e5             	mov    %rsp,%rbp
    d05a:	53                   	push   %rbx
    d05b:	48 83 ec 38          	sub    $0x38,%rsp
    d05f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d063:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d067:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d06b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    d06f:	eb 56                	jmp    d0c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    d071:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d075:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d079:	48 89 c7             	mov    %rax,%rdi
    d07c:	e8 7f ff ff ff       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    d081:	48 89 c1             	mov    %rax,%rcx
    d084:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d088:	48 89 c2             	mov    %rax,%rdx
    d08b:	48 89 ce             	mov    %rcx,%rsi
    d08e:	48 89 df             	mov    %rbx,%rdi
    d091:	e8 96 ff ff ff       	call   d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d096:	83 f0 01             	xor    $0x1,%eax
    d099:	84 c0                	test   %al,%al
    d09b:	74 1a                	je     d0b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x61>
	  __y = __x, __x = _S_left(__x);
    d09d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0a1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d0a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0a9:	48 89 c7             	mov    %rax,%rdi
    d0ac:	e8 9b e4 ff ff       	call   b54c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    d0b1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d0b5:	eb 10                	jmp    d0c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	  __x = _S_right(__x);
    d0b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d0bb:	48 89 c7             	mov    %rax,%rdi
    d0be:	e8 77 e4 ff ff       	call   b53a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    d0c3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    d0c7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d0cc:	75 a3                	jne    d071 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
    d0ce:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d0d2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d0d6:	48 89 d6             	mov    %rdx,%rsi
    d0d9:	48 89 c7             	mov    %rax,%rdi
    d0dc:	e8 7f fe ff ff       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    d0e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    d0e5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d0e9:	c9                   	leave
    d0ea:	c3                   	ret
    d0eb:	90                   	nop

000000000000d0ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d0ec:	55                   	push   %rbp
    d0ed:	48 89 e5             	mov    %rsp,%rbp
    d0f0:	53                   	push   %rbx
    d0f1:	48 83 ec 38          	sub    $0x38,%rsp
    d0f5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d0f9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d0fd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d101:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    d105:	eb 50                	jmp    d157 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
    d107:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d10b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d10f:	48 89 c7             	mov    %rax,%rdi
    d112:	e8 e9 fe ff ff       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    d117:	48 89 c2             	mov    %rax,%rdx
    d11a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d11e:	48 89 c6             	mov    %rax,%rsi
    d121:	48 89 df             	mov    %rbx,%rdi
    d124:	e8 03 ff ff ff       	call   d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d129:	84 c0                	test   %al,%al
    d12b:	74 1a                	je     d147 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x5b>
	  __y = __x, __x = _S_left(__x);
    d12d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d131:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d135:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d139:	48 89 c7             	mov    %rax,%rdi
    d13c:	e8 0b e4 ff ff       	call   b54c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    d141:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d145:	eb 10                	jmp    d157 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	  __x = _S_right(__x);
    d147:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d14b:	48 89 c7             	mov    %rax,%rdi
    d14e:	e8 e7 e3 ff ff       	call   b53a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    d153:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    d157:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    d15c:	75 a9                	jne    d107 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
    d15e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d162:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    d166:	48 89 d6             	mov    %rdx,%rsi
    d169:	48 89 c7             	mov    %rax,%rdi
    d16c:	e8 ef fd ff ff       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    d171:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    d175:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d179:	c9                   	leave
    d17a:	c3                   	ret
    d17b:	90                   	nop

000000000000d17c <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    d17c:	55                   	push   %rbp
    d17d:	48 89 e5             	mov    %rsp,%rbp
    d180:	48 83 ec 20          	sub    $0x20,%rsp
    d184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d188:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d18c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    d190:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d194:	48 89 c7             	mov    %rax,%rdi
    d197:	e8 cf 14 00 00       	call   e66b <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
    d19c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d1a0:	48 8b 00             	mov    (%rax),%rax
    d1a3:	48 89 02             	mov    %rax,(%rdx)
    d1a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1aa:	48 89 c7             	mov    %rax,%rdi
    d1ad:	e8 b9 14 00 00       	call   e66b <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
    d1b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d1b6:	48 8b 00             	mov    (%rax),%rax
    d1b9:	48 89 42 08          	mov    %rax,0x8(%rdx)
    d1bd:	90                   	nop
    d1be:	c9                   	leave
    d1bf:	c3                   	ret

000000000000d1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    d1c0:	55                   	push   %rbp
    d1c1:	48 89 e5             	mov    %rsp,%rbp
    d1c4:	48 83 ec 20          	sub    $0x20,%rsp
    d1c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    d1cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1d0:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d1d4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d1d8:	48 89 d6             	mov    %rdx,%rsi
    d1db:	48 89 c7             	mov    %rax,%rdi
    d1de:	e8 7d fd ff ff       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    d1e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e7:	c9                   	leave
    d1e8:	c3                   	ret

000000000000d1e9 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    d1e9:	55                   	push   %rbp
    d1ea:	48 89 e5             	mov    %rsp,%rbp
    d1ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    d1f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1f9:	48 8b 10             	mov    (%rax),%rdx
    d1fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d200:	48 8b 00             	mov    (%rax),%rax
    d203:	48 39 c2             	cmp    %rax,%rdx
    d206:	0f 94 c0             	sete   %al
    d209:	5d                   	pop    %rbp
    d20a:	c3                   	ret
    d20b:	90                   	nop

000000000000d20c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d20c:	55                   	push   %rbp
    d20d:	48 89 e5             	mov    %rsp,%rbp
    d210:	48 83 ec 20          	sub    $0x20,%rsp
    d214:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    d218:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d21c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d220:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d224:	48 89 d6             	mov    %rdx,%rsi
    d227:	48 89 c7             	mov    %rax,%rdi
    d22a:	e8 31 fd ff ff       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    d22f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d233:	c9                   	leave
    d234:	c3                   	ret
    d235:	90                   	nop

000000000000d236 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
    d236:	55                   	push   %rbp
    d237:	48 89 e5             	mov    %rsp,%rbp
    d23a:	48 83 ec 10          	sub    $0x10,%rsp
    d23e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_erase(_M_begin());
    d242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d246:	48 89 c7             	mov    %rax,%rdi
    d249:	e8 ca c2 ff ff       	call   9518 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    d24e:	48 89 c2             	mov    %rax,%rdx
    d251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d255:	48 89 d6             	mov    %rdx,%rsi
    d258:	48 89 c7             	mov    %rax,%rdi
    d25b:	e8 52 c2 ff ff       	call   94b2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	_M_impl._M_reset();
    d260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d264:	48 83 c0 08          	add    $0x8,%rax
    d268:	48 89 c7             	mov    %rax,%rdi
    d26b:	e8 a2 9c ff ff       	call   6f12 <_ZNSt15_Rb_tree_header8_M_resetEv>
      }
    d270:	90                   	nop
    d271:	c9                   	leave
    d272:	c3                   	ret

000000000000d273 <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    d273:	55                   	push   %rbp
    d274:	48 89 e5             	mov    %rsp,%rbp
    d277:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d27b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
    d27f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d283:	48 8b 10             	mov    (%rax),%rdx
    d286:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d28a:	48 8b 00             	mov    (%rax),%rax
    d28d:	48 39 c2             	cmp    %rax,%rdx
    d290:	0f 95 c0             	setne  %al
    d293:	5d                   	pop    %rbp
    d294:	c3                   	ret
    d295:	90                   	nop

000000000000d296 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
    d296:	55                   	push   %rbp
    d297:	48 89 e5             	mov    %rsp,%rbp
    d29a:	48 83 ec 20          	sub    $0x20,%rsp
    d29e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d2a2:	89 75 e4             	mov    %esi,-0x1c(%rbp)
	_Self __tmp = *this;
    d2a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2a9:	48 8b 00             	mov    (%rax),%rax
    d2ac:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    d2b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2b4:	48 8b 00             	mov    (%rax),%rax
    d2b7:	48 89 c7             	mov    %rax,%rdi
    d2ba:	e8 a1 60 ff ff       	call   3360 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    d2bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d2c3:	48 89 02             	mov    %rax,(%rdx)
	return __tmp;
    d2c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d2ca:	c9                   	leave
    d2cb:	c3                   	ret

000000000000d2cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d2cc:	55                   	push   %rbp
    d2cd:	48 89 e5             	mov    %rsp,%rbp
    d2d0:	48 83 ec 20          	sub    $0x20,%rsp
    d2d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d2d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
				 this->_M_impl._M_header));
    d2dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2e0:	48 8d 50 08          	lea    0x8(%rax),%rdx
				(const_cast<_Base_ptr>(__position._M_node),
    d2e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d2e8:	48 89 d6             	mov    %rdx,%rsi
    d2eb:	48 89 c7             	mov    %rax,%rdi
    d2ee:	e8 4d 5e ff ff       	call   3140 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>
    d2f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_drop_node(__y);
    d2f7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d2fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2ff:	48 89 d6             	mov    %rdx,%rsi
    d302:	48 89 c7             	mov    %rax,%rdi
    d305:	e8 54 e2 ff ff       	call   b55e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
      --_M_impl._M_node_count;
    d30a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d30e:	48 8b 40 28          	mov    0x28(%rax),%rax
    d312:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    d316:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d31a:	48 89 50 28          	mov    %rdx,0x28(%rax)
    }
    d31e:	90                   	nop
    d31f:	c9                   	leave
    d320:	c3                   	ret
    d321:	90                   	nop

000000000000d322 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d322:	55                   	push   %rbp
    d323:	48 89 e5             	mov    %rsp,%rbp
    d326:	48 83 ec 20          	sub    $0x20,%rsp
    d32a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d32e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d332:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d336:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d33a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d341:	00 
    d342:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d346:	48 89 d6             	mov    %rdx,%rsi
    d349:	48 89 c7             	mov    %rax,%rdi
    d34c:	e8 3f 5f ff ff       	call   3290 <_ZdlPvm@plt>
      }
    d351:	c9                   	leave
    d352:	c3                   	ret

000000000000d353 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
    d353:	55                   	push   %rbp
    d354:	48 89 e5             	mov    %rsp,%rbp
    d357:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d35b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d35f:	90                   	nop
    d360:	5d                   	pop    %rbp
    d361:	c3                   	ret

000000000000d362 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d362:	55                   	push   %rbp
    d363:	48 89 e5             	mov    %rsp,%rbp
    d366:	48 83 ec 20          	sub    $0x20,%rsp
    d36a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d36e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d372:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d376:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d37a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    d381:	00 
    d382:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d386:	48 89 d6             	mov    %rdx,%rsi
    d389:	48 89 c7             	mov    %rax,%rdi
    d38c:	e8 ff 5e ff ff       	call   3290 <_ZdlPvm@plt>
      }
    d391:	c9                   	leave
    d392:	c3                   	ret

000000000000d393 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    d393:	55                   	push   %rbp
    d394:	48 89 e5             	mov    %rsp,%rbp
    d397:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d39b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d39f:	90                   	nop
    d3a0:	5d                   	pop    %rbp
    d3a1:	c3                   	ret

000000000000d3a2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d3a2:	55                   	push   %rbp
    d3a3:	48 89 e5             	mov    %rsp,%rbp
    d3a6:	48 83 ec 20          	sub    $0x20,%rsp
    d3aa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d3ae:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    d3b5:	ff ff 0f 
    d3b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d3bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3c0:	48 89 c7             	mov    %rax,%rdi
    d3c3:	e8 98 13 00 00       	call   e760 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    d3c8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d3cc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d3d0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d3d4:	48 89 d6             	mov    %rdx,%rsi
    d3d7:	48 89 c7             	mov    %rax,%rdi
    d3da:	e8 52 71 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    d3df:	48 8b 00             	mov    (%rax),%rax
      }
    d3e2:	c9                   	leave
    d3e3:	c3                   	ret

000000000000d3e4 <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    d3e4:	55                   	push   %rbp
    d3e5:	48 89 e5             	mov    %rsp,%rbp
    d3e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    d3ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3f0:	5d                   	pop    %rbp
    d3f1:	c3                   	ret

000000000000d3f2 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d3f2:	55                   	push   %rbp
    d3f3:	48 89 e5             	mov    %rsp,%rbp
    d3f6:	48 83 ec 20          	sub    $0x20,%rsp
    d3fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d3fe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d402:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d406:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d40a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d40e:	48 89 d6             	mov    %rdx,%rsi
    d411:	48 89 c7             	mov    %rax,%rdi
    d414:	e8 61 13 00 00       	call   e77a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    d419:	c9                   	leave
    d41a:	c3                   	ret

000000000000d41b <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    d41b:	55                   	push   %rbp
    d41c:	48 89 e5             	mov    %rsp,%rbp
    d41f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d423:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    d427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d42b:	48 8b 10             	mov    (%rax),%rdx
    d42e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d432:	48 8b 00             	mov    (%rax),%rax
    d435:	48 39 c2             	cmp    %rax,%rdx
    d438:	73 06                	jae    d440 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    d43a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d43e:	eb 04                	jmp    d444 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    d440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    d444:	5d                   	pop    %rbp
    d445:	c3                   	ret

000000000000d446 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    d446:	55                   	push   %rbp
    d447:	48 89 e5             	mov    %rsp,%rbp
    d44a:	48 83 ec 10          	sub    $0x10,%rsp
    d44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    d456:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d45a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d45e:	ba 00 00 00 00       	mov    $0x0,%edx
    d463:	48 89 ce             	mov    %rcx,%rsi
    d466:	48 89 c7             	mov    %rax,%rdi
    d469:	e8 6a 13 00 00       	call   e7d8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    d46e:	c9                   	leave
    d46f:	c3                   	ret

000000000000d470 <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    d470:	55                   	push   %rbp
    d471:	48 89 e5             	mov    %rsp,%rbp
    d474:	41 54                	push   %r12
    d476:	53                   	push   %rbx
    d477:	48 83 ec 20          	sub    $0x20,%rsp
    d47b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d47f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d483:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d487:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    d48b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d48f:	48 89 c7             	mov    %rax,%rdi
    d492:	e8 a2 13 00 00       	call   e839 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
    d497:	49 89 c4             	mov    %rax,%r12
    d49a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d49e:	48 89 c7             	mov    %rax,%rdi
    d4a1:	e8 93 13 00 00       	call   e839 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
    d4a6:	48 89 c3             	mov    %rax,%rbx
    d4a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4ad:	48 89 c7             	mov    %rax,%rdi
    d4b0:	e8 84 13 00 00       	call   e839 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
    d4b5:	48 89 c7             	mov    %rax,%rdi
    d4b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4bc:	48 89 c1             	mov    %rax,%rcx
    d4bf:	4c 89 e2             	mov    %r12,%rdx
    d4c2:	48 89 de             	mov    %rbx,%rsi
    d4c5:	e8 7d 13 00 00       	call   e847 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    d4ca:	48 83 c4 20          	add    $0x20,%rsp
    d4ce:	5b                   	pop    %rbx
    d4cf:	41 5c                	pop    %r12
    d4d1:	5d                   	pop    %rbp
    d4d2:	c3                   	ret

000000000000d4d3 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d4d3:	55                   	push   %rbp
    d4d4:	48 89 e5             	mov    %rsp,%rbp
    d4d7:	48 83 ec 20          	sub    $0x20,%rsp
    d4db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d4df:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    d4e6:	ff ff 1f 
    d4e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d4ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4f1:	48 89 c7             	mov    %rax,%rdi
    d4f4:	e8 b1 13 00 00       	call   e8aa <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    d4f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d4fd:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d501:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d505:	48 89 d6             	mov    %rdx,%rsi
    d508:	48 89 c7             	mov    %rax,%rdi
    d50b:	e8 21 70 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    d510:	48 8b 00             	mov    (%rax),%rax
      }
    d513:	c9                   	leave
    d514:	c3                   	ret
    d515:	90                   	nop

000000000000d516 <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    d516:	55                   	push   %rbp
    d517:	48 89 e5             	mov    %rsp,%rbp
    d51a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    d51e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d522:	5d                   	pop    %rbp
    d523:	c3                   	ret

000000000000d524 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d524:	55                   	push   %rbp
    d525:	48 89 e5             	mov    %rsp,%rbp
    d528:	48 83 ec 20          	sub    $0x20,%rsp
    d52c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d530:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d534:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d538:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d53c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d540:	48 89 d6             	mov    %rdx,%rsi
    d543:	48 89 c7             	mov    %rax,%rdi
    d546:	e8 79 13 00 00       	call   e8c4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    d54b:	c9                   	leave
    d54c:	c3                   	ret

000000000000d54d <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    d54d:	55                   	push   %rbp
    d54e:	48 89 e5             	mov    %rsp,%rbp
    d551:	48 83 ec 10          	sub    $0x10,%rsp
    d555:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d559:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    d55d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d561:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d565:	ba 00 00 00 00       	mov    $0x0,%edx
    d56a:	48 89 ce             	mov    %rcx,%rsi
    d56d:	48 89 c7             	mov    %rax,%rdi
    d570:	e8 ad 13 00 00       	call   e922 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    d575:	c9                   	leave
    d576:	c3                   	ret

000000000000d577 <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
    d577:	55                   	push   %rbp
    d578:	48 89 e5             	mov    %rsp,%rbp
    d57b:	41 54                	push   %r12
    d57d:	53                   	push   %rbx
    d57e:	48 83 ec 20          	sub    $0x20,%rsp
    d582:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d586:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d58a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d58e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
    d592:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d596:	48 89 c7             	mov    %rax,%rdi
    d599:	e8 e5 13 00 00       	call   e983 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
    d59e:	49 89 c4             	mov    %rax,%r12
    d5a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d5a5:	48 89 c7             	mov    %rax,%rdi
    d5a8:	e8 d6 13 00 00       	call   e983 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
    d5ad:	48 89 c3             	mov    %rax,%rbx
    d5b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5b4:	48 89 c7             	mov    %rax,%rdi
    d5b7:	e8 c7 13 00 00       	call   e983 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
    d5bc:	48 89 c7             	mov    %rax,%rdi
    d5bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d5c3:	48 89 c1             	mov    %rax,%rcx
    d5c6:	4c 89 e2             	mov    %r12,%rdx
    d5c9:	48 89 de             	mov    %rbx,%rsi
    d5cc:	e8 c0 13 00 00       	call   e991 <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
    d5d1:	48 83 c4 20          	add    $0x20,%rsp
    d5d5:	5b                   	pop    %rbx
    d5d6:	41 5c                	pop    %r12
    d5d8:	5d                   	pop    %rbp
    d5d9:	c3                   	ret

000000000000d5da <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d5da:	55                   	push   %rbp
    d5db:	48 89 e5             	mov    %rsp,%rbp
    d5de:	48 83 ec 10          	sub    $0x10,%rsp
    d5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5ea:	48 89 c7             	mov    %rax,%rdi
    d5ed:	e8 02 14 00 00       	call   e9f4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    d5f2:	c9                   	leave
    d5f3:	c3                   	ret

000000000000d5f4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    d5f4:	55                   	push   %rbp
    d5f5:	48 89 e5             	mov    %rsp,%rbp
    d5f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d5fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d600:	90                   	nop
    d601:	5d                   	pop    %rbp
    d602:	c3                   	ret
    d603:	90                   	nop

000000000000d604 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d604:	55                   	push   %rbp
    d605:	48 89 e5             	mov    %rsp,%rbp
    d608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d60c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d610:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d61b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d622:	00 
    d623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d627:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d62e:	00 
	{ }
    d62f:	90                   	nop
    d630:	5d                   	pop    %rbp
    d631:	c3                   	ret

000000000000d632 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d632:	55                   	push   %rbp
    d633:	48 89 e5             	mov    %rsp,%rbp
    d636:	48 83 ec 10          	sub    $0x10,%rsp
    d63a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d63e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d642:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d647:	74 15                	je     d65e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    d649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d64d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d651:	48 89 d6             	mov    %rdx,%rsi
    d654:	48 89 c7             	mov    %rax,%rdi
    d657:	e8 b2 13 00 00       	call   ea0e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    d65c:	eb 05                	jmp    d663 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    d65e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d663:	c9                   	leave
    d664:	c3                   	ret

000000000000d665 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d665:	55                   	push   %rbp
    d666:	48 89 e5             	mov    %rsp,%rbp
    d669:	48 83 ec 20          	sub    $0x20,%rsp
    d66d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d671:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d675:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d679:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d67d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d681:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d685:	48 89 ce             	mov    %rcx,%rsi
    d688:	48 89 c7             	mov    %rax,%rdi
    d68b:	e8 a8 13 00 00       	call   ea38 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    d690:	90                   	nop
    d691:	c9                   	leave
    d692:	c3                   	ret

000000000000d693 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d693:	55                   	push   %rbp
    d694:	48 89 e5             	mov    %rsp,%rbp
    d697:	48 83 ec 20          	sub    $0x20,%rsp
    d69b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d69f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d6a3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d6a7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d6ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6af:	48 89 d6             	mov    %rdx,%rsi
    d6b2:	48 89 c7             	mov    %rax,%rdi
    d6b5:	e8 af 13 00 00       	call   ea69 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    d6ba:	c9                   	leave
    d6bb:	c3                   	ret

000000000000d6bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    d6bc:	55                   	push   %rbp
    d6bd:	48 89 e5             	mov    %rsp,%rbp
    d6c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d6c8:	90                   	nop
    d6c9:	5d                   	pop    %rbp
    d6ca:	c3                   	ret

000000000000d6cb <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    d6cb:	55                   	push   %rbp
    d6cc:	48 89 e5             	mov    %rsp,%rbp
    d6cf:	48 83 ec 10          	sub    $0x10,%rsp
    d6d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    d6d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6db:	48 89 c7             	mov    %rax,%rdi
    d6de:	e8 e3 13 00 00       	call   eac6 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    d6e3:	c9                   	leave
    d6e4:	c3                   	ret
    d6e5:	90                   	nop

000000000000d6e6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    d6e6:	55                   	push   %rbp
    d6e7:	48 89 e5             	mov    %rsp,%rbp
    d6ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d6ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d6f2:	90                   	nop
    d6f3:	5d                   	pop    %rbp
    d6f4:	c3                   	ret
    d6f5:	90                   	nop

000000000000d6f6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    d6f6:	55                   	push   %rbp
    d6f7:	48 89 e5             	mov    %rsp,%rbp
    d6fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    d6fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d702:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    d709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d70d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d714:	00 
    d715:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d719:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    d720:	00 
	{ }
    d721:	90                   	nop
    d722:	5d                   	pop    %rbp
    d723:	c3                   	ret

000000000000d724 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d724:	55                   	push   %rbp
    d725:	48 89 e5             	mov    %rsp,%rbp
    d728:	48 83 ec 10          	sub    $0x10,%rsp
    d72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d730:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d734:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d739:	74 15                	je     d750 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    d73b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d73f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d743:	48 89 d6             	mov    %rdx,%rsi
    d746:	48 89 c7             	mov    %rax,%rdi
    d749:	e8 92 13 00 00       	call   eae0 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    d74e:	eb 05                	jmp    d755 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    d750:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d755:	c9                   	leave
    d756:	c3                   	ret

000000000000d757 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d757:	55                   	push   %rbp
    d758:	48 89 e5             	mov    %rsp,%rbp
    d75b:	48 83 ec 20          	sub    $0x20,%rsp
    d75f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d763:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d767:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d76b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d76f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d777:	48 89 ce             	mov    %rcx,%rsi
    d77a:	48 89 c7             	mov    %rax,%rdi
    d77d:	e8 88 13 00 00       	call   eb0a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    d782:	90                   	nop
    d783:	c9                   	leave
    d784:	c3                   	ret

000000000000d785 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    d785:	55                   	push   %rbp
    d786:	48 89 e5             	mov    %rsp,%rbp
    d789:	48 83 ec 20          	sub    $0x20,%rsp
    d78d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d791:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    d795:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    d799:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d79d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d7a1:	48 89 d6             	mov    %rdx,%rsi
    d7a4:	48 89 c7             	mov    %rax,%rdi
    d7a7:	e8 97 13 00 00       	call   eb43 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    d7ac:	c9                   	leave
    d7ad:	c3                   	ret

000000000000d7ae <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    d7ae:	55                   	push   %rbp
    d7af:	48 89 e5             	mov    %rsp,%rbp
    d7b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d7ba:	90                   	nop
    d7bb:	5d                   	pop    %rbp
    d7bc:	c3                   	ret

000000000000d7bd <_ZSt11__addressofIjEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    d7bd:	55                   	push   %rbp
    d7be:	48 89 e5             	mov    %rsp,%rbp
    d7c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    d7c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7c9:	5d                   	pop    %rbp
    d7ca:	c3                   	ret

000000000000d7cb <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    d7cb:	55                   	push   %rbp
    d7cc:	48 89 e5             	mov    %rsp,%rbp
    d7cf:	53                   	push   %rbx
    d7d0:	48 83 ec 18          	sub    $0x18,%rsp
    d7d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d7d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    d7dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d7e0:	48 89 c6             	mov    %rax,%rsi
    d7e3:	bf 04 00 00 00       	mov    $0x4,%edi
    d7e8:	e8 8c 96 ff ff       	call   6e79 <_ZnwmPv>
    d7ed:	48 89 c3             	mov    %rax,%rbx
    d7f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d7f4:	48 89 c7             	mov    %rax,%rdi
    d7f7:	e8 16 c9 ff ff       	call   a112 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    d7fc:	8b 00                	mov    (%rax),%eax
    d7fe:	89 03                	mov    %eax,(%rbx)
    }
    d800:	90                   	nop
    d801:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d805:	c9                   	leave
    d806:	c3                   	ret
    d807:	90                   	nop

000000000000d808 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    d808:	55                   	push   %rbp
    d809:	48 89 e5             	mov    %rsp,%rbp
    d80c:	48 83 ec 20          	sub    $0x20,%rsp
    d810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d814:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d818:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    d81c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d820:	48 89 d0             	mov    %rdx,%rax
    d823:	48 c1 e0 02          	shl    $0x2,%rax
    d827:	48 01 d0             	add    %rdx,%rax
    d82a:	48 c1 e0 03          	shl    $0x3,%rax
    d82e:	48 89 c2             	mov    %rax,%rdx
    d831:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d835:	48 89 d6             	mov    %rdx,%rsi
    d838:	48 89 c7             	mov    %rax,%rdi
    d83b:	e8 50 5a ff ff       	call   3290 <_ZdlPvm@plt>
      }
    d840:	c9                   	leave
    d841:	c3                   	ret

000000000000d842 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    d842:	55                   	push   %rbp
    d843:	48 89 e5             	mov    %rsp,%rbp
    d846:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d84a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d84e:	90                   	nop
    d84f:	5d                   	pop    %rbp
    d850:	c3                   	ret
    d851:	90                   	nop

000000000000d852 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    d852:	55                   	push   %rbp
    d853:	48 89 e5             	mov    %rsp,%rbp
    d856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d85a:	90                   	nop
    d85b:	5d                   	pop    %rbp
    d85c:	c3                   	ret

000000000000d85d <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    d85d:	55                   	push   %rbp
    d85e:	48 89 e5             	mov    %rsp,%rbp
    d861:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    d865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d869:	5d                   	pop    %rbp
    d86a:	c3                   	ret
    d86b:	90                   	nop

000000000000d86c <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    d86c:	55                   	push   %rbp
    d86d:	48 89 e5             	mov    %rsp,%rbp
    d870:	48 83 ec 10          	sub    $0x10,%rsp
    d874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d878:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    d87c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d884:	48 89 d6             	mov    %rdx,%rsi
    d887:	48 89 c7             	mov    %rax,%rdi
    d88a:	e8 11 13 00 00       	call   eba0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>
    d88f:	90                   	nop
    d890:	c9                   	leave
    d891:	c3                   	ret

000000000000d892 <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
    d892:	55                   	push   %rbp
    d893:	48 89 e5             	mov    %rsp,%rbp
    d896:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d89a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { }
    d89e:	90                   	nop
    d89f:	5d                   	pop    %rbp
    d8a0:	c3                   	ret
    d8a1:	90                   	nop

000000000000d8a2 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d8a2:	55                   	push   %rbp
    d8a3:	48 89 e5             	mov    %rsp,%rbp
    d8a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    d8ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8b6:	48 89 10             	mov    %rdx,(%rax)
    d8b9:	90                   	nop
    d8ba:	5d                   	pop    %rbp
    d8bb:	c3                   	ret

000000000000d8bc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d8bc:	55                   	push   %rbp
    d8bd:	48 89 e5             	mov    %rsp,%rbp
    d8c0:	53                   	push   %rbx
    d8c1:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    d8c8:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    d8cf:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    d8d6:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    d8dd:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d8e4:	48 89 c7             	mov    %rax,%rdi
    d8e7:	e8 c4 12 00 00       	call   ebb0 <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>
    d8ec:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    d8f3:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d8fa:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d901:	48 89 c7             	mov    %rax,%rdi
    d904:	e8 cf 12 00 00       	call   ebd8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
    d909:	48 39 c3             	cmp    %rax,%rbx
    d90c:	0f 94 c0             	sete   %al
    d90f:	84 c0                	test   %al,%al
    d911:	0f 84 c8 00 00 00    	je     d9df <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x123>
	  if (size() > 0
    d917:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d91e:	48 89 c7             	mov    %rax,%rdi
    d921:	e8 c4 12 00 00       	call   ebea <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    d926:	48 85 c0             	test   %rax,%rax
    d929:	74 44                	je     d96f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
    d92b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d932:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d939:	48 89 c7             	mov    %rax,%rdi
    d93c:	e8 bb 12 00 00       	call   ebfc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    d941:	48 8b 00             	mov    (%rax),%rax
    d944:	48 89 c7             	mov    %rax,%rdi
    d947:	e8 c2 12 00 00       	call   ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    d94c:	48 89 c1             	mov    %rax,%rcx
    d94f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d956:	48 89 c2             	mov    %rax,%rdx
    d959:	48 89 ce             	mov    %rcx,%rsi
    d95c:	48 89 df             	mov    %rbx,%rdi
    d95f:	e8 c4 12 00 00       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    d964:	84 c0                	test   %al,%al
    d966:	74 07                	je     d96f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
    d968:	b8 01 00 00 00       	mov    $0x1,%eax
    d96d:	eb 05                	jmp    d974 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb8>
    d96f:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    d974:	84 c0                	test   %al,%al
    d976:	74 49                	je     d9c1 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x105>
	    return _Res(0, _M_rightmost());
    d978:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d97f:	48 89 c7             	mov    %rax,%rdi
    d982:	e8 75 12 00 00       	call   ebfc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    d987:	48 89 c2             	mov    %rax,%rdx
    d98a:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    d991:	00 00 00 00 
    d995:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    d99c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d9a3:	48 89 ce             	mov    %rcx,%rsi
    d9a6:	48 89 c7             	mov    %rax,%rdi
    d9a9:	e8 ca 0b 00 00       	call   e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d9ae:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    d9b5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d9bc:	e9 43 03 00 00       	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
    d9c1:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d9c8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d9cf:	48 89 d6             	mov    %rdx,%rsi
    d9d2:	48 89 c7             	mov    %rax,%rdi
    d9d5:	e8 72 12 00 00       	call   ec4c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
    d9da:	e9 25 03 00 00       	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    d9df:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d9e6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9ed:	48 89 c7             	mov    %rax,%rdi
    d9f0:	e8 19 12 00 00       	call   ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    d9f5:	48 89 c2             	mov    %rax,%rdx
    d9f8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d9ff:	48 89 c6             	mov    %rax,%rsi
    da02:	48 89 df             	mov    %rbx,%rdi
    da05:	e8 1e 12 00 00       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    da0a:	84 c0                	test   %al,%al
    da0c:	0f 84 66 01 00 00    	je     db78 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x2bc>
	  iterator __before = __pos;
    da12:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da19:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    da20:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    da27:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    da2e:	48 89 c7             	mov    %rax,%rdi
    da31:	e8 8c 13 00 00       	call   edc2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
    da36:	48 8b 00             	mov    (%rax),%rax
    da39:	48 39 c3             	cmp    %rax,%rbx
    da3c:	0f 94 c0             	sete   %al
    da3f:	84 c0                	test   %al,%al
    da41:	74 4c                	je     da8f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    da43:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    da4a:	48 89 c7             	mov    %rax,%rdi
    da4d:	e8 70 13 00 00       	call   edc2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
    da52:	48 89 c3             	mov    %rax,%rbx
    da55:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    da5c:	48 89 c7             	mov    %rax,%rdi
    da5f:	e8 5e 13 00 00       	call   edc2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
    da64:	48 89 c1             	mov    %rax,%rcx
    da67:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    da6e:	48 89 da             	mov    %rbx,%rdx
    da71:	48 89 ce             	mov    %rcx,%rsi
    da74:	48 89 c7             	mov    %rax,%rdi
    da77:	e8 58 13 00 00       	call   edd4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    da7c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    da83:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    da8a:	e9 75 02 00 00       	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    da8f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    da96:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    da9d:	48 89 c7             	mov    %rax,%rdi
    daa0:	e8 73 13 00 00       	call   ee18 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
    daa5:	48 8b 00             	mov    (%rax),%rax
    daa8:	48 89 c7             	mov    %rax,%rdi
    daab:	e8 5e 11 00 00       	call   ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    dab0:	48 89 c1             	mov    %rax,%rcx
    dab3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    daba:	48 89 c2             	mov    %rax,%rdx
    dabd:	48 89 ce             	mov    %rcx,%rsi
    dac0:	48 89 df             	mov    %rbx,%rdi
    dac3:	e8 60 11 00 00       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    dac8:	84 c0                	test   %al,%al
    daca:	0f 84 8a 00 00 00    	je     db5a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x29e>
	      if (_S_right(__before._M_node) == 0)
    dad0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dad7:	48 89 c7             	mov    %rax,%rdi
    dada:	e8 68 e6 ff ff       	call   c147 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    dadf:	48 85 c0             	test   %rax,%rax
    dae2:	0f 94 c0             	sete   %al
    dae5:	84 c0                	test   %al,%al
    dae7:	74 3e                	je     db27 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x26b>
		return _Res(0, __before._M_node);
    dae9:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    daf0:	00 00 00 00 
    daf4:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    dafb:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    db02:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    db09:	48 89 ce             	mov    %rcx,%rsi
    db0c:	48 89 c7             	mov    %rax,%rdi
    db0f:	e8 64 0a 00 00       	call   e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    db14:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    db1b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    db22:	e9 dd 01 00 00       	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    db27:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    db2e:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    db35:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    db3c:	48 89 ce             	mov    %rcx,%rsi
    db3f:	48 89 c7             	mov    %rax,%rdi
    db42:	e8 8d 12 00 00       	call   edd4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    db47:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    db4e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    db55:	e9 aa 01 00 00       	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
    db5a:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    db61:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    db68:	48 89 d6             	mov    %rdx,%rsi
    db6b:	48 89 c7             	mov    %rax,%rdi
    db6e:	e8 d9 10 00 00       	call   ec4c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
    db73:	e9 8c 01 00 00       	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    db78:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    db7f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db86:	48 89 c7             	mov    %rax,%rdi
    db89:	e8 80 10 00 00       	call   ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    db8e:	48 89 c1             	mov    %rax,%rcx
    db91:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    db98:	48 89 c2             	mov    %rax,%rdx
    db9b:	48 89 ce             	mov    %rcx,%rsi
    db9e:	48 89 df             	mov    %rbx,%rdi
    dba1:	e8 82 10 00 00       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    dba6:	84 c0                	test   %al,%al
    dba8:	0f 84 2c 01 00 00    	je     dcda <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x41e>
	  iterator __after = __pos;
    dbae:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbb5:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    dbbc:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    dbc3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    dbca:	48 89 c7             	mov    %rax,%rdi
    dbcd:	e8 2a 10 00 00       	call   ebfc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    dbd2:	48 8b 00             	mov    (%rax),%rax
    dbd5:	48 39 c3             	cmp    %rax,%rbx
    dbd8:	0f 94 c0             	sete   %al
    dbdb:	84 c0                	test   %al,%al
    dbdd:	74 3a                	je     dc19 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x35d>
	    return _Res(0, _M_rightmost());
    dbdf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    dbe6:	48 89 c7             	mov    %rax,%rdi
    dbe9:	e8 0e 10 00 00       	call   ebfc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    dbee:	48 89 c2             	mov    %rax,%rdx
    dbf1:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    dbf8:	00 
    dbf9:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    dbfd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    dc01:	48 89 ce             	mov    %rcx,%rsi
    dc04:	48 89 c7             	mov    %rax,%rdi
    dc07:	e8 6c 09 00 00       	call   e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    dc0c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    dc10:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    dc14:	e9 eb 00 00 00       	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    dc19:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    dc20:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    dc27:	48 89 c7             	mov    %rax,%rdi
    dc2a:	e8 11 12 00 00       	call   ee40 <_ZNSt17_Rb_tree_iteratorIjEppEv>
    dc2f:	48 8b 00             	mov    (%rax),%rax
    dc32:	48 89 c7             	mov    %rax,%rdi
    dc35:	e8 d4 0f 00 00       	call   ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    dc3a:	48 89 c2             	mov    %rax,%rdx
    dc3d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    dc44:	48 89 c6             	mov    %rax,%rsi
    dc47:	48 89 df             	mov    %rbx,%rdi
    dc4a:	e8 d9 0f 00 00       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    dc4f:	84 c0                	test   %al,%al
    dc51:	74 6c                	je     dcbf <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x403>
	      if (_S_right(__pos._M_node) == 0)
    dc53:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc5a:	48 89 c7             	mov    %rax,%rdi
    dc5d:	e8 e5 e4 ff ff       	call   c147 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    dc62:	48 85 c0             	test   %rax,%rax
    dc65:	0f 94 c0             	sete   %al
    dc68:	84 c0                	test   %al,%al
    dc6a:	74 2c                	je     dc98 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x3dc>
		return _Res(0, __pos._M_node);
    dc6c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    dc73:	00 
    dc74:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    dc7b:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    dc7f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dc83:	48 89 ce             	mov    %rcx,%rsi
    dc86:	48 89 c7             	mov    %rax,%rdi
    dc89:	e8 ea 08 00 00       	call   e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    dc8e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    dc92:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    dc96:	eb 6c                	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__after._M_node, __after._M_node);
    dc98:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    dc9f:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    dca6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dcaa:	48 89 ce             	mov    %rcx,%rsi
    dcad:	48 89 c7             	mov    %rax,%rdi
    dcb0:	e8 1f 11 00 00       	call   edd4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    dcb5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dcb9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    dcbd:	eb 45                	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
    dcbf:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    dcc6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    dccd:	48 89 d6             	mov    %rdx,%rsi
    dcd0:	48 89 c7             	mov    %rax,%rdi
    dcd3:	e8 74 0f 00 00       	call   ec4c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
    dcd8:	eb 2a                	jmp    dd04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	return _Res(__pos._M_node, 0);
    dcda:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    dce1:	00 
    dce2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    dce6:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    dced:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    dcf1:	48 89 ce             	mov    %rcx,%rsi
    dcf4:	48 89 c7             	mov    %rax,%rdi
    dcf7:	e8 7c 08 00 00       	call   e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    dcfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dd00:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    dd04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dd08:	c9                   	leave
    dd09:	c3                   	ret

000000000000dd0a <_ZNKSt9_IdentityIjEclERKj>:
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
    dd0a:	55                   	push   %rbp
    dd0b:	48 89 e5             	mov    %rsp,%rbp
    dd0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
    dd16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd1a:	5d                   	pop    %rbp
    dd1b:	c3                   	ret

000000000000dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    dd1c:	55                   	push   %rbp
    dd1d:	48 89 e5             	mov    %rsp,%rbp
    dd20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    dd24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd28:	5d                   	pop    %rbp
    dd29:	c3                   	ret

000000000000dd2a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    dd2a:	55                   	push   %rbp
    dd2b:	48 89 e5             	mov    %rsp,%rbp
    dd2e:	41 54                	push   %r12
    dd30:	53                   	push   %rbx
    dd31:	48 83 ec 50          	sub    $0x50,%rsp
    dd35:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    dd39:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    dd3d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    dd41:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    dd45:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
    dd49:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    dd4e:	75 4a                	jne    dd9a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
	bool __insert_left = (__x != 0 || __p == _M_end()
    dd50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    dd54:	48 89 c7             	mov    %rax,%rdi
    dd57:	e8 7c 0e 00 00       	call   ebd8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
    dd5c:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
    dd60:	74 38                	je     dd9a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
    dd62:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    dd66:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dd6a:	48 89 c7             	mov    %rax,%rdi
    dd6d:	e8 9c 0e 00 00       	call   ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    dd72:	49 89 c4             	mov    %rax,%r12
    dd75:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    dd79:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    dd7d:	48 89 d6             	mov    %rdx,%rsi
    dd80:	48 89 c7             	mov    %rax,%rdi
    dd83:	e8 82 ff ff ff       	call   dd0a <_ZNKSt9_IdentityIjEclERKj>
    dd88:	4c 89 e2             	mov    %r12,%rdx
    dd8b:	48 89 c6             	mov    %rax,%rsi
    dd8e:	48 89 df             	mov    %rbx,%rdi
    dd91:	e8 92 0e 00 00       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    dd96:	84 c0                	test   %al,%al
    dd98:	74 07                	je     dda1 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x77>
    dd9a:	b8 01 00 00 00       	mov    $0x1,%eax
    dd9f:	eb 05                	jmp    dda6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x7c>
    dda1:	b8 00 00 00 00       	mov    $0x0,%eax
	bool __insert_left = (__x != 0 || __p == _M_end()
    dda6:	88 45 ef             	mov    %al,-0x11(%rbp)
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
    dda9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ddad:	48 89 c7             	mov    %rax,%rdi
    ddb0:	e8 67 ff ff ff       	call   dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
    ddb5:	48 89 c2             	mov    %rax,%rdx
    ddb8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ddbc:	48 89 d6             	mov    %rdx,%rsi
    ddbf:	48 89 c7             	mov    %rax,%rdi
    ddc2:	e8 a1 10 00 00       	call   ee68 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>
    ddc7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
				      this->_M_impl._M_header);
    ddcb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ddcf:	48 8d 48 08          	lea    0x8(%rax),%rcx
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    ddd3:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    ddd7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    dddb:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    dddf:	89 c7                	mov    %eax,%edi
    dde1:	e8 5a 52 ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
	++_M_impl._M_node_count;
    dde6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ddea:	48 8b 40 28          	mov    0x28(%rax),%rax
    ddee:	48 8d 50 01          	lea    0x1(%rax),%rdx
    ddf2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ddf6:	48 89 50 28          	mov    %rdx,0x28(%rax)
	return iterator(__z);
    ddfa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ddfe:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    de02:	48 89 d6             	mov    %rdx,%rsi
    de05:	48 89 c7             	mov    %rax,%rdi
    de08:	e8 95 fa ff ff       	call   d8a2 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
    de0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    de11:	48 83 c4 50          	add    $0x50,%rsp
    de15:	5b                   	pop    %rbx
    de16:	41 5c                	pop    %r12
    de18:	5d                   	pop    %rbp
    de19:	c3                   	ret

000000000000de1a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    de1a:	55                   	push   %rbp
    de1b:	48 89 e5             	mov    %rsp,%rbp
    de1e:	53                   	push   %rbx
    de1f:	48 83 ec 18          	sub    $0x18,%rsp
    de23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    de27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    de2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de2f:	48 89 c7             	mov    %rax,%rdi
    de32:	e8 75 10 00 00       	call   eeac <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
    de37:	48 89 c3             	mov    %rax,%rbx
    de3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de3e:	48 89 c7             	mov    %rax,%rdi
    de41:	e8 58 10 00 00       	call   ee9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
    de46:	48 89 de             	mov    %rbx,%rsi
    de49:	48 89 c7             	mov    %rax,%rdi
    de4c:	e8 79 10 00 00       	call   eeca <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>
      }
    de51:	90                   	nop
    de52:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    de56:	c9                   	leave
    de57:	c3                   	ret

000000000000de58 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    de58:	55                   	push   %rbp
    de59:	48 89 e5             	mov    %rsp,%rbp
    de5c:	48 83 ec 10          	sub    $0x10,%rsp
    de60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    de68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de6c:	48 89 c7             	mov    %rax,%rdi
    de6f:	e8 2a 10 00 00       	call   ee9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
    de74:	48 89 c1             	mov    %rax,%rcx
    de77:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de7b:	ba 01 00 00 00       	mov    $0x1,%edx
    de80:	48 89 c6             	mov    %rax,%rsi
    de83:	48 89 cf             	mov    %rcx,%rdi
    de86:	e8 65 10 00 00       	call   eef0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>
    de8b:	90                   	nop
    de8c:	c9                   	leave
    de8d:	c3                   	ret

000000000000de8e <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() const noexcept
    de8e:	55                   	push   %rbp
    de8f:	48 89 e5             	mov    %rsp,%rbp
    de92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    de96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de9a:	5d                   	pop    %rbp
    de9b:	c3                   	ret

000000000000de9c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    de9c:	55                   	push   %rbp
    de9d:	48 89 e5             	mov    %rsp,%rbp
    dea0:	48 83 ec 10          	sub    $0x10,%rsp
    dea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    dea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deac:	48 89 c7             	mov    %rax,%rdi
    deaf:	e8 ac 10 00 00       	call   ef60 <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    deb4:	48 89 c7             	mov    %rax,%rdi
    deb7:	e8 62 10 00 00       	call   ef1e <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
    debc:	c9                   	leave
    debd:	c3                   	ret

000000000000debe <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    debe:	55                   	push   %rbp
    debf:	48 89 e5             	mov    %rsp,%rbp
    dec2:	48 83 ec 10          	sub    $0x10,%rsp
    dec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dece:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ded2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ded6:	ba 00 00 00 00       	mov    $0x0,%edx
    dedb:	48 89 ce             	mov    %rcx,%rsi
    dede:	48 89 c7             	mov    %rax,%rdi
    dee1:	e8 88 10 00 00       	call   ef6e <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>
    dee6:	c9                   	leave
    dee7:	c3                   	ret

000000000000dee8 <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
    dee8:	55                   	push   %rbp
    dee9:	48 89 e5             	mov    %rsp,%rbp
    deec:	41 54                	push   %r12
    deee:	53                   	push   %rbx
    deef:	48 83 ec 20          	sub    $0x20,%rsp
    def3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    def7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    defb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    deff:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
    df03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df07:	48 89 c7             	mov    %rax,%rdi
    df0a:	e8 ca 10 00 00       	call   efd9 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
    df0f:	49 89 c4             	mov    %rax,%r12
    df12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    df16:	48 89 c7             	mov    %rax,%rdi
    df19:	e8 bb 10 00 00       	call   efd9 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
    df1e:	48 89 c3             	mov    %rax,%rbx
    df21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df25:	48 89 c7             	mov    %rax,%rdi
    df28:	e8 ac 10 00 00       	call   efd9 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
    df2d:	48 89 c7             	mov    %rax,%rdi
    df30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df34:	48 89 c1             	mov    %rax,%rcx
    df37:	4c 89 e2             	mov    %r12,%rdx
    df3a:	48 89 de             	mov    %rbx,%rsi
    df3d:	e8 a5 10 00 00       	call   efe7 <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
    df42:	48 83 c4 20          	add    $0x20,%rsp
    df46:	5b                   	pop    %rbx
    df47:	41 5c                	pop    %r12
    df49:	5d                   	pop    %rbp
    df4a:	c3                   	ret
    df4b:	90                   	nop

000000000000df4c <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() const noexcept
    df4c:	55                   	push   %rbp
    df4d:	48 89 e5             	mov    %rsp,%rbp
    df50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    df54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df58:	5d                   	pop    %rbp
    df59:	c3                   	ret

000000000000df5a <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    df5a:	55                   	push   %rbp
    df5b:	48 89 e5             	mov    %rsp,%rbp
    df5e:	48 83 ec 20          	sub    $0x20,%rsp
    df62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    df66:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    df6d:	ff ff 0f 
    df70:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    df74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df78:	48 89 c7             	mov    %rax,%rdi
    df7b:	e8 ed 10 00 00       	call   f06d <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    df80:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    df84:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    df88:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    df8c:	48 89 d6             	mov    %rdx,%rsi
    df8f:	48 89 c7             	mov    %rax,%rdi
    df92:	e8 9a 65 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    df97:	48 8b 00             	mov    (%rax),%rax
      }
    df9a:	c9                   	leave
    df9b:	c3                   	ret

000000000000df9c <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    df9c:	55                   	push   %rbp
    df9d:	48 89 e5             	mov    %rsp,%rbp
    dfa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    dfa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfa8:	5d                   	pop    %rbp
    dfa9:	c3                   	ret

000000000000dfaa <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    dfaa:	55                   	push   %rbp
    dfab:	48 89 e5             	mov    %rsp,%rbp
    dfae:	48 83 ec 20          	sub    $0x20,%rsp
    dfb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dfb6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    dfba:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    dfbe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dfc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfc6:	48 89 d6             	mov    %rdx,%rsi
    dfc9:	48 89 c7             	mov    %rax,%rdi
    dfcc:	e8 b6 10 00 00       	call   f087 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    dfd1:	c9                   	leave
    dfd2:	c3                   	ret

000000000000dfd3 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    dfd3:	55                   	push   %rbp
    dfd4:	48 89 e5             	mov    %rsp,%rbp
    dfd7:	48 83 ec 10          	sub    $0x10,%rsp
    dfdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dfdf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    dfe3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dfe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfeb:	ba 00 00 00 00       	mov    $0x0,%edx
    dff0:	48 89 ce             	mov    %rcx,%rsi
    dff3:	48 89 c7             	mov    %rax,%rdi
    dff6:	e8 e9 10 00 00       	call   f0e4 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    dffb:	c9                   	leave
    dffc:	c3                   	ret

000000000000dffd <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
    dffd:	55                   	push   %rbp
    dffe:	48 89 e5             	mov    %rsp,%rbp
    e001:	41 54                	push   %r12
    e003:	53                   	push   %rbx
    e004:	48 83 ec 20          	sub    $0x20,%rsp
    e008:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e00c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e010:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e014:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
    e018:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e01c:	48 89 c7             	mov    %rax,%rdi
    e01f:	e8 21 11 00 00       	call   f145 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
    e024:	49 89 c4             	mov    %rax,%r12
    e027:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e02b:	48 89 c7             	mov    %rax,%rdi
    e02e:	e8 12 11 00 00       	call   f145 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
    e033:	48 89 c3             	mov    %rax,%rbx
    e036:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e03a:	48 89 c7             	mov    %rax,%rdi
    e03d:	e8 03 11 00 00       	call   f145 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
    e042:	48 89 c7             	mov    %rax,%rdi
    e045:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e049:	48 89 c1             	mov    %rax,%rcx
    e04c:	4c 89 e2             	mov    %r12,%rdx
    e04f:	48 89 de             	mov    %rbx,%rsi
    e052:	e8 fc 10 00 00       	call   f153 <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
    e057:	48 83 c4 20          	add    $0x20,%rsp
    e05b:	5b                   	pop    %rbx
    e05c:	41 5c                	pop    %r12
    e05e:	5d                   	pop    %rbp
    e05f:	c3                   	ret

000000000000e060 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    e060:	55                   	push   %rbp
    e061:	48 89 e5             	mov    %rsp,%rbp
    e064:	48 83 ec 20          	sub    $0x20,%rsp
    e068:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    e06c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    e073:	ff ff 0f 
    e076:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    e07a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e07e:	48 89 c7             	mov    %rax,%rdi
    e081:	e8 30 11 00 00       	call   f1b6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
    e086:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    e08a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    e08e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e092:	48 89 d6             	mov    %rdx,%rsi
    e095:	48 89 c7             	mov    %rax,%rdi
    e098:	e8 94 64 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    e09d:	48 8b 00             	mov    (%rax),%rax
      }
    e0a0:	c9                   	leave
    e0a1:	c3                   	ret

000000000000e0a2 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    e0a2:	55                   	push   %rbp
    e0a3:	48 89 e5             	mov    %rsp,%rbp
    e0a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e0aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0ae:	5d                   	pop    %rbp
    e0af:	c3                   	ret

000000000000e0b0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    e0b0:	55                   	push   %rbp
    e0b1:	48 89 e5             	mov    %rsp,%rbp
    e0b4:	48 83 ec 20          	sub    $0x20,%rsp
    e0b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e0bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    e0c0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    e0c4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e0c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0cc:	48 89 d6             	mov    %rdx,%rsi
    e0cf:	48 89 c7             	mov    %rax,%rdi
    e0d2:	e8 f9 10 00 00       	call   f1d0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
    e0d7:	c9                   	leave
    e0d8:	c3                   	ret

000000000000e0d9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    e0d9:	55                   	push   %rbp
    e0da:	48 89 e5             	mov    %rsp,%rbp
    e0dd:	48 83 ec 10          	sub    $0x10,%rsp
    e0e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e0e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e0e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e0ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0f1:	ba 00 00 00 00       	mov    $0x0,%edx
    e0f6:	48 89 ce             	mov    %rcx,%rsi
    e0f9:	48 89 c7             	mov    %rax,%rdi
    e0fc:	e8 2d 11 00 00       	call   f22e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
    e101:	c9                   	leave
    e102:	c3                   	ret

000000000000e103 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
    e103:	55                   	push   %rbp
    e104:	48 89 e5             	mov    %rsp,%rbp
    e107:	41 54                	push   %r12
    e109:	53                   	push   %rbx
    e10a:	48 83 ec 20          	sub    $0x20,%rsp
    e10e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e112:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e116:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e11a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
    e11e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e122:	48 89 c7             	mov    %rax,%rdi
    e125:	e8 65 11 00 00       	call   f28f <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
    e12a:	49 89 c4             	mov    %rax,%r12
    e12d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e131:	48 89 c7             	mov    %rax,%rdi
    e134:	e8 56 11 00 00       	call   f28f <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
    e139:	48 89 c3             	mov    %rax,%rbx
    e13c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e140:	48 89 c7             	mov    %rax,%rdi
    e143:	e8 47 11 00 00       	call   f28f <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
    e148:	48 89 c7             	mov    %rax,%rdi
    e14b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e14f:	48 89 c1             	mov    %rax,%rcx
    e152:	4c 89 e2             	mov    %r12,%rdx
    e155:	48 89 de             	mov    %rbx,%rsi
    e158:	e8 40 11 00 00       	call   f29d <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
    e15d:	48 83 c4 20          	add    $0x20,%rsp
    e161:	5b                   	pop    %rbx
    e162:	41 5c                	pop    %r12
    e164:	5d                   	pop    %rbp
    e165:	c3                   	ret

000000000000e166 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e166:	55                   	push   %rbp
    e167:	48 89 e5             	mov    %rsp,%rbp
    e16a:	48 83 ec 10          	sub    $0x10,%rsp
    e16e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e176:	48 89 c7             	mov    %rax,%rdi
    e179:	e8 82 11 00 00       	call   f300 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    e17e:	c9                   	leave
    e17f:	c3                   	ret

000000000000e180 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    e180:	55                   	push   %rbp
    e181:	48 89 e5             	mov    %rsp,%rbp
    e184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    e188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e18c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e197:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e19e:	00 
    e19f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1a3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    e1aa:	00 
	{ }
    e1ab:	90                   	nop
    e1ac:	5d                   	pop    %rbp
    e1ad:	c3                   	ret

000000000000e1ae <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e1ae:	55                   	push   %rbp
    e1af:	48 89 e5             	mov    %rsp,%rbp
    e1b2:	48 83 ec 10          	sub    $0x10,%rsp
    e1b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e1ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e1be:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e1c3:	74 15                	je     e1da <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    e1c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1c9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e1cd:	48 89 d6             	mov    %rdx,%rsi
    e1d0:	48 89 c7             	mov    %rax,%rdi
    e1d3:	e8 42 11 00 00       	call   f31a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    e1d8:	eb 05                	jmp    e1df <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    e1da:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e1df:	c9                   	leave
    e1e0:	c3                   	ret

000000000000e1e1 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    e1e1:	55                   	push   %rbp
    e1e2:	48 89 e5             	mov    %rsp,%rbp
    e1e5:	48 83 ec 20          	sub    $0x20,%rsp
    e1e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e1ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    e1f1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    e1f5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e1f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e1fd:	48 89 d6             	mov    %rdx,%rsi
    e200:	48 89 c7             	mov    %rax,%rdi
    e203:	e8 3c 11 00 00       	call   f344 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    e208:	c9                   	leave
    e209:	c3                   	ret

000000000000e20a <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
    e20a:	55                   	push   %rbp
    e20b:	48 89 e5             	mov    %rsp,%rbp
    e20e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e212:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e216:	90                   	nop
    e217:	5d                   	pop    %rbp
    e218:	c3                   	ret
    e219:	90                   	nop

000000000000e21a <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e21a:	55                   	push   %rbp
    e21b:	48 89 e5             	mov    %rsp,%rbp
    e21e:	48 83 ec 20          	sub    $0x20,%rsp
    e222:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e226:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e22a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e22e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e232:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e236:	48 89 d6             	mov    %rdx,%rsi
    e239:	48 89 c7             	mov    %rax,%rdi
    e23c:	e8 4f 50 ff ff       	call   3290 <_ZdlPvm@plt>
      }
    e241:	c9                   	leave
    e242:	c3                   	ret

000000000000e243 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    e243:	55                   	push   %rbp
    e244:	48 89 e5             	mov    %rsp,%rbp
    e247:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    e24b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e24f:	5d                   	pop    %rbp
    e250:	c3                   	ret
    e251:	90                   	nop

000000000000e252 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e252:	55                   	push   %rbp
    e253:	48 89 e5             	mov    %rsp,%rbp
    e256:	48 83 ec 10          	sub    $0x10,%rsp
    e25a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e25e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e262:	48 89 c7             	mov    %rax,%rdi
    e265:	e8 38 11 00 00       	call   f3a2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    e26a:	c9                   	leave
    e26b:	c3                   	ret

000000000000e26c <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e26c:	55                   	push   %rbp
    e26d:	48 89 e5             	mov    %rsp,%rbp
    e270:	48 83 ec 10          	sub    $0x10,%rsp
    e274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e278:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e27c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e284:	ba 00 00 00 00       	mov    $0x0,%edx
    e289:	48 89 ce             	mov    %rcx,%rsi
    e28c:	48 89 c7             	mov    %rax,%rdi
    e28f:	e8 22 11 00 00       	call   f3b6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    e294:	c9                   	leave
    e295:	c3                   	ret

000000000000e296 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e296:	55                   	push   %rbp
    e297:	48 89 e5             	mov    %rsp,%rbp
    e29a:	48 83 ec 20          	sub    $0x20,%rsp
    e29e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e2a2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e2a6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e2ab:	74 43                	je     e2f0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    e2ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2b1:	48 89 c7             	mov    %rax,%rdi
    e2b4:	e8 68 11 00 00       	call   f421 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    e2b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e2bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2c1:	48 89 c7             	mov    %rax,%rdi
    e2c4:	e8 66 11 00 00       	call   f42f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e2c9:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    e2d0:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    e2d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e2d5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e2d9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e2dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e2e1:	48 89 ce             	mov    %rcx,%rsi
    e2e4:	48 89 c7             	mov    %rax,%rdi
    e2e7:	e8 9d 11 00 00       	call   f489 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    e2ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e2f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e2f4:	c9                   	leave
    e2f5:	c3                   	ret

000000000000e2f6 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    e2f6:	55                   	push   %rbp
    e2f7:	48 89 e5             	mov    %rsp,%rbp
    e2fa:	48 83 ec 20          	sub    $0x20,%rsp
    e2fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e302:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e306:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    e30a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e30e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e316:	48 89 ce             	mov    %rcx,%rsi
    e319:	48 89 c7             	mov    %rax,%rdi
    e31c:	e8 ac 11 00 00       	call   f4cd <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>
    e321:	c9                   	leave
    e322:	c3                   	ret
    e323:	90                   	nop

000000000000e324 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    e324:	55                   	push   %rbp
    e325:	48 89 e5             	mov    %rsp,%rbp
    e328:	48 83 ec 10          	sub    $0x10,%rsp
    e32c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    e330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e334:	48 89 c7             	mov    %rax,%rdi
    e337:	e8 dc 11 00 00       	call   f518 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    e33c:	48 89 c7             	mov    %rax,%rdi
    e33f:	e8 62 60 ff ff       	call   43a6 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    e344:	c9                   	leave
    e345:	c3                   	ret

000000000000e346 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
    e346:	55                   	push   %rbp
    e347:	48 89 e5             	mov    %rsp,%rbp
    e34a:	41 54                	push   %r12
    e34c:	53                   	push   %rbx
    e34d:	48 83 ec 20          	sub    $0x20,%rsp
    e351:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e355:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e359:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e35d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
    e361:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e365:	48 89 c7             	mov    %rax,%rdi
    e368:	e8 7c 63 ff ff       	call   46e9 <_ZSt12__niter_baseIPPKcET_S3_>
    e36d:	49 89 c4             	mov    %rax,%r12
    e370:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e374:	48 89 c7             	mov    %rax,%rdi
    e377:	e8 6d 63 ff ff       	call   46e9 <_ZSt12__niter_baseIPPKcET_S3_>
    e37c:	48 89 c3             	mov    %rax,%rbx
    e37f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e383:	48 89 c7             	mov    %rax,%rdi
    e386:	e8 5e 63 ff ff       	call   46e9 <_ZSt12__niter_baseIPPKcET_S3_>
    e38b:	48 89 c7             	mov    %rax,%rdi
    e38e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e392:	48 89 c1             	mov    %rax,%rcx
    e395:	4c 89 e2             	mov    %r12,%rdx
    e398:	48 89 de             	mov    %rbx,%rsi
    e39b:	e8 86 11 00 00       	call   f526 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
    e3a0:	48 83 c4 20          	add    $0x20,%rsp
    e3a4:	5b                   	pop    %rbx
    e3a5:	41 5c                	pop    %r12
    e3a7:	5d                   	pop    %rbp
    e3a8:	c3                   	ret
    e3a9:	90                   	nop

000000000000e3aa <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e3aa:	55                   	push   %rbp
    e3ab:	48 89 e5             	mov    %rsp,%rbp
    e3ae:	48 83 ec 10          	sub    $0x10,%rsp
    e3b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e3b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3ba:	48 89 c7             	mov    %rax,%rdi
    e3bd:	e8 c8 11 00 00       	call   f58a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    e3c2:	c9                   	leave
    e3c3:	c3                   	ret

000000000000e3c4 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e3c4:	55                   	push   %rbp
    e3c5:	48 89 e5             	mov    %rsp,%rbp
    e3c8:	48 83 ec 10          	sub    $0x10,%rsp
    e3cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e3d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e3d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e3d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3dc:	ba 00 00 00 00       	mov    $0x0,%edx
    e3e1:	48 89 ce             	mov    %rcx,%rsi
    e3e4:	48 89 c7             	mov    %rax,%rdi
    e3e7:	e8 b2 11 00 00       	call   f59e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    e3ec:	c9                   	leave
    e3ed:	c3                   	ret

000000000000e3ee <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e3ee:	55                   	push   %rbp
    e3ef:	48 89 e5             	mov    %rsp,%rbp
    e3f2:	48 83 ec 20          	sub    $0x20,%rsp
    e3f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e3fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e3fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e402:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e406:	48 89 d0             	mov    %rdx,%rax
    e409:	48 c1 e0 06          	shl    $0x6,%rax
    e40d:	48 01 d0             	add    %rdx,%rax
    e410:	48 c1 e0 03          	shl    $0x3,%rax
    e414:	48 89 c2             	mov    %rax,%rdx
    e417:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e41b:	48 89 d6             	mov    %rdx,%rsi
    e41e:	48 89 c7             	mov    %rax,%rdi
    e421:	e8 6a 4e ff ff       	call   3290 <_ZdlPvm@plt>
      }
    e426:	c9                   	leave
    e427:	c3                   	ret

000000000000e428 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e428:	55                   	push   %rbp
    e429:	48 89 e5             	mov    %rsp,%rbp
    e42c:	48 83 ec 20          	sub    $0x20,%rsp
    e430:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e434:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e438:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e43d:	74 43                	je     e482 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    e43f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e443:	48 89 c7             	mov    %rax,%rdi
    e446:	e8 be 11 00 00       	call   f609 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    e44b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e44f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e453:	48 89 c7             	mov    %rax,%rdi
    e456:	e8 bc 11 00 00       	call   f617 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e45b:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    e462:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    e463:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e467:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e46b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e46f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e473:	48 89 ce             	mov    %rcx,%rsi
    e476:	48 89 c7             	mov    %rax,%rdi
    e479:	e8 f3 11 00 00       	call   f671 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    e47e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e486:	c9                   	leave
    e487:	c3                   	ret

000000000000e488 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_create_node(_Args&&... __args)
    e488:	55                   	push   %rbp
    e489:	48 89 e5             	mov    %rsp,%rbp
    e48c:	48 83 ec 20          	sub    $0x20,%rsp
    e490:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e494:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
    e498:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e49c:	48 89 c7             	mov    %rax,%rdi
    e49f:	e8 12 12 00 00       	call   f6b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>
    e4a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    e4a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4ac:	48 89 c7             	mov    %rax,%rdi
    e4af:	e8 f1 e7 ff ff       	call   cca5 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    e4b4:	48 89 c2             	mov    %rax,%rdx
    e4b7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    e4bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e4bf:	48 89 ce             	mov    %rcx,%rsi
    e4c2:	48 89 c7             	mov    %rax,%rdi
    e4c5:	e8 14 12 00 00       	call   f6de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>
	  return __tmp;
    e4ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    e4ce:	c9                   	leave
    e4cf:	c3                   	ret

000000000000e4d0 <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    e4d0:	55                   	push   %rbp
    e4d1:	48 89 e5             	mov    %rsp,%rbp
    e4d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    e4dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4e0:	48 8b 10             	mov    (%rax),%rdx
    e4e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e4e7:	48 8b 00             	mov    (%rax),%rax
    e4ea:	48 39 c2             	cmp    %rax,%rdx
    e4ed:	0f 94 c0             	sete   %al
    e4f0:	5d                   	pop    %rbp
    e4f1:	c3                   	ret

000000000000e4f2 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    e4f2:	55                   	push   %rbp
    e4f3:	48 89 e5             	mov    %rsp,%rbp
    e4f6:	48 83 ec 20          	sub    $0x20,%rsp
    e4fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e502:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    e506:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e50a:	48 89 c7             	mov    %rax,%rdi
    e50d:	e8 6a 12 00 00       	call   f77c <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>
    e512:	48 8b 10             	mov    (%rax),%rdx
    e515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e519:	48 89 10             	mov    %rdx,(%rax)
    e51c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e520:	48 89 c7             	mov    %rax,%rdi
    e523:	e8 62 12 00 00       	call   f78a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    e528:	48 8b 10             	mov    (%rax),%rdx
    e52b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e52f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e533:	90                   	nop
    e534:	c9                   	leave
    e535:	c3                   	ret

000000000000e536 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    e536:	55                   	push   %rbp
    e537:	48 89 e5             	mov    %rsp,%rbp
    e53a:	48 83 ec 10          	sub    $0x10,%rsp
    e53e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    e542:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e546:	48 8b 00             	mov    (%rax),%rax
    e549:	48 89 c7             	mov    %rax,%rdi
    e54c:	e8 7f 4d ff ff       	call   32d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    e551:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e555:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e55c:	c9                   	leave
    e55d:	c3                   	ret

000000000000e55e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    e55e:	55                   	push   %rbp
    e55f:	48 89 e5             	mov    %rsp,%rbp
    e562:	48 83 ec 10          	sub    $0x10,%rsp
    e566:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    e56a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e56e:	48 89 c7             	mov    %rax,%rdi
    e571:	e8 8a ea ff ff       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    e576:	c9                   	leave
    e577:	c3                   	ret

000000000000e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
    e578:	55                   	push   %rbp
    e579:	48 89 e5             	mov    %rsp,%rbp
    e57c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e580:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e584:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    e588:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e58c:	48 8b 10             	mov    (%rax),%rdx
    e58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e593:	48 89 10             	mov    %rdx,(%rax)
    e596:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e59a:	48 8b 10             	mov    (%rax),%rdx
    e59d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5a1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e5a5:	90                   	nop
    e5a6:	5d                   	pop    %rbp
    e5a7:	c3                   	ret

000000000000e5a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e5a8:	55                   	push   %rbp
    e5a9:	48 89 e5             	mov    %rsp,%rbp
    e5ac:	41 54                	push   %r12
    e5ae:	53                   	push   %rbx
    e5af:	48 83 ec 30          	sub    $0x30,%rsp
    e5b3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e5b7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e5bb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e5bf:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    e5c3:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e5c8:	75 43                	jne    e60d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    e5ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e5ce:	48 89 c7             	mov    %rax,%rdi
    e5d1:	e8 18 ea ff ff       	call   cfee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
    e5d6:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    e5da:	74 31                	je     e60d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    e5dc:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e5e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e5e4:	48 89 c7             	mov    %rax,%rdi
    e5e7:	e8 72 ff ff ff       	call   e55e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e5ec:	49 89 c4             	mov    %rax,%r12
    e5ef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e5f3:	48 89 c7             	mov    %rax,%rdi
    e5f6:	e8 05 ea ff ff       	call   d000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    e5fb:	4c 89 e2             	mov    %r12,%rdx
    e5fe:	48 89 c6             	mov    %rax,%rsi
    e601:	48 89 df             	mov    %rbx,%rdi
    e604:	e8 23 ea ff ff       	call   d02c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e609:	84 c0                	test   %al,%al
    e60b:	74 07                	je     e614 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x6c>
    e60d:	b8 01 00 00 00       	mov    $0x1,%eax
    e612:	eb 05                	jmp    e619 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x71>
    e614:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    e619:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    e61c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e620:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    e624:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    e628:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e62c:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e630:	89 c7                	mov    %eax,%edi
    e632:	e8 09 4a ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    e637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e63b:	48 8b 40 28          	mov    0x28(%rax),%rax
    e63f:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e643:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e647:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    e64b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    e64f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e653:	48 89 d6             	mov    %rdx,%rsi
    e656:	48 89 c7             	mov    %rax,%rdi
    e659:	e8 02 e9 ff ff       	call   cf60 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    e65e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    e662:	48 83 c4 30          	add    $0x30,%rsp
    e666:	5b                   	pop    %rbx
    e667:	41 5c                	pop    %r12
    e669:	5d                   	pop    %rbp
    e66a:	c3                   	ret

000000000000e66b <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    e66b:	55                   	push   %rbp
    e66c:	48 89 e5             	mov    %rsp,%rbp
    e66f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    e673:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e677:	5d                   	pop    %rbp
    e678:	c3                   	ret

000000000000e679 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    e679:	55                   	push   %rbp
    e67a:	48 89 e5             	mov    %rsp,%rbp
    e67d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    e681:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e685:	5d                   	pop    %rbp
    e686:	c3                   	ret
    e687:	90                   	nop

000000000000e688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    e688:	55                   	push   %rbp
    e689:	48 89 e5             	mov    %rsp,%rbp
    e68c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e694:	5d                   	pop    %rbp
    e695:	c3                   	ret

000000000000e696 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr()
    e696:	55                   	push   %rbp
    e697:	48 89 e5             	mov    %rsp,%rbp
    e69a:	48 83 ec 10          	sub    $0x10,%rsp
    e69e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    e6a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6a6:	48 83 c0 20          	add    $0x20,%rax
    e6aa:	48 89 c7             	mov    %rax,%rdi
    e6ad:	e8 e6 10 00 00       	call   f798 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
    e6b2:	c9                   	leave
    e6b3:	c3                   	ret

000000000000e6b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    e6b4:	55                   	push   %rbp
    e6b5:	48 89 e5             	mov    %rsp,%rbp
    e6b8:	48 83 ec 10          	sub    $0x10,%rsp
    e6bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    e6c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e6c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6cc:	48 89 d6             	mov    %rdx,%rsi
    e6cf:	48 89 c7             	mov    %rax,%rdi
    e6d2:	e8 db 10 00 00       	call   f7b2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>
	}
    e6d7:	90                   	nop
    e6d8:	c9                   	leave
    e6d9:	c3                   	ret

000000000000e6da <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    e6da:	55                   	push   %rbp
    e6db:	48 89 e5             	mov    %rsp,%rbp
    e6de:	48 83 ec 20          	sub    $0x20,%rsp
    e6e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e6ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    e6ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e6f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e6f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6fa:	48 89 ce             	mov    %rcx,%rsi
    e6fd:	48 89 c7             	mov    %rax,%rdi
    e700:	e8 cd 10 00 00       	call   f7d2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>
    e705:	90                   	nop
    e706:	c9                   	leave
    e707:	c3                   	ret

000000000000e708 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr() const
    e708:	55                   	push   %rbp
    e709:	48 89 e5             	mov    %rsp,%rbp
    e70c:	48 83 ec 10          	sub    $0x10,%rsp
    e710:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    e714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e718:	48 83 c0 20          	add    $0x20,%rax
    e71c:	48 89 c7             	mov    %rax,%rdi
    e71f:	e8 de 10 00 00       	call   f802 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
    e724:	c9                   	leave
    e725:	c3                   	ret

000000000000e726 <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>:
      operator()(const _Tp& __x) const
    e726:	55                   	push   %rbp
    e727:	48 89 e5             	mov    %rsp,%rbp
    e72a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e72e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
    e732:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e736:	5d                   	pop    %rbp
    e737:	c3                   	ret

000000000000e738 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    e738:	55                   	push   %rbp
    e739:	48 89 e5             	mov    %rsp,%rbp
    e73c:	48 83 ec 10          	sub    $0x10,%rsp
    e740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e744:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    e748:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e74c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e750:	48 89 d6             	mov    %rdx,%rsi
    e753:	48 89 c7             	mov    %rax,%rdi
    e756:	e8 d5 48 ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    e75b:	c1 e8 1f             	shr    $0x1f,%eax
    e75e:	c9                   	leave
    e75f:	c3                   	ret

000000000000e760 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e760:	55                   	push   %rbp
    e761:	48 89 e5             	mov    %rsp,%rbp
    e764:	48 83 ec 10          	sub    $0x10,%rsp
    e768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e76c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e770:	48 89 c7             	mov    %rax,%rdi
    e773:	e8 a4 10 00 00       	call   f81c <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    e778:	c9                   	leave
    e779:	c3                   	ret

000000000000e77a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e77a:	55                   	push   %rbp
    e77b:	48 89 e5             	mov    %rsp,%rbp
    e77e:	48 83 ec 20          	sub    $0x20,%rsp
    e782:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e786:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e78a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e78f:	74 40                	je     e7d1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    e791:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e795:	48 89 c7             	mov    %rax,%rdi
    e798:	e8 99 10 00 00       	call   f836 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    e79d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e7a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7a5:	48 89 c7             	mov    %rax,%rdi
    e7a8:	e8 97 10 00 00       	call   f844 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    e7ad:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e7b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e7b6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e7ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e7be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7c2:	48 89 ce             	mov    %rcx,%rsi
    e7c5:	48 89 c7             	mov    %rax,%rdi
    e7c8:	e8 a4 10 00 00       	call   f871 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    e7cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e7d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e7d5:	c9                   	leave
    e7d6:	c3                   	ret
    e7d7:	90                   	nop

000000000000e7d8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e7d8:	55                   	push   %rbp
    e7d9:	48 89 e5             	mov    %rsp,%rbp
    e7dc:	48 83 ec 20          	sub    $0x20,%rsp
    e7e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e7e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e7ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7f0:	48 89 c7             	mov    %rax,%rdi
    e7f3:	e8 be 10 00 00       	call   f8b6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    e7f8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e7fc:	0f 92 c0             	setb   %al
    e7ff:	0f b6 c0             	movzbl %al,%eax
    e802:	48 85 c0             	test   %rax,%rax
    e805:	0f 95 c0             	setne  %al
    e808:	84 c0                	test   %al,%al
    e80a:	74 1a                	je     e826 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e80c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e813:	ff ff 1f 
    e816:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e81a:	73 05                	jae    e821 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e81c:	e8 9f 49 ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e821:	e8 7a 48 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e826:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e82a:	48 c1 e0 03          	shl    $0x3,%rax
    e82e:	48 89 c7             	mov    %rax,%rdi
    e831:	e8 4a 4a ff ff       	call   3280 <_Znwm@plt>
    e836:	90                   	nop
      }
    e837:	c9                   	leave
    e838:	c3                   	ret

000000000000e839 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>:
    __niter_base(_Iterator __it)
    e839:	55                   	push   %rbp
    e83a:	48 89 e5             	mov    %rsp,%rbp
    e83d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    e841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e845:	5d                   	pop    %rbp
    e846:	c3                   	ret

000000000000e847 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    e847:	55                   	push   %rbp
    e848:	48 89 e5             	mov    %rsp,%rbp
    e84b:	48 83 ec 30          	sub    $0x30,%rsp
    e84f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e853:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e857:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e85b:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    e85f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e863:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    e867:	48 c1 f8 03          	sar    $0x3,%rax
    e86b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    e86f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e874:	7e 1f                	jle    e895 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    e876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e87a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e881:	00 
    e882:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e886:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e88a:	48 89 ce             	mov    %rcx,%rsi
    e88d:	48 89 c7             	mov    %rax,%rdi
    e890:	e8 2b 4c ff ff       	call   34c0 <memmove@plt>
      return __result + __count;
    e895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e899:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e8a0:	00 
    e8a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e8a5:	48 01 d0             	add    %rdx,%rax
    }
    e8a8:	c9                   	leave
    e8a9:	c3                   	ret

000000000000e8aa <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e8aa:	55                   	push   %rbp
    e8ab:	48 89 e5             	mov    %rsp,%rbp
    e8ae:	48 83 ec 10          	sub    $0x10,%rsp
    e8b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e8b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ba:	48 89 c7             	mov    %rax,%rdi
    e8bd:	e8 08 10 00 00       	call   f8ca <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    e8c2:	c9                   	leave
    e8c3:	c3                   	ret

000000000000e8c4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e8c4:	55                   	push   %rbp
    e8c5:	48 89 e5             	mov    %rsp,%rbp
    e8c8:	48 83 ec 20          	sub    $0x20,%rsp
    e8cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e8d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e8d4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e8d9:	74 40                	je     e91b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    e8db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e8df:	48 89 c7             	mov    %rax,%rdi
    e8e2:	e8 fd 0f 00 00       	call   f8e4 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    e8e7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e8eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ef:	48 89 c7             	mov    %rax,%rdi
    e8f2:	e8 fb 0f 00 00       	call   f8f2 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    e8f7:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e8fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e900:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e904:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e908:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e90c:	48 89 ce             	mov    %rcx,%rsi
    e90f:	48 89 c7             	mov    %rax,%rdi
    e912:	e8 01 10 00 00       	call   f918 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    e917:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e91b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e91f:	c9                   	leave
    e920:	c3                   	ret
    e921:	90                   	nop

000000000000e922 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e922:	55                   	push   %rbp
    e923:	48 89 e5             	mov    %rsp,%rbp
    e926:	48 83 ec 20          	sub    $0x20,%rsp
    e92a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e92e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e932:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e93a:	48 89 c7             	mov    %rax,%rdi
    e93d:	e8 1a 10 00 00       	call   f95c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    e942:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e946:	0f 92 c0             	setb   %al
    e949:	0f b6 c0             	movzbl %al,%eax
    e94c:	48 85 c0             	test   %rax,%rax
    e94f:	0f 95 c0             	setne  %al
    e952:	84 c0                	test   %al,%al
    e954:	74 1a                	je     e970 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e956:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    e95d:	ff ff 3f 
    e960:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e964:	73 05                	jae    e96b <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e966:	e8 55 48 ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e96b:	e8 30 47 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e970:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e974:	48 c1 e0 02          	shl    $0x2,%rax
    e978:	48 89 c7             	mov    %rax,%rdi
    e97b:	e8 00 49 ff ff       	call   3280 <_Znwm@plt>
    e980:	90                   	nop
      }
    e981:	c9                   	leave
    e982:	c3                   	ret

000000000000e983 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>:
    __niter_base(_Iterator __it)
    e983:	55                   	push   %rbp
    e984:	48 89 e5             	mov    %rsp,%rbp
    e987:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    e98b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e98f:	5d                   	pop    %rbp
    e990:	c3                   	ret

000000000000e991 <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    e991:	55                   	push   %rbp
    e992:	48 89 e5             	mov    %rsp,%rbp
    e995:	48 83 ec 30          	sub    $0x30,%rsp
    e999:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e99d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e9a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e9a5:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    e9a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e9ad:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    e9b1:	48 c1 f8 02          	sar    $0x2,%rax
    e9b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    e9b9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e9be:	7e 1f                	jle    e9df <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    e9c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9c4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    e9cb:	00 
    e9cc:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    e9d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9d4:	48 89 ce             	mov    %rcx,%rsi
    e9d7:	48 89 c7             	mov    %rax,%rdi
    e9da:	e8 e1 4a ff ff       	call   34c0 <memmove@plt>
      return __result + __count;
    e9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9e3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    e9ea:	00 
    e9eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9ef:	48 01 d0             	add    %rdx,%rax
    }
    e9f2:	c9                   	leave
    e9f3:	c3                   	ret

000000000000e9f4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e9f4:	55                   	push   %rbp
    e9f5:	48 89 e5             	mov    %rsp,%rbp
    e9f8:	48 83 ec 10          	sub    $0x10,%rsp
    e9fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ea00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea04:	48 89 c7             	mov    %rax,%rdi
    ea07:	e8 64 0f 00 00       	call   f970 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    ea0c:	c9                   	leave
    ea0d:	c3                   	ret

000000000000ea0e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    ea0e:	55                   	push   %rbp
    ea0f:	48 89 e5             	mov    %rsp,%rbp
    ea12:	48 83 ec 10          	sub    $0x10,%rsp
    ea16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    ea1e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ea22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea26:	ba 00 00 00 00       	mov    $0x0,%edx
    ea2b:	48 89 ce             	mov    %rcx,%rsi
    ea2e:	48 89 c7             	mov    %rax,%rdi
    ea31:	e8 4e 0f 00 00       	call   f984 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    ea36:	c9                   	leave
    ea37:	c3                   	ret

000000000000ea38 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ea38:	55                   	push   %rbp
    ea39:	48 89 e5             	mov    %rsp,%rbp
    ea3c:	48 83 ec 20          	sub    $0x20,%rsp
    ea40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea48:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ea4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea50:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ea57:	00 
    ea58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea5c:	48 89 d6             	mov    %rdx,%rsi
    ea5f:	48 89 c7             	mov    %rax,%rdi
    ea62:	e8 29 48 ff ff       	call   3290 <_ZdlPvm@plt>
      }
    ea67:	c9                   	leave
    ea68:	c3                   	ret

000000000000ea69 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    ea69:	55                   	push   %rbp
    ea6a:	48 89 e5             	mov    %rsp,%rbp
    ea6d:	48 83 ec 20          	sub    $0x20,%rsp
    ea71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ea75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    ea79:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    ea7e:	74 40                	je     eac0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    ea80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea84:	48 89 c7             	mov    %rax,%rdi
    ea87:	e8 59 0f 00 00       	call   f9e5 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    ea8c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    ea90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea94:	48 89 c7             	mov    %rax,%rdi
    ea97:	e8 57 0f 00 00       	call   f9f3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    ea9c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    eaa1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eaa5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    eaa9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eaad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eab1:	48 89 ce             	mov    %rcx,%rsi
    eab4:	48 89 c7             	mov    %rax,%rdi
    eab7:	e8 5e 0f 00 00       	call   fa1a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    eabc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    eac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    eac4:	c9                   	leave
    eac5:	c3                   	ret

000000000000eac6 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    eac6:	55                   	push   %rbp
    eac7:	48 89 e5             	mov    %rsp,%rbp
    eaca:	48 83 ec 10          	sub    $0x10,%rsp
    eace:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ead2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ead6:	48 89 c7             	mov    %rax,%rdi
    ead9:	e8 80 0f 00 00       	call   fa5e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    eade:	c9                   	leave
    eadf:	c3                   	ret

000000000000eae0 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    eae0:	55                   	push   %rbp
    eae1:	48 89 e5             	mov    %rsp,%rbp
    eae4:	48 83 ec 10          	sub    $0x10,%rsp
    eae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eaec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    eaf0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eaf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaf8:	ba 00 00 00 00       	mov    $0x0,%edx
    eafd:	48 89 ce             	mov    %rcx,%rsi
    eb00:	48 89 c7             	mov    %rax,%rdi
    eb03:	e8 6a 0f 00 00       	call   fa72 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    eb08:	c9                   	leave
    eb09:	c3                   	ret

000000000000eb0a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    eb0a:	55                   	push   %rbp
    eb0b:	48 89 e5             	mov    %rsp,%rbp
    eb0e:	48 83 ec 20          	sub    $0x20,%rsp
    eb12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    eb1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eb22:	48 89 d0             	mov    %rdx,%rax
    eb25:	48 01 c0             	add    %rax,%rax
    eb28:	48 01 d0             	add    %rdx,%rax
    eb2b:	48 c1 e0 03          	shl    $0x3,%rax
    eb2f:	48 89 c2             	mov    %rax,%rdx
    eb32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eb36:	48 89 d6             	mov    %rdx,%rsi
    eb39:	48 89 c7             	mov    %rax,%rdi
    eb3c:	e8 4f 47 ff ff       	call   3290 <_ZdlPvm@plt>
      }
    eb41:	c9                   	leave
    eb42:	c3                   	ret

000000000000eb43 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    eb43:	55                   	push   %rbp
    eb44:	48 89 e5             	mov    %rsp,%rbp
    eb47:	48 83 ec 20          	sub    $0x20,%rsp
    eb4b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eb4f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    eb53:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    eb58:	74 40                	je     eb9a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    eb5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb5e:	48 89 c7             	mov    %rax,%rdi
    eb61:	e8 76 0f 00 00       	call   fadc <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    eb66:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    eb6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb6e:	48 89 c7             	mov    %rax,%rdi
    eb71:	e8 74 0f 00 00       	call   faea <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    eb76:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    eb7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eb7f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    eb83:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eb87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb8b:	48 89 ce             	mov    %rcx,%rsi
    eb8e:	48 89 c7             	mov    %rax,%rdi
    eb91:	e8 9d 0f 00 00       	call   fb33 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    eb96:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    eb9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    eb9e:	c9                   	leave
    eb9f:	c3                   	ret

000000000000eba0 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    eba0:	55                   	push   %rbp
    eba1:	48 89 e5             	mov    %rsp,%rbp
    eba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eba8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ebac:	90                   	nop
    ebad:	5d                   	pop    %rbp
    ebae:	c3                   	ret
    ebaf:	90                   	nop

000000000000ebb0 <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    ebb0:	55                   	push   %rbp
    ebb1:	48 89 e5             	mov    %rsp,%rbp
    ebb4:	48 83 ec 20          	sub    $0x20,%rsp
    ebb8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    ebbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ebc0:	48 8b 10             	mov    (%rax),%rdx
    ebc3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ebc7:	48 89 d6             	mov    %rdx,%rsi
    ebca:	48 89 c7             	mov    %rax,%rdi
    ebcd:	e8 d0 ec ff ff       	call   d8a2 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
    ebd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebd6:	c9                   	leave
    ebd7:	c3                   	ret

000000000000ebd8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    ebd8:	55                   	push   %rbp
    ebd9:	48 89 e5             	mov    %rsp,%rbp
    ebdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    ebe0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebe4:	48 83 c0 08          	add    $0x8,%rax
    ebe8:	5d                   	pop    %rbp
    ebe9:	c3                   	ret

000000000000ebea <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    ebea:	55                   	push   %rbp
    ebeb:	48 89 e5             	mov    %rsp,%rbp
    ebee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    ebf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebf6:	48 8b 40 28          	mov    0x28(%rax),%rax
    ebfa:	5d                   	pop    %rbp
    ebfb:	c3                   	ret

000000000000ebfc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    ebfc:	55                   	push   %rbp
    ebfd:	48 89 e5             	mov    %rsp,%rbp
    ec00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    ec04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec08:	48 83 c0 20          	add    $0x20,%rax
    ec0c:	5d                   	pop    %rbp
    ec0d:	c3                   	ret

000000000000ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    ec0e:	55                   	push   %rbp
    ec0f:	48 89 e5             	mov    %rsp,%rbp
    ec12:	48 83 ec 10          	sub    $0x10,%rsp
    ec16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    ec1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec1e:	48 89 c7             	mov    %rax,%rdi
    ec21:	e8 51 0f 00 00       	call   fb77 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
    ec26:	c9                   	leave
    ec27:	c3                   	ret

000000000000ec28 <_ZNKSt4lessIjEclERKjS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
    ec28:	55                   	push   %rbp
    ec29:	48 89 e5             	mov    %rsp,%rbp
    ec2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ec34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    ec38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec3c:	8b 10                	mov    (%rax),%edx
    ec3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec42:	8b 00                	mov    (%rax),%eax
    ec44:	39 c2                	cmp    %eax,%edx
    ec46:	0f 92 c0             	setb   %al
    ec49:	5d                   	pop    %rbp
    ec4a:	c3                   	ret
    ec4b:	90                   	nop

000000000000ec4c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    ec4c:	55                   	push   %rbp
    ec4d:	48 89 e5             	mov    %rsp,%rbp
    ec50:	53                   	push   %rbx
    ec51:	48 83 ec 78          	sub    $0x78,%rsp
    ec55:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    ec59:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    ec5d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ec61:	48 89 c7             	mov    %rax,%rdi
    ec64:	e8 ab b7 ff ff       	call   a414 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
    ec69:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    ec6d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ec71:	48 89 c7             	mov    %rax,%rdi
    ec74:	e8 5f ff ff ff       	call   ebd8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
    ec79:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    ec7d:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    ec81:	eb 51                	jmp    ecd4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x88>
	  __y = __x;
    ec83:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ec87:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    ec8b:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    ec8f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ec93:	48 89 c7             	mov    %rax,%rdi
    ec96:	e8 dc 0e 00 00       	call   fb77 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
    ec9b:	48 89 c2             	mov    %rax,%rdx
    ec9e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    eca2:	48 89 c6             	mov    %rax,%rsi
    eca5:	48 89 df             	mov    %rbx,%rdi
    eca8:	e8 7b ff ff ff       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    ecad:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    ecb0:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    ecb4:	74 0e                	je     ecc4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x78>
    ecb6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ecba:	48 89 c7             	mov    %rax,%rdi
    ecbd:	e8 97 d4 ff ff       	call   c159 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
    ecc2:	eb 0c                	jmp    ecd0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x84>
    ecc4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ecc8:	48 89 c7             	mov    %rax,%rdi
    eccb:	e8 77 d4 ff ff       	call   c147 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    ecd0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    ecd4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ecd8:	48 85 c0             	test   %rax,%rax
    ecdb:	75 a6                	jne    ec83 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x37>
      iterator __j = iterator(__y);
    ecdd:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    ece1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ece5:	48 89 d6             	mov    %rdx,%rsi
    ece8:	48 89 c7             	mov    %rax,%rdi
    eceb:	e8 b2 eb ff ff       	call   d8a2 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    ecf0:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    ecf4:	74 54                	je     ed4a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xfe>
	  if (__j == begin())
    ecf6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    ecfa:	48 89 c7             	mov    %rax,%rdi
    ecfd:	e8 a2 0e 00 00       	call   fba4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
    ed02:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ed06:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    ed0a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ed0e:	48 89 d6             	mov    %rdx,%rsi
    ed11:	48 89 c7             	mov    %rax,%rdi
    ed14:	e8 b4 0e 00 00       	call   fbcd <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>
    ed19:	84 c0                	test   %al,%al
    ed1b:	74 21                	je     ed3e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xf2>
	    return _Res(__x, __y);
    ed1d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    ed21:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    ed25:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ed29:	48 89 ce             	mov    %rcx,%rsi
    ed2c:	48 89 c7             	mov    %rax,%rdi
    ed2f:	e8 bc 0e 00 00       	call   fbf0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
    ed34:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ed38:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    ed3c:	eb 7d                	jmp    edbb <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
	    --__j;
    ed3e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ed42:	48 89 c7             	mov    %rax,%rdi
    ed45:	e8 ce 00 00 00       	call   ee18 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    ed4a:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    ed4e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    ed52:	48 89 c7             	mov    %rax,%rdi
    ed55:	e8 b4 fe ff ff       	call   ec0e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    ed5a:	48 89 c1             	mov    %rax,%rcx
    ed5d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ed61:	48 89 c2             	mov    %rax,%rdx
    ed64:	48 89 ce             	mov    %rcx,%rsi
    ed67:	48 89 df             	mov    %rbx,%rdi
    ed6a:	e8 b9 fe ff ff       	call   ec28 <_ZNKSt4lessIjEclERKjS2_>
    ed6f:	84 c0                	test   %al,%al
    ed71:	74 21                	je     ed94 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x148>
	return _Res(__x, __y);
    ed73:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    ed77:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    ed7b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ed7f:	48 89 ce             	mov    %rcx,%rsi
    ed82:	48 89 c7             	mov    %rax,%rdi
    ed85:	e8 66 0e 00 00       	call   fbf0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
    ed8a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ed8e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ed92:	eb 27                	jmp    edbb <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
      return _Res(__j._M_node, 0);
    ed94:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    ed9b:	00 
    ed9c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    eda0:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    eda4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    eda8:	48 89 ce             	mov    %rcx,%rsi
    edab:	48 89 c7             	mov    %rax,%rdi
    edae:	e8 c5 f7 ff ff       	call   e578 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    edb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    edb7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    edbb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    edbf:	c9                   	leave
    edc0:	c3                   	ret
    edc1:	90                   	nop

000000000000edc2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    edc2:	55                   	push   %rbp
    edc3:	48 89 e5             	mov    %rsp,%rbp
    edc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    edca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edce:	48 83 c0 18          	add    $0x18,%rax
    edd2:	5d                   	pop    %rbp
    edd3:	c3                   	ret

000000000000edd4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    edd4:	55                   	push   %rbp
    edd5:	48 89 e5             	mov    %rsp,%rbp
    edd8:	48 83 ec 20          	sub    $0x20,%rsp
    eddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ede0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ede4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    ede8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    edec:	48 89 c7             	mov    %rax,%rdi
    edef:	e8 96 09 00 00       	call   f78a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    edf4:	48 8b 10             	mov    (%rax),%rdx
    edf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edfb:	48 89 10             	mov    %rdx,(%rax)
    edfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee02:	48 89 c7             	mov    %rax,%rdi
    ee05:	e8 80 09 00 00       	call   f78a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    ee0a:	48 8b 10             	mov    (%rax),%rdx
    ee0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee11:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ee15:	90                   	nop
    ee16:	c9                   	leave
    ee17:	c3                   	ret

000000000000ee18 <_ZNSt17_Rb_tree_iteratorIjEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    ee18:	55                   	push   %rbp
    ee19:	48 89 e5             	mov    %rsp,%rbp
    ee1c:	48 83 ec 10          	sub    $0x10,%rsp
    ee20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    ee24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee28:	48 8b 00             	mov    (%rax),%rax
    ee2b:	48 89 c7             	mov    %rax,%rdi
    ee2e:	e8 9d 44 ff ff       	call   32d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    ee33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ee37:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    ee3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ee3e:	c9                   	leave
    ee3f:	c3                   	ret

000000000000ee40 <_ZNSt17_Rb_tree_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    ee40:	55                   	push   %rbp
    ee41:	48 89 e5             	mov    %rsp,%rbp
    ee44:	48 83 ec 10          	sub    $0x10,%rsp
    ee48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    ee4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee50:	48 8b 00             	mov    (%rax),%rax
    ee53:	48 89 c7             	mov    %rax,%rdi
    ee56:	e8 15 43 ff ff       	call   3170 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    ee5b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ee5f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    ee62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ee66:	c9                   	leave
    ee67:	c3                   	ret

000000000000ee68 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>:
	  operator()(_GLIBCXX_FWDREF(_Arg) __arg) const
    ee68:	55                   	push   %rbp
    ee69:	48 89 e5             	mov    %rsp,%rbp
    ee6c:	53                   	push   %rbx
    ee6d:	48 83 ec 18          	sub    $0x18,%rsp
    ee71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ee75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
    ee79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee7d:	48 8b 18             	mov    (%rax),%rbx
    ee80:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ee84:	48 89 c7             	mov    %rax,%rdi
    ee87:	e8 90 ee ff ff       	call   dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
    ee8c:	48 89 c6             	mov    %rax,%rsi
    ee8f:	48 89 df             	mov    %rbx,%rdi
    ee92:	e8 9d 0d 00 00       	call   fc34 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>
    ee97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ee9b:	c9                   	leave
    ee9c:	c3                   	ret
    ee9d:	90                   	nop

000000000000ee9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    ee9e:	55                   	push   %rbp
    ee9f:	48 89 e5             	mov    %rsp,%rbp
    eea2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    eea6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeaa:	5d                   	pop    %rbp
    eeab:	c3                   	ret

000000000000eeac <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr()
    eeac:	55                   	push   %rbp
    eead:	48 89 e5             	mov    %rsp,%rbp
    eeb0:	48 83 ec 10          	sub    $0x10,%rsp
    eeb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    eeb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eebc:	48 83 c0 20          	add    $0x20,%rax
    eec0:	48 89 c7             	mov    %rax,%rdi
    eec3:	e8 b4 0d 00 00       	call   fc7c <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
    eec8:	c9                   	leave
    eec9:	c3                   	ret

000000000000eeca <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    eeca:	55                   	push   %rbp
    eecb:	48 89 e5             	mov    %rsp,%rbp
    eece:	48 83 ec 10          	sub    $0x10,%rsp
    eed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eed6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    eeda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eee2:	48 89 d6             	mov    %rdx,%rsi
    eee5:	48 89 c7             	mov    %rax,%rdi
    eee8:	e8 a9 0d 00 00       	call   fc96 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>
	}
    eeed:	90                   	nop
    eeee:	c9                   	leave
    eeef:	c3                   	ret

000000000000eef0 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    eef0:	55                   	push   %rbp
    eef1:	48 89 e5             	mov    %rsp,%rbp
    eef4:	48 83 ec 20          	sub    $0x20,%rsp
    eef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eefc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ef04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef08:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ef0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef10:	48 89 ce             	mov    %rcx,%rsi
    ef13:	48 89 c7             	mov    %rax,%rdi
    ef16:	e8 8b 0d 00 00       	call   fca6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>
    ef1b:	90                   	nop
    ef1c:	c9                   	leave
    ef1d:	c3                   	ret

000000000000ef1e <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ef1e:	55                   	push   %rbp
    ef1f:	48 89 e5             	mov    %rsp,%rbp
    ef22:	48 83 ec 20          	sub    $0x20,%rsp
    ef26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ef2a:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
    ef31:	33 33 03 
    ef34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ef38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef3c:	48 89 c7             	mov    %rax,%rdi
    ef3f:	e8 9c 0d 00 00       	call   fce0 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>
    ef44:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ef48:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ef4c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ef50:	48 89 d6             	mov    %rdx,%rsi
    ef53:	48 89 c7             	mov    %rax,%rdi
    ef56:	e8 d6 55 ff ff       	call   4531 <_ZSt3minImERKT_S2_S2_>
    ef5b:	48 8b 00             	mov    (%rax),%rax
      }
    ef5e:	c9                   	leave
    ef5f:	c3                   	ret

000000000000ef60 <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    ef60:	55                   	push   %rbp
    ef61:	48 89 e5             	mov    %rsp,%rbp
    ef64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ef68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef6c:	5d                   	pop    %rbp
    ef6d:	c3                   	ret

000000000000ef6e <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ef6e:	55                   	push   %rbp
    ef6f:	48 89 e5             	mov    %rsp,%rbp
    ef72:	48 83 ec 20          	sub    $0x20,%rsp
    ef76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef7e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ef82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef86:	48 89 c7             	mov    %rax,%rdi
    ef89:	e8 6c 0d 00 00       	call   fcfa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
    ef8e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ef92:	0f 92 c0             	setb   %al
    ef95:	0f b6 c0             	movzbl %al,%eax
    ef98:	48 85 c0             	test   %rax,%rax
    ef9b:	0f 95 c0             	setne  %al
    ef9e:	84 c0                	test   %al,%al
    efa0:	74 1a                	je     efbc <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    efa2:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    efa9:	66 66 06 
    efac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    efb0:	73 05                	jae    efb7 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    efb2:	e8 09 42 ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    efb7:	e8 e4 40 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    efbc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    efc0:	48 89 d0             	mov    %rdx,%rax
    efc3:	48 c1 e0 02          	shl    $0x2,%rax
    efc7:	48 01 d0             	add    %rdx,%rax
    efca:	48 c1 e0 03          	shl    $0x3,%rax
    efce:	48 89 c7             	mov    %rax,%rdi
    efd1:	e8 aa 42 ff ff       	call   3280 <_Znwm@plt>
    efd6:	90                   	nop
      }
    efd7:	c9                   	leave
    efd8:	c3                   	ret

000000000000efd9 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
    efd9:	55                   	push   %rbp
    efda:	48 89 e5             	mov    %rsp,%rbp
    efdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    efe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efe5:	5d                   	pop    %rbp
    efe6:	c3                   	ret

000000000000efe7 <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    efe7:	55                   	push   %rbp
    efe8:	48 89 e5             	mov    %rsp,%rbp
    efeb:	48 83 ec 30          	sub    $0x30,%rsp
    efef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eff3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eff7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    effb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    efff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f003:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f007:	48 c1 f8 03          	sar    $0x3,%rax
    f00b:	48 89 c2             	mov    %rax,%rdx
    f00e:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    f015:	cc cc cc 
    f018:	48 0f af c2          	imul   %rdx,%rax
    f01c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    f020:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f025:	7e 28                	jle    f04f <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x68>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    f027:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f02b:	48 89 d0             	mov    %rdx,%rax
    f02e:	48 c1 e0 02          	shl    $0x2,%rax
    f032:	48 01 d0             	add    %rdx,%rax
    f035:	48 c1 e0 03          	shl    $0x3,%rax
    f039:	48 89 c2             	mov    %rax,%rdx
    f03c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f040:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f044:	48 89 ce             	mov    %rcx,%rsi
    f047:	48 89 c7             	mov    %rax,%rdi
    f04a:	e8 71 44 ff ff       	call   34c0 <memmove@plt>
      return __result + __count;
    f04f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f053:	48 89 d0             	mov    %rdx,%rax
    f056:	48 c1 e0 02          	shl    $0x2,%rax
    f05a:	48 01 d0             	add    %rdx,%rax
    f05d:	48 c1 e0 03          	shl    $0x3,%rax
    f061:	48 89 c2             	mov    %rax,%rdx
    f064:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f068:	48 01 d0             	add    %rdx,%rax
    }
    f06b:	c9                   	leave
    f06c:	c3                   	ret

000000000000f06d <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    f06d:	55                   	push   %rbp
    f06e:	48 89 e5             	mov    %rsp,%rbp
    f071:	48 83 ec 10          	sub    $0x10,%rsp
    f075:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    f079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f07d:	48 89 c7             	mov    %rax,%rdi
    f080:	e8 89 0c 00 00       	call   fd0e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    f085:	c9                   	leave
    f086:	c3                   	ret

000000000000f087 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    f087:	55                   	push   %rbp
    f088:	48 89 e5             	mov    %rsp,%rbp
    f08b:	48 83 ec 20          	sub    $0x20,%rsp
    f08f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f093:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    f097:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    f09c:	74 40                	je     f0de <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    f09e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f0a2:	48 89 c7             	mov    %rax,%rdi
    f0a5:	e8 7e 0c 00 00       	call   fd28 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    f0aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    f0ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0b2:	48 89 c7             	mov    %rax,%rdi
    f0b5:	e8 7c 0c 00 00       	call   fd36 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    f0ba:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    f0bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f0c3:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    f0c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f0cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f0cf:	48 89 ce             	mov    %rcx,%rsi
    f0d2:	48 89 c7             	mov    %rax,%rdi
    f0d5:	e8 83 0c 00 00       	call   fd5d <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    f0da:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    f0de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    f0e2:	c9                   	leave
    f0e3:	c3                   	ret

000000000000f0e4 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    f0e4:	55                   	push   %rbp
    f0e5:	48 89 e5             	mov    %rsp,%rbp
    f0e8:	48 83 ec 20          	sub    $0x20,%rsp
    f0ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f0f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f0f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f0f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0fc:	48 89 c7             	mov    %rax,%rdi
    f0ff:	e8 9e 0c 00 00       	call   fda2 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    f104:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f108:	0f 92 c0             	setb   %al
    f10b:	0f b6 c0             	movzbl %al,%eax
    f10e:	48 85 c0             	test   %rax,%rax
    f111:	0f 95 c0             	setne  %al
    f114:	84 c0                	test   %al,%al
    f116:	74 1a                	je     f132 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f118:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    f11f:	ff ff 1f 
    f122:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f126:	73 05                	jae    f12d <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    f128:	e8 93 40 ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f12d:	e8 6e 3f ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f132:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f136:	48 c1 e0 03          	shl    $0x3,%rax
    f13a:	48 89 c7             	mov    %rax,%rdi
    f13d:	e8 3e 41 ff ff       	call   3280 <_Znwm@plt>
    f142:	90                   	nop
      }
    f143:	c9                   	leave
    f144:	c3                   	ret

000000000000f145 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>:
    __niter_base(_Iterator __it)
    f145:	55                   	push   %rbp
    f146:	48 89 e5             	mov    %rsp,%rbp
    f149:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f14d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f151:	5d                   	pop    %rbp
    f152:	c3                   	ret

000000000000f153 <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    f153:	55                   	push   %rbp
    f154:	48 89 e5             	mov    %rsp,%rbp
    f157:	48 83 ec 30          	sub    $0x30,%rsp
    f15b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f15f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f163:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f167:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    f16b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f16f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f173:	48 c1 f8 03          	sar    $0x3,%rax
    f177:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    f17b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f180:	7e 1f                	jle    f1a1 <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    f182:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f186:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f18d:	00 
    f18e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f192:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f196:	48 89 ce             	mov    %rcx,%rsi
    f199:	48 89 c7             	mov    %rax,%rdi
    f19c:	e8 1f 43 ff ff       	call   34c0 <memmove@plt>
      return __result + __count;
    f1a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f1ac:	00 
    f1ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f1b1:	48 01 d0             	add    %rdx,%rax
    }
    f1b4:	c9                   	leave
    f1b5:	c3                   	ret

000000000000f1b6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    f1b6:	55                   	push   %rbp
    f1b7:	48 89 e5             	mov    %rsp,%rbp
    f1ba:	48 83 ec 10          	sub    $0x10,%rsp
    f1be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    f1c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1c6:	48 89 c7             	mov    %rax,%rdi
    f1c9:	e8 e8 0b 00 00       	call   fdb6 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
    f1ce:	c9                   	leave
    f1cf:	c3                   	ret

000000000000f1d0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    f1d0:	55                   	push   %rbp
    f1d1:	48 89 e5             	mov    %rsp,%rbp
    f1d4:	48 83 ec 20          	sub    $0x20,%rsp
    f1d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f1dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    f1e0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    f1e5:	74 40                	je     f227 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    f1e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f1eb:	48 89 c7             	mov    %rax,%rdi
    f1ee:	e8 dd 0b 00 00       	call   fdd0 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
    f1f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    f1f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1fb:	48 89 c7             	mov    %rax,%rdi
    f1fe:	e8 db 0b 00 00       	call   fdde <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
    f203:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    f208:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f20c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    f210:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f214:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f218:	48 89 ce             	mov    %rcx,%rsi
    f21b:	48 89 c7             	mov    %rax,%rdi
    f21e:	e8 e2 0b 00 00       	call   fe05 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
    f223:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    f227:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    f22b:	c9                   	leave
    f22c:	c3                   	ret
    f22d:	90                   	nop

000000000000f22e <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    f22e:	55                   	push   %rbp
    f22f:	48 89 e5             	mov    %rsp,%rbp
    f232:	48 83 ec 20          	sub    $0x20,%rsp
    f236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f23a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f23e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f246:	48 89 c7             	mov    %rax,%rdi
    f249:	e8 fc 0b 00 00       	call   fe4a <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
    f24e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f252:	0f 92 c0             	setb   %al
    f255:	0f b6 c0             	movzbl %al,%eax
    f258:	48 85 c0             	test   %rax,%rax
    f25b:	0f 95 c0             	setne  %al
    f25e:	84 c0                	test   %al,%al
    f260:	74 1a                	je     f27c <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f262:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    f269:	ff ff 1f 
    f26c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f270:	73 05                	jae    f277 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    f272:	e8 49 3f ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f277:	e8 24 3e ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f27c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f280:	48 c1 e0 03          	shl    $0x3,%rax
    f284:	48 89 c7             	mov    %rax,%rdi
    f287:	e8 f4 3f ff ff       	call   3280 <_Znwm@plt>
    f28c:	90                   	nop
      }
    f28d:	c9                   	leave
    f28e:	c3                   	ret

000000000000f28f <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
    f28f:	55                   	push   %rbp
    f290:	48 89 e5             	mov    %rsp,%rbp
    f293:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f29b:	5d                   	pop    %rbp
    f29c:	c3                   	ret

000000000000f29d <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    f29d:	55                   	push   %rbp
    f29e:	48 89 e5             	mov    %rsp,%rbp
    f2a1:	48 83 ec 30          	sub    $0x30,%rsp
    f2a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f2a9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f2ad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f2b1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    f2b5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f2b9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f2bd:	48 c1 f8 03          	sar    $0x3,%rax
    f2c1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    f2c5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f2ca:	7e 1f                	jle    f2eb <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    f2cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f2d7:	00 
    f2d8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f2dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f2e0:	48 89 ce             	mov    %rcx,%rsi
    f2e3:	48 89 c7             	mov    %rax,%rdi
    f2e6:	e8 d5 41 ff ff       	call   34c0 <memmove@plt>
      return __result + __count;
    f2eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2ef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f2f6:	00 
    f2f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f2fb:	48 01 d0             	add    %rdx,%rax
    }
    f2fe:	c9                   	leave
    f2ff:	c3                   	ret

000000000000f300 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    f300:	55                   	push   %rbp
    f301:	48 89 e5             	mov    %rsp,%rbp
    f304:	48 83 ec 10          	sub    $0x10,%rsp
    f308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    f30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f310:	48 89 c7             	mov    %rax,%rdi
    f313:	e8 46 0b 00 00       	call   fe5e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    f318:	c9                   	leave
    f319:	c3                   	ret

000000000000f31a <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    f31a:	55                   	push   %rbp
    f31b:	48 89 e5             	mov    %rsp,%rbp
    f31e:	48 83 ec 10          	sub    $0x10,%rsp
    f322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f326:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    f32a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f32e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f332:	ba 00 00 00 00       	mov    $0x0,%edx
    f337:	48 89 ce             	mov    %rcx,%rsi
    f33a:	48 89 c7             	mov    %rax,%rdi
    f33d:	e8 30 0b 00 00       	call   fe72 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    f342:	c9                   	leave
    f343:	c3                   	ret

000000000000f344 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    f344:	55                   	push   %rbp
    f345:	48 89 e5             	mov    %rsp,%rbp
    f348:	48 83 ec 20          	sub    $0x20,%rsp
    f34c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f350:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    f354:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    f359:	74 40                	je     f39b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    f35b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f35f:	48 89 c7             	mov    %rax,%rdi
    f362:	e8 dc ee ff ff       	call   e243 <_ZSt11__addressofIcEPT_RS0_>
    f367:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    f36b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f36f:	48 89 c7             	mov    %rax,%rdi
    f372:	e8 43 0b 00 00       	call   feba <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    f377:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    f37c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f380:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    f384:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f388:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f38c:	48 89 ce             	mov    %rcx,%rsi
    f38f:	48 89 c7             	mov    %rax,%rdi
    f392:	e8 46 0b 00 00       	call   fedd <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    f397:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    f39b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    f39f:	c9                   	leave
    f3a0:	c3                   	ret
    f3a1:	90                   	nop

000000000000f3a2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f3a2:	55                   	push   %rbp
    f3a3:	48 89 e5             	mov    %rsp,%rbp
    f3a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f3aa:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    f3b1:	07 7e 00 
      }
    f3b4:	5d                   	pop    %rbp
    f3b5:	c3                   	ret

000000000000f3b6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    f3b6:	55                   	push   %rbp
    f3b7:	48 89 e5             	mov    %rsp,%rbp
    f3ba:	48 83 ec 20          	sub    $0x20,%rsp
    f3be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f3c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f3ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3ce:	48 89 c7             	mov    %rax,%rdi
    f3d1:	e8 cc ff ff ff       	call   f3a2 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    f3d6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f3da:	0f 92 c0             	setb   %al
    f3dd:	0f b6 c0             	movzbl %al,%eax
    f3e0:	48 85 c0             	test   %rax,%rax
    f3e3:	0f 95 c0             	setne  %al
    f3e6:	84 c0                	test   %al,%al
    f3e8:	74 1a                	je     f404 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f3ea:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    f3f1:	0f fc 00 
    f3f4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f3f8:	73 05                	jae    f3ff <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    f3fa:	e8 c1 3d ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f3ff:	e8 9c 3c ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f404:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f408:	48 89 d0             	mov    %rdx,%rax
    f40b:	48 c1 e0 06          	shl    $0x6,%rax
    f40f:	48 01 d0             	add    %rdx,%rax
    f412:	48 c1 e0 02          	shl    $0x2,%rax
    f416:	48 89 c7             	mov    %rax,%rdi
    f419:	e8 62 3e ff ff       	call   3280 <_Znwm@plt>
    f41e:	90                   	nop
      }
    f41f:	c9                   	leave
    f420:	c3                   	ret

000000000000f421 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    f421:	55                   	push   %rbp
    f422:	48 89 e5             	mov    %rsp,%rbp
    f425:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    f429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f42d:	5d                   	pop    %rbp
    f42e:	c3                   	ret

000000000000f42f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    f42f:	55                   	push   %rbp
    f430:	48 89 e5             	mov    %rsp,%rbp
    f433:	48 83 ec 10          	sub    $0x10,%rsp
    f437:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    f43b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f43f:	48 89 c6             	mov    %rax,%rsi
    f442:	bf 04 01 00 00       	mov    $0x104,%edi
    f447:	e8 2d 7a ff ff       	call   6e79 <_ZnwmPv>
    f44c:	b9 04 01 00 00       	mov    $0x104,%ecx
    f451:	be 00 00 00 00       	mov    $0x0,%esi
    f456:	48 89 30             	mov    %rsi,(%rax)
    f459:	89 ca                	mov    %ecx,%edx
    f45b:	48 01 c2             	add    %rax,%rdx
    f45e:	48 83 c2 08          	add    $0x8,%rdx
    f462:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    f466:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f46a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    f46e:	48 29 d0             	sub    %rdx,%rax
    f471:	01 c1                	add    %eax,%ecx
    f473:	83 e1 f8             	and    $0xfffffff8,%ecx
    f476:	89 c8                	mov    %ecx,%eax
    f478:	c1 e8 03             	shr    $0x3,%eax
    f47b:	89 c1                	mov    %eax,%ecx
    f47d:	48 89 d7             	mov    %rdx,%rdi
    f480:	48 89 f0             	mov    %rsi,%rax
    f483:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    f486:	90                   	nop
    f487:	c9                   	leave
    f488:	c3                   	ret

000000000000f489 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    f489:	55                   	push   %rbp
    f48a:	48 89 e5             	mov    %rsp,%rbp
    f48d:	48 83 ec 20          	sub    $0x20,%rsp
    f491:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f495:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f499:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    f49d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f4a1:	48 89 c7             	mov    %rax,%rdi
    f4a4:	e8 78 0a 00 00       	call   ff21 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    f4a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f4ad:	48 89 c7             	mov    %rax,%rdi
    f4b0:	e8 17 7a ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    f4b5:	48 89 c1             	mov    %rax,%rcx
    f4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f4c0:	48 89 ce             	mov    %rcx,%rsi
    f4c3:	48 89 c7             	mov    %rax,%rdi
    f4c6:	e8 61 0a 00 00       	call   ff2c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    f4cb:	c9                   	leave
    f4cc:	c3                   	ret

000000000000f4cd <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
    f4cd:	55                   	push   %rbp
    f4ce:	48 89 e5             	mov    %rsp,%rbp
    f4d1:	53                   	push   %rbx
    f4d2:	48 83 ec 28          	sub    $0x28,%rsp
    f4d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f4da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f4de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    f4e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f4e6:	48 89 c7             	mov    %rax,%rdi
    f4e9:	e8 ad 0a 00 00       	call   ff9b <_ZSt12__miter_baseIPPKcET_S3_>
    f4ee:	48 89 c3             	mov    %rax,%rbx
    f4f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f4f5:	48 89 c7             	mov    %rax,%rdi
    f4f8:	e8 9e 0a 00 00       	call   ff9b <_ZSt12__miter_baseIPPKcET_S3_>
    f4fd:	48 89 c1             	mov    %rax,%rcx
    f500:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f504:	48 89 c2             	mov    %rax,%rdx
    f507:	48 89 de             	mov    %rbx,%rsi
    f50a:	48 89 cf             	mov    %rcx,%rdi
    f50d:	e8 97 0a 00 00       	call   ffa9 <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>
    }
    f512:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f516:	c9                   	leave
    f517:	c3                   	ret

000000000000f518 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    f518:	55                   	push   %rbp
    f519:	48 89 e5             	mov    %rsp,%rbp
    f51c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f524:	5d                   	pop    %rbp
    f525:	c3                   	ret

000000000000f526 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    f526:	55                   	push   %rbp
    f527:	48 89 e5             	mov    %rsp,%rbp
    f52a:	48 83 ec 30          	sub    $0x30,%rsp
    f52e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f532:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f536:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f53a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    f53e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f542:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f546:	48 c1 f8 03          	sar    $0x3,%rax
    f54a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    f54e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f553:	7e 1f                	jle    f574 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    f555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f559:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f560:	00 
    f561:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f565:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f569:	48 89 ce             	mov    %rcx,%rsi
    f56c:	48 89 c7             	mov    %rax,%rdi
    f56f:	e8 4c 3f ff ff       	call   34c0 <memmove@plt>
      return __result + __count;
    f574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f578:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f57f:	00 
    f580:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f584:	48 01 d0             	add    %rdx,%rax
    }
    f587:	c9                   	leave
    f588:	c3                   	ret
    f589:	90                   	nop

000000000000f58a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f58a:	55                   	push   %rbp
    f58b:	48 89 e5             	mov    %rsp,%rbp
    f58e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f592:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    f599:	03 3f 00 
      }
    f59c:	5d                   	pop    %rbp
    f59d:	c3                   	ret

000000000000f59e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    f59e:	55                   	push   %rbp
    f59f:	48 89 e5             	mov    %rsp,%rbp
    f5a2:	48 83 ec 20          	sub    $0x20,%rsp
    f5a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f5aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f5ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f5b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5b6:	48 89 c7             	mov    %rax,%rdi
    f5b9:	e8 cc ff ff ff       	call   f58a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    f5be:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f5c2:	0f 92 c0             	setb   %al
    f5c5:	0f b6 c0             	movzbl %al,%eax
    f5c8:	48 85 c0             	test   %rax,%rax
    f5cb:	0f 95 c0             	setne  %al
    f5ce:	84 c0                	test   %al,%al
    f5d0:	74 1a                	je     f5ec <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f5d2:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    f5d9:	07 7e 00 
    f5dc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f5e0:	73 05                	jae    f5e7 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    f5e2:	e8 d9 3b ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f5e7:	e8 b4 3a ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f5ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f5f0:	48 89 d0             	mov    %rdx,%rax
    f5f3:	48 c1 e0 06          	shl    $0x6,%rax
    f5f7:	48 01 d0             	add    %rdx,%rax
    f5fa:	48 c1 e0 03          	shl    $0x3,%rax
    f5fe:	48 89 c7             	mov    %rax,%rdi
    f601:	e8 7a 3c ff ff       	call   3280 <_Znwm@plt>
    f606:	90                   	nop
      }
    f607:	c9                   	leave
    f608:	c3                   	ret

000000000000f609 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    f609:	55                   	push   %rbp
    f60a:	48 89 e5             	mov    %rsp,%rbp
    f60d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    f611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f615:	5d                   	pop    %rbp
    f616:	c3                   	ret

000000000000f617 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    f617:	55                   	push   %rbp
    f618:	48 89 e5             	mov    %rsp,%rbp
    f61b:	48 83 ec 10          	sub    $0x10,%rsp
    f61f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    f623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f627:	48 89 c6             	mov    %rax,%rsi
    f62a:	bf 08 02 00 00       	mov    $0x208,%edi
    f62f:	e8 45 78 ff ff       	call   6e79 <_ZnwmPv>
    f634:	b9 08 02 00 00       	mov    $0x208,%ecx
    f639:	be 00 00 00 00       	mov    $0x0,%esi
    f63e:	48 89 30             	mov    %rsi,(%rax)
    f641:	89 ca                	mov    %ecx,%edx
    f643:	48 01 c2             	add    %rax,%rdx
    f646:	48 83 c2 08          	add    $0x8,%rdx
    f64a:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    f64e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f652:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    f656:	48 29 d0             	sub    %rdx,%rax
    f659:	01 c1                	add    %eax,%ecx
    f65b:	83 e1 f8             	and    $0xfffffff8,%ecx
    f65e:	89 c8                	mov    %ecx,%eax
    f660:	c1 e8 03             	shr    $0x3,%eax
    f663:	89 c1                	mov    %eax,%ecx
    f665:	48 89 d7             	mov    %rdx,%rdi
    f668:	48 89 f0             	mov    %rsi,%rax
    f66b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    f66e:	90                   	nop
    f66f:	c9                   	leave
    f670:	c3                   	ret

000000000000f671 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    f671:	55                   	push   %rbp
    f672:	48 89 e5             	mov    %rsp,%rbp
    f675:	48 83 ec 20          	sub    $0x20,%rsp
    f679:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f67d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f681:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    f685:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f689:	48 89 c7             	mov    %rax,%rdi
    f68c:	e8 82 09 00 00       	call   10013 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    f691:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f695:	48 89 c7             	mov    %rax,%rdi
    f698:	e8 2f 78 ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    f69d:	48 89 c1             	mov    %rax,%rcx
    f6a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f6a8:	48 89 ce             	mov    %rcx,%rsi
    f6ab:	48 89 c7             	mov    %rax,%rdi
    f6ae:	e8 6b 09 00 00       	call   1001e <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    f6b3:	c9                   	leave
    f6b4:	c3                   	ret
    f6b5:	90                   	nop

000000000000f6b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>:
      _M_get_node()
    f6b6:	55                   	push   %rbp
    f6b7:	48 89 e5             	mov    %rsp,%rbp
    f6ba:	48 83 ec 10          	sub    $0x10,%rsp
    f6be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    f6c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6c6:	48 89 c7             	mov    %rax,%rdi
    f6c9:	e8 ba ef ff ff       	call   e688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
    f6ce:	be 01 00 00 00       	mov    $0x1,%esi
    f6d3:	48 89 c7             	mov    %rax,%rdi
    f6d6:	e8 b2 09 00 00       	call   1008d <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>
    f6db:	c9                   	leave
    f6dc:	c3                   	ret
    f6dd:	90                   	nop

000000000000f6de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    f6de:	55                   	push   %rbp
    f6df:	48 89 e5             	mov    %rsp,%rbp
    f6e2:	41 54                	push   %r12
    f6e4:	53                   	push   %rbx
    f6e5:	48 83 ec 20          	sub    $0x20,%rsp
    f6e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f6ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f6f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    f6f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f6f9:	48 89 c6             	mov    %rax,%rsi
    f6fc:	bf 40 00 00 00       	mov    $0x40,%edi
    f701:	e8 73 77 ff ff       	call   6e79 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    f706:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f70a:	48 89 c7             	mov    %rax,%rdi
    f70d:	e8 93 d5 ff ff       	call   cca5 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    f712:	49 89 c4             	mov    %rax,%r12
    f715:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f719:	48 89 c7             	mov    %rax,%rdi
    f71c:	e8 75 ef ff ff       	call   e696 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
    f721:	48 89 c3             	mov    %rax,%rbx
    f724:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f728:	48 89 c7             	mov    %rax,%rdi
    f72b:	e8 58 ef ff ff       	call   e688 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
    f730:	4c 89 e2             	mov    %r12,%rdx
    f733:	48 89 de             	mov    %rbx,%rsi
    f736:	48 89 c7             	mov    %rax,%rdi
    f739:	e8 79 09 00 00       	call   100b7 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>
	}
    f73e:	eb 33                	jmp    f773 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_+0x95>
	  __catch(...)
    f740:	48 89 c7             	mov    %rax,%rdi
    f743:	e8 78 39 ff ff       	call   30c0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    f748:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f74c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f750:	48 89 d6             	mov    %rdx,%rsi
    f753:	48 89 c7             	mov    %rax,%rdi
    f756:	e8 5d d8 ff ff       	call   cfb8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
	      __throw_exception_again;
    f75b:	e8 e0 3c ff ff       	call   3440 <__cxa_rethrow@plt>
	  __catch(...)
    f760:	48 89 c3             	mov    %rax,%rbx
    f763:	e8 68 3d ff ff       	call   34d0 <__cxa_end_catch@plt>
    f768:	48 89 d8             	mov    %rbx,%rax
    f76b:	48 89 c7             	mov    %rax,%rdi
    f76e:	e8 9d 3d ff ff       	call   3510 <_Unwind_Resume@plt>
	}
    f773:	48 83 c4 20          	add    $0x20,%rsp
    f777:	5b                   	pop    %rbx
    f778:	41 5c                	pop    %r12
    f77a:	5d                   	pop    %rbp
    f77b:	c3                   	ret

000000000000f77c <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f77c:	55                   	push   %rbp
    f77d:	48 89 e5             	mov    %rsp,%rbp
    f780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f788:	5d                   	pop    %rbp
    f789:	c3                   	ret

000000000000f78a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f78a:	55                   	push   %rbp
    f78b:	48 89 e5             	mov    %rsp,%rbp
    f78e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f792:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f796:	5d                   	pop    %rbp
    f797:	c3                   	ret

000000000000f798 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
    f798:	55                   	push   %rbp
    f799:	48 89 e5             	mov    %rsp,%rbp
    f79c:	48 83 ec 10          	sub    $0x10,%rsp
    f7a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    f7a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7a8:	48 89 c7             	mov    %rax,%rdi
    f7ab:	e8 40 09 00 00       	call   100f0 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
    f7b0:	c9                   	leave
    f7b1:	c3                   	ret

000000000000f7b2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>:
	destroy(_Up* __p)
    f7b2:	55                   	push   %rbp
    f7b3:	48 89 e5             	mov    %rsp,%rbp
    f7b6:	48 83 ec 10          	sub    $0x10,%rsp
    f7ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f7be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    f7c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f7c6:	48 89 c7             	mov    %rax,%rdi
    f7c9:	e8 82 39 ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f7ce:	90                   	nop
    f7cf:	c9                   	leave
    f7d0:	c3                   	ret
    f7d1:	90                   	nop

000000000000f7d2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    f7d2:	55                   	push   %rbp
    f7d3:	48 89 e5             	mov    %rsp,%rbp
    f7d6:	48 83 ec 20          	sub    $0x20,%rsp
    f7da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f7de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f7e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    f7e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7ea:	48 c1 e0 06          	shl    $0x6,%rax
    f7ee:	48 89 c2             	mov    %rax,%rdx
    f7f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f7f5:	48 89 d6             	mov    %rdx,%rsi
    f7f8:	48 89 c7             	mov    %rax,%rdi
    f7fb:	e8 90 3a ff ff       	call   3290 <_ZdlPvm@plt>
      }
    f800:	c9                   	leave
    f801:	c3                   	ret

000000000000f802 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
    f802:	55                   	push   %rbp
    f803:	48 89 e5             	mov    %rsp,%rbp
    f806:	48 83 ec 10          	sub    $0x10,%rsp
    f80a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    f80e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f812:	48 89 c7             	mov    %rax,%rdi
    f815:	e8 e4 08 00 00       	call   100fe <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
    f81a:	c9                   	leave
    f81b:	c3                   	ret

000000000000f81c <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    f81c:	55                   	push   %rbp
    f81d:	48 89 e5             	mov    %rsp,%rbp
    f820:	48 83 ec 10          	sub    $0x10,%rsp
    f824:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    f828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f82c:	48 89 c7             	mov    %rax,%rdi
    f82f:	e8 82 00 00 00       	call   f8b6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    f834:	c9                   	leave
    f835:	c3                   	ret

000000000000f836 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    f836:	55                   	push   %rbp
    f837:	48 89 e5             	mov    %rsp,%rbp
    f83a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    f83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f842:	5d                   	pop    %rbp
    f843:	c3                   	ret

000000000000f844 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    f844:	55                   	push   %rbp
    f845:	48 89 e5             	mov    %rsp,%rbp
    f848:	48 83 ec 10          	sub    $0x10,%rsp
    f84c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    f850:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f854:	48 89 c6             	mov    %rax,%rsi
    f857:	bf 08 00 00 00       	mov    $0x8,%edi
    f85c:	e8 18 76 ff ff       	call   6e79 <_ZnwmPv>
    f861:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    f867:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    f86e:	90                   	nop
    f86f:	c9                   	leave
    f870:	c3                   	ret

000000000000f871 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    f871:	55                   	push   %rbp
    f872:	48 89 e5             	mov    %rsp,%rbp
    f875:	48 83 ec 20          	sub    $0x20,%rsp
    f879:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f87d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f881:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    f885:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f889:	48 89 c7             	mov    %rax,%rdi
    f88c:	e8 7b 08 00 00       	call   1010c <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    f891:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f895:	48 89 c7             	mov    %rax,%rdi
    f898:	e8 2f 76 ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    f89d:	48 89 c1             	mov    %rax,%rcx
    f8a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f8a4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f8a8:	48 89 ce             	mov    %rcx,%rsi
    f8ab:	48 89 c7             	mov    %rax,%rdi
    f8ae:	e8 64 08 00 00       	call   10117 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    f8b3:	c9                   	leave
    f8b4:	c3                   	ret
    f8b5:	90                   	nop

000000000000f8b6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f8b6:	55                   	push   %rbp
    f8b7:	48 89 e5             	mov    %rsp,%rbp
    f8ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f8be:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    f8c5:	ff ff 0f 
      }
    f8c8:	5d                   	pop    %rbp
    f8c9:	c3                   	ret

000000000000f8ca <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    f8ca:	55                   	push   %rbp
    f8cb:	48 89 e5             	mov    %rsp,%rbp
    f8ce:	48 83 ec 10          	sub    $0x10,%rsp
    f8d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    f8d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f8da:	48 89 c7             	mov    %rax,%rdi
    f8dd:	e8 7a 00 00 00       	call   f95c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    f8e2:	c9                   	leave
    f8e3:	c3                   	ret

000000000000f8e4 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    f8e4:	55                   	push   %rbp
    f8e5:	48 89 e5             	mov    %rsp,%rbp
    f8e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    f8ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f8f0:	5d                   	pop    %rbp
    f8f1:	c3                   	ret

000000000000f8f2 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    f8f2:	55                   	push   %rbp
    f8f3:	48 89 e5             	mov    %rsp,%rbp
    f8f6:	48 83 ec 10          	sub    $0x10,%rsp
    f8fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    f8fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f902:	48 89 c6             	mov    %rax,%rsi
    f905:	bf 04 00 00 00       	mov    $0x4,%edi
    f90a:	e8 6a 75 ff ff       	call   6e79 <_ZnwmPv>
    f90f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    f915:	90                   	nop
    f916:	c9                   	leave
    f917:	c3                   	ret

000000000000f918 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    f918:	55                   	push   %rbp
    f919:	48 89 e5             	mov    %rsp,%rbp
    f91c:	48 83 ec 20          	sub    $0x20,%rsp
    f920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f924:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f928:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    f92c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f930:	48 89 c7             	mov    %rax,%rdi
    f933:	e8 3c 08 00 00       	call   10174 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    f938:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f93c:	48 89 c7             	mov    %rax,%rdi
    f93f:	e8 88 75 ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    f944:	48 89 c1             	mov    %rax,%rcx
    f947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f94b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f94f:	48 89 ce             	mov    %rcx,%rsi
    f952:	48 89 c7             	mov    %rax,%rdi
    f955:	e8 25 08 00 00       	call   1017f <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    f95a:	c9                   	leave
    f95b:	c3                   	ret

000000000000f95c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f95c:	55                   	push   %rbp
    f95d:	48 89 e5             	mov    %rsp,%rbp
    f960:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f964:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    f96b:	ff ff 1f 
      }
    f96e:	5d                   	pop    %rbp
    f96f:	c3                   	ret

000000000000f970 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f970:	55                   	push   %rbp
    f971:	48 89 e5             	mov    %rsp,%rbp
    f974:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f978:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    f97f:	ff ff 0f 
      }
    f982:	5d                   	pop    %rbp
    f983:	c3                   	ret

000000000000f984 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    f984:	55                   	push   %rbp
    f985:	48 89 e5             	mov    %rsp,%rbp
    f988:	48 83 ec 20          	sub    $0x20,%rsp
    f98c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f990:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f994:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f99c:	48 89 c7             	mov    %rax,%rdi
    f99f:	e8 cc ff ff ff       	call   f970 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    f9a4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f9a8:	0f 92 c0             	setb   %al
    f9ab:	0f b6 c0             	movzbl %al,%eax
    f9ae:	48 85 c0             	test   %rax,%rax
    f9b1:	0f 95 c0             	setne  %al
    f9b4:	84 c0                	test   %al,%al
    f9b6:	74 1a                	je     f9d2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f9b8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    f9bf:	ff ff 1f 
    f9c2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f9c6:	73 05                	jae    f9cd <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    f9c8:	e8 f3 37 ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f9cd:	e8 ce 36 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f9d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9d6:	48 c1 e0 03          	shl    $0x3,%rax
    f9da:	48 89 c7             	mov    %rax,%rdi
    f9dd:	e8 9e 38 ff ff       	call   3280 <_Znwm@plt>
    f9e2:	90                   	nop
      }
    f9e3:	c9                   	leave
    f9e4:	c3                   	ret

000000000000f9e5 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    f9e5:	55                   	push   %rbp
    f9e6:	48 89 e5             	mov    %rsp,%rbp
    f9e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    f9ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9f1:	5d                   	pop    %rbp
    f9f2:	c3                   	ret

000000000000f9f3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    f9f3:	55                   	push   %rbp
    f9f4:	48 89 e5             	mov    %rsp,%rbp
    f9f7:	48 83 ec 10          	sub    $0x10,%rsp
    f9fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    f9ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa03:	48 89 c6             	mov    %rax,%rsi
    fa06:	bf 08 00 00 00       	mov    $0x8,%edi
    fa0b:	e8 69 74 ff ff       	call   6e79 <_ZnwmPv>
    fa10:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    fa17:	90                   	nop
    fa18:	c9                   	leave
    fa19:	c3                   	ret

000000000000fa1a <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    fa1a:	55                   	push   %rbp
    fa1b:	48 89 e5             	mov    %rsp,%rbp
    fa1e:	48 83 ec 20          	sub    $0x20,%rsp
    fa22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fa2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    fa2e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fa32:	48 89 c7             	mov    %rax,%rdi
    fa35:	e8 a2 07 00 00       	call   101dc <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    fa3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa3e:	48 89 c7             	mov    %rax,%rdi
    fa41:	e8 86 74 ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    fa46:	48 89 c1             	mov    %rax,%rcx
    fa49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fa51:	48 89 ce             	mov    %rcx,%rsi
    fa54:	48 89 c7             	mov    %rax,%rdi
    fa57:	e8 8b 07 00 00       	call   101e7 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    fa5c:	c9                   	leave
    fa5d:	c3                   	ret

000000000000fa5e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    fa5e:	55                   	push   %rbp
    fa5f:	48 89 e5             	mov    %rsp,%rbp
    fa62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    fa66:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    fa6d:	55 55 05 
      }
    fa70:	5d                   	pop    %rbp
    fa71:	c3                   	ret

000000000000fa72 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    fa72:	55                   	push   %rbp
    fa73:	48 89 e5             	mov    %rsp,%rbp
    fa76:	48 83 ec 20          	sub    $0x20,%rsp
    fa7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fa82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    fa86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa8a:	48 89 c7             	mov    %rax,%rdi
    fa8d:	e8 cc ff ff ff       	call   fa5e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    fa92:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    fa96:	0f 92 c0             	setb   %al
    fa99:	0f b6 c0             	movzbl %al,%eax
    fa9c:	48 85 c0             	test   %rax,%rax
    fa9f:	0f 95 c0             	setne  %al
    faa2:	84 c0                	test   %al,%al
    faa4:	74 1a                	je     fac0 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    faa6:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    faad:	aa aa 0a 
    fab0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    fab4:	73 05                	jae    fabb <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    fab6:	e8 05 37 ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    fabb:	e8 e0 35 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    fac0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fac4:	48 89 d0             	mov    %rdx,%rax
    fac7:	48 01 c0             	add    %rax,%rax
    faca:	48 01 d0             	add    %rdx,%rax
    facd:	48 c1 e0 03          	shl    $0x3,%rax
    fad1:	48 89 c7             	mov    %rax,%rdi
    fad4:	e8 a7 37 ff ff       	call   3280 <_Znwm@plt>
    fad9:	90                   	nop
      }
    fada:	c9                   	leave
    fadb:	c3                   	ret

000000000000fadc <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    fadc:	55                   	push   %rbp
    fadd:	48 89 e5             	mov    %rsp,%rbp
    fae0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    fae4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fae8:	5d                   	pop    %rbp
    fae9:	c3                   	ret

000000000000faea <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    faea:	55                   	push   %rbp
    faeb:	48 89 e5             	mov    %rsp,%rbp
    faee:	48 83 ec 10          	sub    $0x10,%rsp
    faf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    faf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fafa:	48 89 c6             	mov    %rax,%rsi
    fafd:	bf 18 00 00 00       	mov    $0x18,%edi
    fb02:	e8 72 73 ff ff       	call   6e79 <_ZnwmPv>
    fb07:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    fb0d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    fb14:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    fb1b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    fb22:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    fb29:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    fb30:	90                   	nop
    fb31:	c9                   	leave
    fb32:	c3                   	ret

000000000000fb33 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    fb33:	55                   	push   %rbp
    fb34:	48 89 e5             	mov    %rsp,%rbp
    fb37:	48 83 ec 20          	sub    $0x20,%rsp
    fb3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb43:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    fb47:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fb4b:	48 89 c7             	mov    %rax,%rdi
    fb4e:	e8 f1 06 00 00       	call   10244 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    fb53:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb57:	48 89 c7             	mov    %rax,%rdi
    fb5a:	e8 6d 73 ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    fb5f:	48 89 c1             	mov    %rax,%rcx
    fb62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb66:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb6a:	48 89 ce             	mov    %rcx,%rsi
    fb6d:	48 89 c7             	mov    %rax,%rdi
    fb70:	e8 da 06 00 00       	call   1024f <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    fb75:	c9                   	leave
    fb76:	c3                   	ret

000000000000fb77 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>:
      _S_key(_Const_Link_type __x)
    fb77:	55                   	push   %rbp
    fb78:	48 89 e5             	mov    %rsp,%rbp
    fb7b:	48 83 ec 20          	sub    $0x20,%rsp
    fb7f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    fb83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb87:	48 89 c7             	mov    %rax,%rdi
    fb8a:	e8 f3 a8 ff ff       	call   a482 <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
    fb8f:	48 89 c2             	mov    %rax,%rdx
    fb92:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    fb96:	48 89 d6             	mov    %rdx,%rsi
    fb99:	48 89 c7             	mov    %rax,%rdi
    fb9c:	e8 69 e1 ff ff       	call   dd0a <_ZNKSt9_IdentityIjEclERKj>
      }
    fba1:	c9                   	leave
    fba2:	c3                   	ret
    fba3:	90                   	nop

000000000000fba4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    fba4:	55                   	push   %rbp
    fba5:	48 89 e5             	mov    %rsp,%rbp
    fba8:	48 83 ec 20          	sub    $0x20,%rsp
    fbac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    fbb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fbb4:	48 8b 50 18          	mov    0x18(%rax),%rdx
    fbb8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fbbc:	48 89 d6             	mov    %rdx,%rsi
    fbbf:	48 89 c7             	mov    %rax,%rdi
    fbc2:	e8 db dc ff ff       	call   d8a2 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
    fbc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbcb:	c9                   	leave
    fbcc:	c3                   	ret

000000000000fbcd <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    fbcd:	55                   	push   %rbp
    fbce:	48 89 e5             	mov    %rsp,%rbp
    fbd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbd5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    fbd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbdd:	48 8b 10             	mov    (%rax),%rdx
    fbe0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbe4:	48 8b 00             	mov    (%rax),%rax
    fbe7:	48 39 c2             	cmp    %rax,%rdx
    fbea:	0f 94 c0             	sete   %al
    fbed:	5d                   	pop    %rbp
    fbee:	c3                   	ret
    fbef:	90                   	nop

000000000000fbf0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    fbf0:	55                   	push   %rbp
    fbf1:	48 89 e5             	mov    %rsp,%rbp
    fbf4:	48 83 ec 20          	sub    $0x20,%rsp
    fbf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbfc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fc00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    fc04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc08:	48 89 c7             	mov    %rax,%rdi
    fc0b:	e8 ac 06 00 00       	call   102bc <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>
    fc10:	48 8b 10             	mov    (%rax),%rdx
    fc13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc17:	48 89 10             	mov    %rdx,(%rax)
    fc1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc1e:	48 89 c7             	mov    %rax,%rdi
    fc21:	e8 64 fb ff ff       	call   f78a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    fc26:	48 8b 10             	mov    (%rax),%rdx
    fc29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc2d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    fc31:	90                   	nop
    fc32:	c9                   	leave
    fc33:	c3                   	ret

000000000000fc34 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_create_node(_Args&&... __args)
    fc34:	55                   	push   %rbp
    fc35:	48 89 e5             	mov    %rsp,%rbp
    fc38:	48 83 ec 20          	sub    $0x20,%rsp
    fc3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fc40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
    fc44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc48:	48 89 c7             	mov    %rax,%rdi
    fc4b:	e8 7a 06 00 00       	call   102ca <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>
    fc50:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    fc54:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fc58:	48 89 c7             	mov    %rax,%rdi
    fc5b:	e8 bc e0 ff ff       	call   dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
    fc60:	48 89 c2             	mov    %rax,%rdx
    fc63:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    fc67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc6b:	48 89 ce             	mov    %rcx,%rsi
    fc6e:	48 89 c7             	mov    %rax,%rdi
    fc71:	e8 7c 06 00 00       	call   102f2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>
	  return __tmp;
    fc76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    fc7a:	c9                   	leave
    fc7b:	c3                   	ret

000000000000fc7c <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _M_ptr() noexcept
    fc7c:	55                   	push   %rbp
    fc7d:	48 89 e5             	mov    %rsp,%rbp
    fc80:	48 83 ec 10          	sub    $0x10,%rsp
    fc84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    fc88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc8c:	48 89 c7             	mov    %rax,%rdi
    fc8f:	e8 c8 06 00 00       	call   1035c <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
    fc94:	c9                   	leave
    fc95:	c3                   	ret

000000000000fc96 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>:
	destroy(_Up* __p)
    fc96:	55                   	push   %rbp
    fc97:	48 89 e5             	mov    %rsp,%rbp
    fc9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fc9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    fca2:	90                   	nop
    fca3:	5d                   	pop    %rbp
    fca4:	c3                   	ret
    fca5:	90                   	nop

000000000000fca6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    fca6:	55                   	push   %rbp
    fca7:	48 89 e5             	mov    %rsp,%rbp
    fcaa:	48 83 ec 20          	sub    $0x20,%rsp
    fcae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fcb2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fcb6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    fcba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fcbe:	48 89 d0             	mov    %rdx,%rax
    fcc1:	48 c1 e0 02          	shl    $0x2,%rax
    fcc5:	48 01 d0             	add    %rdx,%rax
    fcc8:	48 c1 e0 03          	shl    $0x3,%rax
    fccc:	48 89 c2             	mov    %rax,%rdx
    fccf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fcd3:	48 89 d6             	mov    %rdx,%rsi
    fcd6:	48 89 c7             	mov    %rax,%rdi
    fcd9:	e8 b2 35 ff ff       	call   3290 <_ZdlPvm@plt>
      }
    fcde:	c9                   	leave
    fcdf:	c3                   	ret

000000000000fce0 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    fce0:	55                   	push   %rbp
    fce1:	48 89 e5             	mov    %rsp,%rbp
    fce4:	48 83 ec 10          	sub    $0x10,%rsp
    fce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    fcec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fcf0:	48 89 c7             	mov    %rax,%rdi
    fcf3:	e8 72 06 00 00       	call   1036a <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>
      }
    fcf8:	c9                   	leave
    fcf9:	c3                   	ret

000000000000fcfa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    fcfa:	55                   	push   %rbp
    fcfb:	48 89 e5             	mov    %rsp,%rbp
    fcfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    fd02:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
    fd09:	33 33 03 
      }
    fd0c:	5d                   	pop    %rbp
    fd0d:	c3                   	ret

000000000000fd0e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    fd0e:	55                   	push   %rbp
    fd0f:	48 89 e5             	mov    %rsp,%rbp
    fd12:	48 83 ec 10          	sub    $0x10,%rsp
    fd16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    fd1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd1e:	48 89 c7             	mov    %rax,%rdi
    fd21:	e8 7c 00 00 00       	call   fda2 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    fd26:	c9                   	leave
    fd27:	c3                   	ret

000000000000fd28 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    fd28:	55                   	push   %rbp
    fd29:	48 89 e5             	mov    %rsp,%rbp
    fd2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    fd30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd34:	5d                   	pop    %rbp
    fd35:	c3                   	ret

000000000000fd36 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    fd36:	55                   	push   %rbp
    fd37:	48 89 e5             	mov    %rsp,%rbp
    fd3a:	48 83 ec 10          	sub    $0x10,%rsp
    fd3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    fd42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd46:	48 89 c6             	mov    %rax,%rsi
    fd49:	bf 08 00 00 00       	mov    $0x8,%edi
    fd4e:	e8 26 71 ff ff       	call   6e79 <_ZnwmPv>
    fd53:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    fd5a:	90                   	nop
    fd5b:	c9                   	leave
    fd5c:	c3                   	ret

000000000000fd5d <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    fd5d:	55                   	push   %rbp
    fd5e:	48 89 e5             	mov    %rsp,%rbp
    fd61:	48 83 ec 20          	sub    $0x20,%rsp
    fd65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fd6d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    fd71:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fd75:	48 89 c7             	mov    %rax,%rdi
    fd78:	e8 07 06 00 00       	call   10384 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    fd7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fd81:	48 89 c7             	mov    %rax,%rdi
    fd84:	e8 43 71 ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    fd89:	48 89 c1             	mov    %rax,%rcx
    fd8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd90:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fd94:	48 89 ce             	mov    %rcx,%rsi
    fd97:	48 89 c7             	mov    %rax,%rdi
    fd9a:	e8 f0 05 00 00       	call   1038f <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    fd9f:	c9                   	leave
    fda0:	c3                   	ret
    fda1:	90                   	nop

000000000000fda2 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    fda2:	55                   	push   %rbp
    fda3:	48 89 e5             	mov    %rsp,%rbp
    fda6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    fdaa:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    fdb1:	ff ff 0f 
      }
    fdb4:	5d                   	pop    %rbp
    fdb5:	c3                   	ret

000000000000fdb6 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    fdb6:	55                   	push   %rbp
    fdb7:	48 89 e5             	mov    %rsp,%rbp
    fdba:	48 83 ec 10          	sub    $0x10,%rsp
    fdbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    fdc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdc6:	48 89 c7             	mov    %rax,%rdi
    fdc9:	e8 7c 00 00 00       	call   fe4a <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
    fdce:	c9                   	leave
    fdcf:	c3                   	ret

000000000000fdd0 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    fdd0:	55                   	push   %rbp
    fdd1:	48 89 e5             	mov    %rsp,%rbp
    fdd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    fdd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fddc:	5d                   	pop    %rbp
    fddd:	c3                   	ret

000000000000fdde <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    fdde:	55                   	push   %rbp
    fddf:	48 89 e5             	mov    %rsp,%rbp
    fde2:	48 83 ec 10          	sub    $0x10,%rsp
    fde6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    fdea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdee:	48 89 c6             	mov    %rax,%rsi
    fdf1:	bf 08 00 00 00       	mov    $0x8,%edi
    fdf6:	e8 7e 70 ff ff       	call   6e79 <_ZnwmPv>
    fdfb:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    fe02:	90                   	nop
    fe03:	c9                   	leave
    fe04:	c3                   	ret

000000000000fe05 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    fe05:	55                   	push   %rbp
    fe06:	48 89 e5             	mov    %rsp,%rbp
    fe09:	48 83 ec 20          	sub    $0x20,%rsp
    fe0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe11:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fe15:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    fe19:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fe1d:	48 89 c7             	mov    %rax,%rdi
    fe20:	e8 c7 05 00 00       	call   103ec <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    fe25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe29:	48 89 c7             	mov    %rax,%rdi
    fe2c:	e8 9b 70 ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    fe31:	48 89 c1             	mov    %rax,%rcx
    fe34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe38:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fe3c:	48 89 ce             	mov    %rcx,%rsi
    fe3f:	48 89 c7             	mov    %rax,%rdi
    fe42:	e8 b0 05 00 00       	call   103f7 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    fe47:	c9                   	leave
    fe48:	c3                   	ret
    fe49:	90                   	nop

000000000000fe4a <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    fe4a:	55                   	push   %rbp
    fe4b:	48 89 e5             	mov    %rsp,%rbp
    fe4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    fe52:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    fe59:	ff ff 0f 
      }
    fe5c:	5d                   	pop    %rbp
    fe5d:	c3                   	ret

000000000000fe5e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    fe5e:	55                   	push   %rbp
    fe5f:	48 89 e5             	mov    %rsp,%rbp
    fe62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    fe66:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    fe6d:	ff ff 7f 
      }
    fe70:	5d                   	pop    %rbp
    fe71:	c3                   	ret

000000000000fe72 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    fe72:	55                   	push   %rbp
    fe73:	48 89 e5             	mov    %rsp,%rbp
    fe76:	48 83 ec 20          	sub    $0x20,%rsp
    fe7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fe82:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    fe86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe8a:	48 89 c7             	mov    %rax,%rdi
    fe8d:	e8 cc ff ff ff       	call   fe5e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    fe92:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    fe96:	0f 92 c0             	setb   %al
    fe99:	0f b6 c0             	movzbl %al,%eax
    fe9c:	48 85 c0             	test   %rax,%rax
    fe9f:	0f 95 c0             	setne  %al
    fea2:	84 c0                	test   %al,%al
    fea4:	74 05                	je     feab <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    fea6:	e8 f5 31 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    feab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    feaf:	48 89 c7             	mov    %rax,%rdi
    feb2:	e8 c9 33 ff ff       	call   3280 <_Znwm@plt>
    feb7:	90                   	nop
      }
    feb8:	c9                   	leave
    feb9:	c3                   	ret

000000000000feba <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    feba:	55                   	push   %rbp
    febb:	48 89 e5             	mov    %rsp,%rbp
    febe:	48 83 ec 10          	sub    $0x10,%rsp
    fec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    fec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    feca:	48 89 c6             	mov    %rax,%rsi
    fecd:	bf 01 00 00 00       	mov    $0x1,%edi
    fed2:	e8 a2 6f ff ff       	call   6e79 <_ZnwmPv>
    fed7:	c6 00 00             	movb   $0x0,(%rax)
    }
    feda:	90                   	nop
    fedb:	c9                   	leave
    fedc:	c3                   	ret

000000000000fedd <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    fedd:	55                   	push   %rbp
    fede:	48 89 e5             	mov    %rsp,%rbp
    fee1:	48 83 ec 20          	sub    $0x20,%rsp
    fee5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fee9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    feed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    fef1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fef5:	48 89 c7             	mov    %rax,%rdi
    fef8:	e8 63 af ff ff       	call   ae60 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    fefd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ff01:	48 89 c7             	mov    %rax,%rdi
    ff04:	e8 c3 6f ff ff       	call   6ecc <_ZSt17__size_to_integerm>
    ff09:	48 89 c1             	mov    %rax,%rcx
    ff0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ff14:	48 89 ce             	mov    %rcx,%rsi
    ff17:	48 89 c7             	mov    %rax,%rdi
    ff1a:	e8 35 05 00 00       	call   10454 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    ff1f:	c9                   	leave
    ff20:	c3                   	ret

000000000000ff21 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ff21:	55                   	push   %rbp
    ff22:	48 89 e5             	mov    %rsp,%rbp
    ff25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ff29:	90                   	nop
    ff2a:	5d                   	pop    %rbp
    ff2b:	c3                   	ret

000000000000ff2c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    ff2c:	55                   	push   %rbp
    ff2d:	48 89 e5             	mov    %rsp,%rbp
    ff30:	48 83 ec 20          	sub    $0x20,%rsp
    ff34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ff3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    ff40:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ff45:	75 06                	jne    ff4d <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    ff47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff4b:	eb 4c                	jmp    ff99 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    ff4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ff51:	48 89 d0             	mov    %rdx,%rax
    ff54:	48 c1 e0 06          	shl    $0x6,%rax
    ff58:	48 01 d0             	add    %rdx,%rax
    ff5b:	48 c1 e0 02          	shl    $0x2,%rax
    ff5f:	48 89 c2             	mov    %rax,%rdx
    ff62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff66:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ff6a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ff6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff72:	48 89 ce             	mov    %rcx,%rsi
    ff75:	48 89 c7             	mov    %rax,%rdi
    ff78:	e8 24 05 00 00       	call   104a1 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    ff7d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ff81:	48 89 d0             	mov    %rdx,%rax
    ff84:	48 c1 e0 06          	shl    $0x6,%rax
    ff88:	48 01 d0             	add    %rdx,%rax
    ff8b:	48 c1 e0 02          	shl    $0x2,%rax
    ff8f:	48 89 c2             	mov    %rax,%rdx
    ff92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff96:	48 01 d0             	add    %rdx,%rax
    }
    ff99:	c9                   	leave
    ff9a:	c3                   	ret

000000000000ff9b <_ZSt12__miter_baseIPPKcET_S3_>:
    __miter_base(_Iterator __it)
    ff9b:	55                   	push   %rbp
    ff9c:	48 89 e5             	mov    %rsp,%rbp
    ff9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    ffa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffa7:	5d                   	pop    %rbp
    ffa8:	c3                   	ret

000000000000ffa9 <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    ffa9:	55                   	push   %rbp
    ffaa:	48 89 e5             	mov    %rsp,%rbp
    ffad:	41 54                	push   %r12
    ffaf:	53                   	push   %rbx
    ffb0:	48 83 ec 20          	sub    $0x20,%rsp
    ffb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ffb8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ffbc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    ffc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ffc4:	48 89 c7             	mov    %rax,%rdi
    ffc7:	e8 1d 47 ff ff       	call   46e9 <_ZSt12__niter_baseIPPKcET_S3_>
    ffcc:	49 89 c4             	mov    %rax,%r12
    ffcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ffd3:	48 89 c7             	mov    %rax,%rdi
    ffd6:	e8 0e 47 ff ff       	call   46e9 <_ZSt12__niter_baseIPPKcET_S3_>
    ffdb:	48 89 c3             	mov    %rax,%rbx
    ffde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffe2:	48 89 c7             	mov    %rax,%rdi
    ffe5:	e8 ff 46 ff ff       	call   46e9 <_ZSt12__niter_baseIPPKcET_S3_>
    ffea:	4c 89 e2             	mov    %r12,%rdx
    ffed:	48 89 de             	mov    %rbx,%rsi
    fff0:	48 89 c7             	mov    %rax,%rdi
    fff3:	e8 d7 04 00 00       	call   104cf <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>
    fff8:	48 89 c2             	mov    %rax,%rdx
    fffb:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    ffff:	48 89 d6             	mov    %rdx,%rsi
   10002:	48 89 c7             	mov    %rax,%rdi
   10005:	e8 1a 47 ff ff       	call   4724 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1000a:	48 83 c4 20          	add    $0x20,%rsp
   1000e:	5b                   	pop    %rbx
   1000f:	41 5c                	pop    %r12
   10011:	5d                   	pop    %rbp
   10012:	c3                   	ret

0000000000010013 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   10013:	55                   	push   %rbp
   10014:	48 89 e5             	mov    %rsp,%rbp
   10017:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1001b:	90                   	nop
   1001c:	5d                   	pop    %rbp
   1001d:	c3                   	ret

000000000001001e <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1001e:	55                   	push   %rbp
   1001f:	48 89 e5             	mov    %rsp,%rbp
   10022:	48 83 ec 20          	sub    $0x20,%rsp
   10026:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1002a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1002e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10032:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10037:	75 06                	jne    1003f <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1003d:	eb 4c                	jmp    1008b <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   1003f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10043:	48 89 d0             	mov    %rdx,%rax
   10046:	48 c1 e0 06          	shl    $0x6,%rax
   1004a:	48 01 d0             	add    %rdx,%rax
   1004d:	48 c1 e0 03          	shl    $0x3,%rax
   10051:	48 89 c2             	mov    %rax,%rdx
   10054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10058:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1005c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10064:	48 89 ce             	mov    %rcx,%rsi
   10067:	48 89 c7             	mov    %rax,%rdi
   1006a:	e8 8d 04 00 00       	call   104fc <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   1006f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10073:	48 89 d0             	mov    %rdx,%rax
   10076:	48 c1 e0 06          	shl    $0x6,%rax
   1007a:	48 01 d0             	add    %rdx,%rax
   1007d:	48 c1 e0 03          	shl    $0x3,%rax
   10081:	48 89 c2             	mov    %rax,%rdx
   10084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10088:	48 01 d0             	add    %rdx,%rax
    }
   1008b:	c9                   	leave
   1008c:	c3                   	ret

000000000001008d <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>:
      allocate(allocator_type& __a, size_type __n)
   1008d:	55                   	push   %rbp
   1008e:	48 89 e5             	mov    %rsp,%rbp
   10091:	48 83 ec 10          	sub    $0x10,%rsp
   10095:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10099:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1009d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   100a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100a5:	ba 00 00 00 00       	mov    $0x0,%edx
   100aa:	48 89 ce             	mov    %rcx,%rsi
   100ad:	48 89 c7             	mov    %rax,%rdi
   100b0:	e8 75 04 00 00       	call   1052a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>
   100b5:	c9                   	leave
   100b6:	c3                   	ret

00000000000100b7 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   100b7:	55                   	push   %rbp
   100b8:	48 89 e5             	mov    %rsp,%rbp
   100bb:	48 83 ec 20          	sub    $0x20,%rsp
   100bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   100c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   100cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   100cf:	48 89 c7             	mov    %rax,%rdi
   100d2:	e8 ce cb ff ff       	call   cca5 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   100d7:	48 89 c2             	mov    %rax,%rdx
   100da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   100de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100e2:	48 89 ce             	mov    %rcx,%rsi
   100e5:	48 89 c7             	mov    %rax,%rdi
   100e8:	e8 9f 04 00 00       	call   1058c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>
	}
   100ed:	90                   	nop
   100ee:	c9                   	leave
   100ef:	c3                   	ret

00000000000100f0 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
   100f0:	55                   	push   %rbp
   100f1:	48 89 e5             	mov    %rsp,%rbp
   100f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   100f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100fc:	5d                   	pop    %rbp
   100fd:	c3                   	ret

00000000000100fe <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
   100fe:	55                   	push   %rbp
   100ff:	48 89 e5             	mov    %rsp,%rbp
   10102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   10106:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1010a:	5d                   	pop    %rbp
   1010b:	c3                   	ret

000000000001010c <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   1010c:	55                   	push   %rbp
   1010d:	48 89 e5             	mov    %rsp,%rbp
   10110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   10114:	90                   	nop
   10115:	5d                   	pop    %rbp
   10116:	c3                   	ret

0000000000010117 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   10117:	55                   	push   %rbp
   10118:	48 89 e5             	mov    %rsp,%rbp
   1011b:	48 83 ec 20          	sub    $0x20,%rsp
   1011f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10123:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10127:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1012b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10130:	75 06                	jne    10138 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10136:	eb 3a                	jmp    10172 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   10138:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1013c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10143:	00 
   10144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10148:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1014c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10154:	48 89 ce             	mov    %rcx,%rsi
   10157:	48 89 c7             	mov    %rax,%rdi
   1015a:	e8 d1 04 00 00       	call   10630 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   1015f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10163:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1016a:	00 
   1016b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1016f:	48 01 d0             	add    %rdx,%rax
    }
   10172:	c9                   	leave
   10173:	c3                   	ret

0000000000010174 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   10174:	55                   	push   %rbp
   10175:	48 89 e5             	mov    %rsp,%rbp
   10178:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1017c:	90                   	nop
   1017d:	5d                   	pop    %rbp
   1017e:	c3                   	ret

000000000001017f <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1017f:	55                   	push   %rbp
   10180:	48 89 e5             	mov    %rsp,%rbp
   10183:	48 83 ec 20          	sub    $0x20,%rsp
   10187:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1018b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1018f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10193:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10198:	75 06                	jne    101a0 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1019a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1019e:	eb 3a                	jmp    101da <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   101a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   101a4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   101ab:	00 
   101ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101b0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   101b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   101b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101bc:	48 89 ce             	mov    %rcx,%rsi
   101bf:	48 89 c7             	mov    %rax,%rdi
   101c2:	e8 97 04 00 00       	call   1065e <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   101c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   101cb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   101d2:	00 
   101d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101d7:	48 01 d0             	add    %rdx,%rax
    }
   101da:	c9                   	leave
   101db:	c3                   	ret

00000000000101dc <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   101dc:	55                   	push   %rbp
   101dd:	48 89 e5             	mov    %rsp,%rbp
   101e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   101e4:	90                   	nop
   101e5:	5d                   	pop    %rbp
   101e6:	c3                   	ret

00000000000101e7 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   101e7:	55                   	push   %rbp
   101e8:	48 89 e5             	mov    %rsp,%rbp
   101eb:	48 83 ec 20          	sub    $0x20,%rsp
   101ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   101f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   101fb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10200:	75 06                	jne    10208 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10206:	eb 3a                	jmp    10242 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   10208:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1020c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10213:	00 
   10214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10218:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1021c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10224:	48 89 ce             	mov    %rcx,%rsi
   10227:	48 89 c7             	mov    %rax,%rdi
   1022a:	e8 5d 04 00 00       	call   1068c <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1022f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10233:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1023a:	00 
   1023b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1023f:	48 01 d0             	add    %rdx,%rax
    }
   10242:	c9                   	leave
   10243:	c3                   	ret

0000000000010244 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   10244:	55                   	push   %rbp
   10245:	48 89 e5             	mov    %rsp,%rbp
   10248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1024c:	90                   	nop
   1024d:	5d                   	pop    %rbp
   1024e:	c3                   	ret

000000000001024f <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1024f:	55                   	push   %rbp
   10250:	48 89 e5             	mov    %rsp,%rbp
   10253:	48 83 ec 20          	sub    $0x20,%rsp
   10257:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1025b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1025f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10263:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10268:	75 06                	jne    10270 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1026a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1026e:	eb 4a                	jmp    102ba <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
   10270:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10274:	48 89 d0             	mov    %rdx,%rax
   10277:	48 01 c0             	add    %rax,%rax
   1027a:	48 01 d0             	add    %rdx,%rax
   1027d:	48 c1 e0 03          	shl    $0x3,%rax
   10281:	48 89 c2             	mov    %rax,%rdx
   10284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10288:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1028c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10294:	48 89 ce             	mov    %rcx,%rsi
   10297:	48 89 c7             	mov    %rax,%rdi
   1029a:	e8 1b 04 00 00       	call   106ba <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   1029f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   102a3:	48 89 d0             	mov    %rdx,%rax
   102a6:	48 01 c0             	add    %rax,%rax
   102a9:	48 01 d0             	add    %rdx,%rax
   102ac:	48 c1 e0 03          	shl    $0x3,%rax
   102b0:	48 89 c2             	mov    %rax,%rdx
   102b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102b7:	48 01 d0             	add    %rdx,%rax
    }
   102ba:	c9                   	leave
   102bb:	c3                   	ret

00000000000102bc <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   102bc:	55                   	push   %rbp
   102bd:	48 89 e5             	mov    %rsp,%rbp
   102c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   102c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102c8:	5d                   	pop    %rbp
   102c9:	c3                   	ret

00000000000102ca <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>:
      _M_get_node()
   102ca:	55                   	push   %rbp
   102cb:	48 89 e5             	mov    %rsp,%rbp
   102ce:	48 83 ec 10          	sub    $0x10,%rsp
   102d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   102d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102da:	48 89 c7             	mov    %rax,%rdi
   102dd:	e8 bc eb ff ff       	call   ee9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   102e2:	be 01 00 00 00       	mov    $0x1,%esi
   102e7:	48 89 c7             	mov    %rax,%rdi
   102ea:	e8 f9 03 00 00       	call   106e8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>
   102ef:	c9                   	leave
   102f0:	c3                   	ret
   102f1:	90                   	nop

00000000000102f2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   102f2:	55                   	push   %rbp
   102f3:	48 89 e5             	mov    %rsp,%rbp
   102f6:	41 54                	push   %r12
   102f8:	53                   	push   %rbx
   102f9:	48 83 ec 20          	sub    $0x20,%rsp
   102fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10301:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10305:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   10309:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1030d:	48 89 c6             	mov    %rax,%rsi
   10310:	bf 28 00 00 00       	mov    $0x28,%edi
   10315:	e8 5f 6b ff ff       	call   6e79 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   1031a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1031e:	48 89 c7             	mov    %rax,%rdi
   10321:	e8 f6 d9 ff ff       	call   dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   10326:	49 89 c4             	mov    %rax,%r12
   10329:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1032d:	48 89 c7             	mov    %rax,%rdi
   10330:	e8 77 eb ff ff       	call   eeac <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
   10335:	48 89 c3             	mov    %rax,%rbx
   10338:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1033c:	48 89 c7             	mov    %rax,%rdi
   1033f:	e8 5a eb ff ff       	call   ee9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   10344:	4c 89 e2             	mov    %r12,%rdx
   10347:	48 89 de             	mov    %rbx,%rsi
   1034a:	48 89 c7             	mov    %rax,%rdi
   1034d:	e8 c0 03 00 00       	call   10712 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>
	}
   10352:	90                   	nop
   10353:	48 83 c4 20          	add    $0x20,%rsp
   10357:	5b                   	pop    %rbx
   10358:	41 5c                	pop    %r12
   1035a:	5d                   	pop    %rbp
   1035b:	c3                   	ret

000000000001035c <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() noexcept
   1035c:	55                   	push   %rbp
   1035d:	48 89 e5             	mov    %rsp,%rbp
   10360:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   10364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10368:	5d                   	pop    %rbp
   10369:	c3                   	ret

000000000001036a <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1036a:	55                   	push   %rbp
   1036b:	48 89 e5             	mov    %rsp,%rbp
   1036e:	48 83 ec 10          	sub    $0x10,%rsp
   10372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   10376:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1037a:	48 89 c7             	mov    %rax,%rdi
   1037d:	e8 78 f9 ff ff       	call   fcfa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
   10382:	c9                   	leave
   10383:	c3                   	ret

0000000000010384 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   10384:	55                   	push   %rbp
   10385:	48 89 e5             	mov    %rsp,%rbp
   10388:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1038c:	90                   	nop
   1038d:	5d                   	pop    %rbp
   1038e:	c3                   	ret

000000000001038f <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1038f:	55                   	push   %rbp
   10390:	48 89 e5             	mov    %rsp,%rbp
   10393:	48 83 ec 20          	sub    $0x20,%rsp
   10397:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1039b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1039f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   103a3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   103a8:	75 06                	jne    103b0 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   103aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103ae:	eb 3a                	jmp    103ea <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   103b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103b4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   103bb:	00 
   103bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103c0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   103c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   103c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103cc:	48 89 ce             	mov    %rcx,%rsi
   103cf:	48 89 c7             	mov    %rax,%rdi
   103d2:	e8 74 03 00 00       	call   1074b <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
   103d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103db:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   103e2:	00 
   103e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103e7:	48 01 d0             	add    %rdx,%rax
    }
   103ea:	c9                   	leave
   103eb:	c3                   	ret

00000000000103ec <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   103ec:	55                   	push   %rbp
   103ed:	48 89 e5             	mov    %rsp,%rbp
   103f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   103f4:	90                   	nop
   103f5:	5d                   	pop    %rbp
   103f6:	c3                   	ret

00000000000103f7 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   103f7:	55                   	push   %rbp
   103f8:	48 89 e5             	mov    %rsp,%rbp
   103fb:	48 83 ec 20          	sub    $0x20,%rsp
   103ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10403:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10407:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1040b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10410:	75 06                	jne    10418 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10416:	eb 3a                	jmp    10452 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   10418:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1041c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10423:	00 
   10424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10428:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1042c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10434:	48 89 ce             	mov    %rcx,%rsi
   10437:	48 89 c7             	mov    %rax,%rdi
   1043a:	e8 3a 03 00 00       	call   10779 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1043f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10443:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1044a:	00 
   1044b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1044f:	48 01 d0             	add    %rdx,%rax
    }
   10452:	c9                   	leave
   10453:	c3                   	ret

0000000000010454 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   10454:	55                   	push   %rbp
   10455:	48 89 e5             	mov    %rsp,%rbp
   10458:	48 83 ec 20          	sub    $0x20,%rsp
   1045c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10460:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10464:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10468:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1046d:	75 06                	jne    10475 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1046f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10473:	eb 2a                	jmp    1049f <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
   10475:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10479:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1047d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10481:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10489:	48 89 ce             	mov    %rcx,%rsi
   1048c:	48 89 c7             	mov    %rax,%rdi
   1048f:	e8 13 03 00 00       	call   107a7 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
   10494:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10498:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1049c:	48 01 d0             	add    %rdx,%rax
    }
   1049f:	c9                   	leave
   104a0:	c3                   	ret

00000000000104a1 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   104a1:	55                   	push   %rbp
   104a2:	48 89 e5             	mov    %rsp,%rbp
   104a5:	48 83 ec 20          	sub    $0x20,%rsp
   104a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   104b1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   104b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   104b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   104bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104c1:	48 89 ce             	mov    %rcx,%rsi
   104c4:	48 89 c7             	mov    %rax,%rdi
   104c7:	e8 09 03 00 00       	call   107d5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   104cc:	90                   	nop
   104cd:	c9                   	leave
   104ce:	c3                   	ret

00000000000104cf <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   104cf:	55                   	push   %rbp
   104d0:	48 89 e5             	mov    %rsp,%rbp
   104d3:	48 83 ec 20          	sub    $0x20,%rsp
   104d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   104df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   104e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   104e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   104eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104ef:	48 89 ce             	mov    %rcx,%rsi
   104f2:	48 89 c7             	mov    %rax,%rdi
   104f5:	e8 53 03 00 00       	call   1084d <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>
   104fa:	c9                   	leave
   104fb:	c3                   	ret

00000000000104fc <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   104fc:	55                   	push   %rbp
   104fd:	48 89 e5             	mov    %rsp,%rbp
   10500:	48 83 ec 20          	sub    $0x20,%rsp
   10504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10508:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1050c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   10510:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10514:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10518:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1051c:	48 89 ce             	mov    %rcx,%rsi
   1051f:	48 89 c7             	mov    %rax,%rdi
   10522:	e8 53 03 00 00       	call   1087a <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   10527:	90                   	nop
   10528:	c9                   	leave
   10529:	c3                   	ret

000000000001052a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1052a:	55                   	push   %rbp
   1052b:	48 89 e5             	mov    %rsp,%rbp
   1052e:	48 83 ec 20          	sub    $0x20,%rsp
   10532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10536:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1053a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1053e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10542:	48 89 c7             	mov    %rax,%rdi
   10545:	e8 a8 03 00 00       	call   108f2 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>
   1054a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1054e:	0f 92 c0             	setb   %al
   10551:	0f b6 c0             	movzbl %al,%eax
   10554:	48 85 c0             	test   %rax,%rax
   10557:	0f 95 c0             	setne  %al
   1055a:	84 c0                	test   %al,%al
   1055c:	74 1a                	je     10578 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1055e:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
   10565:	ff ff 03 
   10568:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1056c:	73 05                	jae    10573 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1056e:	e8 4d 2c ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   10573:	e8 28 2b ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10578:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1057c:	48 c1 e0 06          	shl    $0x6,%rax
   10580:	48 89 c7             	mov    %rax,%rdi
   10583:	e8 f8 2c ff ff       	call   3280 <_Znwm@plt>
   10588:	90                   	nop
      }
   10589:	c9                   	leave
   1058a:	c3                   	ret
   1058b:	90                   	nop

000000000001058c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1058c:	55                   	push   %rbp
   1058d:	48 89 e5             	mov    %rsp,%rbp
   10590:	41 56                	push   %r14
   10592:	41 55                	push   %r13
   10594:	41 54                	push   %r12
   10596:	53                   	push   %rbx
   10597:	48 83 ec 30          	sub    $0x30,%rsp
   1059b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1059f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   105a3:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   105a7:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   105ab:	48 89 de             	mov    %rbx,%rsi
   105ae:	bf 20 00 00 00       	mov    $0x20,%edi
   105b3:	e8 c1 68 ff ff       	call   6e79 <_ZnwmPv>
   105b8:	49 89 c4             	mov    %rax,%r12
   105bb:	41 be 01 00 00 00    	mov    $0x1,%r14d
   105c1:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   105c5:	48 89 c7             	mov    %rax,%rdi
   105c8:	e8 53 2f ff ff       	call   3520 <_ZNSaIcEC1Ev@plt>
   105cd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   105d1:	48 89 c7             	mov    %rax,%rdi
   105d4:	e8 cc c6 ff ff       	call   cca5 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   105d9:	48 8b 00             	mov    (%rax),%rax
   105dc:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   105e0:	48 89 c6             	mov    %rax,%rsi
   105e3:	4c 89 e7             	mov    %r12,%rdi
   105e6:	e8 21 74 ff ff       	call   7a0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   105eb:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   105ef:	48 89 c7             	mov    %rax,%rdi
   105f2:	e8 19 2d ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
   105f7:	eb 2a                	jmp    10623 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x97>
   105f9:	49 89 c5             	mov    %rax,%r13
   105fc:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   10600:	48 89 c7             	mov    %rax,%rdi
   10603:	e8 08 2d ff ff       	call   3310 <_ZNSaIcED1Ev@plt>
   10608:	45 84 f6             	test   %r14b,%r14b
   1060b:	74 0b                	je     10618 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x8c>
   1060d:	48 89 de             	mov    %rbx,%rsi
   10610:	4c 89 e7             	mov    %r12,%rdi
   10613:	e8 73 68 ff ff       	call   6e8b <_ZdlPvS_>
   10618:	4c 89 e8             	mov    %r13,%rax
   1061b:	48 89 c7             	mov    %rax,%rdi
   1061e:	e8 ed 2e ff ff       	call   3510 <_Unwind_Resume@plt>
   10623:	48 83 c4 30          	add    $0x30,%rsp
   10627:	5b                   	pop    %rbx
   10628:	41 5c                	pop    %r12
   1062a:	41 5d                	pop    %r13
   1062c:	41 5e                	pop    %r14
   1062e:	5d                   	pop    %rbp
   1062f:	c3                   	ret

0000000000010630 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   10630:	55                   	push   %rbp
   10631:	48 89 e5             	mov    %rsp,%rbp
   10634:	48 83 ec 20          	sub    $0x20,%rsp
   10638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1063c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10640:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   10644:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10648:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1064c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10650:	48 89 ce             	mov    %rcx,%rsi
   10653:	48 89 c7             	mov    %rax,%rdi
   10656:	e8 ab 02 00 00       	call   10906 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   1065b:	90                   	nop
   1065c:	c9                   	leave
   1065d:	c3                   	ret

000000000001065e <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1065e:	55                   	push   %rbp
   1065f:	48 89 e5             	mov    %rsp,%rbp
   10662:	48 83 ec 20          	sub    $0x20,%rsp
   10666:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1066a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1066e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   10672:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10676:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1067a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1067e:	48 89 ce             	mov    %rcx,%rsi
   10681:	48 89 c7             	mov    %rax,%rdi
   10684:	e8 b0 02 00 00       	call   10939 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   10689:	90                   	nop
   1068a:	c9                   	leave
   1068b:	c3                   	ret

000000000001068c <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1068c:	55                   	push   %rbp
   1068d:	48 89 e5             	mov    %rsp,%rbp
   10690:	48 83 ec 20          	sub    $0x20,%rsp
   10694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10698:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1069c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   106a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   106a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   106a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106ac:	48 89 ce             	mov    %rcx,%rsi
   106af:	48 89 c7             	mov    %rax,%rdi
   106b2:	e8 b3 02 00 00       	call   1096a <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   106b7:	90                   	nop
   106b8:	c9                   	leave
   106b9:	c3                   	ret

00000000000106ba <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   106ba:	55                   	push   %rbp
   106bb:	48 89 e5             	mov    %rsp,%rbp
   106be:	48 83 ec 20          	sub    $0x20,%rsp
   106c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   106ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   106ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   106d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   106d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106da:	48 89 ce             	mov    %rcx,%rsi
   106dd:	48 89 c7             	mov    %rax,%rdi
   106e0:	e8 c0 02 00 00       	call   109a5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   106e5:	90                   	nop
   106e6:	c9                   	leave
   106e7:	c3                   	ret

00000000000106e8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   106e8:	55                   	push   %rbp
   106e9:	48 89 e5             	mov    %rsp,%rbp
   106ec:	48 83 ec 10          	sub    $0x10,%rsp
   106f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   106f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   106fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10700:	ba 00 00 00 00       	mov    $0x0,%edx
   10705:	48 89 ce             	mov    %rcx,%rsi
   10708:	48 89 c7             	mov    %rax,%rdi
   1070b:	e8 d8 02 00 00       	call   109e8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>
   10710:	c9                   	leave
   10711:	c3                   	ret

0000000000010712 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   10712:	55                   	push   %rbp
   10713:	48 89 e5             	mov    %rsp,%rbp
   10716:	48 83 ec 20          	sub    $0x20,%rsp
   1071a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1071e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10722:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   10726:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1072a:	48 89 c7             	mov    %rax,%rdi
   1072d:	e8 ea d5 ff ff       	call   dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   10732:	48 89 c2             	mov    %rax,%rdx
   10735:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1073d:	48 89 ce             	mov    %rcx,%rsi
   10740:	48 89 c7             	mov    %rax,%rdi
   10743:	e8 0c 03 00 00       	call   10a54 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>
	}
   10748:	90                   	nop
   10749:	c9                   	leave
   1074a:	c3                   	ret

000000000001074b <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1074b:	55                   	push   %rbp
   1074c:	48 89 e5             	mov    %rsp,%rbp
   1074f:	48 83 ec 20          	sub    $0x20,%rsp
   10753:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10757:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1075b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1075f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10763:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1076b:	48 89 ce             	mov    %rcx,%rsi
   1076e:	48 89 c7             	mov    %rax,%rdi
   10771:	e8 1e 03 00 00       	call   10a94 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   10776:	90                   	nop
   10777:	c9                   	leave
   10778:	c3                   	ret

0000000000010779 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   10779:	55                   	push   %rbp
   1077a:	48 89 e5             	mov    %rsp,%rbp
   1077d:	48 83 ec 20          	sub    $0x20,%rsp
   10781:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10785:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10789:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1078d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10791:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10795:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10799:	48 89 ce             	mov    %rcx,%rsi
   1079c:	48 89 c7             	mov    %rax,%rdi
   1079f:	e8 2b 03 00 00       	call   10acf <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   107a4:	90                   	nop
   107a5:	c9                   	leave
   107a6:	c3                   	ret

00000000000107a7 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   107a7:	55                   	push   %rbp
   107a8:	48 89 e5             	mov    %rsp,%rbp
   107ab:	48 83 ec 20          	sub    $0x20,%rsp
   107af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   107b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   107bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   107bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   107c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107c7:	48 89 ce             	mov    %rcx,%rsi
   107ca:	48 89 c7             	mov    %rax,%rdi
   107cd:	e8 38 03 00 00       	call   10b0a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
   107d2:	90                   	nop
   107d3:	c9                   	leave
   107d4:	c3                   	ret

00000000000107d5 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   107d5:	55                   	push   %rbp
   107d6:	48 89 e5             	mov    %rsp,%rbp
   107d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   107e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   107e5:	eb 58                	jmp    1083f <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   107e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   107ef:	b9 04 01 00 00       	mov    $0x104,%ecx
   107f4:	48 8b 32             	mov    (%rdx),%rsi
   107f7:	48 89 30             	mov    %rsi,(%rax)
   107fa:	89 ce                	mov    %ecx,%esi
   107fc:	48 01 c6             	add    %rax,%rsi
   107ff:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   10803:	89 ce                	mov    %ecx,%esi
   10805:	48 01 d6             	add    %rdx,%rsi
   10808:	48 83 c6 08          	add    $0x8,%rsi
   1080c:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   10810:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   10814:	48 8d 78 08          	lea    0x8(%rax),%rdi
   10818:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1081c:	48 29 f8             	sub    %rdi,%rax
   1081f:	48 29 c2             	sub    %rax,%rdx
   10822:	01 c1                	add    %eax,%ecx
   10824:	83 e1 f8             	and    $0xfffffff8,%ecx
   10827:	89 c8                	mov    %ecx,%eax
   10829:	c1 e8 03             	shr    $0x3,%eax
   1082c:	89 c0                	mov    %eax,%eax
   1082e:	48 89 d6             	mov    %rdx,%rsi
   10831:	48 89 c1             	mov    %rax,%rcx
   10834:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   10837:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
   1083e:	00 
   1083f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10843:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10847:	75 9e                	jne    107e7 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   10849:	90                   	nop
   1084a:	90                   	nop
   1084b:	5d                   	pop    %rbp
   1084c:	c3                   	ret

000000000001084d <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1084d:	55                   	push   %rbp
   1084e:	48 89 e5             	mov    %rsp,%rbp
   10851:	48 83 ec 20          	sub    $0x20,%rsp
   10855:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10859:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1085d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   10861:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10865:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1086d:	48 89 ce             	mov    %rcx,%rsi
   10870:	48 89 c7             	mov    %rax,%rdi
   10873:	e8 eb 3e ff ff       	call   4763 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   10878:	c9                   	leave
   10879:	c3                   	ret

000000000001087a <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1087a:	55                   	push   %rbp
   1087b:	48 89 e5             	mov    %rsp,%rbp
   1087e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10882:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10886:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   1088a:	eb 58                	jmp    108e4 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   1088c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10890:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10894:	b9 08 02 00 00       	mov    $0x208,%ecx
   10899:	48 8b 32             	mov    (%rdx),%rsi
   1089c:	48 89 30             	mov    %rsi,(%rax)
   1089f:	89 ce                	mov    %ecx,%esi
   108a1:	48 01 c6             	add    %rax,%rsi
   108a4:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   108a8:	89 ce                	mov    %ecx,%esi
   108aa:	48 01 d6             	add    %rdx,%rsi
   108ad:	48 83 c6 08          	add    $0x8,%rsi
   108b1:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   108b5:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   108b9:	48 8d 78 08          	lea    0x8(%rax),%rdi
   108bd:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   108c1:	48 29 f8             	sub    %rdi,%rax
   108c4:	48 29 c2             	sub    %rax,%rdx
   108c7:	01 c1                	add    %eax,%ecx
   108c9:	83 e1 f8             	and    $0xfffffff8,%ecx
   108cc:	89 c8                	mov    %ecx,%eax
   108ce:	c1 e8 03             	shr    $0x3,%eax
   108d1:	89 c0                	mov    %eax,%eax
   108d3:	48 89 d6             	mov    %rdx,%rsi
   108d6:	48 89 c1             	mov    %rax,%rcx
   108d9:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   108dc:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
   108e3:	00 
   108e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   108ec:	75 9e                	jne    1088c <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   108ee:	90                   	nop
   108ef:	90                   	nop
   108f0:	5d                   	pop    %rbp
   108f1:	c3                   	ret

00000000000108f2 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   108f2:	55                   	push   %rbp
   108f3:	48 89 e5             	mov    %rsp,%rbp
   108f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   108fa:	48 b8 ff ff ff ff ff 	movabs $0x1ffffffffffffff,%rax
   10901:	ff ff 01 
      }
   10904:	5d                   	pop    %rbp
   10905:	c3                   	ret

0000000000010906 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   10906:	55                   	push   %rbp
   10907:	48 89 e5             	mov    %rsp,%rbp
   1090a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1090e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10912:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   10916:	eb 13                	jmp    1092b <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
   10918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1091c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10920:	48 8b 12             	mov    (%rdx),%rdx
   10923:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   10926:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   1092b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1092f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10933:	75 e3                	jne    10918 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   10935:	90                   	nop
   10936:	90                   	nop
   10937:	5d                   	pop    %rbp
   10938:	c3                   	ret

0000000000010939 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   10939:	55                   	push   %rbp
   1093a:	48 89 e5             	mov    %rsp,%rbp
   1093d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10941:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10945:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   10949:	eb 11                	jmp    1095c <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
   1094b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1094f:	8b 10                	mov    (%rax),%edx
   10951:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10955:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
   10957:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
   1095c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10960:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10964:	75 e5                	jne    1094b <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   10966:	90                   	nop
   10967:	90                   	nop
   10968:	5d                   	pop    %rbp
   10969:	c3                   	ret

000000000001096a <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1096a:	55                   	push   %rbp
   1096b:	48 89 e5             	mov    %rsp,%rbp
   1096e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10972:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10976:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1097a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1097e:	48 8b 00             	mov    (%rax),%rax
   10981:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   10985:	eb 10                	jmp    10997 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   10987:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1098b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1098f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   10992:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   10997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1099b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1099f:	75 e6                	jne    10987 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   109a1:	90                   	nop
   109a2:	90                   	nop
   109a3:	5d                   	pop    %rbp
   109a4:	c3                   	ret

00000000000109a5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   109a5:	55                   	push   %rbp
   109a6:	48 89 e5             	mov    %rsp,%rbp
   109a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   109b1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   109b5:	eb 23                	jmp    109da <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
   109b7:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   109bb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   109bf:	48 8b 06             	mov    (%rsi),%rax
   109c2:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   109c6:	48 89 01             	mov    %rax,(%rcx)
   109c9:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   109cd:	48 8b 46 10          	mov    0x10(%rsi),%rax
   109d1:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
   109d5:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
   109da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109de:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   109e2:	75 d3                	jne    109b7 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   109e4:	90                   	nop
   109e5:	90                   	nop
   109e6:	5d                   	pop    %rbp
   109e7:	c3                   	ret

00000000000109e8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   109e8:	55                   	push   %rbp
   109e9:	48 89 e5             	mov    %rsp,%rbp
   109ec:	48 83 ec 20          	sub    $0x20,%rsp
   109f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   109f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   109fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a00:	48 89 c7             	mov    %rax,%rdi
   10a03:	e8 50 01 00 00       	call   10b58 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>
   10a08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10a0c:	0f 92 c0             	setb   %al
   10a0f:	0f b6 c0             	movzbl %al,%eax
   10a12:	48 85 c0             	test   %rax,%rax
   10a15:	0f 95 c0             	setne  %al
   10a18:	84 c0                	test   %al,%al
   10a1a:	74 1a                	je     10a36 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10a1c:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   10a23:	66 66 06 
   10a26:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10a2a:	73 05                	jae    10a31 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10a2c:	e8 8f 27 ff ff       	call   31c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   10a31:	e8 6a 26 ff ff       	call   30a0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10a36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10a3a:	48 89 d0             	mov    %rdx,%rax
   10a3d:	48 c1 e0 02          	shl    $0x2,%rax
   10a41:	48 01 d0             	add    %rdx,%rax
   10a44:	48 c1 e0 03          	shl    $0x3,%rax
   10a48:	48 89 c7             	mov    %rax,%rdi
   10a4b:	e8 30 28 ff ff       	call   3280 <_Znwm@plt>
   10a50:	90                   	nop
      }
   10a51:	c9                   	leave
   10a52:	c3                   	ret
   10a53:	90                   	nop

0000000000010a54 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   10a54:	55                   	push   %rbp
   10a55:	48 89 e5             	mov    %rsp,%rbp
   10a58:	53                   	push   %rbx
   10a59:	48 83 ec 28          	sub    $0x28,%rsp
   10a5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10a65:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   10a69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a6d:	48 89 c6             	mov    %rax,%rsi
   10a70:	bf 04 00 00 00       	mov    $0x4,%edi
   10a75:	e8 ff 63 ff ff       	call   6e79 <_ZnwmPv>
   10a7a:	48 89 c3             	mov    %rax,%rbx
   10a7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a81:	48 89 c7             	mov    %rax,%rdi
   10a84:	e8 93 d2 ff ff       	call   dd1c <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   10a89:	8b 00                	mov    (%rax),%eax
   10a8b:	89 03                	mov    %eax,(%rbx)
   10a8d:	90                   	nop
   10a8e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10a92:	c9                   	leave
   10a93:	c3                   	ret

0000000000010a94 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   10a94:	55                   	push   %rbp
   10a95:	48 89 e5             	mov    %rsp,%rbp
   10a98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10aa0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   10aa4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10aa8:	48 8b 00             	mov    (%rax),%rax
   10aab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   10aaf:	eb 10                	jmp    10ac1 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   10ab1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ab5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10ab9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   10abc:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   10ac1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ac5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10ac9:	75 e6                	jne    10ab1 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   10acb:	90                   	nop
   10acc:	90                   	nop
   10acd:	5d                   	pop    %rbp
   10ace:	c3                   	ret

0000000000010acf <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   10acf:	55                   	push   %rbp
   10ad0:	48 89 e5             	mov    %rsp,%rbp
   10ad3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ad7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10adb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   10adf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10ae3:	48 8b 00             	mov    (%rax),%rax
   10ae6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   10aea:	eb 10                	jmp    10afc <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   10aec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10af0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10af4:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   10af7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   10afc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b00:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10b04:	75 e6                	jne    10aec <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   10b06:	90                   	nop
   10b07:	90                   	nop
   10b08:	5d                   	pop    %rbp
   10b09:	c3                   	ret

0000000000010b0a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
   10b0a:	55                   	push   %rbp
   10b0b:	48 89 e5             	mov    %rsp,%rbp
   10b0e:	48 83 ec 30          	sub    $0x30,%rsp
   10b12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b16:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10b1a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
   10b1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b22:	0f b6 00             	movzbl (%rax),%eax
   10b25:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
   10b28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b2c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10b30:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10b34:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10b39:	74 19                	je     10b54 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
   10b3b:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
   10b3f:	0f b6 c8             	movzbl %al,%ecx
   10b42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b4a:	89 ce                	mov    %ecx,%esi
   10b4c:	48 89 c7             	mov    %rax,%rdi
   10b4f:	e8 bc 25 ff ff       	call   3110 <memset@plt>
    }
   10b54:	90                   	nop
   10b55:	c9                   	leave
   10b56:	c3                   	ret
   10b57:	90                   	nop

0000000000010b58 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   10b58:	55                   	push   %rbp
   10b59:	48 89 e5             	mov    %rsp,%rbp
   10b5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   10b60:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   10b67:	33 33 03 
      }
   10b6a:	5d                   	pop    %rbp
   10b6b:	c3                   	ret

0000000000010b6c <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   10b6c:	55                   	push   %rbp
   10b6d:	48 89 e5             	mov    %rsp,%rbp
   10b70:	48 83 ec 10          	sub    $0x10,%rsp
   10b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b78:	48 8d 15 51 c1 00 00 	lea    0xc151(%rip),%rdx        # 1ccd0 <_ZTVSt19bad_optional_access+0x10>
   10b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b83:	48 89 10             	mov    %rdx,(%rax)
   10b86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b8a:	48 89 c7             	mov    %rax,%rdi
   10b8d:	e8 be 29 ff ff       	call   3550 <_ZNSt9exceptionD2Ev@plt>
   10b92:	90                   	nop
   10b93:	c9                   	leave
   10b94:	c3                   	ret
   10b95:	90                   	nop

0000000000010b96 <_ZNSt19bad_optional_accessD0Ev>:
   10b96:	55                   	push   %rbp
   10b97:	48 89 e5             	mov    %rsp,%rbp
   10b9a:	48 83 ec 10          	sub    $0x10,%rsp
   10b9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ba6:	48 89 c7             	mov    %rax,%rdi
   10ba9:	e8 be ff ff ff       	call   10b6c <_ZNSt19bad_optional_accessD1Ev>
   10bae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bb2:	be 08 00 00 00       	mov    $0x8,%esi
   10bb7:	48 89 c7             	mov    %rax,%rdi
   10bba:	e8 d1 26 ff ff       	call   3290 <_ZdlPvm@plt>
   10bbf:	c9                   	leave
   10bc0:	c3                   	ret

Disassembly of section .fini:

0000000000010bc4 <_fini>:
   10bc4:	48 83 ec 08          	sub    $0x8,%rsp
   10bc8:	48 83 c4 08          	add    $0x8,%rsp
   10bcc:	c3                   	ret
