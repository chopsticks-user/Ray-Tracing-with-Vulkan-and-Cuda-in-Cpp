
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    $0x8,%rsp
    2004:	48 8b 05 ad 7f 00 00 	mov    0x7fad(%rip),%rax        # 9fb8 <__gmon_start__@Base>
    200b:	48 85 c0             	test   %rax,%rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   *%rax
    2012:	48 83 c4 08          	add    $0x8,%rsp
    2016:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <_ZSt17__throw_bad_allocv@plt-0x10>:
    2020:	ff 35 ca 7f 00 00    	push   0x7fca(%rip)        # 9ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 cc 7f 00 00    	jmp    *0x7fcc(%rip)        # 9ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <_ZSt17__throw_bad_allocv@plt>:
    2030:	ff 25 ca 7f 00 00    	jmp    *0x7fca(%rip)        # a000 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <_ZNSt13runtime_errorC1EPKc@plt>:
    2040:	ff 25 c2 7f 00 00    	jmp    *0x7fc2(%rip)        # a008 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <vkGetPhysicalDeviceProperties@plt>:
    2050:	ff 25 ba 7f 00 00    	jmp    *0x7fba(%rip)        # a010 <vkGetPhysicalDeviceProperties@Base>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <__cxa_begin_catch@plt>:
    2060:	ff 25 b2 7f 00 00    	jmp    *0x7fb2(%rip)        # a018 <__cxa_begin_catch@CXXABI_1.3>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <__cxa_allocate_exception@plt>:
    2070:	ff 25 aa 7f 00 00    	jmp    *0x7faa(%rip)        # a020 <__cxa_allocate_exception@CXXABI_1.3>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <_ZSt20__throw_length_errorPKc@plt>:
    2080:	ff 25 a2 7f 00 00    	jmp    *0x7fa2(%rip)        # a028 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <vkEnumeratePhysicalDevices@plt>:
    2090:	ff 25 9a 7f 00 00    	jmp    *0x7f9a(%rip)        # a030 <vkEnumeratePhysicalDevices@Base>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    20a0:	ff 25 92 7f 00 00    	jmp    *0x7f92(%rip)        # a038 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <__cxa_free_exception@plt>:
    20b0:	ff 25 8a 7f 00 00    	jmp    *0x7f8a(%rip)        # a040 <__cxa_free_exception@CXXABI_1.3>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <glfwGetRequiredInstanceExtensions@plt>:
    20c0:	ff 25 82 7f 00 00    	jmp    *0x7f82(%rip)        # a048 <glfwGetRequiredInstanceExtensions@Base>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    20d0:	ff 25 7a 7f 00 00    	jmp    *0x7f7a(%rip)        # a050 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <vkEnumerateInstanceExtensionProperties@plt>:
    20e0:	ff 25 72 7f 00 00    	jmp    *0x7f72(%rip)        # a058 <vkEnumerateInstanceExtensionProperties@Base>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <glfwWindowHint@plt>:
    20f0:	ff 25 6a 7f 00 00    	jmp    *0x7f6a(%rip)        # a060 <glfwWindowHint@Base>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <__cxa_atexit@plt>:
    2100:	ff 25 62 7f 00 00    	jmp    *0x7f62(%rip)        # a068 <__cxa_atexit@GLIBC_2.2.5>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <vkGetPhysicalDeviceProperties2@plt>:
    2110:	ff 25 5a 7f 00 00    	jmp    *0x7f5a(%rip)        # a070 <vkGetPhysicalDeviceProperties2@Base>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    2120:	ff 25 52 7f 00 00    	jmp    *0x7f52(%rip)        # a078 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <_Znwm@plt>:
    2130:	ff 25 4a 7f 00 00    	jmp    *0x7f4a(%rip)        # a080 <_Znwm@GLIBCXX_3.4>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <_ZdlPvm@plt>:
    2140:	ff 25 42 7f 00 00    	jmp    *0x7f42(%rip)        # a088 <_ZdlPvm@CXXABI_1.3.9>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <vkDestroyInstance@plt>:
    2150:	ff 25 3a 7f 00 00    	jmp    *0x7f3a(%rip)        # a090 <vkDestroyInstance@Base>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <glfwTerminate@plt>:
    2160:	ff 25 32 7f 00 00    	jmp    *0x7f32(%rip)        # a098 <glfwTerminate@Base>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <glfwInit@plt>:
    2170:	ff 25 2a 7f 00 00    	jmp    *0x7f2a(%rip)        # a0a0 <glfwInit@Base>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    2180:	ff 25 22 7f 00 00    	jmp    *0x7f22(%rip)        # a0a8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <vkCreateInstance@plt>:
    2190:	ff 25 1a 7f 00 00    	jmp    *0x7f1a(%rip)        # a0b0 <vkCreateInstance@Base>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <_ZNSolsEj@plt>:
    21a0:	ff 25 12 7f 00 00    	jmp    *0x7f12(%rip)        # a0b8 <_ZNSolsEj@GLIBCXX_3.4>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    21b0:	ff 25 0a 7f 00 00    	jmp    *0x7f0a(%rip)        # a0c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <vkEnumerateDeviceExtensionProperties@plt>:
    21c0:	ff 25 02 7f 00 00    	jmp    *0x7f02(%rip)        # a0c8 <vkEnumerateDeviceExtensionProperties@Base>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    21d0:	ff 25 fa 7e 00 00    	jmp    *0x7efa(%rip)        # a0d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <_ZNSt8ios_base4InitC1Ev@plt>:
    21e0:	ff 25 f2 7e 00 00    	jmp    *0x7ef2(%rip)        # a0d8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <glfwCreateWindow@plt>:
    21f0:	ff 25 ea 7e 00 00    	jmp    *0x7eea(%rip)        # a0e0 <glfwCreateWindow@Base>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002200 <__cxa_end_catch@plt>:
    2200:	ff 25 e2 7e 00 00    	jmp    *0x7ee2(%rip)        # a0e8 <__cxa_end_catch@CXXABI_1.3>
    2206:	68 1d 00 00 00       	push   $0x1d
    220b:	e9 10 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002210 <__cxa_throw@plt>:
    2210:	ff 25 da 7e 00 00    	jmp    *0x7eda(%rip)        # a0f0 <__cxa_throw@CXXABI_1.3>
    2216:	68 1e 00 00 00       	push   $0x1e
    221b:	e9 00 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002220 <_Unwind_Resume@plt>:
    2220:	ff 25 d2 7e 00 00    	jmp    *0x7ed2(%rip)        # a0f8 <_Unwind_Resume@GCC_3.0>
    2226:	68 1f 00 00 00       	push   $0x1f
    222b:	e9 f0 fd ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

0000000000002230 <__cxa_finalize@plt>:
    2230:	ff 25 62 7d 00 00    	jmp    *0x7d62(%rip)        # 9f98 <__cxa_finalize@GLIBC_2.2.5>
    2236:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002240 <_start>:
    2240:	31 ed                	xor    %ebp,%ebp
    2242:	49 89 d1             	mov    %rdx,%r9
    2245:	5e                   	pop    %rsi
    2246:	48 89 e2             	mov    %rsp,%rdx
    2249:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    224d:	50                   	push   %rax
    224e:	54                   	push   %rsp
    224f:	45 31 c0             	xor    %r8d,%r8d
    2252:	31 c9                	xor    %ecx,%ecx
    2254:	48 8d 3d 46 02 00 00 	lea    0x246(%rip),%rdi        # 24a1 <main>
    225b:	ff 15 3f 7d 00 00    	call   *0x7d3f(%rip)        # 9fa0 <__libc_start_main@GLIBC_2.34>
    2261:	f4                   	hlt
    2262:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2269:	00 00 00 
    226c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002270 <deregister_tm_clones>:
    2270:	48 8d 3d a9 7e 00 00 	lea    0x7ea9(%rip),%rdi        # a120 <__TMC_END__>
    2277:	48 8d 05 a2 7e 00 00 	lea    0x7ea2(%rip),%rax        # a120 <__TMC_END__>
    227e:	48 39 f8             	cmp    %rdi,%rax
    2281:	74 15                	je     2298 <deregister_tm_clones+0x28>
    2283:	48 8b 05 26 7d 00 00 	mov    0x7d26(%rip),%rax        # 9fb0 <_ITM_deregisterTMCloneTable@Base>
    228a:	48 85 c0             	test   %rax,%rax
    228d:	74 09                	je     2298 <deregister_tm_clones+0x28>
    228f:	ff e0                	jmp    *%rax
    2291:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2298:	c3                   	ret
    2299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000022a0 <register_tm_clones>:
    22a0:	48 8d 3d 79 7e 00 00 	lea    0x7e79(%rip),%rdi        # a120 <__TMC_END__>
    22a7:	48 8d 35 72 7e 00 00 	lea    0x7e72(%rip),%rsi        # a120 <__TMC_END__>
    22ae:	48 29 fe             	sub    %rdi,%rsi
    22b1:	48 89 f0             	mov    %rsi,%rax
    22b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    22b8:	48 c1 f8 03          	sar    $0x3,%rax
    22bc:	48 01 c6             	add    %rax,%rsi
    22bf:	48 d1 fe             	sar    %rsi
    22c2:	74 14                	je     22d8 <register_tm_clones+0x38>
    22c4:	48 8b 05 f5 7c 00 00 	mov    0x7cf5(%rip),%rax        # 9fc0 <_ITM_registerTMCloneTable@Base>
    22cb:	48 85 c0             	test   %rax,%rax
    22ce:	74 08                	je     22d8 <register_tm_clones+0x38>
    22d0:	ff e0                	jmp    *%rax
    22d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    22d8:	c3                   	ret
    22d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000022e0 <__do_global_dtors_aux>:
    22e0:	f3 0f 1e fa          	endbr64
    22e4:	80 3d 85 80 00 00 00 	cmpb   $0x0,0x8085(%rip)        # a370 <completed.0>
    22eb:	75 2b                	jne    2318 <__do_global_dtors_aux+0x38>
    22ed:	55                   	push   %rbp
    22ee:	48 83 3d a2 7c 00 00 	cmpq   $0x0,0x7ca2(%rip)        # 9f98 <__cxa_finalize@GLIBC_2.2.5>
    22f5:	00 
    22f6:	48 89 e5             	mov    %rsp,%rbp
    22f9:	74 0c                	je     2307 <__do_global_dtors_aux+0x27>
    22fb:	48 8b 3d 06 7e 00 00 	mov    0x7e06(%rip),%rdi        # a108 <__dso_handle>
    2302:	e8 29 ff ff ff       	call   2230 <__cxa_finalize@plt>
    2307:	e8 64 ff ff ff       	call   2270 <deregister_tm_clones>
    230c:	c6 05 5d 80 00 00 01 	movb   $0x1,0x805d(%rip)        # a370 <completed.0>
    2313:	5d                   	pop    %rbp
    2314:	c3                   	ret
    2315:	0f 1f 00             	nopl   (%rax)
    2318:	c3                   	ret
    2319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002320 <frame_dummy>:
    2320:	f3 0f 1e fa          	endbr64
    2324:	e9 77 ff ff ff       	jmp    22a0 <register_tm_clones>

0000000000002329 <_Z14protected_mainv>:
#include <vkh.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    2329:	55                   	push   %rbp
    232a:	48 89 e5             	mov    %rsp,%rbp
    232d:	53                   	push   %rbx
    232e:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
  glfwInit();
    2335:	e8 36 fe ff ff       	call   2170 <glfwInit@plt>

  auto appInfo = vkh::makeApplicationInfo();
    233a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    233e:	48 8d 15 9b 32 00 00 	lea    0x329b(%rip),%rdx        # 55e0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2345:	48 89 d6             	mov    %rdx,%rsi
    2348:	48 89 c7             	mov    %rax,%rdi
    234b:	e8 6b 21 00 00       	call   44bb <_ZN3vkh19makeApplicationInfoEPKc>
  auto createInfo = vkh::makeInstanceCreateInfo(&appInfo);
    2350:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    2357:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    235b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    2361:	b9 00 00 00 00       	mov    $0x0,%ecx
    2366:	ba 00 00 00 00       	mov    $0x0,%edx
    236b:	48 89 c7             	mov    %rax,%rdi
    236e:	e8 b4 21 00 00       	call   4527 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcPKv>
  auto instance = vkh::createInstance(&createInfo);
    2373:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    237a:	be 00 00 00 00       	mov    $0x0,%esi
    237f:	48 89 c7             	mov    %rax,%rdi
    2382:	e8 5a 05 00 00       	call   28e1 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    2387:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    238b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    2392:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2396:	48 89 d6             	mov    %rdx,%rsi
    2399:	48 89 c7             	mov    %rax,%rdi
    239c:	e8 8f 09 00 00       	call   2d30 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  for (const auto &device : physicalDeviceList) {
    23a1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    23a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    23ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23b0:	48 89 c7             	mov    %rax,%rdi
    23b3:	e8 58 02 00 00       	call   2610 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    23b8:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    23bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    23c3:	48 89 c7             	mov    %rax,%rdi
    23c6:	e8 6b 02 00 00       	call   2636 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    23cb:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    23d2:	eb 5f                	jmp    2433 <_Z14protected_mainv+0x10a>
    23d4:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    23db:	48 89 c7             	mov    %rax,%rdi
    23de:	e8 d7 02 00 00       	call   26ba <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    23e3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    auto properties = vkh::getPhysicalDevicePropertyList(device);
    23e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    23eb:	48 8b 10             	mov    (%rax),%rdx
    23ee:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    23f5:	48 89 d6             	mov    %rdx,%rsi
    23f8:	48 89 c7             	mov    %rax,%rdi
    23fb:	e8 9f 0a 00 00       	call   2e9f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
    std::cout << properties.vendorID << '\n';
    2400:	8b 85 f8 fb ff ff    	mov    -0x408(%rbp),%eax
    2406:	89 c6                	mov    %eax,%esi
    2408:	48 8d 05 31 7d 00 00 	lea    0x7d31(%rip),%rax        # a140 <_ZSt4cout@GLIBCXX_3.4>
    240f:	48 89 c7             	mov    %rax,%rdi
    2412:	e8 89 fd ff ff       	call   21a0 <_ZNSolsEj@plt>
    2417:	be 0a 00 00 00       	mov    $0xa,%esi
    241c:	48 89 c7             	mov    %rax,%rdi
    241f:	e8 5c fd ff ff       	call   2180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &device : physicalDeviceList) {
    2424:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    242b:	48 89 c7             	mov    %rax,%rdi
    242e:	e8 67 02 00 00       	call   269a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    2433:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    243a:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    2441:	48 89 d6             	mov    %rdx,%rsi
    2444:	48 89 c7             	mov    %rax,%rdi
    2447:	e8 13 02 00 00       	call   265f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    244c:	84 c0                	test   %al,%al
    244e:	75 84                	jne    23d4 <_Z14protected_mainv+0xab>
  }

  vkDestroyInstance(instance, nullptr);
    2450:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2454:	be 00 00 00 00       	mov    $0x0,%esi
    2459:	48 89 c7             	mov    %rax,%rdi
    245c:	e8 ef fc ff ff       	call   2150 <vkDestroyInstance@plt>

  glfwTerminate();
    2461:	e8 fa fc ff ff       	call   2160 <glfwTerminate@plt>
  return EXIT_SUCCESS;
    2466:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    246b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    2472:	48 89 c7             	mov    %rax,%rdi
    2475:	e8 52 01 00 00       	call   25cc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
  return EXIT_SUCCESS;
    247a:	89 d8                	mov    %ebx,%eax
    247c:	eb 1d                	jmp    249b <_Z14protected_mainv+0x172>
}
    247e:	48 89 c3             	mov    %rax,%rbx
    2481:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    2488:	48 89 c7             	mov    %rax,%rdi
    248b:	e8 3c 01 00 00       	call   25cc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    2490:	48 89 d8             	mov    %rbx,%rax
    2493:	48 89 c7             	mov    %rax,%rdi
    2496:	e8 85 fd ff ff       	call   2220 <_Unwind_Resume@plt>
    249b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    249f:	c9                   	leave
    24a0:	c3                   	ret

00000000000024a1 <main>:

int main() {
    24a1:	55                   	push   %rbp
    24a2:	48 89 e5             	mov    %rsp,%rbp
    24a5:	53                   	push   %rbx
    24a6:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    24aa:	e8 7a fe ff ff       	call   2329 <_Z14protected_mainv>
    24af:	e9 aa 00 00 00       	jmp    255e <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    24b4:	b8 01 00 00 00       	mov    $0x1,%eax
    24b9:	e9 a0 00 00 00       	jmp    255e <main+0xbd>
  } catch (const std::exception &e) {
    24be:	48 83 fa 01          	cmp    $0x1,%rdx
    24c2:	75 49                	jne    250d <main+0x6c>
    24c4:	48 89 c7             	mov    %rax,%rdi
    24c7:	e8 94 fb ff ff       	call   2060 <__cxa_begin_catch@plt>
    24cc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    24d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24d4:	48 8b 00             	mov    (%rax),%rax
    24d7:	48 83 c0 10          	add    $0x10,%rax
    24db:	48 8b 10             	mov    (%rax),%rdx
    24de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    24e2:	48 89 c7             	mov    %rax,%rdi
    24e5:	ff d2                	call   *%rdx
    24e7:	48 89 c6             	mov    %rax,%rsi
    24ea:	48 8d 05 6f 7d 00 00 	lea    0x7d6f(%rip),%rax        # a260 <_ZSt4cerr@GLIBCXX_3.4>
    24f1:	48 89 c7             	mov    %rax,%rdi
    24f4:	e8 27 fc ff ff       	call   2120 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    24f9:	be 0a 00 00 00       	mov    $0xa,%esi
    24fe:	48 89 c7             	mov    %rax,%rdi
    2501:	e8 7a fc ff ff       	call   2180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    2506:	e8 f5 fc ff ff       	call   2200 <__cxa_end_catch@plt>
    250b:	eb a7                	jmp    24b4 <main+0x13>
    250d:	48 89 c7             	mov    %rax,%rdi
    2510:	e8 4b fb ff ff       	call   2060 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    2515:	48 8d 05 d7 30 00 00 	lea    0x30d7(%rip),%rax        # 55f3 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x1b>
    251c:	48 89 c6             	mov    %rax,%rsi
    251f:	48 8d 05 3a 7d 00 00 	lea    0x7d3a(%rip),%rax        # a260 <_ZSt4cerr@GLIBCXX_3.4>
    2526:	48 89 c7             	mov    %rax,%rdi
    2529:	e8 f2 fb ff ff       	call   2120 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    252e:	e8 cd fc ff ff       	call   2200 <__cxa_end_catch@plt>
    2533:	e9 7c ff ff ff       	jmp    24b4 <main+0x13>
  } catch (...) {
    2538:	48 89 c3             	mov    %rax,%rbx
    253b:	e8 c0 fc ff ff       	call   2200 <__cxa_end_catch@plt>
    2540:	48 89 d8             	mov    %rbx,%rax
    2543:	48 89 c7             	mov    %rax,%rdi
    2546:	e8 d5 fc ff ff       	call   2220 <_Unwind_Resume@plt>
  }
    254b:	48 89 c3             	mov    %rax,%rbx
    254e:	e8 ad fc ff ff       	call   2200 <__cxa_end_catch@plt>
    2553:	48 89 d8             	mov    %rbx,%rax
    2556:	48 89 c7             	mov    %rax,%rdi
    2559:	e8 c2 fc ff ff       	call   2220 <_Unwind_Resume@plt>
    255e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2562:	c9                   	leave
    2563:	c3                   	ret

0000000000002564 <_Z41__static_initialization_and_destruction_0ii>:
    2564:	55                   	push   %rbp
    2565:	48 89 e5             	mov    %rsp,%rbp
    2568:	48 83 ec 10          	sub    $0x10,%rsp
    256c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    256f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2572:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    2576:	75 3b                	jne    25b3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    2578:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    257f:	75 32                	jne    25b3 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    2581:	48 8d 05 e9 7d 00 00 	lea    0x7de9(%rip),%rax        # a371 <_ZStL8__ioinit>
    2588:	48 89 c7             	mov    %rax,%rdi
    258b:	e8 50 fc ff ff       	call   21e0 <_ZNSt8ios_base4InitC1Ev@plt>
    2590:	48 8d 05 71 7b 00 00 	lea    0x7b71(%rip),%rax        # a108 <__dso_handle>
    2597:	48 89 c2             	mov    %rax,%rdx
    259a:	48 8d 05 d0 7d 00 00 	lea    0x7dd0(%rip),%rax        # a371 <_ZStL8__ioinit>
    25a1:	48 89 c6             	mov    %rax,%rsi
    25a4:	48 8b 05 1d 7a 00 00 	mov    0x7a1d(%rip),%rax        # 9fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    25ab:	48 89 c7             	mov    %rax,%rdi
    25ae:	e8 4d fb ff ff       	call   2100 <__cxa_atexit@plt>
    25b3:	90                   	nop
    25b4:	c9                   	leave
    25b5:	c3                   	ret

00000000000025b6 <_GLOBAL__sub_I__Z14protected_mainv>:
    25b6:	55                   	push   %rbp
    25b7:	48 89 e5             	mov    %rsp,%rbp
    25ba:	be ff ff 00 00       	mov    $0xffff,%esi
    25bf:	bf 01 00 00 00       	mov    $0x1,%edi
    25c4:	e8 9b ff ff ff       	call   2564 <_Z41__static_initialization_and_destruction_0ii>
    25c9:	5d                   	pop    %rbp
    25ca:	c3                   	ret
    25cb:	90                   	nop

00000000000025cc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    25cc:	55                   	push   %rbp
    25cd:	48 89 e5             	mov    %rsp,%rbp
    25d0:	48 83 ec 10          	sub    $0x10,%rsp
    25d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    25d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25dc:	48 89 c7             	mov    %rax,%rdi
    25df:	e8 52 01 00 00       	call   2736 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    25e4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    25e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25eb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    25ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    25f3:	48 8b 00             	mov    (%rax),%rax
    25f6:	48 89 ce             	mov    %rcx,%rsi
    25f9:	48 89 c7             	mov    %rax,%rdi
    25fc:	e8 43 01 00 00       	call   2744 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    2601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2605:	48 89 c7             	mov    %rax,%rdi
    2608:	e8 db 00 00 00       	call   26e8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    260d:	90                   	nop
    260e:	c9                   	leave
    260f:	c3                   	ret

0000000000002610 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      iterator
      begin() _GLIBCXX_NOEXCEPT
    2610:	55                   	push   %rbp
    2611:	48 89 e5             	mov    %rsp,%rbp
    2614:	48 83 ec 20          	sub    $0x20,%rsp
    2618:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    261c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2620:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    2624:	48 89 d6             	mov    %rdx,%rsi
    2627:	48 89 c7             	mov    %rax,%rdi
    262a:	e8 3f 01 00 00       	call   276e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    262f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2633:	c9                   	leave
    2634:	c3                   	ret
    2635:	90                   	nop

0000000000002636 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
       *  element in the %vector.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      iterator
      end() _GLIBCXX_NOEXCEPT
    2636:	55                   	push   %rbp
    2637:	48 89 e5             	mov    %rsp,%rbp
    263a:	48 83 ec 20          	sub    $0x20,%rsp
    263e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    2642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2646:	48 8d 50 08          	lea    0x8(%rax),%rdx
    264a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    264e:	48 89 d6             	mov    %rdx,%rsi
    2651:	48 89 c7             	mov    %rax,%rdi
    2654:	e8 15 01 00 00       	call   276e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    2659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    265d:	c9                   	leave
    265e:	c3                   	ret

000000000000265f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    265f:	55                   	push   %rbp
    2660:	48 89 e5             	mov    %rsp,%rbp
    2663:	53                   	push   %rbx
    2664:	48 83 ec 18          	sub    $0x18,%rsp
    2668:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    266c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    2670:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2674:	48 89 c7             	mov    %rax,%rdi
    2677:	e8 10 01 00 00       	call   278c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    267c:	48 8b 18             	mov    (%rax),%rbx
    267f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2683:	48 89 c7             	mov    %rax,%rdi
    2686:	e8 01 01 00 00       	call   278c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    268b:	48 8b 00             	mov    (%rax),%rax
    268e:	48 39 c3             	cmp    %rax,%rbx
    2691:	0f 95 c0             	setne  %al
    2694:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2698:	c9                   	leave
    2699:	c3                   	ret

000000000000269a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    269a:	55                   	push   %rbp
    269b:	48 89 e5             	mov    %rsp,%rbp
    269e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    26a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26a6:	48 8b 00             	mov    (%rax),%rax
    26a9:	48 8d 50 08          	lea    0x8(%rax),%rdx
    26ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26b1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    26b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    26b8:	5d                   	pop    %rbp
    26b9:	c3                   	ret

00000000000026ba <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    26ba:	55                   	push   %rbp
    26bb:	48 89 e5             	mov    %rsp,%rbp
    26be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    26c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26c6:	48 8b 00             	mov    (%rax),%rax
    26c9:	5d                   	pop    %rbp
    26ca:	c3                   	ret
    26cb:	90                   	nop

00000000000026cc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    26cc:	55                   	push   %rbp
    26cd:	48 89 e5             	mov    %rsp,%rbp
    26d0:	48 83 ec 10          	sub    $0x10,%rsp
    26d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    26d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26dc:	48 89 c7             	mov    %rax,%rdi
    26df:	e8 b6 00 00 00       	call   279a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    26e4:	90                   	nop
    26e5:	c9                   	leave
    26e6:	c3                   	ret
    26e7:	90                   	nop

00000000000026e8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    26e8:	55                   	push   %rbp
    26e9:	48 89 e5             	mov    %rsp,%rbp
    26ec:	48 83 ec 10          	sub    $0x10,%rsp
    26f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    26f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    26f8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    26fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2700:	48 8b 00             	mov    (%rax),%rax
    2703:	48 29 c2             	sub    %rax,%rdx
    2706:	48 89 d0             	mov    %rdx,%rax
    2709:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    270d:	48 89 c2             	mov    %rax,%rdx
    2710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2714:	48 8b 08             	mov    (%rax),%rcx
    2717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    271b:	48 89 ce             	mov    %rcx,%rsi
    271e:	48 89 c7             	mov    %rax,%rdi
    2721:	e8 90 00 00 00       	call   27b6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    2726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    272a:	48 89 c7             	mov    %rax,%rdi
    272d:	e8 9a ff ff ff       	call   26cc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    2732:	90                   	nop
    2733:	c9                   	leave
    2734:	c3                   	ret
    2735:	90                   	nop

0000000000002736 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    2736:	55                   	push   %rbp
    2737:	48 89 e5             	mov    %rsp,%rbp
    273a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    273e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2742:	5d                   	pop    %rbp
    2743:	c3                   	ret

0000000000002744 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    2744:	55                   	push   %rbp
    2745:	48 89 e5             	mov    %rsp,%rbp
    2748:	48 83 ec 20          	sub    $0x20,%rsp
    274c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2750:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2754:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    2758:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    275c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2760:	48 89 d6             	mov    %rdx,%rsi
    2763:	48 89 c7             	mov    %rax,%rdi
    2766:	e8 80 00 00 00       	call   27eb <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    276b:	90                   	nop
    276c:	c9                   	leave
    276d:	c3                   	ret

000000000000276e <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    276e:	55                   	push   %rbp
    276f:	48 89 e5             	mov    %rsp,%rbp
    2772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2776:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    277a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    277e:	48 8b 10             	mov    (%rax),%rdx
    2781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2785:	48 89 10             	mov    %rdx,(%rax)
    2788:	90                   	nop
    2789:	5d                   	pop    %rbp
    278a:	c3                   	ret
    278b:	90                   	nop

000000000000278c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    278c:	55                   	push   %rbp
    278d:	48 89 e5             	mov    %rsp,%rbp
    2790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    2794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2798:	5d                   	pop    %rbp
    2799:	c3                   	ret

000000000000279a <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    279a:	55                   	push   %rbp
    279b:	48 89 e5             	mov    %rsp,%rbp
    279e:	48 83 ec 10          	sub    $0x10,%rsp
    27a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    27a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27aa:	48 89 c7             	mov    %rax,%rdi
    27ad:	e8 60 00 00 00       	call   2812 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    27b2:	90                   	nop
    27b3:	c9                   	leave
    27b4:	c3                   	ret
    27b5:	90                   	nop

00000000000027b6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    27b6:	55                   	push   %rbp
    27b7:	48 89 e5             	mov    %rsp,%rbp
    27ba:	48 83 ec 20          	sub    $0x20,%rsp
    27be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    27c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    27c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    27ca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    27cf:	74 17                	je     27e8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    27d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    27d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    27dd:	48 89 ce             	mov    %rcx,%rsi
    27e0:	48 89 c7             	mov    %rax,%rdi
    27e3:	e8 35 00 00 00       	call   281d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    27e8:	90                   	nop
    27e9:	c9                   	leave
    27ea:	c3                   	ret

00000000000027eb <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    27eb:	55                   	push   %rbp
    27ec:	48 89 e5             	mov    %rsp,%rbp
    27ef:	48 83 ec 10          	sub    $0x10,%rsp
    27f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    27f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    27fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    27ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2803:	48 89 d6             	mov    %rdx,%rsi
    2806:	48 89 c7             	mov    %rax,%rdi
    2809:	e8 3d 00 00 00       	call   284b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    280e:	90                   	nop
    280f:	c9                   	leave
    2810:	c3                   	ret
    2811:	90                   	nop

0000000000002812 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    2812:	55                   	push   %rbp
    2813:	48 89 e5             	mov    %rsp,%rbp
    2816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    281a:	90                   	nop
    281b:	5d                   	pop    %rbp
    281c:	c3                   	ret

000000000000281d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    281d:	55                   	push   %rbp
    281e:	48 89 e5             	mov    %rsp,%rbp
    2821:	48 83 ec 20          	sub    $0x20,%rsp
    2825:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2829:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    282d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    2831:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2835:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    2839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    283d:	48 89 ce             	mov    %rcx,%rsi
    2840:	48 89 c7             	mov    %rax,%rdi
    2843:	e8 12 00 00 00       	call   285a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    2848:	90                   	nop
    2849:	c9                   	leave
    284a:	c3                   	ret

000000000000284b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    284b:	55                   	push   %rbp
    284c:	48 89 e5             	mov    %rsp,%rbp
    284f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2853:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2857:	90                   	nop
    2858:	5d                   	pop    %rbp
    2859:	c3                   	ret

000000000000285a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    285a:	55                   	push   %rbp
    285b:	48 89 e5             	mov    %rsp,%rbp
    285e:	48 83 ec 20          	sub    $0x20,%rsp
    2862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2866:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    286a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    286e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2872:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2879:	00 
    287a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    287e:	48 89 d6             	mov    %rdx,%rsi
    2881:	48 89 c7             	mov    %rax,%rdi
    2884:	e8 b7 f8 ff ff       	call   2140 <_ZdlPvm@plt>
      }
    2889:	c9                   	leave
    288a:	c3                   	ret

000000000000288b <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    288b:	55                   	push   %rbp
    288c:	48 89 e5             	mov    %rsp,%rbp
    288f:	48 83 ec 20          	sub    $0x20,%rsp
    2893:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2896:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2899:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    289d:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    28a1:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    28a5:	be 00 00 00 00       	mov    $0x0,%esi
    28aa:	bf 01 20 02 00       	mov    $0x22001,%edi
    28af:	e8 3c f8 ff ff       	call   20f0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    28b4:	be 00 00 00 00       	mov    $0x0,%esi
    28b9:	bf 03 00 02 00       	mov    $0x20003,%edi
    28be:	e8 2d f8 ff ff       	call   20f0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    28c3:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    28c7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    28cb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    28cf:	8b 75 f8             	mov    -0x8(%rbp),%esi
    28d2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    28d5:	49 89 f8             	mov    %rdi,%r8
    28d8:	89 c7                	mov    %eax,%edi
    28da:	e8 11 f9 ff ff       	call   21f0 <glfwCreateWindow@plt>
}
    28df:	c9                   	leave
    28e0:	c3                   	ret

00000000000028e1 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    28e1:	55                   	push   %rbp
    28e2:	48 89 e5             	mov    %rsp,%rbp
    28e5:	41 54                	push   %r12
    28e7:	53                   	push   %rbx
    28e8:	48 83 ec 20          	sub    $0x20,%rsp
    28ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    28f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    28f4:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    28f8:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    28fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2900:	48 89 ce             	mov    %rcx,%rsi
    2903:	48 89 c7             	mov    %rax,%rdi
    2906:	e8 85 f8 ff ff       	call   2190 <vkCreateInstance@plt>
    290b:	85 c0                	test   %eax,%eax
    290d:	0f 95 c0             	setne  %al
    2910:	84 c0                	test   %al,%al
    2912:	74 3b                	je     294f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    2914:	bf 10 00 00 00       	mov    $0x10,%edi
    2919:	e8 52 f7 ff ff       	call   2070 <__cxa_allocate_exception@plt>
    291e:	48 89 c3             	mov    %rax,%rbx
    2921:	48 8d 05 b8 32 00 00 	lea    0x32b8(%rip),%rax        # 5be0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2928:	48 89 c6             	mov    %rax,%rsi
    292b:	48 89 df             	mov    %rbx,%rdi
    292e:	e8 0d f7 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2933:	48 8b 05 6e 76 00 00 	mov    0x766e(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    293a:	48 89 c2             	mov    %rax,%rdx
    293d:	48 8d 05 1c 74 00 00 	lea    0x741c(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2944:	48 89 c6             	mov    %rax,%rsi
    2947:	48 89 df             	mov    %rbx,%rdi
    294a:	e8 c1 f8 ff ff       	call   2210 <__cxa_throw@plt>
  }
  return instance;
    294f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2953:	eb 16                	jmp    296b <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    2955:	49 89 c4             	mov    %rax,%r12
    2958:	48 89 df             	mov    %rbx,%rdi
    295b:	e8 50 f7 ff ff       	call   20b0 <__cxa_free_exception@plt>
    2960:	4c 89 e0             	mov    %r12,%rax
    2963:	48 89 c7             	mov    %rax,%rdi
    2966:	e8 b5 f8 ff ff       	call   2220 <_Unwind_Resume@plt>
}
    296b:	48 83 c4 20          	add    $0x20,%rsp
    296f:	5b                   	pop    %rbx
    2970:	41 5c                	pop    %r12
    2972:	5d                   	pop    %rbp
    2973:	c3                   	ret

0000000000002974 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    2974:	55                   	push   %rbp
    2975:	48 89 e5             	mov    %rsp,%rbp
    2978:	41 54                	push   %r12
    297a:	53                   	push   %rbx
    297b:	48 83 ec 20          	sub    $0x20,%rsp
    297f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2983:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2987:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    298b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    298f:	ba 00 00 00 00       	mov    $0x0,%edx
    2994:	48 89 ce             	mov    %rcx,%rsi
    2997:	48 89 c7             	mov    %rax,%rdi
    299a:	e8 41 f7 ff ff       	call   20e0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    299f:	85 c0                	test   %eax,%eax
    29a1:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    29a4:	84 c0                	test   %al,%al
    29a6:	74 3b                	je     29e3 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    29a8:	bf 10 00 00 00       	mov    $0x10,%edi
    29ad:	e8 be f6 ff ff       	call   2070 <__cxa_allocate_exception@plt>
    29b2:	48 89 c3             	mov    %rax,%rbx
    29b5:	48 8d 05 1c 38 00 00 	lea    0x381c(%rip),%rax        # 61d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    29bc:	48 89 c6             	mov    %rax,%rsi
    29bf:	48 89 df             	mov    %rbx,%rdi
    29c2:	e8 79 f6 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    29c7:	48 8b 05 da 75 00 00 	mov    0x75da(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    29ce:	48 89 c2             	mov    %rax,%rdx
    29d1:	48 8d 05 88 73 00 00 	lea    0x7388(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    29d8:	48 89 c6             	mov    %rax,%rsi
    29db:	48 89 df             	mov    %rbx,%rdi
    29de:	e8 2d f8 ff ff       	call   2210 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    29e3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    29e6:	89 c3                	mov    %eax,%ebx
    29e8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    29ec:	48 89 c7             	mov    %rax,%rdi
    29ef:	e8 72 05 00 00       	call   2f66 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    29f4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    29f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    29fc:	48 89 de             	mov    %rbx,%rsi
    29ff:	48 89 c7             	mov    %rax,%rdi
    2a02:	e8 97 05 00 00       	call   2f9e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    2a07:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2a0b:	48 89 c7             	mov    %rax,%rdi
    2a0e:	e8 6f 05 00 00       	call   2f82 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2a13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a17:	48 89 c7             	mov    %rax,%rdi
    2a1a:	e8 39 06 00 00       	call   3058 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2a1f:	48 89 c2             	mov    %rax,%rdx
    2a22:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2a26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2a2a:	48 89 ce             	mov    %rcx,%rsi
    2a2d:	48 89 c7             	mov    %rax,%rdi
    2a30:	e8 ab f6 ff ff       	call   20e0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    2a35:	85 c0                	test   %eax,%eax
    2a37:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    2a3a:	84 c0                	test   %al,%al
    2a3c:	0f 84 95 00 00 00    	je     2ad7 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    2a42:	bf 10 00 00 00       	mov    $0x10,%edi
    2a47:	e8 24 f6 ff ff       	call   2070 <__cxa_allocate_exception@plt>
    2a4c:	48 89 c3             	mov    %rax,%rbx
    2a4f:	48 8d 05 82 37 00 00 	lea    0x3782(%rip),%rax        # 61d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    2a56:	48 89 c6             	mov    %rax,%rsi
    2a59:	48 89 df             	mov    %rbx,%rdi
    2a5c:	e8 df f5 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2a61:	48 8b 05 40 75 00 00 	mov    0x7540(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2a68:	48 89 c2             	mov    %rax,%rdx
    2a6b:	48 8d 05 ee 72 00 00 	lea    0x72ee(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2a72:	48 89 c6             	mov    %rax,%rsi
    2a75:	48 89 df             	mov    %rbx,%rdi
    2a78:	e8 93 f7 ff ff       	call   2210 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    2a7d:	49 89 c4             	mov    %rax,%r12
    2a80:	48 89 df             	mov    %rbx,%rdi
    2a83:	e8 28 f6 ff ff       	call   20b0 <__cxa_free_exception@plt>
    2a88:	4c 89 e0             	mov    %r12,%rax
    2a8b:	48 89 c7             	mov    %rax,%rdi
    2a8e:	e8 8d f7 ff ff       	call   2220 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    2a93:	48 89 c3             	mov    %rax,%rbx
    2a96:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2a9a:	48 89 c7             	mov    %rax,%rdi
    2a9d:	e8 e0 04 00 00       	call   2f82 <_ZNSaI21VkExtensionPropertiesED1Ev>
    2aa2:	48 89 d8             	mov    %rbx,%rax
    2aa5:	48 89 c7             	mov    %rax,%rdi
    2aa8:	e8 73 f7 ff ff       	call   2220 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    2aad:	49 89 c4             	mov    %rax,%r12
    2ab0:	48 89 df             	mov    %rbx,%rdi
    2ab3:	e8 f8 f5 ff ff       	call   20b0 <__cxa_free_exception@plt>
    2ab8:	4c 89 e3             	mov    %r12,%rbx
    2abb:	eb 03                	jmp    2ac0 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    2abd:	48 89 c3             	mov    %rax,%rbx
    2ac0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ac4:	48 89 c7             	mov    %rax,%rdi
    2ac7:	e8 48 05 00 00       	call   3014 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2acc:	48 89 d8             	mov    %rbx,%rax
    2acf:	48 89 c7             	mov    %rax,%rdi
    2ad2:	e8 49 f7 ff ff       	call   2220 <_Unwind_Resume@plt>
  return instanceExtensions;
    2ad7:	90                   	nop
}
    2ad8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2adc:	48 83 c4 20          	add    $0x20,%rsp
    2ae0:	5b                   	pop    %rbx
    2ae1:	41 5c                	pop    %r12
    2ae3:	5d                   	pop    %rbp
    2ae4:	c3                   	ret

0000000000002ae5 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    2ae5:	55                   	push   %rbp
    2ae6:	48 89 e5             	mov    %rsp,%rbp
    2ae9:	41 54                	push   %r12
    2aeb:	53                   	push   %rbx
    2aec:	48 83 ec 30          	sub    $0x30,%rsp
    2af0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2af4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2af8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    2afc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2b00:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2b04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2b08:	b9 00 00 00 00       	mov    $0x0,%ecx
    2b0d:	48 89 c7             	mov    %rax,%rdi
    2b10:	e8 ab f6 ff ff       	call   21c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    2b15:	85 c0                	test   %eax,%eax
    2b17:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    2b1a:	84 c0                	test   %al,%al
    2b1c:	74 3b                	je     2b59 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    2b1e:	bf 10 00 00 00       	mov    $0x10,%edi
    2b23:	e8 48 f5 ff ff       	call   2070 <__cxa_allocate_exception@plt>
    2b28:	48 89 c3             	mov    %rax,%rbx
    2b2b:	48 8d 05 ce 36 00 00 	lea    0x36ce(%rip),%rax        # 6200 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    2b32:	48 89 c6             	mov    %rax,%rsi
    2b35:	48 89 df             	mov    %rbx,%rdi
    2b38:	e8 03 f5 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2b3d:	48 8b 05 64 74 00 00 	mov    0x7464(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2b44:	48 89 c2             	mov    %rax,%rdx
    2b47:	48 8d 05 12 72 00 00 	lea    0x7212(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2b4e:	48 89 c6             	mov    %rax,%rsi
    2b51:	48 89 df             	mov    %rbx,%rdi
    2b54:	e8 b7 f6 ff ff       	call   2210 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2b59:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2b5c:	89 c3                	mov    %eax,%ebx
    2b5e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b62:	48 89 c7             	mov    %rax,%rdi
    2b65:	e8 fc 03 00 00       	call   2f66 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    2b6a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2b6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b72:	48 89 de             	mov    %rbx,%rsi
    2b75:	48 89 c7             	mov    %rax,%rdi
    2b78:	e8 21 04 00 00       	call   2f9e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    2b7d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b81:	48 89 c7             	mov    %rax,%rdi
    2b84:	e8 f9 03 00 00       	call   2f82 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    2b89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b8d:	48 89 c7             	mov    %rax,%rdi
    2b90:	e8 c3 04 00 00       	call   3058 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    2b95:	48 89 c1             	mov    %rax,%rcx
    2b98:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    2b9c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    2ba0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2ba4:	48 89 c7             	mov    %rax,%rdi
    2ba7:	e8 14 f6 ff ff       	call   21c0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    2bac:	85 c0                	test   %eax,%eax
    2bae:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    2bb1:	84 c0                	test   %al,%al
    2bb3:	0f 84 95 00 00 00    	je     2c4e <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    2bb9:	bf 10 00 00 00       	mov    $0x10,%edi
    2bbe:	e8 ad f4 ff ff       	call   2070 <__cxa_allocate_exception@plt>
    2bc3:	48 89 c3             	mov    %rax,%rbx
    2bc6:	48 8d 05 33 36 00 00 	lea    0x3633(%rip),%rax        # 6200 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    2bcd:	48 89 c6             	mov    %rax,%rsi
    2bd0:	48 89 df             	mov    %rbx,%rdi
    2bd3:	e8 68 f4 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2bd8:	48 8b 05 c9 73 00 00 	mov    0x73c9(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2bdf:	48 89 c2             	mov    %rax,%rdx
    2be2:	48 8d 05 77 71 00 00 	lea    0x7177(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2be9:	48 89 c6             	mov    %rax,%rsi
    2bec:	48 89 df             	mov    %rbx,%rdi
    2bef:	e8 1c f6 ff ff       	call   2210 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2bf4:	49 89 c4             	mov    %rax,%r12
    2bf7:	48 89 df             	mov    %rbx,%rdi
    2bfa:	e8 b1 f4 ff ff       	call   20b0 <__cxa_free_exception@plt>
    2bff:	4c 89 e0             	mov    %r12,%rax
    2c02:	48 89 c7             	mov    %rax,%rdi
    2c05:	e8 16 f6 ff ff       	call   2220 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    2c0a:	48 89 c3             	mov    %rax,%rbx
    2c0d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2c11:	48 89 c7             	mov    %rax,%rdi
    2c14:	e8 69 03 00 00       	call   2f82 <_ZNSaI21VkExtensionPropertiesED1Ev>
    2c19:	48 89 d8             	mov    %rbx,%rax
    2c1c:	48 89 c7             	mov    %rax,%rdi
    2c1f:	e8 fc f5 ff ff       	call   2220 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    2c24:	49 89 c4             	mov    %rax,%r12
    2c27:	48 89 df             	mov    %rbx,%rdi
    2c2a:	e8 81 f4 ff ff       	call   20b0 <__cxa_free_exception@plt>
    2c2f:	4c 89 e3             	mov    %r12,%rbx
    2c32:	eb 03                	jmp    2c37 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    2c34:	48 89 c3             	mov    %rax,%rbx
    2c37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c3b:	48 89 c7             	mov    %rax,%rdi
    2c3e:	e8 d1 03 00 00       	call   3014 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    2c43:	48 89 d8             	mov    %rbx,%rax
    2c46:	48 89 c7             	mov    %rax,%rdi
    2c49:	e8 d2 f5 ff ff       	call   2220 <_Unwind_Resume@plt>
  return deviceExtensions;
    2c4e:	90                   	nop
}
    2c4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c53:	48 83 c4 30          	add    $0x30,%rsp
    2c57:	5b                   	pop    %rbx
    2c58:	41 5c                	pop    %r12
    2c5a:	5d                   	pop    %rbp
    2c5b:	c3                   	ret

0000000000002c5c <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev>:

std::vector<std::string> getRequiredInstanceExtensionList() {
    2c5c:	55                   	push   %rbp
    2c5d:	48 89 e5             	mov    %rsp,%rbp
    2c60:	53                   	push   %rbx
    2c61:	48 83 ec 38          	sub    $0x38,%rsp
    2c65:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    2c69:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    2c6d:	48 89 c7             	mov    %rax,%rdi
    2c70:	e8 4b f4 ff ff       	call   20c0 <glfwGetRequiredInstanceExtensions@plt>
    2c75:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<std::string> requiredInstanceExtensions{requiredExtensionCount};
    2c79:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2c7c:	89 c3                	mov    %eax,%ebx
    2c7e:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    2c82:	48 89 c7             	mov    %rax,%rdi
    2c85:	e8 4a 04 00 00       	call   30d4 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>
    2c8a:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    2c8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2c92:	48 89 de             	mov    %rbx,%rsi
    2c95:	48 89 c7             	mov    %rax,%rdi
    2c98:	e8 6f 04 00 00       	call   310c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>
    2c9d:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    2ca1:	48 89 c7             	mov    %rax,%rdi
    2ca4:	e8 47 04 00 00       	call   30f0 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2ca9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    2cb0:	eb 36                	jmp    2ce8 <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev+0x8c>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    2cb2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2cb5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2cbc:	00 
    2cbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2cc1:	48 01 d0             	add    %rdx,%rax
    2cc4:	48 8b 18             	mov    (%rax),%rbx
    2cc7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    2cca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2cce:	48 89 d6             	mov    %rdx,%rsi
    2cd1:	48 89 c7             	mov    %rax,%rdi
    2cd4:	e8 ed 04 00 00       	call   31c6 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>
    2cd9:	48 89 de             	mov    %rbx,%rsi
    2cdc:	48 89 c7             	mov    %rax,%rdi
    2cdf:	e8 cc f4 ff ff       	call   21b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    2ce4:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    2ce8:	8b 45 d8             	mov    -0x28(%rbp),%eax
    2ceb:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    2cee:	72 c2                	jb     2cb2 <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev+0x56>
  }
  return requiredInstanceExtensions;
    2cf0:	eb 34                	jmp    2d26 <_ZN3vkh32getRequiredInstanceExtensionListB5cxx11Ev+0xca>
  std::vector<std::string> requiredInstanceExtensions{requiredExtensionCount};
    2cf2:	48 89 c3             	mov    %rax,%rbx
    2cf5:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    2cf9:	48 89 c7             	mov    %rax,%rdi
    2cfc:	e8 ef 03 00 00       	call   30f0 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    2d01:	48 89 d8             	mov    %rbx,%rax
    2d04:	48 89 c7             	mov    %rax,%rdi
    2d07:	e8 14 f5 ff ff       	call   2220 <_Unwind_Resume@plt>
}
    2d0c:	48 89 c3             	mov    %rax,%rbx
    2d0f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d13:	48 89 c7             	mov    %rax,%rdi
    2d16:	e8 67 04 00 00       	call   3182 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    2d1b:	48 89 d8             	mov    %rbx,%rax
    2d1e:	48 89 c7             	mov    %rax,%rdi
    2d21:	e8 fa f4 ff ff       	call   2220 <_Unwind_Resume@plt>
    2d26:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2d2e:	c9                   	leave
    2d2f:	c3                   	ret

0000000000002d30 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    2d30:	55                   	push   %rbp
    2d31:	48 89 e5             	mov    %rsp,%rbp
    2d34:	41 54                	push   %r12
    2d36:	53                   	push   %rbx
    2d37:	48 83 ec 20          	sub    $0x20,%rsp
    2d3b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2d3f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    2d43:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2d47:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2d4b:	ba 00 00 00 00       	mov    $0x0,%edx
    2d50:	48 89 ce             	mov    %rcx,%rsi
    2d53:	48 89 c7             	mov    %rax,%rdi
    2d56:	e8 35 f3 ff ff       	call   2090 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    2d5b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2d5e:	85 c0                	test   %eax,%eax
    2d60:	75 3b                	jne    2d9d <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    2d62:	bf 10 00 00 00       	mov    $0x10,%edi
    2d67:	e8 04 f3 ff ff       	call   2070 <__cxa_allocate_exception@plt>
    2d6c:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    2d6f:	48 8d 05 b2 34 00 00 	lea    0x34b2(%rip),%rax        # 6228 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    2d76:	48 89 c6             	mov    %rax,%rsi
    2d79:	48 89 df             	mov    %rbx,%rdi
    2d7c:	e8 bf f2 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    2d81:	48 8b 05 20 72 00 00 	mov    0x7220(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2d88:	48 89 c2             	mov    %rax,%rdx
    2d8b:	48 8d 05 ce 6f 00 00 	lea    0x6fce(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2d92:	48 89 c6             	mov    %rax,%rsi
    2d95:	48 89 df             	mov    %rbx,%rdi
    2d98:	e8 73 f4 ff ff       	call   2210 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2d9d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    2da0:	89 c3                	mov    %eax,%ebx
    2da2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2da6:	48 89 c7             	mov    %rax,%rdi
    2da9:	e8 86 04 00 00       	call   3234 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    2dae:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    2db2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2db6:	48 89 de             	mov    %rbx,%rsi
    2db9:	48 89 c7             	mov    %rax,%rdi
    2dbc:	e8 8f 04 00 00       	call   3250 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    2dc1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2dc5:	48 89 c7             	mov    %rax,%rdi
    2dc8:	e8 cd f9 ff ff       	call   279a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2dcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2dd1:	48 89 c7             	mov    %rax,%rdi
    2dd4:	e8 ed 04 00 00       	call   32c6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    2dd9:	48 89 c2             	mov    %rax,%rdx
    2ddc:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2de0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2de4:	48 89 ce             	mov    %rcx,%rsi
    2de7:	48 89 c7             	mov    %rax,%rdi
    2dea:	e8 a1 f2 ff ff       	call   2090 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    2def:	85 c0                	test   %eax,%eax
    2df1:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    2df4:	84 c0                	test   %al,%al
    2df6:	0f 84 95 00 00 00    	je     2e91 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    2dfc:	bf 10 00 00 00       	mov    $0x10,%edi
    2e01:	e8 6a f2 ff ff       	call   2070 <__cxa_allocate_exception@plt>
    2e06:	48 89 c3             	mov    %rax,%rbx
    2e09:	48 8d 05 50 34 00 00 	lea    0x3450(%rip),%rax        # 6260 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    2e10:	48 89 c6             	mov    %rax,%rsi
    2e13:	48 89 df             	mov    %rbx,%rdi
    2e16:	e8 25 f2 ff ff       	call   2040 <_ZNSt13runtime_errorC1EPKc@plt>
    2e1b:	48 8b 05 86 71 00 00 	mov    0x7186(%rip),%rax        # 9fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    2e22:	48 89 c2             	mov    %rax,%rdx
    2e25:	48 8d 05 34 6f 00 00 	lea    0x6f34(%rip),%rax        # 9d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    2e2c:	48 89 c6             	mov    %rax,%rsi
    2e2f:	48 89 df             	mov    %rbx,%rdi
    2e32:	e8 d9 f3 ff ff       	call   2210 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    2e37:	49 89 c4             	mov    %rax,%r12
    2e3a:	48 89 df             	mov    %rbx,%rdi
    2e3d:	e8 6e f2 ff ff       	call   20b0 <__cxa_free_exception@plt>
    2e42:	4c 89 e0             	mov    %r12,%rax
    2e45:	48 89 c7             	mov    %rax,%rdi
    2e48:	e8 d3 f3 ff ff       	call   2220 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    2e4d:	48 89 c3             	mov    %rax,%rbx
    2e50:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2e54:	48 89 c7             	mov    %rax,%rdi
    2e57:	e8 3e f9 ff ff       	call   279a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    2e5c:	48 89 d8             	mov    %rbx,%rax
    2e5f:	48 89 c7             	mov    %rax,%rdi
    2e62:	e8 b9 f3 ff ff       	call   2220 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    2e67:	49 89 c4             	mov    %rax,%r12
    2e6a:	48 89 df             	mov    %rbx,%rdi
    2e6d:	e8 3e f2 ff ff       	call   20b0 <__cxa_free_exception@plt>
    2e72:	4c 89 e3             	mov    %r12,%rbx
    2e75:	eb 03                	jmp    2e7a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    2e77:	48 89 c3             	mov    %rax,%rbx
    2e7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e7e:	48 89 c7             	mov    %rax,%rdi
    2e81:	e8 46 f7 ff ff       	call   25cc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    2e86:	48 89 d8             	mov    %rbx,%rax
    2e89:	48 89 c7             	mov    %rax,%rdi
    2e8c:	e8 8f f3 ff ff       	call   2220 <_Unwind_Resume@plt>
  return physicalDevices;
    2e91:	90                   	nop
}
    2e92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e96:	48 83 c4 20          	add    $0x20,%rsp
    2e9a:	5b                   	pop    %rbx
    2e9b:	41 5c                	pop    %r12
    2e9d:	5d                   	pop    %rbp
    2e9e:	c3                   	ret

0000000000002e9f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    2e9f:	55                   	push   %rbp
    2ea0:	48 89 e5             	mov    %rsp,%rbp
    2ea3:	48 83 ec 10          	sub    $0x10,%rsp
    2ea7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2eab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    2eaf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2eb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2eb7:	48 89 d6             	mov    %rdx,%rsi
    2eba:	48 89 c7             	mov    %rax,%rdi
    2ebd:	e8 8e f1 ff ff       	call   2050 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    2ec2:	90                   	nop
}
    2ec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ec7:	c9                   	leave
    2ec8:	c3                   	ret

0000000000002ec9 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    2ec9:	55                   	push   %rbp
    2eca:	48 89 e5             	mov    %rsp,%rbp
    2ecd:	48 83 ec 20          	sub    $0x20,%rsp
    2ed1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2ed5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2ed9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    2edd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2ee1:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    2ee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2eeb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2eef:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    2ef3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2ef7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2efb:	48 89 d6             	mov    %rdx,%rsi
    2efe:	48 89 c7             	mov    %rax,%rdi
    2f01:	e8 0a f2 ff ff       	call   2110 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    2f06:	90                   	nop
}
    2f07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f0b:	c9                   	leave
    2f0c:	c3                   	ret

0000000000002f0d <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    2f0d:	55                   	push   %rbp
    2f0e:	48 89 e5             	mov    %rsp,%rbp
    2f11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2f19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2f1d:	5d                   	pop    %rbp
    2f1e:	c3                   	ret

0000000000002f1f <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    2f1f:	55                   	push   %rbp
    2f20:	48 89 e5             	mov    %rsp,%rbp
    2f23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f2b:	5d                   	pop    %rbp
    2f2c:	c3                   	ret
    2f2d:	90                   	nop

0000000000002f2e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    2f2e:	55                   	push   %rbp
    2f2f:	48 89 e5             	mov    %rsp,%rbp
    2f32:	48 83 ec 10          	sub    $0x10,%rsp
    2f36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f3e:	48 89 c7             	mov    %rax,%rdi
    2f41:	e8 3c 00 00 00       	call   2f82 <_ZNSaI21VkExtensionPropertiesED1Ev>
    2f46:	90                   	nop
    2f47:	c9                   	leave
    2f48:	c3                   	ret
    2f49:	90                   	nop

0000000000002f4a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>:
    2f4a:	55                   	push   %rbp
    2f4b:	48 89 e5             	mov    %rsp,%rbp
    2f4e:	48 83 ec 10          	sub    $0x10,%rsp
    2f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f5a:	48 89 c7             	mov    %rax,%rdi
    2f5d:	e8 8e 01 00 00       	call   30f0 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    2f62:	90                   	nop
    2f63:	c9                   	leave
    2f64:	c3                   	ret
    2f65:	90                   	nop

0000000000002f66 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    2f66:	55                   	push   %rbp
    2f67:	48 89 e5             	mov    %rsp,%rbp
    2f6a:	48 83 ec 10          	sub    $0x10,%rsp
    2f6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f76:	48 89 c7             	mov    %rax,%rdi
    2f79:	e8 6c 03 00 00       	call   32ea <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    2f7e:	90                   	nop
    2f7f:	c9                   	leave
    2f80:	c3                   	ret
    2f81:	90                   	nop

0000000000002f82 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    2f82:	55                   	push   %rbp
    2f83:	48 89 e5             	mov    %rsp,%rbp
    2f86:	48 83 ec 10          	sub    $0x10,%rsp
    2f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f92:	48 89 c7             	mov    %rax,%rdi
    2f95:	e8 5c 03 00 00       	call   32f6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    2f9a:	90                   	nop
    2f9b:	c9                   	leave
    2f9c:	c3                   	ret
    2f9d:	90                   	nop

0000000000002f9e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    2f9e:	55                   	push   %rbp
    2f9f:	48 89 e5             	mov    %rsp,%rbp
    2fa2:	53                   	push   %rbx
    2fa3:	48 83 ec 28          	sub    $0x28,%rsp
    2fa7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2fab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2faf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    2fb3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    2fb7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2fbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2fbf:	48 89 d6             	mov    %rdx,%rsi
    2fc2:	48 89 c7             	mov    %rax,%rdi
    2fc5:	e8 37 03 00 00       	call   3301 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    2fca:	48 89 c1             	mov    %rax,%rcx
    2fcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2fd1:	48 89 c2             	mov    %rax,%rdx
    2fd4:	48 89 ce             	mov    %rcx,%rsi
    2fd7:	48 89 df             	mov    %rbx,%rdi
    2fda:	e8 83 03 00 00       	call   3362 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    2fdf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2fe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2fe7:	48 89 d6             	mov    %rdx,%rsi
    2fea:	48 89 c7             	mov    %rax,%rdi
    2fed:	e8 ce 03 00 00       	call   33c0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    2ff2:	eb 1a                	jmp    300e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    2ff4:	48 89 c3             	mov    %rax,%rbx
    2ff7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ffb:	48 89 c7             	mov    %rax,%rdi
    2ffe:	e8 79 00 00 00       	call   307c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    3003:	48 89 d8             	mov    %rbx,%rax
    3006:	48 89 c7             	mov    %rax,%rdi
    3009:	e8 12 f2 ff ff       	call   2220 <_Unwind_Resume@plt>
    300e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3012:	c9                   	leave
    3013:	c3                   	ret

0000000000003014 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3014:	55                   	push   %rbp
    3015:	48 89 e5             	mov    %rsp,%rbp
    3018:	48 83 ec 10          	sub    $0x10,%rsp
    301c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3024:	48 89 c7             	mov    %rax,%rdi
    3027:	e8 d4 03 00 00       	call   3400 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    302c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    302f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3033:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    303b:	48 8b 00             	mov    (%rax),%rax
    303e:	48 89 ce             	mov    %rcx,%rsi
    3041:	48 89 c7             	mov    %rax,%rdi
    3044:	e8 c5 03 00 00       	call   340e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    3049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    304d:	48 89 c7             	mov    %rax,%rdi
    3050:	e8 27 00 00 00       	call   307c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    3055:	90                   	nop
    3056:	c9                   	leave
    3057:	c3                   	ret

0000000000003058 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    3058:	55                   	push   %rbp
    3059:	48 89 e5             	mov    %rsp,%rbp
    305c:	48 83 ec 10          	sub    $0x10,%rsp
    3060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    3064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3068:	48 8b 10             	mov    (%rax),%rdx
    306b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    306f:	48 89 d6             	mov    %rdx,%rsi
    3072:	48 89 c7             	mov    %rax,%rdi
    3075:	e8 be 03 00 00       	call   3438 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    307a:	c9                   	leave
    307b:	c3                   	ret

000000000000307c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    307c:	55                   	push   %rbp
    307d:	48 89 e5             	mov    %rsp,%rbp
    3080:	48 83 ec 10          	sub    $0x10,%rsp
    3084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    308c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3094:	48 8b 00             	mov    (%rax),%rax
    3097:	48 29 c2             	sub    %rax,%rdx
    309a:	48 c1 fa 02          	sar    $0x2,%rdx
    309e:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    30a5:	fc c0 0f 
    30a8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    30ac:	48 89 c2             	mov    %rax,%rdx
    30af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30b3:	48 8b 08             	mov    (%rax),%rcx
    30b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30ba:	48 89 ce             	mov    %rcx,%rsi
    30bd:	48 89 c7             	mov    %rax,%rdi
    30c0:	e8 ab 03 00 00       	call   3470 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    30c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30c9:	48 89 c7             	mov    %rax,%rdi
    30cc:	e8 5d fe ff ff       	call   2f2e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    30d1:	90                   	nop
    30d2:	c9                   	leave
    30d3:	c3                   	ret

00000000000030d4 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    30d4:	55                   	push   %rbp
    30d5:	48 89 e5             	mov    %rsp,%rbp
    30d8:	48 83 ec 10          	sub    $0x10,%rsp
    30dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    30e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    30e4:	48 89 c7             	mov    %rax,%rdi
    30e7:	e8 ba 03 00 00       	call   34a6 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>
    30ec:	90                   	nop
    30ed:	c9                   	leave
    30ee:	c3                   	ret
    30ef:	90                   	nop

00000000000030f0 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    30f0:	55                   	push   %rbp
    30f1:	48 89 e5             	mov    %rsp,%rbp
    30f4:	48 83 ec 10          	sub    $0x10,%rsp
    30f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    30fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3100:	48 89 c7             	mov    %rax,%rdi
    3103:	e8 aa 03 00 00       	call   34b2 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    3108:	90                   	nop
    3109:	c9                   	leave
    310a:	c3                   	ret
    310b:	90                   	nop

000000000000310c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    310c:	55                   	push   %rbp
    310d:	48 89 e5             	mov    %rsp,%rbp
    3110:	53                   	push   %rbx
    3111:	48 83 ec 28          	sub    $0x28,%rsp
    3115:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3119:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    311d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3121:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3125:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3129:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    312d:	48 89 d6             	mov    %rdx,%rsi
    3130:	48 89 c7             	mov    %rax,%rdi
    3133:	e8 85 03 00 00       	call   34bd <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_>
    3138:	48 89 c1             	mov    %rax,%rcx
    313b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    313f:	48 89 c2             	mov    %rax,%rdx
    3142:	48 89 ce             	mov    %rcx,%rsi
    3145:	48 89 df             	mov    %rbx,%rdi
    3148:	e8 d1 03 00 00       	call   351e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>
      { _M_default_initialize(__n); }
    314d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3151:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3155:	48 89 d6             	mov    %rdx,%rsi
    3158:	48 89 c7             	mov    %rax,%rdi
    315b:	e8 1c 04 00 00       	call   357c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE21_M_default_initializeEm>
    3160:	eb 1a                	jmp    317c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_+0x70>
    3162:	48 89 c3             	mov    %rax,%rbx
    3165:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3169:	48 89 c7             	mov    %rax,%rdi
    316c:	e8 75 00 00 00       	call   31e6 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    3171:	48 89 d8             	mov    %rbx,%rax
    3174:	48 89 c7             	mov    %rax,%rdi
    3177:	e8 a4 f0 ff ff       	call   2220 <_Unwind_Resume@plt>
    317c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3180:	c9                   	leave
    3181:	c3                   	ret

0000000000003182 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3182:	55                   	push   %rbp
    3183:	48 89 e5             	mov    %rsp,%rbp
    3186:	48 83 ec 10          	sub    $0x10,%rsp
    318a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    318e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3192:	48 89 c7             	mov    %rax,%rdi
    3195:	e8 22 04 00 00       	call   35bc <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    319a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    319d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31a1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    31a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31a9:	48 8b 00             	mov    (%rax),%rax
    31ac:	48 89 ce             	mov    %rcx,%rsi
    31af:	48 89 c7             	mov    %rax,%rdi
    31b2:	e8 13 04 00 00       	call   35ca <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>
      }
    31b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31bb:	48 89 c7             	mov    %rax,%rdi
    31be:	e8 23 00 00 00       	call   31e6 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>
    31c3:	90                   	nop
    31c4:	c9                   	leave
    31c5:	c3                   	ret

00000000000031c6 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    31c6:	55                   	push   %rbp
    31c7:	48 89 e5             	mov    %rsp,%rbp
    31ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    31ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    31d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31d6:	48 8b 00             	mov    (%rax),%rax
    31d9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    31dd:	48 c1 e2 05          	shl    $0x5,%rdx
    31e1:	48 01 d0             	add    %rdx,%rax
      }
    31e4:	5d                   	pop    %rbp
    31e5:	c3                   	ret

00000000000031e6 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    31e6:	55                   	push   %rbp
    31e7:	48 89 e5             	mov    %rsp,%rbp
    31ea:	48 83 ec 10          	sub    $0x10,%rsp
    31ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    31f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31f6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    31fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31fe:	48 8b 00             	mov    (%rax),%rax
    3201:	48 29 c2             	sub    %rax,%rdx
    3204:	48 89 d0             	mov    %rdx,%rax
    3207:	48 c1 f8 05          	sar    $0x5,%rax
	_M_deallocate(_M_impl._M_start,
    320b:	48 89 c2             	mov    %rax,%rdx
    320e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3212:	48 8b 08             	mov    (%rax),%rcx
    3215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3219:	48 89 ce             	mov    %rcx,%rsi
    321c:	48 89 c7             	mov    %rax,%rdi
    321f:	e8 f6 03 00 00       	call   361a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>
      }
    3224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3228:	48 89 c7             	mov    %rax,%rdi
    322b:	e8 1a fd ff ff       	call   2f4a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>
    3230:	90                   	nop
    3231:	c9                   	leave
    3232:	c3                   	ret
    3233:	90                   	nop

0000000000003234 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    3234:	55                   	push   %rbp
    3235:	48 89 e5             	mov    %rsp,%rbp
    3238:	48 83 ec 10          	sub    $0x10,%rsp
    323c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3244:	48 89 c7             	mov    %rax,%rdi
    3247:	e8 04 04 00 00       	call   3650 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    324c:	90                   	nop
    324d:	c9                   	leave
    324e:	c3                   	ret
    324f:	90                   	nop

0000000000003250 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    3250:	55                   	push   %rbp
    3251:	48 89 e5             	mov    %rsp,%rbp
    3254:	53                   	push   %rbx
    3255:	48 83 ec 28          	sub    $0x28,%rsp
    3259:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    325d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3261:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    3265:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    3269:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    326d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3271:	48 89 d6             	mov    %rdx,%rsi
    3274:	48 89 c7             	mov    %rax,%rdi
    3277:	e8 df 03 00 00       	call   365b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    327c:	48 89 c1             	mov    %rax,%rcx
    327f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3283:	48 89 c2             	mov    %rax,%rdx
    3286:	48 89 ce             	mov    %rcx,%rsi
    3289:	48 89 df             	mov    %rbx,%rdi
    328c:	e8 2b 04 00 00       	call   36bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    3291:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3299:	48 89 d6             	mov    %rdx,%rsi
    329c:	48 89 c7             	mov    %rax,%rdi
    329f:	e8 76 04 00 00       	call   371a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    32a4:	eb 1a                	jmp    32c0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    32a6:	48 89 c3             	mov    %rax,%rbx
    32a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32ad:	48 89 c7             	mov    %rax,%rdi
    32b0:	e8 33 f4 ff ff       	call   26e8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    32b5:	48 89 d8             	mov    %rbx,%rax
    32b8:	48 89 c7             	mov    %rax,%rdi
    32bb:	e8 60 ef ff ff       	call   2220 <_Unwind_Resume@plt>
    32c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    32c4:	c9                   	leave
    32c5:	c3                   	ret

00000000000032c6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    32c6:	55                   	push   %rbp
    32c7:	48 89 e5             	mov    %rsp,%rbp
    32ca:	48 83 ec 10          	sub    $0x10,%rsp
    32ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    32d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32d6:	48 8b 10             	mov    (%rax),%rdx
    32d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32dd:	48 89 d6             	mov    %rdx,%rsi
    32e0:	48 89 c7             	mov    %rax,%rdi
    32e3:	e8 72 04 00 00       	call   375a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    32e8:	c9                   	leave
    32e9:	c3                   	ret

00000000000032ea <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    32ea:	55                   	push   %rbp
    32eb:	48 89 e5             	mov    %rsp,%rbp
    32ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    32f2:	90                   	nop
    32f3:	5d                   	pop    %rbp
    32f4:	c3                   	ret
    32f5:	90                   	nop

00000000000032f6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    32f6:	55                   	push   %rbp
    32f7:	48 89 e5             	mov    %rsp,%rbp
    32fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    32fe:	90                   	nop
    32ff:	5d                   	pop    %rbp
    3300:	c3                   	ret

0000000000003301 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    3301:	55                   	push   %rbp
    3302:	48 89 e5             	mov    %rsp,%rbp
    3305:	53                   	push   %rbx
    3306:	48 83 ec 28          	sub    $0x28,%rsp
    330a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    330e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    3312:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3316:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    331a:	48 89 d6             	mov    %rdx,%rsi
    331d:	48 89 c7             	mov    %rax,%rdi
    3320:	e8 25 01 00 00       	call   344a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    3325:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3329:	48 89 c7             	mov    %rax,%rdi
    332c:	e8 61 04 00 00       	call   3792 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    3331:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    3335:	0f 92 c3             	setb   %bl
    3338:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    333c:	48 89 c7             	mov    %rax,%rdi
    333f:	e8 3e fc ff ff       	call   2f82 <_ZNSaI21VkExtensionPropertiesED1Ev>
    3344:	84 db                	test   %bl,%bl
    3346:	74 0f                	je     3357 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    3348:	48 8d 05 39 2f 00 00 	lea    0x2f39(%rip),%rax        # 6288 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    334f:	48 89 c7             	mov    %rax,%rdi
    3352:	e8 29 ed ff ff       	call   2080 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    3357:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    335b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    335f:	c9                   	leave
    3360:	c3                   	ret
    3361:	90                   	nop

0000000000003362 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    3362:	55                   	push   %rbp
    3363:	48 89 e5             	mov    %rsp,%rbp
    3366:	53                   	push   %rbx
    3367:	48 83 ec 28          	sub    $0x28,%rsp
    336b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    336f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3373:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3377:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    337b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    337f:	48 89 d6             	mov    %rdx,%rsi
    3382:	48 89 c7             	mov    %rax,%rdi
    3385:	e8 4a 04 00 00       	call   37d4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    338a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    338e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3392:	48 89 d6             	mov    %rdx,%rsi
    3395:	48 89 c7             	mov    %rax,%rdi
    3398:	e8 69 04 00 00       	call   3806 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    339d:	eb 1a                	jmp    33b9 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    339f:	48 89 c3             	mov    %rax,%rbx
    33a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33a6:	48 89 c7             	mov    %rax,%rdi
    33a9:	e8 80 fb ff ff       	call   2f2e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    33ae:	48 89 d8             	mov    %rbx,%rax
    33b1:	48 89 c7             	mov    %rax,%rdi
    33b4:	e8 67 ee ff ff       	call   2220 <_Unwind_Resume@plt>
    33b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    33bd:	c9                   	leave
    33be:	c3                   	ret
    33bf:	90                   	nop

00000000000033c0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    33c0:	55                   	push   %rbp
    33c1:	48 89 e5             	mov    %rsp,%rbp
    33c4:	48 83 ec 10          	sub    $0x10,%rsp
    33c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    33d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33d4:	48 89 c7             	mov    %rax,%rdi
    33d7:	e8 24 00 00 00       	call   3400 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    33dc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    33df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33e3:	48 8b 00             	mov    (%rax),%rax
    33e6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    33ea:	48 89 ce             	mov    %rcx,%rsi
    33ed:	48 89 c7             	mov    %rax,%rdi
    33f0:	e8 72 04 00 00       	call   3867 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    33f5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    33f9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    33fd:	90                   	nop
    33fe:	c9                   	leave
    33ff:	c3                   	ret

0000000000003400 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    3400:	55                   	push   %rbp
    3401:	48 89 e5             	mov    %rsp,%rbp
    3404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    3408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    340c:	5d                   	pop    %rbp
    340d:	c3                   	ret

000000000000340e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    340e:	55                   	push   %rbp
    340f:	48 89 e5             	mov    %rsp,%rbp
    3412:	48 83 ec 20          	sub    $0x20,%rsp
    3416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    341a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    341e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    3422:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    342a:	48 89 d6             	mov    %rdx,%rsi
    342d:	48 89 c7             	mov    %rax,%rdi
    3430:	e8 5b 04 00 00       	call   3890 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    3435:	90                   	nop
    3436:	c9                   	leave
    3437:	c3                   	ret

0000000000003438 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    3438:	55                   	push   %rbp
    3439:	48 89 e5             	mov    %rsp,%rbp
    343c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3440:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3444:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3448:	5d                   	pop    %rbp
    3449:	c3                   	ret

000000000000344a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    344a:	55                   	push   %rbp
    344b:	48 89 e5             	mov    %rsp,%rbp
    344e:	48 83 ec 10          	sub    $0x10,%rsp
    3452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3456:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    345a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    345e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3462:	48 89 d6             	mov    %rdx,%rsi
    3465:	48 89 c7             	mov    %rax,%rdi
    3468:	e8 49 04 00 00       	call   38b6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    346d:	90                   	nop
    346e:	c9                   	leave
    346f:	c3                   	ret

0000000000003470 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    3470:	55                   	push   %rbp
    3471:	48 89 e5             	mov    %rsp,%rbp
    3474:	48 83 ec 20          	sub    $0x20,%rsp
    3478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    347c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3480:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    3484:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3489:	74 17                	je     34a2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    348b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    348f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3493:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3497:	48 89 ce             	mov    %rcx,%rsi
    349a:	48 89 c7             	mov    %rax,%rdi
    349d:	e8 23 04 00 00       	call   38c5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    34a2:	90                   	nop
    34a3:	c9                   	leave
    34a4:	c3                   	ret
    34a5:	90                   	nop

00000000000034a6 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    34a6:	55                   	push   %rbp
    34a7:	48 89 e5             	mov    %rsp,%rbp
    34aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    34ae:	90                   	nop
    34af:	5d                   	pop    %rbp
    34b0:	c3                   	ret
    34b1:	90                   	nop

00000000000034b2 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    34b2:	55                   	push   %rbp
    34b3:	48 89 e5             	mov    %rsp,%rbp
    34b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    34ba:	90                   	nop
    34bb:	5d                   	pop    %rbp
    34bc:	c3                   	ret

00000000000034bd <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    34bd:	55                   	push   %rbp
    34be:	48 89 e5             	mov    %rsp,%rbp
    34c1:	53                   	push   %rbx
    34c2:	48 83 ec 28          	sub    $0x28,%rsp
    34c6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    34ca:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    34ce:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    34d2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    34d6:	48 89 d6             	mov    %rdx,%rsi
    34d9:	48 89 c7             	mov    %rax,%rdi
    34dc:	e8 13 01 00 00       	call   35f4 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
    34e1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    34e5:	48 89 c7             	mov    %rax,%rdi
    34e8:	e8 06 04 00 00       	call   38f3 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>
    34ed:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    34f1:	0f 92 c3             	setb   %bl
    34f4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    34f8:	48 89 c7             	mov    %rax,%rdi
    34fb:	e8 f0 fb ff ff       	call   30f0 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED1Ev>
    3500:	84 db                	test   %bl,%bl
    3502:	74 0f                	je     3513 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_+0x56>
	  __throw_length_error(
    3504:	48 8d 05 7d 2d 00 00 	lea    0x2d7d(%rip),%rax        # 6288 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    350b:	48 89 c7             	mov    %rax,%rdi
    350e:	e8 6d eb ff ff       	call   2080 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    3513:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    3517:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    351b:	c9                   	leave
    351c:	c3                   	ret
    351d:	90                   	nop

000000000000351e <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    351e:	55                   	push   %rbp
    351f:	48 89 e5             	mov    %rsp,%rbp
    3522:	53                   	push   %rbx
    3523:	48 83 ec 28          	sub    $0x28,%rsp
    3527:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    352b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    352f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    3533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3537:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    353b:	48 89 d6             	mov    %rdx,%rsi
    353e:	48 89 c7             	mov    %rax,%rdi
    3541:	e8 f0 03 00 00       	call   3936 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>
      { _M_create_storage(__n); }
    3546:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    354a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    354e:	48 89 d6             	mov    %rdx,%rsi
    3551:	48 89 c7             	mov    %rax,%rdi
    3554:	e8 0f 04 00 00       	call   3968 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm>
    3559:	eb 1a                	jmp    3575 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC1EmRKS6_+0x57>
    355b:	48 89 c3             	mov    %rax,%rbx
    355e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3562:	48 89 c7             	mov    %rax,%rdi
    3565:	e8 e0 f9 ff ff       	call   2f4a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD1Ev>
    356a:	48 89 d8             	mov    %rbx,%rax
    356d:	48 89 c7             	mov    %rax,%rdi
    3570:	e8 ab ec ff ff       	call   2220 <_Unwind_Resume@plt>
    3575:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3579:	c9                   	leave
    357a:	c3                   	ret
    357b:	90                   	nop

000000000000357c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    357c:	55                   	push   %rbp
    357d:	48 89 e5             	mov    %rsp,%rbp
    3580:	48 83 ec 10          	sub    $0x10,%rsp
    3584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3588:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    358c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3590:	48 89 c7             	mov    %rax,%rdi
    3593:	e8 24 00 00 00       	call   35bc <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>
    3598:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    359b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    359f:	48 8b 00             	mov    (%rax),%rax
    35a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    35a6:	48 89 ce             	mov    %rcx,%rsi
    35a9:	48 89 c7             	mov    %rax,%rdi
    35ac:	e8 0d 04 00 00       	call   39be <_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    35b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    35b5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    35b9:	90                   	nop
    35ba:	c9                   	leave
    35bb:	c3                   	ret

00000000000035bc <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    35bc:	55                   	push   %rbp
    35bd:	48 89 e5             	mov    %rsp,%rbp
    35c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    35c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35c8:	5d                   	pop    %rbp
    35c9:	c3                   	ret

00000000000035ca <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    35ca:	55                   	push   %rbp
    35cb:	48 89 e5             	mov    %rsp,%rbp
    35ce:	48 83 ec 20          	sub    $0x20,%rsp
    35d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    35d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    35da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    35de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    35e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35e6:	48 89 d6             	mov    %rdx,%rsi
    35e9:	48 89 c7             	mov    %rax,%rdi
    35ec:	e8 f6 03 00 00       	call   39e7 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>
    }
    35f1:	90                   	nop
    35f2:	c9                   	leave
    35f3:	c3                   	ret

00000000000035f4 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    35f4:	55                   	push   %rbp
    35f5:	48 89 e5             	mov    %rsp,%rbp
    35f8:	48 83 ec 10          	sub    $0x10,%rsp
    35fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3600:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    3604:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    360c:	48 89 d6             	mov    %rdx,%rsi
    360f:	48 89 c7             	mov    %rax,%rdi
    3612:	e8 f7 03 00 00       	call   3a0e <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_>
    3617:	90                   	nop
    3618:	c9                   	leave
    3619:	c3                   	ret

000000000000361a <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m>:
      _M_deallocate(pointer __p, size_t __n)
    361a:	55                   	push   %rbp
    361b:	48 89 e5             	mov    %rsp,%rbp
    361e:	48 83 ec 20          	sub    $0x20,%rsp
    3622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3626:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    362a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    362e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3633:	74 17                	je     364c <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    3635:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3639:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    363d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3641:	48 89 ce             	mov    %rcx,%rsi
    3644:	48 89 c7             	mov    %rax,%rdi
    3647:	e8 d1 03 00 00       	call   3a1d <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m>
      }
    364c:	90                   	nop
    364d:	c9                   	leave
    364e:	c3                   	ret
    364f:	90                   	nop

0000000000003650 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    3650:	55                   	push   %rbp
    3651:	48 89 e5             	mov    %rsp,%rbp
    3654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3658:	90                   	nop
    3659:	5d                   	pop    %rbp
    365a:	c3                   	ret

000000000000365b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    365b:	55                   	push   %rbp
    365c:	48 89 e5             	mov    %rsp,%rbp
    365f:	53                   	push   %rbx
    3660:	48 83 ec 28          	sub    $0x28,%rsp
    3664:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3668:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    366c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3670:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3674:	48 89 d6             	mov    %rdx,%rsi
    3677:	48 89 c7             	mov    %rax,%rdi
    367a:	e8 ed 00 00 00       	call   376c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    367f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3683:	48 89 c7             	mov    %rax,%rdi
    3686:	e8 c0 03 00 00       	call   3a4b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    368b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    368f:	0f 92 c3             	setb   %bl
    3692:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    3696:	48 89 c7             	mov    %rax,%rdi
    3699:	e8 fc f0 ff ff       	call   279a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    369e:	84 db                	test   %bl,%bl
    36a0:	74 0f                	je     36b1 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    36a2:	48 8d 05 df 2b 00 00 	lea    0x2bdf(%rip),%rax        # 6288 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    36a9:	48 89 c7             	mov    %rax,%rdi
    36ac:	e8 cf e9 ff ff       	call   2080 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    36b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    36b5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    36b9:	c9                   	leave
    36ba:	c3                   	ret
    36bb:	90                   	nop

00000000000036bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    36bc:	55                   	push   %rbp
    36bd:	48 89 e5             	mov    %rsp,%rbp
    36c0:	53                   	push   %rbx
    36c1:	48 83 ec 28          	sub    $0x28,%rsp
    36c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    36c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    36cd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    36d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    36d9:	48 89 d6             	mov    %rdx,%rsi
    36dc:	48 89 c7             	mov    %rax,%rdi
    36df:	e8 aa 03 00 00       	call   3a8e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    36e4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    36e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36ec:	48 89 d6             	mov    %rdx,%rsi
    36ef:	48 89 c7             	mov    %rax,%rdi
    36f2:	e8 c9 03 00 00       	call   3ac0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    36f7:	eb 1a                	jmp    3713 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    36f9:	48 89 c3             	mov    %rax,%rbx
    36fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3700:	48 89 c7             	mov    %rax,%rdi
    3703:	e8 c4 ef ff ff       	call   26cc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    3708:	48 89 d8             	mov    %rbx,%rax
    370b:	48 89 c7             	mov    %rax,%rdi
    370e:	e8 0d eb ff ff       	call   2220 <_Unwind_Resume@plt>
    3713:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3717:	c9                   	leave
    3718:	c3                   	ret
    3719:	90                   	nop

000000000000371a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    371a:	55                   	push   %rbp
    371b:	48 89 e5             	mov    %rsp,%rbp
    371e:	48 83 ec 10          	sub    $0x10,%rsp
    3722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3726:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    372a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    372e:	48 89 c7             	mov    %rax,%rdi
    3731:	e8 00 f0 ff ff       	call   2736 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3736:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    3739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    373d:	48 8b 00             	mov    (%rax),%rax
    3740:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3744:	48 89 ce             	mov    %rcx,%rsi
    3747:	48 89 c7             	mov    %rax,%rdi
    374a:	e8 c7 03 00 00       	call   3b16 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    374f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3753:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    3757:	90                   	nop
    3758:	c9                   	leave
    3759:	c3                   	ret

000000000000375a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    375a:	55                   	push   %rbp
    375b:	48 89 e5             	mov    %rsp,%rbp
    375e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3762:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    3766:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    376a:	5d                   	pop    %rbp
    376b:	c3                   	ret

000000000000376c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    376c:	55                   	push   %rbp
    376d:	48 89 e5             	mov    %rsp,%rbp
    3770:	48 83 ec 10          	sub    $0x10,%rsp
    3774:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3778:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    377c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3780:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3784:	48 89 d6             	mov    %rdx,%rsi
    3787:	48 89 c7             	mov    %rax,%rdi
    378a:	e8 b1 03 00 00       	call   3b40 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    378f:	90                   	nop
    3790:	c9                   	leave
    3791:	c3                   	ret

0000000000003792 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3792:	55                   	push   %rbp
    3793:	48 89 e5             	mov    %rsp,%rbp
    3796:	48 83 ec 20          	sub    $0x20,%rsp
    379a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    379e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    37a5:	07 7e 00 
    37a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    37ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37b0:	48 89 c7             	mov    %rax,%rdi
    37b3:	e8 97 03 00 00       	call   3b4f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    37b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    37bc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    37c0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    37c4:	48 89 d6             	mov    %rdx,%rsi
    37c7:	48 89 c7             	mov    %rax,%rdi
    37ca:	e8 9a 03 00 00       	call   3b69 <_ZSt3minImERKT_S2_S2_>
    37cf:	48 8b 00             	mov    (%rax),%rax
      }
    37d2:	c9                   	leave
    37d3:	c3                   	ret

00000000000037d4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    37d4:	55                   	push   %rbp
    37d5:	48 89 e5             	mov    %rsp,%rbp
    37d8:	48 83 ec 10          	sub    $0x10,%rsp
    37dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    37e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    37e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37ec:	48 89 d6             	mov    %rdx,%rsi
    37ef:	48 89 c7             	mov    %rax,%rdi
    37f2:	e8 53 fc ff ff       	call   344a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    37f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37fb:	48 89 c7             	mov    %rax,%rdi
    37fe:	e8 91 03 00 00       	call   3b94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    3803:	90                   	nop
    3804:	c9                   	leave
    3805:	c3                   	ret

0000000000003806 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3806:	55                   	push   %rbp
    3807:	48 89 e5             	mov    %rsp,%rbp
    380a:	48 83 ec 10          	sub    $0x10,%rsp
    380e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3812:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3816:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    381a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    381e:	48 89 d6             	mov    %rdx,%rsi
    3821:	48 89 c7             	mov    %rax,%rdi
    3824:	e8 99 03 00 00       	call   3bc2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    3829:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    382d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3834:	48 8b 10             	mov    (%rax),%rdx
    3837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    383b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    383f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3843:	48 8b 08             	mov    (%rax),%rcx
    3846:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    384a:	48 89 d0             	mov    %rdx,%rax
    384d:	48 c1 e0 06          	shl    $0x6,%rax
    3851:	48 01 d0             	add    %rdx,%rax
    3854:	48 c1 e0 02          	shl    $0x2,%rax
    3858:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    385c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3860:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    3864:	90                   	nop
    3865:	c9                   	leave
    3866:	c3                   	ret

0000000000003867 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    3867:	55                   	push   %rbp
    3868:	48 89 e5             	mov    %rsp,%rbp
    386b:	48 83 ec 20          	sub    $0x20,%rsp
    386f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3873:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3877:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    387b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    387f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3883:	48 89 d6             	mov    %rdx,%rsi
    3886:	48 89 c7             	mov    %rax,%rdi
    3889:	e8 67 03 00 00       	call   3bf5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    388e:	c9                   	leave
    388f:	c3                   	ret

0000000000003890 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    3890:	55                   	push   %rbp
    3891:	48 89 e5             	mov    %rsp,%rbp
    3894:	48 83 ec 10          	sub    $0x10,%rsp
    3898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    389c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    38a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    38a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38a8:	48 89 d6             	mov    %rdx,%rsi
    38ab:	48 89 c7             	mov    %rax,%rdi
    38ae:	e8 6b 03 00 00       	call   3c1e <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    38b3:	90                   	nop
    38b4:	c9                   	leave
    38b5:	c3                   	ret

00000000000038b6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    38b6:	55                   	push   %rbp
    38b7:	48 89 e5             	mov    %rsp,%rbp
    38ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    38c2:	90                   	nop
    38c3:	5d                   	pop    %rbp
    38c4:	c3                   	ret

00000000000038c5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    38c5:	55                   	push   %rbp
    38c6:	48 89 e5             	mov    %rsp,%rbp
    38c9:	48 83 ec 20          	sub    $0x20,%rsp
    38cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    38d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    38d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    38dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    38e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38e5:	48 89 ce             	mov    %rcx,%rsi
    38e8:	48 89 c7             	mov    %rax,%rdi
    38eb:	e8 3e 03 00 00       	call   3c2e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    38f0:	90                   	nop
    38f1:	c9                   	leave
    38f2:	c3                   	ret

00000000000038f3 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    38f3:	55                   	push   %rbp
    38f4:	48 89 e5             	mov    %rsp,%rbp
    38f7:	48 83 ec 20          	sub    $0x20,%rsp
    38fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    38ff:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    3906:	ff ff 03 
    3909:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    390d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3911:	48 89 c7             	mov    %rax,%rdi
    3914:	e8 4f 03 00 00       	call   3c68 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_>
    3919:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    391d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3921:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3925:	48 89 d6             	mov    %rdx,%rsi
    3928:	48 89 c7             	mov    %rax,%rdi
    392b:	e8 39 02 00 00       	call   3b69 <_ZSt3minImERKT_S2_S2_>
    3930:	48 8b 00             	mov    (%rax),%rax
      }
    3933:	c9                   	leave
    3934:	c3                   	ret
    3935:	90                   	nop

0000000000003936 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC1ERKS6_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    3936:	55                   	push   %rbp
    3937:	48 89 e5             	mov    %rsp,%rbp
    393a:	48 83 ec 10          	sub    $0x10,%rsp
    393e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3942:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    3946:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    394a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    394e:	48 89 d6             	mov    %rdx,%rsi
    3951:	48 89 c7             	mov    %rax,%rdi
    3954:	e8 9b fc ff ff       	call   35f4 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS5_>
    3959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    395d:	48 89 c7             	mov    %rax,%rdi
    3960:	e8 1d 03 00 00       	call   3c82 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>
	{ }
    3965:	90                   	nop
    3966:	c9                   	leave
    3967:	c3                   	ret

0000000000003968 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3968:	55                   	push   %rbp
    3969:	48 89 e5             	mov    %rsp,%rbp
    396c:	48 83 ec 10          	sub    $0x10,%rsp
    3970:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3974:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3978:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    397c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3980:	48 89 d6             	mov    %rdx,%rsi
    3983:	48 89 c7             	mov    %rax,%rdi
    3986:	e8 25 03 00 00       	call   3cb0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>
    398b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    398f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3996:	48 8b 10             	mov    (%rax),%rdx
    3999:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    399d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    39a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39a5:	48 8b 00             	mov    (%rax),%rax
    39a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    39ac:	48 c1 e2 05          	shl    $0x5,%rdx
    39b0:	48 01 c2             	add    %rax,%rdx
    39b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39b7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    39bb:	90                   	nop
    39bc:	c9                   	leave
    39bd:	c3                   	ret

00000000000039be <_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    39be:	55                   	push   %rbp
    39bf:	48 89 e5             	mov    %rsp,%rbp
    39c2:	48 83 ec 20          	sub    $0x20,%rsp
    39c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    39ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    39d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    39d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39da:	48 89 d6             	mov    %rdx,%rsi
    39dd:	48 89 c7             	mov    %rax,%rdi
    39e0:	e8 fe 02 00 00       	call   3ce3 <_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_>
    39e5:	c9                   	leave
    39e6:	c3                   	ret

00000000000039e7 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    39e7:	55                   	push   %rbp
    39e8:	48 89 e5             	mov    %rsp,%rbp
    39eb:	48 83 ec 10          	sub    $0x10,%rsp
    39ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    39f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    39fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39ff:	48 89 d6             	mov    %rdx,%rsi
    3a02:	48 89 c7             	mov    %rax,%rdi
    3a05:	e8 02 03 00 00       	call   3d0c <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>
    }
    3a0a:	90                   	nop
    3a0b:	c9                   	leave
    3a0c:	c3                   	ret
    3a0d:	90                   	nop

0000000000003a0e <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS6_>:
    3a0e:	55                   	push   %rbp
    3a0f:	48 89 e5             	mov    %rsp,%rbp
    3a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a1a:	90                   	nop
    3a1b:	5d                   	pop    %rbp
    3a1c:	c3                   	ret

0000000000003a1d <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    3a1d:	55                   	push   %rbp
    3a1e:	48 89 e5             	mov    %rsp,%rbp
    3a21:	48 83 ec 20          	sub    $0x20,%rsp
    3a25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a29:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a2d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    3a31:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3a35:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a3d:	48 89 ce             	mov    %rcx,%rsi
    3a40:	48 89 c7             	mov    %rax,%rdi
    3a43:	e8 fe 02 00 00       	call   3d46 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>
    3a48:	90                   	nop
    3a49:	c9                   	leave
    3a4a:	c3                   	ret

0000000000003a4b <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    3a4b:	55                   	push   %rbp
    3a4c:	48 89 e5             	mov    %rsp,%rbp
    3a4f:	48 83 ec 20          	sub    $0x20,%rsp
    3a53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    3a57:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    3a5e:	ff ff 0f 
    3a61:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    3a65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a69:	48 89 c7             	mov    %rax,%rdi
    3a6c:	e8 05 03 00 00       	call   3d76 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    3a71:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    3a75:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    3a79:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3a7d:	48 89 d6             	mov    %rdx,%rsi
    3a80:	48 89 c7             	mov    %rax,%rdi
    3a83:	e8 e1 00 00 00       	call   3b69 <_ZSt3minImERKT_S2_S2_>
    3a88:	48 8b 00             	mov    (%rax),%rax
      }
    3a8b:	c9                   	leave
    3a8c:	c3                   	ret
    3a8d:	90                   	nop

0000000000003a8e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    3a8e:	55                   	push   %rbp
    3a8f:	48 89 e5             	mov    %rsp,%rbp
    3a92:	48 83 ec 10          	sub    $0x10,%rsp
    3a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    3a9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aa6:	48 89 d6             	mov    %rdx,%rsi
    3aa9:	48 89 c7             	mov    %rax,%rdi
    3aac:	e8 bb fc ff ff       	call   376c <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    3ab1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ab5:	48 89 c7             	mov    %rax,%rdi
    3ab8:	e8 d3 02 00 00       	call   3d90 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3abd:	90                   	nop
    3abe:	c9                   	leave
    3abf:	c3                   	ret

0000000000003ac0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    3ac0:	55                   	push   %rbp
    3ac1:	48 89 e5             	mov    %rsp,%rbp
    3ac4:	48 83 ec 10          	sub    $0x10,%rsp
    3ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3acc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    3ad0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ad8:	48 89 d6             	mov    %rdx,%rsi
    3adb:	48 89 c7             	mov    %rax,%rdi
    3ade:	e8 db 02 00 00       	call   3dbe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    3ae3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ae7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    3aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aee:	48 8b 10             	mov    (%rax),%rdx
    3af1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3af5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    3af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3afd:	48 8b 00             	mov    (%rax),%rax
    3b00:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b04:	48 c1 e2 03          	shl    $0x3,%rdx
    3b08:	48 01 c2             	add    %rax,%rdx
    3b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b0f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    3b13:	90                   	nop
    3b14:	c9                   	leave
    3b15:	c3                   	ret

0000000000003b16 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    3b16:	55                   	push   %rbp
    3b17:	48 89 e5             	mov    %rsp,%rbp
    3b1a:	48 83 ec 20          	sub    $0x20,%rsp
    3b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3b26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    3b2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b32:	48 89 d6             	mov    %rdx,%rsi
    3b35:	48 89 c7             	mov    %rax,%rdi
    3b38:	e8 b4 02 00 00       	call   3df1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    3b3d:	c9                   	leave
    3b3e:	c3                   	ret
    3b3f:	90                   	nop

0000000000003b40 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    3b40:	55                   	push   %rbp
    3b41:	48 89 e5             	mov    %rsp,%rbp
    3b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3b4c:	90                   	nop
    3b4d:	5d                   	pop    %rbp
    3b4e:	c3                   	ret

0000000000003b4f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    3b4f:	55                   	push   %rbp
    3b50:	48 89 e5             	mov    %rsp,%rbp
    3b53:	48 83 ec 10          	sub    $0x10,%rsp
    3b57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    3b5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b5f:	48 89 c7             	mov    %rax,%rdi
    3b62:	e8 b3 02 00 00       	call   3e1a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    3b67:	c9                   	leave
    3b68:	c3                   	ret

0000000000003b69 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    3b69:	55                   	push   %rbp
    3b6a:	48 89 e5             	mov    %rsp,%rbp
    3b6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b71:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    3b75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b79:	48 8b 10             	mov    (%rax),%rdx
    3b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b80:	48 8b 00             	mov    (%rax),%rax
    3b83:	48 39 c2             	cmp    %rax,%rdx
    3b86:	73 06                	jae    3b8e <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    3b88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3b8c:	eb 04                	jmp    3b92 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    3b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3b92:	5d                   	pop    %rbp
    3b93:	c3                   	ret

0000000000003b94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    3b94:	55                   	push   %rbp
    3b95:	48 89 e5             	mov    %rsp,%rbp
    3b98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    3b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ba0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3ba7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bab:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3bb2:	00 
    3bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bb7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3bbe:	00 
	{ }
    3bbf:	90                   	nop
    3bc0:	5d                   	pop    %rbp
    3bc1:	c3                   	ret

0000000000003bc2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    3bc2:	55                   	push   %rbp
    3bc3:	48 89 e5             	mov    %rsp,%rbp
    3bc6:	48 83 ec 10          	sub    $0x10,%rsp
    3bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3bce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    3bd2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3bd7:	74 15                	je     3bee <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    3bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3bdd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3be1:	48 89 d6             	mov    %rdx,%rsi
    3be4:	48 89 c7             	mov    %rax,%rdi
    3be7:	e8 48 02 00 00       	call   3e34 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    3bec:	eb 05                	jmp    3bf3 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    3bee:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    3bf3:	c9                   	leave
    3bf4:	c3                   	ret

0000000000003bf5 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    3bf5:	55                   	push   %rbp
    3bf6:	48 89 e5             	mov    %rsp,%rbp
    3bf9:	48 83 ec 20          	sub    $0x20,%rsp
    3bfd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3c01:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    3c05:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    3c09:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3c0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c11:	48 89 d6             	mov    %rdx,%rsi
    3c14:	48 89 c7             	mov    %rax,%rdi
    3c17:	e8 42 02 00 00       	call   3e5e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    3c1c:	c9                   	leave
    3c1d:	c3                   	ret

0000000000003c1e <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    3c1e:	55                   	push   %rbp
    3c1f:	48 89 e5             	mov    %rsp,%rbp
    3c22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c2a:	90                   	nop
    3c2b:	5d                   	pop    %rbp
    3c2c:	c3                   	ret
    3c2d:	90                   	nop

0000000000003c2e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    3c2e:	55                   	push   %rbp
    3c2f:	48 89 e5             	mov    %rsp,%rbp
    3c32:	48 83 ec 20          	sub    $0x20,%rsp
    3c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3c3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3c42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3c46:	48 89 d0             	mov    %rdx,%rax
    3c49:	48 c1 e0 06          	shl    $0x6,%rax
    3c4d:	48 01 d0             	add    %rdx,%rax
    3c50:	48 c1 e0 02          	shl    $0x2,%rax
    3c54:	48 89 c2             	mov    %rax,%rdx
    3c57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3c5b:	48 89 d6             	mov    %rdx,%rsi
    3c5e:	48 89 c7             	mov    %rax,%rdi
    3c61:	e8 da e4 ff ff       	call   2140 <_ZdlPvm@plt>
      }
    3c66:	c9                   	leave
    3c67:	c3                   	ret

0000000000003c68 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    3c68:	55                   	push   %rbp
    3c69:	48 89 e5             	mov    %rsp,%rbp
    3c6c:	48 83 ec 10          	sub    $0x10,%rsp
    3c70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    3c74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c78:	48 89 c7             	mov    %rax,%rdi
    3c7b:	e8 3e 02 00 00       	call   3ebe <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>
      }
    3c80:	c9                   	leave
    3c81:	c3                   	ret

0000000000003c82 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    3c82:	55                   	push   %rbp
    3c83:	48 89 e5             	mov    %rsp,%rbp
    3c86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    3c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c8e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3c95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c99:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3ca0:	00 
    3ca1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ca5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3cac:	00 
	{ }
    3cad:	90                   	nop
    3cae:	5d                   	pop    %rbp
    3caf:	c3                   	ret

0000000000003cb0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    3cb0:	55                   	push   %rbp
    3cb1:	48 89 e5             	mov    %rsp,%rbp
    3cb4:	48 83 ec 10          	sub    $0x10,%rsp
    3cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    3cc0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3cc5:	74 15                	je     3cdc <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x2c>
    3cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ccb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ccf:	48 89 d6             	mov    %rdx,%rsi
    3cd2:	48 89 c7             	mov    %rax,%rdi
    3cd5:	e8 fe 01 00 00       	call   3ed8 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m>
    3cda:	eb 05                	jmp    3ce1 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm+0x31>
    3cdc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    3ce1:	c9                   	leave
    3ce2:	c3                   	ret

0000000000003ce3 <_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    3ce3:	55                   	push   %rbp
    3ce4:	48 89 e5             	mov    %rsp,%rbp
    3ce7:	48 83 ec 20          	sub    $0x20,%rsp
    3ceb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3cef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    3cf3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    3cf7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3cff:	48 89 d6             	mov    %rdx,%rsi
    3d02:	48 89 c7             	mov    %rax,%rdi
    3d05:	e8 f8 01 00 00       	call   3f02 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_>
    }
    3d0a:	c9                   	leave
    3d0b:	c3                   	ret

0000000000003d0c <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    3d0c:	55                   	push   %rbp
    3d0d:	48 89 e5             	mov    %rsp,%rbp
    3d10:	48 83 ec 10          	sub    $0x10,%rsp
    3d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    3d1c:	eb 19                	jmp    3d37 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    3d1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d22:	48 89 c7             	mov    %rax,%rdi
    3d25:	e8 1d 02 00 00       	call   3f47 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
    3d2a:	48 89 c7             	mov    %rax,%rdi
    3d2d:	e8 23 02 00 00       	call   3f55 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>
	  for (; __first != __last; ++__first)
    3d32:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    3d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d3b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    3d3f:	75 dd                	jne    3d1e <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_+0x12>
	}
    3d41:	90                   	nop
    3d42:	90                   	nop
    3d43:	c9                   	leave
    3d44:	c3                   	ret
    3d45:	90                   	nop

0000000000003d46 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS5_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    3d46:	55                   	push   %rbp
    3d47:	48 89 e5             	mov    %rsp,%rbp
    3d4a:	48 83 ec 20          	sub    $0x20,%rsp
    3d4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3d56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    3d5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d5e:	48 c1 e0 05          	shl    $0x5,%rax
    3d62:	48 89 c2             	mov    %rax,%rdx
    3d65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d69:	48 89 d6             	mov    %rdx,%rsi
    3d6c:	48 89 c7             	mov    %rax,%rdi
    3d6f:	e8 cc e3 ff ff       	call   2140 <_ZdlPvm@plt>
      }
    3d74:	c9                   	leave
    3d75:	c3                   	ret

0000000000003d76 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    3d76:	55                   	push   %rbp
    3d77:	48 89 e5             	mov    %rsp,%rbp
    3d7a:	48 83 ec 10          	sub    $0x10,%rsp
    3d7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    3d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d86:	48 89 c7             	mov    %rax,%rdi
    3d89:	e8 e2 01 00 00       	call   3f70 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    3d8e:	c9                   	leave
    3d8f:	c3                   	ret

0000000000003d90 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    3d90:	55                   	push   %rbp
    3d91:	48 89 e5             	mov    %rsp,%rbp
    3d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    3d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d9c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3da3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3dae:	00 
    3daf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3db3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3dba:	00 
	{ }
    3dbb:	90                   	nop
    3dbc:	5d                   	pop    %rbp
    3dbd:	c3                   	ret

0000000000003dbe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    3dbe:	55                   	push   %rbp
    3dbf:	48 89 e5             	mov    %rsp,%rbp
    3dc2:	48 83 ec 10          	sub    $0x10,%rsp
    3dc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    3dce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    3dd3:	74 15                	je     3dea <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    3dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dd9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ddd:	48 89 d6             	mov    %rdx,%rsi
    3de0:	48 89 c7             	mov    %rax,%rdi
    3de3:	e8 a2 01 00 00       	call   3f8a <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    3de8:	eb 05                	jmp    3def <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    3dea:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    3def:	c9                   	leave
    3df0:	c3                   	ret

0000000000003df1 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    3df1:	55                   	push   %rbp
    3df2:	48 89 e5             	mov    %rsp,%rbp
    3df5:	48 83 ec 20          	sub    $0x20,%rsp
    3df9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3dfd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    3e01:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    3e05:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3e09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e0d:	48 89 d6             	mov    %rdx,%rsi
    3e10:	48 89 c7             	mov    %rax,%rdi
    3e13:	e8 9c 01 00 00       	call   3fb4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    3e18:	c9                   	leave
    3e19:	c3                   	ret

0000000000003e1a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    3e1a:	55                   	push   %rbp
    3e1b:	48 89 e5             	mov    %rsp,%rbp
    3e1e:	48 83 ec 10          	sub    $0x10,%rsp
    3e22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    3e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e2a:	48 89 c7             	mov    %rax,%rdi
    3e2d:	e8 e0 01 00 00       	call   4012 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    3e32:	c9                   	leave
    3e33:	c3                   	ret

0000000000003e34 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    3e34:	55                   	push   %rbp
    3e35:	48 89 e5             	mov    %rsp,%rbp
    3e38:	48 83 ec 10          	sub    $0x10,%rsp
    3e3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    3e44:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e4c:	ba 00 00 00 00       	mov    $0x0,%edx
    3e51:	48 89 ce             	mov    %rcx,%rsi
    3e54:	48 89 c7             	mov    %rax,%rdi
    3e57:	e8 ca 01 00 00       	call   4026 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    3e5c:	c9                   	leave
    3e5d:	c3                   	ret

0000000000003e5e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    3e5e:	55                   	push   %rbp
    3e5f:	48 89 e5             	mov    %rsp,%rbp
    3e62:	48 83 ec 20          	sub    $0x20,%rsp
    3e66:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3e6a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    3e6e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3e73:	74 43                	je     3eb8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    3e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3e79:	48 89 c7             	mov    %rax,%rdi
    3e7c:	e8 10 02 00 00       	call   4091 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    3e81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    3e85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e89:	48 89 c7             	mov    %rax,%rdi
    3e8c:	e8 0e 02 00 00       	call   409f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    3e91:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    3e98:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    3e99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3e9d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    3ea1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ea5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ea9:	48 89 ce             	mov    %rcx,%rsi
    3eac:	48 89 c7             	mov    %rax,%rdi
    3eaf:	e8 45 02 00 00       	call   40f9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    3eb4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    3eb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    3ebc:	c9                   	leave
    3ebd:	c3                   	ret

0000000000003ebe <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    3ebe:	55                   	push   %rbp
    3ebf:	48 89 e5             	mov    %rsp,%rbp
    3ec2:	48 83 ec 10          	sub    $0x10,%rsp
    3ec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    3eca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ece:	48 89 c7             	mov    %rax,%rdi
    3ed1:	e8 68 02 00 00       	call   413e <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv>
    3ed6:	c9                   	leave
    3ed7:	c3                   	ret

0000000000003ed8 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m>:
      allocate(allocator_type& __a, size_type __n)
    3ed8:	55                   	push   %rbp
    3ed9:	48 89 e5             	mov    %rsp,%rbp
    3edc:	48 83 ec 10          	sub    $0x10,%rsp
    3ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ee4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    3ee8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ef0:	ba 00 00 00 00       	mov    $0x0,%edx
    3ef5:	48 89 ce             	mov    %rcx,%rsi
    3ef8:	48 89 c7             	mov    %rax,%rdi
    3efb:	e8 52 02 00 00       	call   4152 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>
    3f00:	c9                   	leave
    3f01:	c3                   	ret

0000000000003f02 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    3f02:	55                   	push   %rbp
    3f03:	48 89 e5             	mov    %rsp,%rbp
    3f06:	48 83 ec 20          	sub    $0x20,%rsp
    3f0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3f0e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    3f12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3f16:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    3f1a:	eb 1e                	jmp    3f3a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    3f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f20:	48 89 c7             	mov    %rax,%rdi
    3f23:	e8 1f 00 00 00       	call   3f47 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>
    3f28:	48 89 c7             	mov    %rax,%rdi
    3f2b:	e8 83 02 00 00       	call   41b3 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    3f30:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    3f35:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    3f3a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3f3f:	75 db                	jne    3f1c <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_+0x1a>
	      return __cur;
    3f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    3f45:	c9                   	leave
    3f46:	c3                   	ret

0000000000003f47 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    3f47:	55                   	push   %rbp
    3f48:	48 89 e5             	mov    %rsp,%rbp
    3f4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    3f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f53:	5d                   	pop    %rbp
    3f54:	c3                   	ret

0000000000003f55 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_>:
    _Destroy(_Tp* __pointer)
    3f55:	55                   	push   %rbp
    3f56:	48 89 e5             	mov    %rsp,%rbp
    3f59:	48 83 ec 10          	sub    $0x10,%rsp
    3f5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    3f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f65:	48 89 c7             	mov    %rax,%rdi
    3f68:	e8 33 e1 ff ff       	call   20a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    }
    3f6d:	90                   	nop
    3f6e:	c9                   	leave
    3f6f:	c3                   	ret

0000000000003f70 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    3f70:	55                   	push   %rbp
    3f71:	48 89 e5             	mov    %rsp,%rbp
    3f74:	48 83 ec 10          	sub    $0x10,%rsp
    3f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    3f7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f80:	48 89 c7             	mov    %rax,%rdi
    3f83:	e8 54 02 00 00       	call   41dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    3f88:	c9                   	leave
    3f89:	c3                   	ret

0000000000003f8a <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    3f8a:	55                   	push   %rbp
    3f8b:	48 89 e5             	mov    %rsp,%rbp
    3f8e:	48 83 ec 10          	sub    $0x10,%rsp
    3f92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    3f9a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fa2:	ba 00 00 00 00       	mov    $0x0,%edx
    3fa7:	48 89 ce             	mov    %rcx,%rsi
    3faa:	48 89 c7             	mov    %rax,%rdi
    3fad:	e8 3e 02 00 00       	call   41f0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    3fb2:	c9                   	leave
    3fb3:	c3                   	ret

0000000000003fb4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    3fb4:	55                   	push   %rbp
    3fb5:	48 89 e5             	mov    %rsp,%rbp
    3fb8:	48 83 ec 20          	sub    $0x20,%rsp
    3fbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3fc0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    3fc4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3fc9:	74 40                	je     400b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    3fcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3fcf:	48 89 c7             	mov    %rax,%rdi
    3fd2:	e8 7a 02 00 00       	call   4251 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    3fd7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    3fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fdf:	48 89 c7             	mov    %rax,%rdi
    3fe2:	e8 78 02 00 00       	call   425f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    3fe7:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    3fec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ff0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    3ff4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ff8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ffc:	48 89 ce             	mov    %rcx,%rsi
    3fff:	48 89 c7             	mov    %rax,%rdi
    4002:	e8 7f 02 00 00       	call   4286 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    4007:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    400b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    400f:	c9                   	leave
    4010:	c3                   	ret
    4011:	90                   	nop

0000000000004012 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    4012:	55                   	push   %rbp
    4013:	48 89 e5             	mov    %rsp,%rbp
    4016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    401a:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    4021:	07 7e 00 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    4024:	5d                   	pop    %rbp
    4025:	c3                   	ret

0000000000004026 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    4026:	55                   	push   %rbp
    4027:	48 89 e5             	mov    %rsp,%rbp
    402a:	48 83 ec 20          	sub    $0x20,%rsp
    402e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4032:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4036:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    403a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    403e:	48 89 c7             	mov    %rax,%rdi
    4041:	e8 cc ff ff ff       	call   4012 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    4046:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    404a:	0f 92 c0             	setb   %al
    404d:	0f b6 c0             	movzbl %al,%eax
    4050:	48 85 c0             	test   %rax,%rax
    4053:	0f 95 c0             	setne  %al
    4056:	84 c0                	test   %al,%al
    4058:	74 1a                	je     4074 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    405a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    4061:	0f fc 00 
    4064:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4068:	73 05                	jae    406f <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    406a:	e8 61 e0 ff ff       	call   20d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    406f:	e8 bc df ff ff       	call   2030 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4074:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4078:	48 89 d0             	mov    %rdx,%rax
    407b:	48 c1 e0 06          	shl    $0x6,%rax
    407f:	48 01 d0             	add    %rdx,%rax
    4082:	48 c1 e0 02          	shl    $0x2,%rax
    4086:	48 89 c7             	mov    %rax,%rdi
    4089:	e8 a2 e0 ff ff       	call   2130 <_Znwm@plt>
    408e:	90                   	nop
      }
    408f:	c9                   	leave
    4090:	c3                   	ret

0000000000004091 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    4091:	55                   	push   %rbp
    4092:	48 89 e5             	mov    %rsp,%rbp
    4095:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    4099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    409d:	5d                   	pop    %rbp
    409e:	c3                   	ret

000000000000409f <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    409f:	55                   	push   %rbp
    40a0:	48 89 e5             	mov    %rsp,%rbp
    40a3:	48 83 ec 10          	sub    $0x10,%rsp
    40a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    40ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40af:	48 89 c6             	mov    %rax,%rsi
    40b2:	bf 04 01 00 00       	mov    $0x104,%edi
    40b7:	e8 51 ee ff ff       	call   2f0d <_ZnwmPv>
    40bc:	b9 04 01 00 00       	mov    $0x104,%ecx
    40c1:	be 00 00 00 00       	mov    $0x0,%esi
    40c6:	48 89 30             	mov    %rsi,(%rax)
    40c9:	89 ca                	mov    %ecx,%edx
    40cb:	48 01 c2             	add    %rax,%rdx
    40ce:	48 83 c2 08          	add    $0x8,%rdx
    40d2:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    40d6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    40da:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    40de:	48 29 d0             	sub    %rdx,%rax
    40e1:	01 c1                	add    %eax,%ecx
    40e3:	83 e1 f8             	and    $0xfffffff8,%ecx
    40e6:	89 c8                	mov    %ecx,%eax
    40e8:	c1 e8 03             	shr    $0x3,%eax
    40eb:	89 c1                	mov    %eax,%ecx
    40ed:	48 89 d7             	mov    %rdx,%rdi
    40f0:	48 89 f0             	mov    %rsi,%rax
    40f3:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    40f6:	90                   	nop
    40f7:	c9                   	leave
    40f8:	c3                   	ret

00000000000040f9 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    40f9:	55                   	push   %rbp
    40fa:	48 89 e5             	mov    %rsp,%rbp
    40fd:	48 83 ec 20          	sub    $0x20,%rsp
    4101:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4105:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4109:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    410d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4111:	48 89 c7             	mov    %rax,%rdi
    4114:	e8 b1 01 00 00       	call   42ca <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    4119:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    411d:	48 89 c7             	mov    %rax,%rdi
    4120:	e8 fa ed ff ff       	call   2f1f <_ZSt17__size_to_integerm>
    4125:	48 89 c1             	mov    %rax,%rcx
    4128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    412c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4130:	48 89 ce             	mov    %rcx,%rsi
    4133:	48 89 c7             	mov    %rax,%rdi
    4136:	e8 9a 01 00 00       	call   42d5 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    413b:	c9                   	leave
    413c:	c3                   	ret
    413d:	90                   	nop

000000000000413e <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    413e:	55                   	push   %rbp
    413f:	48 89 e5             	mov    %rsp,%rbp
    4142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    4146:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    414d:	ff ff 03 
      }
    4150:	5d                   	pop    %rbp
    4151:	c3                   	ret

0000000000004152 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    4152:	55                   	push   %rbp
    4153:	48 89 e5             	mov    %rsp,%rbp
    4156:	48 83 ec 20          	sub    $0x20,%rsp
    415a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    415e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4162:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    4166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    416a:	48 89 c7             	mov    %rax,%rdi
    416d:	e8 cc ff ff ff       	call   413e <_ZNKSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE11_M_max_sizeEv>
    4172:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4176:	0f 92 c0             	setb   %al
    4179:	0f b6 c0             	movzbl %al,%eax
    417c:	48 85 c0             	test   %rax,%rax
    417f:	0f 95 c0             	setne  %al
    4182:	84 c0                	test   %al,%al
    4184:	74 1a                	je     41a0 <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4186:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
    418d:	ff ff 07 
    4190:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4194:	73 05                	jae    419b <_ZNSt15__new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    4196:	e8 35 df ff ff       	call   20d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    419b:	e8 90 de ff ff       	call   2030 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    41a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    41a4:	48 c1 e0 05          	shl    $0x5,%rax
    41a8:	48 89 c7             	mov    %rax,%rdi
    41ab:	e8 80 df ff ff       	call   2130 <_Znwm@plt>
    41b0:	90                   	nop
      }
    41b1:	c9                   	leave
    41b2:	c3                   	ret

00000000000041b3 <_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    41b3:	55                   	push   %rbp
    41b4:	48 89 e5             	mov    %rsp,%rbp
    41b7:	48 83 ec 10          	sub    $0x10,%rsp
    41bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    41bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41c3:	48 89 c6             	mov    %rax,%rsi
    41c6:	bf 20 00 00 00       	mov    $0x20,%edi
    41cb:	e8 3d ed ff ff       	call   2f0d <_ZnwmPv>
    41d0:	48 89 c7             	mov    %rax,%rdi
    41d3:	e8 f8 df ff ff       	call   21d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
    }
    41d8:	90                   	nop
    41d9:	c9                   	leave
    41da:	c3                   	ret
    41db:	90                   	nop

00000000000041dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    41dc:	55                   	push   %rbp
    41dd:	48 89 e5             	mov    %rsp,%rbp
    41e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    41e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    41eb:	ff ff 0f 
      }
    41ee:	5d                   	pop    %rbp
    41ef:	c3                   	ret

00000000000041f0 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    41f0:	55                   	push   %rbp
    41f1:	48 89 e5             	mov    %rsp,%rbp
    41f4:	48 83 ec 20          	sub    $0x20,%rsp
    41f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4200:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    4204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4208:	48 89 c7             	mov    %rax,%rdi
    420b:	e8 cc ff ff ff       	call   41dc <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    4210:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4214:	0f 92 c0             	setb   %al
    4217:	0f b6 c0             	movzbl %al,%eax
    421a:	48 85 c0             	test   %rax,%rax
    421d:	0f 95 c0             	setne  %al
    4220:	84 c0                	test   %al,%al
    4222:	74 1a                	je     423e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4224:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    422b:	ff ff 1f 
    422e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4232:	73 05                	jae    4239 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    4234:	e8 97 de ff ff       	call   20d0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4239:	e8 f2 dd ff ff       	call   2030 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    423e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4242:	48 c1 e0 03          	shl    $0x3,%rax
    4246:	48 89 c7             	mov    %rax,%rdi
    4249:	e8 e2 de ff ff       	call   2130 <_Znwm@plt>
    424e:	90                   	nop
      }
    424f:	c9                   	leave
    4250:	c3                   	ret

0000000000004251 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    4251:	55                   	push   %rbp
    4252:	48 89 e5             	mov    %rsp,%rbp
    4255:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    4259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    425d:	5d                   	pop    %rbp
    425e:	c3                   	ret

000000000000425f <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    425f:	55                   	push   %rbp
    4260:	48 89 e5             	mov    %rsp,%rbp
    4263:	48 83 ec 10          	sub    $0x10,%rsp
    4267:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    426b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    426f:	48 89 c6             	mov    %rax,%rsi
    4272:	bf 08 00 00 00       	mov    $0x8,%edi
    4277:	e8 91 ec ff ff       	call   2f0d <_ZnwmPv>
    427c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    4283:	90                   	nop
    4284:	c9                   	leave
    4285:	c3                   	ret

0000000000004286 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    4286:	55                   	push   %rbp
    4287:	48 89 e5             	mov    %rsp,%rbp
    428a:	48 83 ec 20          	sub    $0x20,%rsp
    428e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4296:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    429a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    429e:	48 89 c7             	mov    %rax,%rdi
    42a1:	e8 9e 00 00 00       	call   4344 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    42a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    42aa:	48 89 c7             	mov    %rax,%rdi
    42ad:	e8 6d ec ff ff       	call   2f1f <_ZSt17__size_to_integerm>
    42b2:	48 89 c1             	mov    %rax,%rcx
    42b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42bd:	48 89 ce             	mov    %rcx,%rsi
    42c0:	48 89 c7             	mov    %rax,%rdi
    42c3:	e8 87 00 00 00       	call   434f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    42c8:	c9                   	leave
    42c9:	c3                   	ret

00000000000042ca <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    42ca:	55                   	push   %rbp
    42cb:	48 89 e5             	mov    %rsp,%rbp
    42ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    42d2:	90                   	nop
    42d3:	5d                   	pop    %rbp
    42d4:	c3                   	ret

00000000000042d5 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    42d5:	55                   	push   %rbp
    42d6:	48 89 e5             	mov    %rsp,%rbp
    42d9:	48 83 ec 20          	sub    $0x20,%rsp
    42dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    42e9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    42ee:	75 06                	jne    42f6 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    42f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42f4:	eb 4c                	jmp    4342 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    42f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    42fa:	48 89 d0             	mov    %rdx,%rax
    42fd:	48 c1 e0 06          	shl    $0x6,%rax
    4301:	48 01 d0             	add    %rdx,%rax
    4304:	48 c1 e0 02          	shl    $0x2,%rax
    4308:	48 89 c2             	mov    %rax,%rdx
    430b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    430f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4313:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4317:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    431b:	48 89 ce             	mov    %rcx,%rsi
    431e:	48 89 c7             	mov    %rax,%rdi
    4321:	e8 86 00 00 00       	call   43ac <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    4326:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    432a:	48 89 d0             	mov    %rdx,%rax
    432d:	48 c1 e0 06          	shl    $0x6,%rax
    4331:	48 01 d0             	add    %rdx,%rax
    4334:	48 c1 e0 02          	shl    $0x2,%rax
    4338:	48 89 c2             	mov    %rax,%rdx
    433b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    433f:	48 01 d0             	add    %rdx,%rax
    }
    4342:	c9                   	leave
    4343:	c3                   	ret

0000000000004344 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    4344:	55                   	push   %rbp
    4345:	48 89 e5             	mov    %rsp,%rbp
    4348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    434c:	90                   	nop
    434d:	5d                   	pop    %rbp
    434e:	c3                   	ret

000000000000434f <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    434f:	55                   	push   %rbp
    4350:	48 89 e5             	mov    %rsp,%rbp
    4353:	48 83 ec 20          	sub    $0x20,%rsp
    4357:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    435b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    435f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    4363:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4368:	75 06                	jne    4370 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    436a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    436e:	eb 3a                	jmp    43aa <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    4370:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4374:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    437b:	00 
    437c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4380:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4384:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    438c:	48 89 ce             	mov    %rcx,%rsi
    438f:	48 89 c7             	mov    %rax,%rdi
    4392:	e8 43 00 00 00       	call   43da <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    4397:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    439b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    43a2:	00 
    43a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43a7:	48 01 d0             	add    %rdx,%rax
    }
    43aa:	c9                   	leave
    43ab:	c3                   	ret

00000000000043ac <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    43ac:	55                   	push   %rbp
    43ad:	48 89 e5             	mov    %rsp,%rbp
    43b0:	48 83 ec 20          	sub    $0x20,%rsp
    43b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    43c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    43c4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    43c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43cc:	48 89 ce             	mov    %rcx,%rsi
    43cf:	48 89 c7             	mov    %rax,%rdi
    43d2:	e8 31 00 00 00       	call   4408 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    43d7:	90                   	nop
    43d8:	c9                   	leave
    43d9:	c3                   	ret

00000000000043da <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    43da:	55                   	push   %rbp
    43db:	48 89 e5             	mov    %rsp,%rbp
    43de:	48 83 ec 20          	sub    $0x20,%rsp
    43e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    43ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    43f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    43f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43fa:	48 89 ce             	mov    %rcx,%rsi
    43fd:	48 89 c7             	mov    %rax,%rdi
    4400:	e8 7b 00 00 00       	call   4480 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    4405:	90                   	nop
    4406:	c9                   	leave
    4407:	c3                   	ret

0000000000004408 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    4408:	55                   	push   %rbp
    4409:	48 89 e5             	mov    %rsp,%rbp
    440c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4410:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4414:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    4418:	eb 58                	jmp    4472 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    441a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    441e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4422:	b9 04 01 00 00       	mov    $0x104,%ecx
    4427:	48 8b 32             	mov    (%rdx),%rsi
    442a:	48 89 30             	mov    %rsi,(%rax)
    442d:	89 ce                	mov    %ecx,%esi
    442f:	48 01 c6             	add    %rax,%rsi
    4432:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    4436:	89 ce                	mov    %ecx,%esi
    4438:	48 01 d6             	add    %rdx,%rsi
    443b:	48 83 c6 08          	add    $0x8,%rsi
    443f:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    4443:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    4447:	48 8d 78 08          	lea    0x8(%rax),%rdi
    444b:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    444f:	48 29 f8             	sub    %rdi,%rax
    4452:	48 29 c2             	sub    %rax,%rdx
    4455:	01 c1                	add    %eax,%ecx
    4457:	83 e1 f8             	and    $0xfffffff8,%ecx
    445a:	89 c8                	mov    %ecx,%eax
    445c:	c1 e8 03             	shr    $0x3,%eax
    445f:	89 c0                	mov    %eax,%eax
    4461:	48 89 d6             	mov    %rdx,%rsi
    4464:	48 89 c1             	mov    %rax,%rcx
    4467:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    446a:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    4471:	00 
    4472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4476:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    447a:	75 9e                	jne    441a <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    447c:	90                   	nop
    447d:	90                   	nop
    447e:	5d                   	pop    %rbp
    447f:	c3                   	ret

0000000000004480 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    4480:	55                   	push   %rbp
    4481:	48 89 e5             	mov    %rsp,%rbp
    4484:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4488:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    448c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    4490:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4494:	48 8b 00             	mov    (%rax),%rax
    4497:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    449b:	eb 10                	jmp    44ad <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    449d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    44a5:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    44a8:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    44ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    44b1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    44b5:	75 e6                	jne    449d <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    44b7:	90                   	nop
    44b8:	90                   	nop
    44b9:	5d                   	pop    %rbp
    44ba:	c3                   	ret

00000000000044bb <_ZN3vkh19makeApplicationInfoEPKc>:
#include "make_info.hpp"

namespace vkh {
VkApplicationInfo makeApplicationInfo(const char *pApplicationName) {
    44bb:	55                   	push   %rbp
    44bc:	48 89 e5             	mov    %rsp,%rbp
    44bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    44c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44cb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    44cf:	0f 11 00             	movups %xmm0,(%rax)
    44d2:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    44d6:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    44da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44de:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    44e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44ec:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    44f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44f4:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    44fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44ff:	48 8d 15 92 23 00 00 	lea    0x2392(%rip),%rdx        # 6898 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4506:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    450a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    450e:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    4515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4519:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    4520:	90                   	nop
}
    4521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4525:	5d                   	pop    %rbp
    4526:	c3                   	ret

0000000000004527 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcPKv>:

VkInstanceCreateInfo makeInstanceCreateInfo(
    const VkApplicationInfo *appInfo, uint32_t enabledLayerCount,
    const char *const *ppEnabledLayerNames, const void *pNext) {
    4527:	55                   	push   %rbp
    4528:	48 89 e5             	mov    %rsp,%rbp
    452b:	48 83 ec 40          	sub    $0x40,%rsp
    452f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4533:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4537:	89 55 dc             	mov    %edx,-0x24(%rbp)
    453a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    453e:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  VkInstanceCreateInfo createInfo{};
    4542:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4546:	66 0f ef c0          	pxor   %xmm0,%xmm0
    454a:	0f 11 00             	movups %xmm0,(%rax)
    454d:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4551:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4555:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    4559:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    455d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    4563:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4567:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    456b:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    456f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4573:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4577:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    457b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    457f:	8b 55 dc             	mov    -0x24(%rbp),%edx
    4582:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    4585:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4589:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    458d:	48 89 50 28          	mov    %rdx,0x28(%rax)

  createInfo.enabledLayerCount = 0;
    4591:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4595:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
  createInfo.ppEnabledLayerNames = nullptr;
    459c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45a0:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    45a7:	00 

  uint32_t glfwExtensionCount;
  const char **glfwExtensions;
  glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    45a8:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    45ac:	48 89 c7             	mov    %rax,%rdi
    45af:	e8 0c db ff ff       	call   20c0 <glfwGetRequiredInstanceExtensions@plt>
    45b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  createInfo.enabledExtensionCount = glfwExtensionCount;
    45b8:	8b 55 f4             	mov    -0xc(%rbp),%edx
    45bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45bf:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = glfwExtensions;
    45c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    45ca:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    45ce:	90                   	nop
}
    45cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    45d3:	c9                   	leave
    45d4:	c3                   	ret

Disassembly of section .fini:

00000000000045d8 <_fini>:
    45d8:	48 83 ec 08          	sub    $0x8,%rsp
    45dc:	48 83 c4 08          	add    $0x8,%rsp
    45e0:	c3                   	ret
