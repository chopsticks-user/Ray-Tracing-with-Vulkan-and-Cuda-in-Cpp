
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 1f 02 00 	mov    0x21fad(%rip),%rax        # 25fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 1f 02 00    	push   0x21fca(%rip)        # 25ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 1f 02 00    	jmp    *0x21fcc(%rip)        # 25ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 1f 02 00    	jmp    *0x21fca(%rip)        # 26000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 1f 02 00    	jmp    *0x21fc2(%rip)        # 26008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4050:	ff 25 ba 1f 02 00    	jmp    *0x21fba(%rip)        # 26010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZNSaIcED2Ev@plt>:
    4060:	ff 25 b2 1f 02 00    	jmp    *0x21fb2(%rip)        # 26018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4070:	ff 25 aa 1f 02 00    	jmp    *0x21faa(%rip)        # 26020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4080:	ff 25 a2 1f 02 00    	jmp    *0x21fa2(%rip)        # 26028 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSolsEm@plt>:
    4090:	ff 25 9a 1f 02 00    	jmp    *0x21f9a(%rip)        # 26030 <_ZNSolsEm@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <vkDeviceWaitIdle@plt>:
    40a0:	ff 25 92 1f 02 00    	jmp    *0x21f92(%rip)        # 26038 <vkDeviceWaitIdle@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40b0:	ff 25 8a 1f 02 00    	jmp    *0x21f8a(%rip)        # 26040 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDestroySwapchainKHR@plt>:
    40c0:	ff 25 82 1f 02 00    	jmp    *0x21f82(%rip)        # 26048 <vkDestroySwapchainKHR@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <glfwDestroyWindow@plt>:
    40d0:	ff 25 7a 1f 02 00    	jmp    *0x21f7a(%rip)        # 26050 <glfwDestroyWindow@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <_ZSt17__throw_bad_allocv@plt>:
    40e0:	ff 25 72 1f 02 00    	jmp    *0x21f72(%rip)        # 26058 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    40f0:	ff 25 6a 1f 02 00    	jmp    *0x21f6a(%rip)        # 26060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNSt13runtime_errorC1EPKc@plt>:
    4100:	ff 25 62 1f 02 00    	jmp    *0x21f62(%rip)        # 26068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <vkGetPhysicalDeviceProperties@plt>:
    4110:	ff 25 5a 1f 02 00    	jmp    *0x21f5a(%rip)        # 26070 <vkGetPhysicalDeviceProperties@Base>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <__cxa_begin_catch@plt>:
    4120:	ff 25 52 1f 02 00    	jmp    *0x21f52(%rip)        # 26078 <__cxa_begin_catch@CXXABI_1.3>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkCreateCommandPool@plt>:
    4130:	ff 25 4a 1f 02 00    	jmp    *0x21f4a(%rip)        # 26080 <vkCreateCommandPool@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <strlen@plt>:
    4140:	ff 25 42 1f 02 00    	jmp    *0x21f42(%rip)        # 26088 <strlen@GLIBC_2.2.5>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <memcmp@plt>:
    4150:	ff 25 3a 1f 02 00    	jmp    *0x21f3a(%rip)        # 26090 <memcmp@GLIBC_2.2.5>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <__cxa_allocate_exception@plt>:
    4160:	ff 25 32 1f 02 00    	jmp    *0x21f32(%rip)        # 26098 <__cxa_allocate_exception@CXXABI_1.3>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <_ZSt20__throw_length_errorPKc@plt>:
    4170:	ff 25 2a 1f 02 00    	jmp    *0x21f2a(%rip)        # 260a0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <vkEnumeratePhysicalDevices@plt>:
    4180:	ff 25 22 1f 02 00    	jmp    *0x21f22(%rip)        # 260a8 <vkEnumeratePhysicalDevices@Base>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <memset@plt>:
    4190:	ff 25 1a 1f 02 00    	jmp    *0x21f1a(%rip)        # 260b0 <memset@GLIBC_2.2.5>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <_ZNSaIcEC1ERKS_@plt>:
    41a0:	ff 25 12 1f 02 00    	jmp    *0x21f12(%rip)        # 260b8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <vkGetSwapchainImagesKHR@plt>:
    41b0:	ff 25 0a 1f 02 00    	jmp    *0x21f0a(%rip)        # 260c0 <vkGetSwapchainImagesKHR@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    41c0:	ff 25 02 1f 02 00    	jmp    *0x21f02(%rip)        # 260c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    41d0:	ff 25 fa 1e 02 00    	jmp    *0x21efa(%rip)        # 260d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <vkCreateRenderPass@plt>:
    41e0:	ff 25 f2 1e 02 00    	jmp    *0x21ef2(%rip)        # 260d8 <vkCreateRenderPass@Base>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    41f0:	ff 25 ea 1e 02 00    	jmp    *0x21eea(%rip)        # 260e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4200:	ff 25 e2 1e 02 00    	jmp    *0x21ee2(%rip)        # 260e8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4210:	ff 25 da 1e 02 00    	jmp    *0x21eda(%rip)        # 260f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZSt19__throw_logic_errorPKc@plt>:
    4220:	ff 25 d2 1e 02 00    	jmp    *0x21ed2(%rip)        # 260f8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <__cxa_free_exception@plt>:
    4230:	ff 25 ca 1e 02 00    	jmp    *0x21eca(%rip)        # 26100 <__cxa_free_exception@CXXABI_1.3>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4240:	ff 25 c2 1e 02 00    	jmp    *0x21ec2(%rip)        # 26108 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <glfwGetRequiredInstanceExtensions@plt>:
    4250:	ff 25 ba 1e 02 00    	jmp    *0x21eba(%rip)        # 26110 <glfwGetRequiredInstanceExtensions@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4260:	ff 25 b2 1e 02 00    	jmp    *0x21eb2(%rip)        # 26118 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <vkCreateShaderModule@plt>:
    4270:	ff 25 aa 1e 02 00    	jmp    *0x21eaa(%rip)        # 26120 <vkCreateShaderModule@Base>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4280:	ff 25 a2 1e 02 00    	jmp    *0x21ea2(%rip)        # 26128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <vkDestroyDevice@plt>:
    4290:	ff 25 9a 1e 02 00    	jmp    *0x21e9a(%rip)        # 26130 <vkDestroyDevice@Base>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <vkCreatePipelineLayout@plt>:
    42a0:	ff 25 92 1e 02 00    	jmp    *0x21e92(%rip)        # 26138 <vkCreatePipelineLayout@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <vkEnumerateInstanceExtensionProperties@plt>:
    42b0:	ff 25 8a 1e 02 00    	jmp    *0x21e8a(%rip)        # 26140 <vkEnumerateInstanceExtensionProperties@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    42c0:	ff 25 82 1e 02 00    	jmp    *0x21e82(%rip)        # 26148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <glfwWindowHint@plt>:
    42d0:	ff 25 7a 1e 02 00    	jmp    *0x21e7a(%rip)        # 26150 <glfwWindowHint@Base>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    42e0:	ff 25 72 1e 02 00    	jmp    *0x21e72(%rip)        # 26158 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <__cxa_atexit@plt>:
    42f0:	ff 25 6a 1e 02 00    	jmp    *0x21e6a(%rip)        # 26160 <__cxa_atexit@GLIBC_2.2.5>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4300:	ff 25 62 1e 02 00    	jmp    *0x21e62(%rip)        # 26168 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkAllocateCommandBuffers@plt>:
    4310:	ff 25 5a 1e 02 00    	jmp    *0x21e5a(%rip)        # 26170 <vkAllocateCommandBuffers@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkGetPhysicalDeviceProperties2@plt>:
    4320:	ff 25 52 1e 02 00    	jmp    *0x21e52(%rip)        # 26178 <vkGetPhysicalDeviceProperties2@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkGetInstanceProcAddr@plt>:
    4330:	ff 25 4a 1e 02 00    	jmp    *0x21e4a(%rip)        # 26180 <vkGetInstanceProcAddr@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <glfwPollEvents@plt>:
    4340:	ff 25 42 1e 02 00    	jmp    *0x21e42(%rip)        # 26188 <glfwPollEvents@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <vkDestroyRenderPass@plt>:
    4350:	ff 25 3a 1e 02 00    	jmp    *0x21e3a(%rip)        # 26190 <vkDestroyRenderPass@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4360:	ff 25 32 1e 02 00    	jmp    *0x21e32(%rip)        # 26198 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <_Znwm@plt>:
    4370:	ff 25 2a 1e 02 00    	jmp    *0x21e2a(%rip)        # 261a0 <_Znwm@GLIBCXX_3.4>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <_ZdlPvm@plt>:
    4380:	ff 25 22 1e 02 00    	jmp    *0x21e22(%rip)        # 261a8 <_ZdlPvm@CXXABI_1.3.9>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <vkDestroyInstance@plt>:
    4390:	ff 25 1a 1e 02 00    	jmp    *0x21e1a(%rip)        # 261b0 <vkDestroyInstance@Base>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <glfwTerminate@plt>:
    43a0:	ff 25 12 1e 02 00    	jmp    *0x21e12(%rip)        # 261b8 <glfwTerminate@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkCreateImageView@plt>:
    43b0:	ff 25 0a 1e 02 00    	jmp    *0x21e0a(%rip)        # 261c0 <vkCreateImageView@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    43c0:	ff 25 02 1e 02 00    	jmp    *0x21e02(%rip)        # 261c8 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <_ZNSolsEPFRSoS_E@plt>:
    43d0:	ff 25 fa 1d 02 00    	jmp    *0x21dfa(%rip)        # 261d0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    43e0:	ff 25 f2 1d 02 00    	jmp    *0x21df2(%rip)        # 261d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    43f0:	ff 25 ea 1d 02 00    	jmp    *0x21dea(%rip)        # 261e0 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4400:	ff 25 e2 1d 02 00    	jmp    *0x21de2(%rip)        # 261e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZNSaIcED1Ev@plt>:
    4410:	ff 25 da 1d 02 00    	jmp    *0x21dda(%rip)        # 261f0 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkDestroyPipeline@plt>:
    4420:	ff 25 d2 1d 02 00    	jmp    *0x21dd2(%rip)        # 261f8 <vkDestroyPipeline@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4430:	ff 25 ca 1d 02 00    	jmp    *0x21dca(%rip)        # 26200 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4440:	ff 25 c2 1d 02 00    	jmp    *0x21dc2(%rip)        # 26208 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <vkEnumerateInstanceLayerProperties@plt>:
    4450:	ff 25 ba 1d 02 00    	jmp    *0x21dba(%rip)        # 26210 <vkEnumerateInstanceLayerProperties@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <glfwInit@plt>:
    4460:	ff 25 b2 1d 02 00    	jmp    *0x21db2(%rip)        # 26218 <glfwInit@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4470:	ff 25 aa 1d 02 00    	jmp    *0x21daa(%rip)        # 26220 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <vkCreateSwapchainKHR@plt>:
    4480:	ff 25 a2 1d 02 00    	jmp    *0x21da2(%rip)        # 26228 <vkCreateSwapchainKHR@Base>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    4490:	ff 25 9a 1d 02 00    	jmp    *0x21d9a(%rip)        # 26230 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <vkDestroyShaderModule@plt>:
    44a0:	ff 25 92 1d 02 00    	jmp    *0x21d92(%rip)        # 26238 <vkDestroyShaderModule@Base>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkCreateInstance@plt>:
    44b0:	ff 25 8a 1d 02 00    	jmp    *0x21d8a(%rip)        # 26240 <vkCreateInstance@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    44c0:	ff 25 82 1d 02 00    	jmp    *0x21d82(%rip)        # 26248 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkDestroyPipelineLayout@plt>:
    44d0:	ff 25 7a 1d 02 00    	jmp    *0x21d7a(%rip)        # 26250 <vkDestroyPipelineLayout@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZNSi4readEPcl@plt>:
    44e0:	ff 25 72 1d 02 00    	jmp    *0x21d72(%rip)        # 26258 <_ZNSi4readEPcl@GLIBCXX_3.4>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    44f0:	ff 25 6a 1d 02 00    	jmp    *0x21d6a(%rip)        # 26260 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4500:	ff 25 62 1d 02 00    	jmp    *0x21d62(%rip)        # 26268 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4510:	ff 25 5a 1d 02 00    	jmp    *0x21d5a(%rip)        # 26270 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    4520:	ff 25 52 1d 02 00    	jmp    *0x21d52(%rip)        # 26278 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <vkGetDeviceQueue@plt>:
    4530:	ff 25 4a 1d 02 00    	jmp    *0x21d4a(%rip)        # 26280 <vkGetDeviceQueue@Base>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <_ZNSolsEj@plt>:
    4540:	ff 25 42 1d 02 00    	jmp    *0x21d42(%rip)        # 26288 <_ZNSolsEj@GLIBCXX_3.4>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4550:	ff 25 3a 1d 02 00    	jmp    *0x21d3a(%rip)        # 26290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4560:	ff 25 32 1d 02 00    	jmp    *0x21d32(%rip)        # 26298 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <vkEnumerateDeviceExtensionProperties@plt>:
    4570:	ff 25 2a 1d 02 00    	jmp    *0x21d2a(%rip)        # 262a0 <vkEnumerateDeviceExtensionProperties@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    4580:	ff 25 22 1d 02 00    	jmp    *0x21d22(%rip)        # 262a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <vkDestroyCommandPool@plt>:
    4590:	ff 25 1a 1d 02 00    	jmp    *0x21d1a(%rip)        # 262b0 <vkDestroyCommandPool@Base>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <_ZNSaIcEC2ERKS_@plt>:
    45a0:	ff 25 12 1d 02 00    	jmp    *0x21d12(%rip)        # 262b8 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <__cxa_rethrow@plt>:
    45b0:	ff 25 0a 1d 02 00    	jmp    *0x21d0a(%rip)        # 262c0 <__cxa_rethrow@CXXABI_1.3>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkCreateDevice@plt>:
    45c0:	ff 25 02 1d 02 00    	jmp    *0x21d02(%rip)        # 262c8 <vkCreateDevice@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSt8ios_base4InitC1Ev@plt>:
    45d0:	ff 25 fa 1c 02 00    	jmp    *0x21cfa(%rip)        # 262d0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <glfwCreateWindowSurface@plt>:
    45e0:	ff 25 f2 1c 02 00    	jmp    *0x21cf2(%rip)        # 262d8 <glfwCreateWindowSurface@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <glfwCreateWindow@plt>:
    45f0:	ff 25 ea 1c 02 00    	jmp    *0x21cea(%rip)        # 262e0 <glfwCreateWindow@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    4600:	ff 25 e2 1c 02 00    	jmp    *0x21ce2(%rip)        # 262e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4610:	ff 25 da 1c 02 00    	jmp    *0x21cda(%rip)        # 262f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4620:	ff 25 d2 1c 02 00    	jmp    *0x21cd2(%rip)        # 262f8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4630:	ff 25 ca 1c 02 00    	jmp    *0x21cca(%rip)        # 26300 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <memmove@plt>:
    4640:	ff 25 c2 1c 02 00    	jmp    *0x21cc2(%rip)        # 26308 <memmove@GLIBC_2.2.5>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <__cxa_end_catch@plt>:
    4650:	ff 25 ba 1c 02 00    	jmp    *0x21cba(%rip)        # 26310 <__cxa_end_catch@CXXABI_1.3>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <__cxa_throw@plt>:
    4660:	ff 25 b2 1c 02 00    	jmp    *0x21cb2(%rip)        # 26318 <__cxa_throw@CXXABI_1.3>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    4670:	ff 25 aa 1c 02 00    	jmp    *0x21caa(%rip)        # 26320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4680:	ff 25 a2 1c 02 00    	jmp    *0x21ca2(%rip)        # 26328 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSolsEi@plt>:
    4690:	ff 25 9a 1c 02 00    	jmp    *0x21c9a(%rip)        # 26330 <_ZNSolsEi@GLIBCXX_3.4>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <_ZNSi5tellgEv@plt>:
    46a0:	ff 25 92 1c 02 00    	jmp    *0x21c92(%rip)        # 26338 <_ZNSi5tellgEv@GLIBCXX_3.4>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <vkDestroySurfaceKHR@plt>:
    46b0:	ff 25 8a 1c 02 00    	jmp    *0x21c8a(%rip)        # 26340 <vkDestroySurfaceKHR@Base>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <_Unwind_Resume@plt>:
    46c0:	ff 25 82 1c 02 00    	jmp    *0x21c82(%rip)        # 26348 <_Unwind_Resume@GCC_3.0>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSaIcEC1Ev@plt>:
    46d0:	ff 25 7a 1c 02 00    	jmp    *0x21c7a(%rip)        # 26350 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <vkDestroyImageView@plt>:
    46e0:	ff 25 72 1c 02 00    	jmp    *0x21c72(%rip)        # 26358 <vkDestroyImageView@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    46f0:	ff 25 6a 1c 02 00    	jmp    *0x21c6a(%rip)        # 26360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSt9exceptionD2Ev@plt>:
    4700:	ff 25 62 1c 02 00    	jmp    *0x21c62(%rip)        # 26368 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <glfwWindowShouldClose@plt>:
    4710:	ff 25 5a 1c 02 00    	jmp    *0x21c5a(%rip)        # 26370 <glfwWindowShouldClose@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <_ZNSolsEd@plt>:
    4720:	ff 25 52 1c 02 00    	jmp    *0x21c52(%rip)        # 26378 <_ZNSolsEd@GLIBCXX_3.4>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4730:	ff 25 4a 1c 02 00    	jmp    *0x21c4a(%rip)        # 26380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4740:	ff 25 42 1c 02 00    	jmp    *0x21c42(%rip)        # 26388 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004750 <__cxa_finalize@plt>:
    4750:	ff 25 3a 18 02 00    	jmp    *0x2183a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4756:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004760 <_start>:
    4760:	31 ed                	xor    %ebp,%ebp
    4762:	49 89 d1             	mov    %rdx,%r9
    4765:	5e                   	pop    %rsi
    4766:	48 89 e2             	mov    %rsp,%rdx
    4769:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    476d:	50                   	push   %rax
    476e:	54                   	push   %rsp
    476f:	45 31 c0             	xor    %r8d,%r8d
    4772:	31 c9                	xor    %ecx,%ecx
    4774:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4924 <main>
    477b:	ff 15 1f 18 02 00    	call   *0x2181f(%rip)        # 25fa0 <__libc_start_main@GLIBC_2.34>
    4781:	f4                   	hlt
    4782:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4789:	00 00 00 
    478c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004790 <deregister_tm_clones>:
    4790:	48 8d 3d 19 1c 02 00 	lea    0x21c19(%rip),%rdi        # 263b0 <__TMC_END__>
    4797:	48 8d 05 12 1c 02 00 	lea    0x21c12(%rip),%rax        # 263b0 <__TMC_END__>
    479e:	48 39 f8             	cmp    %rdi,%rax
    47a1:	74 15                	je     47b8 <deregister_tm_clones+0x28>
    47a3:	48 8b 05 06 18 02 00 	mov    0x21806(%rip),%rax        # 25fb0 <_ITM_deregisterTMCloneTable@Base>
    47aa:	48 85 c0             	test   %rax,%rax
    47ad:	74 09                	je     47b8 <deregister_tm_clones+0x28>
    47af:	ff e0                	jmp    *%rax
    47b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    47b8:	c3                   	ret
    47b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000047c0 <register_tm_clones>:
    47c0:	48 8d 3d e9 1b 02 00 	lea    0x21be9(%rip),%rdi        # 263b0 <__TMC_END__>
    47c7:	48 8d 35 e2 1b 02 00 	lea    0x21be2(%rip),%rsi        # 263b0 <__TMC_END__>
    47ce:	48 29 fe             	sub    %rdi,%rsi
    47d1:	48 89 f0             	mov    %rsi,%rax
    47d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    47d8:	48 c1 f8 03          	sar    $0x3,%rax
    47dc:	48 01 c6             	add    %rax,%rsi
    47df:	48 d1 fe             	sar    %rsi
    47e2:	74 14                	je     47f8 <register_tm_clones+0x38>
    47e4:	48 8b 05 d5 17 02 00 	mov    0x217d5(%rip),%rax        # 25fc0 <_ITM_registerTMCloneTable@Base>
    47eb:	48 85 c0             	test   %rax,%rax
    47ee:	74 08                	je     47f8 <register_tm_clones+0x38>
    47f0:	ff e0                	jmp    *%rax
    47f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    47f8:	c3                   	ret
    47f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004800 <__do_global_dtors_aux>:
    4800:	f3 0f 1e fa          	endbr64
    4804:	80 3d e5 1d 02 00 00 	cmpb   $0x0,0x21de5(%rip)        # 265f0 <completed.0>
    480b:	75 2b                	jne    4838 <__do_global_dtors_aux+0x38>
    480d:	55                   	push   %rbp
    480e:	48 83 3d 7a 17 02 00 	cmpq   $0x0,0x2177a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4815:	00 
    4816:	48 89 e5             	mov    %rsp,%rbp
    4819:	74 0c                	je     4827 <__do_global_dtors_aux+0x27>
    481b:	48 8b 3d 76 1b 02 00 	mov    0x21b76(%rip),%rdi        # 26398 <__dso_handle>
    4822:	e8 29 ff ff ff       	call   4750 <__cxa_finalize@plt>
    4827:	e8 64 ff ff ff       	call   4790 <deregister_tm_clones>
    482c:	c6 05 bd 1d 02 00 01 	movb   $0x1,0x21dbd(%rip)        # 265f0 <completed.0>
    4833:	5d                   	pop    %rbp
    4834:	c3                   	ret
    4835:	0f 1f 00             	nopl   (%rax)
    4838:	c3                   	ret
    4839:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004840 <frame_dummy>:
    4840:	f3 0f 1e fa          	endbr64
    4844:	e9 77 ff ff ff       	jmp    47c0 <register_tm_clones>

0000000000004849 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    4849:	55                   	push   %rbp
    484a:	48 89 e5             	mov    %rsp,%rbp
    484d:	53                   	push   %rbx
    484e:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
  VulkanApp app;
    4855:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    485c:	48 89 c7             	mov    %rax,%rdi
    485f:	e8 da a1 00 00       	call   ea3e <_ZN9VulkanAppC1Ev>
  app.run();
    4864:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    486b:	48 89 c7             	mov    %rax,%rdi
    486e:	e8 23 a6 00 00       	call   ee96 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4873:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4877:	48 89 c7             	mov    %rax,%rdi
    487a:	e8 51 fe ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    487f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4883:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4887:	48 8d 0d 56 1d 01 00 	lea    0x11d56(%rip),%rcx        # 165e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    488e:	48 89 ce             	mov    %rcx,%rsi
    4891:	48 89 c7             	mov    %rax,%rdi
    4894:	e8 77 02 00 00       	call   4b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4899:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    489d:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    48a4:	48 89 d6             	mov    %rdx,%rsi
    48a7:	48 89 c7             	mov    %rax,%rdi
    48aa:	e8 2b a7 00 00       	call   efda <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    48af:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48b3:	48 89 c7             	mov    %rax,%rdi
    48b6:	e8 15 f9 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48bb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48bf:	48 89 c7             	mov    %rax,%rdi
    48c2:	e8 49 fb ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    48c7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    48cc:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    48d3:	48 89 c7             	mov    %rax,%rdi
    48d6:	e8 dd a3 00 00       	call   ecb8 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    48db:	89 d8                	mov    %ebx,%eax
    48dd:	eb 3f                	jmp    491e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    48df:	48 89 c3             	mov    %rax,%rbx
    48e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48e6:	48 89 c7             	mov    %rax,%rdi
    48e9:	e8 e2 f8 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48ee:	eb 03                	jmp    48f3 <_Z14protected_mainv+0xaa>
    48f0:	48 89 c3             	mov    %rax,%rbx
    48f3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48f7:	48 89 c7             	mov    %rax,%rdi
    48fa:	e8 11 fb ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    48ff:	eb 03                	jmp    4904 <_Z14protected_mainv+0xbb>
}
    4901:	48 89 c3             	mov    %rax,%rbx
    4904:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    490b:	48 89 c7             	mov    %rax,%rdi
    490e:	e8 a5 a3 00 00       	call   ecb8 <_ZN9VulkanAppD1Ev>
    4913:	48 89 d8             	mov    %rbx,%rax
    4916:	48 89 c7             	mov    %rax,%rdi
    4919:	e8 a2 fd ff ff       	call   46c0 <_Unwind_Resume@plt>
    491e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4922:	c9                   	leave
    4923:	c3                   	ret

0000000000004924 <main>:

int main() {
    4924:	55                   	push   %rbp
    4925:	48 89 e5             	mov    %rsp,%rbp
    4928:	53                   	push   %rbx
    4929:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    492d:	e8 17 ff ff ff       	call   4849 <_Z14protected_mainv>
    4932:	e9 aa 00 00 00       	jmp    49e1 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4937:	b8 01 00 00 00       	mov    $0x1,%eax
    493c:	e9 a0 00 00 00       	jmp    49e1 <main+0xbd>
  } catch (const std::exception &e) {
    4941:	48 83 fa 01          	cmp    $0x1,%rdx
    4945:	75 49                	jne    4990 <main+0x6c>
    4947:	48 89 c7             	mov    %rax,%rdi
    494a:	e8 d1 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    494f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4953:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4957:	48 8b 00             	mov    (%rax),%rax
    495a:	48 83 c0 10          	add    $0x10,%rax
    495e:	48 8b 10             	mov    (%rax),%rdx
    4961:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4965:	48 89 c7             	mov    %rax,%rdi
    4968:	ff d2                	call   *%rdx
    496a:	48 89 c6             	mov    %rax,%rsi
    496d:	48 8d 05 6c 1b 02 00 	lea    0x21b6c(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    4974:	48 89 c7             	mov    %rax,%rdi
    4977:	e8 e4 f9 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    497c:	be 0a 00 00 00       	mov    $0xa,%esi
    4981:	48 89 c7             	mov    %rax,%rdi
    4984:	e8 e7 fa ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4989:	e8 c2 fc ff ff       	call   4650 <__cxa_end_catch@plt>
    498e:	eb a7                	jmp    4937 <main+0x13>
    4990:	48 89 c7             	mov    %rax,%rdi
    4993:	e8 88 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4998:	48 8d 05 4e 1c 01 00 	lea    0x11c4e(%rip),%rax        # 165ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    499f:	48 89 c6             	mov    %rax,%rsi
    49a2:	48 8d 05 37 1b 02 00 	lea    0x21b37(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    49a9:	48 89 c7             	mov    %rax,%rdi
    49ac:	e8 af f9 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    49b1:	e8 9a fc ff ff       	call   4650 <__cxa_end_catch@plt>
    49b6:	e9 7c ff ff ff       	jmp    4937 <main+0x13>
  } catch (...) {
    49bb:	48 89 c3             	mov    %rax,%rbx
    49be:	e8 8d fc ff ff       	call   4650 <__cxa_end_catch@plt>
    49c3:	48 89 d8             	mov    %rbx,%rax
    49c6:	48 89 c7             	mov    %rax,%rdi
    49c9:	e8 f2 fc ff ff       	call   46c0 <_Unwind_Resume@plt>
  }
    49ce:	48 89 c3             	mov    %rax,%rbx
    49d1:	e8 7a fc ff ff       	call   4650 <__cxa_end_catch@plt>
    49d6:	48 89 d8             	mov    %rbx,%rax
    49d9:	48 89 c7             	mov    %rax,%rdi
    49dc:	e8 df fc ff ff       	call   46c0 <_Unwind_Resume@plt>
    49e1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49e5:	c9                   	leave
    49e6:	c3                   	ret

00000000000049e7 <_Z41__static_initialization_and_destruction_0ii>:
    49e7:	55                   	push   %rbp
    49e8:	48 89 e5             	mov    %rsp,%rbp
    49eb:	48 83 ec 10          	sub    $0x10,%rsp
    49ef:	89 7d fc             	mov    %edi,-0x4(%rbp)
    49f2:	89 75 f8             	mov    %esi,-0x8(%rbp)
    49f5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    49f9:	75 3b                	jne    4a36 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    49fb:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    4a02:	75 32                	jne    4a36 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4a04:	48 8d 05 e6 1b 02 00 	lea    0x21be6(%rip),%rax        # 265f1 <_ZStL8__ioinit>
    4a0b:	48 89 c7             	mov    %rax,%rdi
    4a0e:	e8 bd fb ff ff       	call   45d0 <_ZNSt8ios_base4InitC1Ev@plt>
    4a13:	48 8d 05 7e 19 02 00 	lea    0x2197e(%rip),%rax        # 26398 <__dso_handle>
    4a1a:	48 89 c2             	mov    %rax,%rdx
    4a1d:	48 8d 05 cd 1b 02 00 	lea    0x21bcd(%rip),%rax        # 265f1 <_ZStL8__ioinit>
    4a24:	48 89 c6             	mov    %rax,%rsi
    4a27:	48 8b 05 9a 15 02 00 	mov    0x2159a(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4a2e:	48 89 c7             	mov    %rax,%rdi
    4a31:	e8 ba f8 ff ff       	call   42f0 <__cxa_atexit@plt>
    4a36:	90                   	nop
    4a37:	c9                   	leave
    4a38:	c3                   	ret

0000000000004a39 <_GLOBAL__sub_I__Z14protected_mainv>:
    4a39:	55                   	push   %rbp
    4a3a:	48 89 e5             	mov    %rsp,%rbp
    4a3d:	be ff ff 00 00       	mov    $0xffff,%esi
    4a42:	bf 01 00 00 00       	mov    $0x1,%edi
    4a47:	e8 9b ff ff ff       	call   49e7 <_Z41__static_initialization_and_destruction_0ii>
    4a4c:	5d                   	pop    %rbp
    4a4d:	c3                   	ret

0000000000004a4e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4a4e:	55                   	push   %rbp
    4a4f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4a52:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4a57:	5d                   	pop    %rbp
    4a58:	c3                   	ret

0000000000004a59 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4a59:	55                   	push   %rbp
    4a5a:	48 89 e5             	mov    %rsp,%rbp
    4a5d:	48 83 ec 10          	sub    $0x10,%rsp
    4a61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4a65:	e8 e4 ff ff ff       	call   4a4e <_ZSt23__is_constant_evaluatedv>
    4a6a:	84 c0                	test   %al,%al
    4a6c:	74 0e                	je     4a7c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a72:	48 89 c7             	mov    %rax,%rdi
    4a75:	e8 12 00 00 00       	call   4a8c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4a7a:	eb 0d                	jmp    4a89 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a80:	48 89 c7             	mov    %rax,%rdi
    4a83:	e8 b8 f6 ff ff       	call   4140 <strlen@plt>
    4a88:	90                   	nop
      }
    4a89:	c9                   	leave
    4a8a:	c3                   	ret
    4a8b:	90                   	nop

0000000000004a8c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4a8c:	55                   	push   %rbp
    4a8d:	48 89 e5             	mov    %rsp,%rbp
    4a90:	48 83 ec 20          	sub    $0x20,%rsp
    4a94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4a98:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4a9f:	00 
      while (!eq(__p[__i], char_type()))
    4aa0:	eb 05                	jmp    4aa7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4aa2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4aa7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4aab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab3:	48 01 c2             	add    %rax,%rdx
    4ab6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4aba:	48 89 c6             	mov    %rax,%rsi
    4abd:	48 89 d7             	mov    %rdx,%rdi
    4ac0:	e8 0d 00 00 00       	call   4ad2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4ac5:	83 f0 01             	xor    $0x1,%eax
    4ac8:	84 c0                	test   %al,%al
    4aca:	75 d6                	jne    4aa2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4acc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4ad0:	c9                   	leave
    4ad1:	c3                   	ret

0000000000004ad2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4ad2:	55                   	push   %rbp
    4ad3:	48 89 e5             	mov    %rsp,%rbp
    4ad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ada:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ae2:	0f b6 10             	movzbl (%rax),%edx
    4ae5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ae9:	0f b6 00             	movzbl (%rax),%eax
    4aec:	38 c2                	cmp    %al,%dl
    4aee:	0f 94 c0             	sete   %al
    4af1:	5d                   	pop    %rbp
    4af2:	c3                   	ret
    4af3:	90                   	nop

0000000000004af4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4af4:	55                   	push   %rbp
    4af5:	48 89 e5             	mov    %rsp,%rbp
    4af8:	48 83 ec 10          	sub    $0x10,%rsp
    4afc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b04:	48 89 c7             	mov    %rax,%rdi
    4b07:	e8 54 f5 ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    4b0c:	90                   	nop
    4b0d:	c9                   	leave
    4b0e:	c3                   	ret
    4b0f:	90                   	nop

0000000000004b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4b10:	55                   	push   %rbp
    4b11:	48 89 e5             	mov    %rsp,%rbp
    4b14:	53                   	push   %rbx
    4b15:	48 83 ec 38          	sub    $0x38,%rsp
    4b19:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b1d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b21:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4b25:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4b29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b2d:	48 89 c7             	mov    %rax,%rdi
    4b30:	e8 4b f7 ff ff       	call   4280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4b35:	48 89 c1             	mov    %rax,%rcx
    4b38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b3c:	48 89 c2             	mov    %rax,%rdx
    4b3f:	48 89 ce             	mov    %rcx,%rsi
    4b42:	48 89 df             	mov    %rbx,%rdi
    4b45:	e8 96 f8 ff ff       	call   43e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4b4a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4b4f:	75 0f                	jne    4b60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4b51:	48 8d 05 b0 1a 01 00 	lea    0x11ab0(%rip),%rax        # 16608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4b58:	48 89 c7             	mov    %rax,%rdi
    4b5b:	e8 c0 f6 ff ff       	call   4220 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4b60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b64:	48 89 c7             	mov    %rax,%rdi
    4b67:	e8 ed fe ff ff       	call   4a59 <_ZNSt11char_traitsIcE6lengthEPKc>
    4b6c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4b70:	48 01 d0             	add    %rdx,%rax
    4b73:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4b77:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b7b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4b7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b83:	48 89 ce             	mov    %rcx,%rsi
    4b86:	48 89 c7             	mov    %rax,%rdi
    4b89:	e8 66 00 00 00       	call   4bf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4b8e:	eb 1a                	jmp    4baa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4b90:	48 89 c3             	mov    %rax,%rbx
    4b93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b97:	48 89 c7             	mov    %rax,%rdi
    4b9a:	e8 55 ff ff ff       	call   4af4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4b9f:	48 89 d8             	mov    %rbx,%rax
    4ba2:	48 89 c7             	mov    %rax,%rdi
    4ba5:	e8 16 fb ff ff       	call   46c0 <_Unwind_Resume@plt>
    4baa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bae:	c9                   	leave
    4baf:	c3                   	ret

0000000000004bb0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4bb0:	55                   	push   %rbp
    4bb1:	48 89 e5             	mov    %rsp,%rbp
    4bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4bc4:	48 89 10             	mov    %rdx,(%rax)
    4bc7:	90                   	nop
    4bc8:	5d                   	pop    %rbp
    4bc9:	c3                   	ret

0000000000004bca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4bca:	55                   	push   %rbp
    4bcb:	48 89 e5             	mov    %rsp,%rbp
    4bce:	48 83 ec 10          	sub    $0x10,%rsp
    4bd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bda:	48 8b 00             	mov    (%rax),%rax
    4bdd:	48 85 c0             	test   %rax,%rax
    4be0:	74 0f                	je     4bf1 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4be2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4be6:	48 8b 00             	mov    (%rax),%rax
    4be9:	48 89 c7             	mov    %rax,%rdi
    4bec:	e8 cf f8 ff ff       	call   44c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4bf1:	90                   	nop
    4bf2:	c9                   	leave
    4bf3:	c3                   	ret

0000000000004bf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4bf4:	55                   	push   %rbp
    4bf5:	48 89 e5             	mov    %rsp,%rbp
    4bf8:	48 83 ec 40          	sub    $0x40,%rsp
    4bfc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c00:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c04:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4c08:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c10:	48 89 d6             	mov    %rdx,%rsi
    4c13:	48 89 c7             	mov    %rax,%rdi
    4c16:	e8 c0 00 00 00       	call   4cdb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4c1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4c1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c23:	48 83 f8 0f          	cmp    $0xf,%rax
    4c27:	76 3f                	jbe    4c68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4c29:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4c2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c31:	ba 00 00 00 00       	mov    $0x0,%edx
    4c36:	48 89 ce             	mov    %rcx,%rsi
    4c39:	48 89 c7             	mov    %rax,%rdi
    4c3c:	e8 af fa ff ff       	call   46f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4c41:	48 89 c2             	mov    %rax,%rdx
    4c44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c48:	48 89 d6             	mov    %rdx,%rsi
    4c4b:	48 89 c7             	mov    %rax,%rdi
    4c4e:	e8 6d f6 ff ff       	call   42c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4c53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c5b:	48 89 d6             	mov    %rdx,%rsi
    4c5e:	48 89 c7             	mov    %rax,%rdi
    4c61:	e8 da fa ff ff       	call   4740 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4c66:	eb 15                	jmp    4c7d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4c68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c74:	48 89 c7             	mov    %rax,%rdi
    4c77:	e8 04 f6 ff ff       	call   4280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4c7c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4c7d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4c81:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4c85:	48 89 d6             	mov    %rdx,%rsi
    4c88:	48 89 c7             	mov    %rax,%rdi
    4c8b:	e8 20 ff ff ff       	call   4bb0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4c90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c94:	48 89 c7             	mov    %rax,%rdi
    4c97:	e8 94 f7 ff ff       	call   4430 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4c9c:	48 89 c1             	mov    %rax,%rcx
    4c9f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4ca3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4ca7:	48 89 c6             	mov    %rax,%rsi
    4caa:	48 89 cf             	mov    %rcx,%rdi
    4cad:	e8 8e f7 ff ff       	call   4440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4cb2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4cb9:	00 

	_M_set_length(__dnew);
    4cba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cc2:	48 89 d6             	mov    %rdx,%rsi
    4cc5:	48 89 c7             	mov    %rax,%rdi
    4cc8:	e8 23 f5 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4ccd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4cd1:	48 89 c7             	mov    %rax,%rdi
    4cd4:	e8 f1 fe ff ff       	call   4bca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4cd9:	c9                   	leave
    4cda:	c3                   	ret

0000000000004cdb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4cdb:	55                   	push   %rbp
    4cdc:	48 89 e5             	mov    %rsp,%rbp
    4cdf:	48 83 ec 10          	sub    $0x10,%rsp
    4ce3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ce7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4ceb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4cef:	48 89 c7             	mov    %rax,%rdi
    4cf2:	e8 15 00 00 00       	call   4d0c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4cf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cfb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cff:	48 89 d6             	mov    %rdx,%rsi
    4d02:	48 89 c7             	mov    %rax,%rdi
    4d05:	e8 0d 00 00 00       	call   4d17 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4d0a:	c9                   	leave
    4d0b:	c3                   	ret

0000000000004d0c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4d0c:	55                   	push   %rbp
    4d0d:	48 89 e5             	mov    %rsp,%rbp
    4d10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4d14:	90                   	nop
    4d15:	5d                   	pop    %rbp
    4d16:	c3                   	ret

0000000000004d17 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4d17:	55                   	push   %rbp
    4d18:	48 89 e5             	mov    %rsp,%rbp
    4d1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4d23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d27:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4d2b:	5d                   	pop    %rbp
    4d2c:	c3                   	ret

0000000000004d2d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4d2d:	55                   	push   %rbp
    4d2e:	48 89 e5             	mov    %rsp,%rbp
    4d31:	41 54                	push   %r12
    4d33:	53                   	push   %rbx
    4d34:	48 83 ec 30          	sub    $0x30,%rsp
    4d38:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d3c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d40:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4d44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d48:	8b 40 1c             	mov    0x1c(%rax),%eax
    4d4b:	89 c3                	mov    %eax,%ebx
    4d4d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d51:	48 89 c7             	mov    %rax,%rdi
    4d54:	e8 13 01 00 00       	call   4e6c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4d59:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d61:	48 89 de             	mov    %rbx,%rsi
    4d64:	48 89 c7             	mov    %rax,%rdi
    4d67:	e8 38 01 00 00       	call   4ea4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4d6c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d70:	48 89 c7             	mov    %rax,%rdi
    4d73:	e8 10 01 00 00       	call   4e88 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4d78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d7c:	48 89 c7             	mov    %rax,%rdi
    4d7f:	e8 da 01 00 00       	call   4f5e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4d84:	48 89 c2             	mov    %rax,%rdx
    4d87:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4d8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d8f:	48 89 ce             	mov    %rcx,%rsi
    4d92:	48 89 c7             	mov    %rax,%rdi
    4d95:	e8 76 f5 ff ff       	call   4310 <vkAllocateCommandBuffers@plt>
    4d9a:	85 c0                	test   %eax,%eax
    4d9c:	0f 95 c0             	setne  %al
    4d9f:	84 c0                	test   %al,%al
    4da1:	74 7f                	je     4e22 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4da3:	bf 10 00 00 00       	mov    $0x10,%edi
    4da8:	e8 b3 f3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    4dad:	48 89 c3             	mov    %rax,%rbx
    4db0:	48 8d 05 61 1e 01 00 	lea    0x11e61(%rip),%rax        # 16c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4db7:	48 89 c6             	mov    %rax,%rsi
    4dba:	48 89 df             	mov    %rbx,%rdi
    4dbd:	e8 3e f3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4dc2:	48 8b 05 df 11 02 00 	mov    0x211df(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4dc9:	48 89 c2             	mov    %rax,%rdx
    4dcc:	48 8d 05 6d 0f 02 00 	lea    0x20f6d(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4dd3:	48 89 c6             	mov    %rax,%rsi
    4dd6:	48 89 df             	mov    %rbx,%rdi
    4dd9:	e8 82 f8 ff ff       	call   4660 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4dde:	48 89 c3             	mov    %rax,%rbx
    4de1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4de5:	48 89 c7             	mov    %rax,%rdi
    4de8:	e8 9b 00 00 00       	call   4e88 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4ded:	48 89 d8             	mov    %rbx,%rax
    4df0:	48 89 c7             	mov    %rax,%rdi
    4df3:	e8 c8 f8 ff ff       	call   46c0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4df8:	49 89 c4             	mov    %rax,%r12
    4dfb:	48 89 df             	mov    %rbx,%rdi
    4dfe:	e8 2d f4 ff ff       	call   4230 <__cxa_free_exception@plt>
    4e03:	4c 89 e3             	mov    %r12,%rbx
    4e06:	eb 03                	jmp    4e0b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4e08:	48 89 c3             	mov    %rax,%rbx
    4e0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e0f:	48 89 c7             	mov    %rax,%rdi
    4e12:	e8 03 01 00 00       	call   4f1a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4e17:	48 89 d8             	mov    %rbx,%rax
    4e1a:	48 89 c7             	mov    %rax,%rdi
    4e1d:	e8 9e f8 ff ff       	call   46c0 <_Unwind_Resume@plt>
  return commandBuffers;
    4e22:	90                   	nop
}
    4e23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e27:	48 83 c4 30          	add    $0x30,%rsp
    4e2b:	5b                   	pop    %rbx
    4e2c:	41 5c                	pop    %r12
    4e2e:	5d                   	pop    %rbp
    4e2f:	c3                   	ret

0000000000004e30 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4e30:	55                   	push   %rbp
    4e31:	48 89 e5             	mov    %rsp,%rbp
    4e34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e40:	5d                   	pop    %rbp
    4e41:	c3                   	ret

0000000000004e42 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e42:	55                   	push   %rbp
    4e43:	48 89 e5             	mov    %rsp,%rbp
    4e46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e4e:	5d                   	pop    %rbp
    4e4f:	c3                   	ret

0000000000004e50 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4e50:	55                   	push   %rbp
    4e51:	48 89 e5             	mov    %rsp,%rbp
    4e54:	48 83 ec 10          	sub    $0x10,%rsp
    4e58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e60:	48 89 c7             	mov    %rax,%rdi
    4e63:	e8 20 00 00 00       	call   4e88 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e68:	90                   	nop
    4e69:	c9                   	leave
    4e6a:	c3                   	ret
    4e6b:	90                   	nop

0000000000004e6c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4e6c:	55                   	push   %rbp
    4e6d:	48 89 e5             	mov    %rsp,%rbp
    4e70:	48 83 ec 10          	sub    $0x10,%rsp
    4e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e7c:	48 89 c7             	mov    %rax,%rdi
    4e7f:	e8 4c 01 00 00       	call   4fd0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    4e84:	90                   	nop
    4e85:	c9                   	leave
    4e86:	c3                   	ret
    4e87:	90                   	nop

0000000000004e88 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4e88:	55                   	push   %rbp
    4e89:	48 89 e5             	mov    %rsp,%rbp
    4e8c:	48 83 ec 10          	sub    $0x10,%rsp
    4e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e98:	48 89 c7             	mov    %rax,%rdi
    4e9b:	e8 3c 01 00 00       	call   4fdc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    4ea0:	90                   	nop
    4ea1:	c9                   	leave
    4ea2:	c3                   	ret
    4ea3:	90                   	nop

0000000000004ea4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4ea4:	55                   	push   %rbp
    4ea5:	48 89 e5             	mov    %rsp,%rbp
    4ea8:	53                   	push   %rbx
    4ea9:	48 83 ec 28          	sub    $0x28,%rsp
    4ead:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4eb1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4eb5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4eb9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4ebd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ec1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ec5:	48 89 d6             	mov    %rdx,%rsi
    4ec8:	48 89 c7             	mov    %rax,%rdi
    4ecb:	e8 17 01 00 00       	call   4fe7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4ed0:	48 89 c1             	mov    %rax,%rcx
    4ed3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ed7:	48 89 c2             	mov    %rax,%rdx
    4eda:	48 89 ce             	mov    %rcx,%rsi
    4edd:	48 89 df             	mov    %rbx,%rdi
    4ee0:	e8 63 01 00 00       	call   5048 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4ee5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ee9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4eed:	48 89 d6             	mov    %rdx,%rsi
    4ef0:	48 89 c7             	mov    %rax,%rdi
    4ef3:	e8 ae 01 00 00       	call   50a6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    4ef8:	eb 1a                	jmp    4f14 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    4efa:	48 89 c3             	mov    %rax,%rbx
    4efd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f01:	48 89 c7             	mov    %rax,%rdi
    4f04:	e8 79 00 00 00       	call   4f82 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f09:	48 89 d8             	mov    %rbx,%rax
    4f0c:	48 89 c7             	mov    %rax,%rdi
    4f0f:	e8 ac f7 ff ff       	call   46c0 <_Unwind_Resume@plt>
    4f14:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f18:	c9                   	leave
    4f19:	c3                   	ret

0000000000004f1a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4f1a:	55                   	push   %rbp
    4f1b:	48 89 e5             	mov    %rsp,%rbp
    4f1e:	48 83 ec 10          	sub    $0x10,%rsp
    4f22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f2a:	48 89 c7             	mov    %rax,%rdi
    4f2d:	e8 b4 01 00 00       	call   50e6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4f32:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4f35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f39:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4f3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f41:	48 8b 00             	mov    (%rax),%rax
    4f44:	48 89 ce             	mov    %rcx,%rsi
    4f47:	48 89 c7             	mov    %rax,%rdi
    4f4a:	e8 a5 01 00 00       	call   50f4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f53:	48 89 c7             	mov    %rax,%rdi
    4f56:	e8 27 00 00 00       	call   4f82 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f5b:	90                   	nop
    4f5c:	c9                   	leave
    4f5d:	c3                   	ret

0000000000004f5e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4f5e:	55                   	push   %rbp
    4f5f:	48 89 e5             	mov    %rsp,%rbp
    4f62:	48 83 ec 10          	sub    $0x10,%rsp
    4f66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4f6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f6e:	48 8b 10             	mov    (%rax),%rdx
    4f71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f75:	48 89 d6             	mov    %rdx,%rsi
    4f78:	48 89 c7             	mov    %rax,%rdi
    4f7b:	e8 9e 01 00 00       	call   511e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    4f80:	c9                   	leave
    4f81:	c3                   	ret

0000000000004f82 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4f82:	55                   	push   %rbp
    4f83:	48 89 e5             	mov    %rsp,%rbp
    4f86:	48 83 ec 10          	sub    $0x10,%rsp
    4f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f92:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4f96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f9a:	48 8b 00             	mov    (%rax),%rax
    4f9d:	48 29 c2             	sub    %rax,%rdx
    4fa0:	48 89 d0             	mov    %rdx,%rax
    4fa3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4fa7:	48 89 c2             	mov    %rax,%rdx
    4faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fae:	48 8b 08             	mov    (%rax),%rcx
    4fb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fb5:	48 89 ce             	mov    %rcx,%rsi
    4fb8:	48 89 c7             	mov    %rax,%rdi
    4fbb:	e8 96 01 00 00       	call   5156 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc4:	48 89 c7             	mov    %rax,%rdi
    4fc7:	e8 84 fe ff ff       	call   4e50 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    4fcc:	90                   	nop
    4fcd:	c9                   	leave
    4fce:	c3                   	ret
    4fcf:	90                   	nop

0000000000004fd0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4fd0:	55                   	push   %rbp
    4fd1:	48 89 e5             	mov    %rsp,%rbp
    4fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fd8:	90                   	nop
    4fd9:	5d                   	pop    %rbp
    4fda:	c3                   	ret
    4fdb:	90                   	nop

0000000000004fdc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4fdc:	55                   	push   %rbp
    4fdd:	48 89 e5             	mov    %rsp,%rbp
    4fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fe4:	90                   	nop
    4fe5:	5d                   	pop    %rbp
    4fe6:	c3                   	ret

0000000000004fe7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4fe7:	55                   	push   %rbp
    4fe8:	48 89 e5             	mov    %rsp,%rbp
    4feb:	53                   	push   %rbx
    4fec:	48 83 ec 28          	sub    $0x28,%rsp
    4ff0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4ff4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    4ff8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4ffc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5000:	48 89 d6             	mov    %rdx,%rsi
    5003:	48 89 c7             	mov    %rax,%rdi
    5006:	e8 25 01 00 00       	call   5130 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    500b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    500f:	48 89 c7             	mov    %rax,%rdi
    5012:	e8 74 01 00 00       	call   518b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5017:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    501b:	0f 92 c3             	setb   %bl
    501e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5022:	48 89 c7             	mov    %rax,%rdi
    5025:	e8 5e fe ff ff       	call   4e88 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    502a:	84 db                	test   %bl,%bl
    502c:	74 0f                	je     503d <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    502e:	48 8d 05 0b 1c 01 00 	lea    0x11c0b(%rip),%rax        # 16c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    5035:	48 89 c7             	mov    %rax,%rdi
    5038:	e8 33 f1 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    503d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5041:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5045:	c9                   	leave
    5046:	c3                   	ret
    5047:	90                   	nop

0000000000005048 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5048:	55                   	push   %rbp
    5049:	48 89 e5             	mov    %rsp,%rbp
    504c:	53                   	push   %rbx
    504d:	48 83 ec 28          	sub    $0x28,%rsp
    5051:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5055:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5059:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    505d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5061:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5065:	48 89 d6             	mov    %rdx,%rsi
    5068:	48 89 c7             	mov    %rax,%rdi
    506b:	e8 5e 01 00 00       	call   51ce <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5070:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5074:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5078:	48 89 d6             	mov    %rdx,%rsi
    507b:	48 89 c7             	mov    %rax,%rdi
    507e:	e8 7d 01 00 00       	call   5200 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    5083:	eb 1a                	jmp    509f <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    5085:	48 89 c3             	mov    %rax,%rbx
    5088:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    508c:	48 89 c7             	mov    %rax,%rdi
    508f:	e8 bc fd ff ff       	call   4e50 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5094:	48 89 d8             	mov    %rbx,%rax
    5097:	48 89 c7             	mov    %rax,%rdi
    509a:	e8 21 f6 ff ff       	call   46c0 <_Unwind_Resume@plt>
    509f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50a3:	c9                   	leave
    50a4:	c3                   	ret
    50a5:	90                   	nop

00000000000050a6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    50a6:	55                   	push   %rbp
    50a7:	48 89 e5             	mov    %rsp,%rbp
    50aa:	48 83 ec 10          	sub    $0x10,%rsp
    50ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    50b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ba:	48 89 c7             	mov    %rax,%rdi
    50bd:	e8 24 00 00 00       	call   50e6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    50c2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    50c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50c9:	48 8b 00             	mov    (%rax),%rax
    50cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    50d0:	48 89 ce             	mov    %rcx,%rsi
    50d3:	48 89 c7             	mov    %rax,%rdi
    50d6:	e8 7b 01 00 00       	call   5256 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    50db:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    50df:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    50e3:	90                   	nop
    50e4:	c9                   	leave
    50e5:	c3                   	ret

00000000000050e6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    50e6:	55                   	push   %rbp
    50e7:	48 89 e5             	mov    %rsp,%rbp
    50ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    50ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50f2:	5d                   	pop    %rbp
    50f3:	c3                   	ret

00000000000050f4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    50f4:	55                   	push   %rbp
    50f5:	48 89 e5             	mov    %rsp,%rbp
    50f8:	48 83 ec 20          	sub    $0x20,%rsp
    50fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5100:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5104:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5108:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    510c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5110:	48 89 d6             	mov    %rdx,%rsi
    5113:	48 89 c7             	mov    %rax,%rdi
    5116:	e8 64 01 00 00       	call   527f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    511b:	90                   	nop
    511c:	c9                   	leave
    511d:	c3                   	ret

000000000000511e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    511e:	55                   	push   %rbp
    511f:	48 89 e5             	mov    %rsp,%rbp
    5122:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5126:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    512a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    512e:	5d                   	pop    %rbp
    512f:	c3                   	ret

0000000000005130 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5130:	55                   	push   %rbp
    5131:	48 89 e5             	mov    %rsp,%rbp
    5134:	48 83 ec 10          	sub    $0x10,%rsp
    5138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    513c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5140:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5144:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5148:	48 89 d6             	mov    %rdx,%rsi
    514b:	48 89 c7             	mov    %rax,%rdi
    514e:	e8 53 01 00 00       	call   52a6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5153:	90                   	nop
    5154:	c9                   	leave
    5155:	c3                   	ret

0000000000005156 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5156:	55                   	push   %rbp
    5157:	48 89 e5             	mov    %rsp,%rbp
    515a:	48 83 ec 20          	sub    $0x20,%rsp
    515e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5162:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5166:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    516a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    516f:	74 17                	je     5188 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5175:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5179:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    517d:	48 89 ce             	mov    %rcx,%rsi
    5180:	48 89 c7             	mov    %rax,%rdi
    5183:	e8 2d 01 00 00       	call   52b5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5188:	90                   	nop
    5189:	c9                   	leave
    518a:	c3                   	ret

000000000000518b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    518b:	55                   	push   %rbp
    518c:	48 89 e5             	mov    %rsp,%rbp
    518f:	48 83 ec 20          	sub    $0x20,%rsp
    5193:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5197:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    519e:	ff ff 0f 
    51a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    51a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51a9:	48 89 c7             	mov    %rax,%rdi
    51ac:	e8 32 01 00 00       	call   52e3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    51b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    51b5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    51b9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    51bd:	48 89 d6             	mov    %rdx,%rsi
    51c0:	48 89 c7             	mov    %rax,%rdi
    51c3:	e8 35 01 00 00       	call   52fd <_ZSt3minImERKT_S2_S2_>
    51c8:	48 8b 00             	mov    (%rax),%rax
      }
    51cb:	c9                   	leave
    51cc:	c3                   	ret
    51cd:	90                   	nop

00000000000051ce <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    51ce:	55                   	push   %rbp
    51cf:	48 89 e5             	mov    %rsp,%rbp
    51d2:	48 83 ec 10          	sub    $0x10,%rsp
    51d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    51de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    51e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51e6:	48 89 d6             	mov    %rdx,%rsi
    51e9:	48 89 c7             	mov    %rax,%rdi
    51ec:	e8 3f ff ff ff       	call   5130 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    51f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51f5:	48 89 c7             	mov    %rax,%rdi
    51f8:	e8 2b 01 00 00       	call   5328 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    51fd:	90                   	nop
    51fe:	c9                   	leave
    51ff:	c3                   	ret

0000000000005200 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5200:	55                   	push   %rbp
    5201:	48 89 e5             	mov    %rsp,%rbp
    5204:	48 83 ec 10          	sub    $0x10,%rsp
    5208:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    520c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5210:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5218:	48 89 d6             	mov    %rdx,%rsi
    521b:	48 89 c7             	mov    %rax,%rdi
    521e:	e8 33 01 00 00       	call   5356 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    5223:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5227:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    522a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    522e:	48 8b 10             	mov    (%rax),%rdx
    5231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5235:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    523d:	48 8b 00             	mov    (%rax),%rax
    5240:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5244:	48 c1 e2 03          	shl    $0x3,%rdx
    5248:	48 01 c2             	add    %rax,%rdx
    524b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    524f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5253:	90                   	nop
    5254:	c9                   	leave
    5255:	c3                   	ret

0000000000005256 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5256:	55                   	push   %rbp
    5257:	48 89 e5             	mov    %rsp,%rbp
    525a:	48 83 ec 20          	sub    $0x20,%rsp
    525e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5262:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5266:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    526a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    526e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5272:	48 89 d6             	mov    %rdx,%rsi
    5275:	48 89 c7             	mov    %rax,%rdi
    5278:	e8 0c 01 00 00       	call   5389 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    527d:	c9                   	leave
    527e:	c3                   	ret

000000000000527f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    527f:	55                   	push   %rbp
    5280:	48 89 e5             	mov    %rsp,%rbp
    5283:	48 83 ec 10          	sub    $0x10,%rsp
    5287:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    528b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    528f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5297:	48 89 d6             	mov    %rdx,%rsi
    529a:	48 89 c7             	mov    %rax,%rdi
    529d:	e8 10 01 00 00       	call   53b2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    52a2:	90                   	nop
    52a3:	c9                   	leave
    52a4:	c3                   	ret
    52a5:	90                   	nop

00000000000052a6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    52a6:	55                   	push   %rbp
    52a7:	48 89 e5             	mov    %rsp,%rbp
    52aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52b2:	90                   	nop
    52b3:	5d                   	pop    %rbp
    52b4:	c3                   	ret

00000000000052b5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    52b5:	55                   	push   %rbp
    52b6:	48 89 e5             	mov    %rsp,%rbp
    52b9:	48 83 ec 20          	sub    $0x20,%rsp
    52bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52c5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    52c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    52d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52d5:	48 89 ce             	mov    %rcx,%rsi
    52d8:	48 89 c7             	mov    %rax,%rdi
    52db:	e8 e2 00 00 00       	call   53c2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    52e0:	90                   	nop
    52e1:	c9                   	leave
    52e2:	c3                   	ret

00000000000052e3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    52e3:	55                   	push   %rbp
    52e4:	48 89 e5             	mov    %rsp,%rbp
    52e7:	48 83 ec 10          	sub    $0x10,%rsp
    52eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    52ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52f3:	48 89 c7             	mov    %rax,%rdi
    52f6:	e8 f9 00 00 00       	call   53f4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    52fb:	c9                   	leave
    52fc:	c3                   	ret

00000000000052fd <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    52fd:	55                   	push   %rbp
    52fe:	48 89 e5             	mov    %rsp,%rbp
    5301:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5305:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    5309:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    530d:	48 8b 10             	mov    (%rax),%rdx
    5310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5314:	48 8b 00             	mov    (%rax),%rax
    5317:	48 39 c2             	cmp    %rax,%rdx
    531a:	73 06                	jae    5322 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    531c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5320:	eb 04                	jmp    5326 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5326:	5d                   	pop    %rbp
    5327:	c3                   	ret

0000000000005328 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5328:	55                   	push   %rbp
    5329:	48 89 e5             	mov    %rsp,%rbp
    532c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5334:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    533b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    533f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5346:	00 
    5347:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    534b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5352:	00 
	{ }
    5353:	90                   	nop
    5354:	5d                   	pop    %rbp
    5355:	c3                   	ret

0000000000005356 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5356:	55                   	push   %rbp
    5357:	48 89 e5             	mov    %rsp,%rbp
    535a:	48 83 ec 10          	sub    $0x10,%rsp
    535e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5362:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5366:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    536b:	74 15                	je     5382 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    536d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5371:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5375:	48 89 d6             	mov    %rdx,%rsi
    5378:	48 89 c7             	mov    %rax,%rdi
    537b:	e8 8e 00 00 00       	call   540e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    5380:	eb 05                	jmp    5387 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    5382:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5387:	c9                   	leave
    5388:	c3                   	ret

0000000000005389 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5389:	55                   	push   %rbp
    538a:	48 89 e5             	mov    %rsp,%rbp
    538d:	48 83 ec 20          	sub    $0x20,%rsp
    5391:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5395:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    5399:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    539d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    53a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53a5:	48 89 d6             	mov    %rdx,%rsi
    53a8:	48 89 c7             	mov    %rax,%rdi
    53ab:	e8 88 00 00 00       	call   5438 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    53b0:	c9                   	leave
    53b1:	c3                   	ret

00000000000053b2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    53b2:	55                   	push   %rbp
    53b3:	48 89 e5             	mov    %rsp,%rbp
    53b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53be:	90                   	nop
    53bf:	5d                   	pop    %rbp
    53c0:	c3                   	ret
    53c1:	90                   	nop

00000000000053c2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    53c2:	55                   	push   %rbp
    53c3:	48 89 e5             	mov    %rsp,%rbp
    53c6:	48 83 ec 20          	sub    $0x20,%rsp
    53ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    53d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53da:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    53e1:	00 
    53e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    53e6:	48 89 d6             	mov    %rdx,%rsi
    53e9:	48 89 c7             	mov    %rax,%rdi
    53ec:	e8 8f ef ff ff       	call   4380 <_ZdlPvm@plt>
      }
    53f1:	c9                   	leave
    53f2:	c3                   	ret
    53f3:	90                   	nop

00000000000053f4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    53f4:	55                   	push   %rbp
    53f5:	48 89 e5             	mov    %rsp,%rbp
    53f8:	48 83 ec 10          	sub    $0x10,%rsp
    53fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5404:	48 89 c7             	mov    %rax,%rdi
    5407:	e8 8a 00 00 00       	call   5496 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    540c:	c9                   	leave
    540d:	c3                   	ret

000000000000540e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    540e:	55                   	push   %rbp
    540f:	48 89 e5             	mov    %rsp,%rbp
    5412:	48 83 ec 10          	sub    $0x10,%rsp
    5416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    541a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    541e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5426:	ba 00 00 00 00       	mov    $0x0,%edx
    542b:	48 89 ce             	mov    %rcx,%rsi
    542e:	48 89 c7             	mov    %rax,%rdi
    5431:	e8 74 00 00 00       	call   54aa <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    5436:	c9                   	leave
    5437:	c3                   	ret

0000000000005438 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5438:	55                   	push   %rbp
    5439:	48 89 e5             	mov    %rsp,%rbp
    543c:	48 83 ec 20          	sub    $0x20,%rsp
    5440:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5444:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5448:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    544d:	74 40                	je     548f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    544f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5453:	48 89 c7             	mov    %rax,%rdi
    5456:	e8 b0 00 00 00       	call   550b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    545b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    545f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5463:	48 89 c7             	mov    %rax,%rdi
    5466:	e8 ae 00 00 00       	call   5519 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    546b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5470:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5474:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5478:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    547c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5480:	48 89 ce             	mov    %rcx,%rsi
    5483:	48 89 c7             	mov    %rax,%rdi
    5486:	e8 b5 00 00 00       	call   5540 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    548b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    548f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5493:	c9                   	leave
    5494:	c3                   	ret
    5495:	90                   	nop

0000000000005496 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5496:	55                   	push   %rbp
    5497:	48 89 e5             	mov    %rsp,%rbp
    549a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    549e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    54a5:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    54a8:	5d                   	pop    %rbp
    54a9:	c3                   	ret

00000000000054aa <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    54aa:	55                   	push   %rbp
    54ab:	48 89 e5             	mov    %rsp,%rbp
    54ae:	48 83 ec 20          	sub    $0x20,%rsp
    54b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    54be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54c2:	48 89 c7             	mov    %rax,%rdi
    54c5:	e8 cc ff ff ff       	call   5496 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    54ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54ce:	0f 92 c0             	setb   %al
    54d1:	0f b6 c0             	movzbl %al,%eax
    54d4:	48 85 c0             	test   %rax,%rax
    54d7:	0f 95 c0             	setne  %al
    54da:	84 c0                	test   %al,%al
    54dc:	74 1a                	je     54f8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    54de:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    54e5:	ff ff 1f 
    54e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54ec:	73 05                	jae    54f3 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    54ee:	e8 6d ed ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    54f3:	e8 e8 eb ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    54f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54fc:	48 c1 e0 03          	shl    $0x3,%rax
    5500:	48 89 c7             	mov    %rax,%rdi
    5503:	e8 68 ee ff ff       	call   4370 <_Znwm@plt>
    5508:	90                   	nop
      }
    5509:	c9                   	leave
    550a:	c3                   	ret

000000000000550b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    550b:	55                   	push   %rbp
    550c:	48 89 e5             	mov    %rsp,%rbp
    550f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5513:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5517:	5d                   	pop    %rbp
    5518:	c3                   	ret

0000000000005519 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5519:	55                   	push   %rbp
    551a:	48 89 e5             	mov    %rsp,%rbp
    551d:	48 83 ec 10          	sub    $0x10,%rsp
    5521:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5529:	48 89 c6             	mov    %rax,%rsi
    552c:	bf 08 00 00 00       	mov    $0x8,%edi
    5531:	e8 fa f8 ff ff       	call   4e30 <_ZnwmPv>
    5536:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    553d:	90                   	nop
    553e:	c9                   	leave
    553f:	c3                   	ret

0000000000005540 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5540:	55                   	push   %rbp
    5541:	48 89 e5             	mov    %rsp,%rbp
    5544:	48 83 ec 20          	sub    $0x20,%rsp
    5548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    554c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5550:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5554:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5558:	48 89 c7             	mov    %rax,%rdi
    555b:	e8 24 00 00 00       	call   5584 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5564:	48 89 c7             	mov    %rax,%rdi
    5567:	e8 d6 f8 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    556c:	48 89 c1             	mov    %rax,%rcx
    556f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5573:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5577:	48 89 ce             	mov    %rcx,%rsi
    557a:	48 89 c7             	mov    %rax,%rdi
    557d:	e8 0d 00 00 00       	call   558f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    5582:	c9                   	leave
    5583:	c3                   	ret

0000000000005584 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5584:	55                   	push   %rbp
    5585:	48 89 e5             	mov    %rsp,%rbp
    5588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    558c:	90                   	nop
    558d:	5d                   	pop    %rbp
    558e:	c3                   	ret

000000000000558f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    558f:	55                   	push   %rbp
    5590:	48 89 e5             	mov    %rsp,%rbp
    5593:	48 83 ec 20          	sub    $0x20,%rsp
    5597:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    559b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    559f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    55a3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    55a8:	75 06                	jne    55b0 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    55aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ae:	eb 3a                	jmp    55ea <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    55b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55b4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55bb:	00 
    55bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55c0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    55c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55cc:	48 89 ce             	mov    %rcx,%rsi
    55cf:	48 89 c7             	mov    %rax,%rdi
    55d2:	e8 15 00 00 00       	call   55ec <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    55d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55db:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55e2:	00 
    55e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55e7:	48 01 d0             	add    %rdx,%rax
    }
    55ea:	c9                   	leave
    55eb:	c3                   	ret

00000000000055ec <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    55ec:	55                   	push   %rbp
    55ed:	48 89 e5             	mov    %rsp,%rbp
    55f0:	48 83 ec 20          	sub    $0x20,%rsp
    55f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5600:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5604:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    560c:	48 89 ce             	mov    %rcx,%rsi
    560f:	48 89 c7             	mov    %rax,%rdi
    5612:	e8 03 00 00 00       	call   561a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5617:	90                   	nop
    5618:	c9                   	leave
    5619:	c3                   	ret

000000000000561a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    561a:	55                   	push   %rbp
    561b:	48 89 e5             	mov    %rsp,%rbp
    561e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5622:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5626:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    562a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    562e:	48 8b 00             	mov    (%rax),%rax
    5631:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5635:	eb 10                	jmp    5647 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    563b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    563f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5642:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5647:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    564b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    564f:	75 e6                	jne    5637 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5651:	90                   	nop
    5652:	90                   	nop
    5653:	5d                   	pop    %rbp
    5654:	c3                   	ret

0000000000005655 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    5655:	55                   	push   %rbp
    5656:	48 89 e5             	mov    %rsp,%rbp
    5659:	48 83 ec 20          	sub    $0x20,%rsp
    565d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5660:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5663:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5667:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    566b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    566f:	be 00 00 00 00       	mov    $0x0,%esi
    5674:	bf 01 20 02 00       	mov    $0x22001,%edi
    5679:	e8 52 ec ff ff       	call   42d0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    567e:	be 00 00 00 00       	mov    $0x0,%esi
    5683:	bf 03 00 02 00       	mov    $0x20003,%edi
    5688:	e8 43 ec ff ff       	call   42d0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    568d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5691:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5695:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5699:	8b 75 f8             	mov    -0x8(%rbp),%esi
    569c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    569f:	49 89 f8             	mov    %rdi,%r8
    56a2:	89 c7                	mov    %eax,%edi
    56a4:	e8 47 ef ff ff       	call   45f0 <glfwCreateWindow@plt>
}
    56a9:	c9                   	leave
    56aa:	c3                   	ret

00000000000056ab <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    56ab:	55                   	push   %rbp
    56ac:	48 89 e5             	mov    %rsp,%rbp
    56af:	41 54                	push   %r12
    56b1:	53                   	push   %rbx
    56b2:	48 83 ec 20          	sub    $0x20,%rsp
    56b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    56ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    56be:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    56c2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    56c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56ca:	48 89 ce             	mov    %rcx,%rsi
    56cd:	48 89 c7             	mov    %rax,%rdi
    56d0:	e8 db ed ff ff       	call   44b0 <vkCreateInstance@plt>
    56d5:	85 c0                	test   %eax,%eax
    56d7:	0f 95 c0             	setne  %al
    56da:	84 c0                	test   %al,%al
    56dc:	74 3b                	je     5719 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    56de:	bf 10 00 00 00       	mov    $0x10,%edi
    56e3:	e8 78 ea ff ff       	call   4160 <__cxa_allocate_exception@plt>
    56e8:	48 89 c3             	mov    %rax,%rbx
    56eb:	48 8d 05 5e 1b 01 00 	lea    0x11b5e(%rip),%rax        # 17250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    56f2:	48 89 c6             	mov    %rax,%rsi
    56f5:	48 89 df             	mov    %rbx,%rdi
    56f8:	e8 03 ea ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    56fd:	48 8b 05 a4 08 02 00 	mov    0x208a4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5704:	48 89 c2             	mov    %rax,%rdx
    5707:	48 8d 05 32 06 02 00 	lea    0x20632(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    570e:	48 89 c6             	mov    %rax,%rsi
    5711:	48 89 df             	mov    %rbx,%rdi
    5714:	e8 47 ef ff ff       	call   4660 <__cxa_throw@plt>
  }
  return instance;
    5719:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    571d:	eb 16                	jmp    5735 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    571f:	49 89 c4             	mov    %rax,%r12
    5722:	48 89 df             	mov    %rbx,%rdi
    5725:	e8 06 eb ff ff       	call   4230 <__cxa_free_exception@plt>
    572a:	4c 89 e0             	mov    %r12,%rax
    572d:	48 89 c7             	mov    %rax,%rdi
    5730:	e8 8b ef ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    5735:	48 83 c4 20          	add    $0x20,%rsp
    5739:	5b                   	pop    %rbx
    573a:	41 5c                	pop    %r12
    573c:	5d                   	pop    %rbp
    573d:	c3                   	ret

000000000000573e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    573e:	55                   	push   %rbp
    573f:	48 89 e5             	mov    %rsp,%rbp
    5742:	41 54                	push   %r12
    5744:	53                   	push   %rbx
    5745:	48 83 ec 30          	sub    $0x30,%rsp
    5749:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    574d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5751:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    5755:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5759:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    575d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5761:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5765:	48 89 c7             	mov    %rax,%rdi
    5768:	e8 53 ee ff ff       	call   45c0 <vkCreateDevice@plt>
    576d:	85 c0                	test   %eax,%eax
    576f:	0f 95 c0             	setne  %al
    5772:	84 c0                	test   %al,%al
    5774:	74 3b                	je     57b1 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    5776:	bf 10 00 00 00       	mov    $0x10,%edi
    577b:	e8 e0 e9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5780:	48 89 c3             	mov    %rax,%rbx
    5783:	48 8d 05 e6 1a 01 00 	lea    0x11ae6(%rip),%rax        # 17270 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    578a:	48 89 c6             	mov    %rax,%rsi
    578d:	48 89 df             	mov    %rbx,%rdi
    5790:	e8 6b e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5795:	48 8b 05 0c 08 02 00 	mov    0x2080c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    579c:	48 89 c2             	mov    %rax,%rdx
    579f:	48 8d 05 9a 05 02 00 	lea    0x2059a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    57a6:	48 89 c6             	mov    %rax,%rsi
    57a9:	48 89 df             	mov    %rbx,%rdi
    57ac:	e8 af ee ff ff       	call   4660 <__cxa_throw@plt>
  }
  return device;
    57b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57b5:	eb 16                	jmp    57cd <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    57b7:	49 89 c4             	mov    %rax,%r12
    57ba:	48 89 df             	mov    %rbx,%rdi
    57bd:	e8 6e ea ff ff       	call   4230 <__cxa_free_exception@plt>
    57c2:	4c 89 e0             	mov    %r12,%rax
    57c5:	48 89 c7             	mov    %rax,%rdi
    57c8:	e8 f3 ee ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    57cd:	48 83 c4 30          	add    $0x30,%rsp
    57d1:	5b                   	pop    %rbx
    57d2:	41 5c                	pop    %r12
    57d4:	5d                   	pop    %rbp
    57d5:	c3                   	ret

00000000000057d6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    57d6:	55                   	push   %rbp
    57d7:	48 89 e5             	mov    %rsp,%rbp
    57da:	41 54                	push   %r12
    57dc:	53                   	push   %rbx
    57dd:	48 83 ec 30          	sub    $0x30,%rsp
    57e1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    57e5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    57e9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    57ed:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    57f1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    57f5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    57f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57fd:	48 89 c7             	mov    %rax,%rdi
    5800:	e8 db ed ff ff       	call   45e0 <glfwCreateWindowSurface@plt>
    5805:	85 c0                	test   %eax,%eax
    5807:	0f 95 c0             	setne  %al
    580a:	84 c0                	test   %al,%al
    580c:	74 3b                	je     5849 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    580e:	bf 10 00 00 00       	mov    $0x10,%edi
    5813:	e8 48 e9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5818:	48 89 c3             	mov    %rax,%rbx
    581b:	48 8d 05 76 1a 01 00 	lea    0x11a76(%rip),%rax        # 17298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5822:	48 89 c6             	mov    %rax,%rsi
    5825:	48 89 df             	mov    %rbx,%rdi
    5828:	e8 d3 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    582d:	48 8b 05 74 07 02 00 	mov    0x20774(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5834:	48 89 c2             	mov    %rax,%rdx
    5837:	48 8d 05 02 05 02 00 	lea    0x20502(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    583e:	48 89 c6             	mov    %rax,%rsi
    5841:	48 89 df             	mov    %rbx,%rdi
    5844:	e8 17 ee ff ff       	call   4660 <__cxa_throw@plt>
  }
  return surface;
    5849:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    584d:	eb 16                	jmp    5865 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    584f:	49 89 c4             	mov    %rax,%r12
    5852:	48 89 df             	mov    %rbx,%rdi
    5855:	e8 d6 e9 ff ff       	call   4230 <__cxa_free_exception@plt>
    585a:	4c 89 e0             	mov    %r12,%rax
    585d:	48 89 c7             	mov    %rax,%rdi
    5860:	e8 5b ee ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    5865:	48 83 c4 30          	add    $0x30,%rsp
    5869:	5b                   	pop    %rbx
    586a:	41 5c                	pop    %r12
    586c:	5d                   	pop    %rbp
    586d:	c3                   	ret

000000000000586e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    586e:	55                   	push   %rbp
    586f:	48 89 e5             	mov    %rsp,%rbp
    5872:	41 54                	push   %r12
    5874:	53                   	push   %rbx
    5875:	48 83 ec 30          	sub    $0x30,%rsp
    5879:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    587d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5881:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    5885:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    588c:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    588d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5891:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5895:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5899:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    589d:	48 89 c7             	mov    %rax,%rdi
    58a0:	e8 db eb ff ff       	call   4480 <vkCreateSwapchainKHR@plt>
    58a5:	85 c0                	test   %eax,%eax
    58a7:	0f 95 c0             	setne  %al
    58aa:	84 c0                	test   %al,%al
    58ac:	74 3b                	je     58e9 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    58ae:	bf 10 00 00 00       	mov    $0x10,%edi
    58b3:	e8 a8 e8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    58b8:	48 89 c3             	mov    %rax,%rbx
    58bb:	48 8d 05 f7 19 01 00 	lea    0x119f7(%rip),%rax        # 172b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    58c2:	48 89 c6             	mov    %rax,%rsi
    58c5:	48 89 df             	mov    %rbx,%rdi
    58c8:	e8 33 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    58cd:	48 8b 05 d4 06 02 00 	mov    0x206d4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    58d4:	48 89 c2             	mov    %rax,%rdx
    58d7:	48 8d 05 62 04 02 00 	lea    0x20462(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    58de:	48 89 c6             	mov    %rax,%rsi
    58e1:	48 89 df             	mov    %rbx,%rdi
    58e4:	e8 77 ed ff ff       	call   4660 <__cxa_throw@plt>
  }
  return swapchain;
    58e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58ed:	eb 16                	jmp    5905 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    58ef:	49 89 c4             	mov    %rax,%r12
    58f2:	48 89 df             	mov    %rbx,%rdi
    58f5:	e8 36 e9 ff ff       	call   4230 <__cxa_free_exception@plt>
    58fa:	4c 89 e0             	mov    %r12,%rax
    58fd:	48 89 c7             	mov    %rax,%rdi
    5900:	e8 bb ed ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    5905:	48 83 c4 30          	add    $0x30,%rsp
    5909:	5b                   	pop    %rbx
    590a:	41 5c                	pop    %r12
    590c:	5d                   	pop    %rbp
    590d:	c3                   	ret

000000000000590e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    590e:	55                   	push   %rbp
    590f:	48 89 e5             	mov    %rsp,%rbp
    5912:	41 54                	push   %r12
    5914:	53                   	push   %rbx
    5915:	48 83 ec 30          	sub    $0x30,%rsp
    5919:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    591d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5921:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5925:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5929:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    592d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5931:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5935:	48 89 c7             	mov    %rax,%rdi
    5938:	e8 73 ea ff ff       	call   43b0 <vkCreateImageView@plt>
    593d:	85 c0                	test   %eax,%eax
    593f:	0f 95 c0             	setne  %al
    5942:	84 c0                	test   %al,%al
    5944:	74 3b                	je     5981 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5946:	bf 10 00 00 00       	mov    $0x10,%edi
    594b:	e8 10 e8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5950:	48 89 c3             	mov    %rax,%rbx
    5953:	48 8d 05 7e 19 01 00 	lea    0x1197e(%rip),%rax        # 172d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    595a:	48 89 c6             	mov    %rax,%rsi
    595d:	48 89 df             	mov    %rbx,%rdi
    5960:	e8 9b e7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5965:	48 8b 05 3c 06 02 00 	mov    0x2063c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    596c:	48 89 c2             	mov    %rax,%rdx
    596f:	48 8d 05 ca 03 02 00 	lea    0x203ca(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5976:	48 89 c6             	mov    %rax,%rsi
    5979:	48 89 df             	mov    %rbx,%rdi
    597c:	e8 df ec ff ff       	call   4660 <__cxa_throw@plt>
  }
  return imageView;
    5981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5985:	eb 16                	jmp    599d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    5987:	49 89 c4             	mov    %rax,%r12
    598a:	48 89 df             	mov    %rbx,%rdi
    598d:	e8 9e e8 ff ff       	call   4230 <__cxa_free_exception@plt>
    5992:	4c 89 e0             	mov    %r12,%rax
    5995:	48 89 c7             	mov    %rax,%rdi
    5998:	e8 23 ed ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    599d:	48 83 c4 30          	add    $0x30,%rsp
    59a1:	5b                   	pop    %rbx
    59a2:	41 5c                	pop    %r12
    59a4:	5d                   	pop    %rbp
    59a5:	c3                   	ret

00000000000059a6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    59a6:	55                   	push   %rbp
    59a7:	48 89 e5             	mov    %rsp,%rbp
    59aa:	41 54                	push   %r12
    59ac:	53                   	push   %rbx
    59ad:	48 83 ec 60          	sub    $0x60,%rsp
    59b1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    59b5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    59b9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    59bd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    59c1:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    59c5:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    59c9:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    59ce:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    59d5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    59d9:	48 89 c7             	mov    %rax,%rdi
    59dc:	e8 b7 04 00 00       	call   5e98 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    59e1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    59e5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    59e9:	48 89 c7             	mov    %rax,%rdi
    59ec:	e8 c7 04 00 00       	call   5eb8 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    59f1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    59f5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    59fc:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    59fd:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    5a01:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5a05:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5a09:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5a0d:	48 89 c7             	mov    %rax,%rdi
    5a10:	e8 5b e8 ff ff       	call   4270 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5a15:	85 c0                	test   %eax,%eax
    5a17:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a1a:	84 c0                	test   %al,%al
    5a1c:	74 3b                	je     5a59 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5a1e:	bf 10 00 00 00       	mov    $0x10,%edi
    5a23:	e8 38 e7 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5a28:	48 89 c3             	mov    %rax,%rbx
    5a2b:	48 8d 05 c6 18 01 00 	lea    0x118c6(%rip),%rax        # 172f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5a32:	48 89 c6             	mov    %rax,%rsi
    5a35:	48 89 df             	mov    %rbx,%rdi
    5a38:	e8 c3 e6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5a3d:	48 8b 05 64 05 02 00 	mov    0x20564(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a44:	48 89 c2             	mov    %rax,%rdx
    5a47:	48 8d 05 f2 02 02 00 	lea    0x202f2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a4e:	48 89 c6             	mov    %rax,%rsi
    5a51:	48 89 df             	mov    %rbx,%rdi
    5a54:	e8 07 ec ff ff       	call   4660 <__cxa_throw@plt>
  }
  return shaderModule;
    5a59:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a5d:	eb 16                	jmp    5a75 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5a5f:	49 89 c4             	mov    %rax,%r12
    5a62:	48 89 df             	mov    %rbx,%rdi
    5a65:	e8 c6 e7 ff ff       	call   4230 <__cxa_free_exception@plt>
    5a6a:	4c 89 e0             	mov    %r12,%rax
    5a6d:	48 89 c7             	mov    %rax,%rdi
    5a70:	e8 4b ec ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    5a75:	48 83 c4 60          	add    $0x60,%rsp
    5a79:	5b                   	pop    %rbx
    5a7a:	41 5c                	pop    %r12
    5a7c:	5d                   	pop    %rbp
    5a7d:	c3                   	ret

0000000000005a7e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5a7e:	55                   	push   %rbp
    5a7f:	48 89 e5             	mov    %rsp,%rbp
    5a82:	41 54                	push   %r12
    5a84:	53                   	push   %rbx
    5a85:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5a8c:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5a93:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5a9a:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5aa1:	be 04 00 00 00       	mov    $0x4,%esi
    5aa6:	bf 02 00 00 00       	mov    $0x2,%edi
    5aab:	e8 d6 03 00 00       	call   5e86 <_ZStorSt13_Ios_OpenmodeS_>
    5ab0:	89 c2                	mov    %eax,%edx
    5ab2:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5ab9:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ac0:	48 89 ce             	mov    %rcx,%rsi
    5ac3:	48 89 c7             	mov    %rax,%rdi
    5ac6:	e8 55 eb ff ff       	call   4620 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5acb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ad2:	48 89 c7             	mov    %rax,%rdi
    5ad5:	e8 36 eb ff ff       	call   4610 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5ada:	83 f0 01             	xor    $0x1,%eax
    5add:	84 c0                	test   %al,%al
    5adf:	74 61                	je     5b42 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5ae1:	bf 10 00 00 00       	mov    $0x10,%edi
    5ae6:	e8 75 e6 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5aeb:	48 89 c3             	mov    %rax,%rbx
    5aee:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5af2:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5af9:	48 8d 0d 18 18 01 00 	lea    0x11818(%rip),%rcx        # 17318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5b00:	48 89 ce             	mov    %rcx,%rsi
    5b03:	48 89 c7             	mov    %rax,%rdi
    5b06:	e8 d1 03 00 00       	call   5edc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5b0b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b0f:	48 89 c6             	mov    %rax,%rsi
    5b12:	48 89 df             	mov    %rbx,%rdi
    5b15:	e8 16 eb ff ff       	call   4630 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5b1a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b1e:	48 89 c7             	mov    %rax,%rdi
    5b21:	e8 aa e6 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5b26:	48 8b 05 7b 04 02 00 	mov    0x2047b(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b2d:	48 89 c2             	mov    %rax,%rdx
    5b30:	48 8d 05 09 02 02 00 	lea    0x20209(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b37:	48 89 c6             	mov    %rax,%rsi
    5b3a:	48 89 df             	mov    %rbx,%rdi
    5b3d:	e8 1e eb ff ff       	call   4660 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5b42:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b49:	48 89 c7             	mov    %rax,%rdi
    5b4c:	e8 4f eb ff ff       	call   46a0 <_ZNSi5tellgEv@plt>
    5b51:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5b55:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5b59:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5b5d:	48 89 c7             	mov    %rax,%rdi
    5b60:	e8 79 04 00 00       	call   5fde <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5b65:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5b69:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b6d:	48 89 c7             	mov    %rax,%rdi
    5b70:	e8 5b eb ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    5b75:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5b79:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5b7d:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5b84:	48 89 ce             	mov    %rcx,%rsi
    5b87:	48 89 c7             	mov    %rax,%rdi
    5b8a:	e8 61 04 00 00       	call   5ff0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5b8f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b93:	48 89 c7             	mov    %rax,%rdi
    5b96:	e8 75 e8 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5b9b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5b9f:	be 00 00 00 00       	mov    $0x0,%esi
    5ba4:	48 89 c7             	mov    %rax,%rdi
    5ba7:	e8 fe 04 00 00       	call   60aa <_ZNSt4fposI11__mbstate_tEC1El>
    5bac:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5bb0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5bb4:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bbb:	48 89 ce             	mov    %rcx,%rsi
    5bbe:	48 89 c7             	mov    %rax,%rdi
    5bc1:	e8 2a e9 ff ff       	call   44f0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5bc6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5bca:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5bd1:	48 89 c7             	mov    %rax,%rdi
    5bd4:	e8 01 05 00 00       	call   60da <_ZNSt6vectorIcSaIcEE4dataEv>
    5bd9:	48 89 c1             	mov    %rax,%rcx
    5bdc:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5be3:	48 89 da             	mov    %rbx,%rdx
    5be6:	48 89 ce             	mov    %rcx,%rsi
    5be9:	48 89 c7             	mov    %rax,%rdi
    5bec:	e8 ef e8 ff ff       	call   44e0 <_ZNSi4readEPcl@plt>
  file.close();
    5bf1:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bf8:	48 89 c7             	mov    %rax,%rdi
    5bfb:	e8 70 e4 ff ff       	call   4070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5c00:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5c07:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5c0e:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5c15:	48 89 ce             	mov    %rcx,%rsi
    5c18:	48 89 c7             	mov    %rax,%rdi
    5c1b:	e8 86 fd ff ff       	call   59a6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5c20:	48 89 c3             	mov    %rax,%rbx
    5c23:	90                   	nop
}
    5c24:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c2b:	48 89 c7             	mov    %rax,%rdi
    5c2e:	e8 33 04 00 00       	call   6066 <_ZNSt6vectorIcSaIcEED1Ev>
    5c33:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c3a:	48 89 c7             	mov    %rax,%rdi
    5c3d:	e8 6e e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5c42:	48 89 d8             	mov    %rbx,%rax
    5c45:	eb 63                	jmp    5caa <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5c47:	49 89 c4             	mov    %rax,%r12
    5c4a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c4e:	48 89 c7             	mov    %rax,%rdi
    5c51:	e8 7a e5 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5c56:	eb 03                	jmp    5c5b <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5c58:	49 89 c4             	mov    %rax,%r12
    5c5b:	48 89 df             	mov    %rbx,%rdi
    5c5e:	e8 cd e5 ff ff       	call   4230 <__cxa_free_exception@plt>
    5c63:	4c 89 e3             	mov    %r12,%rbx
    5c66:	eb 28                	jmp    5c90 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5c68:	48 89 c3             	mov    %rax,%rbx
    5c6b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5c6f:	48 89 c7             	mov    %rax,%rdi
    5c72:	e8 99 e7 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    5c77:	eb 17                	jmp    5c90 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5c79:	48 89 c3             	mov    %rax,%rbx
    5c7c:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c83:	48 89 c7             	mov    %rax,%rdi
    5c86:	e8 db 03 00 00       	call   6066 <_ZNSt6vectorIcSaIcEED1Ev>
    5c8b:	eb 03                	jmp    5c90 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5c8d:	48 89 c3             	mov    %rax,%rbx
    5c90:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c97:	48 89 c7             	mov    %rax,%rdi
    5c9a:	e8 11 e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5c9f:	48 89 d8             	mov    %rbx,%rax
    5ca2:	48 89 c7             	mov    %rax,%rdi
    5ca5:	e8 16 ea ff ff       	call   46c0 <_Unwind_Resume@plt>
    5caa:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5cb1:	5b                   	pop    %rbx
    5cb2:	41 5c                	pop    %r12
    5cb4:	5d                   	pop    %rbp
    5cb5:	c3                   	ret

0000000000005cb6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5cb6:	55                   	push   %rbp
    5cb7:	48 89 e5             	mov    %rsp,%rbp
    5cba:	41 54                	push   %r12
    5cbc:	53                   	push   %rbx
    5cbd:	48 83 ec 30          	sub    $0x30,%rsp
    5cc1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5cc5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5cc9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5ccd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5cd1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5cd5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5cd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5cdd:	48 89 c7             	mov    %rax,%rdi
    5ce0:	e8 bb e5 ff ff       	call   42a0 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5ce5:	85 c0                	test   %eax,%eax
    5ce7:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5cea:	84 c0                	test   %al,%al
    5cec:	74 3b                	je     5d29 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5cee:	bf 10 00 00 00       	mov    $0x10,%edi
    5cf3:	e8 68 e4 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5cf8:	48 89 c3             	mov    %rax,%rbx
    5cfb:	48 8d 05 26 16 01 00 	lea    0x11626(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5d02:	48 89 c6             	mov    %rax,%rsi
    5d05:	48 89 df             	mov    %rbx,%rdi
    5d08:	e8 f3 e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5d0d:	48 8b 05 94 02 02 00 	mov    0x20294(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d14:	48 89 c2             	mov    %rax,%rdx
    5d17:	48 8d 05 22 00 02 00 	lea    0x20022(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d1e:	48 89 c6             	mov    %rax,%rsi
    5d21:	48 89 df             	mov    %rbx,%rdi
    5d24:	e8 37 e9 ff ff       	call   4660 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5d29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d2d:	eb 16                	jmp    5d45 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5d2f:	49 89 c4             	mov    %rax,%r12
    5d32:	48 89 df             	mov    %rbx,%rdi
    5d35:	e8 f6 e4 ff ff       	call   4230 <__cxa_free_exception@plt>
    5d3a:	4c 89 e0             	mov    %r12,%rax
    5d3d:	48 89 c7             	mov    %rax,%rdi
    5d40:	e8 7b e9 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    5d45:	48 83 c4 30          	add    $0x30,%rsp
    5d49:	5b                   	pop    %rbx
    5d4a:	41 5c                	pop    %r12
    5d4c:	5d                   	pop    %rbp
    5d4d:	c3                   	ret

0000000000005d4e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5d4e:	55                   	push   %rbp
    5d4f:	48 89 e5             	mov    %rsp,%rbp
    5d52:	41 54                	push   %r12
    5d54:	53                   	push   %rbx
    5d55:	48 83 ec 30          	sub    $0x30,%rsp
    5d59:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d5d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5d61:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5d65:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5d69:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d6d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5d71:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5d75:	48 89 c7             	mov    %rax,%rdi
    5d78:	e8 63 e4 ff ff       	call   41e0 <vkCreateRenderPass@plt>
    5d7d:	85 c0                	test   %eax,%eax
    5d7f:	0f 95 c0             	setne  %al
    5d82:	84 c0                	test   %al,%al
    5d84:	74 3b                	je     5dc1 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5d86:	bf 10 00 00 00       	mov    $0x10,%edi
    5d8b:	e8 d0 e3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5d90:	48 89 c3             	mov    %rax,%rbx
    5d93:	48 8d 05 8e 15 01 00 	lea    0x1158e(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5d9a:	48 89 c6             	mov    %rax,%rsi
    5d9d:	48 89 df             	mov    %rbx,%rdi
    5da0:	e8 5b e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5da5:	48 8b 05 fc 01 02 00 	mov    0x201fc(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5dac:	48 89 c2             	mov    %rax,%rdx
    5daf:	48 8d 05 8a ff 01 00 	lea    0x1ff8a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5db6:	48 89 c6             	mov    %rax,%rsi
    5db9:	48 89 df             	mov    %rbx,%rdi
    5dbc:	e8 9f e8 ff ff       	call   4660 <__cxa_throw@plt>
  }
  return renderPass;
    5dc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dc5:	eb 16                	jmp    5ddd <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5dc7:	49 89 c4             	mov    %rax,%r12
    5dca:	48 89 df             	mov    %rbx,%rdi
    5dcd:	e8 5e e4 ff ff       	call   4230 <__cxa_free_exception@plt>
    5dd2:	4c 89 e0             	mov    %r12,%rax
    5dd5:	48 89 c7             	mov    %rax,%rdi
    5dd8:	e8 e3 e8 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    5ddd:	48 83 c4 30          	add    $0x30,%rsp
    5de1:	5b                   	pop    %rbx
    5de2:	41 5c                	pop    %r12
    5de4:	5d                   	pop    %rbp
    5de5:	c3                   	ret

0000000000005de6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5de6:	55                   	push   %rbp
    5de7:	48 89 e5             	mov    %rsp,%rbp
    5dea:	41 54                	push   %r12
    5dec:	53                   	push   %rbx
    5ded:	48 83 ec 30          	sub    $0x30,%rsp
    5df1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5df5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5df9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    5dfd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5e04:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    5e05:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5e09:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e0d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5e11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e15:	48 89 c7             	mov    %rax,%rdi
    5e18:	e8 13 e3 ff ff       	call   4130 <vkCreateCommandPool@plt>
    5e1d:	85 c0                	test   %eax,%eax
    5e1f:	0f 95 c0             	setne  %al
    5e22:	84 c0                	test   %al,%al
    5e24:	74 3b                	je     5e61 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    5e26:	bf 10 00 00 00       	mov    $0x10,%edi
    5e2b:	e8 30 e3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5e30:	48 89 c3             	mov    %rax,%rbx
    5e33:	48 8d 05 16 15 01 00 	lea    0x11516(%rip),%rax        # 17350 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    5e3a:	48 89 c6             	mov    %rax,%rsi
    5e3d:	48 89 df             	mov    %rbx,%rdi
    5e40:	e8 bb e2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5e45:	48 8b 05 5c 01 02 00 	mov    0x2015c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5e4c:	48 89 c2             	mov    %rax,%rdx
    5e4f:	48 8d 05 ea fe 01 00 	lea    0x1feea(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5e56:	48 89 c6             	mov    %rax,%rsi
    5e59:	48 89 df             	mov    %rbx,%rdi
    5e5c:	e8 ff e7 ff ff       	call   4660 <__cxa_throw@plt>
  }
  return commandPool;
    5e61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e65:	eb 16                	jmp    5e7d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    5e67:	49 89 c4             	mov    %rax,%r12
    5e6a:	48 89 df             	mov    %rbx,%rdi
    5e6d:	e8 be e3 ff ff       	call   4230 <__cxa_free_exception@plt>
    5e72:	4c 89 e0             	mov    %r12,%rax
    5e75:	48 89 c7             	mov    %rax,%rdi
    5e78:	e8 43 e8 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    5e7d:	48 83 c4 30          	add    $0x30,%rsp
    5e81:	5b                   	pop    %rbx
    5e82:	41 5c                	pop    %r12
    5e84:	5d                   	pop    %rbp
    5e85:	c3                   	ret

0000000000005e86 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    5e86:	55                   	push   %rbp
    5e87:	48 89 e5             	mov    %rsp,%rbp
    5e8a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5e8d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5e90:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5e93:	0b 45 f8             	or     -0x8(%rbp),%eax
    5e96:	5d                   	pop    %rbp
    5e97:	c3                   	ret

0000000000005e98 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5e98:	55                   	push   %rbp
    5e99:	48 89 e5             	mov    %rsp,%rbp
    5e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ea4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eac:	48 8b 00             	mov    (%rax),%rax
    5eaf:	48 29 c2             	sub    %rax,%rdx
    5eb2:	48 89 d0             	mov    %rdx,%rax
    5eb5:	5d                   	pop    %rbp
    5eb6:	c3                   	ret
    5eb7:	90                   	nop

0000000000005eb8 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    5eb8:	55                   	push   %rbp
    5eb9:	48 89 e5             	mov    %rsp,%rbp
    5ebc:	48 83 ec 10          	sub    $0x10,%rsp
    5ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ec8:	48 8b 10             	mov    (%rax),%rdx
    5ecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ecf:	48 89 d6             	mov    %rdx,%rsi
    5ed2:	48 89 c7             	mov    %rax,%rdi
    5ed5:	e8 24 02 00 00       	call   60fe <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    5eda:	c9                   	leave
    5edb:	c3                   	ret

0000000000005edc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    5edc:	55                   	push   %rbp
    5edd:	48 89 e5             	mov    %rsp,%rbp
    5ee0:	53                   	push   %rbx
    5ee1:	48 83 ec 38          	sub    $0x38,%rsp
    5ee5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ee9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5eed:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    5ef1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5ef5:	48 89 c7             	mov    %rax,%rdi
    5ef8:	e8 5c eb ff ff       	call   4a59 <_ZNSt11char_traitsIcE6lengthEPKc>
    5efd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5f01:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5f05:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f09:	48 89 d6             	mov    %rdx,%rsi
    5f0c:	48 89 c7             	mov    %rax,%rdi
    5f0f:	e8 dc e1 ff ff       	call   40f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    5f14:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5f18:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    5f1c:	48 89 d6             	mov    %rdx,%rsi
    5f1f:	48 89 c7             	mov    %rax,%rdi
    5f22:	e8 e9 01 00 00       	call   6110 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    5f27:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    5f2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f2f:	48 89 d6             	mov    %rdx,%rsi
    5f32:	48 89 c7             	mov    %rax,%rdi
    5f35:	e8 36 e7 ff ff       	call   4670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    5f3a:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5f3e:	48 89 c7             	mov    %rax,%rdi
    5f41:	e8 ca e4 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    5f46:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5f4a:	48 89 c7             	mov    %rax,%rdi
    5f4d:	e8 be e4 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    5f52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5f56:	48 89 c7             	mov    %rax,%rdi
    5f59:	e8 b2 e2 ff ff       	call   4210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    5f5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f62:	48 01 c2             	add    %rax,%rdx
    5f65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f69:	48 89 d6             	mov    %rdx,%rsi
    5f6c:	48 89 c7             	mov    %rax,%rdi
    5f6f:	e8 8c e6 ff ff       	call   4600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    5f74:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f78:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5f7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f80:	48 89 ce             	mov    %rcx,%rsi
    5f83:	48 89 c7             	mov    %rax,%rdi
    5f86:	e8 b5 e0 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    5f8b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f93:	48 89 d6             	mov    %rdx,%rsi
    5f96:	48 89 c7             	mov    %rax,%rdi
    5f99:	e8 92 e7 ff ff       	call   4730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    5f9e:	eb 34                	jmp    5fd4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5fa0:	48 89 c3             	mov    %rax,%rbx
    5fa3:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5fa7:	48 89 c7             	mov    %rax,%rdi
    5faa:	e8 61 e4 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    5faf:	48 89 d8             	mov    %rbx,%rax
    5fb2:	48 89 c7             	mov    %rax,%rdi
    5fb5:	e8 06 e7 ff ff       	call   46c0 <_Unwind_Resume@plt>
    }
    5fba:	48 89 c3             	mov    %rax,%rbx
    5fbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fc1:	48 89 c7             	mov    %rax,%rdi
    5fc4:	e8 07 e2 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5fc9:	48 89 d8             	mov    %rbx,%rax
    5fcc:	48 89 c7             	mov    %rax,%rdi
    5fcf:	e8 ec e6 ff ff       	call   46c0 <_Unwind_Resume@plt>
    5fd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fd8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5fdc:	c9                   	leave
    5fdd:	c3                   	ret

0000000000005fde <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    5fde:	55                   	push   %rbp
    5fdf:	48 89 e5             	mov    %rsp,%rbp
    5fe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fea:	48 8b 00             	mov    (%rax),%rax
    5fed:	5d                   	pop    %rbp
    5fee:	c3                   	ret
    5fef:	90                   	nop

0000000000005ff0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5ff0:	55                   	push   %rbp
    5ff1:	48 89 e5             	mov    %rsp,%rbp
    5ff4:	53                   	push   %rbx
    5ff5:	48 83 ec 28          	sub    $0x28,%rsp
    5ff9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ffd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6001:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6005:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6009:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    600d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6011:	48 89 d6             	mov    %rdx,%rsi
    6014:	48 89 c7             	mov    %rax,%rdi
    6017:	e8 1d 01 00 00       	call   6139 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    601c:	48 89 c1             	mov    %rax,%rcx
    601f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6023:	48 89 c2             	mov    %rax,%rdx
    6026:	48 89 ce             	mov    %rcx,%rsi
    6029:	48 89 df             	mov    %rbx,%rdi
    602c:	e8 85 01 00 00       	call   61b6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6031:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6035:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6039:	48 89 d6             	mov    %rdx,%rsi
    603c:	48 89 c7             	mov    %rax,%rdi
    603f:	e8 14 02 00 00       	call   6258 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6044:	eb 1a                	jmp    6060 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    6046:	48 89 c3             	mov    %rax,%rbx
    6049:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    604d:	48 89 c7             	mov    %rax,%rdi
    6050:	e8 bf 01 00 00       	call   6214 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6055:	48 89 d8             	mov    %rbx,%rax
    6058:	48 89 c7             	mov    %rax,%rdi
    605b:	e8 60 e6 ff ff       	call   46c0 <_Unwind_Resume@plt>
    6060:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6064:	c9                   	leave
    6065:	c3                   	ret

0000000000006066 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6066:	55                   	push   %rbp
    6067:	48 89 e5             	mov    %rsp,%rbp
    606a:	48 83 ec 10          	sub    $0x10,%rsp
    606e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6076:	48 89 c7             	mov    %rax,%rdi
    6079:	e8 1a 02 00 00       	call   6298 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    607e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6085:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    608d:	48 8b 00             	mov    (%rax),%rax
    6090:	48 89 ce             	mov    %rcx,%rsi
    6093:	48 89 c7             	mov    %rax,%rdi
    6096:	e8 0b 02 00 00       	call   62a6 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    609b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    609f:	48 89 c7             	mov    %rax,%rdi
    60a2:	e8 6d 01 00 00       	call   6214 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    60a7:	90                   	nop
    60a8:	c9                   	leave
    60a9:	c3                   	ret

00000000000060aa <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    60aa:	55                   	push   %rbp
    60ab:	48 89 e5             	mov    %rsp,%rbp
    60ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    60b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    60be:	48 89 10             	mov    %rdx,(%rax)
    60c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    60cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60d0:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    60d7:	90                   	nop
    60d8:	5d                   	pop    %rbp
    60d9:	c3                   	ret

00000000000060da <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    60da:	55                   	push   %rbp
    60db:	48 89 e5             	mov    %rsp,%rbp
    60de:	48 83 ec 10          	sub    $0x10,%rsp
    60e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    60e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ea:	48 8b 10             	mov    (%rax),%rdx
    60ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60f1:	48 89 d6             	mov    %rdx,%rsi
    60f4:	48 89 c7             	mov    %rax,%rdi
    60f7:	e8 02 00 00 00       	call   60fe <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    60fc:	c9                   	leave
    60fd:	c3                   	ret

00000000000060fe <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    60fe:	55                   	push   %rbp
    60ff:	48 89 e5             	mov    %rsp,%rbp
    6102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6106:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    610a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    610e:	5d                   	pop    %rbp
    610f:	c3                   	ret

0000000000006110 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    6110:	55                   	push   %rbp
    6111:	48 89 e5             	mov    %rsp,%rbp
    6114:	48 83 ec 10          	sub    $0x10,%rsp
    6118:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    611c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    6120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6124:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6128:	48 89 d6             	mov    %rdx,%rsi
    612b:	48 89 c7             	mov    %rax,%rdi
    612e:	e8 a8 01 00 00       	call   62db <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    6133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6137:	c9                   	leave
    6138:	c3                   	ret

0000000000006139 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6139:	55                   	push   %rbp
    613a:	48 89 e5             	mov    %rsp,%rbp
    613d:	53                   	push   %rbx
    613e:	48 83 ec 28          	sub    $0x28,%rsp
    6142:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6146:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    614a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    614e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6152:	48 89 d6             	mov    %rdx,%rsi
    6155:	48 89 c7             	mov    %rax,%rdi
    6158:	e8 43 e0 ff ff       	call   41a0 <_ZNSaIcEC1ERKS_@plt>
    615d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6161:	48 89 c7             	mov    %rax,%rdi
    6164:	e8 9b 01 00 00       	call   6304 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    6169:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    616d:	0f 92 c3             	setb   %bl
    6170:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6174:	48 89 c7             	mov    %rax,%rdi
    6177:	e8 94 e2 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    617c:	84 db                	test   %bl,%bl
    617e:	74 0f                	je     618f <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6180:	48 8d 05 e9 11 01 00 	lea    0x111e9(%rip),%rax        # 17370 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x128>
    6187:	48 89 c7             	mov    %rax,%rdi
    618a:	e8 e1 df ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    618f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6193:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6197:	c9                   	leave
    6198:	c3                   	ret
    6199:	90                   	nop

000000000000619a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    619a:	55                   	push   %rbp
    619b:	48 89 e5             	mov    %rsp,%rbp
    619e:	48 83 ec 10          	sub    $0x10,%rsp
    61a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61aa:	48 89 c7             	mov    %rax,%rdi
    61ad:	e8 ae de ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    61b2:	90                   	nop
    61b3:	c9                   	leave
    61b4:	c3                   	ret
    61b5:	90                   	nop

00000000000061b6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    61b6:	55                   	push   %rbp
    61b7:	48 89 e5             	mov    %rsp,%rbp
    61ba:	53                   	push   %rbx
    61bb:	48 83 ec 28          	sub    $0x28,%rsp
    61bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61c7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    61cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61cf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    61d3:	48 89 d6             	mov    %rdx,%rsi
    61d6:	48 89 c7             	mov    %rax,%rdi
    61d9:	e8 68 01 00 00       	call   6346 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    61de:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    61e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61e6:	48 89 d6             	mov    %rdx,%rsi
    61e9:	48 89 c7             	mov    %rax,%rdi
    61ec:	e8 87 01 00 00       	call   6378 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    61f1:	eb 1a                	jmp    620d <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    61f3:	48 89 c3             	mov    %rax,%rbx
    61f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61fa:	48 89 c7             	mov    %rax,%rdi
    61fd:	e8 98 ff ff ff       	call   619a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6202:	48 89 d8             	mov    %rbx,%rax
    6205:	48 89 c7             	mov    %rax,%rdi
    6208:	e8 b3 e4 ff ff       	call   46c0 <_Unwind_Resume@plt>
    620d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6211:	c9                   	leave
    6212:	c3                   	ret
    6213:	90                   	nop

0000000000006214 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6214:	55                   	push   %rbp
    6215:	48 89 e5             	mov    %rsp,%rbp
    6218:	48 83 ec 10          	sub    $0x10,%rsp
    621c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6224:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    622c:	48 8b 00             	mov    (%rax),%rax
    622f:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    6232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6236:	48 8b 08             	mov    (%rax),%rcx
    6239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    623d:	48 89 ce             	mov    %rcx,%rsi
    6240:	48 89 c7             	mov    %rax,%rdi
    6243:	e8 82 01 00 00       	call   63ca <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    6248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    624c:	48 89 c7             	mov    %rax,%rdi
    624f:	e8 46 ff ff ff       	call   619a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6254:	90                   	nop
    6255:	c9                   	leave
    6256:	c3                   	ret
    6257:	90                   	nop

0000000000006258 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6258:	55                   	push   %rbp
    6259:	48 89 e5             	mov    %rsp,%rbp
    625c:	48 83 ec 10          	sub    $0x10,%rsp
    6260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6264:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    626c:	48 89 c7             	mov    %rax,%rdi
    626f:	e8 24 00 00 00       	call   6298 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6274:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    627b:	48 8b 00             	mov    (%rax),%rax
    627e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6282:	48 89 ce             	mov    %rcx,%rsi
    6285:	48 89 c7             	mov    %rax,%rdi
    6288:	e8 72 01 00 00       	call   63ff <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    628d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6291:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6295:	90                   	nop
    6296:	c9                   	leave
    6297:	c3                   	ret

0000000000006298 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6298:	55                   	push   %rbp
    6299:	48 89 e5             	mov    %rsp,%rbp
    629c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    62a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a4:	5d                   	pop    %rbp
    62a5:	c3                   	ret

00000000000062a6 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    62a6:	55                   	push   %rbp
    62a7:	48 89 e5             	mov    %rsp,%rbp
    62aa:	48 83 ec 20          	sub    $0x20,%rsp
    62ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    62ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62c2:	48 89 d6             	mov    %rdx,%rsi
    62c5:	48 89 c7             	mov    %rax,%rdi
    62c8:	e8 5b 01 00 00       	call   6428 <_ZSt8_DestroyIPcEvT_S1_>
    }
    62cd:	90                   	nop
    62ce:	c9                   	leave
    62cf:	c3                   	ret

00000000000062d0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    62d0:	55                   	push   %rbp
    62d1:	48 89 e5             	mov    %rsp,%rbp
    62d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    62d8:	90                   	nop
    62d9:	5d                   	pop    %rbp
    62da:	c3                   	ret

00000000000062db <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    62db:	55                   	push   %rbp
    62dc:	48 89 e5             	mov    %rsp,%rbp
    62df:	48 83 ec 10          	sub    $0x10,%rsp
    62e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    62eb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f3:	48 89 d6             	mov    %rdx,%rsi
    62f6:	48 89 c7             	mov    %rax,%rdi
    62f9:	e8 a2 de ff ff       	call   41a0 <_ZNSaIcEC1ERKS_@plt>
    62fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6302:	c9                   	leave
    6303:	c3                   	ret

0000000000006304 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6304:	55                   	push   %rbp
    6305:	48 89 e5             	mov    %rsp,%rbp
    6308:	48 83 ec 20          	sub    $0x20,%rsp
    630c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6310:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6317:	ff ff 7f 
    631a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    631e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6322:	48 89 c7             	mov    %rax,%rdi
    6325:	e8 52 01 00 00       	call   647c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    632a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    632e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6332:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6336:	48 89 d6             	mov    %rdx,%rsi
    6339:	48 89 c7             	mov    %rax,%rdi
    633c:	e8 bc ef ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    6341:	48 8b 00             	mov    (%rax),%rax
      }
    6344:	c9                   	leave
    6345:	c3                   	ret

0000000000006346 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6346:	55                   	push   %rbp
    6347:	48 89 e5             	mov    %rsp,%rbp
    634a:	48 83 ec 10          	sub    $0x10,%rsp
    634e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6352:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6356:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    635a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    635e:	48 89 d6             	mov    %rdx,%rsi
    6361:	48 89 c7             	mov    %rax,%rdi
    6364:	e8 37 e2 ff ff       	call   45a0 <_ZNSaIcEC2ERKS_@plt>
    6369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636d:	48 89 c7             	mov    %rax,%rdi
    6370:	e8 21 01 00 00       	call   6496 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    6375:	90                   	nop
    6376:	c9                   	leave
    6377:	c3                   	ret

0000000000006378 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6378:	55                   	push   %rbp
    6379:	48 89 e5             	mov    %rsp,%rbp
    637c:	48 83 ec 10          	sub    $0x10,%rsp
    6380:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6384:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6388:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    638c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6390:	48 89 d6             	mov    %rdx,%rsi
    6393:	48 89 c7             	mov    %rax,%rdi
    6396:	e8 29 01 00 00       	call   64c4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    639b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    639f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    63a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63a6:	48 8b 10             	mov    (%rax),%rdx
    63a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ad:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    63b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b5:	48 8b 10             	mov    (%rax),%rdx
    63b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63bc:	48 01 c2             	add    %rax,%rdx
    63bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63c3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    63c7:	90                   	nop
    63c8:	c9                   	leave
    63c9:	c3                   	ret

00000000000063ca <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    63ca:	55                   	push   %rbp
    63cb:	48 89 e5             	mov    %rsp,%rbp
    63ce:	48 83 ec 20          	sub    $0x20,%rsp
    63d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    63de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    63e3:	74 17                	je     63fc <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    63e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    63f1:	48 89 ce             	mov    %rcx,%rsi
    63f4:	48 89 c7             	mov    %rax,%rdi
    63f7:	e8 52 00 00 00       	call   644e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    63fc:	90                   	nop
    63fd:	c9                   	leave
    63fe:	c3                   	ret

00000000000063ff <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    63ff:	55                   	push   %rbp
    6400:	48 89 e5             	mov    %rsp,%rbp
    6403:	48 83 ec 20          	sub    $0x20,%rsp
    6407:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    640b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    640f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6413:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    641b:	48 89 d6             	mov    %rdx,%rsi
    641e:	48 89 c7             	mov    %rax,%rdi
    6421:	e8 d1 00 00 00       	call   64f7 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    6426:	c9                   	leave
    6427:	c3                   	ret

0000000000006428 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6428:	55                   	push   %rbp
    6429:	48 89 e5             	mov    %rsp,%rbp
    642c:	48 83 ec 10          	sub    $0x10,%rsp
    6430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6434:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6438:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    643c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6440:	48 89 d6             	mov    %rdx,%rsi
    6443:	48 89 c7             	mov    %rax,%rdi
    6446:	e8 d5 00 00 00       	call   6520 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    644b:	90                   	nop
    644c:	c9                   	leave
    644d:	c3                   	ret

000000000000644e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    644e:	55                   	push   %rbp
    644f:	48 89 e5             	mov    %rsp,%rbp
    6452:	48 83 ec 20          	sub    $0x20,%rsp
    6456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    645a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    645e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6462:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6466:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    646a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646e:	48 89 ce             	mov    %rcx,%rsi
    6471:	48 89 c7             	mov    %rax,%rdi
    6474:	e8 c5 00 00 00       	call   653e <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    6479:	90                   	nop
    647a:	c9                   	leave
    647b:	c3                   	ret

000000000000647c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    647c:	55                   	push   %rbp
    647d:	48 89 e5             	mov    %rsp,%rbp
    6480:	48 83 ec 10          	sub    $0x10,%rsp
    6484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    648c:	48 89 c7             	mov    %rax,%rdi
    648f:	e8 d4 00 00 00       	call   6568 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    6494:	c9                   	leave
    6495:	c3                   	ret

0000000000006496 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6496:	55                   	push   %rbp
    6497:	48 89 e5             	mov    %rsp,%rbp
    649a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    649e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64a2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    64a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ad:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    64b4:	00 
    64b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    64c0:	00 
	{ }
    64c1:	90                   	nop
    64c2:	5d                   	pop    %rbp
    64c3:	c3                   	ret

00000000000064c4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    64c4:	55                   	push   %rbp
    64c5:	48 89 e5             	mov    %rsp,%rbp
    64c8:	48 83 ec 10          	sub    $0x10,%rsp
    64cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    64d4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    64d9:	74 15                	je     64f0 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    64db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64e3:	48 89 d6             	mov    %rdx,%rsi
    64e6:	48 89 c7             	mov    %rax,%rdi
    64e9:	e8 94 00 00 00       	call   6582 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    64ee:	eb 05                	jmp    64f5 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    64f0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    64f5:	c9                   	leave
    64f6:	c3                   	ret

00000000000064f7 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    64f7:	55                   	push   %rbp
    64f8:	48 89 e5             	mov    %rsp,%rbp
    64fb:	48 83 ec 20          	sub    $0x20,%rsp
    64ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6503:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6507:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    650b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    650f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6513:	48 89 d6             	mov    %rdx,%rsi
    6516:	48 89 c7             	mov    %rax,%rdi
    6519:	e8 8e 00 00 00       	call   65ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    651e:	c9                   	leave
    651f:	c3                   	ret

0000000000006520 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6520:	55                   	push   %rbp
    6521:	48 89 e5             	mov    %rsp,%rbp
    6524:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6528:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    652c:	90                   	nop
    652d:	5d                   	pop    %rbp
    652e:	c3                   	ret

000000000000652f <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    652f:	55                   	push   %rbp
    6530:	48 89 e5             	mov    %rsp,%rbp
    6533:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6537:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    653b:	5d                   	pop    %rbp
    653c:	c3                   	ret
    653d:	90                   	nop

000000000000653e <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    653e:	55                   	push   %rbp
    653f:	48 89 e5             	mov    %rsp,%rbp
    6542:	48 83 ec 20          	sub    $0x20,%rsp
    6546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    654a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    654e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6552:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6556:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    655a:	48 89 d6             	mov    %rdx,%rsi
    655d:	48 89 c7             	mov    %rax,%rdi
    6560:	e8 1b de ff ff       	call   4380 <_ZdlPvm@plt>
      }
    6565:	c9                   	leave
    6566:	c3                   	ret
    6567:	90                   	nop

0000000000006568 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6568:	55                   	push   %rbp
    6569:	48 89 e5             	mov    %rsp,%rbp
    656c:	48 83 ec 10          	sub    $0x10,%rsp
    6570:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6574:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6578:	48 89 c7             	mov    %rax,%rdi
    657b:	e8 8a 00 00 00       	call   660a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6580:	c9                   	leave
    6581:	c3                   	ret

0000000000006582 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6582:	55                   	push   %rbp
    6583:	48 89 e5             	mov    %rsp,%rbp
    6586:	48 83 ec 10          	sub    $0x10,%rsp
    658a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    658e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6592:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6596:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    659a:	ba 00 00 00 00       	mov    $0x0,%edx
    659f:	48 89 ce             	mov    %rcx,%rsi
    65a2:	48 89 c7             	mov    %rax,%rdi
    65a5:	e8 74 00 00 00       	call   661e <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    65aa:	c9                   	leave
    65ab:	c3                   	ret

00000000000065ac <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    65ac:	55                   	push   %rbp
    65ad:	48 89 e5             	mov    %rsp,%rbp
    65b0:	48 83 ec 20          	sub    $0x20,%rsp
    65b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    65bc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    65c1:	74 40                	je     6603 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    65c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65c7:	48 89 c7             	mov    %rax,%rdi
    65ca:	e8 60 ff ff ff       	call   652f <_ZSt11__addressofIcEPT_RS0_>
    65cf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    65d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65d7:	48 89 c7             	mov    %rax,%rdi
    65da:	e8 87 00 00 00       	call   6666 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    65df:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    65e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65e8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    65ec:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    65f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65f4:	48 89 ce             	mov    %rcx,%rsi
    65f7:	48 89 c7             	mov    %rax,%rdi
    65fa:	e8 8a 00 00 00       	call   6689 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    65ff:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6603:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6607:	c9                   	leave
    6608:	c3                   	ret
    6609:	90                   	nop

000000000000660a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    660a:	55                   	push   %rbp
    660b:	48 89 e5             	mov    %rsp,%rbp
    660e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6612:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6619:	ff ff 7f 
      }
    661c:	5d                   	pop    %rbp
    661d:	c3                   	ret

000000000000661e <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    661e:	55                   	push   %rbp
    661f:	48 89 e5             	mov    %rsp,%rbp
    6622:	48 83 ec 20          	sub    $0x20,%rsp
    6626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    662a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    662e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6636:	48 89 c7             	mov    %rax,%rdi
    6639:	e8 cc ff ff ff       	call   660a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    663e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6642:	0f 92 c0             	setb   %al
    6645:	0f b6 c0             	movzbl %al,%eax
    6648:	48 85 c0             	test   %rax,%rax
    664b:	0f 95 c0             	setne  %al
    664e:	84 c0                	test   %al,%al
    6650:	74 05                	je     6657 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    6652:	e8 89 da ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6657:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    665b:	48 89 c7             	mov    %rax,%rdi
    665e:	e8 0d dd ff ff       	call   4370 <_Znwm@plt>
    6663:	90                   	nop
      }
    6664:	c9                   	leave
    6665:	c3                   	ret

0000000000006666 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6666:	55                   	push   %rbp
    6667:	48 89 e5             	mov    %rsp,%rbp
    666a:	48 83 ec 10          	sub    $0x10,%rsp
    666e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6676:	48 89 c6             	mov    %rax,%rsi
    6679:	bf 01 00 00 00       	mov    $0x1,%edi
    667e:	e8 ad e7 ff ff       	call   4e30 <_ZnwmPv>
    6683:	c6 00 00             	movb   $0x0,(%rax)
    }
    6686:	90                   	nop
    6687:	c9                   	leave
    6688:	c3                   	ret

0000000000006689 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6689:	55                   	push   %rbp
    668a:	48 89 e5             	mov    %rsp,%rbp
    668d:	48 83 ec 20          	sub    $0x20,%rsp
    6691:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6695:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6699:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    669d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    66a1:	48 89 c7             	mov    %rax,%rdi
    66a4:	e8 27 fc ff ff       	call   62d0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    66a9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66ad:	48 89 c7             	mov    %rax,%rdi
    66b0:	e8 8d e7 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    66b5:	48 89 c1             	mov    %rax,%rcx
    66b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66c0:	48 89 ce             	mov    %rcx,%rsi
    66c3:	48 89 c7             	mov    %rax,%rdi
    66c6:	e8 02 00 00 00       	call   66cd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    66cb:	c9                   	leave
    66cc:	c3                   	ret

00000000000066cd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    66cd:	55                   	push   %rbp
    66ce:	48 89 e5             	mov    %rsp,%rbp
    66d1:	48 83 ec 20          	sub    $0x20,%rsp
    66d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    66e1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    66e6:	75 06                	jne    66ee <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    66e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66ec:	eb 2a                	jmp    6718 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    66ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    66f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66f6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    66fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6702:	48 89 ce             	mov    %rcx,%rsi
    6705:	48 89 c7             	mov    %rax,%rdi
    6708:	e8 0d 00 00 00       	call   671a <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    670d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6711:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6715:	48 01 d0             	add    %rdx,%rax
    }
    6718:	c9                   	leave
    6719:	c3                   	ret

000000000000671a <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    671a:	55                   	push   %rbp
    671b:	48 89 e5             	mov    %rsp,%rbp
    671e:	48 83 ec 20          	sub    $0x20,%rsp
    6722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6726:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    672a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    672e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6732:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    673a:	48 89 ce             	mov    %rcx,%rsi
    673d:	48 89 c7             	mov    %rax,%rdi
    6740:	e8 03 00 00 00       	call   6748 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    6745:	90                   	nop
    6746:	c9                   	leave
    6747:	c3                   	ret

0000000000006748 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    6748:	55                   	push   %rbp
    6749:	48 89 e5             	mov    %rsp,%rbp
    674c:	48 83 ec 30          	sub    $0x30,%rsp
    6750:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6754:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6758:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    675c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6760:	0f b6 00             	movzbl (%rax),%eax
    6763:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    6766:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    676a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    676e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6772:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6777:	74 19                	je     6792 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6779:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    677d:	0f b6 c8             	movzbl %al,%ecx
    6780:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6784:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6788:	89 ce                	mov    %ecx,%esi
    678a:	48 89 c7             	mov    %rax,%rdi
    678d:	e8 fe d9 ff ff       	call   4190 <memset@plt>
    }
    6792:	90                   	nop
    6793:	c9                   	leave
    6794:	c3                   	ret

0000000000006795 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    6795:	55                   	push   %rbp
    6796:	48 89 e5             	mov    %rsp,%rbp
    6799:	48 83 ec 10          	sub    $0x10,%rsp
    679d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67a5:	48 89 c7             	mov    %rax,%rdi
    67a8:	e8 23 d9 ff ff       	call   40d0 <glfwDestroyWindow@plt>
    67ad:	90                   	nop
    67ae:	c9                   	leave
    67af:	c3                   	ret

00000000000067b0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    67b0:	55                   	push   %rbp
    67b1:	48 89 e5             	mov    %rsp,%rbp
    67b4:	48 83 ec 10          	sub    $0x10,%rsp
    67b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    67c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c8:	48 89 d6             	mov    %rdx,%rsi
    67cb:	48 89 c7             	mov    %rax,%rdi
    67ce:	e8 bd db ff ff       	call   4390 <vkDestroyInstance@plt>
}
    67d3:	90                   	nop
    67d4:	c9                   	leave
    67d5:	c3                   	ret

00000000000067d6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    67d6:	55                   	push   %rbp
    67d7:	48 89 e5             	mov    %rsp,%rbp
    67da:	48 83 ec 10          	sub    $0x10,%rsp
    67de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    67e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ee:	48 89 d6             	mov    %rdx,%rsi
    67f1:	48 89 c7             	mov    %rax,%rdi
    67f4:	e8 97 da ff ff       	call   4290 <vkDestroyDevice@plt>
}
    67f9:	90                   	nop
    67fa:	c9                   	leave
    67fb:	c3                   	ret

00000000000067fc <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    67fc:	55                   	push   %rbp
    67fd:	48 89 e5             	mov    %rsp,%rbp
    6800:	48 83 ec 20          	sub    $0x20,%rsp
    6804:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6808:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    680c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    6810:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6814:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    681c:	48 89 ce             	mov    %rcx,%rsi
    681f:	48 89 c7             	mov    %rax,%rdi
    6822:	e8 89 de ff ff       	call   46b0 <vkDestroySurfaceKHR@plt>
}
    6827:	90                   	nop
    6828:	c9                   	leave
    6829:	c3                   	ret

000000000000682a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    682a:	55                   	push   %rbp
    682b:	48 89 e5             	mov    %rsp,%rbp
    682e:	48 83 ec 20          	sub    $0x20,%rsp
    6832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    683a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    683e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6842:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6846:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    684a:	48 89 ce             	mov    %rcx,%rsi
    684d:	48 89 c7             	mov    %rax,%rdi
    6850:	e8 6b d8 ff ff       	call   40c0 <vkDestroySwapchainKHR@plt>
}
    6855:	90                   	nop
    6856:	c9                   	leave
    6857:	c3                   	ret

0000000000006858 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6858:	55                   	push   %rbp
    6859:	48 89 e5             	mov    %rsp,%rbp
    685c:	48 83 ec 20          	sub    $0x20,%rsp
    6860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6864:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6868:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    686c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6870:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6878:	48 89 ce             	mov    %rcx,%rsi
    687b:	48 89 c7             	mov    %rax,%rdi
    687e:	e8 5d de ff ff       	call   46e0 <vkDestroyImageView@plt>
}
    6883:	90                   	nop
    6884:	c9                   	leave
    6885:	c3                   	ret

0000000000006886 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    6886:	55                   	push   %rbp
    6887:	48 89 e5             	mov    %rsp,%rbp
    688a:	48 83 ec 20          	sub    $0x20,%rsp
    688e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6892:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6896:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    689a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    689e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68a6:	48 89 ce             	mov    %rcx,%rsi
    68a9:	48 89 c7             	mov    %rax,%rdi
    68ac:	e8 ef db ff ff       	call   44a0 <vkDestroyShaderModule@plt>
}
    68b1:	90                   	nop
    68b2:	c9                   	leave
    68b3:	c3                   	ret

00000000000068b4 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    68b4:	55                   	push   %rbp
    68b5:	48 89 e5             	mov    %rsp,%rbp
    68b8:	48 83 ec 20          	sub    $0x20,%rsp
    68bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    68c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68d4:	48 89 ce             	mov    %rcx,%rsi
    68d7:	48 89 c7             	mov    %rax,%rdi
    68da:	e8 f1 db ff ff       	call   44d0 <vkDestroyPipelineLayout@plt>
}
    68df:	90                   	nop
    68e0:	c9                   	leave
    68e1:	c3                   	ret

00000000000068e2 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    68e2:	55                   	push   %rbp
    68e3:	48 89 e5             	mov    %rsp,%rbp
    68e6:	48 83 ec 20          	sub    $0x20,%rsp
    68ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    68f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68fa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6902:	48 89 ce             	mov    %rcx,%rsi
    6905:	48 89 c7             	mov    %rax,%rdi
    6908:	e8 43 da ff ff       	call   4350 <vkDestroyRenderPass@plt>
}
    690d:	90                   	nop
    690e:	c9                   	leave
    690f:	c3                   	ret

0000000000006910 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    6910:	55                   	push   %rbp
    6911:	48 89 e5             	mov    %rsp,%rbp
    6914:	48 83 ec 20          	sub    $0x20,%rsp
    6918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    691c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6920:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    6924:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6928:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    692c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6930:	48 89 ce             	mov    %rcx,%rsi
    6933:	48 89 c7             	mov    %rax,%rdi
    6936:	e8 e5 da ff ff       	call   4420 <vkDestroyPipeline@plt>
}
    693b:	90                   	nop
    693c:	c9                   	leave
    693d:	c3                   	ret

000000000000693e <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    693e:	55                   	push   %rbp
    693f:	48 89 e5             	mov    %rsp,%rbp
    6942:	48 83 ec 40          	sub    $0x40,%rsp
    6946:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    694a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    694e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6952:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6956:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    695a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    695e:	48 89 c7             	mov    %rax,%rdi
    6961:	e8 96 00 00 00       	call   69fc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    6966:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    696a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696e:	48 89 c7             	mov    %rax,%rdi
    6971:	e8 ac 00 00 00       	call   6a22 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    6976:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    697a:	eb 36                	jmp    69b2 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    697c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6980:	48 89 c7             	mov    %rax,%rdi
    6983:	e8 1e 01 00 00       	call   6aa6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    6988:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    698c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6990:	48 8b 08             	mov    (%rax),%rcx
    6993:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6997:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    699b:	48 89 ce             	mov    %rcx,%rsi
    699e:	48 89 c7             	mov    %rax,%rdi
    69a1:	e8 7a da ff ff       	call   4420 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    69a6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    69aa:	48 89 c7             	mov    %rax,%rdi
    69ad:	e8 d4 00 00 00       	call   6a86 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    69b2:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    69b6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    69ba:	48 89 d6             	mov    %rdx,%rsi
    69bd:	48 89 c7             	mov    %rax,%rdi
    69c0:	e8 86 00 00 00       	call   6a4b <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    69c5:	84 c0                	test   %al,%al
    69c7:	75 b3                	jne    697c <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    69c9:	90                   	nop
    69ca:	90                   	nop
    69cb:	c9                   	leave
    69cc:	c3                   	ret

00000000000069cd <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    69cd:	55                   	push   %rbp
    69ce:	48 89 e5             	mov    %rsp,%rbp
    69d1:	48 83 ec 20          	sub    $0x20,%rsp
    69d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    69e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ed:	48 89 ce             	mov    %rcx,%rsi
    69f0:	48 89 c7             	mov    %rax,%rdi
    69f3:	e8 98 db ff ff       	call   4590 <vkDestroyCommandPool@plt>
}
    69f8:	90                   	nop
    69f9:	c9                   	leave
    69fa:	c3                   	ret
    69fb:	90                   	nop

00000000000069fc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    69fc:	55                   	push   %rbp
    69fd:	48 89 e5             	mov    %rsp,%rbp
    6a00:	48 83 ec 20          	sub    $0x20,%rsp
    6a04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6a08:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a0c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a10:	48 89 d6             	mov    %rdx,%rsi
    6a13:	48 89 c7             	mov    %rax,%rdi
    6a16:	e8 9d 00 00 00       	call   6ab8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6a1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a1f:	c9                   	leave
    6a20:	c3                   	ret
    6a21:	90                   	nop

0000000000006a22 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6a22:	55                   	push   %rbp
    6a23:	48 89 e5             	mov    %rsp,%rbp
    6a26:	48 83 ec 20          	sub    $0x20,%rsp
    6a2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6a2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a32:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6a36:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a3a:	48 89 d6             	mov    %rdx,%rsi
    6a3d:	48 89 c7             	mov    %rax,%rdi
    6a40:	e8 73 00 00 00       	call   6ab8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6a45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a49:	c9                   	leave
    6a4a:	c3                   	ret

0000000000006a4b <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6a4b:	55                   	push   %rbp
    6a4c:	48 89 e5             	mov    %rsp,%rbp
    6a4f:	53                   	push   %rbx
    6a50:	48 83 ec 18          	sub    $0x18,%rsp
    6a54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6a58:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6a5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a60:	48 89 c7             	mov    %rax,%rdi
    6a63:	e8 6e 00 00 00       	call   6ad6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6a68:	48 8b 18             	mov    (%rax),%rbx
    6a6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6a6f:	48 89 c7             	mov    %rax,%rdi
    6a72:	e8 5f 00 00 00       	call   6ad6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6a77:	48 8b 00             	mov    (%rax),%rax
    6a7a:	48 39 c3             	cmp    %rax,%rbx
    6a7d:	0f 95 c0             	setne  %al
    6a80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6a84:	c9                   	leave
    6a85:	c3                   	ret

0000000000006a86 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6a86:	55                   	push   %rbp
    6a87:	48 89 e5             	mov    %rsp,%rbp
    6a8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a92:	48 8b 00             	mov    (%rax),%rax
    6a95:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a9d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6aa4:	5d                   	pop    %rbp
    6aa5:	c3                   	ret

0000000000006aa6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6aa6:	55                   	push   %rbp
    6aa7:	48 89 e5             	mov    %rsp,%rbp
    6aaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6aae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ab2:	48 8b 00             	mov    (%rax),%rax
    6ab5:	5d                   	pop    %rbp
    6ab6:	c3                   	ret
    6ab7:	90                   	nop

0000000000006ab8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6ab8:	55                   	push   %rbp
    6ab9:	48 89 e5             	mov    %rsp,%rbp
    6abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ac0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6ac4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ac8:	48 8b 10             	mov    (%rax),%rdx
    6acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6acf:	48 89 10             	mov    %rdx,(%rax)
    6ad2:	90                   	nop
    6ad3:	5d                   	pop    %rbp
    6ad4:	c3                   	ret
    6ad5:	90                   	nop

0000000000006ad6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6ad6:	55                   	push   %rbp
    6ad7:	48 89 e5             	mov    %rsp,%rbp
    6ada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ae2:	5d                   	pop    %rbp
    6ae3:	c3                   	ret

0000000000006ae4 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6ae4:	55                   	push   %rbp
    6ae5:	48 89 e5             	mov    %rsp,%rbp
    6ae8:	53                   	push   %rbx
    6ae9:	48 83 ec 28          	sub    $0x28,%rsp
    6aed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6af1:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6af5:	be 00 00 00 00       	mov    $0x0,%esi
    6afa:	48 89 c7             	mov    %rax,%rdi
    6afd:	e8 4e d9 ff ff       	call   4450 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6b02:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6b05:	89 c3                	mov    %eax,%ebx
    6b07:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b0b:	48 89 c7             	mov    %rax,%rdi
    6b0e:	e8 47 11 00 00       	call   7c5a <_ZNSaI17VkLayerPropertiesEC1Ev>
    6b13:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6b17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b1b:	48 89 de             	mov    %rbx,%rsi
    6b1e:	48 89 c7             	mov    %rax,%rdi
    6b21:	e8 6c 11 00 00       	call   7c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6b26:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b2a:	48 89 c7             	mov    %rax,%rdi
    6b2d:	e8 44 11 00 00       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6b32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b36:	48 89 c7             	mov    %rax,%rdi
    6b39:	e8 0e 12 00 00       	call   7d4c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6b3e:	48 89 c2             	mov    %rax,%rdx
    6b41:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6b45:	48 89 d6             	mov    %rdx,%rsi
    6b48:	48 89 c7             	mov    %rax,%rdi
    6b4b:	e8 00 d9 ff ff       	call   4450 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6b50:	eb 34                	jmp    6b86 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6b52:	48 89 c3             	mov    %rax,%rbx
    6b55:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b59:	48 89 c7             	mov    %rax,%rdi
    6b5c:	e8 15 11 00 00       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
    6b61:	48 89 d8             	mov    %rbx,%rax
    6b64:	48 89 c7             	mov    %rax,%rdi
    6b67:	e8 54 db ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    6b6c:	48 89 c3             	mov    %rax,%rbx
    6b6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b73:	48 89 c7             	mov    %rax,%rdi
    6b76:	e8 8d 11 00 00       	call   7d08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6b7b:	48 89 d8             	mov    %rbx,%rax
    6b7e:	48 89 c7             	mov    %rax,%rdi
    6b81:	e8 3a db ff ff       	call   46c0 <_Unwind_Resume@plt>
    6b86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b8e:	c9                   	leave
    6b8f:	c3                   	ret

0000000000006b90 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    6b90:	55                   	push   %rbp
    6b91:	48 89 e5             	mov    %rsp,%rbp
    6b94:	41 54                	push   %r12
    6b96:	53                   	push   %rbx
    6b97:	48 83 ec 20          	sub    $0x20,%rsp
    6b9b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6b9f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6ba3:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6ba7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6bab:	ba 00 00 00 00       	mov    $0x0,%edx
    6bb0:	48 89 ce             	mov    %rcx,%rsi
    6bb3:	48 89 c7             	mov    %rax,%rdi
    6bb6:	e8 f5 d6 ff ff       	call   42b0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    6bbb:	85 c0                	test   %eax,%eax
    6bbd:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6bc0:	84 c0                	test   %al,%al
    6bc2:	74 3b                	je     6bff <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    6bc4:	bf 10 00 00 00       	mov    $0x10,%edi
    6bc9:	e8 92 d5 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6bce:	48 89 c3             	mov    %rax,%rbx
    6bd1:	48 8d 05 80 13 01 00 	lea    0x11380(%rip),%rax        # 17f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6bd8:	48 89 c6             	mov    %rax,%rsi
    6bdb:	48 89 df             	mov    %rbx,%rdi
    6bde:	e8 1d d5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6be3:	48 8b 05 be f3 01 00 	mov    0x1f3be(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6bea:	48 89 c2             	mov    %rax,%rdx
    6bed:	48 8d 05 4c f1 01 00 	lea    0x1f14c(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6bf4:	48 89 c6             	mov    %rax,%rsi
    6bf7:	48 89 df             	mov    %rbx,%rdi
    6bfa:	e8 61 da ff ff       	call   4660 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6bff:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6c02:	89 c3                	mov    %eax,%ebx
    6c04:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c08:	48 89 c7             	mov    %rax,%rdi
    6c0b:	e8 b8 11 00 00       	call   7dc8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6c10:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6c14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c18:	48 89 de             	mov    %rbx,%rsi
    6c1b:	48 89 c7             	mov    %rax,%rdi
    6c1e:	e8 dd 11 00 00       	call   7e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6c23:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c27:	48 89 c7             	mov    %rax,%rdi
    6c2a:	e8 b5 11 00 00       	call   7de4 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6c2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c33:	48 89 c7             	mov    %rax,%rdi
    6c36:	e8 7f 12 00 00       	call   7eba <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6c3b:	48 89 c2             	mov    %rax,%rdx
    6c3e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6c42:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6c46:	48 89 ce             	mov    %rcx,%rsi
    6c49:	48 89 c7             	mov    %rax,%rdi
    6c4c:	e8 5f d6 ff ff       	call   42b0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    6c51:	85 c0                	test   %eax,%eax
    6c53:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6c56:	84 c0                	test   %al,%al
    6c58:	0f 84 95 00 00 00    	je     6cf3 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    6c5e:	bf 10 00 00 00       	mov    $0x10,%edi
    6c63:	e8 f8 d4 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6c68:	48 89 c3             	mov    %rax,%rbx
    6c6b:	48 8d 05 e6 12 01 00 	lea    0x112e6(%rip),%rax        # 17f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6c72:	48 89 c6             	mov    %rax,%rsi
    6c75:	48 89 df             	mov    %rbx,%rdi
    6c78:	e8 83 d4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6c7d:	48 8b 05 24 f3 01 00 	mov    0x1f324(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6c84:	48 89 c2             	mov    %rax,%rdx
    6c87:	48 8d 05 b2 f0 01 00 	lea    0x1f0b2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6c8e:	48 89 c6             	mov    %rax,%rsi
    6c91:	48 89 df             	mov    %rbx,%rdi
    6c94:	e8 c7 d9 ff ff       	call   4660 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6c99:	49 89 c4             	mov    %rax,%r12
    6c9c:	48 89 df             	mov    %rbx,%rdi
    6c9f:	e8 8c d5 ff ff       	call   4230 <__cxa_free_exception@plt>
    6ca4:	4c 89 e0             	mov    %r12,%rax
    6ca7:	48 89 c7             	mov    %rax,%rdi
    6caa:	e8 11 da ff ff       	call   46c0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6caf:	48 89 c3             	mov    %rax,%rbx
    6cb2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6cb6:	48 89 c7             	mov    %rax,%rdi
    6cb9:	e8 26 11 00 00       	call   7de4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6cbe:	48 89 d8             	mov    %rbx,%rax
    6cc1:	48 89 c7             	mov    %rax,%rdi
    6cc4:	e8 f7 d9 ff ff       	call   46c0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6cc9:	49 89 c4             	mov    %rax,%r12
    6ccc:	48 89 df             	mov    %rbx,%rdi
    6ccf:	e8 5c d5 ff ff       	call   4230 <__cxa_free_exception@plt>
    6cd4:	4c 89 e3             	mov    %r12,%rbx
    6cd7:	eb 03                	jmp    6cdc <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    6cd9:	48 89 c3             	mov    %rax,%rbx
    6cdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ce0:	48 89 c7             	mov    %rax,%rdi
    6ce3:	e8 8e 11 00 00       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6ce8:	48 89 d8             	mov    %rbx,%rax
    6ceb:	48 89 c7             	mov    %rax,%rdi
    6cee:	e8 cd d9 ff ff       	call   46c0 <_Unwind_Resume@plt>
  return instanceExtensions;
    6cf3:	90                   	nop
}
    6cf4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6cf8:	48 83 c4 20          	add    $0x20,%rsp
    6cfc:	5b                   	pop    %rbx
    6cfd:	41 5c                	pop    %r12
    6cff:	5d                   	pop    %rbp
    6d00:	c3                   	ret

0000000000006d01 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    6d01:	55                   	push   %rbp
    6d02:	48 89 e5             	mov    %rsp,%rbp
    6d05:	41 54                	push   %r12
    6d07:	53                   	push   %rbx
    6d08:	48 83 ec 30          	sub    $0x30,%rsp
    6d0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6d10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6d14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    6d18:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6d1c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6d20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d24:	b9 00 00 00 00       	mov    $0x0,%ecx
    6d29:	48 89 c7             	mov    %rax,%rdi
    6d2c:	e8 3f d8 ff ff       	call   4570 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    6d31:	85 c0                	test   %eax,%eax
    6d33:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6d36:	84 c0                	test   %al,%al
    6d38:	74 3b                	je     6d75 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    6d3a:	bf 10 00 00 00       	mov    $0x10,%edi
    6d3f:	e8 1c d4 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6d44:	48 89 c3             	mov    %rax,%rbx
    6d47:	48 8d 05 32 12 01 00 	lea    0x11232(%rip),%rax        # 17f80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6d4e:	48 89 c6             	mov    %rax,%rsi
    6d51:	48 89 df             	mov    %rbx,%rdi
    6d54:	e8 a7 d3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6d59:	48 8b 05 48 f2 01 00 	mov    0x1f248(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6d60:	48 89 c2             	mov    %rax,%rdx
    6d63:	48 8d 05 d6 ef 01 00 	lea    0x1efd6(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6d6a:	48 89 c6             	mov    %rax,%rsi
    6d6d:	48 89 df             	mov    %rbx,%rdi
    6d70:	e8 eb d8 ff ff       	call   4660 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6d75:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6d78:	89 c3                	mov    %eax,%ebx
    6d7a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d7e:	48 89 c7             	mov    %rax,%rdi
    6d81:	e8 42 10 00 00       	call   7dc8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6d86:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6d8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d8e:	48 89 de             	mov    %rbx,%rsi
    6d91:	48 89 c7             	mov    %rax,%rdi
    6d94:	e8 67 10 00 00       	call   7e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6d99:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d9d:	48 89 c7             	mov    %rax,%rdi
    6da0:	e8 3f 10 00 00       	call   7de4 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    6da5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6da9:	48 89 c7             	mov    %rax,%rdi
    6dac:	e8 09 11 00 00       	call   7eba <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6db1:	48 89 c1             	mov    %rax,%rcx
    6db4:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6db8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6dbc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6dc0:	48 89 c7             	mov    %rax,%rdi
    6dc3:	e8 a8 d7 ff ff       	call   4570 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    6dc8:	85 c0                	test   %eax,%eax
    6dca:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6dcd:	84 c0                	test   %al,%al
    6dcf:	0f 84 95 00 00 00    	je     6e6a <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    6dd5:	bf 10 00 00 00       	mov    $0x10,%edi
    6dda:	e8 81 d3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6ddf:	48 89 c3             	mov    %rax,%rbx
    6de2:	48 8d 05 97 11 01 00 	lea    0x11197(%rip),%rax        # 17f80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6de9:	48 89 c6             	mov    %rax,%rsi
    6dec:	48 89 df             	mov    %rbx,%rdi
    6def:	e8 0c d3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6df4:	48 8b 05 ad f1 01 00 	mov    0x1f1ad(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6dfb:	48 89 c2             	mov    %rax,%rdx
    6dfe:	48 8d 05 3b ef 01 00 	lea    0x1ef3b(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6e05:	48 89 c6             	mov    %rax,%rsi
    6e08:	48 89 df             	mov    %rbx,%rdi
    6e0b:	e8 50 d8 ff ff       	call   4660 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6e10:	49 89 c4             	mov    %rax,%r12
    6e13:	48 89 df             	mov    %rbx,%rdi
    6e16:	e8 15 d4 ff ff       	call   4230 <__cxa_free_exception@plt>
    6e1b:	4c 89 e0             	mov    %r12,%rax
    6e1e:	48 89 c7             	mov    %rax,%rdi
    6e21:	e8 9a d8 ff ff       	call   46c0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6e26:	48 89 c3             	mov    %rax,%rbx
    6e29:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e2d:	48 89 c7             	mov    %rax,%rdi
    6e30:	e8 af 0f 00 00       	call   7de4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6e35:	48 89 d8             	mov    %rbx,%rax
    6e38:	48 89 c7             	mov    %rax,%rdi
    6e3b:	e8 80 d8 ff ff       	call   46c0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6e40:	49 89 c4             	mov    %rax,%r12
    6e43:	48 89 df             	mov    %rbx,%rdi
    6e46:	e8 e5 d3 ff ff       	call   4230 <__cxa_free_exception@plt>
    6e4b:	4c 89 e3             	mov    %r12,%rbx
    6e4e:	eb 03                	jmp    6e53 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    6e50:	48 89 c3             	mov    %rax,%rbx
    6e53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e57:	48 89 c7             	mov    %rax,%rdi
    6e5a:	e8 17 10 00 00       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6e5f:	48 89 d8             	mov    %rbx,%rax
    6e62:	48 89 c7             	mov    %rax,%rdi
    6e65:	e8 56 d8 ff ff       	call   46c0 <_Unwind_Resume@plt>
  return deviceExtensions;
    6e6a:	90                   	nop
}
    6e6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e6f:	48 83 c4 30          	add    $0x30,%rsp
    6e73:	5b                   	pop    %rbx
    6e74:	41 5c                	pop    %r12
    6e76:	5d                   	pop    %rbp
    6e77:	c3                   	ret

0000000000006e78 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    6e78:	55                   	push   %rbp
    6e79:	48 89 e5             	mov    %rsp,%rbp
    6e7c:	53                   	push   %rbx
    6e7d:	48 83 ec 38          	sub    $0x38,%rsp
    6e81:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    6e85:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6e89:	48 89 c7             	mov    %rax,%rdi
    6e8c:	e8 bf d3 ff ff       	call   4250 <glfwGetRequiredInstanceExtensions@plt>
    6e91:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6e95:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6e98:	89 c3                	mov    %eax,%ebx
    6e9a:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6e9e:	48 89 c7             	mov    %rax,%rdi
    6ea1:	e8 90 10 00 00       	call   7f36 <_ZNSaIPKcEC1Ev>
    6ea6:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    6eaa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6eae:	48 89 de             	mov    %rbx,%rsi
    6eb1:	48 89 c7             	mov    %rax,%rdi
    6eb4:	e8 b5 10 00 00       	call   7f6e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    6eb9:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6ebd:	48 89 c7             	mov    %rax,%rdi
    6ec0:	e8 8d 10 00 00       	call   7f52 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6ec5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    6ecc:	eb 2e                	jmp    6efc <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    6ece:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6ed1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6ed8:	00 
    6ed9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6edd:	48 01 d0             	add    %rdx,%rax
    6ee0:	48 8b 18             	mov    (%rax),%rbx
    6ee3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6ee6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6eea:	48 89 d6             	mov    %rdx,%rsi
    6eed:	48 89 c7             	mov    %rax,%rdi
    6ef0:	e8 ef 10 00 00       	call   7fe4 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    6ef5:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6ef8:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6efc:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6eff:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6f02:	72 ca                	jb     6ece <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    6f04:	eb 1a                	jmp    6f20 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6f06:	48 89 c3             	mov    %rax,%rbx
    6f09:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6f0d:	48 89 c7             	mov    %rax,%rdi
    6f10:	e8 3d 10 00 00       	call   7f52 <_ZNSaIPKcED1Ev>
    6f15:	48 89 d8             	mov    %rbx,%rax
    6f18:	48 89 c7             	mov    %rax,%rdi
    6f1b:	e8 a0 d7 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    6f20:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6f24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f28:	c9                   	leave
    6f29:	c3                   	ret

0000000000006f2a <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    6f2a:	55                   	push   %rbp
    6f2b:	48 89 e5             	mov    %rsp,%rbp
    6f2e:	53                   	push   %rbx
    6f2f:	48 83 ec 28          	sub    $0x28,%rsp
    6f33:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6f37:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f3b:	be 00 00 00 00       	mov    $0x0,%esi
    6f40:	48 89 c7             	mov    %rax,%rdi
    6f43:	e8 08 d5 ff ff       	call   4450 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6f48:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6f4b:	89 c3                	mov    %eax,%ebx
    6f4d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f51:	48 89 c7             	mov    %rax,%rdi
    6f54:	e8 01 0d 00 00       	call   7c5a <_ZNSaI17VkLayerPropertiesEC1Ev>
    6f59:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6f5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f61:	48 89 de             	mov    %rbx,%rsi
    6f64:	48 89 c7             	mov    %rax,%rdi
    6f67:	e8 26 0d 00 00       	call   7c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6f6c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f70:	48 89 c7             	mov    %rax,%rdi
    6f73:	e8 fe 0c 00 00       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6f78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f7c:	48 89 c7             	mov    %rax,%rdi
    6f7f:	e8 c8 0d 00 00       	call   7d4c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6f84:	48 89 c2             	mov    %rax,%rdx
    6f87:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f8b:	48 89 d6             	mov    %rdx,%rsi
    6f8e:	48 89 c7             	mov    %rax,%rdi
    6f91:	e8 ba d4 ff ff       	call   4450 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6f96:	eb 34                	jmp    6fcc <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6f98:	48 89 c3             	mov    %rax,%rbx
    6f9b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f9f:	48 89 c7             	mov    %rax,%rdi
    6fa2:	e8 cf 0c 00 00       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
    6fa7:	48 89 d8             	mov    %rbx,%rax
    6faa:	48 89 c7             	mov    %rax,%rdi
    6fad:	e8 0e d7 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    6fb2:	48 89 c3             	mov    %rax,%rbx
    6fb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fb9:	48 89 c7             	mov    %rax,%rdi
    6fbc:	e8 47 0d 00 00       	call   7d08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6fc1:	48 89 d8             	mov    %rbx,%rax
    6fc4:	48 89 c7             	mov    %rax,%rdi
    6fc7:	e8 f4 d6 ff ff       	call   46c0 <_Unwind_Resume@plt>
    6fcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fd0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6fd4:	c9                   	leave
    6fd5:	c3                   	ret

0000000000006fd6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    6fd6:	55                   	push   %rbp
    6fd7:	48 89 e5             	mov    %rsp,%rbp
    6fda:	41 54                	push   %r12
    6fdc:	53                   	push   %rbx
    6fdd:	48 83 ec 20          	sub    $0x20,%rsp
    6fe1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6fe5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    6fe9:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6fed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6ff1:	ba 00 00 00 00       	mov    $0x0,%edx
    6ff6:	48 89 ce             	mov    %rcx,%rsi
    6ff9:	48 89 c7             	mov    %rax,%rdi
    6ffc:	e8 7f d1 ff ff       	call   4180 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    7001:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7004:	85 c0                	test   %eax,%eax
    7006:	75 3b                	jne    7043 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    7008:	bf 10 00 00 00       	mov    $0x10,%edi
    700d:	e8 4e d1 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7012:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    7015:	48 8d 05 8c 0f 01 00 	lea    0x10f8c(%rip),%rax        # 17fa8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    701c:	48 89 c6             	mov    %rax,%rsi
    701f:	48 89 df             	mov    %rbx,%rdi
    7022:	e8 d9 d0 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    7027:	48 8b 05 7a ef 01 00 	mov    0x1ef7a(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    702e:	48 89 c2             	mov    %rax,%rdx
    7031:	48 8d 05 08 ed 01 00 	lea    0x1ed08(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7038:	48 89 c6             	mov    %rax,%rsi
    703b:	48 89 df             	mov    %rbx,%rdi
    703e:	e8 1d d6 ff ff       	call   4660 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7043:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7046:	89 c3                	mov    %eax,%ebx
    7048:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    704c:	48 89 c7             	mov    %rax,%rdi
    704f:	e8 fe 0f 00 00       	call   8052 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    7054:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7058:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    705c:	48 89 de             	mov    %rbx,%rsi
    705f:	48 89 c7             	mov    %rax,%rdi
    7062:	e8 23 10 00 00       	call   808a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    7067:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    706b:	48 89 c7             	mov    %rax,%rdi
    706e:	e8 fb 0f 00 00       	call   806e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7073:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7077:	48 89 c7             	mov    %rax,%rdi
    707a:	e8 c5 10 00 00       	call   8144 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    707f:	48 89 c2             	mov    %rax,%rdx
    7082:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7086:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    708a:	48 89 ce             	mov    %rcx,%rsi
    708d:	48 89 c7             	mov    %rax,%rdi
    7090:	e8 eb d0 ff ff       	call   4180 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    7095:	85 c0                	test   %eax,%eax
    7097:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    709a:	84 c0                	test   %al,%al
    709c:	0f 84 95 00 00 00    	je     7137 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    70a2:	bf 10 00 00 00       	mov    $0x10,%edi
    70a7:	e8 b4 d0 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    70ac:	48 89 c3             	mov    %rax,%rbx
    70af:	48 8d 05 2a 0f 01 00 	lea    0x10f2a(%rip),%rax        # 17fe0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    70b6:	48 89 c6             	mov    %rax,%rsi
    70b9:	48 89 df             	mov    %rbx,%rdi
    70bc:	e8 3f d0 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    70c1:	48 8b 05 e0 ee 01 00 	mov    0x1eee0(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    70c8:	48 89 c2             	mov    %rax,%rdx
    70cb:	48 8d 05 6e ec 01 00 	lea    0x1ec6e(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    70d2:	48 89 c6             	mov    %rax,%rsi
    70d5:	48 89 df             	mov    %rbx,%rdi
    70d8:	e8 83 d5 ff ff       	call   4660 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    70dd:	49 89 c4             	mov    %rax,%r12
    70e0:	48 89 df             	mov    %rbx,%rdi
    70e3:	e8 48 d1 ff ff       	call   4230 <__cxa_free_exception@plt>
    70e8:	4c 89 e0             	mov    %r12,%rax
    70eb:	48 89 c7             	mov    %rax,%rdi
    70ee:	e8 cd d5 ff ff       	call   46c0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    70f3:	48 89 c3             	mov    %rax,%rbx
    70f6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    70fa:	48 89 c7             	mov    %rax,%rdi
    70fd:	e8 6c 0f 00 00       	call   806e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7102:	48 89 d8             	mov    %rbx,%rax
    7105:	48 89 c7             	mov    %rax,%rdi
    7108:	e8 b3 d5 ff ff       	call   46c0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    710d:	49 89 c4             	mov    %rax,%r12
    7110:	48 89 df             	mov    %rbx,%rdi
    7113:	e8 18 d1 ff ff       	call   4230 <__cxa_free_exception@plt>
    7118:	4c 89 e3             	mov    %r12,%rbx
    711b:	eb 03                	jmp    7120 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    711d:	48 89 c3             	mov    %rax,%rbx
    7120:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7124:	48 89 c7             	mov    %rax,%rdi
    7127:	e8 d4 0f 00 00       	call   8100 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    712c:	48 89 d8             	mov    %rbx,%rax
    712f:	48 89 c7             	mov    %rax,%rdi
    7132:	e8 89 d5 ff ff       	call   46c0 <_Unwind_Resume@plt>
  return physicalDevices;
    7137:	90                   	nop
}
    7138:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    713c:	48 83 c4 20          	add    $0x20,%rsp
    7140:	5b                   	pop    %rbx
    7141:	41 5c                	pop    %r12
    7143:	5d                   	pop    %rbp
    7144:	c3                   	ret

0000000000007145 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    7145:	55                   	push   %rbp
    7146:	48 89 e5             	mov    %rsp,%rbp
    7149:	48 83 ec 10          	sub    $0x10,%rsp
    714d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7151:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    7155:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7159:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    715d:	48 89 d6             	mov    %rdx,%rsi
    7160:	48 89 c7             	mov    %rax,%rdi
    7163:	e8 a8 cf ff ff       	call   4110 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    7168:	90                   	nop
}
    7169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    716d:	c9                   	leave
    716e:	c3                   	ret

000000000000716f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    716f:	55                   	push   %rbp
    7170:	48 89 e5             	mov    %rsp,%rbp
    7173:	48 83 ec 20          	sub    $0x20,%rsp
    7177:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    717b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    717f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    7183:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7187:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    718d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7191:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7195:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    7199:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    719d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71a1:	48 89 d6             	mov    %rdx,%rsi
    71a4:	48 89 c7             	mov    %rax,%rdi
    71a7:	e8 74 d1 ff ff       	call   4320 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    71ac:	90                   	nop
}
    71ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71b1:	c9                   	leave
    71b2:	c3                   	ret

00000000000071b3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    71b3:	55                   	push   %rbp
    71b4:	48 89 e5             	mov    %rsp,%rbp
    71b7:	53                   	push   %rbx
    71b8:	48 83 ec 28          	sub    $0x28,%rsp
    71bc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    71c0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    71c4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    71c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    71cc:	ba 00 00 00 00       	mov    $0x0,%edx
    71d1:	48 89 ce             	mov    %rcx,%rsi
    71d4:	48 89 c7             	mov    %rax,%rdi
    71d7:	e8 64 d0 ff ff       	call   4240 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    71dc:	8b 45 e8             	mov    -0x18(%rbp),%eax
    71df:	89 c3                	mov    %eax,%ebx
    71e1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71e5:	48 89 c7             	mov    %rax,%rdi
    71e8:	e8 c9 0f 00 00       	call   81b6 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    71ed:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    71f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71f5:	48 89 de             	mov    %rbx,%rsi
    71f8:	48 89 c7             	mov    %rax,%rdi
    71fb:	e8 ee 0f 00 00       	call   81ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    7200:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7204:	48 89 c7             	mov    %rax,%rdi
    7207:	e8 c6 0f 00 00       	call   81d2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    720c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7210:	48 89 c7             	mov    %rax,%rdi
    7213:	e8 90 10 00 00       	call   82a8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    7218:	48 89 c2             	mov    %rax,%rdx
    721b:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    721f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7223:	48 89 ce             	mov    %rcx,%rsi
    7226:	48 89 c7             	mov    %rax,%rdi
    7229:	e8 12 d0 ff ff       	call   4240 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    722e:	eb 34                	jmp    7264 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    7230:	48 89 c3             	mov    %rax,%rbx
    7233:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7237:	48 89 c7             	mov    %rax,%rdi
    723a:	e8 93 0f 00 00       	call   81d2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    723f:	48 89 d8             	mov    %rbx,%rax
    7242:	48 89 c7             	mov    %rax,%rdi
    7245:	e8 76 d4 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    724a:	48 89 c3             	mov    %rax,%rbx
    724d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7251:	48 89 c7             	mov    %rax,%rdi
    7254:	e8 0b 10 00 00       	call   8264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7259:	48 89 d8             	mov    %rbx,%rax
    725c:	48 89 c7             	mov    %rax,%rdi
    725f:	e8 5c d4 ff ff       	call   46c0 <_Unwind_Resume@plt>
    7264:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7268:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    726c:	c9                   	leave
    726d:	c3                   	ret

000000000000726e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    726e:	55                   	push   %rbp
    726f:	48 89 e5             	mov    %rsp,%rbp
    7272:	53                   	push   %rbx
    7273:	48 83 ec 68          	sub    $0x68,%rsp
    7277:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    727b:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    727f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7283:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    7287:	48 89 d6             	mov    %rdx,%rsi
    728a:	48 89 c7             	mov    %rax,%rdi
    728d:	e8 21 ff ff ff       	call   71b3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    7292:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7296:	48 89 c7             	mov    %rax,%rdi
    7299:	e8 86 10 00 00       	call   8324 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    729e:	48 89 c3             	mov    %rax,%rbx
    72a1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    72a5:	48 89 c7             	mov    %rax,%rdi
    72a8:	e8 a5 10 00 00       	call   8352 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    72ad:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    72b1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    72b5:	48 89 de             	mov    %rbx,%rsi
    72b8:	48 89 c7             	mov    %rax,%rdi
    72bb:	e8 ca 10 00 00       	call   838a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    72c0:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    72c4:	48 89 c7             	mov    %rax,%rdi
    72c7:	e8 a2 10 00 00       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    72cc:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    72d3:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    72d4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    72d8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    72dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72e0:	48 89 c7             	mov    %rax,%rdi
    72e3:	e8 5c 11 00 00       	call   8444 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    72e8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    72ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72f0:	48 89 c7             	mov    %rax,%rdi
    72f3:	e8 72 11 00 00       	call   846a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    72f8:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    72fc:	eb 4e                	jmp    734c <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    72fe:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7302:	48 89 c7             	mov    %rax,%rdi
    7305:	e8 e4 11 00 00       	call   84ee <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    730a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    730e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7312:	8b 00                	mov    (%rax),%eax
    7314:	83 e0 01             	and    $0x1,%eax
    7317:	85 c0                	test   %eax,%eax
    7319:	74 25                	je     7340 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    731b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    731f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7323:	48 89 d6             	mov    %rdx,%rsi
    7326:	48 89 c7             	mov    %rax,%rdi
    7329:	e8 d2 11 00 00       	call   8500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    732e:	48 89 c2             	mov    %rax,%rdx
    7331:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7335:	48 89 c6             	mov    %rax,%rsi
    7338:	48 89 d7             	mov    %rdx,%rdi
    733b:	e8 ea 11 00 00       	call   852a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7340:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7344:	48 89 c7             	mov    %rax,%rdi
    7347:	e8 82 11 00 00       	call   84ce <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    734c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7350:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7354:	48 89 d6             	mov    %rdx,%rsi
    7357:	48 89 c7             	mov    %rax,%rdi
    735a:	e8 34 11 00 00       	call   8493 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    735f:	84 c0                	test   %al,%al
    7361:	75 9b                	jne    72fe <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    7363:	90                   	nop
}
    7364:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7368:	48 89 c7             	mov    %rax,%rdi
    736b:	e8 f4 0e 00 00       	call   8264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    7370:	eb 26                	jmp    7398 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    7372:	48 89 c3             	mov    %rax,%rbx
    7375:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7379:	48 89 c7             	mov    %rax,%rdi
    737c:	e8 ed 0f 00 00       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    7381:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7385:	48 89 c7             	mov    %rax,%rdi
    7388:	e8 d7 0e 00 00       	call   8264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    738d:	48 89 d8             	mov    %rbx,%rax
    7390:	48 89 c7             	mov    %rax,%rdi
    7393:	e8 28 d3 ff ff       	call   46c0 <_Unwind_Resume@plt>
    7398:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    739c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    73a0:	c9                   	leave
    73a1:	c3                   	ret

00000000000073a2 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    73a2:	55                   	push   %rbp
    73a3:	48 89 e5             	mov    %rsp,%rbp
    73a6:	53                   	push   %rbx
    73a7:	48 83 ec 68          	sub    $0x68,%rsp
    73ab:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    73af:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    73b3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    73b7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    73bb:	48 89 d6             	mov    %rdx,%rsi
    73be:	48 89 c7             	mov    %rax,%rdi
    73c1:	e8 ed fd ff ff       	call   71b3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    73c6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    73ca:	48 89 c7             	mov    %rax,%rdi
    73cd:	e8 52 0f 00 00       	call   8324 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    73d2:	48 89 c3             	mov    %rax,%rbx
    73d5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    73d9:	48 89 c7             	mov    %rax,%rdi
    73dc:	e8 71 0f 00 00       	call   8352 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    73e1:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    73e5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    73e9:	48 89 de             	mov    %rbx,%rsi
    73ec:	48 89 c7             	mov    %rax,%rdi
    73ef:	e8 96 0f 00 00       	call   838a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    73f4:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    73f8:	48 89 c7             	mov    %rax,%rdi
    73fb:	e8 6e 0f 00 00       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7400:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7407:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7408:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    740c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7410:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7414:	48 89 c7             	mov    %rax,%rdi
    7417:	e8 28 10 00 00       	call   8444 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    741c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7420:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7424:	48 89 c7             	mov    %rax,%rdi
    7427:	e8 3e 10 00 00       	call   846a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    742c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7430:	eb 53                	jmp    7485 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    7432:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7436:	48 89 c7             	mov    %rax,%rdi
    7439:	e8 b0 10 00 00       	call   84ee <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    743e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    7442:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7446:	8b 00                	mov    (%rax),%eax
    7448:	83 e0 02             	and    $0x2,%eax
    744b:	85 c0                	test   %eax,%eax
    744d:	74 25                	je     7474 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    744f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7453:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7457:	48 89 d6             	mov    %rdx,%rsi
    745a:	48 89 c7             	mov    %rax,%rdi
    745d:	e8 9e 10 00 00       	call   8500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7462:	48 89 c2             	mov    %rax,%rdx
    7465:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7469:	48 89 c6             	mov    %rax,%rsi
    746c:	48 89 d7             	mov    %rdx,%rdi
    746f:	e8 b6 10 00 00       	call   852a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7474:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7479:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    747d:	48 89 c7             	mov    %rax,%rdi
    7480:	e8 49 10 00 00       	call   84ce <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7485:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7489:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    748d:	48 89 d6             	mov    %rdx,%rsi
    7490:	48 89 c7             	mov    %rax,%rdi
    7493:	e8 fb 0f 00 00       	call   8493 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7498:	84 c0                	test   %al,%al
    749a:	75 96                	jne    7432 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    749c:	90                   	nop
}
    749d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74a1:	48 89 c7             	mov    %rax,%rdi
    74a4:	e8 bb 0d 00 00       	call   8264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    74a9:	eb 26                	jmp    74d1 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    74ab:	48 89 c3             	mov    %rax,%rbx
    74ae:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74b2:	48 89 c7             	mov    %rax,%rdi
    74b5:	e8 b4 0e 00 00       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    74ba:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74be:	48 89 c7             	mov    %rax,%rdi
    74c1:	e8 9e 0d 00 00       	call   8264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    74c6:	48 89 d8             	mov    %rbx,%rax
    74c9:	48 89 c7             	mov    %rax,%rdi
    74cc:	e8 ef d1 ff ff       	call   46c0 <_Unwind_Resume@plt>
    74d1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    74d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74d9:	c9                   	leave
    74da:	c3                   	ret

00000000000074db <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    74db:	55                   	push   %rbp
    74dc:	48 89 e5             	mov    %rsp,%rbp
    74df:	53                   	push   %rbx
    74e0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    74e7:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    74eb:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    74ef:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    74f6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74fa:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    74fe:	48 89 d6             	mov    %rdx,%rsi
    7501:	48 89 c7             	mov    %rax,%rdi
    7504:	e8 aa fc ff ff       	call   71b3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    7509:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    750d:	48 89 c7             	mov    %rax,%rdi
    7510:	e8 0f 0e 00 00       	call   8324 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7515:	48 89 c3             	mov    %rax,%rbx
    7518:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    751c:	48 89 c7             	mov    %rax,%rdi
    751f:	e8 2e 0e 00 00       	call   8352 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7524:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7528:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    752c:	48 89 de             	mov    %rbx,%rsi
    752f:	48 89 c7             	mov    %rax,%rdi
    7532:	e8 53 0e 00 00       	call   838a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7537:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    753b:	48 89 c7             	mov    %rax,%rdi
    753e:	e8 2b 0e 00 00       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    7543:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    754a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    754e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7552:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7556:	48 89 c7             	mov    %rax,%rdi
    7559:	e8 e6 0e 00 00       	call   8444 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    755e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7566:	48 89 c7             	mov    %rax,%rdi
    7569:	e8 fc 0e 00 00       	call   846a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    756e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7572:	eb 6c                	jmp    75e0 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    7574:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7578:	48 89 c7             	mov    %rax,%rdi
    757b:	e8 6e 0f 00 00       	call   84ee <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7580:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    7584:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    758b:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    758f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    7596:	8b 75 ec             	mov    -0x14(%rbp),%esi
    7599:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    759d:	48 89 c7             	mov    %rax,%rdi
    75a0:	e8 4b ce ff ff       	call   43f0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    75a5:	8b 45 9c             	mov    -0x64(%rbp),%eax
    75a8:	85 c0                	test   %eax,%eax
    75aa:	74 24                	je     75d0 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    75ac:	8b 55 ec             	mov    -0x14(%rbp),%edx
    75af:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    75b3:	48 89 d6             	mov    %rdx,%rsi
    75b6:	48 89 c7             	mov    %rax,%rdi
    75b9:	e8 42 0f 00 00       	call   8500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    75be:	48 89 c2             	mov    %rax,%rdx
    75c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75c5:	48 89 c6             	mov    %rax,%rsi
    75c8:	48 89 d7             	mov    %rdx,%rdi
    75cb:	e8 5a 0f 00 00       	call   852a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    75d0:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    75d4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    75d8:	48 89 c7             	mov    %rax,%rdi
    75db:	e8 ee 0e 00 00       	call   84ce <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    75e0:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    75e4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    75e8:	48 89 d6             	mov    %rdx,%rsi
    75eb:	48 89 c7             	mov    %rax,%rdi
    75ee:	e8 a0 0e 00 00       	call   8493 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    75f3:	84 c0                	test   %al,%al
    75f5:	0f 85 79 ff ff ff    	jne    7574 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    75fb:	90                   	nop
}
    75fc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7600:	48 89 c7             	mov    %rax,%rdi
    7603:	e8 5c 0c 00 00       	call   8264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    7608:	eb 37                	jmp    7641 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    760a:	48 89 c3             	mov    %rax,%rbx
    760d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7611:	48 89 c7             	mov    %rax,%rdi
    7614:	e8 55 0d 00 00       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7619:	eb 0f                	jmp    762a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    761b:	48 89 c3             	mov    %rax,%rbx
    761e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7622:	48 89 c7             	mov    %rax,%rdi
    7625:	e8 d6 0d 00 00       	call   8400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    762a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    762e:	48 89 c7             	mov    %rax,%rdi
    7631:	e8 2e 0c 00 00       	call   8264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7636:	48 89 d8             	mov    %rbx,%rax
    7639:	48 89 c7             	mov    %rax,%rdi
    763c:	e8 7f d0 ff ff       	call   46c0 <_Unwind_Resume@plt>
    7641:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7645:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7649:	c9                   	leave
    764a:	c3                   	ret

000000000000764b <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    764b:	55                   	push   %rbp
    764c:	48 89 e5             	mov    %rsp,%rbp
    764f:	41 54                	push   %r12
    7651:	53                   	push   %rbx
    7652:	48 83 ec 20          	sub    $0x20,%rsp
    7656:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    765a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    765e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    7662:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7666:	66 0f ef c0          	pxor   %xmm0,%xmm0
    766a:	0f 11 00             	movups %xmm0,(%rax)
    766d:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7671:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    7675:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    767a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    767e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7682:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7686:	48 89 ce             	mov    %rcx,%rsi
    7689:	48 89 c7             	mov    %rax,%rdi
    768c:	e8 4f cc ff ff       	call   42e0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    7691:	85 c0                	test   %eax,%eax
    7693:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    7696:	84 c0                	test   %al,%al
    7698:	74 51                	je     76eb <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    769a:	bf 10 00 00 00       	mov    $0x10,%edi
    769f:	e8 bc ca ff ff       	call   4160 <__cxa_allocate_exception@plt>
    76a4:	48 89 c3             	mov    %rax,%rbx
    76a7:	48 8d 05 5a 09 01 00 	lea    0x1095a(%rip),%rax        # 18008 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    76ae:	48 89 c6             	mov    %rax,%rsi
    76b1:	48 89 df             	mov    %rbx,%rdi
    76b4:	e8 47 ca ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    76b9:	48 8b 05 e8 e8 01 00 	mov    0x1e8e8(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    76c0:	48 89 c2             	mov    %rax,%rdx
    76c3:	48 8d 05 76 e6 01 00 	lea    0x1e676(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    76ca:	48 89 c6             	mov    %rax,%rsi
    76cd:	48 89 df             	mov    %rbx,%rdi
    76d0:	e8 8b cf ff ff       	call   4660 <__cxa_throw@plt>
    76d5:	49 89 c4             	mov    %rax,%r12
    76d8:	48 89 df             	mov    %rbx,%rdi
    76db:	e8 50 cb ff ff       	call   4230 <__cxa_free_exception@plt>
    76e0:	4c 89 e0             	mov    %r12,%rax
    76e3:	48 89 c7             	mov    %rax,%rdi
    76e6:	e8 d5 cf ff ff       	call   46c0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    76eb:	90                   	nop
}
    76ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76f0:	48 83 c4 20          	add    $0x20,%rsp
    76f4:	5b                   	pop    %rbx
    76f5:	41 5c                	pop    %r12
    76f7:	5d                   	pop    %rbp
    76f8:	c3                   	ret

00000000000076f9 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    76f9:	55                   	push   %rbp
    76fa:	48 89 e5             	mov    %rsp,%rbp
    76fd:	41 54                	push   %r12
    76ff:	53                   	push   %rbx
    7700:	48 83 ec 30          	sub    $0x30,%rsp
    7704:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7708:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    770c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7710:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7714:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7718:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    771c:	b9 00 00 00 00       	mov    $0x0,%ecx
    7721:	48 89 c7             	mov    %rax,%rdi
    7724:	e8 d7 cd ff ff       	call   4500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    7729:	85 c0                	test   %eax,%eax
    772b:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    772e:	84 c0                	test   %al,%al
    7730:	74 3b                	je     776d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7732:	bf 10 00 00 00       	mov    $0x10,%edi
    7737:	e8 24 ca ff ff       	call   4160 <__cxa_allocate_exception@plt>
    773c:	48 89 c3             	mov    %rax,%rbx
    773f:	48 8d 05 ea 08 01 00 	lea    0x108ea(%rip),%rax        # 18030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7746:	48 89 c6             	mov    %rax,%rsi
    7749:	48 89 df             	mov    %rbx,%rdi
    774c:	e8 af c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7751:	48 8b 05 50 e8 01 00 	mov    0x1e850(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7758:	48 89 c2             	mov    %rax,%rdx
    775b:	48 8d 05 de e5 01 00 	lea    0x1e5de(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7762:	48 89 c6             	mov    %rax,%rsi
    7765:	48 89 df             	mov    %rbx,%rdi
    7768:	e8 f3 ce ff ff       	call   4660 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    776d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7770:	89 c3                	mov    %eax,%ebx
    7772:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7776:	48 89 c7             	mov    %rax,%rdi
    7779:	e8 84 0e 00 00       	call   8602 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    777e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7782:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7786:	48 89 de             	mov    %rbx,%rsi
    7789:	48 89 c7             	mov    %rax,%rdi
    778c:	e8 a9 0e 00 00       	call   863a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    7791:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7795:	48 89 c7             	mov    %rax,%rdi
    7798:	e8 81 0e 00 00       	call   861e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    779d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77a1:	48 89 c7             	mov    %rax,%rdi
    77a4:	e8 4b 0f 00 00       	call   86f4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    77a9:	48 89 c1             	mov    %rax,%rcx
    77ac:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    77b0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    77b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    77b8:	48 89 c7             	mov    %rax,%rdi
    77bb:	e8 40 cd ff ff       	call   4500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    77c0:	85 c0                	test   %eax,%eax
    77c2:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    77c5:	84 c0                	test   %al,%al
    77c7:	0f 84 95 00 00 00    	je     7862 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    77cd:	bf 10 00 00 00       	mov    $0x10,%edi
    77d2:	e8 89 c9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    77d7:	48 89 c3             	mov    %rax,%rbx
    77da:	48 8d 05 4f 08 01 00 	lea    0x1084f(%rip),%rax        # 18030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    77e1:	48 89 c6             	mov    %rax,%rsi
    77e4:	48 89 df             	mov    %rbx,%rdi
    77e7:	e8 14 c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    77ec:	48 8b 05 b5 e7 01 00 	mov    0x1e7b5(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    77f3:	48 89 c2             	mov    %rax,%rdx
    77f6:	48 8d 05 43 e5 01 00 	lea    0x1e543(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    77fd:	48 89 c6             	mov    %rax,%rsi
    7800:	48 89 df             	mov    %rbx,%rdi
    7803:	e8 58 ce ff ff       	call   4660 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7808:	49 89 c4             	mov    %rax,%r12
    780b:	48 89 df             	mov    %rbx,%rdi
    780e:	e8 1d ca ff ff       	call   4230 <__cxa_free_exception@plt>
    7813:	4c 89 e0             	mov    %r12,%rax
    7816:	48 89 c7             	mov    %rax,%rdi
    7819:	e8 a2 ce ff ff       	call   46c0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    781e:	48 89 c3             	mov    %rax,%rbx
    7821:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7825:	48 89 c7             	mov    %rax,%rdi
    7828:	e8 f1 0d 00 00       	call   861e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    782d:	48 89 d8             	mov    %rbx,%rax
    7830:	48 89 c7             	mov    %rax,%rdi
    7833:	e8 88 ce ff ff       	call   46c0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7838:	49 89 c4             	mov    %rax,%r12
    783b:	48 89 df             	mov    %rbx,%rdi
    783e:	e8 ed c9 ff ff       	call   4230 <__cxa_free_exception@plt>
    7843:	4c 89 e3             	mov    %r12,%rbx
    7846:	eb 03                	jmp    784b <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    7848:	48 89 c3             	mov    %rax,%rbx
    784b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    784f:	48 89 c7             	mov    %rax,%rdi
    7852:	e8 59 0e 00 00       	call   86b0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    7857:	48 89 d8             	mov    %rbx,%rax
    785a:	48 89 c7             	mov    %rax,%rdi
    785d:	e8 5e ce ff ff       	call   46c0 <_Unwind_Resume@plt>
  return surfaceFormats;
    7862:	90                   	nop
}
    7863:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7867:	48 83 c4 30          	add    $0x30,%rsp
    786b:	5b                   	pop    %rbx
    786c:	41 5c                	pop    %r12
    786e:	5d                   	pop    %rbp
    786f:	c3                   	ret

0000000000007870 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7870:	55                   	push   %rbp
    7871:	48 89 e5             	mov    %rsp,%rbp
    7874:	41 54                	push   %r12
    7876:	53                   	push   %rbx
    7877:	48 83 ec 30          	sub    $0x30,%rsp
    787b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    787f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7883:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    7887:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    788b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    788f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7893:	b9 00 00 00 00       	mov    $0x0,%ecx
    7898:	48 89 c7             	mov    %rax,%rdi
    789b:	e8 70 cc ff ff       	call   4510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    78a0:	85 c0                	test   %eax,%eax
    78a2:	0f 95 c0             	setne  %al
    78a5:	84 c0                	test   %al,%al
    78a7:	74 3b                	je     78e4 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    78a9:	bf 10 00 00 00       	mov    $0x10,%edi
    78ae:	e8 ad c8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    78b3:	48 89 c3             	mov    %rax,%rbx
    78b6:	48 8d 05 9b 07 01 00 	lea    0x1079b(%rip),%rax        # 18058 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    78bd:	48 89 c6             	mov    %rax,%rsi
    78c0:	48 89 df             	mov    %rbx,%rdi
    78c3:	e8 38 c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    78c8:	48 8b 05 d9 e6 01 00 	mov    0x1e6d9(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    78cf:	48 89 c2             	mov    %rax,%rdx
    78d2:	48 8d 05 67 e4 01 00 	lea    0x1e467(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    78d9:	48 89 c6             	mov    %rax,%rsi
    78dc:	48 89 df             	mov    %rbx,%rdi
    78df:	e8 7c cd ff ff       	call   4660 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    78e4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    78e7:	89 c3                	mov    %eax,%ebx
    78e9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    78ed:	48 89 c7             	mov    %rax,%rdi
    78f0:	e8 71 0e 00 00       	call   8766 <_ZNSaI16VkPresentModeKHREC1Ev>
    78f5:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    78f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78fd:	48 89 de             	mov    %rbx,%rsi
    7900:	48 89 c7             	mov    %rax,%rdi
    7903:	e8 96 0e 00 00       	call   879e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    7908:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    790c:	48 89 c7             	mov    %rax,%rdi
    790f:	e8 6e 0e 00 00       	call   8782 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7914:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7918:	48 89 c7             	mov    %rax,%rdi
    791b:	e8 38 0f 00 00       	call   8858 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7920:	48 89 c1             	mov    %rax,%rcx
    7923:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7927:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    792b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    792f:	48 89 c7             	mov    %rax,%rdi
    7932:	e8 d9 cb ff ff       	call   4510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7937:	85 c0                	test   %eax,%eax
    7939:	0f 95 c0             	setne  %al
    793c:	84 c0                	test   %al,%al
    793e:	0f 84 95 00 00 00    	je     79d9 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7944:	bf 10 00 00 00       	mov    $0x10,%edi
    7949:	e8 12 c8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    794e:	48 89 c3             	mov    %rax,%rbx
    7951:	48 8d 05 00 07 01 00 	lea    0x10700(%rip),%rax        # 18058 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7958:	48 89 c6             	mov    %rax,%rsi
    795b:	48 89 df             	mov    %rbx,%rdi
    795e:	e8 9d c7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7963:	48 8b 05 3e e6 01 00 	mov    0x1e63e(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    796a:	48 89 c2             	mov    %rax,%rdx
    796d:	48 8d 05 cc e3 01 00 	lea    0x1e3cc(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7974:	48 89 c6             	mov    %rax,%rsi
    7977:	48 89 df             	mov    %rbx,%rdi
    797a:	e8 e1 cc ff ff       	call   4660 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    797f:	49 89 c4             	mov    %rax,%r12
    7982:	48 89 df             	mov    %rbx,%rdi
    7985:	e8 a6 c8 ff ff       	call   4230 <__cxa_free_exception@plt>
    798a:	4c 89 e0             	mov    %r12,%rax
    798d:	48 89 c7             	mov    %rax,%rdi
    7990:	e8 2b cd ff ff       	call   46c0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7995:	48 89 c3             	mov    %rax,%rbx
    7998:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    799c:	48 89 c7             	mov    %rax,%rdi
    799f:	e8 de 0d 00 00       	call   8782 <_ZNSaI16VkPresentModeKHRED1Ev>
    79a4:	48 89 d8             	mov    %rbx,%rax
    79a7:	48 89 c7             	mov    %rax,%rdi
    79aa:	e8 11 cd ff ff       	call   46c0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    79af:	49 89 c4             	mov    %rax,%r12
    79b2:	48 89 df             	mov    %rbx,%rdi
    79b5:	e8 76 c8 ff ff       	call   4230 <__cxa_free_exception@plt>
    79ba:	4c 89 e3             	mov    %r12,%rbx
    79bd:	eb 03                	jmp    79c2 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    79bf:	48 89 c3             	mov    %rax,%rbx
    79c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79c6:	48 89 c7             	mov    %rax,%rdi
    79c9:	e8 46 0e 00 00       	call   8814 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    79ce:	48 89 d8             	mov    %rbx,%rax
    79d1:	48 89 c7             	mov    %rax,%rdi
    79d4:	e8 e7 cc ff ff       	call   46c0 <_Unwind_Resume@plt>
  return presentModes;
    79d9:	90                   	nop
}
    79da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79de:	48 83 c4 30          	add    $0x30,%rsp
    79e2:	5b                   	pop    %rbx
    79e3:	41 5c                	pop    %r12
    79e5:	5d                   	pop    %rbp
    79e6:	c3                   	ret

00000000000079e7 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    79e7:	55                   	push   %rbp
    79e8:	48 89 e5             	mov    %rsp,%rbp
    79eb:	41 54                	push   %r12
    79ed:	53                   	push   %rbx
    79ee:	48 83 ec 30          	sub    $0x30,%rsp
    79f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    79f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    79fa:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    79fe:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a02:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7a06:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a0a:	b9 00 00 00 00       	mov    $0x0,%ecx
    7a0f:	48 89 c7             	mov    %rax,%rdi
    7a12:	e8 99 c7 ff ff       	call   41b0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    7a17:	85 c0                	test   %eax,%eax
    7a19:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7a1c:	84 c0                	test   %al,%al
    7a1e:	74 3b                	je     7a5b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7a20:	bf 10 00 00 00       	mov    $0x10,%edi
    7a25:	e8 36 c7 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7a2a:	48 89 c3             	mov    %rax,%rbx
    7a2d:	48 8d 05 54 06 01 00 	lea    0x10654(%rip),%rax        # 18088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7a34:	48 89 c6             	mov    %rax,%rsi
    7a37:	48 89 df             	mov    %rbx,%rdi
    7a3a:	e8 c1 c6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7a3f:	48 8b 05 62 e5 01 00 	mov    0x1e562(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7a46:	48 89 c2             	mov    %rax,%rdx
    7a49:	48 8d 05 f0 e2 01 00 	lea    0x1e2f0(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7a50:	48 89 c6             	mov    %rax,%rsi
    7a53:	48 89 df             	mov    %rbx,%rdi
    7a56:	e8 05 cc ff ff       	call   4660 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7a5b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7a5e:	89 c3                	mov    %eax,%ebx
    7a60:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a64:	48 89 c7             	mov    %rax,%rdi
    7a67:	e8 5e 0e 00 00       	call   88ca <_ZNSaIP9VkImage_TEC1Ev>
    7a6c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7a70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a74:	48 89 de             	mov    %rbx,%rsi
    7a77:	48 89 c7             	mov    %rax,%rdi
    7a7a:	e8 83 0e 00 00       	call   8902 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7a7f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a83:	48 89 c7             	mov    %rax,%rdi
    7a86:	e8 5b 0e 00 00       	call   88e6 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7a8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a8f:	48 89 c7             	mov    %rax,%rdi
    7a92:	e8 25 0f 00 00       	call   89bc <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7a97:	48 89 c1             	mov    %rax,%rcx
    7a9a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a9e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7aa2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7aa6:	48 89 c7             	mov    %rax,%rdi
    7aa9:	e8 02 c7 ff ff       	call   41b0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7aae:	85 c0                	test   %eax,%eax
    7ab0:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7ab3:	84 c0                	test   %al,%al
    7ab5:	0f 84 95 00 00 00    	je     7b50 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7abb:	bf 10 00 00 00       	mov    $0x10,%edi
    7ac0:	e8 9b c6 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7ac5:	48 89 c3             	mov    %rax,%rbx
    7ac8:	48 8d 05 b9 05 01 00 	lea    0x105b9(%rip),%rax        # 18088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7acf:	48 89 c6             	mov    %rax,%rsi
    7ad2:	48 89 df             	mov    %rbx,%rdi
    7ad5:	e8 26 c6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7ada:	48 8b 05 c7 e4 01 00 	mov    0x1e4c7(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7ae1:	48 89 c2             	mov    %rax,%rdx
    7ae4:	48 8d 05 55 e2 01 00 	lea    0x1e255(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7aeb:	48 89 c6             	mov    %rax,%rsi
    7aee:	48 89 df             	mov    %rbx,%rdi
    7af1:	e8 6a cb ff ff       	call   4660 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7af6:	49 89 c4             	mov    %rax,%r12
    7af9:	48 89 df             	mov    %rbx,%rdi
    7afc:	e8 2f c7 ff ff       	call   4230 <__cxa_free_exception@plt>
    7b01:	4c 89 e0             	mov    %r12,%rax
    7b04:	48 89 c7             	mov    %rax,%rdi
    7b07:	e8 b4 cb ff ff       	call   46c0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7b0c:	48 89 c3             	mov    %rax,%rbx
    7b0f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b13:	48 89 c7             	mov    %rax,%rdi
    7b16:	e8 cb 0d 00 00       	call   88e6 <_ZNSaIP9VkImage_TED1Ev>
    7b1b:	48 89 d8             	mov    %rbx,%rax
    7b1e:	48 89 c7             	mov    %rax,%rdi
    7b21:	e8 9a cb ff ff       	call   46c0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7b26:	49 89 c4             	mov    %rax,%r12
    7b29:	48 89 df             	mov    %rbx,%rdi
    7b2c:	e8 ff c6 ff ff       	call   4230 <__cxa_free_exception@plt>
    7b31:	4c 89 e3             	mov    %r12,%rbx
    7b34:	eb 03                	jmp    7b39 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7b36:	48 89 c3             	mov    %rax,%rbx
    7b39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b3d:	48 89 c7             	mov    %rax,%rdi
    7b40:	e8 33 0e 00 00       	call   8978 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7b45:	48 89 d8             	mov    %rbx,%rax
    7b48:	48 89 c7             	mov    %rax,%rdi
    7b4b:	e8 70 cb ff ff       	call   46c0 <_Unwind_Resume@plt>
  return swapchainImages;
    7b50:	90                   	nop
}
    7b51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b55:	48 83 c4 30          	add    $0x30,%rsp
    7b59:	5b                   	pop    %rbx
    7b5a:	41 5c                	pop    %r12
    7b5c:	5d                   	pop    %rbp
    7b5d:	c3                   	ret

0000000000007b5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7b5e:	55                   	push   %rbp
    7b5f:	48 89 e5             	mov    %rsp,%rbp
    7b62:	48 83 ec 10          	sub    $0x10,%rsp
    7b66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b6e:	48 89 c7             	mov    %rax,%rdi
    7b71:	e8 00 01 00 00       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
    7b76:	90                   	nop
    7b77:	c9                   	leave
    7b78:	c3                   	ret
    7b79:	90                   	nop

0000000000007b7a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7b7a:	55                   	push   %rbp
    7b7b:	48 89 e5             	mov    %rsp,%rbp
    7b7e:	48 83 ec 10          	sub    $0x10,%rsp
    7b82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b8a:	48 89 c7             	mov    %rax,%rdi
    7b8d:	e8 52 02 00 00       	call   7de4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7b92:	90                   	nop
    7b93:	c9                   	leave
    7b94:	c3                   	ret
    7b95:	90                   	nop

0000000000007b96 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    7b96:	55                   	push   %rbp
    7b97:	48 89 e5             	mov    %rsp,%rbp
    7b9a:	48 83 ec 10          	sub    $0x10,%rsp
    7b9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ba6:	48 89 c7             	mov    %rax,%rdi
    7ba9:	e8 a4 03 00 00       	call   7f52 <_ZNSaIPKcED1Ev>
    7bae:	90                   	nop
    7baf:	c9                   	leave
    7bb0:	c3                   	ret
    7bb1:	90                   	nop

0000000000007bb2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    7bb2:	55                   	push   %rbp
    7bb3:	48 89 e5             	mov    %rsp,%rbp
    7bb6:	48 83 ec 10          	sub    $0x10,%rsp
    7bba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bc2:	48 89 c7             	mov    %rax,%rdi
    7bc5:	e8 a4 04 00 00       	call   806e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7bca:	90                   	nop
    7bcb:	c9                   	leave
    7bcc:	c3                   	ret
    7bcd:	90                   	nop

0000000000007bce <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7bce:	55                   	push   %rbp
    7bcf:	48 89 e5             	mov    %rsp,%rbp
    7bd2:	48 83 ec 10          	sub    $0x10,%rsp
    7bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bde:	48 89 c7             	mov    %rax,%rdi
    7be1:	e8 ec 05 00 00       	call   81d2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7be6:	90                   	nop
    7be7:	c9                   	leave
    7be8:	c3                   	ret
    7be9:	90                   	nop

0000000000007bea <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    7bea:	55                   	push   %rbp
    7beb:	48 89 e5             	mov    %rsp,%rbp
    7bee:	48 83 ec 10          	sub    $0x10,%rsp
    7bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bfa:	48 89 c7             	mov    %rax,%rdi
    7bfd:	e8 6c 07 00 00       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7c02:	90                   	nop
    7c03:	c9                   	leave
    7c04:	c3                   	ret
    7c05:	90                   	nop

0000000000007c06 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    7c06:	55                   	push   %rbp
    7c07:	48 89 e5             	mov    %rsp,%rbp
    7c0a:	48 83 ec 10          	sub    $0x10,%rsp
    7c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c16:	48 89 c7             	mov    %rax,%rdi
    7c19:	e8 00 0a 00 00       	call   861e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7c1e:	90                   	nop
    7c1f:	c9                   	leave
    7c20:	c3                   	ret
    7c21:	90                   	nop

0000000000007c22 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    7c22:	55                   	push   %rbp
    7c23:	48 89 e5             	mov    %rsp,%rbp
    7c26:	48 83 ec 10          	sub    $0x10,%rsp
    7c2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c32:	48 89 c7             	mov    %rax,%rdi
    7c35:	e8 48 0b 00 00       	call   8782 <_ZNSaI16VkPresentModeKHRED1Ev>
    7c3a:	90                   	nop
    7c3b:	c9                   	leave
    7c3c:	c3                   	ret
    7c3d:	90                   	nop

0000000000007c3e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    7c3e:	55                   	push   %rbp
    7c3f:	48 89 e5             	mov    %rsp,%rbp
    7c42:	48 83 ec 10          	sub    $0x10,%rsp
    7c46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c4e:	48 89 c7             	mov    %rax,%rdi
    7c51:	e8 90 0c 00 00       	call   88e6 <_ZNSaIP9VkImage_TED1Ev>
    7c56:	90                   	nop
    7c57:	c9                   	leave
    7c58:	c3                   	ret
    7c59:	90                   	nop

0000000000007c5a <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7c5a:	55                   	push   %rbp
    7c5b:	48 89 e5             	mov    %rsp,%rbp
    7c5e:	48 83 ec 10          	sub    $0x10,%rsp
    7c62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c6a:	48 89 c7             	mov    %rax,%rdi
    7c6d:	e8 bc 0d 00 00       	call   8a2e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    7c72:	90                   	nop
    7c73:	c9                   	leave
    7c74:	c3                   	ret
    7c75:	90                   	nop

0000000000007c76 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7c76:	55                   	push   %rbp
    7c77:	48 89 e5             	mov    %rsp,%rbp
    7c7a:	48 83 ec 10          	sub    $0x10,%rsp
    7c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c86:	48 89 c7             	mov    %rax,%rdi
    7c89:	e8 ac 0d 00 00       	call   8a3a <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    7c8e:	90                   	nop
    7c8f:	c9                   	leave
    7c90:	c3                   	ret
    7c91:	90                   	nop

0000000000007c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7c92:	55                   	push   %rbp
    7c93:	48 89 e5             	mov    %rsp,%rbp
    7c96:	53                   	push   %rbx
    7c97:	48 83 ec 28          	sub    $0x28,%rsp
    7c9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7c9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7ca3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7ca7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7cab:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7caf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7cb3:	48 89 d6             	mov    %rdx,%rsi
    7cb6:	48 89 c7             	mov    %rax,%rdi
    7cb9:	e8 87 0d 00 00       	call   8a45 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7cbe:	48 89 c1             	mov    %rax,%rcx
    7cc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cc5:	48 89 c2             	mov    %rax,%rdx
    7cc8:	48 89 ce             	mov    %rcx,%rsi
    7ccb:	48 89 df             	mov    %rbx,%rdi
    7cce:	e8 d3 0d 00 00       	call   8aa6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7cd3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7cd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cdb:	48 89 d6             	mov    %rdx,%rsi
    7cde:	48 89 c7             	mov    %rax,%rdi
    7ce1:	e8 1e 0e 00 00       	call   8b04 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    7ce6:	eb 1a                	jmp    7d02 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7ce8:	48 89 c3             	mov    %rax,%rbx
    7ceb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cef:	48 89 c7             	mov    %rax,%rdi
    7cf2:	e8 79 00 00 00       	call   7d70 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7cf7:	48 89 d8             	mov    %rbx,%rax
    7cfa:	48 89 c7             	mov    %rax,%rdi
    7cfd:	e8 be c9 ff ff       	call   46c0 <_Unwind_Resume@plt>
    7d02:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d06:	c9                   	leave
    7d07:	c3                   	ret

0000000000007d08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7d08:	55                   	push   %rbp
    7d09:	48 89 e5             	mov    %rsp,%rbp
    7d0c:	48 83 ec 10          	sub    $0x10,%rsp
    7d10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d18:	48 89 c7             	mov    %rax,%rdi
    7d1b:	e8 24 0e 00 00       	call   8b44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7d20:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d27:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d2f:	48 8b 00             	mov    (%rax),%rax
    7d32:	48 89 ce             	mov    %rcx,%rsi
    7d35:	48 89 c7             	mov    %rax,%rdi
    7d38:	e8 15 0e 00 00       	call   8b52 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d41:	48 89 c7             	mov    %rax,%rdi
    7d44:	e8 27 00 00 00       	call   7d70 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7d49:	90                   	nop
    7d4a:	c9                   	leave
    7d4b:	c3                   	ret

0000000000007d4c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7d4c:	55                   	push   %rbp
    7d4d:	48 89 e5             	mov    %rsp,%rbp
    7d50:	48 83 ec 10          	sub    $0x10,%rsp
    7d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d5c:	48 8b 10             	mov    (%rax),%rdx
    7d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d63:	48 89 d6             	mov    %rdx,%rsi
    7d66:	48 89 c7             	mov    %rax,%rdi
    7d69:	e8 0e 0e 00 00       	call   8b7c <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7d6e:	c9                   	leave
    7d6f:	c3                   	ret

0000000000007d70 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7d70:	55                   	push   %rbp
    7d71:	48 89 e5             	mov    %rsp,%rbp
    7d74:	48 83 ec 10          	sub    $0x10,%rsp
    7d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d80:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d88:	48 8b 00             	mov    (%rax),%rax
    7d8b:	48 29 c2             	sub    %rax,%rdx
    7d8e:	48 c1 fa 03          	sar    $0x3,%rdx
    7d92:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7d99:	fc c0 0f 
    7d9c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7da0:	48 89 c2             	mov    %rax,%rdx
    7da3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7da7:	48 8b 08             	mov    (%rax),%rcx
    7daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dae:	48 89 ce             	mov    %rcx,%rsi
    7db1:	48 89 c7             	mov    %rax,%rdi
    7db4:	e8 fb 0d 00 00       	call   8bb4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dbd:	48 89 c7             	mov    %rax,%rdi
    7dc0:	e8 99 fd ff ff       	call   7b5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    7dc5:	90                   	nop
    7dc6:	c9                   	leave
    7dc7:	c3                   	ret

0000000000007dc8 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7dc8:	55                   	push   %rbp
    7dc9:	48 89 e5             	mov    %rsp,%rbp
    7dcc:	48 83 ec 10          	sub    $0x10,%rsp
    7dd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dd8:	48 89 c7             	mov    %rax,%rdi
    7ddb:	e8 0a 0e 00 00       	call   8bea <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    7de0:	90                   	nop
    7de1:	c9                   	leave
    7de2:	c3                   	ret
    7de3:	90                   	nop

0000000000007de4 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7de4:	55                   	push   %rbp
    7de5:	48 89 e5             	mov    %rsp,%rbp
    7de8:	48 83 ec 10          	sub    $0x10,%rsp
    7dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7df0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7df4:	48 89 c7             	mov    %rax,%rdi
    7df7:	e8 fa 0d 00 00       	call   8bf6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    7dfc:	90                   	nop
    7dfd:	c9                   	leave
    7dfe:	c3                   	ret
    7dff:	90                   	nop

0000000000007e00 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7e00:	55                   	push   %rbp
    7e01:	48 89 e5             	mov    %rsp,%rbp
    7e04:	53                   	push   %rbx
    7e05:	48 83 ec 28          	sub    $0x28,%rsp
    7e09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7e11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7e15:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7e19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7e1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e21:	48 89 d6             	mov    %rdx,%rsi
    7e24:	48 89 c7             	mov    %rax,%rdi
    7e27:	e8 d5 0d 00 00       	call   8c01 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7e2c:	48 89 c1             	mov    %rax,%rcx
    7e2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e33:	48 89 c2             	mov    %rax,%rdx
    7e36:	48 89 ce             	mov    %rcx,%rsi
    7e39:	48 89 df             	mov    %rbx,%rdi
    7e3c:	e8 21 0e 00 00       	call   8c62 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7e41:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7e45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e49:	48 89 d6             	mov    %rdx,%rsi
    7e4c:	48 89 c7             	mov    %rax,%rdi
    7e4f:	e8 6c 0e 00 00       	call   8cc0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    7e54:	eb 1a                	jmp    7e70 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7e56:	48 89 c3             	mov    %rax,%rbx
    7e59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e5d:	48 89 c7             	mov    %rax,%rdi
    7e60:	e8 79 00 00 00       	call   7ede <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7e65:	48 89 d8             	mov    %rbx,%rax
    7e68:	48 89 c7             	mov    %rax,%rdi
    7e6b:	e8 50 c8 ff ff       	call   46c0 <_Unwind_Resume@plt>
    7e70:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7e74:	c9                   	leave
    7e75:	c3                   	ret

0000000000007e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7e76:	55                   	push   %rbp
    7e77:	48 89 e5             	mov    %rsp,%rbp
    7e7a:	48 83 ec 10          	sub    $0x10,%rsp
    7e7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e86:	48 89 c7             	mov    %rax,%rdi
    7e89:	e8 72 0e 00 00       	call   8d00 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7e8e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7e91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e95:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e9d:	48 8b 00             	mov    (%rax),%rax
    7ea0:	48 89 ce             	mov    %rcx,%rsi
    7ea3:	48 89 c7             	mov    %rax,%rdi
    7ea6:	e8 63 0e 00 00       	call   8d0e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7eab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eaf:	48 89 c7             	mov    %rax,%rdi
    7eb2:	e8 27 00 00 00       	call   7ede <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7eb7:	90                   	nop
    7eb8:	c9                   	leave
    7eb9:	c3                   	ret

0000000000007eba <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7eba:	55                   	push   %rbp
    7ebb:	48 89 e5             	mov    %rsp,%rbp
    7ebe:	48 83 ec 10          	sub    $0x10,%rsp
    7ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eca:	48 8b 10             	mov    (%rax),%rdx
    7ecd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ed1:	48 89 d6             	mov    %rdx,%rsi
    7ed4:	48 89 c7             	mov    %rax,%rdi
    7ed7:	e8 5c 0e 00 00       	call   8d38 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7edc:	c9                   	leave
    7edd:	c3                   	ret

0000000000007ede <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7ede:	55                   	push   %rbp
    7edf:	48 89 e5             	mov    %rsp,%rbp
    7ee2:	48 83 ec 10          	sub    $0x10,%rsp
    7ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eee:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ef6:	48 8b 00             	mov    (%rax),%rax
    7ef9:	48 29 c2             	sub    %rax,%rdx
    7efc:	48 c1 fa 02          	sar    $0x2,%rdx
    7f00:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7f07:	fc c0 0f 
    7f0a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7f0e:	48 89 c2             	mov    %rax,%rdx
    7f11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f15:	48 8b 08             	mov    (%rax),%rcx
    7f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f1c:	48 89 ce             	mov    %rcx,%rsi
    7f1f:	48 89 c7             	mov    %rax,%rdi
    7f22:	e8 49 0e 00 00       	call   8d70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f2b:	48 89 c7             	mov    %rax,%rdi
    7f2e:	e8 47 fc ff ff       	call   7b7a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    7f33:	90                   	nop
    7f34:	c9                   	leave
    7f35:	c3                   	ret

0000000000007f36 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7f36:	55                   	push   %rbp
    7f37:	48 89 e5             	mov    %rsp,%rbp
    7f3a:	48 83 ec 10          	sub    $0x10,%rsp
    7f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f46:	48 89 c7             	mov    %rax,%rdi
    7f49:	e8 58 0e 00 00       	call   8da6 <_ZNSt15__new_allocatorIPKcEC1Ev>
    7f4e:	90                   	nop
    7f4f:	c9                   	leave
    7f50:	c3                   	ret
    7f51:	90                   	nop

0000000000007f52 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7f52:	55                   	push   %rbp
    7f53:	48 89 e5             	mov    %rsp,%rbp
    7f56:	48 83 ec 10          	sub    $0x10,%rsp
    7f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f62:	48 89 c7             	mov    %rax,%rdi
    7f65:	e8 48 0e 00 00       	call   8db2 <_ZNSt15__new_allocatorIPKcED1Ev>
    7f6a:	90                   	nop
    7f6b:	c9                   	leave
    7f6c:	c3                   	ret
    7f6d:	90                   	nop

0000000000007f6e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7f6e:	55                   	push   %rbp
    7f6f:	48 89 e5             	mov    %rsp,%rbp
    7f72:	53                   	push   %rbx
    7f73:	48 83 ec 28          	sub    $0x28,%rsp
    7f77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7f7f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7f83:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7f87:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f8b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f8f:	48 89 d6             	mov    %rdx,%rsi
    7f92:	48 89 c7             	mov    %rax,%rdi
    7f95:	e8 23 0e 00 00       	call   8dbd <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    7f9a:	48 89 c1             	mov    %rax,%rcx
    7f9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7fa1:	48 89 c2             	mov    %rax,%rdx
    7fa4:	48 89 ce             	mov    %rcx,%rsi
    7fa7:	48 89 df             	mov    %rbx,%rdi
    7faa:	e8 6f 0e 00 00       	call   8e1e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    7faf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7fb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fb7:	48 89 d6             	mov    %rdx,%rsi
    7fba:	48 89 c7             	mov    %rax,%rdi
    7fbd:	e8 ba 0e 00 00       	call   8e7c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    7fc2:	eb 1a                	jmp    7fde <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    7fc4:	48 89 c3             	mov    %rax,%rbx
    7fc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fcb:	48 89 c7             	mov    %rax,%rdi
    7fce:	e8 31 00 00 00       	call   8004 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    7fd3:	48 89 d8             	mov    %rbx,%rax
    7fd6:	48 89 c7             	mov    %rax,%rdi
    7fd9:	e8 e2 c6 ff ff       	call   46c0 <_Unwind_Resume@plt>
    7fde:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7fe2:	c9                   	leave
    7fe3:	c3                   	ret

0000000000007fe4 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    7fe4:	55                   	push   %rbp
    7fe5:	48 89 e5             	mov    %rsp,%rbp
    7fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    7ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ff4:	48 8b 00             	mov    (%rax),%rax
    7ff7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7ffb:	48 c1 e2 03          	shl    $0x3,%rdx
    7fff:	48 01 d0             	add    %rdx,%rax
      }
    8002:	5d                   	pop    %rbp
    8003:	c3                   	ret

0000000000008004 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8004:	55                   	push   %rbp
    8005:	48 89 e5             	mov    %rsp,%rbp
    8008:	48 83 ec 10          	sub    $0x10,%rsp
    800c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8010:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8014:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    801c:	48 8b 00             	mov    (%rax),%rax
    801f:	48 29 c2             	sub    %rax,%rdx
    8022:	48 89 d0             	mov    %rdx,%rax
    8025:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8029:	48 89 c2             	mov    %rax,%rdx
    802c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8030:	48 8b 08             	mov    (%rax),%rcx
    8033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8037:	48 89 ce             	mov    %rcx,%rsi
    803a:	48 89 c7             	mov    %rax,%rdi
    803d:	e8 ae 0e 00 00       	call   8ef0 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    8042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8046:	48 89 c7             	mov    %rax,%rdi
    8049:	e8 48 fb ff ff       	call   7b96 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    804e:	90                   	nop
    804f:	c9                   	leave
    8050:	c3                   	ret
    8051:	90                   	nop

0000000000008052 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8052:	55                   	push   %rbp
    8053:	48 89 e5             	mov    %rsp,%rbp
    8056:	48 83 ec 10          	sub    $0x10,%rsp
    805a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    805e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8062:	48 89 c7             	mov    %rax,%rdi
    8065:	e8 bc 0e 00 00       	call   8f26 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    806a:	90                   	nop
    806b:	c9                   	leave
    806c:	c3                   	ret
    806d:	90                   	nop

000000000000806e <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    806e:	55                   	push   %rbp
    806f:	48 89 e5             	mov    %rsp,%rbp
    8072:	48 83 ec 10          	sub    $0x10,%rsp
    8076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    807a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    807e:	48 89 c7             	mov    %rax,%rdi
    8081:	e8 ac 0e 00 00       	call   8f32 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    8086:	90                   	nop
    8087:	c9                   	leave
    8088:	c3                   	ret
    8089:	90                   	nop

000000000000808a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    808a:	55                   	push   %rbp
    808b:	48 89 e5             	mov    %rsp,%rbp
    808e:	53                   	push   %rbx
    808f:	48 83 ec 28          	sub    $0x28,%rsp
    8093:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8097:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    809b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    809f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    80a3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    80a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    80ab:	48 89 d6             	mov    %rdx,%rsi
    80ae:	48 89 c7             	mov    %rax,%rdi
    80b1:	e8 87 0e 00 00       	call   8f3d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    80b6:	48 89 c1             	mov    %rax,%rcx
    80b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    80bd:	48 89 c2             	mov    %rax,%rdx
    80c0:	48 89 ce             	mov    %rcx,%rsi
    80c3:	48 89 df             	mov    %rbx,%rdi
    80c6:	e8 d3 0e 00 00       	call   8f9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    80cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    80cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80d3:	48 89 d6             	mov    %rdx,%rsi
    80d6:	48 89 c7             	mov    %rax,%rdi
    80d9:	e8 1e 0f 00 00       	call   8ffc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    80de:	eb 1a                	jmp    80fa <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    80e0:	48 89 c3             	mov    %rax,%rbx
    80e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80e7:	48 89 c7             	mov    %rax,%rdi
    80ea:	e8 79 00 00 00       	call   8168 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    80ef:	48 89 d8             	mov    %rbx,%rax
    80f2:	48 89 c7             	mov    %rax,%rdi
    80f5:	e8 c6 c5 ff ff       	call   46c0 <_Unwind_Resume@plt>
    80fa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    80fe:	c9                   	leave
    80ff:	c3                   	ret

0000000000008100 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8100:	55                   	push   %rbp
    8101:	48 89 e5             	mov    %rsp,%rbp
    8104:	48 83 ec 10          	sub    $0x10,%rsp
    8108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    810c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8110:	48 89 c7             	mov    %rax,%rdi
    8113:	e8 24 0f 00 00       	call   903c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8118:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    811b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    811f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8127:	48 8b 00             	mov    (%rax),%rax
    812a:	48 89 ce             	mov    %rcx,%rsi
    812d:	48 89 c7             	mov    %rax,%rdi
    8130:	e8 15 0f 00 00       	call   904a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    8135:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8139:	48 89 c7             	mov    %rax,%rdi
    813c:	e8 27 00 00 00       	call   8168 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8141:	90                   	nop
    8142:	c9                   	leave
    8143:	c3                   	ret

0000000000008144 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8144:	55                   	push   %rbp
    8145:	48 89 e5             	mov    %rsp,%rbp
    8148:	48 83 ec 10          	sub    $0x10,%rsp
    814c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8154:	48 8b 10             	mov    (%rax),%rdx
    8157:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    815b:	48 89 d6             	mov    %rdx,%rsi
    815e:	48 89 c7             	mov    %rax,%rdi
    8161:	e8 0e 0f 00 00       	call   9074 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8166:	c9                   	leave
    8167:	c3                   	ret

0000000000008168 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8168:	55                   	push   %rbp
    8169:	48 89 e5             	mov    %rsp,%rbp
    816c:	48 83 ec 10          	sub    $0x10,%rsp
    8170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8178:	48 8b 50 10          	mov    0x10(%rax),%rdx
    817c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8180:	48 8b 00             	mov    (%rax),%rax
    8183:	48 29 c2             	sub    %rax,%rdx
    8186:	48 89 d0             	mov    %rdx,%rax
    8189:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    818d:	48 89 c2             	mov    %rax,%rdx
    8190:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8194:	48 8b 08             	mov    (%rax),%rcx
    8197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    819b:	48 89 ce             	mov    %rcx,%rsi
    819e:	48 89 c7             	mov    %rax,%rdi
    81a1:	e8 06 0f 00 00       	call   90ac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    81a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81aa:	48 89 c7             	mov    %rax,%rdi
    81ad:	e8 00 fa ff ff       	call   7bb2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    81b2:	90                   	nop
    81b3:	c9                   	leave
    81b4:	c3                   	ret
    81b5:	90                   	nop

00000000000081b6 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    81b6:	55                   	push   %rbp
    81b7:	48 89 e5             	mov    %rsp,%rbp
    81ba:	48 83 ec 10          	sub    $0x10,%rsp
    81be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81c6:	48 89 c7             	mov    %rax,%rdi
    81c9:	e8 14 0f 00 00       	call   90e2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    81ce:	90                   	nop
    81cf:	c9                   	leave
    81d0:	c3                   	ret
    81d1:	90                   	nop

00000000000081d2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    81d2:	55                   	push   %rbp
    81d3:	48 89 e5             	mov    %rsp,%rbp
    81d6:	48 83 ec 10          	sub    $0x10,%rsp
    81da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81e2:	48 89 c7             	mov    %rax,%rdi
    81e5:	e8 04 0f 00 00       	call   90ee <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    81ea:	90                   	nop
    81eb:	c9                   	leave
    81ec:	c3                   	ret
    81ed:	90                   	nop

00000000000081ee <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    81ee:	55                   	push   %rbp
    81ef:	48 89 e5             	mov    %rsp,%rbp
    81f2:	53                   	push   %rbx
    81f3:	48 83 ec 28          	sub    $0x28,%rsp
    81f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    81fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    81ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8203:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8207:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    820b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    820f:	48 89 d6             	mov    %rdx,%rsi
    8212:	48 89 c7             	mov    %rax,%rdi
    8215:	e8 df 0e 00 00       	call   90f9 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    821a:	48 89 c1             	mov    %rax,%rcx
    821d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8221:	48 89 c2             	mov    %rax,%rdx
    8224:	48 89 ce             	mov    %rcx,%rsi
    8227:	48 89 df             	mov    %rbx,%rdi
    822a:	e8 2b 0f 00 00       	call   915a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    822f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8233:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8237:	48 89 d6             	mov    %rdx,%rsi
    823a:	48 89 c7             	mov    %rax,%rdi
    823d:	e8 76 0f 00 00       	call   91b8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    8242:	eb 1a                	jmp    825e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8244:	48 89 c3             	mov    %rax,%rbx
    8247:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    824b:	48 89 c7             	mov    %rax,%rdi
    824e:	e8 79 00 00 00       	call   82cc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8253:	48 89 d8             	mov    %rbx,%rax
    8256:	48 89 c7             	mov    %rax,%rdi
    8259:	e8 62 c4 ff ff       	call   46c0 <_Unwind_Resume@plt>
    825e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8262:	c9                   	leave
    8263:	c3                   	ret

0000000000008264 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8264:	55                   	push   %rbp
    8265:	48 89 e5             	mov    %rsp,%rbp
    8268:	48 83 ec 10          	sub    $0x10,%rsp
    826c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8270:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8274:	48 89 c7             	mov    %rax,%rdi
    8277:	e8 7c 0f 00 00       	call   91f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    827c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    827f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8283:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828b:	48 8b 00             	mov    (%rax),%rax
    828e:	48 89 ce             	mov    %rcx,%rsi
    8291:	48 89 c7             	mov    %rax,%rdi
    8294:	e8 6d 0f 00 00       	call   9206 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    829d:	48 89 c7             	mov    %rax,%rdi
    82a0:	e8 27 00 00 00       	call   82cc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    82a5:	90                   	nop
    82a6:	c9                   	leave
    82a7:	c3                   	ret

00000000000082a8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    82a8:	55                   	push   %rbp
    82a9:	48 89 e5             	mov    %rsp,%rbp
    82ac:	48 83 ec 10          	sub    $0x10,%rsp
    82b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    82b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82b8:	48 8b 10             	mov    (%rax),%rdx
    82bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82bf:	48 89 d6             	mov    %rdx,%rsi
    82c2:	48 89 c7             	mov    %rax,%rdi
    82c5:	e8 66 0f 00 00       	call   9230 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    82ca:	c9                   	leave
    82cb:	c3                   	ret

00000000000082cc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    82cc:	55                   	push   %rbp
    82cd:	48 89 e5             	mov    %rsp,%rbp
    82d0:	48 83 ec 10          	sub    $0x10,%rsp
    82d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    82d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    82e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82e4:	48 8b 00             	mov    (%rax),%rax
    82e7:	48 29 c2             	sub    %rax,%rdx
    82ea:	48 c1 fa 03          	sar    $0x3,%rdx
    82ee:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    82f5:	aa aa aa 
    82f8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    82fc:	48 89 c2             	mov    %rax,%rdx
    82ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8303:	48 8b 08             	mov    (%rax),%rcx
    8306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    830a:	48 89 ce             	mov    %rcx,%rsi
    830d:	48 89 c7             	mov    %rax,%rdi
    8310:	e8 53 0f 00 00       	call   9268 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8319:	48 89 c7             	mov    %rax,%rdi
    831c:	e8 ad f8 ff ff       	call   7bce <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    8321:	90                   	nop
    8322:	c9                   	leave
    8323:	c3                   	ret

0000000000008324 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8324:	55                   	push   %rbp
    8325:	48 89 e5             	mov    %rsp,%rbp
    8328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    832c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8330:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8338:	48 8b 00             	mov    (%rax),%rax
    833b:	48 29 c2             	sub    %rax,%rdx
    833e:	48 c1 fa 03          	sar    $0x3,%rdx
    8342:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8349:	aa aa aa 
    834c:	48 0f af c2          	imul   %rdx,%rax
    8350:	5d                   	pop    %rbp
    8351:	c3                   	ret

0000000000008352 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8352:	55                   	push   %rbp
    8353:	48 89 e5             	mov    %rsp,%rbp
    8356:	48 83 ec 10          	sub    $0x10,%rsp
    835a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    835e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8362:	48 89 c7             	mov    %rax,%rdi
    8365:	e8 34 0f 00 00       	call   929e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    836a:	90                   	nop
    836b:	c9                   	leave
    836c:	c3                   	ret
    836d:	90                   	nop

000000000000836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    836e:	55                   	push   %rbp
    836f:	48 89 e5             	mov    %rsp,%rbp
    8372:	48 83 ec 10          	sub    $0x10,%rsp
    8376:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    837a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    837e:	48 89 c7             	mov    %rax,%rdi
    8381:	e8 24 0f 00 00       	call   92aa <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    8386:	90                   	nop
    8387:	c9                   	leave
    8388:	c3                   	ret
    8389:	90                   	nop

000000000000838a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    838a:	55                   	push   %rbp
    838b:	48 89 e5             	mov    %rsp,%rbp
    838e:	53                   	push   %rbx
    838f:	48 83 ec 28          	sub    $0x28,%rsp
    8393:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8397:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    839b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    839f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    83a3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    83a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83ab:	48 89 d6             	mov    %rdx,%rsi
    83ae:	48 89 c7             	mov    %rax,%rdi
    83b1:	e8 ff 0e 00 00       	call   92b5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    83b6:	48 89 c1             	mov    %rax,%rcx
    83b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83bd:	48 89 c2             	mov    %rax,%rdx
    83c0:	48 89 ce             	mov    %rcx,%rsi
    83c3:	48 89 df             	mov    %rbx,%rdi
    83c6:	e8 4b 0f 00 00       	call   9316 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    83cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    83cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83d3:	48 89 d6             	mov    %rdx,%rsi
    83d6:	48 89 c7             	mov    %rax,%rdi
    83d9:	e8 96 0f 00 00       	call   9374 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    83de:	eb 1a                	jmp    83fa <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    83e0:	48 89 c3             	mov    %rax,%rbx
    83e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83e7:	48 89 c7             	mov    %rax,%rdi
    83ea:	e8 bb 01 00 00       	call   85aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    83ef:	48 89 d8             	mov    %rbx,%rax
    83f2:	48 89 c7             	mov    %rax,%rdi
    83f5:	e8 c6 c2 ff ff       	call   46c0 <_Unwind_Resume@plt>
    83fa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    83fe:	c9                   	leave
    83ff:	c3                   	ret

0000000000008400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8400:	55                   	push   %rbp
    8401:	48 89 e5             	mov    %rsp,%rbp
    8404:	48 83 ec 10          	sub    $0x10,%rsp
    8408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    840c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8410:	48 89 c7             	mov    %rax,%rdi
    8413:	e8 9c 0f 00 00       	call   93b4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    8418:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    841b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    841f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8423:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8427:	48 8b 00             	mov    (%rax),%rax
    842a:	48 89 ce             	mov    %rcx,%rsi
    842d:	48 89 c7             	mov    %rax,%rdi
    8430:	e8 8d 0f 00 00       	call   93c2 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    8435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8439:	48 89 c7             	mov    %rax,%rdi
    843c:	e8 69 01 00 00       	call   85aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8441:	90                   	nop
    8442:	c9                   	leave
    8443:	c3                   	ret

0000000000008444 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    8444:	55                   	push   %rbp
    8445:	48 89 e5             	mov    %rsp,%rbp
    8448:	48 83 ec 20          	sub    $0x20,%rsp
    844c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8450:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8454:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8458:	48 89 d6             	mov    %rdx,%rsi
    845b:	48 89 c7             	mov    %rax,%rdi
    845e:	e8 89 0f 00 00       	call   93ec <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8467:	c9                   	leave
    8468:	c3                   	ret
    8469:	90                   	nop

000000000000846a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    846a:	55                   	push   %rbp
    846b:	48 89 e5             	mov    %rsp,%rbp
    846e:	48 83 ec 20          	sub    $0x20,%rsp
    8472:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8476:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    847a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    847e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8482:	48 89 d6             	mov    %rdx,%rsi
    8485:	48 89 c7             	mov    %rax,%rdi
    8488:	e8 5f 0f 00 00       	call   93ec <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    848d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8491:	c9                   	leave
    8492:	c3                   	ret

0000000000008493 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8493:	55                   	push   %rbp
    8494:	48 89 e5             	mov    %rsp,%rbp
    8497:	53                   	push   %rbx
    8498:	48 83 ec 18          	sub    $0x18,%rsp
    849c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    84a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84a8:	48 89 c7             	mov    %rax,%rdi
    84ab:	e8 5a 0f 00 00       	call   940a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    84b0:	48 8b 18             	mov    (%rax),%rbx
    84b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84b7:	48 89 c7             	mov    %rax,%rdi
    84ba:	e8 4b 0f 00 00       	call   940a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    84bf:	48 8b 00             	mov    (%rax),%rax
    84c2:	48 39 c3             	cmp    %rax,%rbx
    84c5:	0f 95 c0             	setne  %al
    84c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84cc:	c9                   	leave
    84cd:	c3                   	ret

00000000000084ce <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    84ce:	55                   	push   %rbp
    84cf:	48 89 e5             	mov    %rsp,%rbp
    84d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    84d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84da:	48 8b 00             	mov    (%rax),%rax
    84dd:	48 8d 50 18          	lea    0x18(%rax),%rdx
    84e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84e5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    84e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    84ec:	5d                   	pop    %rbp
    84ed:	c3                   	ret

00000000000084ee <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    84ee:	55                   	push   %rbp
    84ef:	48 89 e5             	mov    %rsp,%rbp
    84f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    84f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84fa:	48 8b 00             	mov    (%rax),%rax
    84fd:	5d                   	pop    %rbp
    84fe:	c3                   	ret
    84ff:	90                   	nop

0000000000008500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8500:	55                   	push   %rbp
    8501:	48 89 e5             	mov    %rsp,%rbp
    8504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8508:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    850c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8510:	48 8b 08             	mov    (%rax),%rcx
    8513:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8517:	48 89 d0             	mov    %rdx,%rax
    851a:	48 c1 e0 03          	shl    $0x3,%rax
    851e:	48 29 d0             	sub    %rdx,%rax
    8521:	48 c1 e0 02          	shl    $0x2,%rax
    8525:	48 01 c8             	add    %rcx,%rax
      }
    8528:	5d                   	pop    %rbp
    8529:	c3                   	ret

000000000000852a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    852a:	55                   	push   %rbp
    852b:	48 89 e5             	mov    %rsp,%rbp
    852e:	53                   	push   %rbx
    852f:	48 83 ec 18          	sub    $0x18,%rsp
    8533:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8537:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    853b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    853f:	48 89 c7             	mov    %rax,%rdi
    8542:	e8 d1 0e 00 00       	call   9418 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    8547:	84 c0                	test   %al,%al
    8549:	74 36                	je     8581 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    854b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    854f:	48 89 c7             	mov    %rax,%rdi
    8552:	e8 17 0f 00 00       	call   946e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8557:	48 89 c3             	mov    %rax,%rbx
    855a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    855e:	48 89 c7             	mov    %rax,%rdi
    8561:	e8 c4 0e 00 00       	call   942a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    8566:	48 89 c1             	mov    %rax,%rcx
    8569:	48 8b 03             	mov    (%rbx),%rax
    856c:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    8570:	48 89 01             	mov    %rax,(%rcx)
    8573:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    8577:	48 8b 43 10          	mov    0x10(%rbx),%rax
    857b:	48 89 41 10          	mov    %rax,0x10(%rcx)
    857f:	eb 1e                	jmp    859f <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    8581:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8585:	48 89 c7             	mov    %rax,%rdi
    8588:	e8 e1 0e 00 00       	call   946e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    858d:	48 89 c2             	mov    %rax,%rdx
    8590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8594:	48 89 d6             	mov    %rdx,%rsi
    8597:	48 89 c7             	mov    %rax,%rdi
    859a:	e8 dd 0e 00 00       	call   947c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    859f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    85a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85a7:	c9                   	leave
    85a8:	c3                   	ret
    85a9:	90                   	nop

00000000000085aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    85aa:	55                   	push   %rbp
    85ab:	48 89 e5             	mov    %rsp,%rbp
    85ae:	48 83 ec 10          	sub    $0x10,%rsp
    85b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    85b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85ba:	48 8b 50 10          	mov    0x10(%rax),%rdx
    85be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c2:	48 8b 00             	mov    (%rax),%rax
    85c5:	48 29 c2             	sub    %rax,%rdx
    85c8:	48 c1 fa 02          	sar    $0x2,%rdx
    85cc:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    85d3:	db b6 6d 
    85d6:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    85da:	48 89 c2             	mov    %rax,%rdx
    85dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85e1:	48 8b 08             	mov    (%rax),%rcx
    85e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85e8:	48 89 ce             	mov    %rcx,%rsi
    85eb:	48 89 c7             	mov    %rax,%rdi
    85ee:	e8 e3 0e 00 00       	call   94d6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    85f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f7:	48 89 c7             	mov    %rax,%rdi
    85fa:	e8 eb f5 ff ff       	call   7bea <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    85ff:	90                   	nop
    8600:	c9                   	leave
    8601:	c3                   	ret

0000000000008602 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8602:	55                   	push   %rbp
    8603:	48 89 e5             	mov    %rsp,%rbp
    8606:	48 83 ec 10          	sub    $0x10,%rsp
    860a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    860e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8612:	48 89 c7             	mov    %rax,%rdi
    8615:	e8 f2 0e 00 00       	call   950c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    861a:	90                   	nop
    861b:	c9                   	leave
    861c:	c3                   	ret
    861d:	90                   	nop

000000000000861e <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    861e:	55                   	push   %rbp
    861f:	48 89 e5             	mov    %rsp,%rbp
    8622:	48 83 ec 10          	sub    $0x10,%rsp
    8626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    862a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    862e:	48 89 c7             	mov    %rax,%rdi
    8631:	e8 e2 0e 00 00       	call   9518 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    8636:	90                   	nop
    8637:	c9                   	leave
    8638:	c3                   	ret
    8639:	90                   	nop

000000000000863a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    863a:	55                   	push   %rbp
    863b:	48 89 e5             	mov    %rsp,%rbp
    863e:	53                   	push   %rbx
    863f:	48 83 ec 28          	sub    $0x28,%rsp
    8643:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8647:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    864b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    864f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8653:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8657:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    865b:	48 89 d6             	mov    %rdx,%rsi
    865e:	48 89 c7             	mov    %rax,%rdi
    8661:	e8 bd 0e 00 00       	call   9523 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    8666:	48 89 c1             	mov    %rax,%rcx
    8669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    866d:	48 89 c2             	mov    %rax,%rdx
    8670:	48 89 ce             	mov    %rcx,%rsi
    8673:	48 89 df             	mov    %rbx,%rdi
    8676:	e8 09 0f 00 00       	call   9584 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    867b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    867f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8683:	48 89 d6             	mov    %rdx,%rsi
    8686:	48 89 c7             	mov    %rax,%rdi
    8689:	e8 54 0f 00 00       	call   95e2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    868e:	eb 1a                	jmp    86aa <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    8690:	48 89 c3             	mov    %rax,%rbx
    8693:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8697:	48 89 c7             	mov    %rax,%rdi
    869a:	e8 79 00 00 00       	call   8718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    869f:	48 89 d8             	mov    %rbx,%rax
    86a2:	48 89 c7             	mov    %rax,%rdi
    86a5:	e8 16 c0 ff ff       	call   46c0 <_Unwind_Resume@plt>
    86aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86ae:	c9                   	leave
    86af:	c3                   	ret

00000000000086b0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    86b0:	55                   	push   %rbp
    86b1:	48 89 e5             	mov    %rsp,%rbp
    86b4:	48 83 ec 10          	sub    $0x10,%rsp
    86b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    86bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c0:	48 89 c7             	mov    %rax,%rdi
    86c3:	e8 5a 0f 00 00       	call   9622 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    86c8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    86cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86cf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    86d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86d7:	48 8b 00             	mov    (%rax),%rax
    86da:	48 89 ce             	mov    %rcx,%rsi
    86dd:	48 89 c7             	mov    %rax,%rdi
    86e0:	e8 4b 0f 00 00       	call   9630 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    86e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e9:	48 89 c7             	mov    %rax,%rdi
    86ec:	e8 27 00 00 00       	call   8718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    86f1:	90                   	nop
    86f2:	c9                   	leave
    86f3:	c3                   	ret

00000000000086f4 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    86f4:	55                   	push   %rbp
    86f5:	48 89 e5             	mov    %rsp,%rbp
    86f8:	48 83 ec 10          	sub    $0x10,%rsp
    86fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8704:	48 8b 10             	mov    (%rax),%rdx
    8707:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    870b:	48 89 d6             	mov    %rdx,%rsi
    870e:	48 89 c7             	mov    %rax,%rdi
    8711:	e8 44 0f 00 00       	call   965a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8716:	c9                   	leave
    8717:	c3                   	ret

0000000000008718 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8718:	55                   	push   %rbp
    8719:	48 89 e5             	mov    %rsp,%rbp
    871c:	48 83 ec 10          	sub    $0x10,%rsp
    8720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8728:	48 8b 50 10          	mov    0x10(%rax),%rdx
    872c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8730:	48 8b 00             	mov    (%rax),%rax
    8733:	48 29 c2             	sub    %rax,%rdx
    8736:	48 89 d0             	mov    %rdx,%rax
    8739:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    873d:	48 89 c2             	mov    %rax,%rdx
    8740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8744:	48 8b 08             	mov    (%rax),%rcx
    8747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    874b:	48 89 ce             	mov    %rcx,%rsi
    874e:	48 89 c7             	mov    %rax,%rdi
    8751:	e8 3c 0f 00 00       	call   9692 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    8756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    875a:	48 89 c7             	mov    %rax,%rdi
    875d:	e8 a4 f4 ff ff       	call   7c06 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    8762:	90                   	nop
    8763:	c9                   	leave
    8764:	c3                   	ret
    8765:	90                   	nop

0000000000008766 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8766:	55                   	push   %rbp
    8767:	48 89 e5             	mov    %rsp,%rbp
    876a:	48 83 ec 10          	sub    $0x10,%rsp
    876e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8776:	48 89 c7             	mov    %rax,%rdi
    8779:	e8 4a 0f 00 00       	call   96c8 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    877e:	90                   	nop
    877f:	c9                   	leave
    8780:	c3                   	ret
    8781:	90                   	nop

0000000000008782 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8782:	55                   	push   %rbp
    8783:	48 89 e5             	mov    %rsp,%rbp
    8786:	48 83 ec 10          	sub    $0x10,%rsp
    878a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    878e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8792:	48 89 c7             	mov    %rax,%rdi
    8795:	e8 3a 0f 00 00       	call   96d4 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    879a:	90                   	nop
    879b:	c9                   	leave
    879c:	c3                   	ret
    879d:	90                   	nop

000000000000879e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    879e:	55                   	push   %rbp
    879f:	48 89 e5             	mov    %rsp,%rbp
    87a2:	53                   	push   %rbx
    87a3:	48 83 ec 28          	sub    $0x28,%rsp
    87a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    87ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    87af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    87b3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    87b7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    87bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87bf:	48 89 d6             	mov    %rdx,%rsi
    87c2:	48 89 c7             	mov    %rax,%rdi
    87c5:	e8 15 0f 00 00       	call   96df <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    87ca:	48 89 c1             	mov    %rax,%rcx
    87cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87d1:	48 89 c2             	mov    %rax,%rdx
    87d4:	48 89 ce             	mov    %rcx,%rsi
    87d7:	48 89 df             	mov    %rbx,%rdi
    87da:	e8 61 0f 00 00       	call   9740 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    87df:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    87e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87e7:	48 89 d6             	mov    %rdx,%rsi
    87ea:	48 89 c7             	mov    %rax,%rdi
    87ed:	e8 ac 0f 00 00       	call   979e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    87f2:	eb 1a                	jmp    880e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    87f4:	48 89 c3             	mov    %rax,%rbx
    87f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87fb:	48 89 c7             	mov    %rax,%rdi
    87fe:	e8 79 00 00 00       	call   887c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8803:	48 89 d8             	mov    %rbx,%rax
    8806:	48 89 c7             	mov    %rax,%rdi
    8809:	e8 b2 be ff ff       	call   46c0 <_Unwind_Resume@plt>
    880e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8812:	c9                   	leave
    8813:	c3                   	ret

0000000000008814 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8814:	55                   	push   %rbp
    8815:	48 89 e5             	mov    %rsp,%rbp
    8818:	48 83 ec 10          	sub    $0x10,%rsp
    881c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8820:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8824:	48 89 c7             	mov    %rax,%rdi
    8827:	e8 b2 0f 00 00       	call   97de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    882c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    882f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8833:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    883b:	48 8b 00             	mov    (%rax),%rax
    883e:	48 89 ce             	mov    %rcx,%rsi
    8841:	48 89 c7             	mov    %rax,%rdi
    8844:	e8 a3 0f 00 00       	call   97ec <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    8849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    884d:	48 89 c7             	mov    %rax,%rdi
    8850:	e8 27 00 00 00       	call   887c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8855:	90                   	nop
    8856:	c9                   	leave
    8857:	c3                   	ret

0000000000008858 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8858:	55                   	push   %rbp
    8859:	48 89 e5             	mov    %rsp,%rbp
    885c:	48 83 ec 10          	sub    $0x10,%rsp
    8860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8868:	48 8b 10             	mov    (%rax),%rdx
    886b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886f:	48 89 d6             	mov    %rdx,%rsi
    8872:	48 89 c7             	mov    %rax,%rdi
    8875:	e8 9c 0f 00 00       	call   9816 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    887a:	c9                   	leave
    887b:	c3                   	ret

000000000000887c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    887c:	55                   	push   %rbp
    887d:	48 89 e5             	mov    %rsp,%rbp
    8880:	48 83 ec 10          	sub    $0x10,%rsp
    8884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    888c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8890:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8894:	48 8b 00             	mov    (%rax),%rax
    8897:	48 29 c2             	sub    %rax,%rdx
    889a:	48 89 d0             	mov    %rdx,%rax
    889d:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    88a1:	48 89 c2             	mov    %rax,%rdx
    88a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88a8:	48 8b 08             	mov    (%rax),%rcx
    88ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88af:	48 89 ce             	mov    %rcx,%rsi
    88b2:	48 89 c7             	mov    %rax,%rdi
    88b5:	e8 94 0f 00 00       	call   984e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    88ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88be:	48 89 c7             	mov    %rax,%rdi
    88c1:	e8 5c f3 ff ff       	call   7c22 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    88c6:	90                   	nop
    88c7:	c9                   	leave
    88c8:	c3                   	ret
    88c9:	90                   	nop

00000000000088ca <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    88ca:	55                   	push   %rbp
    88cb:	48 89 e5             	mov    %rsp,%rbp
    88ce:	48 83 ec 10          	sub    $0x10,%rsp
    88d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88da:	48 89 c7             	mov    %rax,%rdi
    88dd:	e8 a2 0f 00 00       	call   9884 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    88e2:	90                   	nop
    88e3:	c9                   	leave
    88e4:	c3                   	ret
    88e5:	90                   	nop

00000000000088e6 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    88e6:	55                   	push   %rbp
    88e7:	48 89 e5             	mov    %rsp,%rbp
    88ea:	48 83 ec 10          	sub    $0x10,%rsp
    88ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88f6:	48 89 c7             	mov    %rax,%rdi
    88f9:	e8 92 0f 00 00       	call   9890 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    88fe:	90                   	nop
    88ff:	c9                   	leave
    8900:	c3                   	ret
    8901:	90                   	nop

0000000000008902 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8902:	55                   	push   %rbp
    8903:	48 89 e5             	mov    %rsp,%rbp
    8906:	53                   	push   %rbx
    8907:	48 83 ec 28          	sub    $0x28,%rsp
    890b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    890f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8913:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8917:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    891b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    891f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8923:	48 89 d6             	mov    %rdx,%rsi
    8926:	48 89 c7             	mov    %rax,%rdi
    8929:	e8 6d 0f 00 00       	call   989b <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    892e:	48 89 c1             	mov    %rax,%rcx
    8931:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8935:	48 89 c2             	mov    %rax,%rdx
    8938:	48 89 ce             	mov    %rcx,%rsi
    893b:	48 89 df             	mov    %rbx,%rdi
    893e:	e8 b9 0f 00 00       	call   98fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8943:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8947:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    894b:	48 89 d6             	mov    %rdx,%rsi
    894e:	48 89 c7             	mov    %rax,%rdi
    8951:	e8 04 10 00 00       	call   995a <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    8956:	eb 1a                	jmp    8972 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    8958:	48 89 c3             	mov    %rax,%rbx
    895b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    895f:	48 89 c7             	mov    %rax,%rdi
    8962:	e8 79 00 00 00       	call   89e0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8967:	48 89 d8             	mov    %rbx,%rax
    896a:	48 89 c7             	mov    %rax,%rdi
    896d:	e8 4e bd ff ff       	call   46c0 <_Unwind_Resume@plt>
    8972:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8976:	c9                   	leave
    8977:	c3                   	ret

0000000000008978 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8978:	55                   	push   %rbp
    8979:	48 89 e5             	mov    %rsp,%rbp
    897c:	48 83 ec 10          	sub    $0x10,%rsp
    8980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8988:	48 89 c7             	mov    %rax,%rdi
    898b:	e8 0a 10 00 00       	call   999a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8990:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8993:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8997:	48 8b 48 08          	mov    0x8(%rax),%rcx
    899b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    899f:	48 8b 00             	mov    (%rax),%rax
    89a2:	48 89 ce             	mov    %rcx,%rsi
    89a5:	48 89 c7             	mov    %rax,%rdi
    89a8:	e8 fb 0f 00 00       	call   99a8 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    89ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89b1:	48 89 c7             	mov    %rax,%rdi
    89b4:	e8 27 00 00 00       	call   89e0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    89b9:	90                   	nop
    89ba:	c9                   	leave
    89bb:	c3                   	ret

00000000000089bc <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    89bc:	55                   	push   %rbp
    89bd:	48 89 e5             	mov    %rsp,%rbp
    89c0:	48 83 ec 10          	sub    $0x10,%rsp
    89c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    89c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89cc:	48 8b 10             	mov    (%rax),%rdx
    89cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d3:	48 89 d6             	mov    %rdx,%rsi
    89d6:	48 89 c7             	mov    %rax,%rdi
    89d9:	e8 f4 0f 00 00       	call   99d2 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    89de:	c9                   	leave
    89df:	c3                   	ret

00000000000089e0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    89e0:	55                   	push   %rbp
    89e1:	48 89 e5             	mov    %rsp,%rbp
    89e4:	48 83 ec 10          	sub    $0x10,%rsp
    89e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    89ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    89f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f8:	48 8b 00             	mov    (%rax),%rax
    89fb:	48 29 c2             	sub    %rax,%rdx
    89fe:	48 89 d0             	mov    %rdx,%rax
    8a01:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8a05:	48 89 c2             	mov    %rax,%rdx
    8a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a0c:	48 8b 08             	mov    (%rax),%rcx
    8a0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a13:	48 89 ce             	mov    %rcx,%rsi
    8a16:	48 89 c7             	mov    %rax,%rdi
    8a19:	e8 ec 0f 00 00       	call   9a0a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a22:	48 89 c7             	mov    %rax,%rdi
    8a25:	e8 14 f2 ff ff       	call   7c3e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    8a2a:	90                   	nop
    8a2b:	c9                   	leave
    8a2c:	c3                   	ret
    8a2d:	90                   	nop

0000000000008a2e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8a2e:	55                   	push   %rbp
    8a2f:	48 89 e5             	mov    %rsp,%rbp
    8a32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a36:	90                   	nop
    8a37:	5d                   	pop    %rbp
    8a38:	c3                   	ret
    8a39:	90                   	nop

0000000000008a3a <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8a3a:	55                   	push   %rbp
    8a3b:	48 89 e5             	mov    %rsp,%rbp
    8a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a42:	90                   	nop
    8a43:	5d                   	pop    %rbp
    8a44:	c3                   	ret

0000000000008a45 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8a45:	55                   	push   %rbp
    8a46:	48 89 e5             	mov    %rsp,%rbp
    8a49:	53                   	push   %rbx
    8a4a:	48 83 ec 28          	sub    $0x28,%rsp
    8a4e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8a52:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8a56:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8a5a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a5e:	48 89 d6             	mov    %rdx,%rsi
    8a61:	48 89 c7             	mov    %rax,%rdi
    8a64:	e8 25 01 00 00       	call   8b8e <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    8a69:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a6d:	48 89 c7             	mov    %rax,%rdi
    8a70:	e8 ca 0f 00 00       	call   9a3f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8a75:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8a79:	0f 92 c3             	setb   %bl
    8a7c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a80:	48 89 c7             	mov    %rax,%rdi
    8a83:	e8 ee f1 ff ff       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
    8a88:	84 db                	test   %bl,%bl
    8a8a:	74 0f                	je     8a9b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8a8c:	48 8d 05 15 f6 00 00 	lea    0xf615(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8a93:	48 89 c7             	mov    %rax,%rdi
    8a96:	e8 d5 b6 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8a9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8a9f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8aa3:	c9                   	leave
    8aa4:	c3                   	ret
    8aa5:	90                   	nop

0000000000008aa6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8aa6:	55                   	push   %rbp
    8aa7:	48 89 e5             	mov    %rsp,%rbp
    8aaa:	53                   	push   %rbx
    8aab:	48 83 ec 28          	sub    $0x28,%rsp
    8aaf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ab3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8ab7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8abb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8abf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8ac3:	48 89 d6             	mov    %rdx,%rsi
    8ac6:	48 89 c7             	mov    %rax,%rdi
    8ac9:	e8 b4 0f 00 00       	call   9a82 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8ace:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ad2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ad6:	48 89 d6             	mov    %rdx,%rsi
    8ad9:	48 89 c7             	mov    %rax,%rdi
    8adc:	e8 d3 0f 00 00       	call   9ab4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8ae1:	eb 1a                	jmp    8afd <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8ae3:	48 89 c3             	mov    %rax,%rbx
    8ae6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8aea:	48 89 c7             	mov    %rax,%rdi
    8aed:	e8 6c f0 ff ff       	call   7b5e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8af2:	48 89 d8             	mov    %rbx,%rax
    8af5:	48 89 c7             	mov    %rax,%rdi
    8af8:	e8 c3 bb ff ff       	call   46c0 <_Unwind_Resume@plt>
    8afd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b01:	c9                   	leave
    8b02:	c3                   	ret
    8b03:	90                   	nop

0000000000008b04 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8b04:	55                   	push   %rbp
    8b05:	48 89 e5             	mov    %rsp,%rbp
    8b08:	48 83 ec 10          	sub    $0x10,%rsp
    8b0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b18:	48 89 c7             	mov    %rax,%rdi
    8b1b:	e8 24 00 00 00       	call   8b44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8b20:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b27:	48 8b 00             	mov    (%rax),%rax
    8b2a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b2e:	48 89 ce             	mov    %rcx,%rsi
    8b31:	48 89 c7             	mov    %rax,%rdi
    8b34:	e8 dc 0f 00 00       	call   9b15 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8b39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8b3d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8b41:	90                   	nop
    8b42:	c9                   	leave
    8b43:	c3                   	ret

0000000000008b44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8b44:	55                   	push   %rbp
    8b45:	48 89 e5             	mov    %rsp,%rbp
    8b48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b50:	5d                   	pop    %rbp
    8b51:	c3                   	ret

0000000000008b52 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8b52:	55                   	push   %rbp
    8b53:	48 89 e5             	mov    %rsp,%rbp
    8b56:	48 83 ec 20          	sub    $0x20,%rsp
    8b5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8b66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8b6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b6e:	48 89 d6             	mov    %rdx,%rsi
    8b71:	48 89 c7             	mov    %rax,%rdi
    8b74:	e8 c5 0f 00 00       	call   9b3e <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    8b79:	90                   	nop
    8b7a:	c9                   	leave
    8b7b:	c3                   	ret

0000000000008b7c <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8b7c:	55                   	push   %rbp
    8b7d:	48 89 e5             	mov    %rsp,%rbp
    8b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8b88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b8c:	5d                   	pop    %rbp
    8b8d:	c3                   	ret

0000000000008b8e <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8b8e:	55                   	push   %rbp
    8b8f:	48 89 e5             	mov    %rsp,%rbp
    8b92:	48 83 ec 10          	sub    $0x10,%rsp
    8b96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8b9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba6:	48 89 d6             	mov    %rdx,%rsi
    8ba9:	48 89 c7             	mov    %rax,%rdi
    8bac:	e8 b3 0f 00 00       	call   9b64 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    8bb1:	90                   	nop
    8bb2:	c9                   	leave
    8bb3:	c3                   	ret

0000000000008bb4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8bb4:	55                   	push   %rbp
    8bb5:	48 89 e5             	mov    %rsp,%rbp
    8bb8:	48 83 ec 20          	sub    $0x20,%rsp
    8bbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8bc4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8bc8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8bcd:	74 17                	je     8be6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8bcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bd3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8bd7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8bdb:	48 89 ce             	mov    %rcx,%rsi
    8bde:	48 89 c7             	mov    %rax,%rdi
    8be1:	e8 8d 0f 00 00       	call   9b73 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    8be6:	90                   	nop
    8be7:	c9                   	leave
    8be8:	c3                   	ret
    8be9:	90                   	nop

0000000000008bea <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8bea:	55                   	push   %rbp
    8beb:	48 89 e5             	mov    %rsp,%rbp
    8bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bf2:	90                   	nop
    8bf3:	5d                   	pop    %rbp
    8bf4:	c3                   	ret
    8bf5:	90                   	nop

0000000000008bf6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8bf6:	55                   	push   %rbp
    8bf7:	48 89 e5             	mov    %rsp,%rbp
    8bfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bfe:	90                   	nop
    8bff:	5d                   	pop    %rbp
    8c00:	c3                   	ret

0000000000008c01 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8c01:	55                   	push   %rbp
    8c02:	48 89 e5             	mov    %rsp,%rbp
    8c05:	53                   	push   %rbx
    8c06:	48 83 ec 28          	sub    $0x28,%rsp
    8c0a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8c0e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8c12:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8c16:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c1a:	48 89 d6             	mov    %rdx,%rsi
    8c1d:	48 89 c7             	mov    %rax,%rdi
    8c20:	e8 25 01 00 00       	call   8d4a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8c25:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c29:	48 89 c7             	mov    %rax,%rdi
    8c2c:	e8 70 0f 00 00       	call   9ba1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8c31:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8c35:	0f 92 c3             	setb   %bl
    8c38:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c3c:	48 89 c7             	mov    %rax,%rdi
    8c3f:	e8 a0 f1 ff ff       	call   7de4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8c44:	84 db                	test   %bl,%bl
    8c46:	74 0f                	je     8c57 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8c48:	48 8d 05 59 f4 00 00 	lea    0xf459(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8c4f:	48 89 c7             	mov    %rax,%rdi
    8c52:	e8 19 b5 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8c57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8c5b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c5f:	c9                   	leave
    8c60:	c3                   	ret
    8c61:	90                   	nop

0000000000008c62 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8c62:	55                   	push   %rbp
    8c63:	48 89 e5             	mov    %rsp,%rbp
    8c66:	53                   	push   %rbx
    8c67:	48 83 ec 28          	sub    $0x28,%rsp
    8c6b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c73:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8c77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c7b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c7f:	48 89 d6             	mov    %rdx,%rsi
    8c82:	48 89 c7             	mov    %rax,%rdi
    8c85:	e8 5a 0f 00 00       	call   9be4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8c8a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c92:	48 89 d6             	mov    %rdx,%rsi
    8c95:	48 89 c7             	mov    %rax,%rdi
    8c98:	e8 79 0f 00 00       	call   9c16 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8c9d:	eb 1a                	jmp    8cb9 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8c9f:	48 89 c3             	mov    %rax,%rbx
    8ca2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ca6:	48 89 c7             	mov    %rax,%rdi
    8ca9:	e8 cc ee ff ff       	call   7b7a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8cae:	48 89 d8             	mov    %rbx,%rax
    8cb1:	48 89 c7             	mov    %rax,%rdi
    8cb4:	e8 07 ba ff ff       	call   46c0 <_Unwind_Resume@plt>
    8cb9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8cbd:	c9                   	leave
    8cbe:	c3                   	ret
    8cbf:	90                   	nop

0000000000008cc0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8cc0:	55                   	push   %rbp
    8cc1:	48 89 e5             	mov    %rsp,%rbp
    8cc4:	48 83 ec 10          	sub    $0x10,%rsp
    8cc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ccc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cd4:	48 89 c7             	mov    %rax,%rdi
    8cd7:	e8 24 00 00 00       	call   8d00 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8cdc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8cdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce3:	48 8b 00             	mov    (%rax),%rax
    8ce6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8cea:	48 89 ce             	mov    %rcx,%rsi
    8ced:	48 89 c7             	mov    %rax,%rdi
    8cf0:	e8 82 0f 00 00       	call   9c77 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8cf5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8cf9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8cfd:	90                   	nop
    8cfe:	c9                   	leave
    8cff:	c3                   	ret

0000000000008d00 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8d00:	55                   	push   %rbp
    8d01:	48 89 e5             	mov    %rsp,%rbp
    8d04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d0c:	5d                   	pop    %rbp
    8d0d:	c3                   	ret

0000000000008d0e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8d0e:	55                   	push   %rbp
    8d0f:	48 89 e5             	mov    %rsp,%rbp
    8d12:	48 83 ec 20          	sub    $0x20,%rsp
    8d16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8d22:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d2a:	48 89 d6             	mov    %rdx,%rsi
    8d2d:	48 89 c7             	mov    %rax,%rdi
    8d30:	e8 6b 0f 00 00       	call   9ca0 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8d35:	90                   	nop
    8d36:	c9                   	leave
    8d37:	c3                   	ret

0000000000008d38 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8d38:	55                   	push   %rbp
    8d39:	48 89 e5             	mov    %rsp,%rbp
    8d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8d44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d48:	5d                   	pop    %rbp
    8d49:	c3                   	ret

0000000000008d4a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8d4a:	55                   	push   %rbp
    8d4b:	48 89 e5             	mov    %rsp,%rbp
    8d4e:	48 83 ec 10          	sub    $0x10,%rsp
    8d52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d56:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8d5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d62:	48 89 d6             	mov    %rdx,%rsi
    8d65:	48 89 c7             	mov    %rax,%rdi
    8d68:	e8 59 0f 00 00       	call   9cc6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8d6d:	90                   	nop
    8d6e:	c9                   	leave
    8d6f:	c3                   	ret

0000000000008d70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8d70:	55                   	push   %rbp
    8d71:	48 89 e5             	mov    %rsp,%rbp
    8d74:	48 83 ec 20          	sub    $0x20,%rsp
    8d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8d84:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8d89:	74 17                	je     8da2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8d8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d8f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d93:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d97:	48 89 ce             	mov    %rcx,%rsi
    8d9a:	48 89 c7             	mov    %rax,%rdi
    8d9d:	e8 33 0f 00 00       	call   9cd5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    8da2:	90                   	nop
    8da3:	c9                   	leave
    8da4:	c3                   	ret
    8da5:	90                   	nop

0000000000008da6 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8da6:	55                   	push   %rbp
    8da7:	48 89 e5             	mov    %rsp,%rbp
    8daa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dae:	90                   	nop
    8daf:	5d                   	pop    %rbp
    8db0:	c3                   	ret
    8db1:	90                   	nop

0000000000008db2 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8db2:	55                   	push   %rbp
    8db3:	48 89 e5             	mov    %rsp,%rbp
    8db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dba:	90                   	nop
    8dbb:	5d                   	pop    %rbp
    8dbc:	c3                   	ret

0000000000008dbd <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8dbd:	55                   	push   %rbp
    8dbe:	48 89 e5             	mov    %rsp,%rbp
    8dc1:	53                   	push   %rbx
    8dc2:	48 83 ec 28          	sub    $0x28,%rsp
    8dc6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8dca:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8dce:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8dd2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8dd6:	48 89 d6             	mov    %rdx,%rsi
    8dd9:	48 89 c7             	mov    %rax,%rdi
    8ddc:	e8 e9 00 00 00       	call   8eca <_ZNSaIPKcEC1ERKS1_>
    8de1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8de5:	48 89 c7             	mov    %rax,%rdi
    8de8:	e8 16 0f 00 00       	call   9d03 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    8ded:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8df1:	0f 92 c3             	setb   %bl
    8df4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8df8:	48 89 c7             	mov    %rax,%rdi
    8dfb:	e8 52 f1 ff ff       	call   7f52 <_ZNSaIPKcED1Ev>
    8e00:	84 db                	test   %bl,%bl
    8e02:	74 0f                	je     8e13 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8e04:	48 8d 05 9d f2 00 00 	lea    0xf29d(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8e0b:	48 89 c7             	mov    %rax,%rdi
    8e0e:	e8 5d b3 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8e13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8e17:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e1b:	c9                   	leave
    8e1c:	c3                   	ret
    8e1d:	90                   	nop

0000000000008e1e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8e1e:	55                   	push   %rbp
    8e1f:	48 89 e5             	mov    %rsp,%rbp
    8e22:	53                   	push   %rbx
    8e23:	48 83 ec 28          	sub    $0x28,%rsp
    8e27:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e2b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8e2f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8e33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e37:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8e3b:	48 89 d6             	mov    %rdx,%rsi
    8e3e:	48 89 c7             	mov    %rax,%rdi
    8e41:	e8 00 0f 00 00       	call   9d46 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8e46:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8e4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e4e:	48 89 d6             	mov    %rdx,%rsi
    8e51:	48 89 c7             	mov    %rax,%rdi
    8e54:	e8 1f 0f 00 00       	call   9d78 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    8e59:	eb 1a                	jmp    8e75 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    8e5b:	48 89 c3             	mov    %rax,%rbx
    8e5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e62:	48 89 c7             	mov    %rax,%rdi
    8e65:	e8 2c ed ff ff       	call   7b96 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8e6a:	48 89 d8             	mov    %rbx,%rax
    8e6d:	48 89 c7             	mov    %rax,%rdi
    8e70:	e8 4b b8 ff ff       	call   46c0 <_Unwind_Resume@plt>
    8e75:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e79:	c9                   	leave
    8e7a:	c3                   	ret
    8e7b:	90                   	nop

0000000000008e7c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8e7c:	55                   	push   %rbp
    8e7d:	48 89 e5             	mov    %rsp,%rbp
    8e80:	48 83 ec 10          	sub    $0x10,%rsp
    8e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e90:	48 89 c7             	mov    %rax,%rdi
    8e93:	e8 24 00 00 00       	call   8ebc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    8e98:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8e9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e9f:	48 8b 00             	mov    (%rax),%rax
    8ea2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ea6:	48 89 ce             	mov    %rcx,%rsi
    8ea9:	48 89 c7             	mov    %rax,%rdi
    8eac:	e8 1d 0f 00 00       	call   9dce <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8eb1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8eb5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8eb9:	90                   	nop
    8eba:	c9                   	leave
    8ebb:	c3                   	ret

0000000000008ebc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8ebc:	55                   	push   %rbp
    8ebd:	48 89 e5             	mov    %rsp,%rbp
    8ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ec8:	5d                   	pop    %rbp
    8ec9:	c3                   	ret

0000000000008eca <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8eca:	55                   	push   %rbp
    8ecb:	48 89 e5             	mov    %rsp,%rbp
    8ece:	48 83 ec 10          	sub    $0x10,%rsp
    8ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ed6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8eda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ee2:	48 89 d6             	mov    %rdx,%rsi
    8ee5:	48 89 c7             	mov    %rax,%rdi
    8ee8:	e8 0b 0f 00 00       	call   9df8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    8eed:	90                   	nop
    8eee:	c9                   	leave
    8eef:	c3                   	ret

0000000000008ef0 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    8ef0:	55                   	push   %rbp
    8ef1:	48 89 e5             	mov    %rsp,%rbp
    8ef4:	48 83 ec 20          	sub    $0x20,%rsp
    8ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8efc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8f04:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8f09:	74 17                	je     8f22 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8f0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f13:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f17:	48 89 ce             	mov    %rcx,%rsi
    8f1a:	48 89 c7             	mov    %rax,%rdi
    8f1d:	e8 e5 0e 00 00       	call   9e07 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    8f22:	90                   	nop
    8f23:	c9                   	leave
    8f24:	c3                   	ret
    8f25:	90                   	nop

0000000000008f26 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8f26:	55                   	push   %rbp
    8f27:	48 89 e5             	mov    %rsp,%rbp
    8f2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f2e:	90                   	nop
    8f2f:	5d                   	pop    %rbp
    8f30:	c3                   	ret
    8f31:	90                   	nop

0000000000008f32 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8f32:	55                   	push   %rbp
    8f33:	48 89 e5             	mov    %rsp,%rbp
    8f36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f3a:	90                   	nop
    8f3b:	5d                   	pop    %rbp
    8f3c:	c3                   	ret

0000000000008f3d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8f3d:	55                   	push   %rbp
    8f3e:	48 89 e5             	mov    %rsp,%rbp
    8f41:	53                   	push   %rbx
    8f42:	48 83 ec 28          	sub    $0x28,%rsp
    8f46:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8f4a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8f4e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8f52:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f56:	48 89 d6             	mov    %rdx,%rsi
    8f59:	48 89 c7             	mov    %rax,%rdi
    8f5c:	e8 25 01 00 00       	call   9086 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    8f61:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f65:	48 89 c7             	mov    %rax,%rdi
    8f68:	e8 c8 0e 00 00       	call   9e35 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    8f6d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8f71:	0f 92 c3             	setb   %bl
    8f74:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f78:	48 89 c7             	mov    %rax,%rdi
    8f7b:	e8 ee f0 ff ff       	call   806e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8f80:	84 db                	test   %bl,%bl
    8f82:	74 0f                	je     8f93 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8f84:	48 8d 05 1d f1 00 00 	lea    0xf11d(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8f8b:	48 89 c7             	mov    %rax,%rdi
    8f8e:	e8 dd b1 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8f93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8f97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f9b:	c9                   	leave
    8f9c:	c3                   	ret
    8f9d:	90                   	nop

0000000000008f9e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8f9e:	55                   	push   %rbp
    8f9f:	48 89 e5             	mov    %rsp,%rbp
    8fa2:	53                   	push   %rbx
    8fa3:	48 83 ec 28          	sub    $0x28,%rsp
    8fa7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8fab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8faf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8fb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fb7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8fbb:	48 89 d6             	mov    %rdx,%rsi
    8fbe:	48 89 c7             	mov    %rax,%rdi
    8fc1:	e8 b2 0e 00 00       	call   9e78 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8fc6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8fca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fce:	48 89 d6             	mov    %rdx,%rsi
    8fd1:	48 89 c7             	mov    %rax,%rdi
    8fd4:	e8 d1 0e 00 00       	call   9eaa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    8fd9:	eb 1a                	jmp    8ff5 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    8fdb:	48 89 c3             	mov    %rax,%rbx
    8fde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fe2:	48 89 c7             	mov    %rax,%rdi
    8fe5:	e8 c8 eb ff ff       	call   7bb2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    8fea:	48 89 d8             	mov    %rbx,%rax
    8fed:	48 89 c7             	mov    %rax,%rdi
    8ff0:	e8 cb b6 ff ff       	call   46c0 <_Unwind_Resume@plt>
    8ff5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ff9:	c9                   	leave
    8ffa:	c3                   	ret
    8ffb:	90                   	nop

0000000000008ffc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8ffc:	55                   	push   %rbp
    8ffd:	48 89 e5             	mov    %rsp,%rbp
    9000:	48 83 ec 10          	sub    $0x10,%rsp
    9004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9008:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    900c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9010:	48 89 c7             	mov    %rax,%rdi
    9013:	e8 24 00 00 00       	call   903c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9018:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    901b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    901f:	48 8b 00             	mov    (%rax),%rax
    9022:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9026:	48 89 ce             	mov    %rcx,%rsi
    9029:	48 89 c7             	mov    %rax,%rdi
    902c:	e8 cf 0e 00 00       	call   9f00 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9031:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9035:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9039:	90                   	nop
    903a:	c9                   	leave
    903b:	c3                   	ret

000000000000903c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    903c:	55                   	push   %rbp
    903d:	48 89 e5             	mov    %rsp,%rbp
    9040:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9048:	5d                   	pop    %rbp
    9049:	c3                   	ret

000000000000904a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    904a:	55                   	push   %rbp
    904b:	48 89 e5             	mov    %rsp,%rbp
    904e:	48 83 ec 20          	sub    $0x20,%rsp
    9052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9056:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    905a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    905e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9066:	48 89 d6             	mov    %rdx,%rsi
    9069:	48 89 c7             	mov    %rax,%rdi
    906c:	e8 b8 0e 00 00       	call   9f29 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9071:	90                   	nop
    9072:	c9                   	leave
    9073:	c3                   	ret

0000000000009074 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9074:	55                   	push   %rbp
    9075:	48 89 e5             	mov    %rsp,%rbp
    9078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    907c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9080:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9084:	5d                   	pop    %rbp
    9085:	c3                   	ret

0000000000009086 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9086:	55                   	push   %rbp
    9087:	48 89 e5             	mov    %rsp,%rbp
    908a:	48 83 ec 10          	sub    $0x10,%rsp
    908e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9092:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9096:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    909a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    909e:	48 89 d6             	mov    %rdx,%rsi
    90a1:	48 89 c7             	mov    %rax,%rdi
    90a4:	e8 a7 0e 00 00       	call   9f50 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    90a9:	90                   	nop
    90aa:	c9                   	leave
    90ab:	c3                   	ret

00000000000090ac <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    90ac:	55                   	push   %rbp
    90ad:	48 89 e5             	mov    %rsp,%rbp
    90b0:	48 83 ec 20          	sub    $0x20,%rsp
    90b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    90bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    90c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    90c5:	74 17                	je     90de <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    90c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    90d3:	48 89 ce             	mov    %rcx,%rsi
    90d6:	48 89 c7             	mov    %rax,%rdi
    90d9:	e8 81 0e 00 00       	call   9f5f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    90de:	90                   	nop
    90df:	c9                   	leave
    90e0:	c3                   	ret
    90e1:	90                   	nop

00000000000090e2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    90e2:	55                   	push   %rbp
    90e3:	48 89 e5             	mov    %rsp,%rbp
    90e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90ea:	90                   	nop
    90eb:	5d                   	pop    %rbp
    90ec:	c3                   	ret
    90ed:	90                   	nop

00000000000090ee <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    90ee:	55                   	push   %rbp
    90ef:	48 89 e5             	mov    %rsp,%rbp
    90f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90f6:	90                   	nop
    90f7:	5d                   	pop    %rbp
    90f8:	c3                   	ret

00000000000090f9 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    90f9:	55                   	push   %rbp
    90fa:	48 89 e5             	mov    %rsp,%rbp
    90fd:	53                   	push   %rbx
    90fe:	48 83 ec 28          	sub    $0x28,%rsp
    9102:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9106:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    910a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    910e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9112:	48 89 d6             	mov    %rdx,%rsi
    9115:	48 89 c7             	mov    %rax,%rdi
    9118:	e8 25 01 00 00       	call   9242 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    911d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9121:	48 89 c7             	mov    %rax,%rdi
    9124:	e8 64 0e 00 00       	call   9f8d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    9129:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    912d:	0f 92 c3             	setb   %bl
    9130:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9134:	48 89 c7             	mov    %rax,%rdi
    9137:	e8 96 f0 ff ff       	call   81d2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    913c:	84 db                	test   %bl,%bl
    913e:	74 0f                	je     914f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9140:	48 8d 05 61 ef 00 00 	lea    0xef61(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9147:	48 89 c7             	mov    %rax,%rdi
    914a:	e8 21 b0 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    914f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9153:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9157:	c9                   	leave
    9158:	c3                   	ret
    9159:	90                   	nop

000000000000915a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    915a:	55                   	push   %rbp
    915b:	48 89 e5             	mov    %rsp,%rbp
    915e:	53                   	push   %rbx
    915f:	48 83 ec 28          	sub    $0x28,%rsp
    9163:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9167:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    916b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    916f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9173:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9177:	48 89 d6             	mov    %rdx,%rsi
    917a:	48 89 c7             	mov    %rax,%rdi
    917d:	e8 4e 0e 00 00       	call   9fd0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9182:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    918a:	48 89 d6             	mov    %rdx,%rsi
    918d:	48 89 c7             	mov    %rax,%rdi
    9190:	e8 6d 0e 00 00       	call   a002 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    9195:	eb 1a                	jmp    91b1 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    9197:	48 89 c3             	mov    %rax,%rbx
    919a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    919e:	48 89 c7             	mov    %rax,%rdi
    91a1:	e8 28 ea ff ff       	call   7bce <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    91a6:	48 89 d8             	mov    %rbx,%rax
    91a9:	48 89 c7             	mov    %rax,%rdi
    91ac:	e8 0f b5 ff ff       	call   46c0 <_Unwind_Resume@plt>
    91b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91b5:	c9                   	leave
    91b6:	c3                   	ret
    91b7:	90                   	nop

00000000000091b8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    91b8:	55                   	push   %rbp
    91b9:	48 89 e5             	mov    %rsp,%rbp
    91bc:	48 83 ec 10          	sub    $0x10,%rsp
    91c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    91c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91cc:	48 89 c7             	mov    %rax,%rdi
    91cf:	e8 24 00 00 00       	call   91f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    91d4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    91d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91db:	48 8b 00             	mov    (%rax),%rax
    91de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    91e2:	48 89 ce             	mov    %rcx,%rsi
    91e5:	48 89 c7             	mov    %rax,%rdi
    91e8:	e8 75 0e 00 00       	call   a062 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    91ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    91f1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    91f5:	90                   	nop
    91f6:	c9                   	leave
    91f7:	c3                   	ret

00000000000091f8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    91f8:	55                   	push   %rbp
    91f9:	48 89 e5             	mov    %rsp,%rbp
    91fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9204:	5d                   	pop    %rbp
    9205:	c3                   	ret

0000000000009206 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9206:	55                   	push   %rbp
    9207:	48 89 e5             	mov    %rsp,%rbp
    920a:	48 83 ec 20          	sub    $0x20,%rsp
    920e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9212:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9216:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    921a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    921e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9222:	48 89 d6             	mov    %rdx,%rsi
    9225:	48 89 c7             	mov    %rax,%rdi
    9228:	e8 5e 0e 00 00       	call   a08b <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    922d:	90                   	nop
    922e:	c9                   	leave
    922f:	c3                   	ret

0000000000009230 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9230:	55                   	push   %rbp
    9231:	48 89 e5             	mov    %rsp,%rbp
    9234:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9238:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    923c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9240:	5d                   	pop    %rbp
    9241:	c3                   	ret

0000000000009242 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9242:	55                   	push   %rbp
    9243:	48 89 e5             	mov    %rsp,%rbp
    9246:	48 83 ec 10          	sub    $0x10,%rsp
    924a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    924e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9252:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    925a:	48 89 d6             	mov    %rdx,%rsi
    925d:	48 89 c7             	mov    %rax,%rdi
    9260:	e8 4d 0e 00 00       	call   a0b2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    9265:	90                   	nop
    9266:	c9                   	leave
    9267:	c3                   	ret

0000000000009268 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9268:	55                   	push   %rbp
    9269:	48 89 e5             	mov    %rsp,%rbp
    926c:	48 83 ec 20          	sub    $0x20,%rsp
    9270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9274:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9278:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    927c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9281:	74 17                	je     929a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9287:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    928b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    928f:	48 89 ce             	mov    %rcx,%rsi
    9292:	48 89 c7             	mov    %rax,%rdi
    9295:	e8 27 0e 00 00       	call   a0c1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    929a:	90                   	nop
    929b:	c9                   	leave
    929c:	c3                   	ret
    929d:	90                   	nop

000000000000929e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    929e:	55                   	push   %rbp
    929f:	48 89 e5             	mov    %rsp,%rbp
    92a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92a6:	90                   	nop
    92a7:	5d                   	pop    %rbp
    92a8:	c3                   	ret
    92a9:	90                   	nop

00000000000092aa <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    92aa:	55                   	push   %rbp
    92ab:	48 89 e5             	mov    %rsp,%rbp
    92ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92b2:	90                   	nop
    92b3:	5d                   	pop    %rbp
    92b4:	c3                   	ret

00000000000092b5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    92b5:	55                   	push   %rbp
    92b6:	48 89 e5             	mov    %rsp,%rbp
    92b9:	53                   	push   %rbx
    92ba:	48 83 ec 28          	sub    $0x28,%rsp
    92be:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    92c2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    92c6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    92ca:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    92ce:	48 89 d6             	mov    %rdx,%rsi
    92d1:	48 89 c7             	mov    %rax,%rdi
    92d4:	e8 d7 01 00 00       	call   94b0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    92d9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    92dd:	48 89 c7             	mov    %rax,%rdi
    92e0:	e8 0a 0e 00 00       	call   a0ef <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    92e5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    92e9:	0f 92 c3             	setb   %bl
    92ec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    92f0:	48 89 c7             	mov    %rax,%rdi
    92f3:	e8 76 f0 ff ff       	call   836e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    92f8:	84 db                	test   %bl,%bl
    92fa:	74 0f                	je     930b <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    92fc:	48 8d 05 a5 ed 00 00 	lea    0xeda5(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9303:	48 89 c7             	mov    %rax,%rdi
    9306:	e8 65 ae ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    930b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    930f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9313:	c9                   	leave
    9314:	c3                   	ret
    9315:	90                   	nop

0000000000009316 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9316:	55                   	push   %rbp
    9317:	48 89 e5             	mov    %rsp,%rbp
    931a:	53                   	push   %rbx
    931b:	48 83 ec 28          	sub    $0x28,%rsp
    931f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9323:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9327:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    932b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    932f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9333:	48 89 d6             	mov    %rdx,%rsi
    9336:	48 89 c7             	mov    %rax,%rdi
    9339:	e8 f4 0d 00 00       	call   a132 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    933e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9342:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9346:	48 89 d6             	mov    %rdx,%rsi
    9349:	48 89 c7             	mov    %rax,%rdi
    934c:	e8 13 0e 00 00       	call   a164 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    9351:	eb 1a                	jmp    936d <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    9353:	48 89 c3             	mov    %rax,%rbx
    9356:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    935a:	48 89 c7             	mov    %rax,%rdi
    935d:	e8 88 e8 ff ff       	call   7bea <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    9362:	48 89 d8             	mov    %rbx,%rax
    9365:	48 89 c7             	mov    %rax,%rdi
    9368:	e8 53 b3 ff ff       	call   46c0 <_Unwind_Resume@plt>
    936d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9371:	c9                   	leave
    9372:	c3                   	ret
    9373:	90                   	nop

0000000000009374 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9374:	55                   	push   %rbp
    9375:	48 89 e5             	mov    %rsp,%rbp
    9378:	48 83 ec 10          	sub    $0x10,%rsp
    937c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9380:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9384:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9388:	48 89 c7             	mov    %rax,%rdi
    938b:	e8 24 00 00 00       	call   93b4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    9390:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9397:	48 8b 00             	mov    (%rax),%rax
    939a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    939e:	48 89 ce             	mov    %rcx,%rsi
    93a1:	48 89 c7             	mov    %rax,%rdi
    93a4:	e8 1c 0e 00 00       	call   a1c5 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    93a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    93ad:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    93b1:	90                   	nop
    93b2:	c9                   	leave
    93b3:	c3                   	ret

00000000000093b4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    93b4:	55                   	push   %rbp
    93b5:	48 89 e5             	mov    %rsp,%rbp
    93b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    93bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c0:	5d                   	pop    %rbp
    93c1:	c3                   	ret

00000000000093c2 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    93c2:	55                   	push   %rbp
    93c3:	48 89 e5             	mov    %rsp,%rbp
    93c6:	48 83 ec 20          	sub    $0x20,%rsp
    93ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    93d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    93d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    93da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93de:	48 89 d6             	mov    %rdx,%rsi
    93e1:	48 89 c7             	mov    %rax,%rdi
    93e4:	e8 05 0e 00 00       	call   a1ee <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    93e9:	90                   	nop
    93ea:	c9                   	leave
    93eb:	c3                   	ret

00000000000093ec <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    93ec:	55                   	push   %rbp
    93ed:	48 89 e5             	mov    %rsp,%rbp
    93f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    93f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    93fc:	48 8b 10             	mov    (%rax),%rdx
    93ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9403:	48 89 10             	mov    %rdx,(%rax)
    9406:	90                   	nop
    9407:	5d                   	pop    %rbp
    9408:	c3                   	ret
    9409:	90                   	nop

000000000000940a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    940a:	55                   	push   %rbp
    940b:	48 89 e5             	mov    %rsp,%rbp
    940e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9416:	5d                   	pop    %rbp
    9417:	c3                   	ret

0000000000009418 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    9418:	55                   	push   %rbp
    9419:	48 89 e5             	mov    %rsp,%rbp
    941c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    9420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9424:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    9428:	5d                   	pop    %rbp
    9429:	c3                   	ret

000000000000942a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    942a:	55                   	push   %rbp
    942b:	48 89 e5             	mov    %rsp,%rbp
    942e:	48 83 ec 10          	sub    $0x10,%rsp
    9432:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    9436:	e8 13 b6 ff ff       	call   4a4e <_ZSt23__is_constant_evaluatedv>
    943b:	84 c0                	test   %al,%al
    943d:	74 1a                	je     9459 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    943f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9443:	48 89 c7             	mov    %rax,%rdi
    9446:	e8 cd ff ff ff       	call   9418 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    944b:	83 f0 01             	xor    $0x1,%eax
    944e:	84 c0                	test   %al,%al
    9450:	74 07                	je     9459 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9452:	b8 01 00 00 00       	mov    $0x1,%eax
    9457:	eb 05                	jmp    945e <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    9459:	b8 00 00 00 00       	mov    $0x0,%eax
    945e:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    9460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9464:	48 89 c7             	mov    %rax,%rdi
    9467:	e8 a8 0d 00 00       	call   a214 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    946c:	c9                   	leave
    946d:	c3                   	ret

000000000000946e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    946e:	55                   	push   %rbp
    946f:	48 89 e5             	mov    %rsp,%rbp
    9472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9476:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947a:	5d                   	pop    %rbp
    947b:	c3                   	ret

000000000000947c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    947c:	55                   	push   %rbp
    947d:	48 89 e5             	mov    %rsp,%rbp
    9480:	53                   	push   %rbx
    9481:	48 83 ec 18          	sub    $0x18,%rsp
    9485:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9489:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    948d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9491:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9495:	48 89 c7             	mov    %rax,%rdi
    9498:	e8 d1 ff ff ff       	call   946e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    949d:	48 89 c6             	mov    %rax,%rsi
    94a0:	48 89 df             	mov    %rbx,%rdi
    94a3:	e8 7a 0d 00 00       	call   a222 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    94a8:	90                   	nop
    94a9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    94ad:	c9                   	leave
    94ae:	c3                   	ret
    94af:	90                   	nop

00000000000094b0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    94b0:	55                   	push   %rbp
    94b1:	48 89 e5             	mov    %rsp,%rbp
    94b4:	48 83 ec 10          	sub    $0x10,%rsp
    94b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    94c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94c8:	48 89 d6             	mov    %rdx,%rsi
    94cb:	48 89 c7             	mov    %rax,%rdi
    94ce:	e8 95 0d 00 00       	call   a268 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    94d3:	90                   	nop
    94d4:	c9                   	leave
    94d5:	c3                   	ret

00000000000094d6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    94d6:	55                   	push   %rbp
    94d7:	48 89 e5             	mov    %rsp,%rbp
    94da:	48 83 ec 20          	sub    $0x20,%rsp
    94de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    94ea:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    94ef:	74 17                	je     9508 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    94f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    94f9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    94fd:	48 89 ce             	mov    %rcx,%rsi
    9500:	48 89 c7             	mov    %rax,%rdi
    9503:	e8 6f 0d 00 00       	call   a277 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    9508:	90                   	nop
    9509:	c9                   	leave
    950a:	c3                   	ret
    950b:	90                   	nop

000000000000950c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    950c:	55                   	push   %rbp
    950d:	48 89 e5             	mov    %rsp,%rbp
    9510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9514:	90                   	nop
    9515:	5d                   	pop    %rbp
    9516:	c3                   	ret
    9517:	90                   	nop

0000000000009518 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9518:	55                   	push   %rbp
    9519:	48 89 e5             	mov    %rsp,%rbp
    951c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9520:	90                   	nop
    9521:	5d                   	pop    %rbp
    9522:	c3                   	ret

0000000000009523 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9523:	55                   	push   %rbp
    9524:	48 89 e5             	mov    %rsp,%rbp
    9527:	53                   	push   %rbx
    9528:	48 83 ec 28          	sub    $0x28,%rsp
    952c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9530:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9534:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9538:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    953c:	48 89 d6             	mov    %rdx,%rsi
    953f:	48 89 c7             	mov    %rax,%rdi
    9542:	e8 25 01 00 00       	call   966c <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    9547:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    954b:	48 89 c7             	mov    %rax,%rdi
    954e:	e8 52 0d 00 00       	call   a2a5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    9553:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9557:	0f 92 c3             	setb   %bl
    955a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    955e:	48 89 c7             	mov    %rax,%rdi
    9561:	e8 b8 f0 ff ff       	call   861e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    9566:	84 db                	test   %bl,%bl
    9568:	74 0f                	je     9579 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    956a:	48 8d 05 37 eb 00 00 	lea    0xeb37(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9571:	48 89 c7             	mov    %rax,%rdi
    9574:	e8 f7 ab ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9579:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    957d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9581:	c9                   	leave
    9582:	c3                   	ret
    9583:	90                   	nop

0000000000009584 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9584:	55                   	push   %rbp
    9585:	48 89 e5             	mov    %rsp,%rbp
    9588:	53                   	push   %rbx
    9589:	48 83 ec 28          	sub    $0x28,%rsp
    958d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9591:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9595:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9599:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    959d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    95a1:	48 89 d6             	mov    %rdx,%rsi
    95a4:	48 89 c7             	mov    %rax,%rdi
    95a7:	e8 3c 0d 00 00       	call   a2e8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    95ac:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95b4:	48 89 d6             	mov    %rdx,%rsi
    95b7:	48 89 c7             	mov    %rax,%rdi
    95ba:	e8 5b 0d 00 00       	call   a31a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    95bf:	eb 1a                	jmp    95db <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    95c1:	48 89 c3             	mov    %rax,%rbx
    95c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95c8:	48 89 c7             	mov    %rax,%rdi
    95cb:	e8 36 e6 ff ff       	call   7c06 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    95d0:	48 89 d8             	mov    %rbx,%rax
    95d3:	48 89 c7             	mov    %rax,%rdi
    95d6:	e8 e5 b0 ff ff       	call   46c0 <_Unwind_Resume@plt>
    95db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95df:	c9                   	leave
    95e0:	c3                   	ret
    95e1:	90                   	nop

00000000000095e2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    95e2:	55                   	push   %rbp
    95e3:	48 89 e5             	mov    %rsp,%rbp
    95e6:	48 83 ec 10          	sub    $0x10,%rsp
    95ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    95f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f6:	48 89 c7             	mov    %rax,%rdi
    95f9:	e8 24 00 00 00       	call   9622 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    95fe:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9605:	48 8b 00             	mov    (%rax),%rax
    9608:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    960c:	48 89 ce             	mov    %rcx,%rsi
    960f:	48 89 c7             	mov    %rax,%rdi
    9612:	e8 59 0d 00 00       	call   a370 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9617:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    961b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    961f:	90                   	nop
    9620:	c9                   	leave
    9621:	c3                   	ret

0000000000009622 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9622:	55                   	push   %rbp
    9623:	48 89 e5             	mov    %rsp,%rbp
    9626:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    962a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    962e:	5d                   	pop    %rbp
    962f:	c3                   	ret

0000000000009630 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9630:	55                   	push   %rbp
    9631:	48 89 e5             	mov    %rsp,%rbp
    9634:	48 83 ec 20          	sub    $0x20,%rsp
    9638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    963c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9640:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9644:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    964c:	48 89 d6             	mov    %rdx,%rsi
    964f:	48 89 c7             	mov    %rax,%rdi
    9652:	e8 42 0d 00 00       	call   a399 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    9657:	90                   	nop
    9658:	c9                   	leave
    9659:	c3                   	ret

000000000000965a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    965a:	55                   	push   %rbp
    965b:	48 89 e5             	mov    %rsp,%rbp
    965e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9662:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9666:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    966a:	5d                   	pop    %rbp
    966b:	c3                   	ret

000000000000966c <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    966c:	55                   	push   %rbp
    966d:	48 89 e5             	mov    %rsp,%rbp
    9670:	48 83 ec 10          	sub    $0x10,%rsp
    9674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9678:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    967c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9684:	48 89 d6             	mov    %rdx,%rsi
    9687:	48 89 c7             	mov    %rax,%rdi
    968a:	e8 31 0d 00 00       	call   a3c0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    968f:	90                   	nop
    9690:	c9                   	leave
    9691:	c3                   	ret

0000000000009692 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9692:	55                   	push   %rbp
    9693:	48 89 e5             	mov    %rsp,%rbp
    9696:	48 83 ec 20          	sub    $0x20,%rsp
    969a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    969e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    96a6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    96ab:	74 17                	je     96c4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    96ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96b5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    96b9:	48 89 ce             	mov    %rcx,%rsi
    96bc:	48 89 c7             	mov    %rax,%rdi
    96bf:	e8 0b 0d 00 00       	call   a3cf <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    96c4:	90                   	nop
    96c5:	c9                   	leave
    96c6:	c3                   	ret
    96c7:	90                   	nop

00000000000096c8 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    96c8:	55                   	push   %rbp
    96c9:	48 89 e5             	mov    %rsp,%rbp
    96cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96d0:	90                   	nop
    96d1:	5d                   	pop    %rbp
    96d2:	c3                   	ret
    96d3:	90                   	nop

00000000000096d4 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    96d4:	55                   	push   %rbp
    96d5:	48 89 e5             	mov    %rsp,%rbp
    96d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96dc:	90                   	nop
    96dd:	5d                   	pop    %rbp
    96de:	c3                   	ret

00000000000096df <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    96df:	55                   	push   %rbp
    96e0:	48 89 e5             	mov    %rsp,%rbp
    96e3:	53                   	push   %rbx
    96e4:	48 83 ec 28          	sub    $0x28,%rsp
    96e8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    96ec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    96f0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    96f4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    96f8:	48 89 d6             	mov    %rdx,%rsi
    96fb:	48 89 c7             	mov    %rax,%rdi
    96fe:	e8 25 01 00 00       	call   9828 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    9703:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9707:	48 89 c7             	mov    %rax,%rdi
    970a:	e8 ee 0c 00 00       	call   a3fd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    970f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9713:	0f 92 c3             	setb   %bl
    9716:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    971a:	48 89 c7             	mov    %rax,%rdi
    971d:	e8 60 f0 ff ff       	call   8782 <_ZNSaI16VkPresentModeKHRED1Ev>
    9722:	84 db                	test   %bl,%bl
    9724:	74 0f                	je     9735 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9726:	48 8d 05 7b e9 00 00 	lea    0xe97b(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    972d:	48 89 c7             	mov    %rax,%rdi
    9730:	e8 3b aa ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9735:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9739:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    973d:	c9                   	leave
    973e:	c3                   	ret
    973f:	90                   	nop

0000000000009740 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9740:	55                   	push   %rbp
    9741:	48 89 e5             	mov    %rsp,%rbp
    9744:	53                   	push   %rbx
    9745:	48 83 ec 28          	sub    $0x28,%rsp
    9749:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    974d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9751:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9755:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9759:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    975d:	48 89 d6             	mov    %rdx,%rsi
    9760:	48 89 c7             	mov    %rax,%rdi
    9763:	e8 d8 0c 00 00       	call   a440 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9768:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    976c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9770:	48 89 d6             	mov    %rdx,%rsi
    9773:	48 89 c7             	mov    %rax,%rdi
    9776:	e8 f7 0c 00 00       	call   a472 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    977b:	eb 1a                	jmp    9797 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    977d:	48 89 c3             	mov    %rax,%rbx
    9780:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9784:	48 89 c7             	mov    %rax,%rdi
    9787:	e8 96 e4 ff ff       	call   7c22 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    978c:	48 89 d8             	mov    %rbx,%rax
    978f:	48 89 c7             	mov    %rax,%rdi
    9792:	e8 29 af ff ff       	call   46c0 <_Unwind_Resume@plt>
    9797:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    979b:	c9                   	leave
    979c:	c3                   	ret
    979d:	90                   	nop

000000000000979e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    979e:	55                   	push   %rbp
    979f:	48 89 e5             	mov    %rsp,%rbp
    97a2:	48 83 ec 10          	sub    $0x10,%rsp
    97a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    97ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b2:	48 89 c7             	mov    %rax,%rdi
    97b5:	e8 24 00 00 00       	call   97de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    97ba:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    97bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c1:	48 8b 00             	mov    (%rax),%rax
    97c4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    97c8:	48 89 ce             	mov    %rcx,%rsi
    97cb:	48 89 c7             	mov    %rax,%rdi
    97ce:	e8 f5 0c 00 00       	call   a4c8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    97d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    97d7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    97db:	90                   	nop
    97dc:	c9                   	leave
    97dd:	c3                   	ret

00000000000097de <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    97de:	55                   	push   %rbp
    97df:	48 89 e5             	mov    %rsp,%rbp
    97e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    97e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97ea:	5d                   	pop    %rbp
    97eb:	c3                   	ret

00000000000097ec <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    97ec:	55                   	push   %rbp
    97ed:	48 89 e5             	mov    %rsp,%rbp
    97f0:	48 83 ec 20          	sub    $0x20,%rsp
    97f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    97fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9800:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9808:	48 89 d6             	mov    %rdx,%rsi
    980b:	48 89 c7             	mov    %rax,%rdi
    980e:	e8 de 0c 00 00       	call   a4f1 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9813:	90                   	nop
    9814:	c9                   	leave
    9815:	c3                   	ret

0000000000009816 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9816:	55                   	push   %rbp
    9817:	48 89 e5             	mov    %rsp,%rbp
    981a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    981e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9822:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9826:	5d                   	pop    %rbp
    9827:	c3                   	ret

0000000000009828 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9828:	55                   	push   %rbp
    9829:	48 89 e5             	mov    %rsp,%rbp
    982c:	48 83 ec 10          	sub    $0x10,%rsp
    9830:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9834:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9838:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    983c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9840:	48 89 d6             	mov    %rdx,%rsi
    9843:	48 89 c7             	mov    %rax,%rdi
    9846:	e8 cd 0c 00 00       	call   a518 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    984b:	90                   	nop
    984c:	c9                   	leave
    984d:	c3                   	ret

000000000000984e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    984e:	55                   	push   %rbp
    984f:	48 89 e5             	mov    %rsp,%rbp
    9852:	48 83 ec 20          	sub    $0x20,%rsp
    9856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    985a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    985e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9862:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9867:	74 17                	je     9880 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    986d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9871:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9875:	48 89 ce             	mov    %rcx,%rsi
    9878:	48 89 c7             	mov    %rax,%rdi
    987b:	e8 a7 0c 00 00       	call   a527 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9880:	90                   	nop
    9881:	c9                   	leave
    9882:	c3                   	ret
    9883:	90                   	nop

0000000000009884 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9884:	55                   	push   %rbp
    9885:	48 89 e5             	mov    %rsp,%rbp
    9888:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    988c:	90                   	nop
    988d:	5d                   	pop    %rbp
    988e:	c3                   	ret
    988f:	90                   	nop

0000000000009890 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9890:	55                   	push   %rbp
    9891:	48 89 e5             	mov    %rsp,%rbp
    9894:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9898:	90                   	nop
    9899:	5d                   	pop    %rbp
    989a:	c3                   	ret

000000000000989b <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    989b:	55                   	push   %rbp
    989c:	48 89 e5             	mov    %rsp,%rbp
    989f:	53                   	push   %rbx
    98a0:	48 83 ec 28          	sub    $0x28,%rsp
    98a4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    98a8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    98ac:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    98b0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    98b4:	48 89 d6             	mov    %rdx,%rsi
    98b7:	48 89 c7             	mov    %rax,%rdi
    98ba:	e8 25 01 00 00       	call   99e4 <_ZNSaIP9VkImage_TEC1ERKS1_>
    98bf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    98c3:	48 89 c7             	mov    %rax,%rdi
    98c6:	e8 8a 0c 00 00       	call   a555 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    98cb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    98cf:	0f 92 c3             	setb   %bl
    98d2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    98d6:	48 89 c7             	mov    %rax,%rdi
    98d9:	e8 08 f0 ff ff       	call   88e6 <_ZNSaIP9VkImage_TED1Ev>
    98de:	84 db                	test   %bl,%bl
    98e0:	74 0f                	je     98f1 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    98e2:	48 8d 05 bf e7 00 00 	lea    0xe7bf(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    98e9:	48 89 c7             	mov    %rax,%rdi
    98ec:	e8 7f a8 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    98f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    98f5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98f9:	c9                   	leave
    98fa:	c3                   	ret
    98fb:	90                   	nop

00000000000098fc <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    98fc:	55                   	push   %rbp
    98fd:	48 89 e5             	mov    %rsp,%rbp
    9900:	53                   	push   %rbx
    9901:	48 83 ec 28          	sub    $0x28,%rsp
    9905:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9909:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    990d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9911:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9915:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9919:	48 89 d6             	mov    %rdx,%rsi
    991c:	48 89 c7             	mov    %rax,%rdi
    991f:	e8 74 0c 00 00       	call   a598 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9924:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9928:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    992c:	48 89 d6             	mov    %rdx,%rsi
    992f:	48 89 c7             	mov    %rax,%rdi
    9932:	e8 93 0c 00 00       	call   a5ca <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    9937:	eb 1a                	jmp    9953 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    9939:	48 89 c3             	mov    %rax,%rbx
    993c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9940:	48 89 c7             	mov    %rax,%rdi
    9943:	e8 f6 e2 ff ff       	call   7c3e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9948:	48 89 d8             	mov    %rbx,%rax
    994b:	48 89 c7             	mov    %rax,%rdi
    994e:	e8 6d ad ff ff       	call   46c0 <_Unwind_Resume@plt>
    9953:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9957:	c9                   	leave
    9958:	c3                   	ret
    9959:	90                   	nop

000000000000995a <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    995a:	55                   	push   %rbp
    995b:	48 89 e5             	mov    %rsp,%rbp
    995e:	48 83 ec 10          	sub    $0x10,%rsp
    9962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9966:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    996a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    996e:	48 89 c7             	mov    %rax,%rdi
    9971:	e8 24 00 00 00       	call   999a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9976:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    997d:	48 8b 00             	mov    (%rax),%rax
    9980:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9984:	48 89 ce             	mov    %rcx,%rsi
    9987:	48 89 c7             	mov    %rax,%rdi
    998a:	e8 91 0c 00 00       	call   a620 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    998f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9993:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9997:	90                   	nop
    9998:	c9                   	leave
    9999:	c3                   	ret

000000000000999a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    999a:	55                   	push   %rbp
    999b:	48 89 e5             	mov    %rsp,%rbp
    999e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    99a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99a6:	5d                   	pop    %rbp
    99a7:	c3                   	ret

00000000000099a8 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    99a8:	55                   	push   %rbp
    99a9:	48 89 e5             	mov    %rsp,%rbp
    99ac:	48 83 ec 20          	sub    $0x20,%rsp
    99b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    99b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    99bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    99c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99c4:	48 89 d6             	mov    %rdx,%rsi
    99c7:	48 89 c7             	mov    %rax,%rdi
    99ca:	e8 7a 0c 00 00       	call   a649 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    99cf:	90                   	nop
    99d0:	c9                   	leave
    99d1:	c3                   	ret

00000000000099d2 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    99d2:	55                   	push   %rbp
    99d3:	48 89 e5             	mov    %rsp,%rbp
    99d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    99de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    99e2:	5d                   	pop    %rbp
    99e3:	c3                   	ret

00000000000099e4 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    99e4:	55                   	push   %rbp
    99e5:	48 89 e5             	mov    %rsp,%rbp
    99e8:	48 83 ec 10          	sub    $0x10,%rsp
    99ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    99f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    99f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99fc:	48 89 d6             	mov    %rdx,%rsi
    99ff:	48 89 c7             	mov    %rax,%rdi
    9a02:	e8 69 0c 00 00       	call   a670 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    9a07:	90                   	nop
    9a08:	c9                   	leave
    9a09:	c3                   	ret

0000000000009a0a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9a0a:	55                   	push   %rbp
    9a0b:	48 89 e5             	mov    %rsp,%rbp
    9a0e:	48 83 ec 20          	sub    $0x20,%rsp
    9a12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9a1e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9a23:	74 17                	je     9a3c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9a25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a29:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a2d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a31:	48 89 ce             	mov    %rcx,%rsi
    9a34:	48 89 c7             	mov    %rax,%rdi
    9a37:	e8 43 0c 00 00       	call   a67f <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9a3c:	90                   	nop
    9a3d:	c9                   	leave
    9a3e:	c3                   	ret

0000000000009a3f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9a3f:	55                   	push   %rbp
    9a40:	48 89 e5             	mov    %rsp,%rbp
    9a43:	48 83 ec 20          	sub    $0x20,%rsp
    9a47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9a4b:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9a52:	03 3f 00 
    9a55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9a59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a5d:	48 89 c7             	mov    %rax,%rdi
    9a60:	e8 48 0c 00 00       	call   a6ad <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9a65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9a69:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9a6d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a71:	48 89 d6             	mov    %rdx,%rsi
    9a74:	48 89 c7             	mov    %rax,%rdi
    9a77:	e8 81 b8 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    9a7c:	48 8b 00             	mov    (%rax),%rax
      }
    9a7f:	c9                   	leave
    9a80:	c3                   	ret
    9a81:	90                   	nop

0000000000009a82 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9a82:	55                   	push   %rbp
    9a83:	48 89 e5             	mov    %rsp,%rbp
    9a86:	48 83 ec 10          	sub    $0x10,%rsp
    9a8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9a92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a9a:	48 89 d6             	mov    %rdx,%rsi
    9a9d:	48 89 c7             	mov    %rax,%rdi
    9aa0:	e8 e9 f0 ff ff       	call   8b8e <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9aa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa9:	48 89 c7             	mov    %rax,%rdi
    9aac:	e8 17 0c 00 00       	call   a6c8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9ab1:	90                   	nop
    9ab2:	c9                   	leave
    9ab3:	c3                   	ret

0000000000009ab4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9ab4:	55                   	push   %rbp
    9ab5:	48 89 e5             	mov    %rsp,%rbp
    9ab8:	48 83 ec 10          	sub    $0x10,%rsp
    9abc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ac0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9ac4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9acc:	48 89 d6             	mov    %rdx,%rsi
    9acf:	48 89 c7             	mov    %rax,%rdi
    9ad2:	e8 1f 0c 00 00       	call   a6f6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9ad7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9adb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae2:	48 8b 10             	mov    (%rax),%rdx
    9ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9aed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af1:	48 8b 08             	mov    (%rax),%rcx
    9af4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9af8:	48 89 d0             	mov    %rdx,%rax
    9afb:	48 c1 e0 06          	shl    $0x6,%rax
    9aff:	48 01 d0             	add    %rdx,%rax
    9b02:	48 c1 e0 03          	shl    $0x3,%rax
    9b06:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9b0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b0e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9b12:	90                   	nop
    9b13:	c9                   	leave
    9b14:	c3                   	ret

0000000000009b15 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9b15:	55                   	push   %rbp
    9b16:	48 89 e5             	mov    %rsp,%rbp
    9b19:	48 83 ec 20          	sub    $0x20,%rsp
    9b1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9b29:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b31:	48 89 d6             	mov    %rdx,%rsi
    9b34:	48 89 c7             	mov    %rax,%rdi
    9b37:	e8 ed 0b 00 00       	call   a729 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9b3c:	c9                   	leave
    9b3d:	c3                   	ret

0000000000009b3e <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9b3e:	55                   	push   %rbp
    9b3f:	48 89 e5             	mov    %rsp,%rbp
    9b42:	48 83 ec 10          	sub    $0x10,%rsp
    9b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9b4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b56:	48 89 d6             	mov    %rdx,%rsi
    9b59:	48 89 c7             	mov    %rax,%rdi
    9b5c:	e8 f1 0b 00 00       	call   a752 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9b61:	90                   	nop
    9b62:	c9                   	leave
    9b63:	c3                   	ret

0000000000009b64 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9b64:	55                   	push   %rbp
    9b65:	48 89 e5             	mov    %rsp,%rbp
    9b68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b70:	90                   	nop
    9b71:	5d                   	pop    %rbp
    9b72:	c3                   	ret

0000000000009b73 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9b73:	55                   	push   %rbp
    9b74:	48 89 e5             	mov    %rsp,%rbp
    9b77:	48 83 ec 20          	sub    $0x20,%rsp
    9b7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9b87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b8b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b93:	48 89 ce             	mov    %rcx,%rsi
    9b96:	48 89 c7             	mov    %rax,%rdi
    9b99:	e8 c4 0b 00 00       	call   a762 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    9b9e:	90                   	nop
    9b9f:	c9                   	leave
    9ba0:	c3                   	ret

0000000000009ba1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9ba1:	55                   	push   %rbp
    9ba2:	48 89 e5             	mov    %rsp,%rbp
    9ba5:	48 83 ec 20          	sub    $0x20,%rsp
    9ba9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9bad:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9bb4:	07 7e 00 
    9bb7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9bbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bbf:	48 89 c7             	mov    %rax,%rdi
    9bc2:	e8 d5 0b 00 00       	call   a79c <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    9bc7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9bcb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9bcf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9bd3:	48 89 d6             	mov    %rdx,%rsi
    9bd6:	48 89 c7             	mov    %rax,%rdi
    9bd9:	e8 1f b7 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    9bde:	48 8b 00             	mov    (%rax),%rax
      }
    9be1:	c9                   	leave
    9be2:	c3                   	ret
    9be3:	90                   	nop

0000000000009be4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9be4:	55                   	push   %rbp
    9be5:	48 89 e5             	mov    %rsp,%rbp
    9be8:	48 83 ec 10          	sub    $0x10,%rsp
    9bec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9bf4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bfc:	48 89 d6             	mov    %rdx,%rsi
    9bff:	48 89 c7             	mov    %rax,%rdi
    9c02:	e8 43 f1 ff ff       	call   8d4a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9c07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c0b:	48 89 c7             	mov    %rax,%rdi
    9c0e:	e8 a3 0b 00 00       	call   a7b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9c13:	90                   	nop
    9c14:	c9                   	leave
    9c15:	c3                   	ret

0000000000009c16 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9c16:	55                   	push   %rbp
    9c17:	48 89 e5             	mov    %rsp,%rbp
    9c1a:	48 83 ec 10          	sub    $0x10,%rsp
    9c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9c26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c2e:	48 89 d6             	mov    %rdx,%rsi
    9c31:	48 89 c7             	mov    %rax,%rdi
    9c34:	e8 ab 0b 00 00       	call   a7e4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    9c39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9c3d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9c40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c44:	48 8b 10             	mov    (%rax),%rdx
    9c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c4b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c53:	48 8b 08             	mov    (%rax),%rcx
    9c56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c5a:	48 89 d0             	mov    %rdx,%rax
    9c5d:	48 c1 e0 06          	shl    $0x6,%rax
    9c61:	48 01 d0             	add    %rdx,%rax
    9c64:	48 c1 e0 02          	shl    $0x2,%rax
    9c68:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c70:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9c74:	90                   	nop
    9c75:	c9                   	leave
    9c76:	c3                   	ret

0000000000009c77 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9c77:	55                   	push   %rbp
    9c78:	48 89 e5             	mov    %rsp,%rbp
    9c7b:	48 83 ec 20          	sub    $0x20,%rsp
    9c7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c83:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c87:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9c8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c93:	48 89 d6             	mov    %rdx,%rsi
    9c96:	48 89 c7             	mov    %rax,%rdi
    9c99:	e8 79 0b 00 00       	call   a817 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    9c9e:	c9                   	leave
    9c9f:	c3                   	ret

0000000000009ca0 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9ca0:	55                   	push   %rbp
    9ca1:	48 89 e5             	mov    %rsp,%rbp
    9ca4:	48 83 ec 10          	sub    $0x10,%rsp
    9ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9cb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cb8:	48 89 d6             	mov    %rdx,%rsi
    9cbb:	48 89 c7             	mov    %rax,%rdi
    9cbe:	e8 7d 0b 00 00       	call   a840 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    9cc3:	90                   	nop
    9cc4:	c9                   	leave
    9cc5:	c3                   	ret

0000000000009cc6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    9cc6:	55                   	push   %rbp
    9cc7:	48 89 e5             	mov    %rsp,%rbp
    9cca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9cd2:	90                   	nop
    9cd3:	5d                   	pop    %rbp
    9cd4:	c3                   	ret

0000000000009cd5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9cd5:	55                   	push   %rbp
    9cd6:	48 89 e5             	mov    %rsp,%rbp
    9cd9:	48 83 ec 20          	sub    $0x20,%rsp
    9cdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ce1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ce5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9ce9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ced:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9cf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf5:	48 89 ce             	mov    %rcx,%rsi
    9cf8:	48 89 c7             	mov    %rax,%rdi
    9cfb:	e8 50 0b 00 00       	call   a850 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    9d00:	90                   	nop
    9d01:	c9                   	leave
    9d02:	c3                   	ret

0000000000009d03 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9d03:	55                   	push   %rbp
    9d04:	48 89 e5             	mov    %rsp,%rbp
    9d07:	48 83 ec 20          	sub    $0x20,%rsp
    9d0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9d0f:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9d16:	ff ff 0f 
    9d19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9d1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d21:	48 89 c7             	mov    %rax,%rdi
    9d24:	e8 61 0b 00 00       	call   a88a <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    9d29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9d2d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9d31:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9d35:	48 89 d6             	mov    %rdx,%rsi
    9d38:	48 89 c7             	mov    %rax,%rdi
    9d3b:	e8 bd b5 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    9d40:	48 8b 00             	mov    (%rax),%rax
      }
    9d43:	c9                   	leave
    9d44:	c3                   	ret
    9d45:	90                   	nop

0000000000009d46 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9d46:	55                   	push   %rbp
    9d47:	48 89 e5             	mov    %rsp,%rbp
    9d4a:	48 83 ec 10          	sub    $0x10,%rsp
    9d4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9d56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d5e:	48 89 d6             	mov    %rdx,%rsi
    9d61:	48 89 c7             	mov    %rax,%rdi
    9d64:	e8 61 f1 ff ff       	call   8eca <_ZNSaIPKcEC1ERKS1_>
    9d69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6d:	48 89 c7             	mov    %rax,%rdi
    9d70:	e8 2f 0b 00 00       	call   a8a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9d75:	90                   	nop
    9d76:	c9                   	leave
    9d77:	c3                   	ret

0000000000009d78 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9d78:	55                   	push   %rbp
    9d79:	48 89 e5             	mov    %rsp,%rbp
    9d7c:	48 83 ec 10          	sub    $0x10,%rsp
    9d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9d88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d90:	48 89 d6             	mov    %rdx,%rsi
    9d93:	48 89 c7             	mov    %rax,%rdi
    9d96:	e8 37 0b 00 00       	call   a8d2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9d9b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d9f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9da6:	48 8b 10             	mov    (%rax),%rdx
    9da9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dad:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9db1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db5:	48 8b 00             	mov    (%rax),%rax
    9db8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9dbc:	48 c1 e2 03          	shl    $0x3,%rdx
    9dc0:	48 01 c2             	add    %rax,%rdx
    9dc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9dcb:	90                   	nop
    9dcc:	c9                   	leave
    9dcd:	c3                   	ret

0000000000009dce <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9dce:	55                   	push   %rbp
    9dcf:	48 89 e5             	mov    %rsp,%rbp
    9dd2:	48 83 ec 20          	sub    $0x20,%rsp
    9dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9de2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9de6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dea:	48 89 d6             	mov    %rdx,%rsi
    9ded:	48 89 c7             	mov    %rax,%rdi
    9df0:	e8 10 0b 00 00       	call   a905 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9df5:	c9                   	leave
    9df6:	c3                   	ret
    9df7:	90                   	nop

0000000000009df8 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    9df8:	55                   	push   %rbp
    9df9:	48 89 e5             	mov    %rsp,%rbp
    9dfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e04:	90                   	nop
    9e05:	5d                   	pop    %rbp
    9e06:	c3                   	ret

0000000000009e07 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9e07:	55                   	push   %rbp
    9e08:	48 89 e5             	mov    %rsp,%rbp
    9e0b:	48 83 ec 20          	sub    $0x20,%rsp
    9e0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9e1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e1f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e27:	48 89 ce             	mov    %rcx,%rsi
    9e2a:	48 89 c7             	mov    %rax,%rdi
    9e2d:	e8 fc 0a 00 00       	call   a92e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    9e32:	90                   	nop
    9e33:	c9                   	leave
    9e34:	c3                   	ret

0000000000009e35 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9e35:	55                   	push   %rbp
    9e36:	48 89 e5             	mov    %rsp,%rbp
    9e39:	48 83 ec 20          	sub    $0x20,%rsp
    9e3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9e41:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9e48:	ff ff 0f 
    9e4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9e4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e53:	48 89 c7             	mov    %rax,%rdi
    9e56:	e8 04 0b 00 00       	call   a95f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    9e5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9e5f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9e63:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9e67:	48 89 d6             	mov    %rdx,%rsi
    9e6a:	48 89 c7             	mov    %rax,%rdi
    9e6d:	e8 8b b4 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    9e72:	48 8b 00             	mov    (%rax),%rax
      }
    9e75:	c9                   	leave
    9e76:	c3                   	ret
    9e77:	90                   	nop

0000000000009e78 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9e78:	55                   	push   %rbp
    9e79:	48 89 e5             	mov    %rsp,%rbp
    9e7c:	48 83 ec 10          	sub    $0x10,%rsp
    9e80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9e88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e90:	48 89 d6             	mov    %rdx,%rsi
    9e93:	48 89 c7             	mov    %rax,%rdi
    9e96:	e8 eb f1 ff ff       	call   9086 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9e9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e9f:	48 89 c7             	mov    %rax,%rdi
    9ea2:	e8 d3 0a 00 00       	call   a97a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9ea7:	90                   	nop
    9ea8:	c9                   	leave
    9ea9:	c3                   	ret

0000000000009eaa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9eaa:	55                   	push   %rbp
    9eab:	48 89 e5             	mov    %rsp,%rbp
    9eae:	48 83 ec 10          	sub    $0x10,%rsp
    9eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9eba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ec2:	48 89 d6             	mov    %rdx,%rsi
    9ec5:	48 89 c7             	mov    %rax,%rdi
    9ec8:	e8 db 0a 00 00       	call   a9a8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    9ecd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9ed1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ed8:	48 8b 10             	mov    (%rax),%rdx
    9edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9edf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9ee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ee7:	48 8b 00             	mov    (%rax),%rax
    9eea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eee:	48 c1 e2 03          	shl    $0x3,%rdx
    9ef2:	48 01 c2             	add    %rax,%rdx
    9ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9efd:	90                   	nop
    9efe:	c9                   	leave
    9eff:	c3                   	ret

0000000000009f00 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9f00:	55                   	push   %rbp
    9f01:	48 89 e5             	mov    %rsp,%rbp
    9f04:	48 83 ec 20          	sub    $0x20,%rsp
    9f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9f14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f1c:	48 89 d6             	mov    %rdx,%rsi
    9f1f:	48 89 c7             	mov    %rax,%rdi
    9f22:	e8 b4 0a 00 00       	call   a9db <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    9f27:	c9                   	leave
    9f28:	c3                   	ret

0000000000009f29 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9f29:	55                   	push   %rbp
    9f2a:	48 89 e5             	mov    %rsp,%rbp
    9f2d:	48 83 ec 10          	sub    $0x10,%rsp
    9f31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9f39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f41:	48 89 d6             	mov    %rdx,%rsi
    9f44:	48 89 c7             	mov    %rax,%rdi
    9f47:	e8 b8 0a 00 00       	call   aa04 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    9f4c:	90                   	nop
    9f4d:	c9                   	leave
    9f4e:	c3                   	ret
    9f4f:	90                   	nop

0000000000009f50 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    9f50:	55                   	push   %rbp
    9f51:	48 89 e5             	mov    %rsp,%rbp
    9f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f5c:	90                   	nop
    9f5d:	5d                   	pop    %rbp
    9f5e:	c3                   	ret

0000000000009f5f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9f5f:	55                   	push   %rbp
    9f60:	48 89 e5             	mov    %rsp,%rbp
    9f63:	48 83 ec 20          	sub    $0x20,%rsp
    9f67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f6b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f6f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9f73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f77:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f7f:	48 89 ce             	mov    %rcx,%rsi
    9f82:	48 89 c7             	mov    %rax,%rdi
    9f85:	e8 8a 0a 00 00       	call   aa14 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    9f8a:	90                   	nop
    9f8b:	c9                   	leave
    9f8c:	c3                   	ret

0000000000009f8d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9f8d:	55                   	push   %rbp
    9f8e:	48 89 e5             	mov    %rsp,%rbp
    9f91:	48 83 ec 20          	sub    $0x20,%rsp
    9f95:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9f99:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    9fa0:	55 55 05 
    9fa3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9fa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fab:	48 89 c7             	mov    %rax,%rdi
    9fae:	e8 92 0a 00 00       	call   aa45 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    9fb3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9fb7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9fbb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9fbf:	48 89 d6             	mov    %rdx,%rsi
    9fc2:	48 89 c7             	mov    %rax,%rdi
    9fc5:	e8 33 b3 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    9fca:	48 8b 00             	mov    (%rax),%rax
      }
    9fcd:	c9                   	leave
    9fce:	c3                   	ret
    9fcf:	90                   	nop

0000000000009fd0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9fd0:	55                   	push   %rbp
    9fd1:	48 89 e5             	mov    %rsp,%rbp
    9fd4:	48 83 ec 10          	sub    $0x10,%rsp
    9fd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9fe0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fe8:	48 89 d6             	mov    %rdx,%rsi
    9feb:	48 89 c7             	mov    %rax,%rdi
    9fee:	e8 4f f2 ff ff       	call   9242 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    9ff3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ff7:	48 89 c7             	mov    %rax,%rdi
    9ffa:	e8 61 0a 00 00       	call   aa60 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9fff:	90                   	nop
    a000:	c9                   	leave
    a001:	c3                   	ret

000000000000a002 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a002:	55                   	push   %rbp
    a003:	48 89 e5             	mov    %rsp,%rbp
    a006:	48 83 ec 10          	sub    $0x10,%rsp
    a00a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a00e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a012:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a01a:	48 89 d6             	mov    %rdx,%rsi
    a01d:	48 89 c7             	mov    %rax,%rdi
    a020:	e8 69 0a 00 00       	call   aa8e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    a025:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a029:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a02c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a030:	48 8b 10             	mov    (%rax),%rdx
    a033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a037:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a03b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a03f:	48 8b 08             	mov    (%rax),%rcx
    a042:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a046:	48 89 d0             	mov    %rdx,%rax
    a049:	48 01 c0             	add    %rax,%rax
    a04c:	48 01 d0             	add    %rdx,%rax
    a04f:	48 c1 e0 03          	shl    $0x3,%rax
    a053:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a05b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a05f:	90                   	nop
    a060:	c9                   	leave
    a061:	c3                   	ret

000000000000a062 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a062:	55                   	push   %rbp
    a063:	48 89 e5             	mov    %rsp,%rbp
    a066:	48 83 ec 20          	sub    $0x20,%rsp
    a06a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a06e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a072:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a076:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a07a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a07e:	48 89 d6             	mov    %rdx,%rsi
    a081:	48 89 c7             	mov    %rax,%rdi
    a084:	e8 38 0a 00 00       	call   aac1 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a089:	c9                   	leave
    a08a:	c3                   	ret

000000000000a08b <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a08b:	55                   	push   %rbp
    a08c:	48 89 e5             	mov    %rsp,%rbp
    a08f:	48 83 ec 10          	sub    $0x10,%rsp
    a093:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a097:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a09b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a09f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a3:	48 89 d6             	mov    %rdx,%rsi
    a0a6:	48 89 c7             	mov    %rax,%rdi
    a0a9:	e8 3c 0a 00 00       	call   aaea <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a0ae:	90                   	nop
    a0af:	c9                   	leave
    a0b0:	c3                   	ret
    a0b1:	90                   	nop

000000000000a0b2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a0b2:	55                   	push   %rbp
    a0b3:	48 89 e5             	mov    %rsp,%rbp
    a0b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0be:	90                   	nop
    a0bf:	5d                   	pop    %rbp
    a0c0:	c3                   	ret

000000000000a0c1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a0c1:	55                   	push   %rbp
    a0c2:	48 89 e5             	mov    %rsp,%rbp
    a0c5:	48 83 ec 20          	sub    $0x20,%rsp
    a0c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a0d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a0d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a0dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e1:	48 89 ce             	mov    %rcx,%rsi
    a0e4:	48 89 c7             	mov    %rax,%rdi
    a0e7:	e8 0e 0a 00 00       	call   aafa <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a0ec:	90                   	nop
    a0ed:	c9                   	leave
    a0ee:	c3                   	ret

000000000000a0ef <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a0ef:	55                   	push   %rbp
    a0f0:	48 89 e5             	mov    %rsp,%rbp
    a0f3:	48 83 ec 20          	sub    $0x20,%rsp
    a0f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a0fb:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a102:	49 92 04 
    a105:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a109:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a10d:	48 89 c7             	mov    %rax,%rdi
    a110:	e8 1e 0a 00 00       	call   ab33 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a115:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a119:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a11d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a121:	48 89 d6             	mov    %rdx,%rsi
    a124:	48 89 c7             	mov    %rax,%rdi
    a127:	e8 d1 b1 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    a12c:	48 8b 00             	mov    (%rax),%rax
      }
    a12f:	c9                   	leave
    a130:	c3                   	ret
    a131:	90                   	nop

000000000000a132 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a132:	55                   	push   %rbp
    a133:	48 89 e5             	mov    %rsp,%rbp
    a136:	48 83 ec 10          	sub    $0x10,%rsp
    a13a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a13e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a142:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a14a:	48 89 d6             	mov    %rdx,%rsi
    a14d:	48 89 c7             	mov    %rax,%rdi
    a150:	e8 5b f3 ff ff       	call   94b0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a159:	48 89 c7             	mov    %rax,%rdi
    a15c:	e8 ed 09 00 00       	call   ab4e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a161:	90                   	nop
    a162:	c9                   	leave
    a163:	c3                   	ret

000000000000a164 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a164:	55                   	push   %rbp
    a165:	48 89 e5             	mov    %rsp,%rbp
    a168:	48 83 ec 10          	sub    $0x10,%rsp
    a16c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a170:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a174:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a17c:	48 89 d6             	mov    %rdx,%rsi
    a17f:	48 89 c7             	mov    %rax,%rdi
    a182:	e8 f5 09 00 00       	call   ab7c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a187:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a18b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a192:	48 8b 10             	mov    (%rax),%rdx
    a195:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a199:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a19d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a1:	48 8b 08             	mov    (%rax),%rcx
    a1a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1a8:	48 89 d0             	mov    %rdx,%rax
    a1ab:	48 c1 e0 03          	shl    $0x3,%rax
    a1af:	48 29 d0             	sub    %rdx,%rax
    a1b2:	48 c1 e0 02          	shl    $0x2,%rax
    a1b6:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a1ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1be:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a1c2:	90                   	nop
    a1c3:	c9                   	leave
    a1c4:	c3                   	ret

000000000000a1c5 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a1c5:	55                   	push   %rbp
    a1c6:	48 89 e5             	mov    %rsp,%rbp
    a1c9:	48 83 ec 20          	sub    $0x20,%rsp
    a1cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a1d9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1e1:	48 89 d6             	mov    %rdx,%rsi
    a1e4:	48 89 c7             	mov    %rax,%rdi
    a1e7:	e8 c3 09 00 00       	call   abaf <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a1ec:	c9                   	leave
    a1ed:	c3                   	ret

000000000000a1ee <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a1ee:	55                   	push   %rbp
    a1ef:	48 89 e5             	mov    %rsp,%rbp
    a1f2:	48 83 ec 10          	sub    $0x10,%rsp
    a1f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a1fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a206:	48 89 d6             	mov    %rdx,%rsi
    a209:	48 89 c7             	mov    %rax,%rdi
    a20c:	e8 c7 09 00 00       	call   abd8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a211:	90                   	nop
    a212:	c9                   	leave
    a213:	c3                   	ret

000000000000a214 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a214:	55                   	push   %rbp
    a215:	48 89 e5             	mov    %rsp,%rbp
    a218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a21c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a220:	5d                   	pop    %rbp
    a221:	c3                   	ret

000000000000a222 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a222:	55                   	push   %rbp
    a223:	48 89 e5             	mov    %rsp,%rbp
    a226:	53                   	push   %rbx
    a227:	48 83 ec 18          	sub    $0x18,%rsp
    a22b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a22f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a233:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a237:	48 89 c7             	mov    %rax,%rdi
    a23a:	e8 2f f2 ff ff       	call   946e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a23f:	48 89 c3             	mov    %rax,%rbx
    a242:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a246:	48 89 c7             	mov    %rax,%rdi
    a249:	e8 99 09 00 00       	call   abe7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a24e:	48 89 de             	mov    %rbx,%rsi
    a251:	48 89 c7             	mov    %rax,%rdi
    a254:	e8 9c 09 00 00       	call   abf5 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a25d:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a261:	90                   	nop
    a262:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a266:	c9                   	leave
    a267:	c3                   	ret

000000000000a268 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a268:	55                   	push   %rbp
    a269:	48 89 e5             	mov    %rsp,%rbp
    a26c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a270:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a274:	90                   	nop
    a275:	5d                   	pop    %rbp
    a276:	c3                   	ret

000000000000a277 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a277:	55                   	push   %rbp
    a278:	48 89 e5             	mov    %rsp,%rbp
    a27b:	48 83 ec 20          	sub    $0x20,%rsp
    a27f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a283:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a287:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a28b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a28f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a297:	48 89 ce             	mov    %rcx,%rsi
    a29a:	48 89 c7             	mov    %rax,%rdi
    a29d:	e8 a4 09 00 00       	call   ac46 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a2a2:	90                   	nop
    a2a3:	c9                   	leave
    a2a4:	c3                   	ret

000000000000a2a5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a2a5:	55                   	push   %rbp
    a2a6:	48 89 e5             	mov    %rsp,%rbp
    a2a9:	48 83 ec 20          	sub    $0x20,%rsp
    a2ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a2b1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a2b8:	ff ff 0f 
    a2bb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a2bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2c3:	48 89 c7             	mov    %rax,%rdi
    a2c6:	e8 b5 09 00 00       	call   ac80 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a2cb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a2cf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a2d3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a2d7:	48 89 d6             	mov    %rdx,%rsi
    a2da:	48 89 c7             	mov    %rax,%rdi
    a2dd:	e8 1b b0 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    a2e2:	48 8b 00             	mov    (%rax),%rax
      }
    a2e5:	c9                   	leave
    a2e6:	c3                   	ret
    a2e7:	90                   	nop

000000000000a2e8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a2e8:	55                   	push   %rbp
    a2e9:	48 89 e5             	mov    %rsp,%rbp
    a2ec:	48 83 ec 10          	sub    $0x10,%rsp
    a2f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a2f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a300:	48 89 d6             	mov    %rdx,%rsi
    a303:	48 89 c7             	mov    %rax,%rdi
    a306:	e8 61 f3 ff ff       	call   966c <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a30b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a30f:	48 89 c7             	mov    %rax,%rdi
    a312:	e8 83 09 00 00       	call   ac9a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a317:	90                   	nop
    a318:	c9                   	leave
    a319:	c3                   	ret

000000000000a31a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a31a:	55                   	push   %rbp
    a31b:	48 89 e5             	mov    %rsp,%rbp
    a31e:	48 83 ec 10          	sub    $0x10,%rsp
    a322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a326:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a32a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a32e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a332:	48 89 d6             	mov    %rdx,%rsi
    a335:	48 89 c7             	mov    %rax,%rdi
    a338:	e8 8b 09 00 00       	call   acc8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a33d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a341:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a344:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a348:	48 8b 10             	mov    (%rax),%rdx
    a34b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a34f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a357:	48 8b 00             	mov    (%rax),%rax
    a35a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a35e:	48 c1 e2 03          	shl    $0x3,%rdx
    a362:	48 01 c2             	add    %rax,%rdx
    a365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a369:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a36d:	90                   	nop
    a36e:	c9                   	leave
    a36f:	c3                   	ret

000000000000a370 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a370:	55                   	push   %rbp
    a371:	48 89 e5             	mov    %rsp,%rbp
    a374:	48 83 ec 20          	sub    $0x20,%rsp
    a378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a37c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a380:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a384:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a388:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a38c:	48 89 d6             	mov    %rdx,%rsi
    a38f:	48 89 c7             	mov    %rax,%rdi
    a392:	e8 64 09 00 00       	call   acfb <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a397:	c9                   	leave
    a398:	c3                   	ret

000000000000a399 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a399:	55                   	push   %rbp
    a39a:	48 89 e5             	mov    %rsp,%rbp
    a39d:	48 83 ec 10          	sub    $0x10,%rsp
    a3a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a3a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3b1:	48 89 d6             	mov    %rdx,%rsi
    a3b4:	48 89 c7             	mov    %rax,%rdi
    a3b7:	e8 68 09 00 00       	call   ad24 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a3bc:	90                   	nop
    a3bd:	c9                   	leave
    a3be:	c3                   	ret
    a3bf:	90                   	nop

000000000000a3c0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a3c0:	55                   	push   %rbp
    a3c1:	48 89 e5             	mov    %rsp,%rbp
    a3c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3cc:	90                   	nop
    a3cd:	5d                   	pop    %rbp
    a3ce:	c3                   	ret

000000000000a3cf <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a3cf:	55                   	push   %rbp
    a3d0:	48 89 e5             	mov    %rsp,%rbp
    a3d3:	48 83 ec 20          	sub    $0x20,%rsp
    a3d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a3e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ef:	48 89 ce             	mov    %rcx,%rsi
    a3f2:	48 89 c7             	mov    %rax,%rdi
    a3f5:	e8 3a 09 00 00       	call   ad34 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a3fa:	90                   	nop
    a3fb:	c9                   	leave
    a3fc:	c3                   	ret

000000000000a3fd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a3fd:	55                   	push   %rbp
    a3fe:	48 89 e5             	mov    %rsp,%rbp
    a401:	48 83 ec 20          	sub    $0x20,%rsp
    a405:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a409:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a410:	ff ff 1f 
    a413:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a417:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a41b:	48 89 c7             	mov    %rax,%rdi
    a41e:	e8 42 09 00 00       	call   ad65 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a423:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a427:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a42b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a42f:	48 89 d6             	mov    %rdx,%rsi
    a432:	48 89 c7             	mov    %rax,%rdi
    a435:	e8 c3 ae ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    a43a:	48 8b 00             	mov    (%rax),%rax
      }
    a43d:	c9                   	leave
    a43e:	c3                   	ret
    a43f:	90                   	nop

000000000000a440 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a440:	55                   	push   %rbp
    a441:	48 89 e5             	mov    %rsp,%rbp
    a444:	48 83 ec 10          	sub    $0x10,%rsp
    a448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a44c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a450:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a458:	48 89 d6             	mov    %rdx,%rsi
    a45b:	48 89 c7             	mov    %rax,%rdi
    a45e:	e8 c5 f3 ff ff       	call   9828 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a467:	48 89 c7             	mov    %rax,%rdi
    a46a:	e8 11 09 00 00       	call   ad80 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a46f:	90                   	nop
    a470:	c9                   	leave
    a471:	c3                   	ret

000000000000a472 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a472:	55                   	push   %rbp
    a473:	48 89 e5             	mov    %rsp,%rbp
    a476:	48 83 ec 10          	sub    $0x10,%rsp
    a47a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a47e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a482:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a48a:	48 89 d6             	mov    %rdx,%rsi
    a48d:	48 89 c7             	mov    %rax,%rdi
    a490:	e8 19 09 00 00       	call   adae <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a495:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a499:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a49c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a0:	48 8b 10             	mov    (%rax),%rdx
    a4a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a4ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4af:	48 8b 00             	mov    (%rax),%rax
    a4b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4b6:	48 c1 e2 02          	shl    $0x2,%rdx
    a4ba:	48 01 c2             	add    %rax,%rdx
    a4bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4c1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a4c5:	90                   	nop
    a4c6:	c9                   	leave
    a4c7:	c3                   	ret

000000000000a4c8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a4c8:	55                   	push   %rbp
    a4c9:	48 89 e5             	mov    %rsp,%rbp
    a4cc:	48 83 ec 20          	sub    $0x20,%rsp
    a4d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a4dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4e4:	48 89 d6             	mov    %rdx,%rsi
    a4e7:	48 89 c7             	mov    %rax,%rdi
    a4ea:	e8 f2 08 00 00       	call   ade1 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a4ef:	c9                   	leave
    a4f0:	c3                   	ret

000000000000a4f1 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a4f1:	55                   	push   %rbp
    a4f2:	48 89 e5             	mov    %rsp,%rbp
    a4f5:	48 83 ec 10          	sub    $0x10,%rsp
    a4f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a501:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a509:	48 89 d6             	mov    %rdx,%rsi
    a50c:	48 89 c7             	mov    %rax,%rdi
    a50f:	e8 f6 08 00 00       	call   ae0a <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a514:	90                   	nop
    a515:	c9                   	leave
    a516:	c3                   	ret
    a517:	90                   	nop

000000000000a518 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a518:	55                   	push   %rbp
    a519:	48 89 e5             	mov    %rsp,%rbp
    a51c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a520:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a524:	90                   	nop
    a525:	5d                   	pop    %rbp
    a526:	c3                   	ret

000000000000a527 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a527:	55                   	push   %rbp
    a528:	48 89 e5             	mov    %rsp,%rbp
    a52b:	48 83 ec 20          	sub    $0x20,%rsp
    a52f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a533:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a537:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a53b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a53f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a547:	48 89 ce             	mov    %rcx,%rsi
    a54a:	48 89 c7             	mov    %rax,%rdi
    a54d:	e8 c8 08 00 00       	call   ae1a <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a552:	90                   	nop
    a553:	c9                   	leave
    a554:	c3                   	ret

000000000000a555 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a555:	55                   	push   %rbp
    a556:	48 89 e5             	mov    %rsp,%rbp
    a559:	48 83 ec 20          	sub    $0x20,%rsp
    a55d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a561:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a568:	ff ff 0f 
    a56b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a56f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a573:	48 89 c7             	mov    %rax,%rdi
    a576:	e8 d0 08 00 00       	call   ae4b <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a57b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a57f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a583:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a587:	48 89 d6             	mov    %rdx,%rsi
    a58a:	48 89 c7             	mov    %rax,%rdi
    a58d:	e8 6b ad ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    a592:	48 8b 00             	mov    (%rax),%rax
      }
    a595:	c9                   	leave
    a596:	c3                   	ret
    a597:	90                   	nop

000000000000a598 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a598:	55                   	push   %rbp
    a599:	48 89 e5             	mov    %rsp,%rbp
    a59c:	48 83 ec 10          	sub    $0x10,%rsp
    a5a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a5a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b0:	48 89 d6             	mov    %rdx,%rsi
    a5b3:	48 89 c7             	mov    %rax,%rdi
    a5b6:	e8 29 f4 ff ff       	call   99e4 <_ZNSaIP9VkImage_TEC1ERKS1_>
    a5bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5bf:	48 89 c7             	mov    %rax,%rdi
    a5c2:	e8 9f 08 00 00       	call   ae66 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a5c7:	90                   	nop
    a5c8:	c9                   	leave
    a5c9:	c3                   	ret

000000000000a5ca <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a5ca:	55                   	push   %rbp
    a5cb:	48 89 e5             	mov    %rsp,%rbp
    a5ce:	48 83 ec 10          	sub    $0x10,%rsp
    a5d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a5da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5e2:	48 89 d6             	mov    %rdx,%rsi
    a5e5:	48 89 c7             	mov    %rax,%rdi
    a5e8:	e8 a7 08 00 00       	call   ae94 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a5ed:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a5f1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a5f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f8:	48 8b 10             	mov    (%rax),%rdx
    a5fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ff:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a607:	48 8b 00             	mov    (%rax),%rax
    a60a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a60e:	48 c1 e2 03          	shl    $0x3,%rdx
    a612:	48 01 c2             	add    %rax,%rdx
    a615:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a619:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a61d:	90                   	nop
    a61e:	c9                   	leave
    a61f:	c3                   	ret

000000000000a620 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a620:	55                   	push   %rbp
    a621:	48 89 e5             	mov    %rsp,%rbp
    a624:	48 83 ec 20          	sub    $0x20,%rsp
    a628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a62c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a630:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a634:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a638:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63c:	48 89 d6             	mov    %rdx,%rsi
    a63f:	48 89 c7             	mov    %rax,%rdi
    a642:	e8 80 08 00 00       	call   aec7 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    a647:	c9                   	leave
    a648:	c3                   	ret

000000000000a649 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a649:	55                   	push   %rbp
    a64a:	48 89 e5             	mov    %rsp,%rbp
    a64d:	48 83 ec 10          	sub    $0x10,%rsp
    a651:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a655:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a659:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a65d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a661:	48 89 d6             	mov    %rdx,%rsi
    a664:	48 89 c7             	mov    %rax,%rdi
    a667:	e8 84 08 00 00       	call   aef0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    a66c:	90                   	nop
    a66d:	c9                   	leave
    a66e:	c3                   	ret
    a66f:	90                   	nop

000000000000a670 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    a670:	55                   	push   %rbp
    a671:	48 89 e5             	mov    %rsp,%rbp
    a674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a678:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a67c:	90                   	nop
    a67d:	5d                   	pop    %rbp
    a67e:	c3                   	ret

000000000000a67f <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a67f:	55                   	push   %rbp
    a680:	48 89 e5             	mov    %rsp,%rbp
    a683:	48 83 ec 20          	sub    $0x20,%rsp
    a687:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a68b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a68f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a693:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a697:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a69b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a69f:	48 89 ce             	mov    %rcx,%rsi
    a6a2:	48 89 c7             	mov    %rax,%rdi
    a6a5:	e8 56 08 00 00       	call   af00 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    a6aa:	90                   	nop
    a6ab:	c9                   	leave
    a6ac:	c3                   	ret

000000000000a6ad <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a6ad:	55                   	push   %rbp
    a6ae:	48 89 e5             	mov    %rsp,%rbp
    a6b1:	48 83 ec 10          	sub    $0x10,%rsp
    a6b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a6b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6bd:	48 89 c7             	mov    %rax,%rdi
    a6c0:	e8 6d 08 00 00       	call   af32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    a6c5:	c9                   	leave
    a6c6:	c3                   	ret
    a6c7:	90                   	nop

000000000000a6c8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a6c8:	55                   	push   %rbp
    a6c9:	48 89 e5             	mov    %rsp,%rbp
    a6cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a6d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a6db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6df:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a6e6:	00 
    a6e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6eb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a6f2:	00 
	{ }
    a6f3:	90                   	nop
    a6f4:	5d                   	pop    %rbp
    a6f5:	c3                   	ret

000000000000a6f6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a6f6:	55                   	push   %rbp
    a6f7:	48 89 e5             	mov    %rsp,%rbp
    a6fa:	48 83 ec 10          	sub    $0x10,%rsp
    a6fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a702:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a706:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a70b:	74 15                	je     a722 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a70d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a711:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a715:	48 89 d6             	mov    %rdx,%rsi
    a718:	48 89 c7             	mov    %rax,%rdi
    a71b:	e8 2c 08 00 00       	call   af4c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    a720:	eb 05                	jmp    a727 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a722:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a727:	c9                   	leave
    a728:	c3                   	ret

000000000000a729 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a729:	55                   	push   %rbp
    a72a:	48 89 e5             	mov    %rsp,%rbp
    a72d:	48 83 ec 20          	sub    $0x20,%rsp
    a731:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a735:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a739:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a73d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a741:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a745:	48 89 d6             	mov    %rdx,%rsi
    a748:	48 89 c7             	mov    %rax,%rdi
    a74b:	e8 26 08 00 00       	call   af76 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    a750:	c9                   	leave
    a751:	c3                   	ret

000000000000a752 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    a752:	55                   	push   %rbp
    a753:	48 89 e5             	mov    %rsp,%rbp
    a756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a75a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a75e:	90                   	nop
    a75f:	5d                   	pop    %rbp
    a760:	c3                   	ret
    a761:	90                   	nop

000000000000a762 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a762:	55                   	push   %rbp
    a763:	48 89 e5             	mov    %rsp,%rbp
    a766:	48 83 ec 20          	sub    $0x20,%rsp
    a76a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a76e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a772:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a776:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a77a:	48 89 d0             	mov    %rdx,%rax
    a77d:	48 c1 e0 06          	shl    $0x6,%rax
    a781:	48 01 d0             	add    %rdx,%rax
    a784:	48 c1 e0 03          	shl    $0x3,%rax
    a788:	48 89 c2             	mov    %rax,%rdx
    a78b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a78f:	48 89 d6             	mov    %rdx,%rsi
    a792:	48 89 c7             	mov    %rax,%rdi
    a795:	e8 e6 9b ff ff       	call   4380 <_ZdlPvm@plt>
      }
    a79a:	c9                   	leave
    a79b:	c3                   	ret

000000000000a79c <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a79c:	55                   	push   %rbp
    a79d:	48 89 e5             	mov    %rsp,%rbp
    a7a0:	48 83 ec 10          	sub    $0x10,%rsp
    a7a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a7a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ac:	48 89 c7             	mov    %rax,%rdi
    a7af:	e8 22 08 00 00       	call   afd6 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    a7b4:	c9                   	leave
    a7b5:	c3                   	ret

000000000000a7b6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a7b6:	55                   	push   %rbp
    a7b7:	48 89 e5             	mov    %rsp,%rbp
    a7ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a7be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a7c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7cd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a7d4:	00 
    a7d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a7e0:	00 
	{ }
    a7e1:	90                   	nop
    a7e2:	5d                   	pop    %rbp
    a7e3:	c3                   	ret

000000000000a7e4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a7e4:	55                   	push   %rbp
    a7e5:	48 89 e5             	mov    %rsp,%rbp
    a7e8:	48 83 ec 10          	sub    $0x10,%rsp
    a7ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a7f4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a7f9:	74 15                	je     a810 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a7fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a803:	48 89 d6             	mov    %rdx,%rsi
    a806:	48 89 c7             	mov    %rax,%rdi
    a809:	e8 e2 07 00 00       	call   aff0 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    a80e:	eb 05                	jmp    a815 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a810:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a815:	c9                   	leave
    a816:	c3                   	ret

000000000000a817 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a817:	55                   	push   %rbp
    a818:	48 89 e5             	mov    %rsp,%rbp
    a81b:	48 83 ec 20          	sub    $0x20,%rsp
    a81f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a823:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a827:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a82b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a82f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a833:	48 89 d6             	mov    %rdx,%rsi
    a836:	48 89 c7             	mov    %rax,%rdi
    a839:	e8 dc 07 00 00       	call   b01a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    a83e:	c9                   	leave
    a83f:	c3                   	ret

000000000000a840 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    a840:	55                   	push   %rbp
    a841:	48 89 e5             	mov    %rsp,%rbp
    a844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a848:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a84c:	90                   	nop
    a84d:	5d                   	pop    %rbp
    a84e:	c3                   	ret
    a84f:	90                   	nop

000000000000a850 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a850:	55                   	push   %rbp
    a851:	48 89 e5             	mov    %rsp,%rbp
    a854:	48 83 ec 20          	sub    $0x20,%rsp
    a858:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a85c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a860:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a864:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a868:	48 89 d0             	mov    %rdx,%rax
    a86b:	48 c1 e0 06          	shl    $0x6,%rax
    a86f:	48 01 d0             	add    %rdx,%rax
    a872:	48 c1 e0 02          	shl    $0x2,%rax
    a876:	48 89 c2             	mov    %rax,%rdx
    a879:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a87d:	48 89 d6             	mov    %rdx,%rsi
    a880:	48 89 c7             	mov    %rax,%rdi
    a883:	e8 f8 9a ff ff       	call   4380 <_ZdlPvm@plt>
      }
    a888:	c9                   	leave
    a889:	c3                   	ret

000000000000a88a <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a88a:	55                   	push   %rbp
    a88b:	48 89 e5             	mov    %rsp,%rbp
    a88e:	48 83 ec 10          	sub    $0x10,%rsp
    a892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a89a:	48 89 c7             	mov    %rax,%rdi
    a89d:	e8 d8 07 00 00       	call   b07a <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    a8a2:	c9                   	leave
    a8a3:	c3                   	ret

000000000000a8a4 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a8a4:	55                   	push   %rbp
    a8a5:	48 89 e5             	mov    %rsp,%rbp
    a8a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a8ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a8b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8bb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a8c2:	00 
    a8c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a8ce:	00 
	{ }
    a8cf:	90                   	nop
    a8d0:	5d                   	pop    %rbp
    a8d1:	c3                   	ret

000000000000a8d2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a8d2:	55                   	push   %rbp
    a8d3:	48 89 e5             	mov    %rsp,%rbp
    a8d6:	48 83 ec 10          	sub    $0x10,%rsp
    a8da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a8e2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a8e7:	74 15                	je     a8fe <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    a8e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8f1:	48 89 d6             	mov    %rdx,%rsi
    a8f4:	48 89 c7             	mov    %rax,%rdi
    a8f7:	e8 98 07 00 00       	call   b094 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    a8fc:	eb 05                	jmp    a903 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    a8fe:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a903:	c9                   	leave
    a904:	c3                   	ret

000000000000a905 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a905:	55                   	push   %rbp
    a906:	48 89 e5             	mov    %rsp,%rbp
    a909:	48 83 ec 20          	sub    $0x20,%rsp
    a90d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a911:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a915:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a919:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a91d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a921:	48 89 d6             	mov    %rdx,%rsi
    a924:	48 89 c7             	mov    %rax,%rdi
    a927:	e8 92 07 00 00       	call   b0be <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    a92c:	c9                   	leave
    a92d:	c3                   	ret

000000000000a92e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a92e:	55                   	push   %rbp
    a92f:	48 89 e5             	mov    %rsp,%rbp
    a932:	48 83 ec 20          	sub    $0x20,%rsp
    a936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a93a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a93e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a942:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a946:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a94d:	00 
    a94e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a952:	48 89 d6             	mov    %rdx,%rsi
    a955:	48 89 c7             	mov    %rax,%rdi
    a958:	e8 23 9a ff ff       	call   4380 <_ZdlPvm@plt>
      }
    a95d:	c9                   	leave
    a95e:	c3                   	ret

000000000000a95f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a95f:	55                   	push   %rbp
    a960:	48 89 e5             	mov    %rsp,%rbp
    a963:	48 83 ec 10          	sub    $0x10,%rsp
    a967:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a96b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a96f:	48 89 c7             	mov    %rax,%rdi
    a972:	e8 a5 07 00 00       	call   b11c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    a977:	c9                   	leave
    a978:	c3                   	ret
    a979:	90                   	nop

000000000000a97a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a97a:	55                   	push   %rbp
    a97b:	48 89 e5             	mov    %rsp,%rbp
    a97e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a986:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a98d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a991:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a998:	00 
    a999:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a99d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a9a4:	00 
	{ }
    a9a5:	90                   	nop
    a9a6:	5d                   	pop    %rbp
    a9a7:	c3                   	ret

000000000000a9a8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a9a8:	55                   	push   %rbp
    a9a9:	48 89 e5             	mov    %rsp,%rbp
    a9ac:	48 83 ec 10          	sub    $0x10,%rsp
    a9b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a9b8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a9bd:	74 15                	je     a9d4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    a9bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9c7:	48 89 d6             	mov    %rdx,%rsi
    a9ca:	48 89 c7             	mov    %rax,%rdi
    a9cd:	e8 64 07 00 00       	call   b136 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    a9d2:	eb 05                	jmp    a9d9 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    a9d4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a9d9:	c9                   	leave
    a9da:	c3                   	ret

000000000000a9db <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a9db:	55                   	push   %rbp
    a9dc:	48 89 e5             	mov    %rsp,%rbp
    a9df:	48 83 ec 20          	sub    $0x20,%rsp
    a9e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a9e7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a9eb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a9ef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a9f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9f7:	48 89 d6             	mov    %rdx,%rsi
    a9fa:	48 89 c7             	mov    %rax,%rdi
    a9fd:	e8 5e 07 00 00       	call   b160 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    aa02:	c9                   	leave
    aa03:	c3                   	ret

000000000000aa04 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    aa04:	55                   	push   %rbp
    aa05:	48 89 e5             	mov    %rsp,%rbp
    aa08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa10:	90                   	nop
    aa11:	5d                   	pop    %rbp
    aa12:	c3                   	ret
    aa13:	90                   	nop

000000000000aa14 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aa14:	55                   	push   %rbp
    aa15:	48 89 e5             	mov    %rsp,%rbp
    aa18:	48 83 ec 20          	sub    $0x20,%rsp
    aa1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aa28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa2c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aa33:	00 
    aa34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa38:	48 89 d6             	mov    %rdx,%rsi
    aa3b:	48 89 c7             	mov    %rax,%rdi
    aa3e:	e8 3d 99 ff ff       	call   4380 <_ZdlPvm@plt>
      }
    aa43:	c9                   	leave
    aa44:	c3                   	ret

000000000000aa45 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aa45:	55                   	push   %rbp
    aa46:	48 89 e5             	mov    %rsp,%rbp
    aa49:	48 83 ec 10          	sub    $0x10,%rsp
    aa4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aa51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa55:	48 89 c7             	mov    %rax,%rdi
    aa58:	e8 61 07 00 00       	call   b1be <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    aa5d:	c9                   	leave
    aa5e:	c3                   	ret
    aa5f:	90                   	nop

000000000000aa60 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aa60:	55                   	push   %rbp
    aa61:	48 89 e5             	mov    %rsp,%rbp
    aa64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aa68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa6c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aa73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa77:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aa7e:	00 
    aa7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa83:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aa8a:	00 
	{ }
    aa8b:	90                   	nop
    aa8c:	5d                   	pop    %rbp
    aa8d:	c3                   	ret

000000000000aa8e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aa8e:	55                   	push   %rbp
    aa8f:	48 89 e5             	mov    %rsp,%rbp
    aa92:	48 83 ec 10          	sub    $0x10,%rsp
    aa96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aa9e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aaa3:	74 15                	je     aaba <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    aaa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaa9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aaad:	48 89 d6             	mov    %rdx,%rsi
    aab0:	48 89 c7             	mov    %rax,%rdi
    aab3:	e8 20 07 00 00       	call   b1d8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    aab8:	eb 05                	jmp    aabf <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    aaba:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aabf:	c9                   	leave
    aac0:	c3                   	ret

000000000000aac1 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aac1:	55                   	push   %rbp
    aac2:	48 89 e5             	mov    %rsp,%rbp
    aac5:	48 83 ec 20          	sub    $0x20,%rsp
    aac9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aacd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aad1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aad5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aad9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aadd:	48 89 d6             	mov    %rdx,%rsi
    aae0:	48 89 c7             	mov    %rax,%rdi
    aae3:	e8 1a 07 00 00       	call   b202 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    aae8:	c9                   	leave
    aae9:	c3                   	ret

000000000000aaea <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    aaea:	55                   	push   %rbp
    aaeb:	48 89 e5             	mov    %rsp,%rbp
    aaee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aaf6:	90                   	nop
    aaf7:	5d                   	pop    %rbp
    aaf8:	c3                   	ret
    aaf9:	90                   	nop

000000000000aafa <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aafa:	55                   	push   %rbp
    aafb:	48 89 e5             	mov    %rsp,%rbp
    aafe:	48 83 ec 20          	sub    $0x20,%rsp
    ab02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ab0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab12:	48 89 d0             	mov    %rdx,%rax
    ab15:	48 01 c0             	add    %rax,%rax
    ab18:	48 01 d0             	add    %rdx,%rax
    ab1b:	48 c1 e0 03          	shl    $0x3,%rax
    ab1f:	48 89 c2             	mov    %rax,%rdx
    ab22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab26:	48 89 d6             	mov    %rdx,%rsi
    ab29:	48 89 c7             	mov    %rax,%rdi
    ab2c:	e8 4f 98 ff ff       	call   4380 <_ZdlPvm@plt>
      }
    ab31:	c9                   	leave
    ab32:	c3                   	ret

000000000000ab33 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ab33:	55                   	push   %rbp
    ab34:	48 89 e5             	mov    %rsp,%rbp
    ab37:	48 83 ec 10          	sub    $0x10,%rsp
    ab3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ab3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab43:	48 89 c7             	mov    %rax,%rdi
    ab46:	e8 15 07 00 00       	call   b260 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    ab4b:	c9                   	leave
    ab4c:	c3                   	ret
    ab4d:	90                   	nop

000000000000ab4e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ab4e:	55                   	push   %rbp
    ab4f:	48 89 e5             	mov    %rsp,%rbp
    ab52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ab56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab5a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ab61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab65:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab6c:	00 
    ab6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab71:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab78:	00 
	{ }
    ab79:	90                   	nop
    ab7a:	5d                   	pop    %rbp
    ab7b:	c3                   	ret

000000000000ab7c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab7c:	55                   	push   %rbp
    ab7d:	48 89 e5             	mov    %rsp,%rbp
    ab80:	48 83 ec 10          	sub    $0x10,%rsp
    ab84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab8c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab91:	74 15                	je     aba8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    ab93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab97:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab9b:	48 89 d6             	mov    %rdx,%rsi
    ab9e:	48 89 c7             	mov    %rax,%rdi
    aba1:	e8 d4 06 00 00       	call   b27a <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    aba6:	eb 05                	jmp    abad <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    aba8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    abad:	c9                   	leave
    abae:	c3                   	ret

000000000000abaf <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    abaf:	55                   	push   %rbp
    abb0:	48 89 e5             	mov    %rsp,%rbp
    abb3:	48 83 ec 20          	sub    $0x20,%rsp
    abb7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abbb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    abbf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    abc3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    abc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abcb:	48 89 d6             	mov    %rdx,%rsi
    abce:	48 89 c7             	mov    %rax,%rdi
    abd1:	e8 ce 06 00 00       	call   b2a4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    abd6:	c9                   	leave
    abd7:	c3                   	ret

000000000000abd8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    abd8:	55                   	push   %rbp
    abd9:	48 89 e5             	mov    %rsp,%rbp
    abdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abe0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abe4:	90                   	nop
    abe5:	5d                   	pop    %rbp
    abe6:	c3                   	ret

000000000000abe7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    abe7:	55                   	push   %rbp
    abe8:	48 89 e5             	mov    %rsp,%rbp
    abeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    abef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abf3:	5d                   	pop    %rbp
    abf4:	c3                   	ret

000000000000abf5 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    abf5:	55                   	push   %rbp
    abf6:	48 89 e5             	mov    %rsp,%rbp
    abf9:	53                   	push   %rbx
    abfa:	48 83 ec 18          	sub    $0x18,%rsp
    abfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ac06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac0a:	48 89 c6             	mov    %rax,%rsi
    ac0d:	bf 18 00 00 00       	mov    $0x18,%edi
    ac12:	e8 19 a2 ff ff       	call   4e30 <_ZnwmPv>
    ac17:	48 89 c3             	mov    %rax,%rbx
    ac1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac1e:	48 89 c7             	mov    %rax,%rdi
    ac21:	e8 48 e8 ff ff       	call   946e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    ac26:	48 89 c1             	mov    %rax,%rcx
    ac29:	48 8b 01             	mov    (%rcx),%rax
    ac2c:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    ac30:	48 89 03             	mov    %rax,(%rbx)
    ac33:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    ac37:	48 8b 41 10          	mov    0x10(%rcx),%rax
    ac3b:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    ac3f:	90                   	nop
    ac40:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac44:	c9                   	leave
    ac45:	c3                   	ret

000000000000ac46 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ac46:	55                   	push   %rbp
    ac47:	48 89 e5             	mov    %rsp,%rbp
    ac4a:	48 83 ec 20          	sub    $0x20,%rsp
    ac4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ac5a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac5e:	48 89 d0             	mov    %rdx,%rax
    ac61:	48 c1 e0 03          	shl    $0x3,%rax
    ac65:	48 29 d0             	sub    %rdx,%rax
    ac68:	48 c1 e0 02          	shl    $0x2,%rax
    ac6c:	48 89 c2             	mov    %rax,%rdx
    ac6f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac73:	48 89 d6             	mov    %rdx,%rsi
    ac76:	48 89 c7             	mov    %rax,%rdi
    ac79:	e8 02 97 ff ff       	call   4380 <_ZdlPvm@plt>
      }
    ac7e:	c9                   	leave
    ac7f:	c3                   	ret

000000000000ac80 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ac80:	55                   	push   %rbp
    ac81:	48 89 e5             	mov    %rsp,%rbp
    ac84:	48 83 ec 10          	sub    $0x10,%rsp
    ac88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac90:	48 89 c7             	mov    %rax,%rdi
    ac93:	e8 52 06 00 00       	call   b2ea <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    ac98:	c9                   	leave
    ac99:	c3                   	ret

000000000000ac9a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ac9a:	55                   	push   %rbp
    ac9b:	48 89 e5             	mov    %rsp,%rbp
    ac9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aca6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    acad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    acb8:	00 
    acb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acbd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    acc4:	00 
	{ }
    acc5:	90                   	nop
    acc6:	5d                   	pop    %rbp
    acc7:	c3                   	ret

000000000000acc8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    acc8:	55                   	push   %rbp
    acc9:	48 89 e5             	mov    %rsp,%rbp
    accc:	48 83 ec 10          	sub    $0x10,%rsp
    acd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    acd8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    acdd:	74 15                	je     acf4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    acdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ace3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ace7:	48 89 d6             	mov    %rdx,%rsi
    acea:	48 89 c7             	mov    %rax,%rdi
    aced:	e8 12 06 00 00       	call   b304 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    acf2:	eb 05                	jmp    acf9 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    acf4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    acf9:	c9                   	leave
    acfa:	c3                   	ret

000000000000acfb <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    acfb:	55                   	push   %rbp
    acfc:	48 89 e5             	mov    %rsp,%rbp
    acff:	48 83 ec 20          	sub    $0x20,%rsp
    ad03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ad0b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ad0f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad17:	48 89 d6             	mov    %rdx,%rsi
    ad1a:	48 89 c7             	mov    %rax,%rdi
    ad1d:	e8 0c 06 00 00       	call   b32e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    ad22:	c9                   	leave
    ad23:	c3                   	ret

000000000000ad24 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    ad24:	55                   	push   %rbp
    ad25:	48 89 e5             	mov    %rsp,%rbp
    ad28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad2c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad30:	90                   	nop
    ad31:	5d                   	pop    %rbp
    ad32:	c3                   	ret
    ad33:	90                   	nop

000000000000ad34 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ad34:	55                   	push   %rbp
    ad35:	48 89 e5             	mov    %rsp,%rbp
    ad38:	48 83 ec 20          	sub    $0x20,%rsp
    ad3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad4c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ad53:	00 
    ad54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad58:	48 89 d6             	mov    %rdx,%rsi
    ad5b:	48 89 c7             	mov    %rax,%rdi
    ad5e:	e8 1d 96 ff ff       	call   4380 <_ZdlPvm@plt>
      }
    ad63:	c9                   	leave
    ad64:	c3                   	ret

000000000000ad65 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ad65:	55                   	push   %rbp
    ad66:	48 89 e5             	mov    %rsp,%rbp
    ad69:	48 83 ec 10          	sub    $0x10,%rsp
    ad6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ad71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad75:	48 89 c7             	mov    %rax,%rdi
    ad78:	e8 0f 06 00 00       	call   b38c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    ad7d:	c9                   	leave
    ad7e:	c3                   	ret
    ad7f:	90                   	nop

000000000000ad80 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ad80:	55                   	push   %rbp
    ad81:	48 89 e5             	mov    %rsp,%rbp
    ad84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ad88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad8c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ad93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad97:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ad9e:	00 
    ad9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    adaa:	00 
	{ }
    adab:	90                   	nop
    adac:	5d                   	pop    %rbp
    adad:	c3                   	ret

000000000000adae <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    adae:	55                   	push   %rbp
    adaf:	48 89 e5             	mov    %rsp,%rbp
    adb2:	48 83 ec 10          	sub    $0x10,%rsp
    adb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    adbe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    adc3:	74 15                	je     adda <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    adc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adc9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    adcd:	48 89 d6             	mov    %rdx,%rsi
    add0:	48 89 c7             	mov    %rax,%rdi
    add3:	e8 ce 05 00 00       	call   b3a6 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    add8:	eb 05                	jmp    addf <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    adda:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    addf:	c9                   	leave
    ade0:	c3                   	ret

000000000000ade1 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ade1:	55                   	push   %rbp
    ade2:	48 89 e5             	mov    %rsp,%rbp
    ade5:	48 83 ec 20          	sub    $0x20,%rsp
    ade9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aded:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    adf1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    adf5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    adf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adfd:	48 89 d6             	mov    %rdx,%rsi
    ae00:	48 89 c7             	mov    %rax,%rdi
    ae03:	e8 c8 05 00 00       	call   b3d0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    ae08:	c9                   	leave
    ae09:	c3                   	ret

000000000000ae0a <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    ae0a:	55                   	push   %rbp
    ae0b:	48 89 e5             	mov    %rsp,%rbp
    ae0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae16:	90                   	nop
    ae17:	5d                   	pop    %rbp
    ae18:	c3                   	ret
    ae19:	90                   	nop

000000000000ae1a <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ae1a:	55                   	push   %rbp
    ae1b:	48 89 e5             	mov    %rsp,%rbp
    ae1e:	48 83 ec 20          	sub    $0x20,%rsp
    ae22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ae2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae32:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ae39:	00 
    ae3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae3e:	48 89 d6             	mov    %rdx,%rsi
    ae41:	48 89 c7             	mov    %rax,%rdi
    ae44:	e8 37 95 ff ff       	call   4380 <_ZdlPvm@plt>
      }
    ae49:	c9                   	leave
    ae4a:	c3                   	ret

000000000000ae4b <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ae4b:	55                   	push   %rbp
    ae4c:	48 89 e5             	mov    %rsp,%rbp
    ae4f:	48 83 ec 10          	sub    $0x10,%rsp
    ae53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ae57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae5b:	48 89 c7             	mov    %rax,%rdi
    ae5e:	e8 cb 05 00 00       	call   b42e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    ae63:	c9                   	leave
    ae64:	c3                   	ret
    ae65:	90                   	nop

000000000000ae66 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ae66:	55                   	push   %rbp
    ae67:	48 89 e5             	mov    %rsp,%rbp
    ae6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ae6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae72:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ae79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae7d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ae84:	00 
    ae85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae89:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ae90:	00 
	{ }
    ae91:	90                   	nop
    ae92:	5d                   	pop    %rbp
    ae93:	c3                   	ret

000000000000ae94 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ae94:	55                   	push   %rbp
    ae95:	48 89 e5             	mov    %rsp,%rbp
    ae98:	48 83 ec 10          	sub    $0x10,%rsp
    ae9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aea0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aea4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aea9:	74 15                	je     aec0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    aeab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeaf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aeb3:	48 89 d6             	mov    %rdx,%rsi
    aeb6:	48 89 c7             	mov    %rax,%rdi
    aeb9:	e8 8a 05 00 00       	call   b448 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    aebe:	eb 05                	jmp    aec5 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    aec0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aec5:	c9                   	leave
    aec6:	c3                   	ret

000000000000aec7 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aec7:	55                   	push   %rbp
    aec8:	48 89 e5             	mov    %rsp,%rbp
    aecb:	48 83 ec 20          	sub    $0x20,%rsp
    aecf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aed3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aed7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aedb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aedf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aee3:	48 89 d6             	mov    %rdx,%rsi
    aee6:	48 89 c7             	mov    %rax,%rdi
    aee9:	e8 84 05 00 00       	call   b472 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    aeee:	c9                   	leave
    aeef:	c3                   	ret

000000000000aef0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    aef0:	55                   	push   %rbp
    aef1:	48 89 e5             	mov    %rsp,%rbp
    aef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aef8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aefc:	90                   	nop
    aefd:	5d                   	pop    %rbp
    aefe:	c3                   	ret
    aeff:	90                   	nop

000000000000af00 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af00:	55                   	push   %rbp
    af01:	48 89 e5             	mov    %rsp,%rbp
    af04:	48 83 ec 20          	sub    $0x20,%rsp
    af08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    af14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af18:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    af1f:	00 
    af20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af24:	48 89 d6             	mov    %rdx,%rsi
    af27:	48 89 c7             	mov    %rax,%rdi
    af2a:	e8 51 94 ff ff       	call   4380 <_ZdlPvm@plt>
      }
    af2f:	c9                   	leave
    af30:	c3                   	ret
    af31:	90                   	nop

000000000000af32 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    af32:	55                   	push   %rbp
    af33:	48 89 e5             	mov    %rsp,%rbp
    af36:	48 83 ec 10          	sub    $0x10,%rsp
    af3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    af3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af42:	48 89 c7             	mov    %rax,%rdi
    af45:	e8 86 05 00 00       	call   b4d0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    af4a:	c9                   	leave
    af4b:	c3                   	ret

000000000000af4c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    af4c:	55                   	push   %rbp
    af4d:	48 89 e5             	mov    %rsp,%rbp
    af50:	48 83 ec 10          	sub    $0x10,%rsp
    af54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    af5c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af64:	ba 00 00 00 00       	mov    $0x0,%edx
    af69:	48 89 ce             	mov    %rcx,%rsi
    af6c:	48 89 c7             	mov    %rax,%rdi
    af6f:	e8 70 05 00 00       	call   b4e4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    af74:	c9                   	leave
    af75:	c3                   	ret

000000000000af76 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    af76:	55                   	push   %rbp
    af77:	48 89 e5             	mov    %rsp,%rbp
    af7a:	48 83 ec 20          	sub    $0x20,%rsp
    af7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    af82:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    af86:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    af8b:	74 43                	je     afd0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    af8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af91:	48 89 c7             	mov    %rax,%rdi
    af94:	e8 b6 05 00 00       	call   b54f <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    af99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    af9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afa1:	48 89 c7             	mov    %rax,%rdi
    afa4:	e8 b4 05 00 00       	call   b55d <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    afa9:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    afb0:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    afb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    afb5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    afb9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    afbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afc1:	48 89 ce             	mov    %rcx,%rsi
    afc4:	48 89 c7             	mov    %rax,%rdi
    afc7:	e8 eb 05 00 00       	call   b5b7 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    afcc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    afd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    afd4:	c9                   	leave
    afd5:	c3                   	ret

000000000000afd6 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    afd6:	55                   	push   %rbp
    afd7:	48 89 e5             	mov    %rsp,%rbp
    afda:	48 83 ec 10          	sub    $0x10,%rsp
    afde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    afe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afe6:	48 89 c7             	mov    %rax,%rdi
    afe9:	e8 0e 06 00 00       	call   b5fc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    afee:	c9                   	leave
    afef:	c3                   	ret

000000000000aff0 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    aff0:	55                   	push   %rbp
    aff1:	48 89 e5             	mov    %rsp,%rbp
    aff4:	48 83 ec 10          	sub    $0x10,%rsp
    aff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    affc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b000:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b008:	ba 00 00 00 00       	mov    $0x0,%edx
    b00d:	48 89 ce             	mov    %rcx,%rsi
    b010:	48 89 c7             	mov    %rax,%rdi
    b013:	e8 f8 05 00 00       	call   b610 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    b018:	c9                   	leave
    b019:	c3                   	ret

000000000000b01a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b01a:	55                   	push   %rbp
    b01b:	48 89 e5             	mov    %rsp,%rbp
    b01e:	48 83 ec 20          	sub    $0x20,%rsp
    b022:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b026:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b02a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b02f:	74 43                	je     b074 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b031:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b035:	48 89 c7             	mov    %rax,%rdi
    b038:	e8 3e 06 00 00       	call   b67b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    b03d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b041:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b045:	48 89 c7             	mov    %rax,%rdi
    b048:	e8 3c 06 00 00       	call   b689 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b04d:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    b054:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b055:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b059:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b05d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b061:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b065:	48 89 ce             	mov    %rcx,%rsi
    b068:	48 89 c7             	mov    %rax,%rdi
    b06b:	e8 73 06 00 00       	call   b6e3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b070:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b074:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b078:	c9                   	leave
    b079:	c3                   	ret

000000000000b07a <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b07a:	55                   	push   %rbp
    b07b:	48 89 e5             	mov    %rsp,%rbp
    b07e:	48 83 ec 10          	sub    $0x10,%rsp
    b082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b08a:	48 89 c7             	mov    %rax,%rdi
    b08d:	e8 96 06 00 00       	call   b728 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b092:	c9                   	leave
    b093:	c3                   	ret

000000000000b094 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b094:	55                   	push   %rbp
    b095:	48 89 e5             	mov    %rsp,%rbp
    b098:	48 83 ec 10          	sub    $0x10,%rsp
    b09c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b0a4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b0a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0ac:	ba 00 00 00 00       	mov    $0x0,%edx
    b0b1:	48 89 ce             	mov    %rcx,%rsi
    b0b4:	48 89 c7             	mov    %rax,%rdi
    b0b7:	e8 80 06 00 00       	call   b73c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b0bc:	c9                   	leave
    b0bd:	c3                   	ret

000000000000b0be <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b0be:	55                   	push   %rbp
    b0bf:	48 89 e5             	mov    %rsp,%rbp
    b0c2:	48 83 ec 20          	sub    $0x20,%rsp
    b0c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b0ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b0ce:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b0d3:	74 40                	je     b115 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b0d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0d9:	48 89 c7             	mov    %rax,%rdi
    b0dc:	e8 bc 06 00 00       	call   b79d <_ZSt11__addressofIPKcEPT_RS2_>
    b0e1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b0e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0e9:	48 89 c7             	mov    %rax,%rdi
    b0ec:	e8 ba 06 00 00       	call   b7ab <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b0f1:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b0f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b0fa:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b0fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b102:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b106:	48 89 ce             	mov    %rcx,%rsi
    b109:	48 89 c7             	mov    %rax,%rdi
    b10c:	e8 c1 06 00 00       	call   b7d2 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b111:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b119:	c9                   	leave
    b11a:	c3                   	ret
    b11b:	90                   	nop

000000000000b11c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b11c:	55                   	push   %rbp
    b11d:	48 89 e5             	mov    %rsp,%rbp
    b120:	48 83 ec 10          	sub    $0x10,%rsp
    b124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b12c:	48 89 c7             	mov    %rax,%rdi
    b12f:	e8 e2 06 00 00       	call   b816 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b134:	c9                   	leave
    b135:	c3                   	ret

000000000000b136 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b136:	55                   	push   %rbp
    b137:	48 89 e5             	mov    %rsp,%rbp
    b13a:	48 83 ec 10          	sub    $0x10,%rsp
    b13e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b142:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b146:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b14a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b14e:	ba 00 00 00 00       	mov    $0x0,%edx
    b153:	48 89 ce             	mov    %rcx,%rsi
    b156:	48 89 c7             	mov    %rax,%rdi
    b159:	e8 cc 06 00 00       	call   b82a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b15e:	c9                   	leave
    b15f:	c3                   	ret

000000000000b160 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b160:	55                   	push   %rbp
    b161:	48 89 e5             	mov    %rsp,%rbp
    b164:	48 83 ec 20          	sub    $0x20,%rsp
    b168:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b16c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b170:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b175:	74 40                	je     b1b7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b177:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b17b:	48 89 c7             	mov    %rax,%rdi
    b17e:	e8 08 07 00 00       	call   b88b <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b183:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b18b:	48 89 c7             	mov    %rax,%rdi
    b18e:	e8 06 07 00 00       	call   b899 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b193:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b198:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b19c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b1a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b1a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1a8:	48 89 ce             	mov    %rcx,%rsi
    b1ab:	48 89 c7             	mov    %rax,%rdi
    b1ae:	e8 0d 07 00 00       	call   b8c0 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b1b3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b1b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b1bb:	c9                   	leave
    b1bc:	c3                   	ret
    b1bd:	90                   	nop

000000000000b1be <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b1be:	55                   	push   %rbp
    b1bf:	48 89 e5             	mov    %rsp,%rbp
    b1c2:	48 83 ec 10          	sub    $0x10,%rsp
    b1c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b1ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1ce:	48 89 c7             	mov    %rax,%rdi
    b1d1:	e8 2e 07 00 00       	call   b904 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b1d6:	c9                   	leave
    b1d7:	c3                   	ret

000000000000b1d8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b1d8:	55                   	push   %rbp
    b1d9:	48 89 e5             	mov    %rsp,%rbp
    b1dc:	48 83 ec 10          	sub    $0x10,%rsp
    b1e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b1e8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b1ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1f0:	ba 00 00 00 00       	mov    $0x0,%edx
    b1f5:	48 89 ce             	mov    %rcx,%rsi
    b1f8:	48 89 c7             	mov    %rax,%rdi
    b1fb:	e8 18 07 00 00       	call   b918 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b200:	c9                   	leave
    b201:	c3                   	ret

000000000000b202 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b202:	55                   	push   %rbp
    b203:	48 89 e5             	mov    %rsp,%rbp
    b206:	48 83 ec 20          	sub    $0x20,%rsp
    b20a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b20e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b212:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b217:	74 40                	je     b259 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b21d:	48 89 c7             	mov    %rax,%rdi
    b220:	e8 c2 f9 ff ff       	call   abe7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b225:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b22d:	48 89 c7             	mov    %rax,%rdi
    b230:	e8 4d 07 00 00       	call   b982 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b235:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b23a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b23e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b242:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b246:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b24a:	48 89 ce             	mov    %rcx,%rsi
    b24d:	48 89 c7             	mov    %rax,%rdi
    b250:	e8 76 07 00 00       	call   b9cb <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b255:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b25d:	c9                   	leave
    b25e:	c3                   	ret
    b25f:	90                   	nop

000000000000b260 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b260:	55                   	push   %rbp
    b261:	48 89 e5             	mov    %rsp,%rbp
    b264:	48 83 ec 10          	sub    $0x10,%rsp
    b268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b26c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b270:	48 89 c7             	mov    %rax,%rdi
    b273:	e8 98 07 00 00       	call   ba10 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b278:	c9                   	leave
    b279:	c3                   	ret

000000000000b27a <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b27a:	55                   	push   %rbp
    b27b:	48 89 e5             	mov    %rsp,%rbp
    b27e:	48 83 ec 10          	sub    $0x10,%rsp
    b282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b286:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b28a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b28e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b292:	ba 00 00 00 00       	mov    $0x0,%edx
    b297:	48 89 ce             	mov    %rcx,%rsi
    b29a:	48 89 c7             	mov    %rax,%rdi
    b29d:	e8 82 07 00 00       	call   ba24 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b2a2:	c9                   	leave
    b2a3:	c3                   	ret

000000000000b2a4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b2a4:	55                   	push   %rbp
    b2a5:	48 89 e5             	mov    %rsp,%rbp
    b2a8:	48 83 ec 20          	sub    $0x20,%rsp
    b2ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b2b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2b8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b2bc:	eb 1e                	jmp    b2dc <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b2be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2c2:	48 89 c7             	mov    %rax,%rdi
    b2c5:	e8 c5 07 00 00       	call   ba8f <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b2ca:	48 89 c7             	mov    %rax,%rdi
    b2cd:	e8 cb 07 00 00       	call   ba9d <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b2d2:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b2d7:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b2dc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b2e1:	75 db                	jne    b2be <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b2e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b2e7:	c9                   	leave
    b2e8:	c3                   	ret
    b2e9:	90                   	nop

000000000000b2ea <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b2ea:	55                   	push   %rbp
    b2eb:	48 89 e5             	mov    %rsp,%rbp
    b2ee:	48 83 ec 10          	sub    $0x10,%rsp
    b2f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b2f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2fa:	48 89 c7             	mov    %rax,%rdi
    b2fd:	e8 c4 07 00 00       	call   bac6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b302:	c9                   	leave
    b303:	c3                   	ret

000000000000b304 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b304:	55                   	push   %rbp
    b305:	48 89 e5             	mov    %rsp,%rbp
    b308:	48 83 ec 10          	sub    $0x10,%rsp
    b30c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b314:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b31c:	ba 00 00 00 00       	mov    $0x0,%edx
    b321:	48 89 ce             	mov    %rcx,%rsi
    b324:	48 89 c7             	mov    %rax,%rdi
    b327:	e8 ae 07 00 00       	call   bada <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b32c:	c9                   	leave
    b32d:	c3                   	ret

000000000000b32e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b32e:	55                   	push   %rbp
    b32f:	48 89 e5             	mov    %rsp,%rbp
    b332:	48 83 ec 20          	sub    $0x20,%rsp
    b336:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b33a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b33e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b343:	74 40                	je     b385 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b345:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b349:	48 89 c7             	mov    %rax,%rdi
    b34c:	e8 ea 07 00 00       	call   bb3b <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b351:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b359:	48 89 c7             	mov    %rax,%rdi
    b35c:	e8 e8 07 00 00       	call   bb49 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b361:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b366:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b36a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b36e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b372:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b376:	48 89 ce             	mov    %rcx,%rsi
    b379:	48 89 c7             	mov    %rax,%rdi
    b37c:	e8 f5 07 00 00       	call   bb76 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b381:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b385:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b389:	c9                   	leave
    b38a:	c3                   	ret
    b38b:	90                   	nop

000000000000b38c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b38c:	55                   	push   %rbp
    b38d:	48 89 e5             	mov    %rsp,%rbp
    b390:	48 83 ec 10          	sub    $0x10,%rsp
    b394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b39c:	48 89 c7             	mov    %rax,%rdi
    b39f:	e8 16 08 00 00       	call   bbba <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b3a4:	c9                   	leave
    b3a5:	c3                   	ret

000000000000b3a6 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b3a6:	55                   	push   %rbp
    b3a7:	48 89 e5             	mov    %rsp,%rbp
    b3aa:	48 83 ec 10          	sub    $0x10,%rsp
    b3ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b3b6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3be:	ba 00 00 00 00       	mov    $0x0,%edx
    b3c3:	48 89 ce             	mov    %rcx,%rsi
    b3c6:	48 89 c7             	mov    %rax,%rdi
    b3c9:	e8 00 08 00 00       	call   bbce <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b3ce:	c9                   	leave
    b3cf:	c3                   	ret

000000000000b3d0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b3d0:	55                   	push   %rbp
    b3d1:	48 89 e5             	mov    %rsp,%rbp
    b3d4:	48 83 ec 20          	sub    $0x20,%rsp
    b3d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b3dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b3e0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b3e5:	74 40                	je     b427 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b3e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3eb:	48 89 c7             	mov    %rax,%rdi
    b3ee:	e8 3c 08 00 00       	call   bc2f <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b3f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b3f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3fb:	48 89 c7             	mov    %rax,%rdi
    b3fe:	e8 3a 08 00 00       	call   bc3d <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b403:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b408:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b40c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b410:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b414:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b418:	48 89 ce             	mov    %rcx,%rsi
    b41b:	48 89 c7             	mov    %rax,%rdi
    b41e:	e8 40 08 00 00       	call   bc63 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b423:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b42b:	c9                   	leave
    b42c:	c3                   	ret
    b42d:	90                   	nop

000000000000b42e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b42e:	55                   	push   %rbp
    b42f:	48 89 e5             	mov    %rsp,%rbp
    b432:	48 83 ec 10          	sub    $0x10,%rsp
    b436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b43a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b43e:	48 89 c7             	mov    %rax,%rdi
    b441:	e8 62 08 00 00       	call   bca8 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b446:	c9                   	leave
    b447:	c3                   	ret

000000000000b448 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b448:	55                   	push   %rbp
    b449:	48 89 e5             	mov    %rsp,%rbp
    b44c:	48 83 ec 10          	sub    $0x10,%rsp
    b450:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b454:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b458:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b45c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b460:	ba 00 00 00 00       	mov    $0x0,%edx
    b465:	48 89 ce             	mov    %rcx,%rsi
    b468:	48 89 c7             	mov    %rax,%rdi
    b46b:	e8 4c 08 00 00       	call   bcbc <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b470:	c9                   	leave
    b471:	c3                   	ret

000000000000b472 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b472:	55                   	push   %rbp
    b473:	48 89 e5             	mov    %rsp,%rbp
    b476:	48 83 ec 20          	sub    $0x20,%rsp
    b47a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b47e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b482:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b487:	74 40                	je     b4c9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b489:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b48d:	48 89 c7             	mov    %rax,%rdi
    b490:	e8 88 08 00 00       	call   bd1d <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b495:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b49d:	48 89 c7             	mov    %rax,%rdi
    b4a0:	e8 86 08 00 00       	call   bd2b <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b4a5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b4aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b4ae:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b4b2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b4b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4ba:	48 89 ce             	mov    %rcx,%rsi
    b4bd:	48 89 c7             	mov    %rax,%rdi
    b4c0:	e8 8d 08 00 00       	call   bd52 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b4c5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b4c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b4cd:	c9                   	leave
    b4ce:	c3                   	ret
    b4cf:	90                   	nop

000000000000b4d0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b4d0:	55                   	push   %rbp
    b4d1:	48 89 e5             	mov    %rsp,%rbp
    b4d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b4d8:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b4df:	03 3f 00 
      }
    b4e2:	5d                   	pop    %rbp
    b4e3:	c3                   	ret

000000000000b4e4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b4e4:	55                   	push   %rbp
    b4e5:	48 89 e5             	mov    %rsp,%rbp
    b4e8:	48 83 ec 20          	sub    $0x20,%rsp
    b4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b4f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b4f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4fc:	48 89 c7             	mov    %rax,%rdi
    b4ff:	e8 cc ff ff ff       	call   b4d0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b504:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b508:	0f 92 c0             	setb   %al
    b50b:	0f b6 c0             	movzbl %al,%eax
    b50e:	48 85 c0             	test   %rax,%rax
    b511:	0f 95 c0             	setne  %al
    b514:	84 c0                	test   %al,%al
    b516:	74 1a                	je     b532 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b518:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b51f:	07 7e 00 
    b522:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b526:	73 05                	jae    b52d <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b528:	e8 33 8d ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b52d:	e8 ae 8b ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b532:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b536:	48 89 d0             	mov    %rdx,%rax
    b539:	48 c1 e0 06          	shl    $0x6,%rax
    b53d:	48 01 d0             	add    %rdx,%rax
    b540:	48 c1 e0 03          	shl    $0x3,%rax
    b544:	48 89 c7             	mov    %rax,%rdi
    b547:	e8 24 8e ff ff       	call   4370 <_Znwm@plt>
    b54c:	90                   	nop
      }
    b54d:	c9                   	leave
    b54e:	c3                   	ret

000000000000b54f <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b54f:	55                   	push   %rbp
    b550:	48 89 e5             	mov    %rsp,%rbp
    b553:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b55b:	5d                   	pop    %rbp
    b55c:	c3                   	ret

000000000000b55d <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b55d:	55                   	push   %rbp
    b55e:	48 89 e5             	mov    %rsp,%rbp
    b561:	48 83 ec 10          	sub    $0x10,%rsp
    b565:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b569:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b56d:	48 89 c6             	mov    %rax,%rsi
    b570:	bf 08 02 00 00       	mov    $0x208,%edi
    b575:	e8 b6 98 ff ff       	call   4e30 <_ZnwmPv>
    b57a:	b9 08 02 00 00       	mov    $0x208,%ecx
    b57f:	be 00 00 00 00       	mov    $0x0,%esi
    b584:	48 89 30             	mov    %rsi,(%rax)
    b587:	89 ca                	mov    %ecx,%edx
    b589:	48 01 c2             	add    %rax,%rdx
    b58c:	48 83 c2 08          	add    $0x8,%rdx
    b590:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b594:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b598:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b59c:	48 29 d0             	sub    %rdx,%rax
    b59f:	01 c1                	add    %eax,%ecx
    b5a1:	83 e1 f8             	and    $0xfffffff8,%ecx
    b5a4:	89 c8                	mov    %ecx,%eax
    b5a6:	c1 e8 03             	shr    $0x3,%eax
    b5a9:	89 c1                	mov    %eax,%ecx
    b5ab:	48 89 d7             	mov    %rdx,%rdi
    b5ae:	48 89 f0             	mov    %rsi,%rax
    b5b1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b5b4:	90                   	nop
    b5b5:	c9                   	leave
    b5b6:	c3                   	ret

000000000000b5b7 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b5b7:	55                   	push   %rbp
    b5b8:	48 89 e5             	mov    %rsp,%rbp
    b5bb:	48 83 ec 20          	sub    $0x20,%rsp
    b5bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b5cb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b5cf:	48 89 c7             	mov    %rax,%rdi
    b5d2:	e8 bf 07 00 00       	call   bd96 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b5d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5db:	48 89 c7             	mov    %rax,%rdi
    b5de:	e8 5f 98 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    b5e3:	48 89 c1             	mov    %rax,%rcx
    b5e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b5ee:	48 89 ce             	mov    %rcx,%rsi
    b5f1:	48 89 c7             	mov    %rax,%rdi
    b5f4:	e8 a8 07 00 00       	call   bda1 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b5f9:	c9                   	leave
    b5fa:	c3                   	ret
    b5fb:	90                   	nop

000000000000b5fc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b5fc:	55                   	push   %rbp
    b5fd:	48 89 e5             	mov    %rsp,%rbp
    b600:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b604:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b60b:	07 7e 00 
      }
    b60e:	5d                   	pop    %rbp
    b60f:	c3                   	ret

000000000000b610 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b610:	55                   	push   %rbp
    b611:	48 89 e5             	mov    %rsp,%rbp
    b614:	48 83 ec 20          	sub    $0x20,%rsp
    b618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b61c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b620:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b628:	48 89 c7             	mov    %rax,%rdi
    b62b:	e8 cc ff ff ff       	call   b5fc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b630:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b634:	0f 92 c0             	setb   %al
    b637:	0f b6 c0             	movzbl %al,%eax
    b63a:	48 85 c0             	test   %rax,%rax
    b63d:	0f 95 c0             	setne  %al
    b640:	84 c0                	test   %al,%al
    b642:	74 1a                	je     b65e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b644:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    b64b:	0f fc 00 
    b64e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b652:	73 05                	jae    b659 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b654:	e8 07 8c ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b659:	e8 82 8a ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b65e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b662:	48 89 d0             	mov    %rdx,%rax
    b665:	48 c1 e0 06          	shl    $0x6,%rax
    b669:	48 01 d0             	add    %rdx,%rax
    b66c:	48 c1 e0 02          	shl    $0x2,%rax
    b670:	48 89 c7             	mov    %rax,%rdi
    b673:	e8 f8 8c ff ff       	call   4370 <_Znwm@plt>
    b678:	90                   	nop
      }
    b679:	c9                   	leave
    b67a:	c3                   	ret

000000000000b67b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b67b:	55                   	push   %rbp
    b67c:	48 89 e5             	mov    %rsp,%rbp
    b67f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b687:	5d                   	pop    %rbp
    b688:	c3                   	ret

000000000000b689 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b689:	55                   	push   %rbp
    b68a:	48 89 e5             	mov    %rsp,%rbp
    b68d:	48 83 ec 10          	sub    $0x10,%rsp
    b691:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b699:	48 89 c6             	mov    %rax,%rsi
    b69c:	bf 04 01 00 00       	mov    $0x104,%edi
    b6a1:	e8 8a 97 ff ff       	call   4e30 <_ZnwmPv>
    b6a6:	b9 04 01 00 00       	mov    $0x104,%ecx
    b6ab:	be 00 00 00 00       	mov    $0x0,%esi
    b6b0:	48 89 30             	mov    %rsi,(%rax)
    b6b3:	89 ca                	mov    %ecx,%edx
    b6b5:	48 01 c2             	add    %rax,%rdx
    b6b8:	48 83 c2 08          	add    $0x8,%rdx
    b6bc:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b6c0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b6c4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b6c8:	48 29 d0             	sub    %rdx,%rax
    b6cb:	01 c1                	add    %eax,%ecx
    b6cd:	83 e1 f8             	and    $0xfffffff8,%ecx
    b6d0:	89 c8                	mov    %ecx,%eax
    b6d2:	c1 e8 03             	shr    $0x3,%eax
    b6d5:	89 c1                	mov    %eax,%ecx
    b6d7:	48 89 d7             	mov    %rdx,%rdi
    b6da:	48 89 f0             	mov    %rsi,%rax
    b6dd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b6e0:	90                   	nop
    b6e1:	c9                   	leave
    b6e2:	c3                   	ret

000000000000b6e3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b6e3:	55                   	push   %rbp
    b6e4:	48 89 e5             	mov    %rsp,%rbp
    b6e7:	48 83 ec 20          	sub    $0x20,%rsp
    b6eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b6f7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b6fb:	48 89 c7             	mov    %rax,%rdi
    b6fe:	e8 0d 07 00 00       	call   be10 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b703:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b707:	48 89 c7             	mov    %rax,%rdi
    b70a:	e8 33 97 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    b70f:	48 89 c1             	mov    %rax,%rcx
    b712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b716:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b71a:	48 89 ce             	mov    %rcx,%rsi
    b71d:	48 89 c7             	mov    %rax,%rdi
    b720:	e8 f6 06 00 00       	call   be1b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b725:	c9                   	leave
    b726:	c3                   	ret
    b727:	90                   	nop

000000000000b728 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b728:	55                   	push   %rbp
    b729:	48 89 e5             	mov    %rsp,%rbp
    b72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b730:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b737:	ff ff 0f 
      }
    b73a:	5d                   	pop    %rbp
    b73b:	c3                   	ret

000000000000b73c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b73c:	55                   	push   %rbp
    b73d:	48 89 e5             	mov    %rsp,%rbp
    b740:	48 83 ec 20          	sub    $0x20,%rsp
    b744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b74c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b754:	48 89 c7             	mov    %rax,%rdi
    b757:	e8 cc ff ff ff       	call   b728 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b75c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b760:	0f 92 c0             	setb   %al
    b763:	0f b6 c0             	movzbl %al,%eax
    b766:	48 85 c0             	test   %rax,%rax
    b769:	0f 95 c0             	setne  %al
    b76c:	84 c0                	test   %al,%al
    b76e:	74 1a                	je     b78a <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b770:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b777:	ff ff 1f 
    b77a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b77e:	73 05                	jae    b785 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b780:	e8 db 8a ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b785:	e8 56 89 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b78a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b78e:	48 c1 e0 03          	shl    $0x3,%rax
    b792:	48 89 c7             	mov    %rax,%rdi
    b795:	e8 d6 8b ff ff       	call   4370 <_Znwm@plt>
    b79a:	90                   	nop
      }
    b79b:	c9                   	leave
    b79c:	c3                   	ret

000000000000b79d <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b79d:	55                   	push   %rbp
    b79e:	48 89 e5             	mov    %rsp,%rbp
    b7a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b7a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7a9:	5d                   	pop    %rbp
    b7aa:	c3                   	ret

000000000000b7ab <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b7ab:	55                   	push   %rbp
    b7ac:	48 89 e5             	mov    %rsp,%rbp
    b7af:	48 83 ec 10          	sub    $0x10,%rsp
    b7b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b7b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7bb:	48 89 c6             	mov    %rax,%rsi
    b7be:	bf 08 00 00 00       	mov    $0x8,%edi
    b7c3:	e8 68 96 ff ff       	call   4e30 <_ZnwmPv>
    b7c8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b7cf:	90                   	nop
    b7d0:	c9                   	leave
    b7d1:	c3                   	ret

000000000000b7d2 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b7d2:	55                   	push   %rbp
    b7d3:	48 89 e5             	mov    %rsp,%rbp
    b7d6:	48 83 ec 20          	sub    $0x20,%rsp
    b7da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b7e6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b7ea:	48 89 c7             	mov    %rax,%rdi
    b7ed:	e8 98 06 00 00       	call   be8a <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b7f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b7f6:	48 89 c7             	mov    %rax,%rdi
    b7f9:	e8 44 96 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    b7fe:	48 89 c1             	mov    %rax,%rcx
    b801:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b805:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b809:	48 89 ce             	mov    %rcx,%rsi
    b80c:	48 89 c7             	mov    %rax,%rdi
    b80f:	e8 81 06 00 00       	call   be95 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b814:	c9                   	leave
    b815:	c3                   	ret

000000000000b816 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b816:	55                   	push   %rbp
    b817:	48 89 e5             	mov    %rsp,%rbp
    b81a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b81e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b825:	ff ff 0f 
      }
    b828:	5d                   	pop    %rbp
    b829:	c3                   	ret

000000000000b82a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b82a:	55                   	push   %rbp
    b82b:	48 89 e5             	mov    %rsp,%rbp
    b82e:	48 83 ec 20          	sub    $0x20,%rsp
    b832:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b836:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b83a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b842:	48 89 c7             	mov    %rax,%rdi
    b845:	e8 cc ff ff ff       	call   b816 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b84a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b84e:	0f 92 c0             	setb   %al
    b851:	0f b6 c0             	movzbl %al,%eax
    b854:	48 85 c0             	test   %rax,%rax
    b857:	0f 95 c0             	setne  %al
    b85a:	84 c0                	test   %al,%al
    b85c:	74 1a                	je     b878 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b85e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b865:	ff ff 1f 
    b868:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b86c:	73 05                	jae    b873 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b86e:	e8 ed 89 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b873:	e8 68 88 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b878:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b87c:	48 c1 e0 03          	shl    $0x3,%rax
    b880:	48 89 c7             	mov    %rax,%rdi
    b883:	e8 e8 8a ff ff       	call   4370 <_Znwm@plt>
    b888:	90                   	nop
      }
    b889:	c9                   	leave
    b88a:	c3                   	ret

000000000000b88b <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b88b:	55                   	push   %rbp
    b88c:	48 89 e5             	mov    %rsp,%rbp
    b88f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b897:	5d                   	pop    %rbp
    b898:	c3                   	ret

000000000000b899 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b899:	55                   	push   %rbp
    b89a:	48 89 e5             	mov    %rsp,%rbp
    b89d:	48 83 ec 10          	sub    $0x10,%rsp
    b8a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8a9:	48 89 c6             	mov    %rax,%rsi
    b8ac:	bf 08 00 00 00       	mov    $0x8,%edi
    b8b1:	e8 7a 95 ff ff       	call   4e30 <_ZnwmPv>
    b8b6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b8bd:	90                   	nop
    b8be:	c9                   	leave
    b8bf:	c3                   	ret

000000000000b8c0 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b8c0:	55                   	push   %rbp
    b8c1:	48 89 e5             	mov    %rsp,%rbp
    b8c4:	48 83 ec 20          	sub    $0x20,%rsp
    b8c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b8d4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8d8:	48 89 c7             	mov    %rax,%rdi
    b8db:	e8 12 06 00 00       	call   bef2 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b8e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8e4:	48 89 c7             	mov    %rax,%rdi
    b8e7:	e8 56 95 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    b8ec:	48 89 c1             	mov    %rax,%rcx
    b8ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b8f7:	48 89 ce             	mov    %rcx,%rsi
    b8fa:	48 89 c7             	mov    %rax,%rdi
    b8fd:	e8 fb 05 00 00       	call   befd <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b902:	c9                   	leave
    b903:	c3                   	ret

000000000000b904 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b904:	55                   	push   %rbp
    b905:	48 89 e5             	mov    %rsp,%rbp
    b908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b90c:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    b913:	55 55 05 
      }
    b916:	5d                   	pop    %rbp
    b917:	c3                   	ret

000000000000b918 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b918:	55                   	push   %rbp
    b919:	48 89 e5             	mov    %rsp,%rbp
    b91c:	48 83 ec 20          	sub    $0x20,%rsp
    b920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b924:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b928:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b92c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b930:	48 89 c7             	mov    %rax,%rdi
    b933:	e8 cc ff ff ff       	call   b904 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b938:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b93c:	0f 92 c0             	setb   %al
    b93f:	0f b6 c0             	movzbl %al,%eax
    b942:	48 85 c0             	test   %rax,%rax
    b945:	0f 95 c0             	setne  %al
    b948:	84 c0                	test   %al,%al
    b94a:	74 1a                	je     b966 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b94c:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    b953:	aa aa 0a 
    b956:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b95a:	73 05                	jae    b961 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b95c:	e8 ff 88 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b961:	e8 7a 87 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b966:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b96a:	48 89 d0             	mov    %rdx,%rax
    b96d:	48 01 c0             	add    %rax,%rax
    b970:	48 01 d0             	add    %rdx,%rax
    b973:	48 c1 e0 03          	shl    $0x3,%rax
    b977:	48 89 c7             	mov    %rax,%rdi
    b97a:	e8 f1 89 ff ff       	call   4370 <_Znwm@plt>
    b97f:	90                   	nop
      }
    b980:	c9                   	leave
    b981:	c3                   	ret

000000000000b982 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b982:	55                   	push   %rbp
    b983:	48 89 e5             	mov    %rsp,%rbp
    b986:	48 83 ec 10          	sub    $0x10,%rsp
    b98a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b98e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b992:	48 89 c6             	mov    %rax,%rsi
    b995:	bf 18 00 00 00       	mov    $0x18,%edi
    b99a:	e8 91 94 ff ff       	call   4e30 <_ZnwmPv>
    b99f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    b9a5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    b9ac:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    b9b3:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    b9ba:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    b9c1:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    b9c8:	90                   	nop
    b9c9:	c9                   	leave
    b9ca:	c3                   	ret

000000000000b9cb <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b9cb:	55                   	push   %rbp
    b9cc:	48 89 e5             	mov    %rsp,%rbp
    b9cf:	48 83 ec 20          	sub    $0x20,%rsp
    b9d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b9df:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b9e3:	48 89 c7             	mov    %rax,%rdi
    b9e6:	e8 6f 05 00 00       	call   bf5a <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b9eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9ef:	48 89 c7             	mov    %rax,%rdi
    b9f2:	e8 4b 94 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    b9f7:	48 89 c1             	mov    %rax,%rcx
    b9fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba02:	48 89 ce             	mov    %rcx,%rsi
    ba05:	48 89 c7             	mov    %rax,%rdi
    ba08:	e8 58 05 00 00       	call   bf65 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    ba0d:	c9                   	leave
    ba0e:	c3                   	ret
    ba0f:	90                   	nop

000000000000ba10 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ba10:	55                   	push   %rbp
    ba11:	48 89 e5             	mov    %rsp,%rbp
    ba14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ba18:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    ba1f:	49 92 04 
      }
    ba22:	5d                   	pop    %rbp
    ba23:	c3                   	ret

000000000000ba24 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba24:	55                   	push   %rbp
    ba25:	48 89 e5             	mov    %rsp,%rbp
    ba28:	48 83 ec 20          	sub    $0x20,%rsp
    ba2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba3c:	48 89 c7             	mov    %rax,%rdi
    ba3f:	e8 cc ff ff ff       	call   ba10 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    ba44:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba48:	0f 92 c0             	setb   %al
    ba4b:	0f b6 c0             	movzbl %al,%eax
    ba4e:	48 85 c0             	test   %rax,%rax
    ba51:	0f 95 c0             	setne  %al
    ba54:	84 c0                	test   %al,%al
    ba56:	74 1a                	je     ba72 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ba58:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    ba5f:	92 24 09 
    ba62:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba66:	73 05                	jae    ba6d <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ba68:	e8 f3 87 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ba6d:	e8 6e 86 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ba72:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba76:	48 89 d0             	mov    %rdx,%rax
    ba79:	48 c1 e0 03          	shl    $0x3,%rax
    ba7d:	48 29 d0             	sub    %rdx,%rax
    ba80:	48 c1 e0 02          	shl    $0x2,%rax
    ba84:	48 89 c7             	mov    %rax,%rdi
    ba87:	e8 e4 88 ff ff       	call   4370 <_Znwm@plt>
    ba8c:	90                   	nop
      }
    ba8d:	c9                   	leave
    ba8e:	c3                   	ret

000000000000ba8f <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ba8f:	55                   	push   %rbp
    ba90:	48 89 e5             	mov    %rsp,%rbp
    ba93:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ba97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba9b:	5d                   	pop    %rbp
    ba9c:	c3                   	ret

000000000000ba9d <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ba9d:	55                   	push   %rbp
    ba9e:	48 89 e5             	mov    %rsp,%rbp
    baa1:	48 83 ec 10          	sub    $0x10,%rsp
    baa5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    baa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baad:	48 89 c6             	mov    %rax,%rsi
    bab0:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bab5:	e8 76 93 ff ff       	call   4e30 <_ZnwmPv>
    baba:	48 89 c7             	mov    %rax,%rdi
    babd:	e8 6c 05 00 00       	call   c02e <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    bac2:	90                   	nop
    bac3:	c9                   	leave
    bac4:	c3                   	ret
    bac5:	90                   	nop

000000000000bac6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bac6:	55                   	push   %rbp
    bac7:	48 89 e5             	mov    %rsp,%rbp
    baca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bace:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bad5:	ff ff 0f 
      }
    bad8:	5d                   	pop    %rbp
    bad9:	c3                   	ret

000000000000bada <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bada:	55                   	push   %rbp
    badb:	48 89 e5             	mov    %rsp,%rbp
    bade:	48 83 ec 20          	sub    $0x20,%rsp
    bae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bae6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    baea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    baee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baf2:	48 89 c7             	mov    %rax,%rdi
    baf5:	e8 cc ff ff ff       	call   bac6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    bafa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bafe:	0f 92 c0             	setb   %al
    bb01:	0f b6 c0             	movzbl %al,%eax
    bb04:	48 85 c0             	test   %rax,%rax
    bb07:	0f 95 c0             	setne  %al
    bb0a:	84 c0                	test   %al,%al
    bb0c:	74 1a                	je     bb28 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bb0e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bb15:	ff ff 1f 
    bb18:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb1c:	73 05                	jae    bb23 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bb1e:	e8 3d 87 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bb23:	e8 b8 85 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bb28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb2c:	48 c1 e0 03          	shl    $0x3,%rax
    bb30:	48 89 c7             	mov    %rax,%rdi
    bb33:	e8 38 88 ff ff       	call   4370 <_Znwm@plt>
    bb38:	90                   	nop
      }
    bb39:	c9                   	leave
    bb3a:	c3                   	ret

000000000000bb3b <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bb3b:	55                   	push   %rbp
    bb3c:	48 89 e5             	mov    %rsp,%rbp
    bb3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bb43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb47:	5d                   	pop    %rbp
    bb48:	c3                   	ret

000000000000bb49 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bb49:	55                   	push   %rbp
    bb4a:	48 89 e5             	mov    %rsp,%rbp
    bb4d:	48 83 ec 10          	sub    $0x10,%rsp
    bb51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb59:	48 89 c6             	mov    %rax,%rsi
    bb5c:	bf 08 00 00 00       	mov    $0x8,%edi
    bb61:	e8 ca 92 ff ff       	call   4e30 <_ZnwmPv>
    bb66:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bb6c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    bb73:	90                   	nop
    bb74:	c9                   	leave
    bb75:	c3                   	ret

000000000000bb76 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bb76:	55                   	push   %rbp
    bb77:	48 89 e5             	mov    %rsp,%rbp
    bb7a:	48 83 ec 20          	sub    $0x20,%rsp
    bb7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb86:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bb8a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb8e:	48 89 c7             	mov    %rax,%rdi
    bb91:	e8 b3 04 00 00       	call   c049 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bb96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb9a:	48 89 c7             	mov    %rax,%rdi
    bb9d:	e8 a0 92 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    bba2:	48 89 c1             	mov    %rax,%rcx
    bba5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bba9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbad:	48 89 ce             	mov    %rcx,%rsi
    bbb0:	48 89 c7             	mov    %rax,%rdi
    bbb3:	e8 9c 04 00 00       	call   c054 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bbb8:	c9                   	leave
    bbb9:	c3                   	ret

000000000000bbba <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bbba:	55                   	push   %rbp
    bbbb:	48 89 e5             	mov    %rsp,%rbp
    bbbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bbc2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bbc9:	ff ff 1f 
      }
    bbcc:	5d                   	pop    %rbp
    bbcd:	c3                   	ret

000000000000bbce <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bbce:	55                   	push   %rbp
    bbcf:	48 89 e5             	mov    %rsp,%rbp
    bbd2:	48 83 ec 20          	sub    $0x20,%rsp
    bbd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bbe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe6:	48 89 c7             	mov    %rax,%rdi
    bbe9:	e8 cc ff ff ff       	call   bbba <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    bbee:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bbf2:	0f 92 c0             	setb   %al
    bbf5:	0f b6 c0             	movzbl %al,%eax
    bbf8:	48 85 c0             	test   %rax,%rax
    bbfb:	0f 95 c0             	setne  %al
    bbfe:	84 c0                	test   %al,%al
    bc00:	74 1a                	je     bc1c <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bc02:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    bc09:	ff ff 3f 
    bc0c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc10:	73 05                	jae    bc17 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bc12:	e8 49 86 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bc17:	e8 c4 84 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bc1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc20:	48 c1 e0 02          	shl    $0x2,%rax
    bc24:	48 89 c7             	mov    %rax,%rdi
    bc27:	e8 44 87 ff ff       	call   4370 <_Znwm@plt>
    bc2c:	90                   	nop
      }
    bc2d:	c9                   	leave
    bc2e:	c3                   	ret

000000000000bc2f <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bc2f:	55                   	push   %rbp
    bc30:	48 89 e5             	mov    %rsp,%rbp
    bc33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bc37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc3b:	5d                   	pop    %rbp
    bc3c:	c3                   	ret

000000000000bc3d <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bc3d:	55                   	push   %rbp
    bc3e:	48 89 e5             	mov    %rsp,%rbp
    bc41:	48 83 ec 10          	sub    $0x10,%rsp
    bc45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bc49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc4d:	48 89 c6             	mov    %rax,%rsi
    bc50:	bf 04 00 00 00       	mov    $0x4,%edi
    bc55:	e8 d6 91 ff ff       	call   4e30 <_ZnwmPv>
    bc5a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    bc60:	90                   	nop
    bc61:	c9                   	leave
    bc62:	c3                   	ret

000000000000bc63 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bc63:	55                   	push   %rbp
    bc64:	48 89 e5             	mov    %rsp,%rbp
    bc67:	48 83 ec 20          	sub    $0x20,%rsp
    bc6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc6f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc73:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc77:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc7b:	48 89 c7             	mov    %rax,%rdi
    bc7e:	e8 2e 04 00 00       	call   c0b1 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc87:	48 89 c7             	mov    %rax,%rdi
    bc8a:	e8 b3 91 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    bc8f:	48 89 c1             	mov    %rax,%rcx
    bc92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc96:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc9a:	48 89 ce             	mov    %rcx,%rsi
    bc9d:	48 89 c7             	mov    %rax,%rdi
    bca0:	e8 17 04 00 00       	call   c0bc <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bca5:	c9                   	leave
    bca6:	c3                   	ret
    bca7:	90                   	nop

000000000000bca8 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bca8:	55                   	push   %rbp
    bca9:	48 89 e5             	mov    %rsp,%rbp
    bcac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bcb0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bcb7:	ff ff 0f 
      }
    bcba:	5d                   	pop    %rbp
    bcbb:	c3                   	ret

000000000000bcbc <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bcbc:	55                   	push   %rbp
    bcbd:	48 89 e5             	mov    %rsp,%rbp
    bcc0:	48 83 ec 20          	sub    $0x20,%rsp
    bcc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bccc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bcd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd4:	48 89 c7             	mov    %rax,%rdi
    bcd7:	e8 cc ff ff ff       	call   bca8 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    bcdc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bce0:	0f 92 c0             	setb   %al
    bce3:	0f b6 c0             	movzbl %al,%eax
    bce6:	48 85 c0             	test   %rax,%rax
    bce9:	0f 95 c0             	setne  %al
    bcec:	84 c0                	test   %al,%al
    bcee:	74 1a                	je     bd0a <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bcf0:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bcf7:	ff ff 1f 
    bcfa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcfe:	73 05                	jae    bd05 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bd00:	e8 5b 85 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bd05:	e8 d6 83 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bd0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd0e:	48 c1 e0 03          	shl    $0x3,%rax
    bd12:	48 89 c7             	mov    %rax,%rdi
    bd15:	e8 56 86 ff ff       	call   4370 <_Znwm@plt>
    bd1a:	90                   	nop
      }
    bd1b:	c9                   	leave
    bd1c:	c3                   	ret

000000000000bd1d <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bd1d:	55                   	push   %rbp
    bd1e:	48 89 e5             	mov    %rsp,%rbp
    bd21:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bd25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd29:	5d                   	pop    %rbp
    bd2a:	c3                   	ret

000000000000bd2b <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bd2b:	55                   	push   %rbp
    bd2c:	48 89 e5             	mov    %rsp,%rbp
    bd2f:	48 83 ec 10          	sub    $0x10,%rsp
    bd33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd3b:	48 89 c6             	mov    %rax,%rsi
    bd3e:	bf 08 00 00 00       	mov    $0x8,%edi
    bd43:	e8 e8 90 ff ff       	call   4e30 <_ZnwmPv>
    bd48:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bd4f:	90                   	nop
    bd50:	c9                   	leave
    bd51:	c3                   	ret

000000000000bd52 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bd52:	55                   	push   %rbp
    bd53:	48 89 e5             	mov    %rsp,%rbp
    bd56:	48 83 ec 20          	sub    $0x20,%rsp
    bd5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bd66:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd6a:	48 89 c7             	mov    %rax,%rdi
    bd6d:	e8 a7 03 00 00       	call   c119 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bd72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd76:	48 89 c7             	mov    %rax,%rdi
    bd79:	e8 c4 90 ff ff       	call   4e42 <_ZSt17__size_to_integerm>
    bd7e:	48 89 c1             	mov    %rax,%rcx
    bd81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd89:	48 89 ce             	mov    %rcx,%rsi
    bd8c:	48 89 c7             	mov    %rax,%rdi
    bd8f:	e8 90 03 00 00       	call   c124 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bd94:	c9                   	leave
    bd95:	c3                   	ret

000000000000bd96 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bd96:	55                   	push   %rbp
    bd97:	48 89 e5             	mov    %rsp,%rbp
    bd9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bd9e:	90                   	nop
    bd9f:	5d                   	pop    %rbp
    bda0:	c3                   	ret

000000000000bda1 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bda1:	55                   	push   %rbp
    bda2:	48 89 e5             	mov    %rsp,%rbp
    bda5:	48 83 ec 20          	sub    $0x20,%rsp
    bda9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdb1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bdb5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bdba:	75 06                	jne    bdc2 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bdbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdc0:	eb 4c                	jmp    be0e <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bdc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdc6:	48 89 d0             	mov    %rdx,%rax
    bdc9:	48 c1 e0 06          	shl    $0x6,%rax
    bdcd:	48 01 d0             	add    %rdx,%rax
    bdd0:	48 c1 e0 03          	shl    $0x3,%rax
    bdd4:	48 89 c2             	mov    %rax,%rdx
    bdd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bddb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bddf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bde3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bde7:	48 89 ce             	mov    %rcx,%rsi
    bdea:	48 89 c7             	mov    %rax,%rdi
    bded:	e8 8f 03 00 00       	call   c181 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bdf2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdf6:	48 89 d0             	mov    %rdx,%rax
    bdf9:	48 c1 e0 06          	shl    $0x6,%rax
    bdfd:	48 01 d0             	add    %rdx,%rax
    be00:	48 c1 e0 03          	shl    $0x3,%rax
    be04:	48 89 c2             	mov    %rax,%rdx
    be07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be0b:	48 01 d0             	add    %rdx,%rax
    }
    be0e:	c9                   	leave
    be0f:	c3                   	ret

000000000000be10 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    be10:	55                   	push   %rbp
    be11:	48 89 e5             	mov    %rsp,%rbp
    be14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be18:	90                   	nop
    be19:	5d                   	pop    %rbp
    be1a:	c3                   	ret

000000000000be1b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be1b:	55                   	push   %rbp
    be1c:	48 89 e5             	mov    %rsp,%rbp
    be1f:	48 83 ec 20          	sub    $0x20,%rsp
    be23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be27:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be2b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    be2f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    be34:	75 06                	jne    be3c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    be36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be3a:	eb 4c                	jmp    be88 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    be3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be40:	48 89 d0             	mov    %rdx,%rax
    be43:	48 c1 e0 06          	shl    $0x6,%rax
    be47:	48 01 d0             	add    %rdx,%rax
    be4a:	48 c1 e0 02          	shl    $0x2,%rax
    be4e:	48 89 c2             	mov    %rax,%rdx
    be51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be55:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    be59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be61:	48 89 ce             	mov    %rcx,%rsi
    be64:	48 89 c7             	mov    %rax,%rdi
    be67:	e8 43 03 00 00       	call   c1af <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    be6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be70:	48 89 d0             	mov    %rdx,%rax
    be73:	48 c1 e0 06          	shl    $0x6,%rax
    be77:	48 01 d0             	add    %rdx,%rax
    be7a:	48 c1 e0 02          	shl    $0x2,%rax
    be7e:	48 89 c2             	mov    %rax,%rdx
    be81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be85:	48 01 d0             	add    %rdx,%rax
    }
    be88:	c9                   	leave
    be89:	c3                   	ret

000000000000be8a <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    be8a:	55                   	push   %rbp
    be8b:	48 89 e5             	mov    %rsp,%rbp
    be8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be92:	90                   	nop
    be93:	5d                   	pop    %rbp
    be94:	c3                   	ret

000000000000be95 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be95:	55                   	push   %rbp
    be96:	48 89 e5             	mov    %rsp,%rbp
    be99:	48 83 ec 20          	sub    $0x20,%rsp
    be9d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bea1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bea5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bea9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    beae:	75 06                	jne    beb6 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    beb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beb4:	eb 3a                	jmp    bef0 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    beb6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    beba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bec1:	00 
    bec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    beca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed2:	48 89 ce             	mov    %rcx,%rsi
    bed5:	48 89 c7             	mov    %rax,%rdi
    bed8:	e8 00 03 00 00       	call   c1dd <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    bedd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bee1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bee8:	00 
    bee9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beed:	48 01 d0             	add    %rdx,%rax
    }
    bef0:	c9                   	leave
    bef1:	c3                   	ret

000000000000bef2 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bef2:	55                   	push   %rbp
    bef3:	48 89 e5             	mov    %rsp,%rbp
    bef6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    befa:	90                   	nop
    befb:	5d                   	pop    %rbp
    befc:	c3                   	ret

000000000000befd <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    befd:	55                   	push   %rbp
    befe:	48 89 e5             	mov    %rsp,%rbp
    bf01:	48 83 ec 20          	sub    $0x20,%rsp
    bf05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf09:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf0d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf11:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf16:	75 06                	jne    bf1e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf1c:	eb 3a                	jmp    bf58 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bf1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf22:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bf29:	00 
    bf2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf2e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bf32:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf3a:	48 89 ce             	mov    %rcx,%rsi
    bf3d:	48 89 c7             	mov    %rax,%rdi
    bf40:	e8 c6 02 00 00       	call   c20b <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    bf45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf49:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bf50:	00 
    bf51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf55:	48 01 d0             	add    %rdx,%rax
    }
    bf58:	c9                   	leave
    bf59:	c3                   	ret

000000000000bf5a <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bf5a:	55                   	push   %rbp
    bf5b:	48 89 e5             	mov    %rsp,%rbp
    bf5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf62:	90                   	nop
    bf63:	5d                   	pop    %rbp
    bf64:	c3                   	ret

000000000000bf65 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf65:	55                   	push   %rbp
    bf66:	48 89 e5             	mov    %rsp,%rbp
    bf69:	48 83 ec 20          	sub    $0x20,%rsp
    bf6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf71:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf75:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf79:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf7e:	75 06                	jne    bf86 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf84:	eb 4a                	jmp    bfd0 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    bf86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf8a:	48 89 d0             	mov    %rdx,%rax
    bf8d:	48 01 c0             	add    %rax,%rax
    bf90:	48 01 d0             	add    %rdx,%rax
    bf93:	48 c1 e0 03          	shl    $0x3,%rax
    bf97:	48 89 c2             	mov    %rax,%rdx
    bf9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf9e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bfa2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfaa:	48 89 ce             	mov    %rcx,%rsi
    bfad:	48 89 c7             	mov    %rax,%rdi
    bfb0:	e8 84 02 00 00       	call   c239 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bfb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bfb9:	48 89 d0             	mov    %rdx,%rax
    bfbc:	48 01 c0             	add    %rax,%rax
    bfbf:	48 01 d0             	add    %rdx,%rax
    bfc2:	48 c1 e0 03          	shl    $0x3,%rax
    bfc6:	48 89 c2             	mov    %rax,%rdx
    bfc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfcd:	48 01 d0             	add    %rdx,%rax
    }
    bfd0:	c9                   	leave
    bfd1:	c3                   	ret

000000000000bfd2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    bfd2:	55                   	push   %rbp
    bfd3:	48 89 e5             	mov    %rsp,%rbp
    bfd6:	48 83 ec 10          	sub    $0x10,%rsp
    bfda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe2:	48 89 c7             	mov    %rax,%rdi
    bfe5:	e8 7e 02 00 00       	call   c268 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    bfea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfee:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    bff2:	90                   	nop
    bff3:	c9                   	leave
    bff4:	c3                   	ret
    bff5:	90                   	nop

000000000000bff6 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    bff6:	55                   	push   %rbp
    bff7:	48 89 e5             	mov    %rsp,%rbp
    bffa:	48 83 ec 10          	sub    $0x10,%rsp
    bffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c006:	48 89 c7             	mov    %rax,%rdi
    c009:	e8 c4 ff ff ff       	call   bfd2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    c00e:	90                   	nop
    c00f:	c9                   	leave
    c010:	c3                   	ret
    c011:	90                   	nop

000000000000c012 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    c012:	55                   	push   %rbp
    c013:	48 89 e5             	mov    %rsp,%rbp
    c016:	48 83 ec 10          	sub    $0x10,%rsp
    c01a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c01e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c022:	48 89 c7             	mov    %rax,%rdi
    c025:	e8 cc ff ff ff       	call   bff6 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    c02a:	90                   	nop
    c02b:	c9                   	leave
    c02c:	c3                   	ret
    c02d:	90                   	nop

000000000000c02e <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    c02e:	55                   	push   %rbp
    c02f:	48 89 e5             	mov    %rsp,%rbp
    c032:	48 83 ec 10          	sub    $0x10,%rsp
    c036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c03a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c03e:	48 89 c7             	mov    %rax,%rdi
    c041:	e8 cc ff ff ff       	call   c012 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    c046:	90                   	nop
    c047:	c9                   	leave
    c048:	c3                   	ret

000000000000c049 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c049:	55                   	push   %rbp
    c04a:	48 89 e5             	mov    %rsp,%rbp
    c04d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c051:	90                   	nop
    c052:	5d                   	pop    %rbp
    c053:	c3                   	ret

000000000000c054 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c054:	55                   	push   %rbp
    c055:	48 89 e5             	mov    %rsp,%rbp
    c058:	48 83 ec 20          	sub    $0x20,%rsp
    c05c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c060:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c064:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c068:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c06d:	75 06                	jne    c075 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c06f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c073:	eb 3a                	jmp    c0af <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c075:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c079:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c080:	00 
    c081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c085:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c089:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c08d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c091:	48 89 ce             	mov    %rcx,%rsi
    c094:	48 89 c7             	mov    %rax,%rdi
    c097:	e8 d7 01 00 00       	call   c273 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c09c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c0a7:	00 
    c0a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0ac:	48 01 d0             	add    %rdx,%rax
    }
    c0af:	c9                   	leave
    c0b0:	c3                   	ret

000000000000c0b1 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c0b1:	55                   	push   %rbp
    c0b2:	48 89 e5             	mov    %rsp,%rbp
    c0b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c0b9:	90                   	nop
    c0ba:	5d                   	pop    %rbp
    c0bb:	c3                   	ret

000000000000c0bc <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c0bc:	55                   	push   %rbp
    c0bd:	48 89 e5             	mov    %rsp,%rbp
    c0c0:	48 83 ec 20          	sub    $0x20,%rsp
    c0c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c0d0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c0d5:	75 06                	jne    c0dd <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c0d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0db:	eb 3a                	jmp    c117 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c0dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0e1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c0e8:	00 
    c0e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0ed:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c0f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0f9:	48 89 ce             	mov    %rcx,%rsi
    c0fc:	48 89 c7             	mov    %rax,%rdi
    c0ff:	e8 9d 01 00 00       	call   c2a1 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c104:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c108:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c10f:	00 
    c110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c114:	48 01 d0             	add    %rdx,%rax
    }
    c117:	c9                   	leave
    c118:	c3                   	ret

000000000000c119 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c119:	55                   	push   %rbp
    c11a:	48 89 e5             	mov    %rsp,%rbp
    c11d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c121:	90                   	nop
    c122:	5d                   	pop    %rbp
    c123:	c3                   	ret

000000000000c124 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c124:	55                   	push   %rbp
    c125:	48 89 e5             	mov    %rsp,%rbp
    c128:	48 83 ec 20          	sub    $0x20,%rsp
    c12c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c130:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c134:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c138:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c13d:	75 06                	jne    c145 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c13f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c143:	eb 3a                	jmp    c17f <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c145:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c149:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c150:	00 
    c151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c155:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c159:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c15d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c161:	48 89 ce             	mov    %rcx,%rsi
    c164:	48 89 c7             	mov    %rax,%rdi
    c167:	e8 63 01 00 00       	call   c2cf <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c16c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c170:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c177:	00 
    c178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c17c:	48 01 d0             	add    %rdx,%rax
    }
    c17f:	c9                   	leave
    c180:	c3                   	ret

000000000000c181 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c181:	55                   	push   %rbp
    c182:	48 89 e5             	mov    %rsp,%rbp
    c185:	48 83 ec 20          	sub    $0x20,%rsp
    c189:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c18d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c191:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c195:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c199:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c19d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1a1:	48 89 ce             	mov    %rcx,%rsi
    c1a4:	48 89 c7             	mov    %rax,%rdi
    c1a7:	e8 51 01 00 00       	call   c2fd <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c1ac:	90                   	nop
    c1ad:	c9                   	leave
    c1ae:	c3                   	ret

000000000000c1af <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c1af:	55                   	push   %rbp
    c1b0:	48 89 e5             	mov    %rsp,%rbp
    c1b3:	48 83 ec 20          	sub    $0x20,%rsp
    c1b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1bf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c1c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1c7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c1cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1cf:	48 89 ce             	mov    %rcx,%rsi
    c1d2:	48 89 c7             	mov    %rax,%rdi
    c1d5:	e8 9b 01 00 00       	call   c375 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c1da:	90                   	nop
    c1db:	c9                   	leave
    c1dc:	c3                   	ret

000000000000c1dd <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c1dd:	55                   	push   %rbp
    c1de:	48 89 e5             	mov    %rsp,%rbp
    c1e1:	48 83 ec 20          	sub    $0x20,%rsp
    c1e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c1f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c1f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1fd:	48 89 ce             	mov    %rcx,%rsi
    c200:	48 89 c7             	mov    %rax,%rdi
    c203:	e8 e5 01 00 00       	call   c3ed <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c208:	90                   	nop
    c209:	c9                   	leave
    c20a:	c3                   	ret

000000000000c20b <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c20b:	55                   	push   %rbp
    c20c:	48 89 e5             	mov    %rsp,%rbp
    c20f:	48 83 ec 20          	sub    $0x20,%rsp
    c213:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c217:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c21b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c21f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c223:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c22b:	48 89 ce             	mov    %rcx,%rsi
    c22e:	48 89 c7             	mov    %rax,%rdi
    c231:	e8 f2 01 00 00       	call   c428 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c236:	90                   	nop
    c237:	c9                   	leave
    c238:	c3                   	ret

000000000000c239 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c239:	55                   	push   %rbp
    c23a:	48 89 e5             	mov    %rsp,%rbp
    c23d:	48 83 ec 20          	sub    $0x20,%rsp
    c241:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c245:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c249:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c24d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c251:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c255:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c259:	48 89 ce             	mov    %rcx,%rsi
    c25c:	48 89 c7             	mov    %rax,%rdi
    c25f:	e8 ff 01 00 00       	call   c463 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c264:	90                   	nop
    c265:	c9                   	leave
    c266:	c3                   	ret
    c267:	90                   	nop

000000000000c268 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c268:	55                   	push   %rbp
    c269:	48 89 e5             	mov    %rsp,%rbp
    c26c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c270:	90                   	nop
    c271:	5d                   	pop    %rbp
    c272:	c3                   	ret

000000000000c273 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c273:	55                   	push   %rbp
    c274:	48 89 e5             	mov    %rsp,%rbp
    c277:	48 83 ec 20          	sub    $0x20,%rsp
    c27b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c27f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c283:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c287:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c28b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c28f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c293:	48 89 ce             	mov    %rcx,%rsi
    c296:	48 89 c7             	mov    %rax,%rdi
    c299:	e8 08 02 00 00       	call   c4a6 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c29e:	90                   	nop
    c29f:	c9                   	leave
    c2a0:	c3                   	ret

000000000000c2a1 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2a1:	55                   	push   %rbp
    c2a2:	48 89 e5             	mov    %rsp,%rbp
    c2a5:	48 83 ec 20          	sub    $0x20,%rsp
    c2a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2b1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2c1:	48 89 ce             	mov    %rcx,%rsi
    c2c4:	48 89 c7             	mov    %rax,%rdi
    c2c7:	e8 0d 02 00 00       	call   c4d9 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c2cc:	90                   	nop
    c2cd:	c9                   	leave
    c2ce:	c3                   	ret

000000000000c2cf <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2cf:	55                   	push   %rbp
    c2d0:	48 89 e5             	mov    %rsp,%rbp
    c2d3:	48 83 ec 20          	sub    $0x20,%rsp
    c2d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ef:	48 89 ce             	mov    %rcx,%rsi
    c2f2:	48 89 c7             	mov    %rax,%rdi
    c2f5:	e8 10 02 00 00       	call   c50a <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c2fa:	90                   	nop
    c2fb:	c9                   	leave
    c2fc:	c3                   	ret

000000000000c2fd <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c2fd:	55                   	push   %rbp
    c2fe:	48 89 e5             	mov    %rsp,%rbp
    c301:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c305:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c309:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c30d:	eb 58                	jmp    c367 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c30f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c313:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c317:	b9 08 02 00 00       	mov    $0x208,%ecx
    c31c:	48 8b 32             	mov    (%rdx),%rsi
    c31f:	48 89 30             	mov    %rsi,(%rax)
    c322:	89 ce                	mov    %ecx,%esi
    c324:	48 01 c6             	add    %rax,%rsi
    c327:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c32b:	89 ce                	mov    %ecx,%esi
    c32d:	48 01 d6             	add    %rdx,%rsi
    c330:	48 83 c6 08          	add    $0x8,%rsi
    c334:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c338:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c33c:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c340:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c344:	48 29 f8             	sub    %rdi,%rax
    c347:	48 29 c2             	sub    %rax,%rdx
    c34a:	01 c1                	add    %eax,%ecx
    c34c:	83 e1 f8             	and    $0xfffffff8,%ecx
    c34f:	89 c8                	mov    %ecx,%eax
    c351:	c1 e8 03             	shr    $0x3,%eax
    c354:	89 c0                	mov    %eax,%eax
    c356:	48 89 d6             	mov    %rdx,%rsi
    c359:	48 89 c1             	mov    %rax,%rcx
    c35c:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c35f:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c366:	00 
    c367:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c36b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c36f:	75 9e                	jne    c30f <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c371:	90                   	nop
    c372:	90                   	nop
    c373:	5d                   	pop    %rbp
    c374:	c3                   	ret

000000000000c375 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c375:	55                   	push   %rbp
    c376:	48 89 e5             	mov    %rsp,%rbp
    c379:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c37d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c381:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c385:	eb 58                	jmp    c3df <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c38b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c38f:	b9 04 01 00 00       	mov    $0x104,%ecx
    c394:	48 8b 32             	mov    (%rdx),%rsi
    c397:	48 89 30             	mov    %rsi,(%rax)
    c39a:	89 ce                	mov    %ecx,%esi
    c39c:	48 01 c6             	add    %rax,%rsi
    c39f:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c3a3:	89 ce                	mov    %ecx,%esi
    c3a5:	48 01 d6             	add    %rdx,%rsi
    c3a8:	48 83 c6 08          	add    $0x8,%rsi
    c3ac:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c3b0:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c3b4:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c3b8:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c3bc:	48 29 f8             	sub    %rdi,%rax
    c3bf:	48 29 c2             	sub    %rax,%rdx
    c3c2:	01 c1                	add    %eax,%ecx
    c3c4:	83 e1 f8             	and    $0xfffffff8,%ecx
    c3c7:	89 c8                	mov    %ecx,%eax
    c3c9:	c1 e8 03             	shr    $0x3,%eax
    c3cc:	89 c0                	mov    %eax,%eax
    c3ce:	48 89 d6             	mov    %rdx,%rsi
    c3d1:	48 89 c1             	mov    %rax,%rcx
    c3d4:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c3d7:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c3de:	00 
    c3df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e3:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c3e7:	75 9e                	jne    c387 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c3e9:	90                   	nop
    c3ea:	90                   	nop
    c3eb:	5d                   	pop    %rbp
    c3ec:	c3                   	ret

000000000000c3ed <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c3ed:	55                   	push   %rbp
    c3ee:	48 89 e5             	mov    %rsp,%rbp
    c3f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c3f5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c3f9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c3fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c401:	48 8b 00             	mov    (%rax),%rax
    c404:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c408:	eb 10                	jmp    c41a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c40a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c40e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c412:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c415:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c41a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c41e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c422:	75 e6                	jne    c40a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c424:	90                   	nop
    c425:	90                   	nop
    c426:	5d                   	pop    %rbp
    c427:	c3                   	ret

000000000000c428 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c428:	55                   	push   %rbp
    c429:	48 89 e5             	mov    %rsp,%rbp
    c42c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c430:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c434:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c438:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c43c:	48 8b 00             	mov    (%rax),%rax
    c43f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c443:	eb 10                	jmp    c455 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c449:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c44d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c450:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c459:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c45d:	75 e6                	jne    c445 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c45f:	90                   	nop
    c460:	90                   	nop
    c461:	5d                   	pop    %rbp
    c462:	c3                   	ret

000000000000c463 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c463:	55                   	push   %rbp
    c464:	48 89 e5             	mov    %rsp,%rbp
    c467:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c46b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c46f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c473:	eb 23                	jmp    c498 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c475:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c479:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c47d:	48 8b 06             	mov    (%rsi),%rax
    c480:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c484:	48 89 01             	mov    %rax,(%rcx)
    c487:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c48b:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c48f:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c493:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c49c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4a0:	75 d3                	jne    c475 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c4a2:	90                   	nop
    c4a3:	90                   	nop
    c4a4:	5d                   	pop    %rbp
    c4a5:	c3                   	ret

000000000000c4a6 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c4a6:	55                   	push   %rbp
    c4a7:	48 89 e5             	mov    %rsp,%rbp
    c4aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c4b6:	eb 13                	jmp    c4cb <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c4c0:	48 8b 12             	mov    (%rdx),%rdx
    c4c3:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c4c6:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c4cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4cf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4d3:	75 e3                	jne    c4b8 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c4d5:	90                   	nop
    c4d6:	90                   	nop
    c4d7:	5d                   	pop    %rbp
    c4d8:	c3                   	ret

000000000000c4d9 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c4d9:	55                   	push   %rbp
    c4da:	48 89 e5             	mov    %rsp,%rbp
    c4dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c4e9:	eb 11                	jmp    c4fc <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c4eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c4ef:	8b 10                	mov    (%rax),%edx
    c4f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4f5:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c4f7:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c4fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c500:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c504:	75 e5                	jne    c4eb <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c506:	90                   	nop
    c507:	90                   	nop
    c508:	5d                   	pop    %rbp
    c509:	c3                   	ret

000000000000c50a <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c50a:	55                   	push   %rbp
    c50b:	48 89 e5             	mov    %rsp,%rbp
    c50e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c512:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c516:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c51a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c51e:	48 8b 00             	mov    (%rax),%rax
    c521:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c525:	eb 10                	jmp    c537 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c527:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c52b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c52f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c532:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c537:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c53f:	75 e6                	jne    c527 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c541:	90                   	nop
    c542:	90                   	nop
    c543:	5d                   	pop    %rbp
    c544:	c3                   	ret

000000000000c545 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c545:	55                   	push   %rbp
    c546:	48 89 e5             	mov    %rsp,%rbp
    c549:	53                   	push   %rbx
    c54a:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c54e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c552:	be 00 00 00 00       	mov    $0x0,%esi
    c557:	48 89 c7             	mov    %rax,%rdi
    c55a:	e8 f1 7e ff ff       	call   4450 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c55f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c562:	89 c3                	mov    %eax,%ebx
    c564:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c568:	48 89 c7             	mov    %rax,%rdi
    c56b:	e8 ea b6 ff ff       	call   7c5a <_ZNSaI17VkLayerPropertiesEC1Ev>
    c570:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c574:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c578:	48 89 de             	mov    %rbx,%rsi
    c57b:	48 89 c7             	mov    %rax,%rdi
    c57e:	e8 0f b7 ff ff       	call   7c92 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c583:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c587:	48 89 c7             	mov    %rax,%rdi
    c58a:	e8 e7 b6 ff ff       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c58f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c593:	48 89 c7             	mov    %rax,%rdi
    c596:	e8 b1 b7 ff ff       	call   7d4c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c59b:	48 89 c2             	mov    %rax,%rdx
    c59e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c5a2:	48 89 d6             	mov    %rdx,%rsi
    c5a5:	48 89 c7             	mov    %rax,%rdi
    c5a8:	e8 a3 7e ff ff       	call   4450 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    c5ad:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c5b1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c5b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5b9:	48 89 c7             	mov    %rax,%rdi
    c5bc:	e8 63 04 00 00       	call   ca24 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    c5c1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c5c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5c9:	48 89 c7             	mov    %rax,%rdi
    c5cc:	e8 79 04 00 00       	call   ca4a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    c5d1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c5d5:	eb 5b                	jmp    c632 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    c5d7:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c5db:	48 89 c7             	mov    %rax,%rdi
    c5de:	e8 ef 04 00 00       	call   cad2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c5e3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    c5e7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c5eb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c5ef:	48 89 d6             	mov    %rdx,%rsi
    c5f2:	48 89 c7             	mov    %rax,%rdi
    c5f5:	e8 f8 03 00 00       	call   c9f2 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    c5fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c5fe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c602:	48 8b 3d 97 96 01 00 	mov    0x19697(%rip),%rdi        # 25ca0 <_ZN3vkh19validationLayerNameE>
    c609:	48 8b 35 98 96 01 00 	mov    0x19698(%rip),%rsi        # 25ca8 <_ZN3vkh19validationLayerNameE+0x8>
    c610:	48 89 d1             	mov    %rdx,%rcx
    c613:	48 89 c2             	mov    %rax,%rdx
    c616:	e8 da 04 00 00       	call   caf5 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    c61b:	84 c0                	test   %al,%al
    c61d:	74 07                	je     c626 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    c61f:	bb 01 00 00 00       	mov    $0x1,%ebx
    c624:	eb 28                	jmp    c64e <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    c626:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c62a:	48 89 c7             	mov    %rax,%rdi
    c62d:	e8 7c 04 00 00       	call   caae <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c632:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    c636:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c63a:	48 89 d6             	mov    %rdx,%rsi
    c63d:	48 89 c7             	mov    %rax,%rdi
    c640:	e8 2e 04 00 00       	call   ca73 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c645:	84 c0                	test   %al,%al
    c647:	75 8e                	jne    c5d7 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    c649:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    c64e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c652:	48 89 c7             	mov    %rax,%rdi
    c655:	e8 ae b6 ff ff       	call   7d08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c65a:	89 d8                	mov    %ebx,%eax
    c65c:	eb 34                	jmp    c692 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c65e:	48 89 c3             	mov    %rax,%rbx
    c661:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c665:	48 89 c7             	mov    %rax,%rdi
    c668:	e8 09 b6 ff ff       	call   7c76 <_ZNSaI17VkLayerPropertiesED1Ev>
    c66d:	48 89 d8             	mov    %rbx,%rax
    c670:	48 89 c7             	mov    %rax,%rdi
    c673:	e8 48 80 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    c678:	48 89 c3             	mov    %rax,%rbx
    c67b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c67f:	48 89 c7             	mov    %rax,%rdi
    c682:	e8 81 b6 ff ff       	call   7d08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c687:	48 89 d8             	mov    %rbx,%rax
    c68a:	48 89 c7             	mov    %rax,%rdi
    c68d:	e8 2e 80 ff ff       	call   46c0 <_Unwind_Resume@plt>
    c692:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c696:	c9                   	leave
    c697:	c3                   	ret

000000000000c698 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c698:	55                   	push   %rbp
    c699:	48 89 e5             	mov    %rsp,%rbp
    c69c:	48 83 ec 20          	sub    $0x20,%rsp
    c6a0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c6a3:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c6a6:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c6aa:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c6ae:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c6b1:	83 f8 01             	cmp    $0x1,%eax
    c6b4:	7e 3c                	jle    c6f2 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c6b6:	be 0a 00 00 00       	mov    $0xa,%esi
    c6bb:	48 8d 05 1e 9e 01 00 	lea    0x19e1e(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    c6c2:	48 89 c7             	mov    %rax,%rdi
    c6c5:	e8 a6 7d ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c6ca:	48 89 c2             	mov    %rax,%rdx
    c6cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6d1:	48 8b 40 28          	mov    0x28(%rax),%rax
    c6d5:	48 89 c6             	mov    %rax,%rsi
    c6d8:	48 89 d7             	mov    %rdx,%rdi
    c6db:	e8 80 7c ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c6e0:	48 8b 15 b1 98 01 00 	mov    0x198b1(%rip),%rdx        # 25f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c6e7:	48 89 d6             	mov    %rdx,%rsi
    c6ea:	48 89 c7             	mov    %rax,%rdi
    c6ed:	e8 de 7c ff ff       	call   43d0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c6f2:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c6f7:	c9                   	leave
    c6f8:	c3                   	ret

000000000000c6f9 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    c6f9:	55                   	push   %rbp
    c6fa:	48 89 e5             	mov    %rsp,%rbp
    c6fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    c701:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c705:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c709:	0f 11 00             	movups %xmm0,(%rax)
    c70c:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c710:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    c714:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c718:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    c71e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c722:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    c729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c72d:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    c734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c738:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # c698 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c73f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    c743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c747:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c74e:	00 
}
    c74f:	90                   	nop
    c750:	5d                   	pop    %rbp
    c751:	c3                   	ret

000000000000c752 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    c752:	55                   	push   %rbp
    c753:	48 89 e5             	mov    %rsp,%rbp
    c756:	48 83 ec 30          	sub    $0x30,%rsp
    c75a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c75e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c762:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c766:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c76a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c76e:	48 8d 15 63 bf 00 00 	lea    0xbf63(%rip),%rdx        # 186d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    c775:	48 89 d6             	mov    %rdx,%rsi
    c778:	48 89 c7             	mov    %rax,%rdi
    c77b:	e8 b0 7b ff ff       	call   4330 <vkGetInstanceProcAddr@plt>
    c780:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    c784:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c789:	75 07                	jne    c792 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    c78b:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    c790:	eb 1b                	jmp    c7ad <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    c792:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c796:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c79a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c79e:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c7a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7a6:	48 89 c7             	mov    %rax,%rdi
    c7a9:	41 ff d0             	call   *%r8
    c7ac:	90                   	nop
}
    c7ad:	c9                   	leave
    c7ae:	c3                   	ret

000000000000c7af <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    c7af:	55                   	push   %rbp
    c7b0:	48 89 e5             	mov    %rsp,%rbp
    c7b3:	41 54                	push   %r12
    c7b5:	53                   	push   %rbx
    c7b6:	48 83 ec 50          	sub    $0x50,%rsp
    c7ba:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    c7be:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c7c2:	48 89 c7             	mov    %rax,%rdi
    c7c5:	e8 2f ff ff ff       	call   c6f9 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    c7ca:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c7d1:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c7d2:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    c7d6:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    c7da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c7de:	48 89 d1             	mov    %rdx,%rcx
    c7e1:	ba 00 00 00 00       	mov    $0x0,%edx
    c7e6:	48 89 c7             	mov    %rax,%rdi
    c7e9:	e8 64 ff ff ff       	call   c752 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    c7ee:	85 c0                	test   %eax,%eax
    c7f0:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c7f3:	84 c0                	test   %al,%al
    c7f5:	74 3b                	je     c832 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    c7f7:	bf 10 00 00 00       	mov    $0x10,%edi
    c7fc:	e8 5f 79 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    c801:	48 89 c3             	mov    %rax,%rbx
    c804:	48 8d 05 ed be 00 00 	lea    0xbeed(%rip),%rax        # 186f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    c80b:	48 89 c6             	mov    %rax,%rsi
    c80e:	48 89 df             	mov    %rbx,%rdi
    c811:	e8 ea 78 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    c816:	48 8b 05 8b 97 01 00 	mov    0x1978b(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    c81d:	48 89 c2             	mov    %rax,%rdx
    c820:	48 8d 05 19 95 01 00 	lea    0x19519(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    c827:	48 89 c6             	mov    %rax,%rsi
    c82a:	48 89 df             	mov    %rbx,%rdi
    c82d:	e8 2e 7e ff ff       	call   4660 <__cxa_throw@plt>
  }
  return debugMessenger;
    c832:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c836:	eb 16                	jmp    c84e <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    c838:	49 89 c4             	mov    %rax,%r12
    c83b:	48 89 df             	mov    %rbx,%rdi
    c83e:	e8 ed 79 ff ff       	call   4230 <__cxa_free_exception@plt>
    c843:	4c 89 e0             	mov    %r12,%rax
    c846:	48 89 c7             	mov    %rax,%rdi
    c849:	e8 72 7e ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    c84e:	48 83 c4 50          	add    $0x50,%rsp
    c852:	5b                   	pop    %rbx
    c853:	41 5c                	pop    %r12
    c855:	5d                   	pop    %rbp
    c856:	c3                   	ret

000000000000c857 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    c857:	55                   	push   %rbp
    c858:	48 89 e5             	mov    %rsp,%rbp
    c85b:	48 83 ec 30          	sub    $0x30,%rsp
    c85f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c863:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c867:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c86b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c86f:	48 8d 15 a2 be 00 00 	lea    0xbea2(%rip),%rdx        # 18718 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    c876:	48 89 d6             	mov    %rdx,%rsi
    c879:	48 89 c7             	mov    %rax,%rdi
    c87c:	e8 af 7a ff ff       	call   4330 <vkGetInstanceProcAddr@plt>
    c881:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    c885:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c88a:	74 19                	je     c8a5 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    c88c:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c890:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c894:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c898:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c89c:	48 89 ce             	mov    %rcx,%rsi
    c89f:	48 89 c7             	mov    %rax,%rdi
    c8a2:	41 ff d0             	call   *%r8
  }
}
    c8a5:	90                   	nop
    c8a6:	c9                   	leave
    c8a7:	c3                   	ret

000000000000c8a8 <_Z41__static_initialization_and_destruction_0ii>:

    c8a8:	55                   	push   %rbp
    c8a9:	48 89 e5             	mov    %rsp,%rbp
    c8ac:	48 83 ec 10          	sub    $0x10,%rsp
    c8b0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c8b3:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c8b6:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    c8ba:	75 3b                	jne    c8f7 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c8bc:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    c8c3:	75 32                	jne    c8f7 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c8c5:	48 8d 05 26 9d 01 00 	lea    0x19d26(%rip),%rax        # 265f2 <_ZStL8__ioinit>
    c8cc:	48 89 c7             	mov    %rax,%rdi
    c8cf:	e8 fc 7c ff ff       	call   45d0 <_ZNSt8ios_base4InitC1Ev@plt>
    c8d4:	48 8d 05 bd 9a 01 00 	lea    0x19abd(%rip),%rax        # 26398 <__dso_handle>
    c8db:	48 89 c2             	mov    %rax,%rdx
    c8de:	48 8d 05 0d 9d 01 00 	lea    0x19d0d(%rip),%rax        # 265f2 <_ZStL8__ioinit>
    c8e5:	48 89 c6             	mov    %rax,%rsi
    c8e8:	48 8b 05 d9 96 01 00 	mov    0x196d9(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    c8ef:	48 89 c7             	mov    %rax,%rdi
    c8f2:	e8 f9 79 ff ff       	call   42f0 <__cxa_atexit@plt>
    c8f7:	90                   	nop
    c8f8:	c9                   	leave
    c8f9:	c3                   	ret

000000000000c8fa <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    c8fa:	55                   	push   %rbp
    c8fb:	48 89 e5             	mov    %rsp,%rbp
    c8fe:	be ff ff 00 00       	mov    $0xffff,%esi
    c903:	bf 01 00 00 00       	mov    $0x1,%edi
    c908:	e8 9b ff ff ff       	call   c8a8 <_Z41__static_initialization_and_destruction_0ii>
    c90d:	5d                   	pop    %rbp
    c90e:	c3                   	ret

000000000000c90f <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    c90f:	55                   	push   %rbp
    c910:	48 89 e5             	mov    %rsp,%rbp
    c913:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c917:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    c91b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c91f:	0f b6 00             	movzbl (%rax),%eax
    c922:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    c924:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c928:	0f b6 00             	movzbl (%rax),%eax
    c92b:	38 c2                	cmp    %al,%dl
    c92d:	0f 92 c0             	setb   %al
      }
    c930:	5d                   	pop    %rbp
    c931:	c3                   	ret

000000000000c932 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    c932:	55                   	push   %rbp
    c933:	48 89 e5             	mov    %rsp,%rbp
    c936:	48 83 ec 30          	sub    $0x30,%rsp
    c93a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c93e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c942:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    c946:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    c94b:	75 0a                	jne    c957 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    c94d:	b8 00 00 00 00       	mov    $0x0,%eax
    c952:	e9 99 00 00 00       	jmp    c9f0 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    c957:	e8 f2 80 ff ff       	call   4a4e <_ZSt23__is_constant_evaluatedv>
    c95c:	84 c0                	test   %al,%al
    c95e:	74 78                	je     c9d8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    c960:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c967:	00 
    c968:	eb 5d                	jmp    c9c7 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    c96a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c96e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c972:	48 01 c2             	add    %rax,%rdx
    c975:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c979:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c97d:	48 01 c8             	add    %rcx,%rax
    c980:	48 89 d6             	mov    %rdx,%rsi
    c983:	48 89 c7             	mov    %rax,%rdi
    c986:	e8 84 ff ff ff       	call   c90f <_ZNSt11char_traitsIcE2ltERKcS2_>
    c98b:	84 c0                	test   %al,%al
    c98d:	74 07                	je     c996 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    c98f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c994:	eb 5a                	jmp    c9f0 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    c996:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c99a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99e:	48 01 c2             	add    %rax,%rdx
    c9a1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c9a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9a9:	48 01 c8             	add    %rcx,%rax
    c9ac:	48 89 d6             	mov    %rdx,%rsi
    c9af:	48 89 c7             	mov    %rax,%rdi
    c9b2:	e8 58 ff ff ff       	call   c90f <_ZNSt11char_traitsIcE2ltERKcS2_>
    c9b7:	84 c0                	test   %al,%al
    c9b9:	74 07                	je     c9c2 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    c9bb:	b8 01 00 00 00       	mov    $0x1,%eax
    c9c0:	eb 2e                	jmp    c9f0 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    c9c2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    c9c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9cb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c9cf:	72 99                	jb     c96a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    c9d1:	b8 00 00 00 00       	mov    $0x0,%eax
    c9d6:	eb 18                	jmp    c9f0 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    c9d8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c9dc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c9e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9e4:	48 89 ce             	mov    %rcx,%rsi
    c9e7:	48 89 c7             	mov    %rax,%rdi
    c9ea:	e8 61 77 ff ff       	call   4150 <memcmp@plt>
    c9ef:	90                   	nop
      }
    c9f0:	c9                   	leave
    c9f1:	c3                   	ret

000000000000c9f2 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    c9f2:	55                   	push   %rbp
    c9f3:	48 89 e5             	mov    %rsp,%rbp
    c9f6:	48 83 ec 10          	sub    $0x10,%rsp
    c9fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    ca02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca06:	48 89 c7             	mov    %rax,%rdi
    ca09:	e8 4b 80 ff ff       	call   4a59 <_ZNSt11char_traitsIcE6lengthEPKc>
    ca0e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ca12:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    ca15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca1d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    ca21:	90                   	nop
    ca22:	c9                   	leave
    ca23:	c3                   	ret

000000000000ca24 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ca24:	55                   	push   %rbp
    ca25:	48 89 e5             	mov    %rsp,%rbp
    ca28:	48 83 ec 20          	sub    $0x20,%rsp
    ca2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    ca30:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ca34:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca38:	48 89 d6             	mov    %rdx,%rsi
    ca3b:	48 89 c7             	mov    %rax,%rdi
    ca3e:	e8 27 01 00 00       	call   cb6a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ca43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca47:	c9                   	leave
    ca48:	c3                   	ret
    ca49:	90                   	nop

000000000000ca4a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ca4a:	55                   	push   %rbp
    ca4b:	48 89 e5             	mov    %rsp,%rbp
    ca4e:	48 83 ec 20          	sub    $0x20,%rsp
    ca52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ca56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca5a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ca5e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca62:	48 89 d6             	mov    %rdx,%rsi
    ca65:	48 89 c7             	mov    %rax,%rdi
    ca68:	e8 fd 00 00 00       	call   cb6a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ca6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca71:	c9                   	leave
    ca72:	c3                   	ret

000000000000ca73 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ca73:	55                   	push   %rbp
    ca74:	48 89 e5             	mov    %rsp,%rbp
    ca77:	53                   	push   %rbx
    ca78:	48 83 ec 18          	sub    $0x18,%rsp
    ca7c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca80:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    ca84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca88:	48 89 c7             	mov    %rax,%rdi
    ca8b:	e8 f8 00 00 00       	call   cb88 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    ca90:	48 8b 18             	mov    (%rax),%rbx
    ca93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca97:	48 89 c7             	mov    %rax,%rdi
    ca9a:	e8 e9 00 00 00       	call   cb88 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    ca9f:	48 8b 00             	mov    (%rax),%rax
    caa2:	48 39 c3             	cmp    %rax,%rbx
    caa5:	0f 95 c0             	setne  %al
    caa8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    caac:	c9                   	leave
    caad:	c3                   	ret

000000000000caae <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    caae:	55                   	push   %rbp
    caaf:	48 89 e5             	mov    %rsp,%rbp
    cab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caba:	48 8b 00             	mov    (%rax),%rax
    cabd:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cac8:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cacb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cacf:	5d                   	pop    %rbp
    cad0:	c3                   	ret
    cad1:	90                   	nop

000000000000cad2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cad2:	55                   	push   %rbp
    cad3:	48 89 e5             	mov    %rsp,%rbp
    cad6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cada:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cade:	48 8b 00             	mov    (%rax),%rax
    cae1:	5d                   	pop    %rbp
    cae2:	c3                   	ret
    cae3:	90                   	nop

000000000000cae4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    cae4:	55                   	push   %rbp
    cae5:	48 89 e5             	mov    %rsp,%rbp
    cae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    caec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caf0:	48 8b 00             	mov    (%rax),%rax
    caf3:	5d                   	pop    %rbp
    caf4:	c3                   	ret

000000000000caf5 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    caf5:	55                   	push   %rbp
    caf6:	48 89 e5             	mov    %rsp,%rbp
    caf9:	53                   	push   %rbx
    cafa:	48 83 ec 28          	sub    $0x28,%rsp
    cafe:	48 89 f0             	mov    %rsi,%rax
    cb01:	49 89 f8             	mov    %rdi,%r8
    cb04:	4c 89 c6             	mov    %r8,%rsi
    cb07:	4c 89 cf             	mov    %r9,%rdi
    cb0a:	48 89 c7             	mov    %rax,%rdi
    cb0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cb11:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb15:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    cb19:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cb1d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cb21:	48 89 c7             	mov    %rax,%rdi
    cb24:	e8 bb ff ff ff       	call   cae4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cb29:	48 89 c3             	mov    %rax,%rbx
    cb2c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cb30:	48 89 c7             	mov    %rax,%rdi
    cb33:	e8 ac ff ff ff       	call   cae4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cb38:	48 39 c3             	cmp    %rax,%rbx
    cb3b:	75 22                	jne    cb5f <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cb3d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cb41:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cb45:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cb49:	48 89 ce             	mov    %rcx,%rsi
    cb4c:	48 89 c7             	mov    %rax,%rdi
    cb4f:	e8 42 00 00 00       	call   cb96 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cb54:	85 c0                	test   %eax,%eax
    cb56:	75 07                	jne    cb5f <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cb58:	b8 01 00 00 00       	mov    $0x1,%eax
    cb5d:	eb 05                	jmp    cb64 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    cb5f:	b8 00 00 00 00       	mov    $0x0,%eax
    cb64:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb68:	c9                   	leave
    cb69:	c3                   	ret

000000000000cb6a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cb6a:	55                   	push   %rbp
    cb6b:	48 89 e5             	mov    %rsp,%rbp
    cb6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cb76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb7a:	48 8b 10             	mov    (%rax),%rdx
    cb7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb81:	48 89 10             	mov    %rdx,(%rax)
    cb84:	90                   	nop
    cb85:	5d                   	pop    %rbp
    cb86:	c3                   	ret
    cb87:	90                   	nop

000000000000cb88 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cb88:	55                   	push   %rbp
    cb89:	48 89 e5             	mov    %rsp,%rbp
    cb8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cb90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb94:	5d                   	pop    %rbp
    cb95:	c3                   	ret

000000000000cb96 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    cb96:	55                   	push   %rbp
    cb97:	48 89 e5             	mov    %rsp,%rbp
    cb9a:	48 83 ec 30          	sub    $0x30,%rsp
    cb9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cba2:	48 89 d1             	mov    %rdx,%rcx
    cba5:	48 89 f0             	mov    %rsi,%rax
    cba8:	48 89 fa             	mov    %rdi,%rdx
    cbab:	48 89 ca             	mov    %rcx,%rdx
    cbae:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cbb2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    cbb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbba:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    cbbe:	48 89 d6             	mov    %rdx,%rsi
    cbc1:	48 89 c7             	mov    %rax,%rdi
    cbc4:	e8 34 87 ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
    cbc9:	48 8b 00             	mov    (%rax),%rax
    cbcc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    cbd0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    cbd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbd8:	48 8b 40 08          	mov    0x8(%rax),%rax
    cbdc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cbe0:	48 89 ce             	mov    %rcx,%rsi
    cbe3:	48 89 c7             	mov    %rax,%rdi
    cbe6:	e8 47 fd ff ff       	call   c932 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    cbeb:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    cbee:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    cbf2:	75 19                	jne    cc0d <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    cbf4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cbf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbfc:	48 8b 00             	mov    (%rax),%rax
    cbff:	48 89 d6             	mov    %rdx,%rsi
    cc02:	48 89 c7             	mov    %rax,%rdi
    cc05:	e8 08 00 00 00       	call   cc12 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    cc0a:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    cc0d:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    cc10:	c9                   	leave
    cc11:	c3                   	ret

000000000000cc12 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    cc12:	55                   	push   %rbp
    cc13:	48 89 e5             	mov    %rsp,%rbp
    cc16:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc1a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    cc1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc22:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    cc26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    cc2a:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cc2f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cc33:	7c 07                	jl     cc3c <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    cc35:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    cc3a:	eb 1b                	jmp    cc57 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    cc3c:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    cc43:	ff ff ff 
    cc46:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cc4a:	7f 07                	jg     cc53 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    cc4c:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cc51:	eb 04                	jmp    cc57 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    cc53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cc57:	5d                   	pop    %rbp
    cc58:	c3                   	ret

000000000000cc59 <_Z41__static_initialization_and_destruction_0ii>:
 */
void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator);

} /* namespace vkh */
    cc59:	55                   	push   %rbp
    cc5a:	48 89 e5             	mov    %rsp,%rbp
    cc5d:	48 83 ec 10          	sub    $0x10,%rsp
    cc61:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cc64:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cc67:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cc6b:	75 3b                	jne    cca8 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cc6d:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cc74:	75 32                	jne    cca8 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cc76:	48 8d 05 76 99 01 00 	lea    0x19976(%rip),%rax        # 265f3 <_ZStL8__ioinit>
    cc7d:	48 89 c7             	mov    %rax,%rdi
    cc80:	e8 4b 79 ff ff       	call   45d0 <_ZNSt8ios_base4InitC1Ev@plt>
    cc85:	48 8d 05 0c 97 01 00 	lea    0x1970c(%rip),%rax        # 26398 <__dso_handle>
    cc8c:	48 89 c2             	mov    %rax,%rdx
    cc8f:	48 8d 05 5d 99 01 00 	lea    0x1995d(%rip),%rax        # 265f3 <_ZStL8__ioinit>
    cc96:	48 89 c6             	mov    %rax,%rsi
    cc99:	48 8b 05 28 93 01 00 	mov    0x19328(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cca0:	48 89 c7             	mov    %rax,%rdi
    cca3:	e8 48 76 ff ff       	call   42f0 <__cxa_atexit@plt>
    cca8:	90                   	nop
    cca9:	c9                   	leave
    ccaa:	c3                   	ret

000000000000ccab <_GLOBAL__sub_I_vkh.cpp>:
    ccab:	55                   	push   %rbp
    ccac:	48 89 e5             	mov    %rsp,%rbp
    ccaf:	be ff ff 00 00       	mov    $0xffff,%esi
    ccb4:	bf 01 00 00 00       	mov    $0x1,%edi
    ccb9:	e8 9b ff ff ff       	call   cc59 <_Z41__static_initialization_and_destruction_0ii>
    ccbe:	5d                   	pop    %rbp
    ccbf:	c3                   	ret

000000000000ccc0 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    ccc0:	55                   	push   %rbp
    ccc1:	48 89 e5             	mov    %rsp,%rbp
    ccc4:	48 83 ec 10          	sub    $0x10,%rsp
    ccc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    cccc:	e8 8f 77 ff ff       	call   4460 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    ccd1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ccd7:	b9 00 00 00 00       	mov    $0x0,%ecx
    ccdc:	48 8d 05 5d c6 00 00 	lea    0xc65d(%rip),%rax        # 19340 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cce3:	48 89 c2             	mov    %rax,%rdx
    cce6:	be 58 02 00 00       	mov    $0x258,%esi
    cceb:	bf 20 03 00 00       	mov    $0x320,%edi
    ccf0:	e8 60 89 ff ff       	call   5655 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    ccf5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ccf9:	48 89 02             	mov    %rax,(%rdx)
}
    ccfc:	90                   	nop
    ccfd:	c9                   	leave
    ccfe:	c3                   	ret
    ccff:	90                   	nop

000000000000cd00 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    cd00:	55                   	push   %rbp
    cd01:	48 89 e5             	mov    %rsp,%rbp
    cd04:	53                   	push   %rbx
    cd05:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    cd0c:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    cd13:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cd17:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    cd1b:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    cd1f:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    cd23:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    cd2a:	48 8d 05 0f c6 00 00 	lea    0xc60f(%rip),%rax        # 19340 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cd31:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    cd35:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    cd3c:	48 8d 05 10 c6 00 00 	lea    0xc610(%rip),%rax        # 19353 <_ZN6__pstl9execution2v1L5unseqE+0x14>
    cd43:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    cd47:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    cd4e:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    cd55:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cd59:	48 89 c7             	mov    %rax,%rdi
    cd5c:	e8 17 a1 ff ff       	call   6e78 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    cd61:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cd65:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cd69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd6d:	48 89 c7             	mov    %rax,%rdi
    cd70:	e8 57 35 00 00       	call   102cc <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    cd75:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    cd7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd80:	48 89 c7             	mov    %rax,%rdi
    cd83:	e8 6a 35 00 00       	call   102f2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    cd88:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    cd8f:	eb 3c                	jmp    cdcd <_ZN9VulkanApp14createInstanceEv+0xcd>
    cd91:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cd98:	48 89 c7             	mov    %rax,%rdi
    cd9b:	e8 d6 35 00 00       	call   10376 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    cda0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    cda4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cdab:	48 8d 50 10          	lea    0x10(%rax),%rdx
    cdaf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cdb3:	48 89 c6             	mov    %rax,%rsi
    cdb6:	48 89 d7             	mov    %rdx,%rdi
    cdb9:	e8 ca 35 00 00       	call   10388 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    cdbe:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cdc5:	48 89 c7             	mov    %rax,%rdi
    cdc8:	e8 89 35 00 00       	call   10356 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    cdcd:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    cdd4:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cddb:	48 89 d6             	mov    %rdx,%rsi
    cdde:	48 89 c7             	mov    %rax,%rdi
    cde1:	e8 35 35 00 00       	call   1031b <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cde6:	84 c0                	test   %al,%al
    cde8:	75 a7                	jne    cd91 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    cdea:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cdee:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    cdf5:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    cdfc:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    ce00:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ce07:	48 89 c7             	mov    %rax,%rdi
    ce0a:	e8 ea f8 ff ff       	call   c6f9 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    ce0f:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    ce16:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    ce19:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ce20:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    ce27:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ce2b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    ce32:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce39:	48 83 c0 28          	add    $0x28,%rax
    ce3d:	48 89 c7             	mov    %rax,%rdi
    ce40:	e8 e7 35 00 00       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ce45:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    ce4b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce52:	48 83 c0 28          	add    $0x28,%rax
    ce56:	48 89 c7             	mov    %rax,%rdi
    ce59:	e8 f2 35 00 00       	call   10450 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    ce5e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    ce65:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce6c:	48 83 c0 10          	add    $0x10,%rax
    ce70:	48 89 c7             	mov    %rax,%rdi
    ce73:	e8 b4 35 00 00       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    ce78:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    ce7e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce85:	48 83 c0 10          	add    $0x10,%rax
    ce89:	48 89 c7             	mov    %rax,%rdi
    ce8c:	e8 e3 35 00 00       	call   10474 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    ce91:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    ce98:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ce9f:	be 00 00 00 00       	mov    $0x0,%esi
    cea4:	48 89 c7             	mov    %rax,%rdi
    cea7:	e8 ff 87 ff ff       	call   56ab <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    ceac:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    ceb3:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    ceb7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cebb:	48 89 c7             	mov    %rax,%rdi
    cebe:	e8 c5 33 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cec3:	eb 1a                	jmp    cedf <_ZN9VulkanApp14createInstanceEv+0x1df>
    cec5:	48 89 c3             	mov    %rax,%rbx
    cec8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cecc:	48 89 c7             	mov    %rax,%rdi
    cecf:	e8 b4 33 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ced4:	48 89 d8             	mov    %rbx,%rax
    ced7:	48 89 c7             	mov    %rax,%rdi
    ceda:	e8 e1 77 ff ff       	call   46c0 <_Unwind_Resume@plt>
    cedf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cee3:	c9                   	leave
    cee4:	c3                   	ret
    cee5:	90                   	nop

000000000000cee6 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    cee6:	55                   	push   %rbp
    cee7:	48 89 e5             	mov    %rsp,%rbp
    ceea:	41 54                	push   %r12
    ceec:	53                   	push   %rbx
    ceed:	48 83 ec 10          	sub    $0x10,%rsp
    cef1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    cef5:	e8 4b f6 ff ff       	call   c545 <_ZN3vkh27checkValidationLayerSupportEv>
    cefa:	0f b6 c0             	movzbl %al,%eax
    cefd:	85 c0                	test   %eax,%eax
    ceff:	0f 94 c0             	sete   %al
    cf02:	84 c0                	test   %al,%al
    cf04:	74 3b                	je     cf41 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    cf06:	bf 10 00 00 00       	mov    $0x10,%edi
    cf0b:	e8 50 72 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    cf10:	48 89 c3             	mov    %rax,%rbx
    cf13:	48 8d 05 46 c4 00 00 	lea    0xc446(%rip),%rax        # 19360 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    cf1a:	48 89 c6             	mov    %rax,%rsi
    cf1d:	48 89 df             	mov    %rbx,%rdi
    cf20:	e8 db 71 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    cf25:	48 8b 05 7c 90 01 00 	mov    0x1907c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    cf2c:	48 89 c2             	mov    %rax,%rdx
    cf2f:	48 8d 05 0a 8e 01 00 	lea    0x18e0a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    cf36:	48 89 c6             	mov    %rax,%rsi
    cf39:	48 89 df             	mov    %rbx,%rdi
    cf3c:	e8 1f 77 ff ff       	call   4660 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    cf41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf45:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf49:	48 89 c7             	mov    %rax,%rdi
    cf4c:	e8 5e f8 ff ff       	call   c7af <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    cf51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf55:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    cf59:	eb 16                	jmp    cf71 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    cf5b:	49 89 c4             	mov    %rax,%r12
    cf5e:	48 89 df             	mov    %rbx,%rdi
    cf61:	e8 ca 72 ff ff       	call   4230 <__cxa_free_exception@plt>
    cf66:	4c 89 e0             	mov    %r12,%rax
    cf69:	48 89 c7             	mov    %rax,%rdi
    cf6c:	e8 4f 77 ff ff       	call   46c0 <_Unwind_Resume@plt>
}
    cf71:	48 83 c4 10          	add    $0x10,%rsp
    cf75:	5b                   	pop    %rbx
    cf76:	41 5c                	pop    %r12
    cf78:	5d                   	pop    %rbp
    cf79:	c3                   	ret

000000000000cf7a <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    cf7a:	55                   	push   %rbp
    cf7b:	48 89 e5             	mov    %rsp,%rbp
    cf7e:	48 83 ec 10          	sub    $0x10,%rsp
    cf82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    cf86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf8a:	48 8b 08             	mov    (%rax),%rcx
    cf8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf91:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf95:	ba 00 00 00 00       	mov    $0x0,%edx
    cf9a:	48 89 ce             	mov    %rcx,%rsi
    cf9d:	48 89 c7             	mov    %rax,%rdi
    cfa0:	e8 31 88 ff ff       	call   57d6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    cfa5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cfa9:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    cfad:	90                   	nop
    cfae:	c9                   	leave
    cfaf:	c3                   	ret

000000000000cfb0 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    cfb0:	55                   	push   %rbp
    cfb1:	48 89 e5             	mov    %rsp,%rbp
    cfb4:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    cfbb:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    cfc2:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    cfc9:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    cfd0:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    cfd7:	48 89 d6             	mov    %rdx,%rsi
    cfda:	48 89 c7             	mov    %rax,%rdi
    cfdd:	e8 63 a1 ff ff       	call   7145 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    cfe2:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    cfe8:	83 f8 02             	cmp    $0x2,%eax
    cfeb:	0f 94 c0             	sete   %al
}
    cfee:	c9                   	leave
    cfef:	c3                   	ret

000000000000cff0 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    cff0:	55                   	push   %rbp
    cff1:	48 89 e5             	mov    %rsp,%rbp
    cff4:	53                   	push   %rbx
    cff5:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    cffc:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    d003:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    d00a:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    d011:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d015:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d01c:	48 89 d6             	mov    %rdx,%rsi
    d01f:	48 89 c7             	mov    %rax,%rdi
    d022:	e8 47 a2 ff ff       	call   726e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    d027:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d02b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d032:	48 89 d6             	mov    %rdx,%rsi
    d035:	48 89 c7             	mov    %rax,%rdi
    d038:	e8 65 a3 ff ff       	call   73a2 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    d03d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d044:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d048:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d04f:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    d056:	48 89 ce             	mov    %rcx,%rsi
    d059:	48 89 c7             	mov    %rax,%rdi
    d05c:	e8 7a a4 ff ff       	call   74db <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d061:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d068:	00 
    d069:	e9 c5 00 00 00       	jmp    d133 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d06e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d072:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d076:	48 89 d6             	mov    %rdx,%rsi
    d079:	48 89 c7             	mov    %rax,%rdi
    d07c:	e8 7f b4 ff ff       	call   8500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d081:	48 89 c7             	mov    %rax,%rdi
    d084:	e8 3d 34 00 00       	call   104c6 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d089:	84 c0                	test   %al,%al
    d08b:	74 48                	je     d0d5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d08d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d091:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d095:	48 89 d6             	mov    %rdx,%rsi
    d098:	48 89 c7             	mov    %rax,%rdi
    d09b:	e8 60 b4 ff ff       	call   8500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d0a0:	48 89 c7             	mov    %rax,%rdi
    d0a3:	e8 1e 34 00 00       	call   104c6 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d0a8:	84 c0                	test   %al,%al
    d0aa:	74 29                	je     d0d5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d0ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0b0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d0b7:	48 89 d6             	mov    %rdx,%rsi
    d0ba:	48 89 c7             	mov    %rax,%rdi
    d0bd:	e8 3e b4 ff ff       	call   8500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d0c2:	48 89 c7             	mov    %rax,%rdi
    d0c5:	e8 fc 33 00 00       	call   104c6 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d0ca:	84 c0                	test   %al,%al
    d0cc:	74 07                	je     d0d5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d0ce:	b8 01 00 00 00       	mov    $0x1,%eax
    d0d3:	eb 05                	jmp    d0da <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d0d5:	b8 00 00 00 00       	mov    $0x0,%eax
    d0da:	84 c0                	test   %al,%al
    d0dc:	74 50                	je     d12e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d0de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0e2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d0e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0e9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d0ed:	48 89 d6             	mov    %rdx,%rsi
    d0f0:	48 89 c7             	mov    %rax,%rdi
    d0f3:	e8 08 b4 ff ff       	call   8500 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d0f8:	48 89 c7             	mov    %rax,%rdi
    d0fb:	e8 e0 33 00 00       	call   104e0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d100:	48 89 c2             	mov    %rax,%rdx
    d103:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d107:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d10b:	48 89 ce             	mov    %rcx,%rsi
    d10e:	48 89 c7             	mov    %rax,%rdi
    d111:	e8 fc 33 00 00       	call   10512 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d116:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d11a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d121:	48 89 d6             	mov    %rdx,%rsi
    d124:	48 89 c7             	mov    %rax,%rdi
    d127:	e8 3c 34 00 00       	call   10568 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d12c:	eb 2f                	jmp    d15d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d12e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d133:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d137:	48 89 c7             	mov    %rax,%rdi
    d13a:	e8 59 33 00 00       	call   10498 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d13f:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d143:	0f 92 c0             	setb   %al
    d146:	84 c0                	test   %al,%al
    d148:	0f 85 20 ff ff ff    	jne    d06e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d14e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d155:	48 89 c7             	mov    %rax,%rdi
    d158:	e8 43 2e 00 00       	call   ffa0 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d15d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d164:	48 89 c7             	mov    %rax,%rdi
    d167:	e8 94 b2 ff ff       	call   8400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d16c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d170:	48 89 c7             	mov    %rax,%rdi
    d173:	e8 88 b2 ff ff       	call   8400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d178:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d17c:	48 89 c7             	mov    %rax,%rdi
    d17f:	e8 7c b2 ff ff       	call   8400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d184:	eb 3f                	jmp    d1c5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d186:	48 89 c3             	mov    %rax,%rbx
    d189:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d190:	48 89 c7             	mov    %rax,%rdi
    d193:	e8 68 b2 ff ff       	call   8400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d198:	eb 03                	jmp    d19d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d19a:	48 89 c3             	mov    %rax,%rbx
    d19d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d1a1:	48 89 c7             	mov    %rax,%rdi
    d1a4:	e8 57 b2 ff ff       	call   8400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d1a9:	eb 03                	jmp    d1ae <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d1ab:	48 89 c3             	mov    %rax,%rbx
    d1ae:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d1b2:	48 89 c7             	mov    %rax,%rdi
    d1b5:	e8 46 b2 ff ff       	call   8400 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d1ba:	48 89 d8             	mov    %rbx,%rax
    d1bd:	48 89 c7             	mov    %rax,%rdi
    d1c0:	e8 fb 74 ff ff       	call   46c0 <_Unwind_Resume@plt>
    d1c5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d1cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d1d0:	c9                   	leave
    d1d1:	c3                   	ret

000000000000d1d2 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d1d2:	55                   	push   %rbp
    d1d3:	48 89 e5             	mov    %rsp,%rbp
    d1d6:	41 54                	push   %r12
    d1d8:	53                   	push   %rbx
    d1d9:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d1e0:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d1e7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d1ee:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d1f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d1f6:	48 89 d6             	mov    %rdx,%rsi
    d1f9:	48 89 c7             	mov    %rax,%rdi
    d1fc:	e8 d5 9d ff ff       	call   6fd6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d201:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d208:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d209:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d20d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d211:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d215:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d219:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d21d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d221:	48 89 c7             	mov    %rax,%rdi
    d224:	e8 73 33 00 00       	call   1059c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d229:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d230:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d234:	48 89 c7             	mov    %rax,%rdi
    d237:	e8 86 33 00 00       	call   105c2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d23c:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d243:	e9 dd 00 00 00       	jmp    d325 <_ZN9VulkanApp12createDeviceEv+0x153>
    d248:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d24f:	48 89 c7             	mov    %rax,%rdi
    d252:	e8 ef 33 00 00       	call   10646 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d257:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d25b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d25f:	48 8b 10             	mov    (%rax),%rdx
    d262:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d269:	48 89 d6             	mov    %rdx,%rsi
    d26c:	48 89 c7             	mov    %rax,%rdi
    d26f:	e8 3c fd ff ff       	call   cfb0 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d274:	84 c0                	test   %al,%al
    d276:	74 41                	je     d2b9 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d278:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d27c:	48 8b 10             	mov    (%rax),%rdx
    d27f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d286:	48 89 d6             	mov    %rdx,%rsi
    d289:	48 89 c7             	mov    %rax,%rdi
    d28c:	e8 f9 02 00 00       	call   d58a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d291:	84 c0                	test   %al,%al
    d293:	74 24                	je     d2b9 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d295:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d299:	48 8b 10             	mov    (%rax),%rdx
    d29c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d2a3:	48 89 d6             	mov    %rdx,%rsi
    d2a6:	48 89 c7             	mov    %rax,%rdi
    d2a9:	e8 16 06 00 00       	call   d8c4 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d2ae:	84 c0                	test   %al,%al
    d2b0:	74 07                	je     d2b9 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d2b2:	b8 01 00 00 00       	mov    $0x1,%eax
    d2b7:	eb 05                	jmp    d2be <_ZN9VulkanApp12createDeviceEv+0xec>
    d2b9:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d2be:	84 c0                	test   %al,%al
    d2c0:	74 54                	je     d316 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d2c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d2c6:	48 8b 10             	mov    (%rax),%rdx
    d2c9:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d2d0:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d2d7:	48 89 ce             	mov    %rcx,%rsi
    d2da:	48 89 c7             	mov    %rax,%rdi
    d2dd:	e8 0e fd ff ff       	call   cff0 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d2e2:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d2e9:	48 89 c7             	mov    %rax,%rdi
    d2ec:	e8 67 33 00 00       	call   10658 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d2f1:	84 c0                	test   %al,%al
    d2f3:	74 21                	je     d316 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d2f5:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d2fc:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d300:	48 89 d6             	mov    %rdx,%rsi
    d303:	48 89 c7             	mov    %rax,%rdi
    d306:	e8 e7 2c 00 00       	call   fff2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d30b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d30f:	48 8b 00             	mov    (%rax),%rax
    d312:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d316:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d31d:	48 89 c7             	mov    %rax,%rdi
    d320:	e8 01 33 00 00       	call   10626 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d325:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d32c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d333:	48 89 d6             	mov    %rdx,%rsi
    d336:	48 89 c7             	mov    %rax,%rdi
    d339:	e8 ad 32 00 00       	call   105eb <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d33e:	84 c0                	test   %al,%al
    d340:	0f 85 02 ff ff ff    	jne    d248 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d346:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d34b:	75 3b                	jne    d388 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d34d:	bf 10 00 00 00       	mov    $0x10,%edi
    d352:	e8 09 6e ff ff       	call   4160 <__cxa_allocate_exception@plt>
    d357:	48 89 c3             	mov    %rax,%rbx
    d35a:	48 8d 05 27 c0 00 00 	lea    0xc027(%rip),%rax        # 19388 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d361:	48 89 c6             	mov    %rax,%rsi
    d364:	48 89 df             	mov    %rbx,%rdi
    d367:	e8 94 6d ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d36c:	48 8b 05 35 8c 01 00 	mov    0x18c35(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d373:	48 89 c2             	mov    %rax,%rdx
    d376:	48 8d 05 c3 89 01 00 	lea    0x189c3(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d37d:	48 89 c6             	mov    %rax,%rsi
    d380:	48 89 df             	mov    %rbx,%rdi
    d383:	e8 d8 72 ff ff       	call   4660 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d388:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d38c:	48 89 c7             	mov    %rax,%rdi
    d38f:	e8 88 2c 00 00       	call   1001c <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d394:	8b 00                	mov    (%rax),%eax
    d396:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d399:	f3 0f 10 05 0f c4 00 	movss  0xc40f(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    d3a0:	00 
    d3a1:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d3a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d3aa:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d3b1:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d3b8:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d3bd:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d3c4:	00 00 00 
  queueInfo.pNext = nullptr;
    d3c7:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d3ce:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d3d2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d3d5:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d3db:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d3e2:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d3e5:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d3e9:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d3ed:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d3f4:	b8 00 00 00 00       	mov    $0x0,%eax
    d3f9:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d3fe:	48 89 d7             	mov    %rdx,%rdi
    d401:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d404:	48 89 fa             	mov    %rdi,%rdx
    d407:	89 02                	mov    %eax,(%rdx)
    d409:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d40d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d411:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d418:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d41f:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d426:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d42d:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d434:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d435:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d43c:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d43f:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d446:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d44a:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d451:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d454:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d45b:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d462:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d469:	48 05 88 00 00 00    	add    $0x88,%rax
    d46f:	48 89 c7             	mov    %rax,%rdi
    d472:	e8 b5 2f 00 00       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d477:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d47d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d484:	48 05 88 00 00 00    	add    $0x88,%rax
    d48a:	48 89 c7             	mov    %rax,%rdi
    d48d:	e8 e2 2f 00 00       	call   10474 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d492:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d499:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d4a0:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d4a7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4ae:	48 83 c0 28          	add    $0x28,%rax
    d4b2:	48 89 c7             	mov    %rax,%rdi
    d4b5:	e8 72 2f 00 00       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d4ba:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d4c0:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4c7:	48 83 c0 28          	add    $0x28,%rax
    d4cb:	48 89 c7             	mov    %rax,%rdi
    d4ce:	e8 7d 2f 00 00       	call   10450 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d4d3:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d4da:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d4e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4e5:	ba 00 00 00 00       	mov    $0x0,%edx
    d4ea:	48 89 ce             	mov    %rcx,%rsi
    d4ed:	48 89 c7             	mov    %rax,%rdi
    d4f0:	e8 49 82 ff ff       	call   573e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d4f5:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d4fc:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d500:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d507:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d50b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d512:	48 8b 40 50          	mov    0x50(%rax),%rax
    d516:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d519:	48 89 d1             	mov    %rdx,%rcx
    d51c:	ba 00 00 00 00       	mov    $0x0,%edx
    d521:	48 89 c7             	mov    %rax,%rdi
    d524:	e8 07 70 ff ff       	call   4530 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d529:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d530:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d534:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d538:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d53f:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d542:	89 50 68             	mov    %edx,0x68(%rax)
}
    d545:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d549:	48 89 c7             	mov    %rax,%rdi
    d54c:	e8 af ab ff ff       	call   8100 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d551:	eb 2a                	jmp    d57d <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d553:	49 89 c4             	mov    %rax,%r12
    d556:	48 89 df             	mov    %rbx,%rdi
    d559:	e8 d2 6c ff ff       	call   4230 <__cxa_free_exception@plt>
    d55e:	4c 89 e3             	mov    %r12,%rbx
    d561:	eb 03                	jmp    d566 <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d563:	48 89 c3             	mov    %rax,%rbx
    d566:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d56a:	48 89 c7             	mov    %rax,%rdi
    d56d:	e8 8e ab ff ff       	call   8100 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d572:	48 89 d8             	mov    %rbx,%rax
    d575:	48 89 c7             	mov    %rax,%rdi
    d578:	e8 43 71 ff ff       	call   46c0 <_Unwind_Resume@plt>
    d57d:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d584:	5b                   	pop    %rbx
    d585:	41 5c                	pop    %r12
    d587:	5d                   	pop    %rbp
    d588:	c3                   	ret
    d589:	90                   	nop

000000000000d58a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d58a:	55                   	push   %rbp
    d58b:	48 89 e5             	mov    %rsp,%rbp
    d58e:	53                   	push   %rbx
    d58f:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d596:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d59d:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    d5a4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d5ab:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    d5b2:	ba 00 00 00 00       	mov    $0x0,%edx
    d5b7:	48 89 ce             	mov    %rcx,%rsi
    d5ba:	48 89 c7             	mov    %rax,%rdi
    d5bd:	e8 3f 97 ff ff       	call   6d01 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    d5c2:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d5c9:	48 89 c7             	mov    %rax,%rdi
    d5cc:	e8 c7 2a 00 00       	call   10098 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    d5d1:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d5d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d5dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5e0:	48 89 c7             	mov    %rax,%rdi
    d5e3:	e8 86 31 00 00       	call   1076e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d5e8:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    d5ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5f3:	48 89 c7             	mov    %rax,%rdi
    d5f6:	e8 99 31 00 00       	call   10794 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d5fb:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    d602:	e9 8c 00 00 00       	jmp    d693 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    d607:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d60e:	48 89 c7             	mov    %rax,%rdi
    d611:	e8 06 32 00 00       	call   1081c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d616:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    d61a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d621:	48 89 c7             	mov    %rax,%rdi
    d624:	e8 a7 70 ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    d629:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d62d:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    d634:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d63b:	48 89 ce             	mov    %rcx,%rsi
    d63e:	48 89 c7             	mov    %rax,%rdi
    d641:	e8 ca 74 ff ff       	call   4b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d646:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    d64d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d654:	48 89 d6             	mov    %rdx,%rsi
    d657:	48 89 c7             	mov    %rax,%rdi
    d65a:	e8 cf 31 00 00       	call   1082e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d65f:	8b 10                	mov    (%rax),%edx
    d661:	83 c2 01             	add    $0x1,%edx
    d664:	89 10                	mov    %edx,(%rax)
    d666:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d66d:	48 89 c7             	mov    %rax,%rdi
    d670:	e8 5b 6b ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d675:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d67c:	48 89 c7             	mov    %rax,%rdi
    d67f:	e8 8c 6d ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    d684:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d68b:	48 89 c7             	mov    %rax,%rdi
    d68e:	e8 65 31 00 00       	call   107f8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d693:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    d69a:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d6a1:	48 89 d6             	mov    %rdx,%rsi
    d6a4:	48 89 c7             	mov    %rax,%rdi
    d6a7:	e8 11 31 00 00       	call   107bd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d6ac:	84 c0                	test   %al,%al
    d6ae:	0f 85 53 ff ff ff    	jne    d607 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    d6b4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    d6bb:	48 05 88 00 00 00    	add    $0x88,%rax
    d6c1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d6c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d6c9:	48 89 c7             	mov    %rax,%rdi
    d6cc:	e8 fb 2b 00 00       	call   102cc <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d6d1:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    d6d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d6dc:	48 89 c7             	mov    %rax,%rdi
    d6df:	e8 0e 2c 00 00       	call   102f2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d6e4:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    d6eb:	e9 ed 00 00 00       	jmp    d7dd <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    d6f0:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d6f7:	48 89 c7             	mov    %rax,%rdi
    d6fa:	e8 77 2c 00 00       	call   10376 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d6ff:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    d703:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d707:	48 89 c7             	mov    %rax,%rdi
    d70a:	e8 c1 6f ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    d70f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d713:	48 8b 08             	mov    (%rax),%rcx
    d716:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    d71a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d721:	48 89 ce             	mov    %rcx,%rsi
    d724:	48 89 c7             	mov    %rax,%rdi
    d727:	e8 e4 73 ff ff       	call   4b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d72c:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d733:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d73a:	48 89 d6             	mov    %rdx,%rsi
    d73d:	48 89 c7             	mov    %rax,%rdi
    d740:	e8 e9 30 00 00       	call   1082e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d745:	8b 10                	mov    (%rax),%edx
    d747:	83 c2 01             	add    $0x1,%edx
    d74a:	89 10                	mov    %edx,(%rax)
    d74c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d753:	48 89 c7             	mov    %rax,%rdi
    d756:	e8 75 6a ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d75b:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d75f:	48 89 c7             	mov    %rax,%rdi
    d762:	e8 a9 6c ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    d767:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d76b:	48 89 c7             	mov    %rax,%rdi
    d76e:	e8 5d 6f ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    d773:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d777:	48 8b 08             	mov    (%rax),%rcx
    d77a:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d77e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d782:	48 89 ce             	mov    %rcx,%rsi
    d785:	48 89 c7             	mov    %rax,%rdi
    d788:	e8 83 73 ff ff       	call   4b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d78d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d791:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d798:	48 89 d6             	mov    %rdx,%rsi
    d79b:	48 89 c7             	mov    %rax,%rdi
    d79e:	e8 8b 30 00 00       	call   1082e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d7a3:	8b 00                	mov    (%rax),%eax
    d7a5:	83 f8 01             	cmp    $0x1,%eax
    d7a8:	0f 96 c3             	setbe  %bl
    d7ab:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d7af:	48 89 c7             	mov    %rax,%rdi
    d7b2:	e8 19 6a ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d7b7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d7bb:	48 89 c7             	mov    %rax,%rdi
    d7be:	e8 4d 6c ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    d7c3:	84 db                	test   %bl,%bl
    d7c5:	74 07                	je     d7ce <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    d7c7:	bb 00 00 00 00       	mov    $0x0,%ebx
    d7cc:	eb 35                	jmp    d803 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    d7ce:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d7d5:	48 89 c7             	mov    %rax,%rdi
    d7d8:	e8 79 2b 00 00       	call   10356 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d7dd:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    d7e4:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d7eb:	48 89 d6             	mov    %rdx,%rsi
    d7ee:	48 89 c7             	mov    %rax,%rdi
    d7f1:	e8 25 2b 00 00       	call   1031b <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d7f6:	84 c0                	test   %al,%al
    d7f8:	0f 85 f2 fe ff ff    	jne    d6f0 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    d7fe:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    d803:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d80a:	48 89 c7             	mov    %rax,%rdi
    d80d:	e8 a2 28 00 00       	call   100b4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d812:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d819:	48 89 c7             	mov    %rax,%rdi
    d81c:	e8 55 a6 ff ff       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d821:	89 d8                	mov    %ebx,%eax
    d823:	e9 96 00 00 00       	jmp    d8be <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    d828:	48 89 c3             	mov    %rax,%rbx
    d82b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d832:	48 89 c7             	mov    %rax,%rdi
    d835:	e8 96 69 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d83a:	eb 03                	jmp    d83f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    d83c:	48 89 c3             	mov    %rax,%rbx
    d83f:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d846:	48 89 c7             	mov    %rax,%rdi
    d849:	e8 c2 6b ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    d84e:	eb 45                	jmp    d895 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    d850:	48 89 c3             	mov    %rax,%rbx
    d853:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d85a:	48 89 c7             	mov    %rax,%rdi
    d85d:	e8 6e 69 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d862:	eb 03                	jmp    d867 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    d864:	48 89 c3             	mov    %rax,%rbx
    d867:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d86b:	48 89 c7             	mov    %rax,%rdi
    d86e:	e8 9d 6b ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    d873:	eb 20                	jmp    d895 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    d875:	48 89 c3             	mov    %rax,%rbx
    d878:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d87c:	48 89 c7             	mov    %rax,%rdi
    d87f:	e8 4c 69 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d884:	eb 03                	jmp    d889 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    d886:	48 89 c3             	mov    %rax,%rbx
    d889:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d88d:	48 89 c7             	mov    %rax,%rdi
    d890:	e8 7b 6b ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
}
    d895:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d89c:	48 89 c7             	mov    %rax,%rdi
    d89f:	e8 10 28 00 00       	call   100b4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d8a4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d8ab:	48 89 c7             	mov    %rax,%rdi
    d8ae:	e8 c3 a5 ff ff       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d8b3:	48 89 d8             	mov    %rbx,%rax
    d8b6:	48 89 c7             	mov    %rax,%rdi
    d8b9:	e8 02 6e ff ff       	call   46c0 <_Unwind_Resume@plt>
    d8be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d8c2:	c9                   	leave
    d8c3:	c3                   	ret

000000000000d8c4 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    d8c4:	55                   	push   %rbp
    d8c5:	48 89 e5             	mov    %rsp,%rbp
    d8c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    d8d0:	b8 01 00 00 00       	mov    $0x1,%eax
}
    d8d5:	5d                   	pop    %rbp
    d8d6:	c3                   	ret
    d8d7:	90                   	nop

000000000000d8d8 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    d8d8:	55                   	push   %rbp
    d8d9:	48 89 e5             	mov    %rsp,%rbp
    d8dc:	41 54                	push   %r12
    d8de:	53                   	push   %rbx
    d8df:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    d8e6:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    d8ed:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    d8f4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d8fb:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d8ff:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d906:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d90a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d90e:	48 89 ce             	mov    %rcx,%rsi
    d911:	48 89 c7             	mov    %rax,%rdi
    d914:	e8 32 9d ff ff       	call   764b <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    d919:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d920:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d924:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d92b:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d92f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d936:	48 89 ce             	mov    %rcx,%rsi
    d939:	48 89 c7             	mov    %rax,%rdi
    d93c:	e8 b8 9d ff ff       	call   76f9 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    d941:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d948:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d94c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d953:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d957:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d95e:	48 89 ce             	mov    %rcx,%rsi
    d961:	48 89 c7             	mov    %rax,%rdi
    d964:	e8 07 9f ff ff       	call   7870 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    d969:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d970:	48 89 c6             	mov    %rax,%rsi
    d973:	b8 00 00 00 00       	mov    $0x0,%eax
    d978:	ba 0d 00 00 00       	mov    $0xd,%edx
    d97d:	48 89 f7             	mov    %rsi,%rdi
    d980:	48 89 d1             	mov    %rdx,%rcx
    d983:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    d986:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d98d:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    d993:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d99a:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d9a1:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    d9a2:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d9a9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d9ad:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9b4:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    d9b8:	8b 45 80             	mov    -0x80(%rbp),%eax
    d9bb:	83 c0 01             	add    $0x1,%eax
    d9be:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    d9c1:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d9c4:	85 c0                	test   %eax,%eax
    d9c6:	74 0e                	je     d9d6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    d9c8:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    d9cb:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    d9ce:	73 06                	jae    d9d6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    d9d0:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d9d3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    d9d6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9dd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    d9e0:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    d9e3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d9ea:	48 89 c7             	mov    %rax,%rdi
    d9ed:	e8 40 2f 00 00       	call   10932 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    d9f2:	84 c0                	test   %al,%al
    d9f4:	74 3b                	je     da31 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    d9f6:	bf 10 00 00 00       	mov    $0x10,%edi
    d9fb:	e8 60 67 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    da00:	48 89 c3             	mov    %rax,%rbx
    da03:	48 8d 05 a2 b9 00 00 	lea    0xb9a2(%rip),%rax        # 193ac <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    da0a:	48 89 c6             	mov    %rax,%rsi
    da0d:	48 89 df             	mov    %rbx,%rdi
    da10:	e8 eb 66 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    da15:	48 8b 05 8c 85 01 00 	mov    0x1858c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    da1c:	48 89 c2             	mov    %rax,%rdx
    da1f:	48 8d 05 1a 83 01 00 	lea    0x1831a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    da26:	48 89 c6             	mov    %rax,%rsi
    da29:	48 89 df             	mov    %rbx,%rdi
    da2c:	e8 2f 6c ff ff       	call   4660 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    da31:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da38:	be 00 00 00 00       	mov    $0x0,%esi
    da3d:	48 89 c7             	mov    %rax,%rdi
    da40:	e8 2f 2f 00 00       	call   10974 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    da45:	8b 10                	mov    (%rax),%edx
    da47:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da4e:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    da51:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da58:	be 00 00 00 00       	mov    $0x0,%esi
    da5d:	48 89 c7             	mov    %rax,%rdi
    da60:	e8 0f 2f 00 00       	call   10974 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    da65:	8b 50 04             	mov    0x4(%rax),%edx
    da68:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da6f:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    da72:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da79:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    da7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da81:	48 89 c7             	mov    %rax,%rdi
    da84:	e8 0b 2f 00 00       	call   10994 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    da89:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    da90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da94:	48 89 c7             	mov    %rax,%rdi
    da97:	e8 1e 2f 00 00       	call   109ba <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    da9c:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    daa3:	eb 5b                	jmp    db00 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    daa5:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    daac:	48 89 c7             	mov    %rax,%rdi
    daaf:	e8 8a 2f 00 00       	call   10a3e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dab4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dab8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dabc:	8b 00                	mov    (%rax),%eax
    dabe:	83 f8 2b             	cmp    $0x2b,%eax
    dac1:	75 2e                	jne    daf1 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    dac3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dac7:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    daca:	85 c0                	test   %eax,%eax
    dacc:	75 23                	jne    daf1 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    dace:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dad2:	8b 10                	mov    (%rax),%edx
    dad4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dadb:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    dade:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dae2:	8b 50 04             	mov    0x4(%rax),%edx
    dae5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    daec:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    daef:	eb 2c                	jmp    db1d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    daf1:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    daf8:	48 89 c7             	mov    %rax,%rdi
    dafb:	e8 1e 2f 00 00       	call   10a1e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    db00:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    db07:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    db0e:	48 89 d6             	mov    %rdx,%rsi
    db11:	48 89 c7             	mov    %rax,%rdi
    db14:	e8 ca 2e 00 00       	call   109e3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    db19:	84 c0                	test   %al,%al
    db1b:	75 88                	jne    daa5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    db1d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db24:	8b 50 24             	mov    0x24(%rax),%edx
    db27:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db2e:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    db31:	8b 45 88             	mov    -0x78(%rbp),%eax
    db34:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    db37:	8b 45 8c             	mov    -0x74(%rbp),%eax
    db3a:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    db3d:	8b 45 98             	mov    -0x68(%rbp),%eax
    db40:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    db43:	73 06                	jae    db4b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    db45:	8b 45 98             	mov    -0x68(%rbp),%eax
    db48:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    db4b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    db4e:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    db51:	73 06                	jae    db59 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    db53:	8b 45 9c             	mov    -0x64(%rbp),%eax
    db56:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    db59:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db60:	8b 55 e8             	mov    -0x18(%rbp),%edx
    db63:	89 50 2c             	mov    %edx,0x2c(%rax)
    db66:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db6d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    db70:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    db73:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db7a:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    db81:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    db85:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    db89:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db90:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    db97:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db9e:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    dba5:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    dbac:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dbb3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    dbb7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dbbb:	48 89 c7             	mov    %rax,%rdi
    dbbe:	e8 8d 2e 00 00       	call   10a50 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    dbc3:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    dbca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dbce:	48 89 c7             	mov    %rax,%rdi
    dbd1:	e8 a0 2e 00 00       	call   10a76 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    dbd6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    dbdd:	eb 3c                	jmp    dc1b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    dbdf:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dbe6:	48 89 c7             	mov    %rax,%rdi
    dbe9:	e8 0c 2f 00 00       	call   10afa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dbee:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    dbf2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dbf6:	8b 00                	mov    (%rax),%eax
    dbf8:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    dbfb:	75 0f                	jne    dc0c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    dbfd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc04:	8b 55 cc             	mov    -0x34(%rbp),%edx
    dc07:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    dc0a:	eb 2c                	jmp    dc38 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    dc0c:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dc13:	48 89 c7             	mov    %rax,%rdi
    dc16:	e8 bf 2e 00 00       	call   10ada <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    dc1b:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    dc22:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dc29:	48 89 d6             	mov    %rdx,%rsi
    dc2c:	48 89 c7             	mov    %rax,%rdi
    dc2f:	e8 6b 2e 00 00       	call   10a9f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dc34:	84 c0                	test   %al,%al
    dc36:	75 a7                	jne    dbdf <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    dc38:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc3f:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    dc46:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc4d:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    dc54:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc5b:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    dc62:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc69:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    dc70:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    dc71:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    dc74:	83 e0 01             	and    $0x1,%eax
    dc77:	85 c0                	test   %eax,%eax
    dc79:	74 1e                	je     dc99 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    dc7b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc82:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    dc89:	8b 45 ac             	mov    -0x54(%rbp),%eax
    dc8c:	83 e0 01             	and    $0x1,%eax
    dc8f:	85 c0                	test   %eax,%eax
    dc91:	0f 84 9b 00 00 00    	je     dd32 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    dc97:	eb 3b                	jmp    dcd4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dc99:	bf 10 00 00 00       	mov    $0x10,%edi
    dc9e:	e8 bd 64 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    dca3:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dca6:	48 8d 05 23 b7 00 00 	lea    0xb723(%rip),%rax        # 193d0 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    dcad:	48 89 c6             	mov    %rax,%rsi
    dcb0:	48 89 df             	mov    %rbx,%rdi
    dcb3:	e8 48 64 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dcb8:	48 8b 05 e9 82 01 00 	mov    0x182e9(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dcbf:	48 89 c2             	mov    %rax,%rdx
    dcc2:	48 8d 05 77 80 01 00 	lea    0x18077(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dcc9:	48 89 c6             	mov    %rax,%rsi
    dccc:	48 89 df             	mov    %rbx,%rdi
    dccf:	e8 8c 69 ff ff       	call   4660 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    dcd4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dcdb:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    dce2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dce9:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    dcf0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dcf7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dcfe:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    dcff:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd06:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    dd0d:	00 

  return swapchainCreateInfo;
    dd0e:	90                   	nop
}
    dd0f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dd16:	48 89 c7             	mov    %rax,%rdi
    dd19:	e8 f6 aa ff ff       	call   8814 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    dd1e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dd25:	48 89 c7             	mov    %rax,%rdi
    dd28:	e8 83 a9 ff ff       	call   86b0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    dd2d:	e9 9c 00 00 00       	jmp    ddce <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dd32:	bf 10 00 00 00       	mov    $0x10,%edi
    dd37:	e8 24 64 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    dd3c:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dd3f:	48 8d 05 c2 b6 00 00 	lea    0xb6c2(%rip),%rax        # 19408 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    dd46:	48 89 c6             	mov    %rax,%rsi
    dd49:	48 89 df             	mov    %rbx,%rdi
    dd4c:	e8 af 63 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dd51:	48 8b 05 50 82 01 00 	mov    0x18250(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dd58:	48 89 c2             	mov    %rax,%rdx
    dd5b:	48 8d 05 de 7f 01 00 	lea    0x17fde(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dd62:	48 89 c6             	mov    %rax,%rsi
    dd65:	48 89 df             	mov    %rbx,%rdi
    dd68:	e8 f3 68 ff ff       	call   4660 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    dd6d:	49 89 c4             	mov    %rax,%r12
    dd70:	48 89 df             	mov    %rbx,%rdi
    dd73:	e8 b8 64 ff ff       	call   4230 <__cxa_free_exception@plt>
    dd78:	4c 89 e3             	mov    %r12,%rbx
    dd7b:	eb 23                	jmp    dda0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dd7d:	49 89 c4             	mov    %rax,%r12
    dd80:	48 89 df             	mov    %rbx,%rdi
    dd83:	e8 a8 64 ff ff       	call   4230 <__cxa_free_exception@plt>
    dd88:	4c 89 e3             	mov    %r12,%rbx
    dd8b:	eb 13                	jmp    dda0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dd8d:	49 89 c4             	mov    %rax,%r12
    dd90:	48 89 df             	mov    %rbx,%rdi
    dd93:	e8 98 64 ff ff       	call   4230 <__cxa_free_exception@plt>
    dd98:	4c 89 e3             	mov    %r12,%rbx
    dd9b:	eb 03                	jmp    dda0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    dd9d:	48 89 c3             	mov    %rax,%rbx
    dda0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dda7:	48 89 c7             	mov    %rax,%rdi
    ddaa:	e8 65 aa ff ff       	call   8814 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ddaf:	eb 03                	jmp    ddb4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    ddb1:	48 89 c3             	mov    %rax,%rbx
    ddb4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ddbb:	48 89 c7             	mov    %rax,%rdi
    ddbe:	e8 ed a8 ff ff       	call   86b0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    ddc3:	48 89 d8             	mov    %rbx,%rax
    ddc6:	48 89 c7             	mov    %rax,%rdi
    ddc9:	e8 f2 68 ff ff       	call   46c0 <_Unwind_Resume@plt>
    ddce:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddd5:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    dddc:	5b                   	pop    %rbx
    dddd:	41 5c                	pop    %r12
    dddf:	5d                   	pop    %rbp
    dde0:	c3                   	ret
    dde1:	90                   	nop

000000000000dde2 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    dde2:	55                   	push   %rbp
    dde3:	48 89 e5             	mov    %rsp,%rbp
    dde6:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    ddea:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    ddee:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ddf2:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ddf6:	48 89 d6             	mov    %rdx,%rsi
    ddf9:	48 89 c7             	mov    %rax,%rdi
    ddfc:	e8 d7 fa ff ff       	call   d8d8 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    de01:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    de05:	48 8b 40 50          	mov    0x50(%rax),%rax
    de09:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    de0d:	ba 00 00 00 00       	mov    $0x0,%edx
    de12:	48 89 ce             	mov    %rcx,%rsi
    de15:	48 89 c7             	mov    %rax,%rdi
    de18:	e8 51 7a ff ff       	call   586e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    de1d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    de21:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    de25:	90                   	nop
    de26:	c9                   	leave
    de27:	c3                   	ret

000000000000de28 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    de28:	55                   	push   %rbp
    de29:	48 89 e5             	mov    %rsp,%rbp
    de2c:	53                   	push   %rbx
    de2d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    de34:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    de3b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de42:	48 8b 50 70          	mov    0x70(%rax),%rdx
    de46:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de4d:	48 8b 48 50          	mov    0x50(%rax),%rcx
    de51:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de55:	48 89 ce             	mov    %rcx,%rsi
    de58:	48 89 c7             	mov    %rax,%rdi
    de5b:	e8 87 9b ff ff       	call   79e7 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    de60:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de67:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    de6e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de72:	48 89 c6             	mov    %rax,%rsi
    de75:	48 89 d7             	mov    %rdx,%rdi
    de78:	e8 8f 2c 00 00       	call   10b0c <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    de7d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de81:	48 89 c7             	mov    %rax,%rdi
    de84:	e8 ef aa ff ff       	call   8978 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    de89:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de90:	48 05 b8 00 00 00    	add    $0xb8,%rax
    de96:	48 89 c7             	mov    %rax,%rdi
    de99:	e8 a6 2c 00 00       	call   10b44 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    de9e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    dea2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dea9:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    deb0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    deb4:	48 89 c6             	mov    %rax,%rsi
    deb7:	48 89 d7             	mov    %rdx,%rdi
    deba:	e8 a9 2c 00 00       	call   10b68 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    debf:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    dec6:	00 
    dec7:	e9 f1 00 00 00       	jmp    dfbd <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    decc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ded0:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ded7:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    dedb:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    dedf:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    dee3:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    dee7:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    deee:	00 00 00 
    imageViewInfo.pNext = nullptr;
    def1:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    def8:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    defc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df03:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    df0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df0e:	48 89 c6             	mov    %rax,%rsi
    df11:	48 89 d7             	mov    %rdx,%rdi
    df14:	e8 d5 2c 00 00       	call   10bee <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    df19:	48 8b 00             	mov    (%rax),%rax
    df1c:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    df20:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    df27:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df2e:	8b 40 78             	mov    0x78(%rax),%eax
    df31:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    df34:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    df3b:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    df42:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    df49:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    df50:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    df57:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    df5e:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    df65:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    df6c:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    df73:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df7a:	48 8b 40 50          	mov    0x50(%rax),%rax
    df7e:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    df85:	ba 00 00 00 00       	mov    $0x0,%edx
    df8a:	48 89 ce             	mov    %rcx,%rsi
    df8d:	48 89 c7             	mov    %rax,%rdi
    df90:	e8 79 79 ff ff       	call   590e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    df95:	48 89 c3             	mov    %rax,%rbx
    df98:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df9f:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    dfa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfaa:	48 89 c6             	mov    %rax,%rsi
    dfad:	48 89 d7             	mov    %rdx,%rdi
    dfb0:	e8 59 2c 00 00       	call   10c0e <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    dfb5:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    dfb8:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    dfbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfc1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    dfc5:	0f 82 01 ff ff ff    	jb     decc <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    dfcb:	90                   	nop
    dfcc:	90                   	nop
    dfcd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dfd1:	c9                   	leave
    dfd2:	c3                   	ret
    dfd3:	90                   	nop

000000000000dfd4 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    dfd4:	55                   	push   %rbp
    dfd5:	48 89 e5             	mov    %rsp,%rbp
    dfd8:	41 55                	push   %r13
    dfda:	41 54                	push   %r12
    dfdc:	53                   	push   %rbx
    dfdd:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
    dfe4:	48 89 bd e8 fb ff ff 	mov    %rdi,-0x418(%rbp)
  std::vector<Shader> shaderModules{1};
    dfeb:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    dff2:	48 89 c7             	mov    %rax,%rdi
    dff5:	e8 34 2c 00 00       	call   10c2e <_ZNSaI6ShaderEC1Ev>
    dffa:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    e001:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e008:	be 01 00 00 00       	mov    $0x1,%esi
    e00d:	48 89 c7             	mov    %rax,%rdi
    e010:	e8 51 2c 00 00       	call   10c66 <_ZNSt6vectorI6ShaderSaIS0_EEC1EmRKS1_>
    e015:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    e01c:	48 89 c7             	mov    %rax,%rdi
    e01f:	e8 26 2c 00 00       	call   10c4a <_ZNSaI6ShaderED1Ev>
  shaderModules[0].vertex =
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    e024:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    e028:	48 89 c7             	mov    %rax,%rdi
    e02b:	e8 a0 66 ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    e030:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    e034:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e03b:	48 8d 0d fe b3 00 00 	lea    0xb3fe(%rip),%rcx        # 19440 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    e042:	48 89 ce             	mov    %rcx,%rsi
    e045:	48 89 c7             	mov    %rax,%rdi
    e048:	e8 c3 6a ff ff       	call   4b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e04d:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e054:	48 8b 40 50          	mov    0x50(%rax),%rax
    e058:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
    e05f:	ba 00 00 00 00       	mov    $0x0,%edx
    e064:	48 89 ce             	mov    %rcx,%rsi
    e067:	48 89 c7             	mov    %rax,%rdi
    e06a:	e8 0f 7a ff ff       	call   5a7e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e06f:	48 89 c3             	mov    %rax,%rbx
  shaderModules[0].vertex =
    e072:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e079:	be 00 00 00 00       	mov    $0x0,%esi
    e07e:	48 89 c7             	mov    %rax,%rdi
    e081:	e8 9a 2c 00 00       	call   10d20 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e086:	48 89 18             	mov    %rbx,(%rax)
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    e089:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e090:	48 89 c7             	mov    %rax,%rdi
    e093:	e8 38 61 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e098:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    e09c:	48 89 c7             	mov    %rax,%rdi
    e09f:	e8 6c 63 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
  shaderModules[0].fragment =
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e0a4:	48 8d 45 b3          	lea    -0x4d(%rbp),%rax
    e0a8:	48 89 c7             	mov    %rax,%rdi
    e0ab:	e8 20 66 ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    e0b0:	48 8d 55 b3          	lea    -0x4d(%rbp),%rdx
    e0b4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e0b8:	48 8d 0d a1 b3 00 00 	lea    0xb3a1(%rip),%rcx        # 19460 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    e0bf:	48 89 ce             	mov    %rcx,%rsi
    e0c2:	48 89 c7             	mov    %rax,%rdi
    e0c5:	e8 46 6a ff ff       	call   4b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e0ca:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e0d1:	48 8b 40 50          	mov    0x50(%rax),%rax
    e0d5:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e0d9:	ba 00 00 00 00       	mov    $0x0,%edx
    e0de:	48 89 ce             	mov    %rcx,%rsi
    e0e1:	48 89 c7             	mov    %rax,%rdi
    e0e4:	e8 95 79 ff ff       	call   5a7e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e0e9:	48 89 c3             	mov    %rax,%rbx
  shaderModules[0].fragment =
    e0ec:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e0f3:	be 00 00 00 00       	mov    $0x0,%esi
    e0f8:	48 89 c7             	mov    %rax,%rdi
    e0fb:	e8 20 2c 00 00       	call   10d20 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e100:	48 89 58 08          	mov    %rbx,0x8(%rax)
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e104:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e108:	48 89 c7             	mov    %rax,%rdi
    e10b:	e8 c0 60 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e110:	48 8d 45 b3          	lea    -0x4d(%rbp),%rax
    e114:	48 89 c7             	mov    %rax,%rdi
    e117:	e8 f4 62 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo> graphicsPipelineCreateInfos{};
  for (size_t i = 0; i < shaderModules.size(); ++i) {
    e11c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    e123:	00 
    e124:	e9 00 07 00 00       	jmp    e829 <_ZN9VulkanApp22createGraphicsPipelineEv+0x855>
    /*  */
    VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e129:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e12d:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    e134:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
    e13b:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    vertShaderStageInfo.sType =
    e142:	c7 85 50 fc ff ff 12 	movl   $0x12,-0x3b0(%rbp)
    e149:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e14c:	c7 85 64 fc ff ff 01 	movl   $0x1,-0x39c(%rbp)
    e153:	00 00 00 
    vertShaderStageInfo.module = shaderModules[i].vertex;
    e156:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e15a:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e161:	48 89 d6             	mov    %rdx,%rsi
    e164:	48 89 c7             	mov    %rax,%rdi
    e167:	e8 b4 2b 00 00       	call   10d20 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e16c:	48 8b 00             	mov    (%rax),%rax
    e16f:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
    vertShaderStageInfo.pName = "main";
    e176:	48 8d 05 03 b3 00 00 	lea    0xb303(%rip),%rax        # 19480 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e17d:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
    vertShaderStageInfo.pSpecializationInfo = nullptr;
    e184:	48 c7 85 78 fc ff ff 	movq   $0x0,-0x388(%rbp)
    e18b:	00 00 00 00 

    VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e18f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e193:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    e19a:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    e1a1:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
    fragShaderStageInfo.sType =
    e1a8:	c7 85 80 fc ff ff 12 	movl   $0x12,-0x380(%rbp)
    e1af:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e1b2:	c7 85 94 fc ff ff 10 	movl   $0x10,-0x36c(%rbp)
    e1b9:	00 00 00 
    fragShaderStageInfo.module = shaderModules[i].vertex;
    e1bc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e1c0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e1c7:	48 89 d6             	mov    %rdx,%rsi
    e1ca:	48 89 c7             	mov    %rax,%rdi
    e1cd:	e8 4e 2b 00 00       	call   10d20 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e1d2:	48 8b 00             	mov    (%rax),%rax
    e1d5:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
    fragShaderStageInfo.pName = "main";
    e1dc:	48 8d 05 9d b2 00 00 	lea    0xb29d(%rip),%rax        # 19480 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e1e3:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
    fragShaderStageInfo.pSpecializationInfo = nullptr;
    e1ea:	48 c7 85 a8 fc ff ff 	movq   $0x0,-0x358(%rbp)
    e1f1:	00 00 00 00 

    VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                      fragShaderStageInfo};
    e1f5:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
    e1fc:	48 8b 95 58 fc ff ff 	mov    -0x3a8(%rbp),%rdx
    e203:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e20a:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e211:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
    e218:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
    e21f:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e226:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e22d:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
    e234:	48 8b 95 78 fc ff ff 	mov    -0x388(%rbp),%rdx
    e23b:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e242:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e249:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
    e250:	48 8b 95 88 fc ff ff 	mov    -0x378(%rbp),%rdx
    e257:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e25e:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e265:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
    e26c:	48 8b 95 98 fc ff ff 	mov    -0x368(%rbp),%rdx
    e273:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e27a:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e281:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
    e288:	48 8b 95 a8 fc ff ff 	mov    -0x358(%rbp),%rdx
    e28f:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e296:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

    /*  */
    VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e29d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2a1:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e2a8:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
    e2af:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    vertInputInfo.sType =
    e2b6:	c7 85 b0 fc ff ff 13 	movl   $0x13,-0x350(%rbp)
    e2bd:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
    vertInputInfo.vertexBindingDescriptionCount = 0;
    e2c0:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    e2c7:	00 00 00 
    vertInputInfo.pVertexBindingDescriptions = nullptr;
    e2ca:	48 c7 85 c8 fc ff ff 	movq   $0x0,-0x338(%rbp)
    e2d1:	00 00 00 00 
    vertInputInfo.vertexAttributeDescriptionCount = 0;
    e2d5:	c7 85 d0 fc ff ff 00 	movl   $0x0,-0x330(%rbp)
    e2dc:	00 00 00 
    vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e2df:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
    e2e6:	00 00 00 00 

    /*  */
    VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e2ea:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2ee:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    e2f5:	0f 29 85 00 fc ff ff 	movaps %xmm0,-0x400(%rbp)
    inputAssemblyInfo.sType =
    e2fc:	c7 85 f0 fb ff ff 14 	movl   $0x14,-0x410(%rbp)
    e303:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
    inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e306:	c7 85 04 fc ff ff 03 	movl   $0x3,-0x3fc(%rbp)
    e30d:	00 00 00 
    inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e310:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    e317:	00 00 00 

    /*  */
    VkViewport viewport{};
    e31a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e31e:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    e325:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
    e32c:	ff 
    viewport.x = 0.0f;
    e32d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e331:	f3 0f 11 85 20 ff ff 	movss  %xmm0,-0xe0(%rbp)
    e338:	ff 
    viewport.y = 0.0f;
    e339:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e33d:	f3 0f 11 85 24 ff ff 	movss  %xmm0,-0xdc(%rbp)
    e344:	ff 
    viewport.width = static_cast<float>(swapchain.extent.width);
    e345:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e34c:	8b 40 7c             	mov    0x7c(%rax),%eax
    e34f:	89 c0                	mov    %eax,%eax
    e351:	48 85 c0             	test   %rax,%rax
    e354:	78 0b                	js     e361 <_ZN9VulkanApp22createGraphicsPipelineEv+0x38d>
    e356:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e35a:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e35f:	eb 19                	jmp    e37a <_ZN9VulkanApp22createGraphicsPipelineEv+0x3a6>
    e361:	48 89 c2             	mov    %rax,%rdx
    e364:	48 d1 ea             	shr    %rdx
    e367:	83 e0 01             	and    $0x1,%eax
    e36a:	48 09 c2             	or     %rax,%rdx
    e36d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e371:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e376:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e37a:	f3 0f 11 85 28 ff ff 	movss  %xmm0,-0xd8(%rbp)
    e381:	ff 
    viewport.height = static_cast<float>(swapchain.extent.height);
    e382:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e389:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e38f:	89 c0                	mov    %eax,%eax
    e391:	48 85 c0             	test   %rax,%rax
    e394:	78 0b                	js     e3a1 <_ZN9VulkanApp22createGraphicsPipelineEv+0x3cd>
    e396:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e39a:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e39f:	eb 19                	jmp    e3ba <_ZN9VulkanApp22createGraphicsPipelineEv+0x3e6>
    e3a1:	48 89 c2             	mov    %rax,%rdx
    e3a4:	48 d1 ea             	shr    %rdx
    e3a7:	83 e0 01             	and    $0x1,%eax
    e3aa:	48 09 c2             	or     %rax,%rdx
    e3ad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3b1:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e3b6:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e3ba:	f3 0f 11 85 2c ff ff 	movss  %xmm0,-0xd4(%rbp)
    e3c1:	ff 
    viewport.minDepth = 0.0f;
    e3c2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3c6:	f3 0f 11 85 30 ff ff 	movss  %xmm0,-0xd0(%rbp)
    e3cd:	ff 
    viewport.maxDepth = 1.0f;
    e3ce:	f3 0f 10 05 da b3 00 	movss  0xb3da(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    e3d5:	00 
    e3d6:	f3 0f 11 85 34 ff ff 	movss  %xmm0,-0xcc(%rbp)
    e3dd:	ff 

    VkRect2D scissor{};
    e3de:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
    e3e5:	00 00 00 00 
    e3e9:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
    e3f0:	00 00 00 00 
    scissor.offset = {0, 0};
    e3f4:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
    e3fb:	00 00 00 
    e3fe:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
    e405:	00 00 00 
    scissor.extent = swapchain.extent;
    e408:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e40f:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e413:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)

    VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e41a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e41e:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e425:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
    e42c:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    viewportStateInfo.sType =
    e433:	c7 85 e0 fc ff ff 16 	movl   $0x16,-0x320(%rbp)
    e43a:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
    viewportStateInfo.viewportCount = 1;
    e43d:	c7 85 f4 fc ff ff 01 	movl   $0x1,-0x30c(%rbp)
    e444:	00 00 00 
    viewportStateInfo.pViewports = &viewport;
    e447:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e44e:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
    viewportStateInfo.scissorCount = 1;
    e455:	c7 85 00 fd ff ff 01 	movl   $0x1,-0x300(%rbp)
    e45c:	00 00 00 
    viewportStateInfo.pScissors = &scissor;
    e45f:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    e466:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)

    /*  */
    VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e46d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e471:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
    e478:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e47f:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e486:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
    rastStateInfo.sType =
    e48d:	c7 85 b0 fd ff ff 17 	movl   $0x17,-0x250(%rbp)
    e494:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
    rastStateInfo.pNext = nullptr;
    e497:	48 c7 85 b8 fd ff ff 	movq   $0x0,-0x248(%rbp)
    e49e:	00 00 00 00 
    rastStateInfo.depthClampEnable = VK_FALSE;
    e4a2:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%rbp)
    e4a9:	00 00 00 
    rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e4ac:	c7 85 c8 fd ff ff 00 	movl   $0x0,-0x238(%rbp)
    e4b3:	00 00 00 
    rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e4b6:	c7 85 cc fd ff ff 00 	movl   $0x0,-0x234(%rbp)
    e4bd:	00 00 00 
    rastStateInfo.lineWidth = 1.0f;
    e4c0:	f3 0f 10 05 e8 b2 00 	movss  0xb2e8(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    e4c7:	00 
    e4c8:	f3 0f 11 85 e8 fd ff 	movss  %xmm0,-0x218(%rbp)
    e4cf:	ff 
    rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e4d0:	c7 85 d0 fd ff ff 02 	movl   $0x2,-0x230(%rbp)
    e4d7:	00 00 00 
    rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e4da:	c7 85 d4 fd ff ff 01 	movl   $0x1,-0x22c(%rbp)
    e4e1:	00 00 00 
    rastStateInfo.depthBiasEnable = VK_FALSE;
    e4e4:	c7 85 d8 fd ff ff 00 	movl   $0x0,-0x228(%rbp)
    e4eb:	00 00 00 
    rastStateInfo.depthBiasConstantFactor = 0.0f;
    e4ee:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4f2:	f3 0f 11 85 dc fd ff 	movss  %xmm0,-0x224(%rbp)
    e4f9:	ff 
    rastStateInfo.depthBiasClamp = 0.0f;
    e4fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4fe:	f3 0f 11 85 e0 fd ff 	movss  %xmm0,-0x220(%rbp)
    e505:	ff 
    rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e506:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e50a:	f3 0f 11 85 e4 fd ff 	movss  %xmm0,-0x21c(%rbp)
    e511:	ff 

    /*  */
    VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e512:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e516:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e51d:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e524:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
    multisampleStateInfo.sType =
    e52b:	c7 85 10 fd ff ff 18 	movl   $0x18,-0x2f0(%rbp)
    e532:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
    multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e535:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e53c:	00 00 00 
    multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e53f:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e546:	00 00 00 
    multisampleStateInfo.minSampleShading = 1.0f;
    e549:	f3 0f 10 05 5f b2 00 	movss  0xb25f(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    e550:	00 
    e551:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e558:	ff 
    multisampleStateInfo.pSampleMask = nullptr;
    e559:	48 c7 85 30 fd ff ff 	movq   $0x0,-0x2d0(%rbp)
    e560:	00 00 00 00 
    multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e564:	c7 85 38 fd ff ff 00 	movl   $0x0,-0x2c8(%rbp)
    e56b:	00 00 00 
    multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e56e:	c7 85 3c fd ff ff 00 	movl   $0x0,-0x2c4(%rbp)
    e575:	00 00 00 

    /* Depth and stencil testing */

    /* Color blending */
    VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e578:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e57c:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    e583:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    colorBlendAttachment.colorWriteMask =
    e58a:	c7 85 2c fc ff ff 0f 	movl   $0xf,-0x3d4(%rbp)
    e591:	00 00 00 
        VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
        VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
    colorBlendAttachment.blendEnable = VK_TRUE;
    e594:	c7 85 10 fc ff ff 01 	movl   $0x1,-0x3f0(%rbp)
    e59b:	00 00 00 
    colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    e59e:	c7 85 14 fc ff ff 06 	movl   $0x6,-0x3ec(%rbp)
    e5a5:	00 00 00 
    colorBlendAttachment.dstColorBlendFactor =
    e5a8:	c7 85 18 fc ff ff 07 	movl   $0x7,-0x3e8(%rbp)
    e5af:	00 00 00 
        VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
    colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    e5b2:	c7 85 1c fc ff ff 00 	movl   $0x0,-0x3e4(%rbp)
    e5b9:	00 00 00 
    colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    e5bc:	c7 85 20 fc ff ff 01 	movl   $0x1,-0x3e0(%rbp)
    e5c3:	00 00 00 
    colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    e5c6:	c7 85 24 fc ff ff 00 	movl   $0x0,-0x3dc(%rbp)
    e5cd:	00 00 00 
    colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    e5d0:	c7 85 28 fc ff ff 00 	movl   $0x0,-0x3d8(%rbp)
    e5d7:	00 00 00 

    VkPipelineColorBlendStateCreateInfo colorBlendState{};
    e5da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5de:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    e5e5:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e5ec:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    e5f3:	66 0f d6 85 a0 fd ff 	movq   %xmm0,-0x260(%rbp)
    e5fa:	ff 
    colorBlendState.sType =
    e5fb:	c7 85 70 fd ff ff 1a 	movl   $0x1a,-0x290(%rbp)
    e602:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
    colorBlendState.logicOpEnable = VK_FALSE;
    e605:	c7 85 84 fd ff ff 00 	movl   $0x0,-0x27c(%rbp)
    e60c:	00 00 00 
    colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    e60f:	c7 85 88 fd ff ff 03 	movl   $0x3,-0x278(%rbp)
    e616:	00 00 00 
    colorBlendState.attachmentCount = 1;
    e619:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
    e620:	00 00 00 
    colorBlendState.pAttachments = &colorBlendAttachment;
    e623:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    e62a:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
    colorBlendState.blendConstants[0] = 0.0f;
    e631:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e635:	f3 0f 11 85 98 fd ff 	movss  %xmm0,-0x268(%rbp)
    e63c:	ff 
    colorBlendState.blendConstants[1] = 0.0f;
    e63d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e641:	f3 0f 11 85 9c fd ff 	movss  %xmm0,-0x264(%rbp)
    e648:	ff 
    colorBlendState.blendConstants[2] = 0.0f;
    e649:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e64d:	f3 0f 11 85 a0 fd ff 	movss  %xmm0,-0x260(%rbp)
    e654:	ff 
    colorBlendState.blendConstants[3] = 0.0f;
    e655:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e659:	f3 0f 11 85 a4 fd ff 	movss  %xmm0,-0x25c(%rbp)
    e660:	ff 

    /* Dynamic state */
    std::vector<VkDynamicState> dynamicStates = {VK_DYNAMIC_STATE_VIEWPORT,
                                                 VK_DYNAMIC_STATE_LINE_WIDTH};
    e661:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    e668:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%rbp)
    e66f:	48 8d 45 b4          	lea    -0x4c(%rbp),%rax
    e673:	49 89 c4             	mov    %rax,%r12
    e676:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    e67c:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    e680:	48 89 c7             	mov    %rax,%rdi
    e683:	e8 dc 26 00 00       	call   10d64 <_ZNSaI14VkDynamicStateEC1Ev>
    e688:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    e68c:	4c 89 e6             	mov    %r12,%rsi
    e68f:	4c 89 ef             	mov    %r13,%rdi
    e692:	4c 89 e1             	mov    %r12,%rcx
    e695:	4c 89 eb             	mov    %r13,%rbx
    e698:	48 89 df             	mov    %rbx,%rdi
    e69b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e6a2:	48 89 d1             	mov    %rdx,%rcx
    e6a5:	48 89 fa             	mov    %rdi,%rdx
    e6a8:	48 89 c7             	mov    %rax,%rdi
    e6ab:	e8 ec 26 00 00       	call   10d9c <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    e6b0:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    e6b4:	48 89 c7             	mov    %rax,%rdi
    e6b7:	e8 c4 26 00 00       	call   10d80 <_ZNSaI14VkDynamicStateED1Ev>

    VkPipelineDynamicStateCreateInfo dynamicStateInfo{};
    e6bc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6c0:	0f 29 85 30 fc ff ff 	movaps %xmm0,-0x3d0(%rbp)
    e6c7:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    dynamicStateInfo.sType =
    e6ce:	c7 85 30 fc ff ff 1b 	movl   $0x1b,-0x3d0(%rbp)
    e6d5:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO;
    dynamicStateInfo.dynamicStateCount =
        static_cast<uint32_t>(dynamicStates.size());
    e6d8:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e6df:	48 89 c7             	mov    %rax,%rdi
    e6e2:	e8 81 27 00 00       	call   10e68 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>
    dynamicStateInfo.dynamicStateCount =
    e6e7:	89 85 44 fc ff ff    	mov    %eax,-0x3bc(%rbp)
    dynamicStateInfo.pDynamicStates = dynamicStates.data();
    e6ed:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e6f4:	48 89 c7             	mov    %rax,%rdi
    e6f7:	e8 90 27 00 00       	call   10e8c <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>
    e6fc:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)

    /* Pipeline layout */
    VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    e703:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e707:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e70e:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e715:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
    pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    e71c:	c7 85 40 fd ff ff 1e 	movl   $0x1e,-0x2c0(%rbp)
    e723:	00 00 00 
    pipelineLayoutInfo.setLayoutCount = 0;
    e726:	c7 85 54 fd ff ff 00 	movl   $0x0,-0x2ac(%rbp)
    e72d:	00 00 00 
    pipelineLayoutInfo.pSetLayouts = nullptr;
    e730:	48 c7 85 58 fd ff ff 	movq   $0x0,-0x2a8(%rbp)
    e737:	00 00 00 00 
    pipelineLayoutInfo.pushConstantRangeCount = 0;
    e73b:	c7 85 60 fd ff ff 00 	movl   $0x0,-0x2a0(%rbp)
    e742:	00 00 00 
    pipelineLayoutInfo.pPushConstantRanges = nullptr;
    e745:	48 c7 85 68 fd ff ff 	movq   $0x0,-0x298(%rbp)
    e74c:	00 00 00 00 

    if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    e750:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e757:	48 8d 90 e8 00 00 00 	lea    0xe8(%rax),%rdx
    e75e:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e765:	48 8b 40 50          	mov    0x50(%rax),%rax
    e769:	48 8d b5 40 fd ff ff 	lea    -0x2c0(%rbp),%rsi
    e770:	48 89 d1             	mov    %rdx,%rcx
    e773:	ba 00 00 00 00       	mov    $0x0,%edx
    e778:	48 89 c7             	mov    %rax,%rdi
    e77b:	e8 20 5b ff ff       	call   42a0 <vkCreatePipelineLayout@plt>
                               &pipelineLayout) != VK_SUCCESS) {
    e780:	85 c0                	test   %eax,%eax
    e782:	0f 95 c0             	setne  %al
    if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    e785:	84 c0                	test   %al,%al
    e787:	74 3b                	je     e7c4 <_ZN9VulkanApp22createGraphicsPipelineEv+0x7f0>
      throw std::runtime_error("Failed to create pipeline layout.");
    e789:	bf 10 00 00 00       	mov    $0x10,%edi
    e78e:	e8 cd 59 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    e793:	48 89 c3             	mov    %rax,%rbx
    e796:	48 8d 05 eb ac 00 00 	lea    0xaceb(%rip),%rax        # 19488 <_ZN6__pstl9execution2v1L5unseqE+0x149>
    e79d:	48 89 c6             	mov    %rax,%rsi
    e7a0:	48 89 df             	mov    %rbx,%rdi
    e7a3:	e8 58 59 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    e7a8:	48 8b 05 f9 77 01 00 	mov    0x177f9(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e7af:	48 89 c2             	mov    %rax,%rdx
    e7b2:	48 8d 05 87 75 01 00 	lea    0x17587(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e7b9:	48 89 c6             	mov    %rax,%rsi
    e7bc:	48 89 df             	mov    %rbx,%rdi
    e7bf:	e8 9c 5e ff ff       	call   4660 <__cxa_throw@plt>
    }

    /* Populate graphics pipeline create info */
    VkGraphicsPipelineCreateInfo graphicsPipelineInfo{};
    e7c4:	48 8d 95 50 fe ff ff 	lea    -0x1b0(%rbp),%rdx
    e7cb:	b8 00 00 00 00       	mov    $0x0,%eax
    e7d0:	b9 12 00 00 00       	mov    $0x12,%ecx
    e7d5:	48 89 d7             	mov    %rdx,%rdi
    e7d8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    graphicsPipelineInfo.sType =
    e7db:	c7 85 50 fe ff ff 1c 	movl   $0x1c,-0x1b0(%rbp)
    e7e2:	00 00 00 
        VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    graphicsPipelineInfo.pNext = nullptr;
    e7e5:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    e7ec:	00 00 00 00 

    /* Create a graphics pipeline */
    graphicsPipelines.push_back({});
    e7f0:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e7f7:	48 8d 90 d0 00 00 00 	lea    0xd0(%rax),%rdx
    e7fe:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    e805:	00 
    e806:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e80a:	48 89 c6             	mov    %rax,%rsi
    e80d:	48 89 d7             	mov    %rdx,%rdi
    e810:	e8 9b 26 00 00       	call   10eb0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE9push_backEOS1_>
  }
    e815:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e81c:	48 89 c7             	mov    %rax,%rdi
    e81f:	e8 00 26 00 00       	call   10e24 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
  for (size_t i = 0; i < shaderModules.size(); ++i) {
    e824:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    e829:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e830:	48 89 c7             	mov    %rax,%rdi
    e833:	e8 08 25 00 00       	call   10d40 <_ZNKSt6vectorI6ShaderSaIS0_EE4sizeEv>
    e838:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    e83c:	0f 92 c0             	setb   %al
    e83f:	84 c0                	test   %al,%al
    e841:	0f 85 e2 f8 ff ff    	jne    e129 <_ZN9VulkanApp22createGraphicsPipelineEv+0x155>

  for (auto &shaderModule : shaderModules) {
    e847:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e84e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e852:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e856:	48 89 c7             	mov    %rax,%rdi
    e859:	e8 84 26 00 00       	call   10ee2 <_ZNSt6vectorI6ShaderSaIS0_EE5beginEv>
    e85e:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    e865:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e869:	48 89 c7             	mov    %rax,%rdi
    e86c:	e8 97 26 00 00       	call   10f08 <_ZNSt6vectorI6ShaderSaIS0_EE3endEv>
    e871:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e878:	eb 67                	jmp    e8e1 <_ZN9VulkanApp22createGraphicsPipelineEv+0x90d>
    e87a:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e881:	48 89 c7             	mov    %rax,%rdi
    e884:	e8 03 27 00 00       	call   10f8c <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEdeEv>
    e889:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    vkh::destroyShaderModule(device, shaderModule.vertex);
    e88d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e891:	48 8b 08             	mov    (%rax),%rcx
    e894:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e89b:	48 8b 40 50          	mov    0x50(%rax),%rax
    e89f:	ba 00 00 00 00       	mov    $0x0,%edx
    e8a4:	48 89 ce             	mov    %rcx,%rsi
    e8a7:	48 89 c7             	mov    %rax,%rdi
    e8aa:	e8 d7 7f ff ff       	call   6886 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
    vkh::destroyShaderModule(device, shaderModule.fragment);
    e8af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e8b3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e8b7:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e8be:	48 8b 40 50          	mov    0x50(%rax),%rax
    e8c2:	ba 00 00 00 00       	mov    $0x0,%edx
    e8c7:	48 89 ce             	mov    %rcx,%rsi
    e8ca:	48 89 c7             	mov    %rax,%rdi
    e8cd:	e8 b4 7f ff ff       	call   6886 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  for (auto &shaderModule : shaderModules) {
    e8d2:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e8d9:	48 89 c7             	mov    %rax,%rdi
    e8dc:	e8 8b 26 00 00       	call   10f6c <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEppEv>
    e8e1:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    e8e8:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e8ef:	48 89 d6             	mov    %rdx,%rsi
    e8f2:	48 89 c7             	mov    %rax,%rdi
    e8f5:	e8 37 26 00 00       	call   10f31 <_ZN9__gnu_cxxneIP6ShaderSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e8fa:	84 c0                	test   %al,%al
    e8fc:	0f 85 78 ff ff ff    	jne    e87a <_ZN9VulkanApp22createGraphicsPipelineEv+0x8a6>
  }
}
    e902:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e909:	48 89 c7             	mov    %rax,%rdi
    e90c:	e8 cb 23 00 00       	call   10cdc <_ZNSt6vectorI6ShaderSaIS0_EED1Ev>
    e911:	e9 b6 00 00 00       	jmp    e9cc <_ZN9VulkanApp22createGraphicsPipelineEv+0x9f8>
  std::vector<Shader> shaderModules{1};
    e916:	48 89 c3             	mov    %rax,%rbx
    e919:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    e920:	48 89 c7             	mov    %rax,%rdi
    e923:	e8 22 23 00 00       	call   10c4a <_ZNSaI6ShaderED1Ev>
    e928:	48 89 d8             	mov    %rbx,%rax
    e92b:	48 89 c7             	mov    %rax,%rdi
    e92e:	e8 8d 5d ff ff       	call   46c0 <_Unwind_Resume@plt>
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    e933:	48 89 c3             	mov    %rax,%rbx
    e936:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e93d:	48 89 c7             	mov    %rax,%rdi
    e940:	e8 8b 58 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e945:	eb 03                	jmp    e94a <_ZN9VulkanApp22createGraphicsPipelineEv+0x976>
    e947:	48 89 c3             	mov    %rax,%rbx
    e94a:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    e94e:	48 89 c7             	mov    %rax,%rdi
    e951:	e8 ba 5a ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    e956:	eb 5a                	jmp    e9b2 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e958:	48 89 c3             	mov    %rax,%rbx
    e95b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e95f:	48 89 c7             	mov    %rax,%rdi
    e962:	e8 69 58 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e967:	eb 03                	jmp    e96c <_ZN9VulkanApp22createGraphicsPipelineEv+0x998>
    e969:	48 89 c3             	mov    %rax,%rbx
    e96c:	48 8d 45 b3          	lea    -0x4d(%rbp),%rax
    e970:	48 89 c7             	mov    %rax,%rdi
    e973:	e8 98 5a ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    e978:	eb 38                	jmp    e9b2 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
                                                 VK_DYNAMIC_STATE_LINE_WIDTH};
    e97a:	48 89 c3             	mov    %rax,%rbx
    e97d:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    e981:	48 89 c7             	mov    %rax,%rdi
    e984:	e8 f7 23 00 00       	call   10d80 <_ZNSaI14VkDynamicStateED1Ev>
    e989:	eb 27                	jmp    e9b2 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
      throw std::runtime_error("Failed to create pipeline layout.");
    e98b:	49 89 c4             	mov    %rax,%r12
    e98e:	48 89 df             	mov    %rbx,%rdi
    e991:	e8 9a 58 ff ff       	call   4230 <__cxa_free_exception@plt>
    e996:	4c 89 e3             	mov    %r12,%rbx
    e999:	eb 03                	jmp    e99e <_ZN9VulkanApp22createGraphicsPipelineEv+0x9ca>
  }
    e99b:	48 89 c3             	mov    %rax,%rbx
    e99e:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e9a5:	48 89 c7             	mov    %rax,%rdi
    e9a8:	e8 77 24 00 00       	call   10e24 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    e9ad:	eb 03                	jmp    e9b2 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
}
    e9af:	48 89 c3             	mov    %rax,%rbx
    e9b2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e9b9:	48 89 c7             	mov    %rax,%rdi
    e9bc:	e8 1b 23 00 00       	call   10cdc <_ZNSt6vectorI6ShaderSaIS0_EED1Ev>
    e9c1:	48 89 d8             	mov    %rbx,%rax
    e9c4:	48 89 c7             	mov    %rax,%rdi
    e9c7:	e8 f4 5c ff ff       	call   46c0 <_Unwind_Resume@plt>
    e9cc:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
    e9d3:	5b                   	pop    %rbx
    e9d4:	41 5c                	pop    %r12
    e9d6:	41 5d                	pop    %r13
    e9d8:	5d                   	pop    %rbp
    e9d9:	c3                   	ret

000000000000e9da <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    e9da:	55                   	push   %rbp
    e9db:	48 89 e5             	mov    %rsp,%rbp
    e9de:	48 83 ec 30          	sub    $0x30,%rsp
    e9e2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    e9e6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e9ea:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    e9ee:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    e9f3:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    e9fa:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ea01:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    ea02:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    ea09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea0d:	8b 40 68             	mov    0x68(%rax),%eax
    ea10:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    ea13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ea17:	48 8b 40 50          	mov    0x50(%rax),%rax
    ea1b:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    ea1f:	ba 00 00 00 00       	mov    $0x0,%edx
    ea24:	48 89 ce             	mov    %rcx,%rsi
    ea27:	48 89 c7             	mov    %rax,%rdi
    ea2a:	e8 b7 73 ff ff       	call   5de6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    ea2f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ea33:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)
}
    ea3a:	90                   	nop
    ea3b:	c9                   	leave
    ea3c:	c3                   	ret
    ea3d:	90                   	nop

000000000000ea3e <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    ea3e:	55                   	push   %rbp
    ea3f:	48 89 e5             	mov    %rsp,%rbp
    ea42:	41 57                	push   %r15
    ea44:	41 56                	push   %r14
    ea46:	41 55                	push   %r13
    ea48:	41 54                	push   %r12
    ea4a:	53                   	push   %rbx
    ea4b:	48 83 ec 38          	sub    $0x38,%rsp
    ea4f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    ea53:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ea57:	48 8d 58 10          	lea    0x10(%rax),%rbx
    ea5b:	48 8d 05 48 aa 00 00 	lea    0xaa48(%rip),%rax        # 194aa <_ZN6__pstl9execution2v1L5unseqE+0x16b>
    ea62:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ea66:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ea6a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ea6e:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    ea75:	00 
    ea76:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ea7a:	48 89 c7             	mov    %rax,%rdi
    ea7d:	e8 b4 94 ff ff       	call   7f36 <_ZNSaIPKcEC1Ev>
    ea82:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ea86:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    ea8a:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    ea8e:	49 89 f0             	mov    %rsi,%r8
    ea91:	49 89 f9             	mov    %rdi,%r9
    ea94:	48 89 fa             	mov    %rdi,%rdx
    ea97:	48 89 c1             	mov    %rax,%rcx
    ea9a:	4c 89 c6             	mov    %r8,%rsi
    ea9d:	48 89 df             	mov    %rbx,%rdi
    eaa0:	e8 5b 17 00 00       	call   10200 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    eaa5:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    eaa9:	48 89 c7             	mov    %rax,%rdi
    eaac:	e8 a1 94 ff ff       	call   7f52 <_ZNSaIPKcED1Ev>
    eab1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eab5:	48 8d 58 28          	lea    0x28(%rax),%rbx
    eab9:	4c 8d 35 20 72 01 00 	lea    0x17220(%rip),%r14        # 25ce0 <C.95.0>
    eac0:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    eac6:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    eaca:	48 89 c7             	mov    %rax,%rdi
    eacd:	e8 64 94 ff ff       	call   7f36 <_ZNSaIPKcEC1Ev>
    ead2:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ead6:	4d 89 f0             	mov    %r14,%r8
    ead9:	4d 89 f9             	mov    %r15,%r9
    eadc:	4c 89 f6             	mov    %r14,%rsi
    eadf:	4c 89 ff             	mov    %r15,%rdi
    eae2:	48 89 fa             	mov    %rdi,%rdx
    eae5:	48 89 c1             	mov    %rax,%rcx
    eae8:	4c 89 c6             	mov    %r8,%rsi
    eaeb:	48 89 df             	mov    %rbx,%rdi
    eaee:	e8 0d 17 00 00       	call   10200 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    eaf3:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    eaf7:	48 89 c7             	mov    %rax,%rdi
    eafa:	e8 53 94 ff ff       	call   7f52 <_ZNSaIPKcED1Ev>
    eaff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb03:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    eb0a:	4c 8d 25 df 71 01 00 	lea    0x171df(%rip),%r12        # 25cf0 <C.96.1>
    eb11:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    eb17:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    eb1b:	48 89 c7             	mov    %rax,%rdi
    eb1e:	e8 13 94 ff ff       	call   7f36 <_ZNSaIPKcEC1Ev>
    eb23:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    eb27:	4d 89 e0             	mov    %r12,%r8
    eb2a:	4d 89 e9             	mov    %r13,%r9
    eb2d:	4c 89 e6             	mov    %r12,%rsi
    eb30:	4c 89 ef             	mov    %r13,%rdi
    eb33:	48 89 fa             	mov    %rdi,%rdx
    eb36:	48 89 c1             	mov    %rax,%rcx
    eb39:	4c 89 c6             	mov    %r8,%rsi
    eb3c:	48 89 df             	mov    %rbx,%rdi
    eb3f:	e8 bc 16 00 00       	call   10200 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    eb44:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    eb48:	48 89 c7             	mov    %rax,%rdi
    eb4b:	e8 02 94 ff ff       	call   7f52 <_ZNSaIPKcED1Ev>
    eb50:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb54:	48 05 a0 00 00 00    	add    $0xa0,%rax
    eb5a:	48 89 c7             	mov    %rax,%rdi
    eb5d:	e8 a6 15 00 00       	call   10108 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    eb62:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb66:	48 05 b8 00 00 00    	add    $0xb8,%rax
    eb6c:	48 89 c7             	mov    %rax,%rdi
    eb6f:	e8 cc 15 00 00       	call   10140 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    eb74:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb78:	48 05 d0 00 00 00    	add    $0xd0,%rax
    eb7e:	48 89 c7             	mov    %rax,%rdi
    eb81:	e8 0e 16 00 00       	call   10194 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1Ev>
  createWindow();
    eb86:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb8a:	48 89 c7             	mov    %rax,%rdi
    eb8d:	e8 2e e1 ff ff       	call   ccc0 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    eb92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb96:	48 89 c7             	mov    %rax,%rdi
    eb99:	e8 62 e1 ff ff       	call   cd00 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    eb9e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eba2:	48 89 c7             	mov    %rax,%rdi
    eba5:	e8 3c e3 ff ff       	call   cee6 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    ebaa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebae:	48 89 c7             	mov    %rax,%rdi
    ebb1:	e8 c4 e3 ff ff       	call   cf7a <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    ebb6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebba:	48 89 c7             	mov    %rax,%rdi
    ebbd:	e8 10 e6 ff ff       	call   d1d2 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    ebc2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebc6:	48 89 c7             	mov    %rax,%rdi
    ebc9:	e8 14 f2 ff ff       	call   dde2 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    ebce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebd2:	48 89 c7             	mov    %rax,%rdi
    ebd5:	e8 4e f2 ff ff       	call   de28 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    ebda:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebde:	48 89 c7             	mov    %rax,%rdi
    ebe1:	e8 ee f3 ff ff       	call   dfd4 <_ZN9VulkanApp22createGraphicsPipelineEv>

  createCommandPool();
    ebe6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebea:	48 89 c7             	mov    %rax,%rdi
    ebed:	e8 e8 fd ff ff       	call   e9da <_ZN9VulkanApp17createCommandPoolEv>
}
    ebf2:	e9 b2 00 00 00       	jmp    eca9 <_ZN9VulkanAppC1Ev+0x26b>
VulkanApp::VulkanApp() {
    ebf7:	48 89 c3             	mov    %rax,%rbx
    ebfa:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ebfe:	48 89 c7             	mov    %rax,%rdi
    ec01:	e8 4c 93 ff ff       	call   7f52 <_ZNSaIPKcED1Ev>
    ec06:	48 89 d8             	mov    %rbx,%rax
    ec09:	48 89 c7             	mov    %rax,%rdi
    ec0c:	e8 af 5a ff ff       	call   46c0 <_Unwind_Resume@plt>
    ec11:	48 89 c3             	mov    %rax,%rbx
    ec14:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ec18:	48 89 c7             	mov    %rax,%rdi
    ec1b:	e8 32 93 ff ff       	call   7f52 <_ZNSaIPKcED1Ev>
    ec20:	eb 6c                	jmp    ec8e <_ZN9VulkanAppC1Ev+0x250>
    ec22:	48 89 c3             	mov    %rax,%rbx
    ec25:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ec29:	48 89 c7             	mov    %rax,%rdi
    ec2c:	e8 21 93 ff ff       	call   7f52 <_ZNSaIPKcED1Ev>
    ec31:	eb 4b                	jmp    ec7e <_ZN9VulkanAppC1Ev+0x240>
}
    ec33:	48 89 c3             	mov    %rax,%rbx
    ec36:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec3a:	48 05 d0 00 00 00    	add    $0xd0,%rax
    ec40:	48 89 c7             	mov    %rax,%rdi
    ec43:	e8 e6 24 00 00       	call   1112e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
    ec48:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec4c:	48 05 b8 00 00 00    	add    $0xb8,%rax
    ec52:	48 89 c7             	mov    %rax,%rdi
    ec55:	e8 1e 9d ff ff       	call   8978 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    ec5a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec5e:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ec64:	48 89 c7             	mov    %rax,%rdi
    ec67:	e8 c4 23 00 00       	call   11030 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    ec6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec70:	48 05 88 00 00 00    	add    $0x88,%rax
    ec76:	48 89 c7             	mov    %rax,%rdi
    ec79:	e8 0a 16 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    ec7e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec82:	48 83 c0 28          	add    $0x28,%rax
}
    ec86:	48 89 c7             	mov    %rax,%rdi
    ec89:	e8 fa 15 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ec8e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec92:	48 83 c0 10          	add    $0x10,%rax
    ec96:	48 89 c7             	mov    %rax,%rdi
    ec99:	e8 ea 15 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ec9e:	48 89 d8             	mov    %rbx,%rax
    eca1:	48 89 c7             	mov    %rax,%rdi
    eca4:	e8 17 5a ff ff       	call   46c0 <_Unwind_Resume@plt>
    eca9:	48 83 c4 38          	add    $0x38,%rsp
    ecad:	5b                   	pop    %rbx
    ecae:	41 5c                	pop    %r12
    ecb0:	41 5d                	pop    %r13
    ecb2:	41 5e                	pop    %r14
    ecb4:	41 5f                	pop    %r15
    ecb6:	5d                   	pop    %rbp
    ecb7:	c3                   	ret

000000000000ecb8 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    ecb8:	55                   	push   %rbp
    ecb9:	48 89 e5             	mov    %rsp,%rbp
    ecbc:	48 83 ec 30          	sub    $0x30,%rsp
    ecc0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    ecc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ecc8:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    eccf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ecd3:	48 8b 40 50          	mov    0x50(%rax),%rax
    ecd7:	ba 00 00 00 00       	mov    $0x0,%edx
    ecdc:	48 89 ce             	mov    %rcx,%rsi
    ecdf:	48 89 c7             	mov    %rax,%rdi
    ece2:	e8 e6 7c ff ff       	call   69cd <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>

  vkDestroyPipelineLayout(device, pipelineLayout, nullptr);
    ece7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eceb:	48 8b 88 e8 00 00 00 	mov    0xe8(%rax),%rcx
    ecf2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ecf6:	48 8b 40 50          	mov    0x50(%rax),%rax
    ecfa:	ba 00 00 00 00       	mov    $0x0,%edx
    ecff:	48 89 ce             	mov    %rcx,%rsi
    ed02:	48 89 c7             	mov    %rax,%rdi
    ed05:	e8 c6 57 ff ff       	call   44d0 <vkDestroyPipelineLayout@plt>

  for (auto &imageView : imageViews) {
    ed0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed0e:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ed14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ed18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed1c:	48 89 c7             	mov    %rax,%rdi
    ed1f:	e8 4e 24 00 00       	call   11172 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    ed24:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ed28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed2c:	48 89 c7             	mov    %rax,%rdi
    ed2f:	e8 64 24 00 00       	call   11198 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    ed34:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ed38:	eb 3b                	jmp    ed75 <_ZN9VulkanAppD1Ev+0xbd>
    ed3a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ed3e:	48 89 c7             	mov    %rax,%rdi
    ed41:	e8 d6 24 00 00       	call   1121c <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    ed46:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkh::destroyImageView(device, imageView);
    ed4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ed4e:	48 8b 08             	mov    (%rax),%rcx
    ed51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed55:	48 8b 40 50          	mov    0x50(%rax),%rax
    ed59:	ba 00 00 00 00       	mov    $0x0,%edx
    ed5e:	48 89 ce             	mov    %rcx,%rsi
    ed61:	48 89 c7             	mov    %rax,%rdi
    ed64:	e8 ef 7a ff ff       	call   6858 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    ed69:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ed6d:	48 89 c7             	mov    %rax,%rdi
    ed70:	e8 87 24 00 00       	call   111fc <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    ed75:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    ed79:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ed7d:	48 89 d6             	mov    %rdx,%rsi
    ed80:	48 89 c7             	mov    %rax,%rdi
    ed83:	e8 39 24 00 00       	call   111c1 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    ed88:	84 c0                	test   %al,%al
    ed8a:	75 ae                	jne    ed3a <_ZN9VulkanAppD1Ev+0x82>
  }
  vkh::destroySwapchain(device, swapchain.self);
    ed8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed90:	48 8b 48 70          	mov    0x70(%rax),%rcx
    ed94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed98:	48 8b 40 50          	mov    0x50(%rax),%rax
    ed9c:	ba 00 00 00 00       	mov    $0x0,%edx
    eda1:	48 89 ce             	mov    %rcx,%rsi
    eda4:	48 89 c7             	mov    %rax,%rdi
    eda7:	e8 7e 7a ff ff       	call   682a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    edac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edb0:	48 8b 40 50          	mov    0x50(%rax),%rax
    edb4:	be 00 00 00 00       	mov    $0x0,%esi
    edb9:	48 89 c7             	mov    %rax,%rdi
    edbc:	e8 15 7a ff ff       	call   67d6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    edc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edc5:	48 8b 48 40          	mov    0x40(%rax),%rcx
    edc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edcd:	48 8b 40 08          	mov    0x8(%rax),%rax
    edd1:	ba 00 00 00 00       	mov    $0x0,%edx
    edd6:	48 89 ce             	mov    %rcx,%rsi
    edd9:	48 89 c7             	mov    %rax,%rdi
    eddc:	e8 76 da ff ff       	call   c857 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    ede1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ede5:	48 8b 48 48          	mov    0x48(%rax),%rcx
    ede9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eded:	48 8b 40 08          	mov    0x8(%rax),%rax
    edf1:	ba 00 00 00 00       	mov    $0x0,%edx
    edf6:	48 89 ce             	mov    %rcx,%rsi
    edf9:	48 89 c7             	mov    %rax,%rdi
    edfc:	e8 fb 79 ff ff       	call   67fc <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    ee01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee05:	48 8b 40 08          	mov    0x8(%rax),%rax
    ee09:	be 00 00 00 00       	mov    $0x0,%esi
    ee0e:	48 89 c7             	mov    %rax,%rdi
    ee11:	e8 9a 79 ff ff       	call   67b0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    ee16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee1a:	48 8b 00             	mov    (%rax),%rax
    ee1d:	48 89 c7             	mov    %rax,%rdi
    ee20:	e8 70 79 ff ff       	call   6795 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    ee25:	e8 76 55 ff ff       	call   43a0 <glfwTerminate@plt>
}
    ee2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee2e:	48 05 d0 00 00 00    	add    $0xd0,%rax
    ee34:	48 89 c7             	mov    %rax,%rdi
    ee37:	e8 f2 22 00 00       	call   1112e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
    ee3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee40:	48 05 b8 00 00 00    	add    $0xb8,%rax
    ee46:	48 89 c7             	mov    %rax,%rdi
    ee49:	e8 2a 9b ff ff       	call   8978 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    ee4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee52:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ee58:	48 89 c7             	mov    %rax,%rdi
    ee5b:	e8 d0 21 00 00       	call   11030 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    ee60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee64:	48 05 88 00 00 00    	add    $0x88,%rax
    ee6a:	48 89 c7             	mov    %rax,%rdi
    ee6d:	e8 16 14 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    ee72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee76:	48 83 c0 28          	add    $0x28,%rax
}
    ee7a:	48 89 c7             	mov    %rax,%rdi
    ee7d:	e8 06 14 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ee82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee86:	48 83 c0 10          	add    $0x10,%rax
    ee8a:	48 89 c7             	mov    %rax,%rdi
    ee8d:	e8 f6 13 00 00       	call   10288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ee92:	90                   	nop
    ee93:	c9                   	leave
    ee94:	c3                   	ret
    ee95:	90                   	nop

000000000000ee96 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    ee96:	55                   	push   %rbp
    ee97:	48 89 e5             	mov    %rsp,%rbp
    ee9a:	53                   	push   %rbx
    ee9b:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    eea2:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    eea9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    eead:	48 89 c7             	mov    %rax,%rdi
    eeb0:	e8 79 23 00 00       	call   1122e <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    eeb5:	f2 0f 10 05 fb a8 00 	movsd  0xa8fb(%rip),%xmm0        # 197b8 <_ZN6__pstl9execution2v1L5unseqE+0x479>
    eebc:	00 
    eebd:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    eec2:	e9 a1 00 00 00       	jmp    ef68 <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    eec7:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    eecb:	48 89 c7             	mov    %rax,%rdi
    eece:	e8 5b 23 00 00       	call   1122e <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    eed3:	e8 68 54 ff ff       	call   4340 <glfwPollEvents@plt>

    // for (int i = 0; i < 1'000'000; ++i) {
    // }

    double current = static_cast<double>(time_total.current());
    eed8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    eedc:	48 89 c7             	mov    %rax,%rdi
    eedf:	e8 cc 12 00 00       	call   101b0 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    eee4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eee8:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    eeed:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    eef2:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    eef7:	66 0f 2f 05 b9 a8 00 	comisd 0xa8b9(%rip),%xmm0        # 197b8 <_ZN6__pstl9execution2v1L5unseqE+0x479>
    eefe:	00 
    eeff:	72 5b                	jb     ef5c <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    ef01:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ef05:	48 89 c7             	mov    %rax,%rdi
    ef08:	e8 a3 12 00 00       	call   101b0 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    ef0d:	66 0f ef c9          	pxor   %xmm1,%xmm1
    ef11:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    ef16:	f2 0f 10 05 9a a8 00 	movsd  0xa89a(%rip),%xmm0        # 197b8 <_ZN6__pstl9execution2v1L5unseqE+0x479>
    ef1d:	00 
    ef1e:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    ef22:	66 48 0f 7e c0       	movq   %xmm0,%rax
    ef27:	66 48 0f 6e c0       	movq   %rax,%xmm0
    ef2c:	48 8d 05 8d 74 01 00 	lea    0x1748d(%rip),%rax        # 263c0 <_ZSt4cout@GLIBCXX_3.4>
    ef33:	48 89 c7             	mov    %rax,%rdi
    ef36:	e8 e5 57 ff ff       	call   4720 <_ZNSolsEd@plt>
    ef3b:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    ef3e:	48 8d 05 78 a5 00 00 	lea    0xa578(%rip),%rax        # 194bd <_ZN6__pstl9execution2v1L5unseqE+0x17e>
    ef45:	48 89 c6             	mov    %rax,%rsi
    ef48:	48 89 d7             	mov    %rdx,%rdi
    ef4b:	e8 10 54 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    ef50:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ef54:	48 89 c7             	mov    %rax,%rdi
    ef57:	e8 e2 23 00 00       	call   1133e <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    ef5c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ef60:	48 89 c7             	mov    %rax,%rdi
    ef63:	e8 3c 23 00 00       	call   112a4 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    ef68:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    ef6f:	48 8b 00             	mov    (%rax),%rax
    ef72:	48 89 c7             	mov    %rax,%rdi
    ef75:	e8 96 57 ff ff       	call   4710 <glfwWindowShouldClose@plt>
    ef7a:	85 c0                	test   %eax,%eax
    ef7c:	0f 94 c0             	sete   %al
    ef7f:	84 c0                	test   %al,%al
    ef81:	0f 85 40 ff ff ff    	jne    eec7 <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    ef87:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    ef8e:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef92:	48 89 c7             	mov    %rax,%rdi
    ef95:	e8 06 51 ff ff       	call   40a0 <vkDeviceWaitIdle@plt>
}
    ef9a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ef9e:	48 89 c7             	mov    %rax,%rdi
    efa1:	e8 fe 22 00 00       	call   112a4 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    efa6:	eb 2b                	jmp    efd3 <_ZN9VulkanApp3runEv+0x13d>
  }
    efa8:	48 89 c3             	mov    %rax,%rbx
    efab:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    efaf:	48 89 c7             	mov    %rax,%rdi
    efb2:	e8 ed 22 00 00       	call   112a4 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    efb7:	eb 03                	jmp    efbc <_ZN9VulkanApp3runEv+0x126>
}
    efb9:	48 89 c3             	mov    %rax,%rbx
    efbc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    efc0:	48 89 c7             	mov    %rax,%rdi
    efc3:	e8 dc 22 00 00       	call   112a4 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    efc8:	48 89 d8             	mov    %rbx,%rax
    efcb:	48 89 c7             	mov    %rax,%rdi
    efce:	e8 ed 56 ff ff       	call   46c0 <_Unwind_Resume@plt>
    efd3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    efd7:	c9                   	leave
    efd8:	c3                   	ret
    efd9:	90                   	nop

000000000000efda <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    efda:	55                   	push   %rbp
    efdb:	48 89 e5             	mov    %rsp,%rbp
    efde:	41 54                	push   %r12
    efe0:	53                   	push   %rbx
    efe1:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    efe8:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    efef:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    eff6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    effd:	48 89 c7             	mov    %rax,%rdi
    f000:	e8 8b 54 ff ff       	call   4490 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    f005:	be 10 00 00 00       	mov    $0x10,%esi
    f00a:	bf 08 00 00 00       	mov    $0x8,%edi
    f00f:	e8 72 6e ff ff       	call   5e86 <_ZStorSt13_Ios_OpenmodeS_>
    f014:	89 c2                	mov    %eax,%edx
    f016:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    f01d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f024:	48 89 ce             	mov    %rcx,%rsi
    f027:	48 89 c7             	mov    %rax,%rdi
    f02a:	e8 31 55 ff ff       	call   4560 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    f02f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f036:	48 89 c7             	mov    %rax,%rdi
    f039:	e8 42 56 ff ff       	call   4680 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    f03e:	83 f0 01             	xor    $0x1,%eax
    f041:	84 c0                	test   %al,%al
    f043:	0f 84 97 00 00 00    	je     f0e0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    f049:	bf 10 00 00 00       	mov    $0x10,%edi
    f04e:	e8 0d 51 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    f053:	48 89 c3             	mov    %rax,%rbx
    f056:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f05d:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    f064:	48 8d 0d 58 a4 00 00 	lea    0xa458(%rip),%rcx        # 194c3 <_ZN6__pstl9execution2v1L5unseqE+0x184>
    f06b:	48 89 ce             	mov    %rcx,%rsi
    f06e:	48 89 c7             	mov    %rax,%rdi
    f071:	e8 66 6e ff ff       	call   5edc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    f076:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f07d:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    f084:	ba 0a 00 00 00       	mov    $0xa,%edx
    f089:	48 89 ce             	mov    %rcx,%rsi
    f08c:	48 89 c7             	mov    %rax,%rdi
    f08f:	e8 ca 22 00 00       	call   1135e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    f094:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f09b:	48 89 c6             	mov    %rax,%rsi
    f09e:	48 89 df             	mov    %rbx,%rdi
    f0a1:	e8 8a 55 ff ff       	call   4630 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    f0a6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f0ad:	48 89 c7             	mov    %rax,%rdi
    f0b0:	e8 1b 51 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f0b5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f0bc:	48 89 c7             	mov    %rax,%rdi
    f0bf:	e8 0c 51 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f0c4:	48 8b 05 dd 6e 01 00 	mov    0x16edd(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f0cb:	48 89 c2             	mov    %rax,%rdx
    f0ce:	48 8d 05 6b 6c 01 00 	lea    0x16c6b(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f0d5:	48 89 c6             	mov    %rax,%rsi
    f0d8:	48 89 df             	mov    %rbx,%rdi
    f0db:	e8 80 55 ff ff       	call   4660 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    f0e0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f0e7:	48 83 c0 10          	add    $0x10,%rax
    f0eb:	48 8d 15 e1 a3 00 00 	lea    0xa3e1(%rip),%rdx        # 194d3 <_ZN6__pstl9execution2v1L5unseqE+0x194>
    f0f2:	48 89 d6             	mov    %rdx,%rsi
    f0f5:	48 89 c7             	mov    %rax,%rdi
    f0f8:	e8 63 52 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    f0fd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f104:	48 83 c0 10          	add    $0x10,%rax
    f108:	48 8d 15 dd a3 00 00 	lea    0xa3dd(%rip),%rdx        # 194ec <_ZN6__pstl9execution2v1L5unseqE+0x1ad>
    f10f:	48 89 d6             	mov    %rdx,%rsi
    f112:	48 89 c7             	mov    %rax,%rdi
    f115:	e8 46 52 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    f11a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f121:	be 00 00 00 00       	mov    $0x0,%esi
    f126:	48 89 c7             	mov    %rax,%rdi
    f129:	e8 62 7a ff ff       	call   6b90 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    f12e:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f135:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f139:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f13d:	48 89 c7             	mov    %rax,%rdi
    f140:	e8 29 16 00 00       	call   1076e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f145:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    f14c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f150:	48 89 c7             	mov    %rax,%rdi
    f153:	e8 3c 16 00 00       	call   10794 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f158:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    f15f:	eb 64                	jmp    f1c5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    f161:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f168:	48 89 c7             	mov    %rax,%rdi
    f16b:	e8 ac 16 00 00       	call   1081c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f170:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    f177:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f17e:	48 83 c0 10          	add    $0x10,%rax
    f182:	48 8d 15 74 a3 00 00 	lea    0xa374(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f189:	48 89 d6             	mov    %rdx,%rsi
    f18c:	48 89 c7             	mov    %rax,%rdi
    f18f:	e8 cc 51 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f194:	48 89 c2             	mov    %rax,%rdx
    f197:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f19e:	48 89 c6             	mov    %rax,%rsi
    f1a1:	48 89 d7             	mov    %rdx,%rdi
    f1a4:	e8 b7 51 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f1a9:	be 0a 00 00 00       	mov    $0xa,%esi
    f1ae:	48 89 c7             	mov    %rax,%rdi
    f1b1:	e8 ba 52 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    f1b6:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f1bd:	48 89 c7             	mov    %rax,%rdi
    f1c0:	e8 33 16 00 00       	call   107f8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f1c5:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    f1cc:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f1d3:	48 89 d6             	mov    %rdx,%rsi
    f1d6:	48 89 c7             	mov    %rax,%rdi
    f1d9:	e8 df 15 00 00       	call   107bd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f1de:	84 c0                	test   %al,%al
    f1e0:	0f 85 7b ff ff ff    	jne    f161 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    f1e6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f1ed:	48 83 c0 10          	add    $0x10,%rax
    f1f1:	48 8d 15 08 a3 00 00 	lea    0xa308(%rip),%rdx        # 19500 <_ZN6__pstl9execution2v1L5unseqE+0x1c1>
    f1f8:	48 89 d6             	mov    %rdx,%rsi
    f1fb:	48 89 c7             	mov    %rax,%rdi
    f1fe:	e8 5d 51 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    f203:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f20a:	48 83 c0 10          	add    $0x10,%rax
    f20e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f212:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f216:	48 89 c7             	mov    %rax,%rdi
    f219:	e8 ae 10 00 00       	call   102cc <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f21e:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    f225:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f229:	48 89 c7             	mov    %rax,%rdi
    f22c:	e8 c1 10 00 00       	call   102f2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f231:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    f238:	eb 67                	jmp    f2a1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    f23a:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f241:	48 89 c7             	mov    %rax,%rdi
    f244:	e8 2d 11 00 00       	call   10376 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f249:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    f250:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f257:	48 83 c0 10          	add    $0x10,%rax
    f25b:	48 8d 15 9b a2 00 00 	lea    0xa29b(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f262:	48 89 d6             	mov    %rdx,%rsi
    f265:	48 89 c7             	mov    %rax,%rdi
    f268:	e8 f3 50 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f26d:	48 89 c2             	mov    %rax,%rdx
    f270:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f277:	48 8b 00             	mov    (%rax),%rax
    f27a:	48 89 c6             	mov    %rax,%rsi
    f27d:	48 89 d7             	mov    %rdx,%rdi
    f280:	e8 db 50 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f285:	be 0a 00 00 00       	mov    $0xa,%esi
    f28a:	48 89 c7             	mov    %rax,%rdi
    f28d:	e8 de 51 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    f292:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f299:	48 89 c7             	mov    %rax,%rdi
    f29c:	e8 b5 10 00 00       	call   10356 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f2a1:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    f2a8:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f2af:	48 89 d6             	mov    %rdx,%rsi
    f2b2:	48 89 c7             	mov    %rax,%rdi
    f2b5:	e8 61 10 00 00       	call   1031b <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f2ba:	84 c0                	test   %al,%al
    f2bc:	0f 85 78 ff ff ff    	jne    f23a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    f2c2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2c9:	48 83 c0 10          	add    $0x10,%rax
    f2cd:	be 0a 00 00 00       	mov    $0xa,%esi
    f2d2:	48 89 c7             	mov    %rax,%rdi
    f2d5:	e8 96 51 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    f2da:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2e1:	48 83 c0 10          	add    $0x10,%rax
    f2e5:	48 8d 15 24 a2 00 00 	lea    0xa224(%rip),%rdx        # 19510 <_ZN6__pstl9execution2v1L5unseqE+0x1d1>
    f2ec:	48 89 d6             	mov    %rdx,%rsi
    f2ef:	48 89 c7             	mov    %rax,%rdi
    f2f2:	e8 69 50 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    f2f7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2fe:	48 83 c0 10          	add    $0x10,%rax
    f302:	48 8d 15 1c a2 00 00 	lea    0xa21c(%rip),%rdx        # 19525 <_ZN6__pstl9execution2v1L5unseqE+0x1e6>
    f309:	48 89 d6             	mov    %rdx,%rsi
    f30c:	48 89 c7             	mov    %rax,%rdi
    f30f:	e8 4c 50 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    f314:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f31b:	48 89 c7             	mov    %rax,%rdi
    f31e:	e8 07 7c ff ff       	call   6f2a <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    f323:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f32a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f32e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f332:	48 89 c7             	mov    %rax,%rdi
    f335:	e8 ea d6 ff ff       	call   ca24 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    f33a:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    f341:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f345:	48 89 c7             	mov    %rax,%rdi
    f348:	e8 fd d6 ff ff       	call   ca4a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    f34d:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    f354:	eb 5e                	jmp    f3b4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    f356:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f35d:	48 89 c7             	mov    %rax,%rdi
    f360:	e8 6d d7 ff ff       	call   cad2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f365:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    f369:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f370:	48 83 c0 10          	add    $0x10,%rax
    f374:	48 8d 15 82 a1 00 00 	lea    0xa182(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f37b:	48 89 d6             	mov    %rdx,%rsi
    f37e:	48 89 c7             	mov    %rax,%rdi
    f381:	e8 da 4f ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f386:	48 89 c2             	mov    %rax,%rdx
    f389:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f38d:	48 89 c6             	mov    %rax,%rsi
    f390:	48 89 d7             	mov    %rdx,%rdi
    f393:	e8 c8 4f ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f398:	be 0a 00 00 00       	mov    $0xa,%esi
    f39d:	48 89 c7             	mov    %rax,%rdi
    f3a0:	e8 cb 50 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    f3a5:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f3ac:	48 89 c7             	mov    %rax,%rdi
    f3af:	e8 fa d6 ff ff       	call   caae <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f3b4:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    f3bb:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f3c2:	48 89 d6             	mov    %rdx,%rsi
    f3c5:	48 89 c7             	mov    %rax,%rdi
    f3c8:	e8 a6 d6 ff ff       	call   ca73 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f3cd:	84 c0                	test   %al,%al
    f3cf:	75 85                	jne    f356 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    f3d1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f3d8:	48 83 c0 10          	add    $0x10,%rax
    f3dc:	48 8d 15 53 a1 00 00 	lea    0xa153(%rip),%rdx        # 19536 <_ZN6__pstl9execution2v1L5unseqE+0x1f7>
    f3e3:	48 89 d6             	mov    %rdx,%rsi
    f3e6:	48 89 c7             	mov    %rax,%rdi
    f3e9:	e8 72 4f ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    f3ee:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f3f5:	48 83 c0 28          	add    $0x28,%rax
    f3f9:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f3fd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f401:	48 89 c7             	mov    %rax,%rdi
    f404:	e8 9f 1f 00 00       	call   113a8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    f409:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    f410:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f414:	48 89 c7             	mov    %rax,%rdi
    f417:	e8 b2 1f 00 00       	call   113ce <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    f41c:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    f423:	eb 61                	jmp    f486 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    f425:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f42c:	48 89 c7             	mov    %rax,%rdi
    f42f:	e8 1e 20 00 00       	call   11452 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f434:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    f438:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f43f:	48 83 c0 10          	add    $0x10,%rax
    f443:	48 8d 15 b3 a0 00 00 	lea    0xa0b3(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f44a:	48 89 d6             	mov    %rdx,%rsi
    f44d:	48 89 c7             	mov    %rax,%rdi
    f450:	e8 0b 4f ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f455:	48 89 c2             	mov    %rax,%rdx
    f458:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f45c:	48 8b 00             	mov    (%rax),%rax
    f45f:	48 89 c6             	mov    %rax,%rsi
    f462:	48 89 d7             	mov    %rdx,%rdi
    f465:	e8 f6 4e ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f46a:	be 0a 00 00 00       	mov    $0xa,%esi
    f46f:	48 89 c7             	mov    %rax,%rdi
    f472:	e8 f9 4f ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    f477:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f47e:	48 89 c7             	mov    %rax,%rdi
    f481:	e8 ac 1f 00 00       	call   11432 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    f486:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    f48d:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f494:	48 89 d6             	mov    %rdx,%rsi
    f497:	48 89 c7             	mov    %rax,%rdi
    f49a:	e8 58 1f 00 00       	call   113f7 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    f49f:	84 c0                	test   %al,%al
    f4a1:	75 82                	jne    f425 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    f4a3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f4aa:	48 83 c0 10          	add    $0x10,%rax
    f4ae:	be 0a 00 00 00       	mov    $0xa,%esi
    f4b3:	48 89 c7             	mov    %rax,%rdi
    f4b6:	e8 b5 4f ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    f4bb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f4c2:	48 83 c0 10          	add    $0x10,%rax
    f4c6:	48 8d 15 79 a0 00 00 	lea    0xa079(%rip),%rdx        # 19546 <_ZN6__pstl9execution2v1L5unseqE+0x207>
    f4cd:	48 89 d6             	mov    %rdx,%rsi
    f4d0:	48 89 c7             	mov    %rax,%rdi
    f4d3:	e8 88 4e ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    f4d8:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f4df:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f4e3:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f4ea:	48 89 d6             	mov    %rdx,%rsi
    f4ed:	48 89 c7             	mov    %rax,%rdi
    f4f0:	e8 e1 7a ff ff       	call   6fd6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    f4f5:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f4fc:	48 8b 50 58          	mov    0x58(%rax),%rdx
    f500:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    f507:	48 89 d6             	mov    %rdx,%rsi
    f50a:	48 89 c7             	mov    %rax,%rdi
    f50d:	e8 33 7c ff ff       	call   7145 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    f512:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    f519:	00 
  size_t selectedDeviceIndex = 0;
    f51a:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f521:	00 
  for (const auto &physDev : physicalDeviceList) {
    f522:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f529:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f52d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f531:	48 89 c7             	mov    %rax,%rdi
    f534:	e8 63 10 00 00       	call   1059c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    f539:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    f540:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f544:	48 89 c7             	mov    %rax,%rdi
    f547:	e8 76 10 00 00       	call   105c2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    f54c:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    f553:	e9 c7 06 00 00       	jmp    fc1f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    f558:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    f55f:	48 89 c7             	mov    %rax,%rdi
    f562:	e8 df 10 00 00       	call   10646 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    f567:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    f56b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f572:	48 89 c7             	mov    %rax,%rdi
    f575:	e8 56 51 ff ff       	call   46d0 <_ZNSaIcEC1Ev@plt>
    f57a:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    f581:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f588:	48 8d 0d cd 9f 00 00 	lea    0x9fcd(%rip),%rcx        # 1955c <_ZN6__pstl9execution2v1L5unseqE+0x21d>
    f58f:	48 89 ce             	mov    %rcx,%rsi
    f592:	48 89 c7             	mov    %rax,%rdi
    f595:	e8 76 55 ff ff       	call   4b10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f59a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f5a1:	48 89 c7             	mov    %rax,%rdi
    f5a4:	e8 67 4e ff ff       	call   4410 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    f5a9:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    f5b0:	b8 00 00 00 00       	mov    $0x0,%eax
    f5b5:	b9 0e 00 00 00       	mov    $0xe,%ecx
    f5ba:	48 89 d7             	mov    %rdx,%rdi
    f5bd:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    f5c0:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    f5c7:	00 00 00 
    vk11Props.pNext = nullptr;
    f5ca:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    f5d1:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    f5d5:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    f5dc:	b8 00 00 00 00       	mov    $0x0,%eax
    f5e1:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    f5e6:	48 89 d7             	mov    %rdx,%rdi
    f5e9:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    f5ec:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    f5f3:	00 00 00 
    vk12Props.pNext = &vk11Props;
    f5f6:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    f5fd:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    f604:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f60b:	b8 00 00 00 00       	mov    $0x0,%eax
    f610:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    f615:	48 89 d7             	mov    %rdx,%rdi
    f618:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    f61b:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    f622:	00 00 00 
    vk13Props.pNext = &vk12Props;
    f625:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f62c:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    f633:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f637:	48 8b 08             	mov    (%rax),%rcx
    f63a:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    f641:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f648:	48 89 ce             	mov    %rcx,%rsi
    f64b:	48 89 c7             	mov    %rax,%rdi
    f64e:	e8 1c 7b ff ff       	call   716f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    f653:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    f659:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    f65f:	39 c2                	cmp    %eax,%edx
    f661:	75 08                	jne    f66b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    f663:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f667:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    f66b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f66f:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f673:	75 19                	jne    f68e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    f675:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f67c:	48 8d 15 da 9e 00 00 	lea    0x9eda(%rip),%rdx        # 1955d <_ZN6__pstl9execution2v1L5unseqE+0x21e>
    f683:	48 89 d6             	mov    %rdx,%rsi
    f686:	48 89 c7             	mov    %rax,%rdi
    f689:	e8 c2 4e ff ff       	call   4550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    f68e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f695:	48 83 c0 10          	add    $0x10,%rax
    f699:	48 8d 15 c9 9e 00 00 	lea    0x9ec9(%rip),%rdx        # 19569 <_ZN6__pstl9execution2v1L5unseqE+0x22a>
    f6a0:	48 89 d6             	mov    %rdx,%rsi
    f6a3:	48 89 c7             	mov    %rax,%rdi
    f6a6:	e8 b5 4c ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f6ab:	48 89 c2             	mov    %rax,%rdx
    f6ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6b2:	48 89 c6             	mov    %rax,%rsi
    f6b5:	48 89 d7             	mov    %rdx,%rdi
    f6b8:	e8 d3 49 ff ff       	call   4090 <_ZNSolsEm@plt>
    f6bd:	48 89 c2             	mov    %rax,%rdx
    f6c0:	48 8d 05 a6 9e 00 00 	lea    0x9ea6(%rip),%rax        # 1956d <_ZN6__pstl9execution2v1L5unseqE+0x22e>
    f6c7:	48 89 c6             	mov    %rax,%rsi
    f6ca:	48 89 d7             	mov    %rdx,%rdi
    f6cd:	e8 8e 4c ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f6d2:	48 89 c2             	mov    %rax,%rdx
    f6d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6d9:	48 89 c6             	mov    %rax,%rsi
    f6dc:	48 89 d7             	mov    %rdx,%rdi
    f6df:	e8 ac 49 ff ff       	call   4090 <_ZNSolsEm@plt>
    f6e4:	48 89 c2             	mov    %rax,%rdx
    f6e7:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f6ee:	48 89 c6             	mov    %rax,%rsi
    f6f1:	48 89 d7             	mov    %rdx,%rdi
    f6f4:	e8 07 4c ff ff       	call   4300 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    f6f9:	48 89 c2             	mov    %rax,%rdx
    f6fc:	48 8d 05 73 9e 00 00 	lea    0x9e73(%rip),%rax        # 19576 <_ZN6__pstl9execution2v1L5unseqE+0x237>
    f703:	48 89 c6             	mov    %rax,%rsi
    f706:	48 89 d7             	mov    %rdx,%rdi
    f709:	e8 52 4c ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    f70e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f715:	48 83 c0 10          	add    $0x10,%rax
    f719:	48 8d 15 59 9e 00 00 	lea    0x9e59(%rip),%rdx        # 19579 <_ZN6__pstl9execution2v1L5unseqE+0x23a>
    f720:	48 89 d6             	mov    %rdx,%rsi
    f723:	48 89 c7             	mov    %rax,%rdi
    f726:	e8 35 4c ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f72b:	48 89 c2             	mov    %rax,%rdx
    f72e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f732:	48 89 c6             	mov    %rax,%rsi
    f735:	48 89 d7             	mov    %rdx,%rdi
    f738:	e8 53 49 ff ff       	call   4090 <_ZNSolsEm@plt>
    f73d:	48 89 c2             	mov    %rax,%rdx
    f740:	48 8d 05 37 9e 00 00 	lea    0x9e37(%rip),%rax        # 1957e <_ZN6__pstl9execution2v1L5unseqE+0x23f>
    f747:	48 89 c6             	mov    %rax,%rsi
    f74a:	48 89 d7             	mov    %rdx,%rdi
    f74d:	e8 0e 4c ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    f752:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f759:	48 83 c0 10          	add    $0x10,%rax
    f75d:	48 8d 15 31 9e 00 00 	lea    0x9e31(%rip),%rdx        # 19595 <_ZN6__pstl9execution2v1L5unseqE+0x256>
    f764:	48 89 d6             	mov    %rdx,%rsi
    f767:	48 89 c7             	mov    %rax,%rdi
    f76a:	e8 f1 4b ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f76f:	48 89 c2             	mov    %rax,%rdx
    f772:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    f778:	89 c6                	mov    %eax,%esi
    f77a:	48 89 d7             	mov    %rdx,%rdi
    f77d:	e8 be 4d ff ff       	call   4540 <_ZNSolsEj@plt>
    f782:	be 0a 00 00 00       	mov    $0xa,%esi
    f787:	48 89 c7             	mov    %rax,%rdi
    f78a:	e8 e1 4c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    f78f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f796:	48 83 c0 10          	add    $0x10,%rax
    f79a:	48 8d 15 03 9e 00 00 	lea    0x9e03(%rip),%rdx        # 195a4 <_ZN6__pstl9execution2v1L5unseqE+0x265>
    f7a1:	48 89 d6             	mov    %rdx,%rsi
    f7a4:	48 89 c7             	mov    %rax,%rdi
    f7a7:	e8 b4 4b ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f7ac:	48 89 c2             	mov    %rax,%rdx
    f7af:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    f7b6:	48 83 c0 24          	add    $0x24,%rax
    f7ba:	48 89 c6             	mov    %rax,%rsi
    f7bd:	48 89 d7             	mov    %rdx,%rdi
    f7c0:	e8 9b 4b ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f7c5:	be 0a 00 00 00       	mov    $0xa,%esi
    f7ca:	48 89 c7             	mov    %rax,%rdi
    f7cd:	e8 9e 4c ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    f7d2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f7d9:	48 83 c0 10          	add    $0x10,%rax
    f7dd:	48 8d 15 d1 9d 00 00 	lea    0x9dd1(%rip),%rdx        # 195b5 <_ZN6__pstl9execution2v1L5unseqE+0x276>
    f7e4:	48 89 d6             	mov    %rdx,%rsi
    f7e7:	48 89 c7             	mov    %rax,%rdi
    f7ea:	e8 71 4b ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    f7ef:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    f7f5:	83 f8 04             	cmp    $0x4,%eax
    f7f8:	0f 84 80 00 00 00    	je     f87e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    f7fe:	83 f8 04             	cmp    $0x4,%eax
    f801:	0f 8f 96 00 00 00    	jg     f89d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    f807:	83 f8 03             	cmp    $0x3,%eax
    f80a:	74 53                	je     f85f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    f80c:	83 f8 03             	cmp    $0x3,%eax
    f80f:	0f 8f 88 00 00 00    	jg     f89d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    f815:	83 f8 01             	cmp    $0x1,%eax
    f818:	74 07                	je     f821 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    f81a:	83 f8 02             	cmp    $0x2,%eax
    f81d:	74 21                	je     f840 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    f81f:	eb 7c                	jmp    f89d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    f821:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f828:	48 83 c0 10          	add    $0x10,%rax
    f82c:	48 8d 15 93 9d 00 00 	lea    0x9d93(%rip),%rdx        # 195c6 <_ZN6__pstl9execution2v1L5unseqE+0x287>
    f833:	48 89 d6             	mov    %rdx,%rsi
    f836:	48 89 c7             	mov    %rax,%rdi
    f839:	e8 22 4b ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f83e:	eb 7b                	jmp    f8bb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    f840:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f847:	48 83 c0 10          	add    $0x10,%rax
    f84b:	48 8d 15 84 9d 00 00 	lea    0x9d84(%rip),%rdx        # 195d6 <_ZN6__pstl9execution2v1L5unseqE+0x297>
    f852:	48 89 d6             	mov    %rdx,%rsi
    f855:	48 89 c7             	mov    %rax,%rdi
    f858:	e8 03 4b ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f85d:	eb 5c                	jmp    f8bb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    f85f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f866:	48 83 c0 10          	add    $0x10,%rax
    f86a:	48 8d 15 73 9d 00 00 	lea    0x9d73(%rip),%rdx        # 195e4 <_ZN6__pstl9execution2v1L5unseqE+0x2a5>
    f871:	48 89 d6             	mov    %rdx,%rsi
    f874:	48 89 c7             	mov    %rax,%rdi
    f877:	e8 e4 4a ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f87c:	eb 3d                	jmp    f8bb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    f87e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f885:	48 83 c0 10          	add    $0x10,%rax
    f889:	48 8d 15 61 9d 00 00 	lea    0x9d61(%rip),%rdx        # 195f1 <_ZN6__pstl9execution2v1L5unseqE+0x2b2>
    f890:	48 89 d6             	mov    %rdx,%rsi
    f893:	48 89 c7             	mov    %rax,%rdi
    f896:	e8 c5 4a ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f89b:	eb 1e                	jmp    f8bb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    f89d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8a4:	48 83 c0 10          	add    $0x10,%rax
    f8a8:	48 8d 15 47 9d 00 00 	lea    0x9d47(%rip),%rdx        # 195f6 <_ZN6__pstl9execution2v1L5unseqE+0x2b7>
    f8af:	48 89 d6             	mov    %rdx,%rsi
    f8b2:	48 89 c7             	mov    %rax,%rdi
    f8b5:	e8 a6 4a ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f8ba:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    f8bb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8c2:	48 83 c0 10          	add    $0x10,%rax
    f8c6:	48 8d 15 30 9d 00 00 	lea    0x9d30(%rip),%rdx        # 195fd <_ZN6__pstl9execution2v1L5unseqE+0x2be>
    f8cd:	48 89 d6             	mov    %rdx,%rsi
    f8d0:	48 89 c7             	mov    %rax,%rdi
    f8d3:	e8 88 4a ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f8d8:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    f8de:	89 d6                	mov    %edx,%esi
    f8e0:	48 89 c7             	mov    %rax,%rdi
    f8e3:	e8 a8 4d ff ff       	call   4690 <_ZNSolsEi@plt>
    f8e8:	be 0a 00 00 00       	mov    $0xa,%esi
    f8ed:	48 89 c7             	mov    %rax,%rdi
    f8f0:	e8 7b 4b ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    f8f5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8fc:	48 83 c0 10          	add    $0x10,%rax
    f900:	48 8d 15 05 9d 00 00 	lea    0x9d05(%rip),%rdx        # 1960c <_ZN6__pstl9execution2v1L5unseqE+0x2cd>
    f907:	48 89 d6             	mov    %rdx,%rsi
    f90a:	48 89 c7             	mov    %rax,%rdi
    f90d:	e8 4e 4a ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f912:	48 89 c2             	mov    %rax,%rdx
    f915:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f91c:	48 83 c0 14          	add    $0x14,%rax
    f920:	48 89 c6             	mov    %rax,%rsi
    f923:	48 89 d7             	mov    %rdx,%rdi
    f926:	e8 35 4a ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f92b:	be 0a 00 00 00       	mov    $0xa,%esi
    f930:	48 89 c7             	mov    %rax,%rdi
    f933:	e8 38 4b ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    f938:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f93f:	48 83 c0 10          	add    $0x10,%rax
    f943:	48 8d 15 d3 9c 00 00 	lea    0x9cd3(%rip),%rdx        # 1961d <_ZN6__pstl9execution2v1L5unseqE+0x2de>
    f94a:	48 89 d6             	mov    %rdx,%rsi
    f94d:	48 89 c7             	mov    %rax,%rdi
    f950:	e8 0b 4a ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f955:	48 89 c2             	mov    %rax,%rdx
    f958:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f95f:	48 05 14 01 00 00    	add    $0x114,%rax
    f965:	48 89 c6             	mov    %rax,%rsi
    f968:	48 89 d7             	mov    %rdx,%rdi
    f96b:	e8 f0 49 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f970:	be 0a 00 00 00       	mov    $0xa,%esi
    f975:	48 89 c7             	mov    %rax,%rdi
    f978:	e8 f3 4a ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    f97d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f984:	48 83 c0 10          	add    $0x10,%rax
    f988:	48 8d 15 a9 9c 00 00 	lea    0x9ca9(%rip),%rdx        # 19638 <_ZN6__pstl9execution2v1L5unseqE+0x2f9>
    f98f:	48 89 d6             	mov    %rdx,%rsi
    f992:	48 89 c7             	mov    %rax,%rdi
    f995:	e8 c6 49 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f99a:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    f99d:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    f9a4:	48 89 c6             	mov    %rax,%rsi
    f9a7:	48 89 d7             	mov    %rdx,%rdi
    f9aa:	e8 e1 46 ff ff       	call   4090 <_ZNSolsEm@plt>
    f9af:	be 0a 00 00 00       	mov    $0xa,%esi
    f9b4:	48 89 c7             	mov    %rax,%rdi
    f9b7:	e8 b4 4a ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    f9bc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9c3:	48 83 c0 10          	add    $0x10,%rax
    f9c7:	48 8d 15 ab 9b 00 00 	lea    0x9bab(%rip),%rdx        # 19579 <_ZN6__pstl9execution2v1L5unseqE+0x23a>
    f9ce:	48 89 d6             	mov    %rdx,%rsi
    f9d1:	48 89 c7             	mov    %rax,%rdi
    f9d4:	e8 87 49 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f9d9:	48 89 c2             	mov    %rax,%rdx
    f9dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9e0:	48 89 c6             	mov    %rax,%rsi
    f9e3:	48 89 d7             	mov    %rdx,%rdi
    f9e6:	e8 a5 46 ff ff       	call   4090 <_ZNSolsEm@plt>
    f9eb:	48 89 c2             	mov    %rax,%rdx
    f9ee:	48 8d 05 6b 9c 00 00 	lea    0x9c6b(%rip),%rax        # 19660 <_ZN6__pstl9execution2v1L5unseqE+0x321>
    f9f5:	48 89 c6             	mov    %rax,%rsi
    f9f8:	48 89 d7             	mov    %rdx,%rdi
    f9fb:	e8 60 49 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    fa00:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fa04:	48 8b 08             	mov    (%rax),%rcx
    fa07:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fa0e:	ba 00 00 00 00       	mov    $0x0,%edx
    fa13:	48 89 ce             	mov    %rcx,%rsi
    fa16:	48 89 c7             	mov    %rax,%rdi
    fa19:	e8 e3 72 ff ff       	call   6d01 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    fa1e:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fa25:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    fa29:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fa2d:	48 89 c7             	mov    %rax,%rdi
    fa30:	e8 39 0d 00 00       	call   1076e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    fa35:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
    fa3c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fa40:	48 89 c7             	mov    %rax,%rdi
    fa43:	e8 4c 0d 00 00       	call   10794 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    fa48:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
    fa4f:	eb 5e                	jmp    faaf <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
    fa51:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fa58:	48 89 c7             	mov    %rax,%rdi
    fa5b:	e8 bc 0d 00 00       	call   1081c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    fa60:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
    fa64:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa6b:	48 83 c0 10          	add    $0x10,%rax
    fa6f:	48 8d 15 0b 9c 00 00 	lea    0x9c0b(%rip),%rdx        # 19681 <_ZN6__pstl9execution2v1L5unseqE+0x342>
    fa76:	48 89 d6             	mov    %rdx,%rsi
    fa79:	48 89 c7             	mov    %rax,%rdi
    fa7c:	e8 df 48 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa81:	48 89 c2             	mov    %rax,%rdx
    fa84:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    fa88:	48 89 c6             	mov    %rax,%rsi
    fa8b:	48 89 d7             	mov    %rdx,%rdi
    fa8e:	e8 cd 48 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa93:	be 0a 00 00 00       	mov    $0xa,%esi
    fa98:	48 89 c7             	mov    %rax,%rdi
    fa9b:	e8 d0 49 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
    faa0:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    faa7:	48 89 c7             	mov    %rax,%rdi
    faaa:	e8 49 0d 00 00       	call   107f8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    faaf:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
    fab6:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fabd:	48 89 d6             	mov    %rdx,%rsi
    fac0:	48 89 c7             	mov    %rax,%rdi
    fac3:	e8 f5 0c 00 00       	call   107bd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    fac8:	84 c0                	test   %al,%al
    faca:	75 85                	jne    fa51 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
    facc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fad0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    fad4:	0f 85 fb 00 00 00    	jne    fbd5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
    fada:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fae1:	48 83 c0 10          	add    $0x10,%rax
    fae5:	48 8d 15 8d 9a 00 00 	lea    0x9a8d(%rip),%rdx        # 19579 <_ZN6__pstl9execution2v1L5unseqE+0x23a>
    faec:	48 89 d6             	mov    %rdx,%rsi
    faef:	48 89 c7             	mov    %rax,%rdi
    faf2:	e8 69 48 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    faf7:	48 89 c2             	mov    %rax,%rdx
    fafa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fafe:	48 89 c6             	mov    %rax,%rsi
    fb01:	48 89 d7             	mov    %rdx,%rdi
    fb04:	e8 87 45 ff ff       	call   4090 <_ZNSolsEm@plt>
    fb09:	48 89 c2             	mov    %rax,%rdx
    fb0c:	48 8d 05 75 9b 00 00 	lea    0x9b75(%rip),%rax        # 19688 <_ZN6__pstl9execution2v1L5unseqE+0x349>
    fb13:	48 89 c6             	mov    %rax,%rsi
    fb16:	48 89 d7             	mov    %rdx,%rdi
    fb19:	e8 42 48 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
    fb1e:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fb25:	48 05 88 00 00 00    	add    $0x88,%rax
    fb2b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    fb2f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fb33:	48 89 c7             	mov    %rax,%rdi
    fb36:	e8 91 07 00 00       	call   102cc <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    fb3b:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
    fb42:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fb46:	48 89 c7             	mov    %rax,%rdi
    fb49:	e8 a4 07 00 00       	call   102f2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    fb4e:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
    fb55:	eb 61                	jmp    fbb8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
    fb57:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fb5e:	48 89 c7             	mov    %rax,%rdi
    fb61:	e8 10 08 00 00       	call   10376 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fb66:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
    fb6a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb71:	48 83 c0 10          	add    $0x10,%rax
    fb75:	48 8d 15 05 9b 00 00 	lea    0x9b05(%rip),%rdx        # 19681 <_ZN6__pstl9execution2v1L5unseqE+0x342>
    fb7c:	48 89 d6             	mov    %rdx,%rsi
    fb7f:	48 89 c7             	mov    %rax,%rdi
    fb82:	e8 d9 47 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb87:	48 89 c2             	mov    %rax,%rdx
    fb8a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    fb8e:	48 8b 00             	mov    (%rax),%rax
    fb91:	48 89 c6             	mov    %rax,%rsi
    fb94:	48 89 d7             	mov    %rdx,%rdi
    fb97:	e8 c4 47 ff ff       	call   4360 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb9c:	be 0a 00 00 00       	mov    $0xa,%esi
    fba1:	48 89 c7             	mov    %rax,%rdi
    fba4:	e8 c7 48 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
    fba9:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fbb0:	48 89 c7             	mov    %rax,%rdi
    fbb3:	e8 9e 07 00 00       	call   10356 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    fbb8:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
    fbbf:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fbc6:	48 89 d6             	mov    %rdx,%rsi
    fbc9:	48 89 c7             	mov    %rax,%rdi
    fbcc:	e8 4a 07 00 00       	call   1031b <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fbd1:	84 c0                	test   %al,%al
    fbd3:	75 82                	jne    fb57 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
    fbd5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fbdc:	48 83 c0 10          	add    $0x10,%rax
    fbe0:	be 0a 00 00 00       	mov    $0xa,%esi
    fbe5:	48 89 c7             	mov    %rax,%rdi
    fbe8:	e8 83 48 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
    fbed:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
    fbf2:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fbf9:	48 89 c7             	mov    %rax,%rdi
    fbfc:	e8 75 82 ff ff       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fc01:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fc08:	48 89 c7             	mov    %rax,%rdi
    fc0b:	e8 c0 45 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
    fc10:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fc17:	48 89 c7             	mov    %rax,%rdi
    fc1a:	e8 07 0a 00 00       	call   10626 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    fc1f:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    fc26:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fc2d:	48 89 d6             	mov    %rdx,%rsi
    fc30:	48 89 c7             	mov    %rax,%rdi
    fc33:	e8 b3 09 00 00       	call   105eb <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fc38:	84 c0                	test   %al,%al
    fc3a:	0f 85 18 f9 ff ff    	jne    f558 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
    fc40:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc47:	48 83 c0 10          	add    $0x10,%rax
    fc4b:	be 0a 00 00 00       	mov    $0xa,%esi
    fc50:	48 89 c7             	mov    %rax,%rdi
    fc53:	e8 18 48 ff ff       	call   4470 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fc58:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fc5f:	48 89 c7             	mov    %rax,%rdi
    fc62:	e8 99 84 ff ff       	call   8100 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    fc67:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fc6e:	48 89 c7             	mov    %rax,%rdi
    fc71:	e8 92 80 ff ff       	call   7d08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    fc76:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    fc7d:	48 89 c7             	mov    %rax,%rdi
    fc80:	e8 f1 81 ff ff       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fc85:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc8c:	48 89 c7             	mov    %rax,%rdi
    fc8f:	e8 ec 43 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    fc94:	e9 cd 00 00 00       	jmp    fd66 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    fc99:	49 89 c4             	mov    %rax,%r12
    fc9c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    fca3:	48 89 c7             	mov    %rax,%rdi
    fca6:	e8 25 45 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fcab:	eb 03                	jmp    fcb0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
    fcad:	49 89 c4             	mov    %rax,%r12
    fcb0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fcb7:	48 89 c7             	mov    %rax,%rdi
    fcba:	e8 11 45 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fcbf:	eb 03                	jmp    fcc4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
    fcc1:	49 89 c4             	mov    %rax,%r12
    fcc4:	48 89 df             	mov    %rbx,%rdi
    fcc7:	e8 64 45 ff ff       	call   4230 <__cxa_free_exception@plt>
    fccc:	4c 89 e3             	mov    %r12,%rbx
    fccf:	eb 7b                	jmp    fd4c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
    fcd1:	48 89 c3             	mov    %rax,%rbx
    fcd4:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    fcdb:	48 89 c7             	mov    %rax,%rdi
    fcde:	e8 2d 47 ff ff       	call   4410 <_ZNSaIcED1Ev@plt>
    fce3:	eb 2b                	jmp    fd10 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
    fce5:	48 89 c3             	mov    %rax,%rbx
    fce8:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fcef:	48 89 c7             	mov    %rax,%rdi
    fcf2:	e8 7f 81 ff ff       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fcf7:	eb 03                	jmp    fcfc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
    fcf9:	48 89 c3             	mov    %rax,%rbx
    fcfc:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fd03:	48 89 c7             	mov    %rax,%rdi
    fd06:	e8 c5 44 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fd0b:	eb 03                	jmp    fd10 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
    fd0d:	48 89 c3             	mov    %rax,%rbx
    fd10:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fd17:	48 89 c7             	mov    %rax,%rdi
    fd1a:	e8 e1 83 ff ff       	call   8100 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    fd1f:	eb 03                	jmp    fd24 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
    fd21:	48 89 c3             	mov    %rax,%rbx
    fd24:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fd2b:	48 89 c7             	mov    %rax,%rdi
    fd2e:	e8 d5 7f ff ff       	call   7d08 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    fd33:	eb 03                	jmp    fd38 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
    fd35:	48 89 c3             	mov    %rax,%rbx
    fd38:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    fd3f:	48 89 c7             	mov    %rax,%rdi
    fd42:	e8 2f 81 ff ff       	call   7e76 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fd47:	eb 03                	jmp    fd4c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    fd49:	48 89 c3             	mov    %rax,%rbx
    fd4c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd53:	48 89 c7             	mov    %rax,%rdi
    fd56:	e8 25 43 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    fd5b:	48 89 d8             	mov    %rbx,%rax
    fd5e:	48 89 c7             	mov    %rax,%rdi
    fd61:	e8 5a 49 ff ff       	call   46c0 <_Unwind_Resume@plt>
    fd66:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
    fd6d:	5b                   	pop    %rbx
    fd6e:	41 5c                	pop    %r12
    fd70:	5d                   	pop    %rbp
    fd71:	c3                   	ret

000000000000fd72 <_Z41__static_initialization_and_destruction_0ii>:
    fd72:	55                   	push   %rbp
    fd73:	48 89 e5             	mov    %rsp,%rbp
    fd76:	48 83 ec 10          	sub    $0x10,%rsp
    fd7a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    fd7d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    fd80:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    fd84:	75 3b                	jne    fdc1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fd86:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    fd8d:	75 32                	jne    fdc1 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fd8f:	48 8d 05 5e 68 01 00 	lea    0x1685e(%rip),%rax        # 265f4 <_ZStL8__ioinit>
    fd96:	48 89 c7             	mov    %rax,%rdi
    fd99:	e8 32 48 ff ff       	call   45d0 <_ZNSt8ios_base4InitC1Ev@plt>
    fd9e:	48 8d 05 f3 65 01 00 	lea    0x165f3(%rip),%rax        # 26398 <__dso_handle>
    fda5:	48 89 c2             	mov    %rax,%rdx
    fda8:	48 8d 05 45 68 01 00 	lea    0x16845(%rip),%rax        # 265f4 <_ZStL8__ioinit>
    fdaf:	48 89 c6             	mov    %rax,%rsi
    fdb2:	48 8b 05 0f 62 01 00 	mov    0x1620f(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    fdb9:	48 89 c7             	mov    %rax,%rdi
    fdbc:	e8 2f 45 ff ff       	call   42f0 <__cxa_atexit@plt>
    fdc1:	90                   	nop
    fdc2:	c9                   	leave
    fdc3:	c3                   	ret

000000000000fdc4 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    fdc4:	55                   	push   %rbp
    fdc5:	48 89 e5             	mov    %rsp,%rbp
    fdc8:	be ff ff 00 00       	mov    $0xffff,%esi
    fdcd:	bf 01 00 00 00       	mov    $0x1,%edi
    fdd2:	e8 9b ff ff ff       	call   fd72 <_Z41__static_initialization_and_destruction_0ii>
    fdd7:	5d                   	pop    %rbp
    fdd8:	c3                   	ret
    fdd9:	90                   	nop

000000000000fdda <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    fdda:	55                   	push   %rbp
    fddb:	48 89 e5             	mov    %rsp,%rbp
    fdde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fde2:	48 8d 15 27 5f 01 00 	lea    0x15f27(%rip),%rdx        # 25d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    fde9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fded:	48 89 10             	mov    %rdx,(%rax)
    fdf0:	90                   	nop
    fdf1:	5d                   	pop    %rbp
    fdf2:	c3                   	ret

000000000000fdf3 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    fdf3:	55                   	push   %rbp
    fdf4:	48 89 e5             	mov    %rsp,%rbp
    fdf7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fdfb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fdff:	90                   	nop
    fe00:	5d                   	pop    %rbp
    fe01:	c3                   	ret

000000000000fe02 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    fe02:	55                   	push   %rbp
    fe03:	48 89 e5             	mov    %rsp,%rbp
    fe06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    fe0a:	48 8d 05 17 95 00 00 	lea    0x9517(%rip),%rax        # 19328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    fe11:	5d                   	pop    %rbp
    fe12:	c3                   	ret
    fe13:	90                   	nop

000000000000fe14 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    fe14:	55                   	push   %rbp
    fe15:	48 89 e5             	mov    %rsp,%rbp
    fe18:	48 83 ec 10          	sub    $0x10,%rsp
    fe1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe24:	48 89 c7             	mov    %rax,%rdi
    fe27:	e8 ae ff ff ff       	call   fdda <_ZNSt9exceptionC1Ev>
    fe2c:	48 8d 15 8d 5e 01 00 	lea    0x15e8d(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
    fe33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe37:	48 89 10             	mov    %rdx,(%rax)
    fe3a:	90                   	nop
    fe3b:	c9                   	leave
    fe3c:	c3                   	ret

000000000000fe3d <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    fe3d:	55                   	push   %rbp
    fe3e:	48 89 e5             	mov    %rsp,%rbp
    fe41:	53                   	push   %rbx
    fe42:	48 83 ec 08          	sub    $0x8,%rsp
    fe46:	bf 08 00 00 00       	mov    $0x8,%edi
    fe4b:	e8 10 43 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    fe50:	48 89 c3             	mov    %rax,%rbx
    fe53:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    fe5a:	48 89 df             	mov    %rbx,%rdi
    fe5d:	e8 b2 ff ff ff       	call   fe14 <_ZNSt19bad_optional_accessC1Ev>
    fe62:	48 8d 05 93 5c 00 00 	lea    0x5c93(%rip),%rax        # 15afc <_ZNSt19bad_optional_accessD1Ev>
    fe69:	48 89 c2             	mov    %rax,%rdx
    fe6c:	48 8d 05 e5 5e 01 00 	lea    0x15ee5(%rip),%rax        # 25d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    fe73:	48 89 c6             	mov    %rax,%rsi
    fe76:	48 89 df             	mov    %rbx,%rdi
    fe79:	e8 e2 47 ff ff       	call   4660 <__cxa_throw@plt>

000000000000fe7e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    fe7e:	55                   	push   %rbp
    fe7f:	48 89 e5             	mov    %rsp,%rbp
    fe82:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    fe86:	e8 3a 00 00 00       	call   fec5 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    fe8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fe8f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    fe93:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    fe97:	48 89 d6             	mov    %rdx,%rsi
    fe9a:	48 89 c7             	mov    %rax,%rdi
    fe9d:	e8 06 00 00 00       	call   fea8 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    fea2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fea6:	c9                   	leave
    fea7:	c3                   	ret

000000000000fea8 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    fea8:	55                   	push   %rbp
    fea9:	48 89 e5             	mov    %rsp,%rbp
    feac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    feb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    feb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    feb8:	48 8b 10             	mov    (%rax),%rdx
    febb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    febf:	48 89 10             	mov    %rdx,(%rax)
    fec2:	90                   	nop
    fec3:	5d                   	pop    %rbp
    fec4:	c3                   	ret

000000000000fec5 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    fec5:	55                   	push   %rbp
    fec6:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    fec9:	b8 00 00 00 00       	mov    $0x0,%eax
    fece:	5d                   	pop    %rbp
    fecf:	c3                   	ret

000000000000fed0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    fed0:	55                   	push   %rbp
    fed1:	48 89 e5             	mov    %rsp,%rbp
    fed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    fed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fedc:	48 8b 00             	mov    (%rax),%rax
    fedf:	5d                   	pop    %rbp
    fee0:	c3                   	ret
    fee1:	90                   	nop

000000000000fee2 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    fee2:	55                   	push   %rbp
    fee3:	48 89 e5             	mov    %rsp,%rbp
    fee6:	48 83 ec 10          	sub    $0x10,%rsp
    feea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    feee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fef2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    fef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fefc:	48 89 c7             	mov    %rax,%rdi
    feff:	e8 04 00 00 00       	call   ff08 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    ff04:	90                   	nop
    ff05:	c9                   	leave
    ff06:	c3                   	ret
    ff07:	90                   	nop

000000000000ff08 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    ff08:	55                   	push   %rbp
    ff09:	48 89 e5             	mov    %rsp,%rbp
    ff0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    ff10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff14:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ff1b:	00 
      _M_header._M_left = &_M_header;
    ff1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ff20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff24:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    ff28:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ff2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff30:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    ff34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff38:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    ff3f:	00 
    }
    ff40:	90                   	nop
    ff41:	5d                   	pop    %rbp
    ff42:	c3                   	ret
    ff43:	90                   	nop

000000000000ff44 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    ff44:	55                   	push   %rbp
    ff45:	48 89 e5             	mov    %rsp,%rbp
    ff48:	48 83 ec 10          	sub    $0x10,%rsp
    ff4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff54:	48 89 c7             	mov    %rax,%rdi
    ff57:	e8 60 00 00 00       	call   ffbc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    ff5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff60:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    ff64:	90                   	nop
    ff65:	c9                   	leave
    ff66:	c3                   	ret
    ff67:	90                   	nop

000000000000ff68 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    ff68:	55                   	push   %rbp
    ff69:	48 89 e5             	mov    %rsp,%rbp
    ff6c:	48 83 ec 10          	sub    $0x10,%rsp
    ff70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff78:	48 89 c7             	mov    %rax,%rdi
    ff7b:	e8 c4 ff ff ff       	call   ff44 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    ff80:	90                   	nop
    ff81:	c9                   	leave
    ff82:	c3                   	ret
    ff83:	90                   	nop

000000000000ff84 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    ff84:	55                   	push   %rbp
    ff85:	48 89 e5             	mov    %rsp,%rbp
    ff88:	48 83 ec 10          	sub    $0x10,%rsp
    ff8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff94:	48 89 c7             	mov    %rax,%rdi
    ff97:	e8 cc ff ff ff       	call   ff68 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    ff9c:	90                   	nop
    ff9d:	c9                   	leave
    ff9e:	c3                   	ret
    ff9f:	90                   	nop

000000000000ffa0 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    ffa0:	55                   	push   %rbp
    ffa1:	48 89 e5             	mov    %rsp,%rbp
    ffa4:	48 83 ec 10          	sub    $0x10,%rsp
    ffa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffb0:	48 89 c7             	mov    %rax,%rdi
    ffb3:	e8 cc ff ff ff       	call   ff84 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    ffb8:	90                   	nop
    ffb9:	c9                   	leave
    ffba:	c3                   	ret
    ffbb:	90                   	nop

000000000000ffbc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    ffbc:	55                   	push   %rbp
    ffbd:	48 89 e5             	mov    %rsp,%rbp
    ffc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffc4:	90                   	nop
    ffc5:	5d                   	pop    %rbp
    ffc6:	c3                   	ret
    ffc7:	90                   	nop

000000000000ffc8 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    ffc8:	55                   	push   %rbp
    ffc9:	48 89 e5             	mov    %rsp,%rbp
    ffcc:	48 83 ec 10          	sub    $0x10,%rsp
    ffd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ffd8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ffdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffe0:	48 89 d6             	mov    %rdx,%rsi
    ffe3:	48 89 c7             	mov    %rax,%rdi
    ffe6:	e8 87 06 00 00       	call   10672 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    ffeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffef:	c9                   	leave
    fff0:	c3                   	ret
    fff1:	90                   	nop

000000000000fff2 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    fff2:	55                   	push   %rbp
    fff3:	48 89 e5             	mov    %rsp,%rbp
    fff6:	48 83 ec 10          	sub    $0x10,%rsp
    fffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fffe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10006:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1000a:	48 89 d6             	mov    %rdx,%rsi
   1000d:	48 89 c7             	mov    %rax,%rdi
   10010:	e8 b3 ff ff ff       	call   ffc8 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   10015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10019:	c9                   	leave
   1001a:	c3                   	ret
   1001b:	90                   	nop

000000000001001c <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   1001c:	55                   	push   %rbp
   1001d:	48 89 e5             	mov    %rsp,%rbp
   10020:	48 83 ec 10          	sub    $0x10,%rsp
   10024:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   10028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1002c:	48 89 c7             	mov    %rax,%rdi
   1002f:	e8 1a 00 00 00       	call   1004e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10034:	84 c0                	test   %al,%al
   10036:	74 0e                	je     10046 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   10038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1003c:	48 89 c7             	mov    %rax,%rdi
   1003f:	e8 58 06 00 00       	call   1069c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   10044:	eb 05                	jmp    1004b <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   10046:	e8 f2 fd ff ff       	call   fe3d <_ZSt27__throw_bad_optional_accessv>
      }
   1004b:	c9                   	leave
   1004c:	c3                   	ret
   1004d:	90                   	nop

000000000001004e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   1004e:	55                   	push   %rbp
   1004f:	48 89 e5             	mov    %rsp,%rbp
   10052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   10056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1005a:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1005e:	5d                   	pop    %rbp
   1005f:	c3                   	ret

0000000000010060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   10060:	55                   	push   %rbp
   10061:	48 89 e5             	mov    %rsp,%rbp
   10064:	48 83 ec 10          	sub    $0x10,%rsp
   10068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1006c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10070:	48 89 c7             	mov    %rax,%rdi
   10073:	e8 a0 06 00 00       	call   10718 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   10078:	90                   	nop
   10079:	c9                   	leave
   1007a:	c3                   	ret
   1007b:	90                   	nop

000000000001007c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   1007c:	55                   	push   %rbp
   1007d:	48 89 e5             	mov    %rsp,%rbp
   10080:	48 83 ec 10          	sub    $0x10,%rsp
   10084:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1008c:	48 89 c7             	mov    %rax,%rdi
   1008f:	e8 4c 06 00 00       	call   106e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   10094:	90                   	nop
   10095:	c9                   	leave
   10096:	c3                   	ret
   10097:	90                   	nop

0000000000010098 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   10098:	55                   	push   %rbp
   10099:	48 89 e5             	mov    %rsp,%rbp
   1009c:	48 83 ec 10          	sub    $0x10,%rsp
   100a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100a8:	48 89 c7             	mov    %rax,%rdi
   100ab:	e8 cc ff ff ff       	call   1007c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   100b0:	90                   	nop
   100b1:	c9                   	leave
   100b2:	c3                   	ret
   100b3:	90                   	nop

00000000000100b4 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   100b4:	55                   	push   %rbp
   100b5:	48 89 e5             	mov    %rsp,%rbp
   100b8:	48 83 ec 10          	sub    $0x10,%rsp
   100bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100c4:	48 89 c7             	mov    %rax,%rdi
   100c7:	e8 68 06 00 00       	call   10734 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   100cc:	90                   	nop
   100cd:	c9                   	leave
   100ce:	c3                   	ret
   100cf:	90                   	nop

00000000000100d0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   100d0:	55                   	push   %rbp
   100d1:	48 89 e5             	mov    %rsp,%rbp
   100d4:	48 83 ec 10          	sub    $0x10,%rsp
   100d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100e0:	48 89 c7             	mov    %rax,%rdi
   100e3:	e8 de 0e 00 00       	call   10fc6 <_ZNSaIP13VkImageView_TED1Ev>
   100e8:	90                   	nop
   100e9:	c9                   	leave
   100ea:	c3                   	ret
   100eb:	90                   	nop

00000000000100ec <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   100ec:	55                   	push   %rbp
   100ed:	48 89 e5             	mov    %rsp,%rbp
   100f0:	48 83 ec 10          	sub    $0x10,%rsp
   100f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100fc:	48 89 c7             	mov    %rax,%rdi
   100ff:	e8 9a 0e 00 00       	call   10f9e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   10104:	90                   	nop
   10105:	c9                   	leave
   10106:	c3                   	ret
   10107:	90                   	nop

0000000000010108 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   10108:	55                   	push   %rbp
   10109:	48 89 e5             	mov    %rsp,%rbp
   1010c:	48 83 ec 10          	sub    $0x10,%rsp
   10110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10118:	48 89 c7             	mov    %rax,%rdi
   1011b:	e8 cc ff ff ff       	call   100ec <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   10120:	90                   	nop
   10121:	c9                   	leave
   10122:	c3                   	ret
   10123:	90                   	nop

0000000000010124 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   10124:	55                   	push   %rbp
   10125:	48 89 e5             	mov    %rsp,%rbp
   10128:	48 83 ec 10          	sub    $0x10,%rsp
   1012c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10134:	48 89 c7             	mov    %rax,%rdi
   10137:	e8 38 0f 00 00       	call   11074 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   1013c:	90                   	nop
   1013d:	c9                   	leave
   1013e:	c3                   	ret
   1013f:	90                   	nop

0000000000010140 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   10140:	55                   	push   %rbp
   10141:	48 89 e5             	mov    %rsp,%rbp
   10144:	48 83 ec 10          	sub    $0x10,%rsp
   10148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1014c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10150:	48 89 c7             	mov    %rax,%rdi
   10153:	e8 cc ff ff ff       	call   10124 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   10158:	90                   	nop
   10159:	c9                   	leave
   1015a:	c3                   	ret
   1015b:	90                   	nop

000000000001015c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1015c:	55                   	push   %rbp
   1015d:	48 89 e5             	mov    %rsp,%rbp
   10160:	48 83 ec 10          	sub    $0x10,%rsp
   10164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1016c:	48 89 c7             	mov    %rax,%rdi
   1016f:	e8 50 0f 00 00       	call   110c4 <_ZNSaIP12VkPipeline_TED1Ev>
   10174:	90                   	nop
   10175:	c9                   	leave
   10176:	c3                   	ret
   10177:	90                   	nop

0000000000010178 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   10178:	55                   	push   %rbp
   10179:	48 89 e5             	mov    %rsp,%rbp
   1017c:	48 83 ec 10          	sub    $0x10,%rsp
   10180:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10188:	48 89 c7             	mov    %rax,%rdi
   1018b:	e8 0c 0f 00 00       	call   1109c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1Ev>
   10190:	90                   	nop
   10191:	c9                   	leave
   10192:	c3                   	ret
   10193:	90                   	nop

0000000000010194 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1Ev>:
      vector() = default;
   10194:	55                   	push   %rbp
   10195:	48 89 e5             	mov    %rsp,%rbp
   10198:	48 83 ec 10          	sub    $0x10,%rsp
   1019c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101a4:	48 89 c7             	mov    %rax,%rdi
   101a7:	e8 cc ff ff ff       	call   10178 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1Ev>
   101ac:	90                   	nop
   101ad:	c9                   	leave
   101ae:	c3                   	ret
   101af:	90                   	nop

00000000000101b0 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
   101b0:	55                   	push   %rbp
   101b1:	48 89 e5             	mov    %rsp,%rbp
   101b4:	53                   	push   %rbx
   101b5:	48 83 ec 38          	sub    $0x38,%rsp
   101b9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
   101bd:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   101c1:	e8 5a 43 ff ff       	call   4520 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   101c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   101ca:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   101ce:	48 89 de             	mov    %rbx,%rsi
   101d1:	48 89 c7             	mov    %rax,%rdi
   101d4:	e8 f3 10 00 00       	call   112cc <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
   101d9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
   101dd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   101e1:	48 89 c7             	mov    %rax,%rdi
   101e4:	e8 28 11 00 00       	call   11311 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
   101e9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
   101ed:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   101f1:	48 89 c7             	mov    %rax,%rdi
   101f4:	e8 33 11 00 00       	call   1132c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
   101f9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   101fd:	c9                   	leave
   101fe:	c3                   	ret
   101ff:	90                   	nop

0000000000010200 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   10200:	55                   	push   %rbp
   10201:	48 89 e5             	mov    %rsp,%rbp
   10204:	53                   	push   %rbx
   10205:	48 83 ec 38          	sub    $0x38,%rsp
   10209:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1020d:	48 89 f0             	mov    %rsi,%rax
   10210:	48 89 d6             	mov    %rdx,%rsi
   10213:	48 89 f2             	mov    %rsi,%rdx
   10216:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1021a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1021e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   10222:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10226:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1022a:	48 89 d6             	mov    %rdx,%rsi
   1022d:	48 89 c7             	mov    %rax,%rdi
   10230:	e8 3d 12 00 00       	call   11472 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   10235:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10239:	48 89 c7             	mov    %rax,%rdi
   1023c:	e8 69 12 00 00       	call   114aa <_ZNKSt16initializer_listIPKcE3endEv>
   10241:	48 89 c3             	mov    %rax,%rbx
   10244:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10248:	48 89 c7             	mov    %rax,%rdi
   1024b:	e8 48 12 00 00       	call   11498 <_ZNKSt16initializer_listIPKcE5beginEv>
   10250:	48 89 c1             	mov    %rax,%rcx
   10253:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10257:	48 89 da             	mov    %rbx,%rdx
   1025a:	48 89 ce             	mov    %rcx,%rsi
   1025d:	48 89 c7             	mov    %rax,%rdi
   10260:	e8 ab 12 00 00       	call   11510 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   10265:	eb 1a                	jmp    10281 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   10267:	48 89 c3             	mov    %rax,%rbx
   1026a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1026e:	48 89 c7             	mov    %rax,%rdi
   10271:	e8 8e 7d ff ff       	call   8004 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   10276:	48 89 d8             	mov    %rbx,%rax
   10279:	48 89 c7             	mov    %rax,%rdi
   1027c:	e8 3f 44 ff ff       	call   46c0 <_Unwind_Resume@plt>
   10281:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10285:	c9                   	leave
   10286:	c3                   	ret
   10287:	90                   	nop

0000000000010288 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10288:	55                   	push   %rbp
   10289:	48 89 e5             	mov    %rsp,%rbp
   1028c:	48 83 ec 10          	sub    $0x10,%rsp
   10290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10298:	48 89 c7             	mov    %rax,%rdi
   1029b:	e8 1c 8c ff ff       	call   8ebc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   102a0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   102a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102a7:	48 8b 48 08          	mov    0x8(%rax),%rcx
   102ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102af:	48 8b 00             	mov    (%rax),%rax
   102b2:	48 89 ce             	mov    %rcx,%rsi
   102b5:	48 89 c7             	mov    %rax,%rdi
   102b8:	e8 02 13 00 00       	call   115bf <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   102bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102c1:	48 89 c7             	mov    %rax,%rdi
   102c4:	e8 3b 7d ff ff       	call   8004 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   102c9:	90                   	nop
   102ca:	c9                   	leave
   102cb:	c3                   	ret

00000000000102cc <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   102cc:	55                   	push   %rbp
   102cd:	48 89 e5             	mov    %rsp,%rbp
   102d0:	48 83 ec 20          	sub    $0x20,%rsp
   102d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   102d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   102dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   102e0:	48 89 d6             	mov    %rdx,%rsi
   102e3:	48 89 c7             	mov    %rax,%rdi
   102e6:	e8 ff 12 00 00       	call   115ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   102eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102ef:	c9                   	leave
   102f0:	c3                   	ret
   102f1:	90                   	nop

00000000000102f2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   102f2:	55                   	push   %rbp
   102f3:	48 89 e5             	mov    %rsp,%rbp
   102f6:	48 83 ec 20          	sub    $0x20,%rsp
   102fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   102fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10302:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10306:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1030a:	48 89 d6             	mov    %rdx,%rsi
   1030d:	48 89 c7             	mov    %rax,%rdi
   10310:	e8 d5 12 00 00       	call   115ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10319:	c9                   	leave
   1031a:	c3                   	ret

000000000001031b <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1031b:	55                   	push   %rbp
   1031c:	48 89 e5             	mov    %rsp,%rbp
   1031f:	53                   	push   %rbx
   10320:	48 83 ec 18          	sub    $0x18,%rsp
   10324:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10328:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1032c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10330:	48 89 c7             	mov    %rax,%rdi
   10333:	e8 d0 12 00 00       	call   11608 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10338:	48 8b 18             	mov    (%rax),%rbx
   1033b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1033f:	48 89 c7             	mov    %rax,%rdi
   10342:	e8 c1 12 00 00       	call   11608 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10347:	48 8b 00             	mov    (%rax),%rax
   1034a:	48 39 c3             	cmp    %rax,%rbx
   1034d:	0f 95 c0             	setne  %al
   10350:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10354:	c9                   	leave
   10355:	c3                   	ret

0000000000010356 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10356:	55                   	push   %rbp
   10357:	48 89 e5             	mov    %rsp,%rbp
   1035a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1035e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10362:	48 8b 00             	mov    (%rax),%rax
   10365:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1036d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10374:	5d                   	pop    %rbp
   10375:	c3                   	ret

0000000000010376 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10376:	55                   	push   %rbp
   10377:	48 89 e5             	mov    %rsp,%rbp
   1037a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1037e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10382:	48 8b 00             	mov    (%rax),%rax
   10385:	5d                   	pop    %rbp
   10386:	c3                   	ret
   10387:	90                   	nop

0000000000010388 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   10388:	55                   	push   %rbp
   10389:	48 89 e5             	mov    %rsp,%rbp
   1038c:	53                   	push   %rbx
   1038d:	48 83 ec 18          	sub    $0x18,%rsp
   10391:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10395:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   10399:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1039d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   103a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103a5:	48 8b 40 10          	mov    0x10(%rax),%rax
   103a9:	48 39 c2             	cmp    %rax,%rdx
   103ac:	74 3c                	je     103ea <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   103ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   103b2:	48 89 c7             	mov    %rax,%rdi
   103b5:	e8 5c 12 00 00       	call   11616 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   103ba:	48 89 c2             	mov    %rax,%rdx
   103bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103c1:	48 8b 48 08          	mov    0x8(%rax),%rcx
   103c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103c9:	48 89 ce             	mov    %rcx,%rsi
   103cc:	48 89 c7             	mov    %rax,%rdi
   103cf:	e8 50 12 00 00       	call   11624 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   103d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103d8:	48 8b 40 08          	mov    0x8(%rax),%rax
   103dc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   103e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103e4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   103e8:	eb 30                	jmp    1041a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   103ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   103ee:	48 89 c7             	mov    %rax,%rdi
   103f1:	e8 20 12 00 00       	call   11616 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   103f6:	48 89 c3             	mov    %rax,%rbx
   103f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103fd:	48 89 c7             	mov    %rax,%rdi
   10400:	e8 ed fe ff ff       	call   102f2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10405:	48 89 c1             	mov    %rax,%rcx
   10408:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1040c:	48 89 da             	mov    %rbx,%rdx
   1040f:	48 89 ce             	mov    %rcx,%rsi
   10412:	48 89 c7             	mov    %rax,%rdi
   10415:	e8 44 12 00 00       	call   1165e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   1041a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1041e:	48 89 c7             	mov    %rax,%rdi
   10421:	e8 ca 13 00 00       	call   117f0 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   10426:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1042a:	c9                   	leave
   1042b:	c3                   	ret

000000000001042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1042c:	55                   	push   %rbp
   1042d:	48 89 e5             	mov    %rsp,%rbp
   10430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10438:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1043c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10440:	48 8b 00             	mov    (%rax),%rax
   10443:	48 29 c2             	sub    %rax,%rdx
   10446:	48 89 d0             	mov    %rdx,%rax
   10449:	48 c1 f8 03          	sar    $0x3,%rax
   1044d:	5d                   	pop    %rbp
   1044e:	c3                   	ret
   1044f:	90                   	nop

0000000000010450 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   10450:	55                   	push   %rbp
   10451:	48 89 e5             	mov    %rsp,%rbp
   10454:	48 83 ec 10          	sub    $0x10,%rsp
   10458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1045c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10460:	48 8b 10             	mov    (%rax),%rdx
   10463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10467:	48 89 d6             	mov    %rdx,%rsi
   1046a:	48 89 c7             	mov    %rax,%rdi
   1046d:	e8 be 13 00 00       	call   11830 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10472:	c9                   	leave
   10473:	c3                   	ret

0000000000010474 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10474:	55                   	push   %rbp
   10475:	48 89 e5             	mov    %rsp,%rbp
   10478:	48 83 ec 10          	sub    $0x10,%rsp
   1047c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10484:	48 8b 10             	mov    (%rax),%rdx
   10487:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1048b:	48 89 d6             	mov    %rdx,%rsi
   1048e:	48 89 c7             	mov    %rax,%rdi
   10491:	e8 9a 13 00 00       	call   11830 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10496:	c9                   	leave
   10497:	c3                   	ret

0000000000010498 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10498:	55                   	push   %rbp
   10499:	48 89 e5             	mov    %rsp,%rbp
   1049c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   104a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104a4:	48 8b 50 08          	mov    0x8(%rax),%rdx
   104a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104ac:	48 8b 00             	mov    (%rax),%rax
   104af:	48 29 c2             	sub    %rax,%rdx
   104b2:	48 c1 fa 02          	sar    $0x2,%rdx
   104b6:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   104bd:	db b6 6d 
   104c0:	48 0f af c2          	imul   %rdx,%rax
   104c4:	5d                   	pop    %rbp
   104c5:	c3                   	ret

00000000000104c6 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   104c6:	55                   	push   %rbp
   104c7:	48 89 e5             	mov    %rsp,%rbp
   104ca:	48 83 ec 10          	sub    $0x10,%rsp
   104ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   104d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104d6:	48 89 c7             	mov    %rax,%rdi
   104d9:	e8 3a 8f ff ff       	call   9418 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   104de:	c9                   	leave
   104df:	c3                   	ret

00000000000104e0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   104e0:	55                   	push   %rbp
   104e1:	48 89 e5             	mov    %rsp,%rbp
   104e4:	48 83 ec 10          	sub    $0x10,%rsp
   104e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   104ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104f0:	48 89 c7             	mov    %rax,%rdi
   104f3:	e8 20 8f ff ff       	call   9418 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   104f8:	84 c0                	test   %al,%al
   104fa:	74 0e                	je     1050a <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   104fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10500:	48 89 c7             	mov    %rax,%rdi
   10503:	e8 22 8f ff ff       	call   942a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   10508:	eb 05                	jmp    1050f <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   1050a:	e8 2e f9 ff ff       	call   fe3d <_ZSt27__throw_bad_optional_accessv>
      }
   1050f:	c9                   	leave
   10510:	c3                   	ret
   10511:	90                   	nop

0000000000010512 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   10512:	55                   	push   %rbp
   10513:	48 89 e5             	mov    %rsp,%rbp
   10516:	48 83 ec 20          	sub    $0x20,%rsp
   1051a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1051e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10522:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   10526:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1052a:	48 89 c7             	mov    %rax,%rdi
   1052d:	e8 10 13 00 00       	call   11842 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   10532:	8b 10                	mov    (%rax),%edx
   10534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10538:	89 10                	mov    %edx,(%rax)
   1053a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1053e:	48 89 c7             	mov    %rax,%rdi
   10541:	e8 0a 13 00 00       	call   11850 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   10546:	48 89 c1             	mov    %rax,%rcx
   10549:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1054d:	48 8b 01             	mov    (%rcx),%rax
   10550:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   10554:	48 89 46 04          	mov    %rax,0x4(%rsi)
   10558:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   1055c:	48 8b 41 10          	mov    0x10(%rcx),%rax
   10560:	48 89 46 14          	mov    %rax,0x14(%rsi)
   10564:	90                   	nop
   10565:	c9                   	leave
   10566:	c3                   	ret
   10567:	90                   	nop

0000000000010568 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   10568:	55                   	push   %rbp
   10569:	48 89 e5             	mov    %rsp,%rbp
   1056c:	53                   	push   %rbx
   1056d:	48 83 ec 18          	sub    $0x18,%rsp
   10571:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10575:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   10579:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1057d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10581:	48 89 c7             	mov    %rax,%rdi
   10584:	e8 d5 12 00 00       	call   1185e <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   10589:	48 89 c6             	mov    %rax,%rsi
   1058c:	48 89 df             	mov    %rbx,%rdi
   1058f:	e8 fe 12 00 00       	call   11892 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   10594:	90                   	nop
   10595:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10599:	c9                   	leave
   1059a:	c3                   	ret
   1059b:	90                   	nop

000000000001059c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1059c:	55                   	push   %rbp
   1059d:	48 89 e5             	mov    %rsp,%rbp
   105a0:	48 83 ec 20          	sub    $0x20,%rsp
   105a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   105a8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   105ac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   105b0:	48 89 d6             	mov    %rdx,%rsi
   105b3:	48 89 c7             	mov    %rax,%rdi
   105b6:	e8 0b 13 00 00       	call   118c6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   105bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105bf:	c9                   	leave
   105c0:	c3                   	ret
   105c1:	90                   	nop

00000000000105c2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   105c2:	55                   	push   %rbp
   105c3:	48 89 e5             	mov    %rsp,%rbp
   105c6:	48 83 ec 20          	sub    $0x20,%rsp
   105ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   105ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105d2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   105d6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   105da:	48 89 d6             	mov    %rdx,%rsi
   105dd:	48 89 c7             	mov    %rax,%rdi
   105e0:	e8 e1 12 00 00       	call   118c6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   105e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105e9:	c9                   	leave
   105ea:	c3                   	ret

00000000000105eb <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   105eb:	55                   	push   %rbp
   105ec:	48 89 e5             	mov    %rsp,%rbp
   105ef:	53                   	push   %rbx
   105f0:	48 83 ec 18          	sub    $0x18,%rsp
   105f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   105f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   105fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10600:	48 89 c7             	mov    %rax,%rdi
   10603:	e8 dc 12 00 00       	call   118e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10608:	48 8b 18             	mov    (%rax),%rbx
   1060b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1060f:	48 89 c7             	mov    %rax,%rdi
   10612:	e8 cd 12 00 00       	call   118e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   10617:	48 8b 00             	mov    (%rax),%rax
   1061a:	48 39 c3             	cmp    %rax,%rbx
   1061d:	0f 95 c0             	setne  %al
   10620:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10624:	c9                   	leave
   10625:	c3                   	ret

0000000000010626 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10626:	55                   	push   %rbp
   10627:	48 89 e5             	mov    %rsp,%rbp
   1062a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1062e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10632:	48 8b 00             	mov    (%rax),%rax
   10635:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1063d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10644:	5d                   	pop    %rbp
   10645:	c3                   	ret

0000000000010646 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10646:	55                   	push   %rbp
   10647:	48 89 e5             	mov    %rsp,%rbp
   1064a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1064e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10652:	48 8b 00             	mov    (%rax),%rax
   10655:	5d                   	pop    %rbp
   10656:	c3                   	ret
   10657:	90                   	nop

0000000000010658 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   10658:	55                   	push   %rbp
   10659:	48 89 e5             	mov    %rsp,%rbp
   1065c:	48 83 ec 10          	sub    $0x10,%rsp
   10660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10668:	48 89 c7             	mov    %rax,%rdi
   1066b:	e8 de f9 ff ff       	call   1004e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10670:	c9                   	leave
   10671:	c3                   	ret

0000000000010672 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   10672:	55                   	push   %rbp
   10673:	48 89 e5             	mov    %rsp,%rbp
   10676:	48 83 ec 10          	sub    $0x10,%rsp
   1067a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1067e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   10682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10686:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1068a:	48 89 d6             	mov    %rdx,%rsi
   1068d:	48 89 c7             	mov    %rax,%rdi
   10690:	e8 5d 12 00 00       	call   118f2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   10695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10699:	c9                   	leave
   1069a:	c3                   	ret
   1069b:	90                   	nop

000000000001069c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   1069c:	55                   	push   %rbp
   1069d:	48 89 e5             	mov    %rsp,%rbp
   106a0:	48 83 ec 10          	sub    $0x10,%rsp
   106a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   106a8:	e8 a1 43 ff ff       	call   4a4e <_ZSt23__is_constant_evaluatedv>
   106ad:	84 c0                	test   %al,%al
   106af:	74 1a                	je     106cb <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   106b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106b5:	48 89 c7             	mov    %rax,%rdi
   106b8:	e8 91 f9 ff ff       	call   1004e <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   106bd:	83 f0 01             	xor    $0x1,%eax
   106c0:	84 c0                	test   %al,%al
   106c2:	74 07                	je     106cb <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   106c4:	b8 01 00 00 00       	mov    $0x1,%eax
   106c9:	eb 05                	jmp    106d0 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   106cb:	b8 00 00 00 00       	mov    $0x0,%eax
   106d0:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   106d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106d6:	48 89 c7             	mov    %rax,%rdi
   106d9:	e8 a6 12 00 00       	call   11984 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   106de:	c9                   	leave
   106df:	c3                   	ret

00000000000106e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   106e0:	55                   	push   %rbp
   106e1:	48 89 e5             	mov    %rsp,%rbp
   106e4:	48 83 ec 10          	sub    $0x10,%rsp
   106e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   106ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106f0:	48 89 c7             	mov    %rax,%rdi
   106f3:	e8 9a 12 00 00       	call   11992 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   106f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106fc:	48 89 c7             	mov    %rax,%rdi
   106ff:	e8 aa 12 00 00       	call   119ae <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   10704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10708:	48 83 c0 08          	add    $0x8,%rax
   1070c:	48 89 c7             	mov    %rax,%rdi
   1070f:	e8 ce f7 ff ff       	call   fee2 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   10714:	90                   	nop
   10715:	c9                   	leave
   10716:	c3                   	ret
   10717:	90                   	nop

0000000000010718 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10718:	55                   	push   %rbp
   10719:	48 89 e5             	mov    %rsp,%rbp
   1071c:	48 83 ec 10          	sub    $0x10,%rsp
   10720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10728:	48 89 c7             	mov    %rax,%rdi
   1072b:	e8 8a 12 00 00       	call   119ba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   10730:	90                   	nop
   10731:	c9                   	leave
   10732:	c3                   	ret
   10733:	90                   	nop

0000000000010734 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   10734:	55                   	push   %rbp
   10735:	48 89 e5             	mov    %rsp,%rbp
   10738:	48 83 ec 10          	sub    $0x10,%rsp
   1073c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   10740:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10744:	48 89 c7             	mov    %rax,%rdi
   10747:	e8 e0 12 00 00       	call   11a2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1074c:	48 89 c2             	mov    %rax,%rdx
   1074f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10753:	48 89 d6             	mov    %rdx,%rsi
   10756:	48 89 c7             	mov    %rax,%rdi
   10759:	e8 68 12 00 00       	call   119c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   1075e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10762:	48 89 c7             	mov    %rax,%rdi
   10765:	e8 f6 f8 ff ff       	call   10060 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   1076a:	90                   	nop
   1076b:	c9                   	leave
   1076c:	c3                   	ret
   1076d:	90                   	nop

000000000001076e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1076e:	55                   	push   %rbp
   1076f:	48 89 e5             	mov    %rsp,%rbp
   10772:	48 83 ec 20          	sub    $0x20,%rsp
   10776:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1077a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1077e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10782:	48 89 d6             	mov    %rdx,%rsi
   10785:	48 89 c7             	mov    %rax,%rdi
   10788:	e8 b9 12 00 00       	call   11a46 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1078d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10791:	c9                   	leave
   10792:	c3                   	ret
   10793:	90                   	nop

0000000000010794 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10794:	55                   	push   %rbp
   10795:	48 89 e5             	mov    %rsp,%rbp
   10798:	48 83 ec 20          	sub    $0x20,%rsp
   1079c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   107a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107a4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   107a8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   107ac:	48 89 d6             	mov    %rdx,%rsi
   107af:	48 89 c7             	mov    %rax,%rdi
   107b2:	e8 8f 12 00 00       	call   11a46 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   107b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107bb:	c9                   	leave
   107bc:	c3                   	ret

00000000000107bd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   107bd:	55                   	push   %rbp
   107be:	48 89 e5             	mov    %rsp,%rbp
   107c1:	53                   	push   %rbx
   107c2:	48 83 ec 18          	sub    $0x18,%rsp
   107c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   107ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   107ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107d2:	48 89 c7             	mov    %rax,%rdi
   107d5:	e8 8a 12 00 00       	call   11a64 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   107da:	48 8b 18             	mov    (%rax),%rbx
   107dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   107e1:	48 89 c7             	mov    %rax,%rdi
   107e4:	e8 7b 12 00 00       	call   11a64 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   107e9:	48 8b 00             	mov    (%rax),%rax
   107ec:	48 39 c3             	cmp    %rax,%rbx
   107ef:	0f 95 c0             	setne  %al
   107f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   107f6:	c9                   	leave
   107f7:	c3                   	ret

00000000000107f8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   107f8:	55                   	push   %rbp
   107f9:	48 89 e5             	mov    %rsp,%rbp
   107fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10804:	48 8b 00             	mov    (%rax),%rax
   10807:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   1080e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10812:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10815:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10819:	5d                   	pop    %rbp
   1081a:	c3                   	ret
   1081b:	90                   	nop

000000000001081c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1081c:	55                   	push   %rbp
   1081d:	48 89 e5             	mov    %rsp,%rbp
   10820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10828:	48 8b 00             	mov    (%rax),%rax
   1082b:	5d                   	pop    %rbp
   1082c:	c3                   	ret
   1082d:	90                   	nop

000000000001082e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   1082e:	55                   	push   %rbp
   1082f:	48 89 e5             	mov    %rsp,%rbp
   10832:	53                   	push   %rbx
   10833:	48 83 ec 48          	sub    $0x48,%rsp
   10837:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1083b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   1083f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   10843:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10847:	48 89 d6             	mov    %rdx,%rsi
   1084a:	48 89 c7             	mov    %rax,%rdi
   1084d:	e8 20 12 00 00       	call   11a72 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   10852:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   10856:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1085a:	48 89 c7             	mov    %rax,%rdi
   1085d:	e8 36 12 00 00       	call   11a98 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   10862:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10866:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1086a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1086e:	48 89 d6             	mov    %rdx,%rsi
   10871:	48 89 c7             	mov    %rax,%rdi
   10874:	e8 39 12 00 00       	call   11ab2 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   10879:	84 c0                	test   %al,%al
   1087b:	75 32                	jne    108af <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   1087d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10881:	48 89 c7             	mov    %rax,%rdi
   10884:	e8 4b 12 00 00       	call   11ad4 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   10889:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1088d:	48 89 c7             	mov    %rax,%rdi
   10890:	e8 5b 12 00 00       	call   11af0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10895:	48 89 c2             	mov    %rax,%rdx
   10898:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1089c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   108a0:	48 89 ce             	mov    %rcx,%rsi
   108a3:	48 89 c7             	mov    %rax,%rdi
   108a6:	e8 63 12 00 00       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   108ab:	84 c0                	test   %al,%al
   108ad:	74 07                	je     108b6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   108af:	b8 01 00 00 00       	mov    $0x1,%eax
   108b4:	eb 05                	jmp    108bb <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   108b6:	b8 00 00 00 00       	mov    $0x0,%eax
   108bb:	84 c0                	test   %al,%al
   108bd:	74 5d                	je     1091c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   108bf:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   108c3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   108c7:	48 89 c7             	mov    %rax,%rdi
   108ca:	e8 94 0b 00 00       	call   11463 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   108cf:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   108d2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   108d6:	48 89 d6             	mov    %rdx,%rsi
   108d9:	48 89 c7             	mov    %rax,%rdi
   108dc:	e8 56 12 00 00       	call   11b37 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   108e1:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   108e5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   108e9:	48 89 d6             	mov    %rdx,%rsi
   108ec:	48 89 c7             	mov    %rax,%rdi
   108ef:	e8 78 12 00 00       	call   11b6c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   108f4:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   108f8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   108fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10900:	49 89 c8             	mov    %rcx,%r8
   10903:	48 89 d1             	mov    %rdx,%rcx
   10906:	48 8d 15 b3 8e 00 00 	lea    0x8eb3(%rip),%rdx        # 197c0 <_ZSt19piecewise_construct>
   1090d:	48 89 c6             	mov    %rax,%rsi
   10910:	48 89 df             	mov    %rbx,%rdi
   10913:	e8 72 12 00 00       	call   11b8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   10918:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   1091c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10920:	48 89 c7             	mov    %rax,%rdi
   10923:	e8 c8 11 00 00       	call   11af0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10928:	48 83 c0 20          	add    $0x20,%rax
      }
   1092c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10930:	c9                   	leave
   10931:	c3                   	ret

0000000000010932 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   10932:	55                   	push   %rbp
   10933:	48 89 e5             	mov    %rsp,%rbp
   10936:	48 83 ec 20          	sub    $0x20,%rsp
   1093a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   1093e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10942:	48 89 c7             	mov    %rax,%rdi
   10945:	e8 62 13 00 00       	call   11cac <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   1094a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1094e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10952:	48 89 c7             	mov    %rax,%rdi
   10955:	e8 2c 13 00 00       	call   11c86 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   1095a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1095e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10962:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10966:	48 89 d6             	mov    %rdx,%rsi
   10969:	48 89 c7             	mov    %rax,%rdi
   1096c:	e8 64 13 00 00       	call   11cd5 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10971:	c9                   	leave
   10972:	c3                   	ret
   10973:	90                   	nop

0000000000010974 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10974:	55                   	push   %rbp
   10975:	48 89 e5             	mov    %rsp,%rbp
   10978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1097c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10984:	48 8b 00             	mov    (%rax),%rax
   10987:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1098b:	48 c1 e2 03          	shl    $0x3,%rdx
   1098f:	48 01 d0             	add    %rdx,%rax
      }
   10992:	5d                   	pop    %rbp
   10993:	c3                   	ret

0000000000010994 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10994:	55                   	push   %rbp
   10995:	48 89 e5             	mov    %rsp,%rbp
   10998:	48 83 ec 20          	sub    $0x20,%rsp
   1099c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   109a0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   109a4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   109a8:	48 89 d6             	mov    %rdx,%rsi
   109ab:	48 89 c7             	mov    %rax,%rdi
   109ae:	e8 5d 13 00 00       	call   11d10 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   109b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109b7:	c9                   	leave
   109b8:	c3                   	ret
   109b9:	90                   	nop

00000000000109ba <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   109ba:	55                   	push   %rbp
   109bb:	48 89 e5             	mov    %rsp,%rbp
   109be:	48 83 ec 20          	sub    $0x20,%rsp
   109c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   109c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109ca:	48 8d 50 08          	lea    0x8(%rax),%rdx
   109ce:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   109d2:	48 89 d6             	mov    %rdx,%rsi
   109d5:	48 89 c7             	mov    %rax,%rdi
   109d8:	e8 33 13 00 00       	call   11d10 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   109dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109e1:	c9                   	leave
   109e2:	c3                   	ret

00000000000109e3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   109e3:	55                   	push   %rbp
   109e4:	48 89 e5             	mov    %rsp,%rbp
   109e7:	53                   	push   %rbx
   109e8:	48 83 ec 18          	sub    $0x18,%rsp
   109ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   109f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   109f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109f8:	48 89 c7             	mov    %rax,%rdi
   109fb:	e8 2e 13 00 00       	call   11d2e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10a00:	48 8b 18             	mov    (%rax),%rbx
   10a03:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a07:	48 89 c7             	mov    %rax,%rdi
   10a0a:	e8 1f 13 00 00       	call   11d2e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10a0f:	48 8b 00             	mov    (%rax),%rax
   10a12:	48 39 c3             	cmp    %rax,%rbx
   10a15:	0f 95 c0             	setne  %al
   10a18:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10a1c:	c9                   	leave
   10a1d:	c3                   	ret

0000000000010a1e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10a1e:	55                   	push   %rbp
   10a1f:	48 89 e5             	mov    %rsp,%rbp
   10a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a2a:	48 8b 00             	mov    (%rax),%rax
   10a2d:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10a31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a35:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10a3c:	5d                   	pop    %rbp
   10a3d:	c3                   	ret

0000000000010a3e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10a3e:	55                   	push   %rbp
   10a3f:	48 89 e5             	mov    %rsp,%rbp
   10a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a4a:	48 8b 00             	mov    (%rax),%rax
   10a4d:	5d                   	pop    %rbp
   10a4e:	c3                   	ret
   10a4f:	90                   	nop

0000000000010a50 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10a50:	55                   	push   %rbp
   10a51:	48 89 e5             	mov    %rsp,%rbp
   10a54:	48 83 ec 20          	sub    $0x20,%rsp
   10a58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10a5c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10a60:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10a64:	48 89 d6             	mov    %rdx,%rsi
   10a67:	48 89 c7             	mov    %rax,%rdi
   10a6a:	e8 cd 12 00 00       	call   11d3c <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10a6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a73:	c9                   	leave
   10a74:	c3                   	ret
   10a75:	90                   	nop

0000000000010a76 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10a76:	55                   	push   %rbp
   10a77:	48 89 e5             	mov    %rsp,%rbp
   10a7a:	48 83 ec 20          	sub    $0x20,%rsp
   10a7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10a82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a86:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10a8a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10a8e:	48 89 d6             	mov    %rdx,%rsi
   10a91:	48 89 c7             	mov    %rax,%rdi
   10a94:	e8 a3 12 00 00       	call   11d3c <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10a99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a9d:	c9                   	leave
   10a9e:	c3                   	ret

0000000000010a9f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10a9f:	55                   	push   %rbp
   10aa0:	48 89 e5             	mov    %rsp,%rbp
   10aa3:	53                   	push   %rbx
   10aa4:	48 83 ec 18          	sub    $0x18,%rsp
   10aa8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10aac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10ab0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ab4:	48 89 c7             	mov    %rax,%rdi
   10ab7:	e8 9e 12 00 00       	call   11d5a <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10abc:	48 8b 18             	mov    (%rax),%rbx
   10abf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ac3:	48 89 c7             	mov    %rax,%rdi
   10ac6:	e8 8f 12 00 00       	call   11d5a <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10acb:	48 8b 00             	mov    (%rax),%rax
   10ace:	48 39 c3             	cmp    %rax,%rbx
   10ad1:	0f 95 c0             	setne  %al
   10ad4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10ad8:	c9                   	leave
   10ad9:	c3                   	ret

0000000000010ada <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10ada:	55                   	push   %rbp
   10adb:	48 89 e5             	mov    %rsp,%rbp
   10ade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10ae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ae6:	48 8b 00             	mov    (%rax),%rax
   10ae9:	48 8d 50 04          	lea    0x4(%rax),%rdx
   10aed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10af1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10af8:	5d                   	pop    %rbp
   10af9:	c3                   	ret

0000000000010afa <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10afa:	55                   	push   %rbp
   10afb:	48 89 e5             	mov    %rsp,%rbp
   10afe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b06:	48 8b 00             	mov    (%rax),%rax
   10b09:	5d                   	pop    %rbp
   10b0a:	c3                   	ret
   10b0b:	90                   	nop

0000000000010b0c <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   10b0c:	55                   	push   %rbp
   10b0d:	48 89 e5             	mov    %rsp,%rbp
   10b10:	48 83 ec 20          	sub    $0x20,%rsp
   10b14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   10b1c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   10b20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b24:	48 89 c7             	mov    %rax,%rdi
   10b27:	e8 3c 12 00 00       	call   11d68 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   10b2c:	48 89 c2             	mov    %rax,%rdx
   10b2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b33:	48 89 d6             	mov    %rdx,%rsi
   10b36:	48 89 c7             	mov    %rax,%rdi
   10b39:	e8 38 12 00 00       	call   11d76 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   10b3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   10b42:	c9                   	leave
   10b43:	c3                   	ret

0000000000010b44 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10b44:	55                   	push   %rbp
   10b45:	48 89 e5             	mov    %rsp,%rbp
   10b48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b50:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b58:	48 8b 00             	mov    (%rax),%rax
   10b5b:	48 29 c2             	sub    %rax,%rdx
   10b5e:	48 89 d0             	mov    %rdx,%rax
   10b61:	48 c1 f8 03          	sar    $0x3,%rax
   10b65:	5d                   	pop    %rbp
   10b66:	c3                   	ret
   10b67:	90                   	nop

0000000000010b68 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   10b68:	55                   	push   %rbp
   10b69:	48 89 e5             	mov    %rsp,%rbp
   10b6c:	48 83 ec 10          	sub    $0x10,%rsp
   10b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   10b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b7c:	48 89 c7             	mov    %rax,%rdi
   10b7f:	e8 94 12 00 00       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10b84:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10b88:	0f 92 c0             	setb   %al
   10b8b:	84 c0                	test   %al,%al
   10b8d:	74 24                	je     10bb3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   10b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b93:	48 89 c7             	mov    %rax,%rdi
   10b96:	e8 7d 12 00 00       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10b9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b9f:	48 29 c2             	sub    %rax,%rdx
   10ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ba6:	48 89 d6             	mov    %rdx,%rsi
   10ba9:	48 89 c7             	mov    %rax,%rdi
   10bac:	e8 8b 12 00 00       	call   11e3c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   10bb1:	eb 38                	jmp    10beb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   10bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bb7:	48 89 c7             	mov    %rax,%rdi
   10bba:	e8 59 12 00 00       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10bbf:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   10bc3:	0f 92 c0             	setb   %al
   10bc6:	84 c0                	test   %al,%al
   10bc8:	74 21                	je     10beb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   10bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bce:	48 8b 00             	mov    (%rax),%rax
   10bd1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10bd5:	48 c1 e2 03          	shl    $0x3,%rdx
   10bd9:	48 01 c2             	add    %rax,%rdx
   10bdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10be0:	48 89 d6             	mov    %rdx,%rsi
   10be3:	48 89 c7             	mov    %rax,%rdi
   10be6:	e8 5b 14 00 00       	call   12046 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   10beb:	90                   	nop
   10bec:	c9                   	leave
   10bed:	c3                   	ret

0000000000010bee <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10bee:	55                   	push   %rbp
   10bef:	48 89 e5             	mov    %rsp,%rbp
   10bf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10bf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bfe:	48 8b 00             	mov    (%rax),%rax
   10c01:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10c05:	48 c1 e2 03          	shl    $0x3,%rdx
   10c09:	48 01 d0             	add    %rdx,%rax
      }
   10c0c:	5d                   	pop    %rbp
   10c0d:	c3                   	ret

0000000000010c0e <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10c0e:	55                   	push   %rbp
   10c0f:	48 89 e5             	mov    %rsp,%rbp
   10c12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10c1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c1e:	48 8b 00             	mov    (%rax),%rax
   10c21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10c25:	48 c1 e2 03          	shl    $0x3,%rdx
   10c29:	48 01 d0             	add    %rdx,%rax
      }
   10c2c:	5d                   	pop    %rbp
   10c2d:	c3                   	ret

0000000000010c2e <_ZNSaI6ShaderEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   10c2e:	55                   	push   %rbp
   10c2f:	48 89 e5             	mov    %rsp,%rbp
   10c32:	48 83 ec 10          	sub    $0x10,%rsp
   10c36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c3e:	48 89 c7             	mov    %rax,%rdi
   10c41:	e8 60 14 00 00       	call   120a6 <_ZNSt15__new_allocatorI6ShaderEC1Ev>
   10c46:	90                   	nop
   10c47:	c9                   	leave
   10c48:	c3                   	ret
   10c49:	90                   	nop

0000000000010c4a <_ZNSaI6ShaderED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10c4a:	55                   	push   %rbp
   10c4b:	48 89 e5             	mov    %rsp,%rbp
   10c4e:	48 83 ec 10          	sub    $0x10,%rsp
   10c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c5a:	48 89 c7             	mov    %rax,%rdi
   10c5d:	e8 50 14 00 00       	call   120b2 <_ZNSt15__new_allocatorI6ShaderED1Ev>
   10c62:	90                   	nop
   10c63:	c9                   	leave
   10c64:	c3                   	ret
   10c65:	90                   	nop

0000000000010c66 <_ZNSt6vectorI6ShaderSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   10c66:	55                   	push   %rbp
   10c67:	48 89 e5             	mov    %rsp,%rbp
   10c6a:	53                   	push   %rbx
   10c6b:	48 83 ec 28          	sub    $0x28,%rsp
   10c6f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c73:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10c77:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   10c7b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10c7f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10c83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c87:	48 89 d6             	mov    %rdx,%rsi
   10c8a:	48 89 c7             	mov    %rax,%rdi
   10c8d:	e8 2b 14 00 00       	call   120bd <_ZNSt6vectorI6ShaderSaIS0_EE17_S_check_init_lenEmRKS1_>
   10c92:	48 89 c1             	mov    %rax,%rcx
   10c95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c99:	48 89 c2             	mov    %rax,%rdx
   10c9c:	48 89 ce             	mov    %rcx,%rsi
   10c9f:	48 89 df             	mov    %rbx,%rdi
   10ca2:	e8 93 14 00 00       	call   1213a <_ZNSt12_Vector_baseI6ShaderSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
   10ca7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10cab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10caf:	48 89 d6             	mov    %rdx,%rsi
   10cb2:	48 89 c7             	mov    %rax,%rdi
   10cb5:	e8 2c 15 00 00       	call   121e6 <_ZNSt6vectorI6ShaderSaIS0_EE21_M_default_initializeEm>
   10cba:	eb 1a                	jmp    10cd6 <_ZNSt6vectorI6ShaderSaIS0_EEC1EmRKS1_+0x70>
   10cbc:	48 89 c3             	mov    %rax,%rbx
   10cbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cc3:	48 89 c7             	mov    %rax,%rdi
   10cc6:	e8 cd 14 00 00       	call   12198 <_ZNSt12_Vector_baseI6ShaderSaIS0_EED1Ev>
   10ccb:	48 89 d8             	mov    %rbx,%rax
   10cce:	48 89 c7             	mov    %rax,%rdi
   10cd1:	e8 ea 39 ff ff       	call   46c0 <_Unwind_Resume@plt>
   10cd6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10cda:	c9                   	leave
   10cdb:	c3                   	ret

0000000000010cdc <_ZNSt6vectorI6ShaderSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10cdc:	55                   	push   %rbp
   10cdd:	48 89 e5             	mov    %rsp,%rbp
   10ce0:	48 83 ec 10          	sub    $0x10,%rsp
   10ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cec:	48 89 c7             	mov    %rax,%rdi
   10cef:	e8 32 15 00 00       	call   12226 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE19_M_get_Tp_allocatorEv>
   10cf4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10cf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cfb:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10cff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d03:	48 8b 00             	mov    (%rax),%rax
   10d06:	48 89 ce             	mov    %rcx,%rsi
   10d09:	48 89 c7             	mov    %rax,%rdi
   10d0c:	e8 23 15 00 00       	call   12234 <_ZSt8_DestroyIP6ShaderS0_EvT_S2_RSaIT0_E>
      }
   10d11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d15:	48 89 c7             	mov    %rax,%rdi
   10d18:	e8 7b 14 00 00       	call   12198 <_ZNSt12_Vector_baseI6ShaderSaIS0_EED1Ev>
   10d1d:	90                   	nop
   10d1e:	c9                   	leave
   10d1f:	c3                   	ret

0000000000010d20 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10d20:	55                   	push   %rbp
   10d21:	48 89 e5             	mov    %rsp,%rbp
   10d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d30:	48 8b 00             	mov    (%rax),%rax
   10d33:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10d37:	48 c1 e2 04          	shl    $0x4,%rdx
   10d3b:	48 01 d0             	add    %rdx,%rax
      }
   10d3e:	5d                   	pop    %rbp
   10d3f:	c3                   	ret

0000000000010d40 <_ZNKSt6vectorI6ShaderSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10d40:	55                   	push   %rbp
   10d41:	48 89 e5             	mov    %rsp,%rbp
   10d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d4c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d54:	48 8b 00             	mov    (%rax),%rax
   10d57:	48 29 c2             	sub    %rax,%rdx
   10d5a:	48 89 d0             	mov    %rdx,%rax
   10d5d:	48 c1 f8 04          	sar    $0x4,%rax
   10d61:	5d                   	pop    %rbp
   10d62:	c3                   	ret
   10d63:	90                   	nop

0000000000010d64 <_ZNSaI14VkDynamicStateEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   10d64:	55                   	push   %rbp
   10d65:	48 89 e5             	mov    %rsp,%rbp
   10d68:	48 83 ec 10          	sub    $0x10,%rsp
   10d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d74:	48 89 c7             	mov    %rax,%rdi
   10d77:	e8 e2 14 00 00       	call   1225e <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>
   10d7c:	90                   	nop
   10d7d:	c9                   	leave
   10d7e:	c3                   	ret
   10d7f:	90                   	nop

0000000000010d80 <_ZNSaI14VkDynamicStateED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10d80:	55                   	push   %rbp
   10d81:	48 89 e5             	mov    %rsp,%rbp
   10d84:	48 83 ec 10          	sub    $0x10,%rsp
   10d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d90:	48 89 c7             	mov    %rax,%rdi
   10d93:	e8 d2 14 00 00       	call   1226a <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>
   10d98:	90                   	nop
   10d99:	c9                   	leave
   10d9a:	c3                   	ret
   10d9b:	90                   	nop

0000000000010d9c <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   10d9c:	55                   	push   %rbp
   10d9d:	48 89 e5             	mov    %rsp,%rbp
   10da0:	53                   	push   %rbx
   10da1:	48 83 ec 38          	sub    $0x38,%rsp
   10da5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10da9:	48 89 f0             	mov    %rsi,%rax
   10dac:	48 89 d6             	mov    %rdx,%rsi
   10daf:	48 89 f2             	mov    %rsi,%rdx
   10db2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10db6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10dba:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   10dbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10dc2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10dc6:	48 89 d6             	mov    %rdx,%rsi
   10dc9:	48 89 c7             	mov    %rax,%rdi
   10dcc:	e8 c1 14 00 00       	call   12292 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   10dd1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10dd5:	48 89 c7             	mov    %rax,%rdi
   10dd8:	e8 3b 15 00 00       	call   12318 <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>
   10ddd:	48 89 c3             	mov    %rax,%rbx
   10de0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10de4:	48 89 c7             	mov    %rax,%rdi
   10de7:	e8 1a 15 00 00       	call   12306 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
   10dec:	48 89 c1             	mov    %rax,%rcx
   10def:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10df3:	48 89 da             	mov    %rbx,%rdx
   10df6:	48 89 ce             	mov    %rcx,%rsi
   10df9:	48 89 c7             	mov    %rax,%rdi
   10dfc:	e8 7d 15 00 00       	call   1237e <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   10e01:	eb 1a                	jmp    10e1d <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   10e03:	48 89 c3             	mov    %rax,%rbx
   10e06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e0a:	48 89 c7             	mov    %rax,%rdi
   10e0d:	e8 a6 14 00 00       	call   122b8 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
   10e12:	48 89 d8             	mov    %rbx,%rax
   10e15:	48 89 c7             	mov    %rax,%rdi
   10e18:	e8 a3 38 ff ff       	call   46c0 <_Unwind_Resume@plt>
   10e1d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10e21:	c9                   	leave
   10e22:	c3                   	ret
   10e23:	90                   	nop

0000000000010e24 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10e24:	55                   	push   %rbp
   10e25:	48 89 e5             	mov    %rsp,%rbp
   10e28:	48 83 ec 10          	sub    $0x10,%rsp
   10e2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e34:	48 89 c7             	mov    %rax,%rdi
   10e37:	e8 f2 15 00 00       	call   1242e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   10e3c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e43:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10e47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e4b:	48 8b 00             	mov    (%rax),%rax
   10e4e:	48 89 ce             	mov    %rcx,%rsi
   10e51:	48 89 c7             	mov    %rax,%rdi
   10e54:	e8 e3 15 00 00       	call   1243c <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>
      }
   10e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e5d:	48 89 c7             	mov    %rax,%rdi
   10e60:	e8 53 14 00 00       	call   122b8 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
   10e65:	90                   	nop
   10e66:	c9                   	leave
   10e67:	c3                   	ret

0000000000010e68 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10e68:	55                   	push   %rbp
   10e69:	48 89 e5             	mov    %rsp,%rbp
   10e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e74:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e7c:	48 8b 00             	mov    (%rax),%rax
   10e7f:	48 29 c2             	sub    %rax,%rdx
   10e82:	48 89 d0             	mov    %rdx,%rax
   10e85:	48 c1 f8 02          	sar    $0x2,%rax
   10e89:	5d                   	pop    %rbp
   10e8a:	c3                   	ret
   10e8b:	90                   	nop

0000000000010e8c <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10e8c:	55                   	push   %rbp
   10e8d:	48 89 e5             	mov    %rsp,%rbp
   10e90:	48 83 ec 10          	sub    $0x10,%rsp
   10e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e9c:	48 8b 10             	mov    (%rax),%rdx
   10e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ea3:	48 89 d6             	mov    %rdx,%rsi
   10ea6:	48 89 c7             	mov    %rax,%rdi
   10ea9:	e8 b8 15 00 00       	call   12466 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   10eae:	c9                   	leave
   10eaf:	c3                   	ret

0000000000010eb0 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
   10eb0:	55                   	push   %rbp
   10eb1:	48 89 e5             	mov    %rsp,%rbp
   10eb4:	48 83 ec 10          	sub    $0x10,%rsp
   10eb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ebc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
   10ec0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ec4:	48 89 c7             	mov    %rax,%rdi
   10ec7:	e8 ac 15 00 00       	call   12478 <_ZSt4moveIRP12VkPipeline_TEONSt16remove_referenceIT_E4typeEOS4_>
   10ecc:	48 89 c2             	mov    %rax,%rdx
   10ecf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ed3:	48 89 d6             	mov    %rdx,%rsi
   10ed6:	48 89 c7             	mov    %rax,%rdi
   10ed9:	e8 a8 15 00 00       	call   12486 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
   10ede:	90                   	nop
   10edf:	c9                   	leave
   10ee0:	c3                   	ret
   10ee1:	90                   	nop

0000000000010ee2 <_ZNSt6vectorI6ShaderSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10ee2:	55                   	push   %rbp
   10ee3:	48 89 e5             	mov    %rsp,%rbp
   10ee6:	48 83 ec 20          	sub    $0x20,%rsp
   10eea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10eee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ef2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10ef6:	48 89 d6             	mov    %rdx,%rsi
   10ef9:	48 89 c7             	mov    %rax,%rdi
   10efc:	e8 29 16 00 00       	call   1252a <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10f01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f05:	c9                   	leave
   10f06:	c3                   	ret
   10f07:	90                   	nop

0000000000010f08 <_ZNSt6vectorI6ShaderSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10f08:	55                   	push   %rbp
   10f09:	48 89 e5             	mov    %rsp,%rbp
   10f0c:	48 83 ec 20          	sub    $0x20,%rsp
   10f10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10f14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f18:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10f1c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10f20:	48 89 d6             	mov    %rdx,%rsi
   10f23:	48 89 c7             	mov    %rax,%rdi
   10f26:	e8 ff 15 00 00       	call   1252a <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10f2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f2f:	c9                   	leave
   10f30:	c3                   	ret

0000000000010f31 <_ZN9__gnu_cxxneIP6ShaderSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10f31:	55                   	push   %rbp
   10f32:	48 89 e5             	mov    %rsp,%rbp
   10f35:	53                   	push   %rbx
   10f36:	48 83 ec 18          	sub    $0x18,%rsp
   10f3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10f3e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10f42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f46:	48 89 c7             	mov    %rax,%rdi
   10f49:	e8 fa 15 00 00       	call   12548 <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEE4baseEv>
   10f4e:	48 8b 18             	mov    (%rax),%rbx
   10f51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10f55:	48 89 c7             	mov    %rax,%rdi
   10f58:	e8 eb 15 00 00       	call   12548 <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEE4baseEv>
   10f5d:	48 8b 00             	mov    (%rax),%rax
   10f60:	48 39 c3             	cmp    %rax,%rbx
   10f63:	0f 95 c0             	setne  %al
   10f66:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10f6a:	c9                   	leave
   10f6b:	c3                   	ret

0000000000010f6c <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10f6c:	55                   	push   %rbp
   10f6d:	48 89 e5             	mov    %rsp,%rbp
   10f70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10f74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f78:	48 8b 00             	mov    (%rax),%rax
   10f7b:	48 8d 50 10          	lea    0x10(%rax),%rdx
   10f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f83:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10f8a:	5d                   	pop    %rbp
   10f8b:	c3                   	ret

0000000000010f8c <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10f8c:	55                   	push   %rbp
   10f8d:	48 89 e5             	mov    %rsp,%rbp
   10f90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f98:	48 8b 00             	mov    (%rax),%rax
   10f9b:	5d                   	pop    %rbp
   10f9c:	c3                   	ret
   10f9d:	90                   	nop

0000000000010f9e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   10f9e:	55                   	push   %rbp
   10f9f:	48 89 e5             	mov    %rsp,%rbp
   10fa2:	48 83 ec 10          	sub    $0x10,%rsp
   10fa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   10faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fae:	48 89 c7             	mov    %rax,%rdi
   10fb1:	e8 a0 15 00 00       	call   12556 <_ZNSaIP13VkImageView_TEC1Ev>
   10fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fba:	48 89 c7             	mov    %rax,%rdi
   10fbd:	e8 b0 15 00 00       	call   12572 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   10fc2:	90                   	nop
   10fc3:	c9                   	leave
   10fc4:	c3                   	ret
   10fc5:	90                   	nop

0000000000010fc6 <_ZNSaIP13VkImageView_TED1Ev>:
   10fc6:	55                   	push   %rbp
   10fc7:	48 89 e5             	mov    %rsp,%rbp
   10fca:	48 83 ec 10          	sub    $0x10,%rsp
   10fce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fd6:	48 89 c7             	mov    %rax,%rdi
   10fd9:	e8 c2 15 00 00       	call   125a0 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   10fde:	90                   	nop
   10fdf:	c9                   	leave
   10fe0:	c3                   	ret
   10fe1:	90                   	nop

0000000000010fe2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   10fe2:	55                   	push   %rbp
   10fe3:	48 89 e5             	mov    %rsp,%rbp
   10fe6:	48 83 ec 10          	sub    $0x10,%rsp
   10fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   10fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ff2:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ffa:	48 8b 00             	mov    (%rax),%rax
   10ffd:	48 29 c2             	sub    %rax,%rdx
   11000:	48 89 d0             	mov    %rdx,%rax
   11003:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   11007:	48 89 c2             	mov    %rax,%rdx
   1100a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1100e:	48 8b 08             	mov    (%rax),%rcx
   11011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11015:	48 89 ce             	mov    %rcx,%rsi
   11018:	48 89 c7             	mov    %rax,%rdi
   1101b:	e8 8c 15 00 00       	call   125ac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   11020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11024:	48 89 c7             	mov    %rax,%rdi
   11027:	e8 a4 f0 ff ff       	call   100d0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   1102c:	90                   	nop
   1102d:	c9                   	leave
   1102e:	c3                   	ret
   1102f:	90                   	nop

0000000000011030 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11030:	55                   	push   %rbp
   11031:	48 89 e5             	mov    %rsp,%rbp
   11034:	48 83 ec 10          	sub    $0x10,%rsp
   11038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1103c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11040:	48 89 c7             	mov    %rax,%rdi
   11043:	e8 9a 15 00 00       	call   125e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11048:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1104b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1104f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11057:	48 8b 00             	mov    (%rax),%rax
   1105a:	48 89 ce             	mov    %rcx,%rsi
   1105d:	48 89 c7             	mov    %rax,%rdi
   11060:	e8 8b 15 00 00       	call   125f0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   11065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11069:	48 89 c7             	mov    %rax,%rdi
   1106c:	e8 71 ff ff ff       	call   10fe2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   11071:	90                   	nop
   11072:	c9                   	leave
   11073:	c3                   	ret

0000000000011074 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11074:	55                   	push   %rbp
   11075:	48 89 e5             	mov    %rsp,%rbp
   11078:	48 83 ec 10          	sub    $0x10,%rsp
   1107c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11084:	48 89 c7             	mov    %rax,%rdi
   11087:	e8 3e 78 ff ff       	call   88ca <_ZNSaIP9VkImage_TEC1Ev>
   1108c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11090:	48 89 c7             	mov    %rax,%rdi
   11093:	e8 ce 9d ff ff       	call   ae66 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11098:	90                   	nop
   11099:	c9                   	leave
   1109a:	c3                   	ret
   1109b:	90                   	nop

000000000001109c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1109c:	55                   	push   %rbp
   1109d:	48 89 e5             	mov    %rsp,%rbp
   110a0:	48 83 ec 10          	sub    $0x10,%rsp
   110a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   110a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ac:	48 89 c7             	mov    %rax,%rdi
   110af:	e8 66 15 00 00       	call   1261a <_ZNSaIP12VkPipeline_TEC1Ev>
   110b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110b8:	48 89 c7             	mov    %rax,%rdi
   110bb:	e8 76 15 00 00       	call   12636 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   110c0:	90                   	nop
   110c1:	c9                   	leave
   110c2:	c3                   	ret
   110c3:	90                   	nop

00000000000110c4 <_ZNSaIP12VkPipeline_TED1Ev>:
   110c4:	55                   	push   %rbp
   110c5:	48 89 e5             	mov    %rsp,%rbp
   110c8:	48 83 ec 10          	sub    $0x10,%rsp
   110cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110d4:	48 89 c7             	mov    %rax,%rdi
   110d7:	e8 88 15 00 00       	call   12664 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   110dc:	90                   	nop
   110dd:	c9                   	leave
   110de:	c3                   	ret
   110df:	90                   	nop

00000000000110e0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   110e0:	55                   	push   %rbp
   110e1:	48 89 e5             	mov    %rsp,%rbp
   110e4:	48 83 ec 10          	sub    $0x10,%rsp
   110e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   110ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110f0:	48 8b 50 10          	mov    0x10(%rax),%rdx
   110f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110f8:	48 8b 00             	mov    (%rax),%rax
   110fb:	48 29 c2             	sub    %rax,%rdx
   110fe:	48 89 d0             	mov    %rdx,%rax
   11101:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   11105:	48 89 c2             	mov    %rax,%rdx
   11108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1110c:	48 8b 08             	mov    (%rax),%rcx
   1110f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11113:	48 89 ce             	mov    %rcx,%rsi
   11116:	48 89 c7             	mov    %rax,%rdi
   11119:	e8 52 15 00 00       	call   12670 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1111e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11122:	48 89 c7             	mov    %rax,%rdi
   11125:	e8 32 f0 ff ff       	call   1015c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1112a:	90                   	nop
   1112b:	c9                   	leave
   1112c:	c3                   	ret
   1112d:	90                   	nop

000000000001112e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1112e:	55                   	push   %rbp
   1112f:	48 89 e5             	mov    %rsp,%rbp
   11132:	48 83 ec 10          	sub    $0x10,%rsp
   11136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1113a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1113e:	48 89 c7             	mov    %rax,%rdi
   11141:	e8 60 15 00 00       	call   126a6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11146:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1114d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11155:	48 8b 00             	mov    (%rax),%rax
   11158:	48 89 ce             	mov    %rcx,%rsi
   1115b:	48 89 c7             	mov    %rax,%rdi
   1115e:	e8 51 15 00 00       	call   126b4 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   11163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11167:	48 89 c7             	mov    %rax,%rdi
   1116a:	e8 71 ff ff ff       	call   110e0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   1116f:	90                   	nop
   11170:	c9                   	leave
   11171:	c3                   	ret

0000000000011172 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11172:	55                   	push   %rbp
   11173:	48 89 e5             	mov    %rsp,%rbp
   11176:	48 83 ec 20          	sub    $0x20,%rsp
   1117a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1117e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11182:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11186:	48 89 d6             	mov    %rdx,%rsi
   11189:	48 89 c7             	mov    %rax,%rdi
   1118c:	e8 4d 15 00 00       	call   126de <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11195:	c9                   	leave
   11196:	c3                   	ret
   11197:	90                   	nop

0000000000011198 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11198:	55                   	push   %rbp
   11199:	48 89 e5             	mov    %rsp,%rbp
   1119c:	48 83 ec 20          	sub    $0x20,%rsp
   111a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   111a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111a8:	48 8d 50 08          	lea    0x8(%rax),%rdx
   111ac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   111b0:	48 89 d6             	mov    %rdx,%rsi
   111b3:	48 89 c7             	mov    %rax,%rdi
   111b6:	e8 23 15 00 00       	call   126de <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   111bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111bf:	c9                   	leave
   111c0:	c3                   	ret

00000000000111c1 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   111c1:	55                   	push   %rbp
   111c2:	48 89 e5             	mov    %rsp,%rbp
   111c5:	53                   	push   %rbx
   111c6:	48 83 ec 18          	sub    $0x18,%rsp
   111ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   111ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   111d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111d6:	48 89 c7             	mov    %rax,%rdi
   111d9:	e8 1e 15 00 00       	call   126fc <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   111de:	48 8b 18             	mov    (%rax),%rbx
   111e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   111e5:	48 89 c7             	mov    %rax,%rdi
   111e8:	e8 0f 15 00 00       	call   126fc <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   111ed:	48 8b 00             	mov    (%rax),%rax
   111f0:	48 39 c3             	cmp    %rax,%rbx
   111f3:	0f 95 c0             	setne  %al
   111f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   111fa:	c9                   	leave
   111fb:	c3                   	ret

00000000000111fc <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   111fc:	55                   	push   %rbp
   111fd:	48 89 e5             	mov    %rsp,%rbp
   11200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11208:	48 8b 00             	mov    (%rax),%rax
   1120b:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1120f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11213:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1121a:	5d                   	pop    %rbp
   1121b:	c3                   	ret

000000000001121c <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1121c:	55                   	push   %rbp
   1121d:	48 89 e5             	mov    %rsp,%rbp
   11220:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11228:	48 8b 00             	mov    (%rax),%rax
   1122b:	5d                   	pop    %rbp
   1122c:	c3                   	ret
   1122d:	90                   	nop

000000000001122e <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
   1122e:	55                   	push   %rbp
   1122f:	48 89 e5             	mov    %rsp,%rbp
   11232:	53                   	push   %rbx
   11233:	48 83 ec 18          	sub    $0x18,%rsp
   11237:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1123b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1123f:	48 89 c7             	mov    %rax,%rdi
   11242:	e8 c3 14 00 00       	call   1270a <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
   11247:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1124b:	48 83 c0 08          	add    $0x8,%rax
   1124f:	48 89 c7             	mov    %rax,%rdi
   11252:	e8 29 33 ff ff       	call   4580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
   11257:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1125b:	48 83 c0 08          	add    $0x8,%rax
   1125f:	48 8d 15 74 84 00 00 	lea    0x8474(%rip),%rdx        # 196da <_ZN6__pstl9execution2v1L5unseqE+0x39b>
   11266:	48 89 d6             	mov    %rdx,%rsi
   11269:	48 89 c7             	mov    %rax,%rdi
   1126c:	e8 df 32 ff ff       	call   4550 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
   11271:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11275:	e8 a6 32 ff ff       	call   4520 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   1127a:	48 89 03             	mov    %rax,(%rbx)
  }
   1127d:	eb 1e                	jmp    1129d <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
   1127f:	48 89 c3             	mov    %rax,%rbx
   11282:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11286:	48 83 c0 08          	add    $0x8,%rax
   1128a:	48 89 c7             	mov    %rax,%rdi
   1128d:	e8 3e 2f ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11292:	48 89 d8             	mov    %rbx,%rax
   11295:	48 89 c7             	mov    %rax,%rdi
   11298:	e8 23 34 ff ff       	call   46c0 <_Unwind_Resume@plt>
   1129d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   112a1:	c9                   	leave
   112a2:	c3                   	ret
   112a3:	90                   	nop

00000000000112a4 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
   112a4:	55                   	push   %rbp
   112a5:	48 89 e5             	mov    %rsp,%rbp
   112a8:	48 83 ec 20          	sub    $0x20,%rsp
   112ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
   112b0:	e8 6b 32 ff ff       	call   4520 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   112b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
   112b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112bd:	48 83 c0 08          	add    $0x8,%rax
   112c1:	48 89 c7             	mov    %rax,%rdi
   112c4:	e8 07 2f ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   112c9:	90                   	nop
   112ca:	c9                   	leave
   112cb:	c3                   	ret

00000000000112cc <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   112cc:	55                   	push   %rbp
   112cd:	48 89 e5             	mov    %rsp,%rbp
   112d0:	48 83 ec 20          	sub    $0x20,%rsp
   112d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   112d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   112dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   112e0:	48 89 c7             	mov    %rax,%rdi
   112e3:	e8 42 14 00 00       	call   1272a <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   112e8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   112ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112f0:	48 89 c7             	mov    %rax,%rdi
   112f3:	e8 32 14 00 00       	call   1272a <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   112f8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   112fc:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11300:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11304:	48 89 d6             	mov    %rdx,%rsi
   11307:	48 89 c7             	mov    %rax,%rdi
   1130a:	e8 2c 14 00 00       	call   1273b <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   1130f:	c9                   	leave
   11310:	c3                   	ret

0000000000011311 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   11311:	55                   	push   %rbp
   11312:	48 89 e5             	mov    %rsp,%rbp
   11315:	48 83 ec 10          	sub    $0x10,%rsp
   11319:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   1131d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11321:	48 89 c7             	mov    %rax,%rdi
   11324:	e8 7b 14 00 00       	call   127a4 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   11329:	c9                   	leave
   1132a:	c3                   	ret
   1132b:	90                   	nop

000000000001132c <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   1132c:	55                   	push   %rbp
   1132d:	48 89 e5             	mov    %rsp,%rbp
   11330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   11334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11338:	48 8b 00             	mov    (%rax),%rax
   1133b:	5d                   	pop    %rbp
   1133c:	c3                   	ret
   1133d:	90                   	nop

000000000001133e <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
   1133e:	55                   	push   %rbp
   1133f:	48 89 e5             	mov    %rsp,%rbp
   11342:	53                   	push   %rbx
   11343:	48 83 ec 18          	sub    $0x18,%rsp
   11347:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1134b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1134f:	e8 cc 31 ff ff       	call   4520 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11354:	48 89 03             	mov    %rax,(%rbx)
   11357:	90                   	nop
   11358:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1135c:	c9                   	leave
   1135d:	c3                   	ret

000000000001135e <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   1135e:	55                   	push   %rbp
   1135f:	48 89 e5             	mov    %rsp,%rbp
   11362:	48 83 ec 20          	sub    $0x20,%rsp
   11366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1136a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1136e:	89 d0                	mov    %edx,%eax
   11370:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   11373:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   11377:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1137b:	be 01 00 00 00       	mov    $0x1,%esi
   11380:	48 89 c7             	mov    %rax,%rdi
   11383:	e8 78 30 ff ff       	call   4400 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   11388:	48 89 c7             	mov    %rax,%rdi
   1138b:	e8 d3 00 00 00       	call   11463 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   11390:	48 89 c2             	mov    %rax,%rdx
   11393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11397:	48 89 d6             	mov    %rdx,%rsi
   1139a:	48 89 c7             	mov    %rax,%rdi
   1139d:	e8 1e 2e ff ff       	call   41c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   113a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113a6:	c9                   	leave
   113a7:	c3                   	ret

00000000000113a8 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   113a8:	55                   	push   %rbp
   113a9:	48 89 e5             	mov    %rsp,%rbp
   113ac:	48 83 ec 20          	sub    $0x20,%rsp
   113b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   113b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   113b8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   113bc:	48 89 d6             	mov    %rdx,%rsi
   113bf:	48 89 c7             	mov    %rax,%rdi
   113c2:	e8 37 14 00 00       	call   127fe <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   113c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113cb:	c9                   	leave
   113cc:	c3                   	ret
   113cd:	90                   	nop

00000000000113ce <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   113ce:	55                   	push   %rbp
   113cf:	48 89 e5             	mov    %rsp,%rbp
   113d2:	48 83 ec 20          	sub    $0x20,%rsp
   113d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   113da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113de:	48 8d 50 08          	lea    0x8(%rax),%rdx
   113e2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   113e6:	48 89 d6             	mov    %rdx,%rsi
   113e9:	48 89 c7             	mov    %rax,%rdi
   113ec:	e8 0d 14 00 00       	call   127fe <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   113f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113f5:	c9                   	leave
   113f6:	c3                   	ret

00000000000113f7 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   113f7:	55                   	push   %rbp
   113f8:	48 89 e5             	mov    %rsp,%rbp
   113fb:	53                   	push   %rbx
   113fc:	48 83 ec 18          	sub    $0x18,%rsp
   11400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11404:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11408:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1140c:	48 89 c7             	mov    %rax,%rdi
   1140f:	e8 08 14 00 00       	call   1281c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11414:	48 8b 18             	mov    (%rax),%rbx
   11417:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1141b:	48 89 c7             	mov    %rax,%rdi
   1141e:	e8 f9 13 00 00       	call   1281c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11423:	48 8b 00             	mov    (%rax),%rax
   11426:	48 39 c3             	cmp    %rax,%rbx
   11429:	0f 95 c0             	setne  %al
   1142c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11430:	c9                   	leave
   11431:	c3                   	ret

0000000000011432 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11432:	55                   	push   %rbp
   11433:	48 89 e5             	mov    %rsp,%rbp
   11436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1143a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1143e:	48 8b 00             	mov    (%rax),%rax
   11441:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11445:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11449:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1144c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11450:	5d                   	pop    %rbp
   11451:	c3                   	ret

0000000000011452 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11452:	55                   	push   %rbp
   11453:	48 89 e5             	mov    %rsp,%rbp
   11456:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1145a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1145e:	48 8b 00             	mov    (%rax),%rax
   11461:	5d                   	pop    %rbp
   11462:	c3                   	ret

0000000000011463 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   11463:	55                   	push   %rbp
   11464:	48 89 e5             	mov    %rsp,%rbp
   11467:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1146b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1146f:	5d                   	pop    %rbp
   11470:	c3                   	ret
   11471:	90                   	nop

0000000000011472 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   11472:	55                   	push   %rbp
   11473:	48 89 e5             	mov    %rsp,%rbp
   11476:	48 83 ec 10          	sub    $0x10,%rsp
   1147a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1147e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   11482:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11486:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1148a:	48 89 d6             	mov    %rdx,%rsi
   1148d:	48 89 c7             	mov    %rax,%rdi
   11490:	e8 b1 88 ff ff       	call   9d46 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   11495:	90                   	nop
   11496:	c9                   	leave
   11497:	c3                   	ret

0000000000011498 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   11498:	55                   	push   %rbp
   11499:	48 89 e5             	mov    %rsp,%rbp
   1149c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114a4:	48 8b 00             	mov    (%rax),%rax
   114a7:	5d                   	pop    %rbp
   114a8:	c3                   	ret
   114a9:	90                   	nop

00000000000114aa <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   114aa:	55                   	push   %rbp
   114ab:	48 89 e5             	mov    %rsp,%rbp
   114ae:	53                   	push   %rbx
   114af:	48 83 ec 18          	sub    $0x18,%rsp
   114b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   114b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114bb:	48 89 c7             	mov    %rax,%rdi
   114be:	e8 d5 ff ff ff       	call   11498 <_ZNKSt16initializer_listIPKcE5beginEv>
   114c3:	48 89 c3             	mov    %rax,%rbx
   114c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114ca:	48 89 c7             	mov    %rax,%rdi
   114cd:	e8 58 13 00 00       	call   1282a <_ZNKSt16initializer_listIPKcE4sizeEv>
   114d2:	48 c1 e0 03          	shl    $0x3,%rax
   114d6:	48 01 d8             	add    %rbx,%rax
   114d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   114dd:	c9                   	leave
   114de:	c3                   	ret

00000000000114df <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   114df:	55                   	push   %rbp
   114e0:	48 89 e5             	mov    %rsp,%rbp
   114e3:	48 83 ec 10          	sub    $0x10,%rsp
   114e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   114ef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   114f3:	48 89 c7             	mov    %rax,%rdi
   114f6:	e8 41 13 00 00       	call   1283c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   114fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11503:	48 89 d6             	mov    %rdx,%rsi
   11506:	48 89 c7             	mov    %rax,%rdi
   11509:	e8 39 13 00 00       	call   12847 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   1150e:	c9                   	leave
   1150f:	c3                   	ret

0000000000011510 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   11510:	55                   	push   %rbp
   11511:	48 89 e5             	mov    %rsp,%rbp
   11514:	53                   	push   %rbx
   11515:	48 83 ec 38          	sub    $0x38,%rsp
   11519:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1151d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11521:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   11525:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11529:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1152d:	48 89 d6             	mov    %rdx,%rsi
   11530:	48 89 c7             	mov    %rax,%rdi
   11533:	e8 a7 ff ff ff       	call   114df <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   11538:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1153c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   11540:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11544:	48 89 c7             	mov    %rax,%rdi
   11547:	e8 70 79 ff ff       	call   8ebc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1154c:	48 89 c2             	mov    %rax,%rdx
   1154f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11553:	48 89 d6             	mov    %rdx,%rsi
   11556:	48 89 c7             	mov    %rax,%rdi
   11559:	e8 5f 78 ff ff       	call   8dbd <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   1155e:	48 89 c6             	mov    %rax,%rsi
   11561:	48 89 df             	mov    %rbx,%rdi
   11564:	e8 69 93 ff ff       	call   a8d2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   11569:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1156d:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   11570:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11574:	48 8b 00             	mov    (%rax),%rax
   11577:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1157b:	48 c1 e2 03          	shl    $0x3,%rdx
   1157f:	48 01 c2             	add    %rax,%rdx
   11582:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11586:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1158a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1158e:	48 89 c7             	mov    %rax,%rdi
   11591:	e8 26 79 ff ff       	call   8ebc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11596:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   11599:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1159d:	48 8b 10             	mov    (%rax),%rdx
   115a0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   115a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   115a8:	48 89 c7             	mov    %rax,%rdi
   115ab:	e8 b1 12 00 00       	call   12861 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   115b0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   115b4:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   115b8:	90                   	nop
   115b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   115bd:	c9                   	leave
   115be:	c3                   	ret

00000000000115bf <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   115bf:	55                   	push   %rbp
   115c0:	48 89 e5             	mov    %rsp,%rbp
   115c3:	48 83 ec 20          	sub    $0x20,%rsp
   115c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   115cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   115d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   115d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115db:	48 89 d6             	mov    %rdx,%rsi
   115de:	48 89 c7             	mov    %rax,%rdi
   115e1:	e8 ac 12 00 00       	call   12892 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   115e6:	90                   	nop
   115e7:	c9                   	leave
   115e8:	c3                   	ret
   115e9:	90                   	nop

00000000000115ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   115ea:	55                   	push   %rbp
   115eb:	48 89 e5             	mov    %rsp,%rbp
   115ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   115f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   115fa:	48 8b 10             	mov    (%rax),%rdx
   115fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11601:	48 89 10             	mov    %rdx,(%rax)
   11604:	90                   	nop
   11605:	5d                   	pop    %rbp
   11606:	c3                   	ret
   11607:	90                   	nop

0000000000011608 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11608:	55                   	push   %rbp
   11609:	48 89 e5             	mov    %rsp,%rbp
   1160c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11614:	5d                   	pop    %rbp
   11615:	c3                   	ret

0000000000011616 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11616:	55                   	push   %rbp
   11617:	48 89 e5             	mov    %rsp,%rbp
   1161a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1161e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11622:	5d                   	pop    %rbp
   11623:	c3                   	ret

0000000000011624 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   11624:	55                   	push   %rbp
   11625:	48 89 e5             	mov    %rsp,%rbp
   11628:	48 83 ec 20          	sub    $0x20,%rsp
   1162c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11630:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11634:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   11638:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1163c:	48 89 c7             	mov    %rax,%rdi
   1163f:	e8 d2 ff ff ff       	call   11616 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11644:	48 89 c2             	mov    %rax,%rdx
   11647:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1164b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1164f:	48 89 ce             	mov    %rcx,%rsi
   11652:	48 89 c7             	mov    %rax,%rdi
   11655:	e8 5e 12 00 00       	call   128b8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   1165a:	90                   	nop
   1165b:	c9                   	leave
   1165c:	c3                   	ret
   1165d:	90                   	nop

000000000001165e <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   1165e:	55                   	push   %rbp
   1165f:	48 89 e5             	mov    %rsp,%rbp
   11662:	53                   	push   %rbx
   11663:	48 83 ec 68          	sub    $0x68,%rsp
   11667:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1166b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1166f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   11673:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11677:	48 8d 15 60 80 00 00 	lea    0x8060(%rip),%rdx        # 196de <_ZN6__pstl9execution2v1L5unseqE+0x39f>
   1167e:	be 01 00 00 00       	mov    $0x1,%esi
   11683:	48 89 c7             	mov    %rax,%rdi
   11686:	e8 6f 12 00 00       	call   128fa <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   1168b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   1168f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11693:	48 8b 00             	mov    (%rax),%rax
   11696:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   1169a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1169e:	48 8b 40 08          	mov    0x8(%rax),%rax
   116a2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   116a6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116aa:	48 89 c7             	mov    %rax,%rdi
   116ad:	e8 1a ec ff ff       	call   102cc <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   116b2:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   116b6:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   116ba:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   116be:	48 89 d6             	mov    %rdx,%rsi
   116c1:	48 89 c7             	mov    %rax,%rdi
   116c4:	e8 f9 12 00 00       	call   129c2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   116c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   116cd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116d1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   116d5:	48 89 d6             	mov    %rdx,%rsi
   116d8:	48 89 c7             	mov    %rax,%rdi
   116db:	e8 f2 91 ff ff       	call   a8d2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   116e0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   116e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   116e8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   116ec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   116f0:	48 89 c7             	mov    %rax,%rdi
   116f3:	e8 1e ff ff ff       	call   11616 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   116f8:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   116fb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   116ff:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11706:	00 
	  _Alloc_traits::construct(this->_M_impl,
   11707:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1170b:	48 01 c1             	add    %rax,%rcx
   1170e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11712:	48 89 ce             	mov    %rcx,%rsi
   11715:	48 89 c7             	mov    %rax,%rdi
   11718:	e8 07 ff ff ff       	call   11624 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   1171d:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   11724:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   11725:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11729:	48 89 c7             	mov    %rax,%rdi
   1172c:	e8 8b 77 ff ff       	call   8ebc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11731:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   11734:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11738:	48 89 c7             	mov    %rax,%rdi
   1173b:	e8 c8 fe ff ff       	call   11608 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11740:	48 8b 30             	mov    (%rax),%rsi
   11743:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11747:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1174b:	48 89 d9             	mov    %rbx,%rcx
   1174e:	48 89 c7             	mov    %rax,%rdi
   11751:	e8 ae 12 00 00       	call   12a04 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11756:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   1175a:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   1175f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11763:	48 89 c7             	mov    %rax,%rdi
   11766:	e8 51 77 ff ff       	call   8ebc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1176b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1176e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11772:	48 89 c7             	mov    %rax,%rdi
   11775:	e8 8e fe ff ff       	call   11608 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1177a:	48 8b 00             	mov    (%rax),%rax
   1177d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11781:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11785:	48 89 d9             	mov    %rbx,%rcx
   11788:	48 89 c7             	mov    %rax,%rdi
   1178b:	e8 74 12 00 00       	call   12a04 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11790:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   11794:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   11798:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1179c:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   117a0:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   117a4:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   117a8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   117ac:	48 89 ce             	mov    %rcx,%rsi
   117af:	48 89 c7             	mov    %rax,%rdi
   117b2:	e8 39 77 ff ff       	call   8ef0 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   117b7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117bb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   117bf:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   117c2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117c6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   117ca:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   117ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   117d2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   117d9:	00 
   117da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   117de:	48 01 c2             	add    %rax,%rdx
   117e1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117e5:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   117e9:	90                   	nop
   117ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   117ee:	c9                   	leave
   117ef:	c3                   	ret

00000000000117f0 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   117f0:	55                   	push   %rbp
   117f1:	48 89 e5             	mov    %rsp,%rbp
   117f4:	48 83 ec 20          	sub    $0x20,%rsp
   117f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   117fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11800:	48 89 c7             	mov    %rax,%rdi
   11803:	e8 ea ea ff ff       	call   102f2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11808:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1180c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11810:	be 01 00 00 00       	mov    $0x1,%esi
   11815:	48 89 c7             	mov    %rax,%rdi
   11818:	e8 19 12 00 00       	call   12a36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   1181d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11821:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   11825:	48 89 c7             	mov    %rax,%rdi
   11828:	e8 49 eb ff ff       	call   10376 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   1182d:	c9                   	leave
   1182e:	c3                   	ret
   1182f:	90                   	nop

0000000000011830 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   11830:	55                   	push   %rbp
   11831:	48 89 e5             	mov    %rsp,%rbp
   11834:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11838:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1183c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11840:	5d                   	pop    %rbp
   11841:	c3                   	ret

0000000000011842 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11842:	55                   	push   %rbp
   11843:	48 89 e5             	mov    %rsp,%rbp
   11846:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1184a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1184e:	5d                   	pop    %rbp
   1184f:	c3                   	ret

0000000000011850 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11850:	55                   	push   %rbp
   11851:	48 89 e5             	mov    %rsp,%rbp
   11854:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11858:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1185c:	5d                   	pop    %rbp
   1185d:	c3                   	ret

000000000001185e <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1185e:	55                   	push   %rbp
   1185f:	48 89 e5             	mov    %rsp,%rbp
   11862:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1186a:	5d                   	pop    %rbp
   1186b:	c3                   	ret

000000000001186c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   1186c:	55                   	push   %rbp
   1186d:	48 89 e5             	mov    %rsp,%rbp
   11870:	48 83 ec 20          	sub    $0x20,%rsp
   11874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11878:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   1187c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11880:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11884:	48 89 d6             	mov    %rdx,%rsi
   11887:	48 89 c7             	mov    %rax,%rdi
   1188a:	e8 e9 11 00 00       	call   12a78 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   1188f:	90                   	nop
   11890:	c9                   	leave
   11891:	c3                   	ret

0000000000011892 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   11892:	55                   	push   %rbp
   11893:	48 89 e5             	mov    %rsp,%rbp
   11896:	53                   	push   %rbx
   11897:	48 83 ec 18          	sub    $0x18,%rsp
   1189b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1189f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   118a3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   118a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118ab:	48 89 c7             	mov    %rax,%rdi
   118ae:	e8 ab ff ff ff       	call   1185e <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   118b3:	48 89 c6             	mov    %rax,%rsi
   118b6:	48 89 df             	mov    %rbx,%rdi
   118b9:	e8 ae ff ff ff       	call   1186c <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   118be:	90                   	nop
   118bf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   118c3:	c9                   	leave
   118c4:	c3                   	ret
   118c5:	90                   	nop

00000000000118c6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   118c6:	55                   	push   %rbp
   118c7:	48 89 e5             	mov    %rsp,%rbp
   118ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   118d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   118d6:	48 8b 10             	mov    (%rax),%rdx
   118d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118dd:	48 89 10             	mov    %rdx,(%rax)
   118e0:	90                   	nop
   118e1:	5d                   	pop    %rbp
   118e2:	c3                   	ret
   118e3:	90                   	nop

00000000000118e4 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   118e4:	55                   	push   %rbp
   118e5:	48 89 e5             	mov    %rsp,%rbp
   118e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   118ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118f0:	5d                   	pop    %rbp
   118f1:	c3                   	ret

00000000000118f2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   118f2:	55                   	push   %rbp
   118f3:	48 89 e5             	mov    %rsp,%rbp
   118f6:	53                   	push   %rbx
   118f7:	48 83 ec 18          	sub    $0x18,%rsp
   118fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   118ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   11903:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11907:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1190b:	84 c0                	test   %al,%al
   1190d:	74 35                	je     11944 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   1190f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11913:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   11917:	84 c0                	test   %al,%al
   11919:	74 29                	je     11944 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   1191b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1191f:	48 89 c7             	mov    %rax,%rdi
   11922:	e8 8d 11 00 00       	call   12ab4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   11927:	48 89 c3             	mov    %rax,%rbx
   1192a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1192e:	48 89 c7             	mov    %rax,%rdi
   11931:	e8 4e 00 00 00       	call   11984 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   11936:	48 89 de             	mov    %rbx,%rsi
   11939:	48 89 c7             	mov    %rax,%rdi
   1193c:	e8 81 11 00 00       	call   12ac2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   11941:	90                   	nop
      }
   11942:	eb 38                	jmp    1197c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   11944:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11948:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1194c:	84 c0                	test   %al,%al
   1194e:	74 20                	je     11970 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   11950:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11954:	48 89 c7             	mov    %rax,%rdi
   11957:	e8 58 11 00 00       	call   12ab4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   1195c:	48 89 c2             	mov    %rax,%rdx
   1195f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11963:	48 89 d6             	mov    %rdx,%rsi
   11966:	48 89 c7             	mov    %rax,%rdi
   11969:	e8 92 11 00 00       	call   12b00 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   1196e:	eb 0c                	jmp    1197c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   11970:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11974:	48 89 c7             	mov    %rax,%rdi
   11977:	e8 ca 11 00 00       	call   12b46 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   1197c:	90                   	nop
   1197d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11981:	c9                   	leave
   11982:	c3                   	ret
   11983:	90                   	nop

0000000000011984 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   11984:	55                   	push   %rbp
   11985:	48 89 e5             	mov    %rsp,%rbp
   11988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1198c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11990:	5d                   	pop    %rbp
   11991:	c3                   	ret

0000000000011992 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   11992:	55                   	push   %rbp
   11993:	48 89 e5             	mov    %rsp,%rbp
   11996:	48 83 ec 10          	sub    $0x10,%rsp
   1199a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1199e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119a2:	48 89 c7             	mov    %rax,%rdi
   119a5:	e8 c4 11 00 00       	call   12b6e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   119aa:	90                   	nop
   119ab:	c9                   	leave
   119ac:	c3                   	ret
   119ad:	90                   	nop

00000000000119ae <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   119ae:	55                   	push   %rbp
   119af:	48 89 e5             	mov    %rsp,%rbp
   119b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   119b6:	90                   	nop
   119b7:	5d                   	pop    %rbp
   119b8:	c3                   	ret
   119b9:	90                   	nop

00000000000119ba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   119ba:	55                   	push   %rbp
   119bb:	48 89 e5             	mov    %rsp,%rbp
   119be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119c2:	90                   	nop
   119c3:	5d                   	pop    %rbp
   119c4:	c3                   	ret
   119c5:	90                   	nop

00000000000119c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   119c6:	55                   	push   %rbp
   119c7:	48 89 e5             	mov    %rsp,%rbp
   119ca:	48 83 ec 20          	sub    $0x20,%rsp
   119ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   119d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   119d6:	eb 49                	jmp    11a21 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   119d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119dc:	48 89 c7             	mov    %rax,%rdi
   119df:	e8 95 11 00 00       	call   12b79 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   119e4:	48 89 c2             	mov    %rax,%rdx
   119e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   119eb:	48 89 d6             	mov    %rdx,%rsi
   119ee:	48 89 c7             	mov    %rax,%rdi
   119f1:	e8 d0 ff ff ff       	call   119c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   119f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119fa:	48 89 c7             	mov    %rax,%rdi
   119fd:	e8 89 11 00 00       	call   12b8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   11a02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   11a06:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11a0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a0e:	48 89 d6             	mov    %rdx,%rsi
   11a11:	48 89 c7             	mov    %rax,%rdi
   11a14:	e8 85 11 00 00       	call   12b9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   11a19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a1d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   11a21:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   11a26:	75 b0                	jne    119d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   11a28:	90                   	nop
   11a29:	90                   	nop
   11a2a:	c9                   	leave
   11a2b:	c3                   	ret

0000000000011a2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   11a2c:	55                   	push   %rbp
   11a2d:	48 89 e5             	mov    %rsp,%rbp
   11a30:	48 83 ec 10          	sub    $0x10,%rsp
   11a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   11a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a3c:	48 89 c7             	mov    %rax,%rdi
   11a3f:	e8 94 11 00 00       	call   12bd8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   11a44:	c9                   	leave
   11a45:	c3                   	ret

0000000000011a46 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11a46:	55                   	push   %rbp
   11a47:	48 89 e5             	mov    %rsp,%rbp
   11a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11a52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a56:	48 8b 10             	mov    (%rax),%rdx
   11a59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a5d:	48 89 10             	mov    %rdx,(%rax)
   11a60:	90                   	nop
   11a61:	5d                   	pop    %rbp
   11a62:	c3                   	ret
   11a63:	90                   	nop

0000000000011a64 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11a64:	55                   	push   %rbp
   11a65:	48 89 e5             	mov    %rsp,%rbp
   11a68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11a6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a70:	5d                   	pop    %rbp
   11a71:	c3                   	ret

0000000000011a72 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   11a72:	55                   	push   %rbp
   11a73:	48 89 e5             	mov    %rsp,%rbp
   11a76:	48 83 ec 10          	sub    $0x10,%rsp
   11a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   11a82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11a8a:	48 89 d6             	mov    %rdx,%rsi
   11a8d:	48 89 c7             	mov    %rax,%rdi
   11a90:	e8 55 11 00 00       	call   12bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   11a95:	c9                   	leave
   11a96:	c3                   	ret
   11a97:	90                   	nop

0000000000011a98 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11a98:	55                   	push   %rbp
   11a99:	48 89 e5             	mov    %rsp,%rbp
   11a9c:	48 83 ec 10          	sub    $0x10,%rsp
   11aa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   11aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aa8:	48 89 c7             	mov    %rax,%rdi
   11aab:	e8 86 11 00 00       	call   12c36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   11ab0:	c9                   	leave
   11ab1:	c3                   	ret

0000000000011ab2 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   11ab2:	55                   	push   %rbp
   11ab3:	48 89 e5             	mov    %rsp,%rbp
   11ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11aba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   11abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ac2:	48 8b 10             	mov    (%rax),%rdx
   11ac5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11ac9:	48 8b 00             	mov    (%rax),%rax
   11acc:	48 39 c2             	cmp    %rax,%rdx
   11acf:	0f 94 c0             	sete   %al
   11ad2:	5d                   	pop    %rbp
   11ad3:	c3                   	ret

0000000000011ad4 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   11ad4:	55                   	push   %rbp
   11ad5:	48 89 e5             	mov    %rsp,%rbp
   11ad8:	48 83 ec 10          	sub    $0x10,%rsp
   11adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   11ae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ae4:	48 89 c7             	mov    %rax,%rdi
   11ae7:	e8 74 11 00 00       	call   12c60 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   11aec:	90                   	nop
   11aed:	c9                   	leave
   11aee:	c3                   	ret
   11aef:	90                   	nop

0000000000011af0 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11af0:	55                   	push   %rbp
   11af1:	48 89 e5             	mov    %rsp,%rbp
   11af4:	48 83 ec 10          	sub    $0x10,%rsp
   11af8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   11afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b00:	48 8b 00             	mov    (%rax),%rax
   11b03:	48 89 c7             	mov    %rax,%rdi
   11b06:	e8 61 11 00 00       	call   12c6c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   11b0b:	c9                   	leave
   11b0c:	c3                   	ret
   11b0d:	90                   	nop

0000000000011b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   11b0e:	55                   	push   %rbp
   11b0f:	48 89 e5             	mov    %rsp,%rbp
   11b12:	48 83 ec 20          	sub    $0x20,%rsp
   11b16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11b1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   11b22:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11b26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b2a:	48 89 d6             	mov    %rdx,%rsi
   11b2d:	48 89 c7             	mov    %rax,%rdi
   11b30:	e8 55 11 00 00       	call   12c8a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   11b35:	c9                   	leave
   11b36:	c3                   	ret

0000000000011b37 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   11b37:	55                   	push   %rbp
   11b38:	48 89 e5             	mov    %rsp,%rbp
   11b3b:	48 83 ec 10          	sub    $0x10,%rsp
   11b3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b43:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   11b47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b4b:	48 89 c7             	mov    %rax,%rdi
   11b4e:	e8 5f 11 00 00       	call   12cb2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   11b53:	48 89 c2             	mov    %rax,%rdx
   11b56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b5a:	48 89 d6             	mov    %rdx,%rsi
   11b5d:	48 89 c7             	mov    %rax,%rdi
   11b60:	e8 5b 11 00 00       	call   12cc0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   11b65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b69:	c9                   	leave
   11b6a:	c3                   	ret
   11b6b:	90                   	nop

0000000000011b6c <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   11b6c:	55                   	push   %rbp
   11b6d:	48 89 e5             	mov    %rsp,%rbp
   11b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   11b78:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b7c:	48 8b 10             	mov    (%rax),%rdx
   11b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b83:	48 89 10             	mov    %rdx,(%rax)
   11b86:	90                   	nop
   11b87:	5d                   	pop    %rbp
   11b88:	c3                   	ret
   11b89:	90                   	nop

0000000000011b8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11b8a:	55                   	push   %rbp
   11b8b:	48 89 e5             	mov    %rsp,%rbp
   11b8e:	41 54                	push   %r12
   11b90:	53                   	push   %rbx
   11b91:	48 83 ec 60          	sub    $0x60,%rsp
   11b95:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11b99:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   11b9d:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   11ba1:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   11ba5:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   11ba9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11bad:	48 89 c7             	mov    %rax,%rdi
   11bb0:	e8 5a 11 00 00       	call   12d0f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   11bb5:	49 89 c4             	mov    %rax,%r12
   11bb8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11bbc:	48 89 c7             	mov    %rax,%rdi
   11bbf:	e8 3d 11 00 00       	call   12d01 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   11bc4:	48 89 c3             	mov    %rax,%rbx
   11bc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11bcb:	48 89 c7             	mov    %rax,%rdi
   11bce:	e8 20 11 00 00       	call   12cf3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   11bd3:	48 89 c2             	mov    %rax,%rdx
   11bd6:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   11bda:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11bde:	4d 89 e0             	mov    %r12,%r8
   11be1:	48 89 d9             	mov    %rbx,%rcx
   11be4:	48 89 c7             	mov    %rax,%rdi
   11be7:	e8 32 11 00 00       	call   12d1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   11bec:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11bf0:	48 89 c7             	mov    %rax,%rdi
   11bf3:	e8 26 16 00 00       	call   1321e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   11bf8:	48 89 c2             	mov    %rax,%rdx
   11bfb:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   11bff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11c03:	48 89 ce             	mov    %rcx,%rsi
   11c06:	48 89 c7             	mov    %rax,%rdi
   11c09:	e8 c2 11 00 00       	call   12dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   11c0e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11c12:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   11c16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11c1a:	48 85 c0             	test   %rax,%rax
   11c1d:	74 1c                	je     11c3b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   11c1f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11c23:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11c27:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11c2b:	48 89 ce             	mov    %rcx,%rsi
   11c2e:	48 89 c7             	mov    %rax,%rdi
   11c31:	e8 06 16 00 00       	call   1323c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   11c36:	48 89 c3             	mov    %rax,%rbx
   11c39:	eb 17                	jmp    11c52 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   11c3b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11c3f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   11c43:	48 89 d6             	mov    %rdx,%rsi
   11c46:	48 89 c7             	mov    %rax,%rdi
   11c49:	e8 44 16 00 00       	call   13292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   11c4e:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   11c52:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11c56:	48 89 c7             	mov    %rax,%rdi
   11c59:	e8 3c 11 00 00       	call   12d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11c5e:	48 89 d8             	mov    %rbx,%rax
   11c61:	eb 1a                	jmp    11c7d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   11c63:	48 89 c3             	mov    %rax,%rbx
   11c66:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11c6a:	48 89 c7             	mov    %rax,%rdi
   11c6d:	e8 28 11 00 00       	call   12d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11c72:	48 89 d8             	mov    %rbx,%rax
   11c75:	48 89 c7             	mov    %rax,%rdi
   11c78:	e8 43 2a ff ff       	call   46c0 <_Unwind_Resume@plt>
   11c7d:	48 83 c4 60          	add    $0x60,%rsp
   11c81:	5b                   	pop    %rbx
   11c82:	41 5c                	pop    %r12
   11c84:	5d                   	pop    %rbp
   11c85:	c3                   	ret

0000000000011c86 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   11c86:	55                   	push   %rbp
   11c87:	48 89 e5             	mov    %rsp,%rbp
   11c8a:	48 83 ec 20          	sub    $0x20,%rsp
   11c8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   11c92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11c96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11c9a:	48 89 d6             	mov    %rdx,%rsi
   11c9d:	48 89 c7             	mov    %rax,%rdi
   11ca0:	e8 07 16 00 00       	call   132ac <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ca9:	c9                   	leave
   11caa:	c3                   	ret
   11cab:	90                   	nop

0000000000011cac <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   11cac:	55                   	push   %rbp
   11cad:	48 89 e5             	mov    %rsp,%rbp
   11cb0:	48 83 ec 20          	sub    $0x20,%rsp
   11cb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   11cb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11cbc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11cc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11cc4:	48 89 d6             	mov    %rdx,%rsi
   11cc7:	48 89 c7             	mov    %rax,%rdi
   11cca:	e8 dd 15 00 00       	call   132ac <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11ccf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cd3:	c9                   	leave
   11cd4:	c3                   	ret

0000000000011cd5 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   11cd5:	55                   	push   %rbp
   11cd6:	48 89 e5             	mov    %rsp,%rbp
   11cd9:	53                   	push   %rbx
   11cda:	48 83 ec 18          	sub    $0x18,%rsp
   11cde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ce2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   11ce6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11cea:	48 89 c7             	mov    %rax,%rdi
   11ced:	e8 d8 15 00 00       	call   132ca <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11cf2:	48 8b 18             	mov    (%rax),%rbx
   11cf5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11cf9:	48 89 c7             	mov    %rax,%rdi
   11cfc:	e8 c9 15 00 00       	call   132ca <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11d01:	48 8b 00             	mov    (%rax),%rax
   11d04:	48 39 c3             	cmp    %rax,%rbx
   11d07:	0f 94 c0             	sete   %al
   11d0a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11d0e:	c9                   	leave
   11d0f:	c3                   	ret

0000000000011d10 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11d10:	55                   	push   %rbp
   11d11:	48 89 e5             	mov    %rsp,%rbp
   11d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11d1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11d20:	48 8b 10             	mov    (%rax),%rdx
   11d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d27:	48 89 10             	mov    %rdx,(%rax)
   11d2a:	90                   	nop
   11d2b:	5d                   	pop    %rbp
   11d2c:	c3                   	ret
   11d2d:	90                   	nop

0000000000011d2e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11d2e:	55                   	push   %rbp
   11d2f:	48 89 e5             	mov    %rsp,%rbp
   11d32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d3a:	5d                   	pop    %rbp
   11d3b:	c3                   	ret

0000000000011d3c <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11d3c:	55                   	push   %rbp
   11d3d:	48 89 e5             	mov    %rsp,%rbp
   11d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11d48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11d4c:	48 8b 10             	mov    (%rax),%rdx
   11d4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d53:	48 89 10             	mov    %rdx,(%rax)
   11d56:	90                   	nop
   11d57:	5d                   	pop    %rbp
   11d58:	c3                   	ret
   11d59:	90                   	nop

0000000000011d5a <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11d5a:	55                   	push   %rbp
   11d5b:	48 89 e5             	mov    %rsp,%rbp
   11d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d66:	5d                   	pop    %rbp
   11d67:	c3                   	ret

0000000000011d68 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   11d68:	55                   	push   %rbp
   11d69:	48 89 e5             	mov    %rsp,%rbp
   11d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d74:	5d                   	pop    %rbp
   11d75:	c3                   	ret

0000000000011d76 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   11d76:	55                   	push   %rbp
   11d77:	48 89 e5             	mov    %rsp,%rbp
   11d7a:	53                   	push   %rbx
   11d7b:	48 83 ec 38          	sub    $0x38,%rsp
   11d7f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11d83:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   11d87:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11d8b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11d8f:	48 89 d6             	mov    %rdx,%rsi
   11d92:	48 89 c7             	mov    %rax,%rdi
   11d95:	e8 3e 15 00 00       	call   132d8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   11d9a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   11d9e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11da2:	48 89 d6             	mov    %rdx,%rsi
   11da5:	48 89 c7             	mov    %rax,%rdi
   11da8:	e8 5f 15 00 00       	call   1330c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   11dad:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11db1:	48 89 c7             	mov    %rax,%rdi
   11db4:	e8 2d 6b ff ff       	call   88e6 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   11db9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11dbd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11dc1:	48 89 d6             	mov    %rdx,%rsi
   11dc4:	48 89 c7             	mov    %rax,%rdi
   11dc7:	e8 66 15 00 00       	call   13332 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   11dcc:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11dd0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11dd4:	48 89 d6             	mov    %rdx,%rsi
   11dd7:	48 89 c7             	mov    %rax,%rdi
   11dda:	e8 53 15 00 00       	call   13332 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   11ddf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11de3:	48 89 c7             	mov    %rax,%rdi
   11de6:	e8 af 7b ff ff       	call   999a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11deb:	48 89 c3             	mov    %rax,%rbx
   11dee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11df2:	48 89 c7             	mov    %rax,%rdi
   11df5:	e8 a0 7b ff ff       	call   999a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11dfa:	48 89 de             	mov    %rbx,%rsi
   11dfd:	48 89 c7             	mov    %rax,%rdi
   11e00:	e8 85 15 00 00       	call   1338a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   11e05:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11e09:	48 89 c7             	mov    %rax,%rdi
   11e0c:	e8 67 6b ff ff       	call   8978 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   11e11:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11e15:	c9                   	leave
   11e16:	c3                   	ret
   11e17:	90                   	nop

0000000000011e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11e18:	55                   	push   %rbp
   11e19:	48 89 e5             	mov    %rsp,%rbp
   11e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e24:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11e28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e2c:	48 8b 00             	mov    (%rax),%rax
   11e2f:	48 29 c2             	sub    %rax,%rdx
   11e32:	48 89 d0             	mov    %rdx,%rax
   11e35:	48 c1 f8 03          	sar    $0x3,%rax
   11e39:	5d                   	pop    %rbp
   11e3a:	c3                   	ret
   11e3b:	90                   	nop

0000000000011e3c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   11e3c:	55                   	push   %rbp
   11e3d:	48 89 e5             	mov    %rsp,%rbp
   11e40:	53                   	push   %rbx
   11e41:	48 83 ec 38          	sub    $0x38,%rsp
   11e45:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11e49:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   11e4d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   11e52:	0f 84 e7 01 00 00    	je     1203f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   11e58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e5c:	48 89 c7             	mov    %rax,%rdi
   11e5f:	e8 b4 ff ff ff       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11e64:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11e68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e6c:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   11e70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e74:	48 8b 40 08          	mov    0x8(%rax),%rax
   11e78:	48 29 c2             	sub    %rax,%rdx
   11e7b:	48 89 d0             	mov    %rdx,%rax
   11e7e:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11e82:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   11e86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e8a:	48 89 c7             	mov    %rax,%rdi
   11e8d:	e8 18 15 00 00       	call   133aa <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11e92:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11e96:	72 16                	jb     11eae <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   11e98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e9c:	48 89 c7             	mov    %rax,%rdi
   11e9f:	e8 06 15 00 00       	call   133aa <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11ea4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11ea8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   11eac:	73 07                	jae    11eb5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   11eae:	b8 01 00 00 00       	mov    $0x1,%eax
   11eb3:	eb 05                	jmp    11eba <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   11eb5:	b8 00 00 00 00       	mov    $0x0,%eax
   11eba:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   11ebc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ec0:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   11ec4:	72 33                	jb     11ef9 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   11ec6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11eca:	48 89 c7             	mov    %rax,%rdi
   11ecd:	e8 10 07 00 00       	call   125e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11ed2:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   11ed5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ed9:	48 8b 40 08          	mov    0x8(%rax),%rax
   11edd:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11ee1:	48 89 ce             	mov    %rcx,%rsi
   11ee4:	48 89 c7             	mov    %rax,%rdi
   11ee7:	e8 e0 14 00 00       	call   133cc <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   11eec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11ef0:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   11ef4:	e9 46 01 00 00       	jmp    1203f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   11ef9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11efd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f01:	48 8d 15 f0 77 00 00 	lea    0x77f0(%rip),%rdx        # 196f8 <_ZN6__pstl9execution2v1L5unseqE+0x3b9>
   11f08:	48 89 ce             	mov    %rcx,%rsi
   11f0b:	48 89 c7             	mov    %rax,%rdi
   11f0e:	e8 e3 14 00 00       	call   133f6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   11f13:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   11f17:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f1b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11f1f:	48 89 d6             	mov    %rdx,%rsi
   11f22:	48 89 c7             	mov    %rax,%rdi
   11f25:	e8 94 15 00 00       	call   134be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   11f2a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   11f2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f32:	48 89 c7             	mov    %rax,%rdi
   11f35:	e8 a8 06 00 00       	call   125e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11f3a:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   11f3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f41:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11f48:	00 
   11f49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11f4d:	48 01 c1             	add    %rax,%rcx
   11f50:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11f54:	48 89 c6             	mov    %rax,%rsi
   11f57:	48 89 cf             	mov    %rcx,%rdi
   11f5a:	e8 6d 14 00 00       	call   133cc <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   11f5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f63:	48 89 c7             	mov    %rax,%rdi
   11f66:	e8 77 06 00 00       	call   125e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11f6b:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   11f6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f72:	48 8b 70 08          	mov    0x8(%rax),%rsi
   11f76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f7a:	48 8b 00             	mov    (%rax),%rax
   11f7d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11f81:	48 89 c7             	mov    %rax,%rdi
   11f84:	e8 68 15 00 00       	call   134f1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   11f89:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   11f8d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f91:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   11f95:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f99:	48 8b 12             	mov    (%rdx),%rdx
   11f9c:	48 29 d1             	sub    %rdx,%rcx
   11f9f:	48 c1 f9 03          	sar    $0x3,%rcx
   11fa3:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   11fa6:	48 89 d6             	mov    %rdx,%rsi
   11fa9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11fad:	48 8b 0a             	mov    (%rdx),%rcx
   11fb0:	48 89 f2             	mov    %rsi,%rdx
   11fb3:	48 89 ce             	mov    %rcx,%rsi
   11fb6:	48 89 c7             	mov    %rax,%rdi
   11fb9:	e8 ee 05 00 00       	call   125ac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   11fbe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fc2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11fc6:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   11fc9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11fcd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11fd1:	48 01 d0             	add    %rdx,%rax
   11fd4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11fdb:	00 
   11fdc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11fe0:	48 01 c2             	add    %rax,%rdx
   11fe3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fe7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   11feb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11fef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11ff6:	00 
   11ff7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ffb:	48 01 c2             	add    %rax,%rdx
   11ffe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12002:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12006:	eb 37                	jmp    1203f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   12008:	48 89 c7             	mov    %rax,%rdi
   1200b:	e8 10 21 ff ff       	call   4120 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   12010:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12014:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12018:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1201c:	48 89 ce             	mov    %rcx,%rsi
   1201f:	48 89 c7             	mov    %rax,%rdi
   12022:	e8 85 05 00 00       	call   125ac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   12027:	e8 84 25 ff ff       	call   45b0 <__cxa_rethrow@plt>
		  __catch(...)
   1202c:	48 89 c3             	mov    %rax,%rbx
   1202f:	e8 1c 26 ff ff       	call   4650 <__cxa_end_catch@plt>
   12034:	48 89 d8             	mov    %rbx,%rax
   12037:	48 89 c7             	mov    %rax,%rdi
   1203a:	e8 81 26 ff ff       	call   46c0 <_Unwind_Resume@plt>
    }
   1203f:	90                   	nop
   12040:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12044:	c9                   	leave
   12045:	c3                   	ret

0000000000012046 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   12046:	55                   	push   %rbp
   12047:	48 89 e5             	mov    %rsp,%rbp
   1204a:	48 83 ec 20          	sub    $0x20,%rsp
   1204e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12052:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   12056:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1205a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1205e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   12062:	48 c1 f8 03          	sar    $0x3,%rax
   12066:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1206a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1206f:	74 32                	je     120a3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   12071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12075:	48 89 c7             	mov    %rax,%rdi
   12078:	e8 65 05 00 00       	call   125e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1207d:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   12080:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12084:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12088:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1208c:	48 89 ce             	mov    %rcx,%rsi
   1208f:	48 89 c7             	mov    %rax,%rdi
   12092:	e8 59 05 00 00       	call   125f0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   12097:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1209b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1209f:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   120a3:	90                   	nop
   120a4:	c9                   	leave
   120a5:	c3                   	ret

00000000000120a6 <_ZNSt15__new_allocatorI6ShaderEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   120a6:	55                   	push   %rbp
   120a7:	48 89 e5             	mov    %rsp,%rbp
   120aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120ae:	90                   	nop
   120af:	5d                   	pop    %rbp
   120b0:	c3                   	ret
   120b1:	90                   	nop

00000000000120b2 <_ZNSt15__new_allocatorI6ShaderED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   120b2:	55                   	push   %rbp
   120b3:	48 89 e5             	mov    %rsp,%rbp
   120b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120ba:	90                   	nop
   120bb:	5d                   	pop    %rbp
   120bc:	c3                   	ret

00000000000120bd <_ZNSt6vectorI6ShaderSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   120bd:	55                   	push   %rbp
   120be:	48 89 e5             	mov    %rsp,%rbp
   120c1:	53                   	push   %rbx
   120c2:	48 83 ec 28          	sub    $0x28,%rsp
   120c6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   120ca:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   120ce:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   120d2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   120d6:	48 89 d6             	mov    %rdx,%rsi
   120d9:	48 89 c7             	mov    %rax,%rdi
   120dc:	e8 85 14 00 00       	call   13566 <_ZNSaI6ShaderEC1ERKS0_>
   120e1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   120e5:	48 89 c7             	mov    %rax,%rdi
   120e8:	e8 36 14 00 00       	call   13523 <_ZNSt6vectorI6ShaderSaIS0_EE11_S_max_sizeERKS1_>
   120ed:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   120f1:	0f 92 c3             	setb   %bl
   120f4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   120f8:	48 89 c7             	mov    %rax,%rdi
   120fb:	e8 4a eb ff ff       	call   10c4a <_ZNSaI6ShaderED1Ev>
   12100:	84 db                	test   %bl,%bl
   12102:	74 0f                	je     12113 <_ZNSt6vectorI6ShaderSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   12104:	48 8d 05 0d 76 00 00 	lea    0x760d(%rip),%rax        # 19718 <_ZN6__pstl9execution2v1L5unseqE+0x3d9>
   1210b:	48 89 c7             	mov    %rax,%rdi
   1210e:	e8 5d 20 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   12113:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   12117:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1211b:	c9                   	leave
   1211c:	c3                   	ret
   1211d:	90                   	nop

000000000001211e <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1211e:	55                   	push   %rbp
   1211f:	48 89 e5             	mov    %rsp,%rbp
   12122:	48 83 ec 10          	sub    $0x10,%rsp
   12126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1212a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1212e:	48 89 c7             	mov    %rax,%rdi
   12131:	e8 14 eb ff ff       	call   10c4a <_ZNSaI6ShaderED1Ev>
   12136:	90                   	nop
   12137:	c9                   	leave
   12138:	c3                   	ret
   12139:	90                   	nop

000000000001213a <_ZNSt12_Vector_baseI6ShaderSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   1213a:	55                   	push   %rbp
   1213b:	48 89 e5             	mov    %rsp,%rbp
   1213e:	53                   	push   %rbx
   1213f:	48 83 ec 28          	sub    $0x28,%rsp
   12143:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12147:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1214b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   1214f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12153:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12157:	48 89 d6             	mov    %rdx,%rsi
   1215a:	48 89 c7             	mov    %rax,%rdi
   1215d:	e8 2a 14 00 00       	call   1358c <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
   12162:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12166:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1216a:	48 89 d6             	mov    %rdx,%rsi
   1216d:	48 89 c7             	mov    %rax,%rdi
   12170:	e8 49 14 00 00       	call   135be <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_M_create_storageEm>
   12175:	eb 1a                	jmp    12191 <_ZNSt12_Vector_baseI6ShaderSaIS0_EEC1EmRKS1_+0x57>
   12177:	48 89 c3             	mov    %rax,%rbx
   1217a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1217e:	48 89 c7             	mov    %rax,%rdi
   12181:	e8 98 ff ff ff       	call   1211e <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implD1Ev>
   12186:	48 89 d8             	mov    %rbx,%rax
   12189:	48 89 c7             	mov    %rax,%rdi
   1218c:	e8 2f 25 ff ff       	call   46c0 <_Unwind_Resume@plt>
   12191:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12195:	c9                   	leave
   12196:	c3                   	ret
   12197:	90                   	nop

0000000000012198 <_ZNSt12_Vector_baseI6ShaderSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12198:	55                   	push   %rbp
   12199:	48 89 e5             	mov    %rsp,%rbp
   1219c:	48 83 ec 10          	sub    $0x10,%rsp
   121a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   121a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121a8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   121ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b0:	48 8b 00             	mov    (%rax),%rax
   121b3:	48 29 c2             	sub    %rax,%rdx
   121b6:	48 89 d0             	mov    %rdx,%rax
   121b9:	48 c1 f8 04          	sar    $0x4,%rax
	_M_deallocate(_M_impl._M_start,
   121bd:	48 89 c2             	mov    %rax,%rdx
   121c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121c4:	48 8b 08             	mov    (%rax),%rcx
   121c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121cb:	48 89 ce             	mov    %rcx,%rsi
   121ce:	48 89 c7             	mov    %rax,%rdi
   121d1:	e8 3e 14 00 00       	call   13614 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE13_M_deallocateEPS0_m>
      }
   121d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121da:	48 89 c7             	mov    %rax,%rdi
   121dd:	e8 3c ff ff ff       	call   1211e <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implD1Ev>
   121e2:	90                   	nop
   121e3:	c9                   	leave
   121e4:	c3                   	ret
   121e5:	90                   	nop

00000000000121e6 <_ZNSt6vectorI6ShaderSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   121e6:	55                   	push   %rbp
   121e7:	48 89 e5             	mov    %rsp,%rbp
   121ea:	48 83 ec 10          	sub    $0x10,%rsp
   121ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   121f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121fa:	48 89 c7             	mov    %rax,%rdi
   121fd:	e8 24 00 00 00       	call   12226 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE19_M_get_Tp_allocatorEv>
   12202:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   12205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12209:	48 8b 00             	mov    (%rax),%rax
   1220c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12210:	48 89 ce             	mov    %rcx,%rsi
   12213:	48 89 c7             	mov    %rax,%rdi
   12216:	e8 2e 14 00 00       	call   13649 <_ZSt27__uninitialized_default_n_aIP6ShadermS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   1221b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1221f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   12223:	90                   	nop
   12224:	c9                   	leave
   12225:	c3                   	ret

0000000000012226 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12226:	55                   	push   %rbp
   12227:	48 89 e5             	mov    %rsp,%rbp
   1222a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1222e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12232:	5d                   	pop    %rbp
   12233:	c3                   	ret

0000000000012234 <_ZSt8_DestroyIP6ShaderS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12234:	55                   	push   %rbp
   12235:	48 89 e5             	mov    %rsp,%rbp
   12238:	48 83 ec 20          	sub    $0x20,%rsp
   1223c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12240:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12244:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12248:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1224c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12250:	48 89 d6             	mov    %rdx,%rsi
   12253:	48 89 c7             	mov    %rax,%rdi
   12256:	e8 17 14 00 00       	call   13672 <_ZSt8_DestroyIP6ShaderEvT_S2_>
    }
   1225b:	90                   	nop
   1225c:	c9                   	leave
   1225d:	c3                   	ret

000000000001225e <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1225e:	55                   	push   %rbp
   1225f:	48 89 e5             	mov    %rsp,%rbp
   12262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12266:	90                   	nop
   12267:	5d                   	pop    %rbp
   12268:	c3                   	ret
   12269:	90                   	nop

000000000001226a <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1226a:	55                   	push   %rbp
   1226b:	48 89 e5             	mov    %rsp,%rbp
   1226e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12272:	90                   	nop
   12273:	5d                   	pop    %rbp
   12274:	c3                   	ret
   12275:	90                   	nop

0000000000012276 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   12276:	55                   	push   %rbp
   12277:	48 89 e5             	mov    %rsp,%rbp
   1227a:	48 83 ec 10          	sub    $0x10,%rsp
   1227e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12286:	48 89 c7             	mov    %rax,%rdi
   12289:	e8 f2 ea ff ff       	call   10d80 <_ZNSaI14VkDynamicStateED1Ev>
   1228e:	90                   	nop
   1228f:	c9                   	leave
   12290:	c3                   	ret
   12291:	90                   	nop

0000000000012292 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   12292:	55                   	push   %rbp
   12293:	48 89 e5             	mov    %rsp,%rbp
   12296:	48 83 ec 10          	sub    $0x10,%rsp
   1229a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1229e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   122a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   122aa:	48 89 d6             	mov    %rdx,%rsi
   122ad:	48 89 c7             	mov    %rax,%rdi
   122b0:	e8 e3 13 00 00       	call   13698 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>
   122b5:	90                   	nop
   122b6:	c9                   	leave
   122b7:	c3                   	ret

00000000000122b8 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   122b8:	55                   	push   %rbp
   122b9:	48 89 e5             	mov    %rsp,%rbp
   122bc:	48 83 ec 10          	sub    $0x10,%rsp
   122c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   122c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122c8:	48 8b 50 10          	mov    0x10(%rax),%rdx
   122cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122d0:	48 8b 00             	mov    (%rax),%rax
   122d3:	48 29 c2             	sub    %rax,%rdx
   122d6:	48 89 d0             	mov    %rdx,%rax
   122d9:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   122dd:	48 89 c2             	mov    %rax,%rdx
   122e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122e4:	48 8b 08             	mov    (%rax),%rcx
   122e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122eb:	48 89 ce             	mov    %rcx,%rsi
   122ee:	48 89 c7             	mov    %rax,%rdi
   122f1:	e8 d4 13 00 00       	call   136ca <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>
      }
   122f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122fa:	48 89 c7             	mov    %rax,%rdi
   122fd:	e8 74 ff ff ff       	call   12276 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>
   12302:	90                   	nop
   12303:	c9                   	leave
   12304:	c3                   	ret
   12305:	90                   	nop

0000000000012306 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>:
      begin() const noexcept { return _M_array; }
   12306:	55                   	push   %rbp
   12307:	48 89 e5             	mov    %rsp,%rbp
   1230a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1230e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12312:	48 8b 00             	mov    (%rax),%rax
   12315:	5d                   	pop    %rbp
   12316:	c3                   	ret
   12317:	90                   	nop

0000000000012318 <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>:
      end() const noexcept { return begin() + size(); }
   12318:	55                   	push   %rbp
   12319:	48 89 e5             	mov    %rsp,%rbp
   1231c:	53                   	push   %rbx
   1231d:	48 83 ec 18          	sub    $0x18,%rsp
   12321:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12325:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12329:	48 89 c7             	mov    %rax,%rdi
   1232c:	e8 d5 ff ff ff       	call   12306 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
   12331:	48 89 c3             	mov    %rax,%rbx
   12334:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12338:	48 89 c7             	mov    %rax,%rdi
   1233b:	e8 c0 13 00 00       	call   13700 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>
   12340:	48 c1 e0 02          	shl    $0x2,%rax
   12344:	48 01 d8             	add    %rbx,%rax
   12347:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1234b:	c9                   	leave
   1234c:	c3                   	ret

000000000001234d <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   1234d:	55                   	push   %rbp
   1234e:	48 89 e5             	mov    %rsp,%rbp
   12351:	48 83 ec 10          	sub    $0x10,%rsp
   12355:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12359:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   1235d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12361:	48 89 c7             	mov    %rax,%rdi
   12364:	e8 a9 13 00 00       	call   13712 <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   12369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1236d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12371:	48 89 d6             	mov    %rdx,%rsi
   12374:	48 89 c7             	mov    %rax,%rdi
   12377:	e8 a1 13 00 00       	call   1371d <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   1237c:	c9                   	leave
   1237d:	c3                   	ret

000000000001237e <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1237e:	55                   	push   %rbp
   1237f:	48 89 e5             	mov    %rsp,%rbp
   12382:	53                   	push   %rbx
   12383:	48 83 ec 38          	sub    $0x38,%rsp
   12387:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1238b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1238f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   12393:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12397:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1239b:	48 89 d6             	mov    %rdx,%rsi
   1239e:	48 89 c7             	mov    %rax,%rdi
   123a1:	e8 a7 ff ff ff       	call   1234d <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   123a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   123aa:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   123ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123b2:	48 89 c7             	mov    %rax,%rdi
   123b5:	e8 74 00 00 00       	call   1242e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   123ba:	48 89 c2             	mov    %rax,%rdx
   123bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123c1:	48 89 d6             	mov    %rdx,%rsi
   123c4:	48 89 c7             	mov    %rax,%rdi
   123c7:	e8 6b 13 00 00       	call   13737 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>
   123cc:	48 89 c6             	mov    %rax,%rsi
   123cf:	48 89 df             	mov    %rbx,%rdi
   123d2:	e8 c1 13 00 00       	call   13798 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>
   123d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   123db:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   123de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123e2:	48 8b 00             	mov    (%rax),%rax
   123e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   123e9:	48 c1 e2 02          	shl    $0x2,%rdx
   123ed:	48 01 c2             	add    %rax,%rdx
   123f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123f4:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   123f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   123fc:	48 89 c7             	mov    %rax,%rdi
   123ff:	e8 2a 00 00 00       	call   1242e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   12404:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   12407:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1240b:	48 8b 10             	mov    (%rax),%rdx
   1240e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   12412:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12416:	48 89 c7             	mov    %rax,%rdi
   12419:	e8 ad 13 00 00       	call   137cb <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   1241e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12422:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   12426:	90                   	nop
   12427:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1242b:	c9                   	leave
   1242c:	c3                   	ret
   1242d:	90                   	nop

000000000001242e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1242e:	55                   	push   %rbp
   1242f:	48 89 e5             	mov    %rsp,%rbp
   12432:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1243a:	5d                   	pop    %rbp
   1243b:	c3                   	ret

000000000001243c <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1243c:	55                   	push   %rbp
   1243d:	48 89 e5             	mov    %rsp,%rbp
   12440:	48 83 ec 20          	sub    $0x20,%rsp
   12444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12448:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1244c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12450:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12458:	48 89 d6             	mov    %rdx,%rsi
   1245b:	48 89 c7             	mov    %rax,%rdi
   1245e:	e8 99 13 00 00       	call   137fc <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>
    }
   12463:	90                   	nop
   12464:	c9                   	leave
   12465:	c3                   	ret

0000000000012466 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   12466:	55                   	push   %rbp
   12467:	48 89 e5             	mov    %rsp,%rbp
   1246a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1246e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   12472:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12476:	5d                   	pop    %rbp
   12477:	c3                   	ret

0000000000012478 <_ZSt4moveIRP12VkPipeline_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   12478:	55                   	push   %rbp
   12479:	48 89 e5             	mov    %rsp,%rbp
   1247c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   12480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12484:	5d                   	pop    %rbp
   12485:	c3                   	ret

0000000000012486 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   12486:	55                   	push   %rbp
   12487:	48 89 e5             	mov    %rsp,%rbp
   1248a:	53                   	push   %rbx
   1248b:	48 83 ec 18          	sub    $0x18,%rsp
   1248f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12493:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   12497:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1249b:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1249f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124a3:	48 8b 40 10          	mov    0x10(%rax),%rax
   124a7:	48 39 c2             	cmp    %rax,%rdx
   124aa:	74 3c                	je     124e8 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   124ac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   124b0:	48 89 c7             	mov    %rax,%rdi
   124b3:	e8 6a 13 00 00       	call   13822 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   124b8:	48 89 c2             	mov    %rax,%rdx
   124bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124bf:	48 8b 48 08          	mov    0x8(%rax),%rcx
   124c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124c7:	48 89 ce             	mov    %rcx,%rsi
   124ca:	48 89 c7             	mov    %rax,%rdi
   124cd:	e8 5e 13 00 00       	call   13830 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   124d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124d6:	48 8b 40 08          	mov    0x8(%rax),%rax
   124da:	48 8d 50 08          	lea    0x8(%rax),%rdx
   124de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124e2:	48 89 50 08          	mov    %rdx,0x8(%rax)
   124e6:	eb 30                	jmp    12518 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   124e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   124ec:	48 89 c7             	mov    %rax,%rdi
   124ef:	e8 2e 13 00 00       	call   13822 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   124f4:	48 89 c3             	mov    %rax,%rbx
   124f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124fb:	48 89 c7             	mov    %rax,%rdi
   124fe:	e8 1f 45 ff ff       	call   6a22 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
   12503:	48 89 c1             	mov    %rax,%rcx
   12506:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1250a:	48 89 da             	mov    %rbx,%rdx
   1250d:	48 89 ce             	mov    %rcx,%rsi
   12510:	48 89 c7             	mov    %rax,%rdi
   12513:	e8 52 13 00 00       	call   1386a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   12518:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1251c:	48 89 c7             	mov    %rax,%rdi
   1251f:	e8 d8 14 00 00       	call   139fc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4backEv>
      }
   12524:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12528:	c9                   	leave
   12529:	c3                   	ret

000000000001252a <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1252a:	55                   	push   %rbp
   1252b:	48 89 e5             	mov    %rsp,%rbp
   1252e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12532:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12536:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1253a:	48 8b 10             	mov    (%rax),%rdx
   1253d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12541:	48 89 10             	mov    %rdx,(%rax)
   12544:	90                   	nop
   12545:	5d                   	pop    %rbp
   12546:	c3                   	ret
   12547:	90                   	nop

0000000000012548 <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12548:	55                   	push   %rbp
   12549:	48 89 e5             	mov    %rsp,%rbp
   1254c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12554:	5d                   	pop    %rbp
   12555:	c3                   	ret

0000000000012556 <_ZNSaIP13VkImageView_TEC1Ev>:
   12556:	55                   	push   %rbp
   12557:	48 89 e5             	mov    %rsp,%rbp
   1255a:	48 83 ec 10          	sub    $0x10,%rsp
   1255e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12566:	48 89 c7             	mov    %rax,%rdi
   12569:	e8 ce 14 00 00       	call   13a3c <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   1256e:	90                   	nop
   1256f:	c9                   	leave
   12570:	c3                   	ret
   12571:	90                   	nop

0000000000012572 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   12572:	55                   	push   %rbp
   12573:	48 89 e5             	mov    %rsp,%rbp
   12576:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1257a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1257e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12585:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12589:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12590:	00 
   12591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12595:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1259c:	00 
	{ }
   1259d:	90                   	nop
   1259e:	5d                   	pop    %rbp
   1259f:	c3                   	ret

00000000000125a0 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
   125a0:	55                   	push   %rbp
   125a1:	48 89 e5             	mov    %rsp,%rbp
   125a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125a8:	90                   	nop
   125a9:	5d                   	pop    %rbp
   125aa:	c3                   	ret
   125ab:	90                   	nop

00000000000125ac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   125ac:	55                   	push   %rbp
   125ad:	48 89 e5             	mov    %rsp,%rbp
   125b0:	48 83 ec 20          	sub    $0x20,%rsp
   125b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   125bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   125c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   125c5:	74 17                	je     125de <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   125c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125cb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   125cf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   125d3:	48 89 ce             	mov    %rcx,%rsi
   125d6:	48 89 c7             	mov    %rax,%rdi
   125d9:	e8 69 14 00 00       	call   13a47 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   125de:	90                   	nop
   125df:	c9                   	leave
   125e0:	c3                   	ret
   125e1:	90                   	nop

00000000000125e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   125e2:	55                   	push   %rbp
   125e3:	48 89 e5             	mov    %rsp,%rbp
   125e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   125ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125ee:	5d                   	pop    %rbp
   125ef:	c3                   	ret

00000000000125f0 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   125f0:	55                   	push   %rbp
   125f1:	48 89 e5             	mov    %rsp,%rbp
   125f4:	48 83 ec 20          	sub    $0x20,%rsp
   125f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12600:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12604:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12608:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1260c:	48 89 d6             	mov    %rdx,%rsi
   1260f:	48 89 c7             	mov    %rax,%rdi
   12612:	e8 5e 14 00 00       	call   13a75 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   12617:	90                   	nop
   12618:	c9                   	leave
   12619:	c3                   	ret

000000000001261a <_ZNSaIP12VkPipeline_TEC1Ev>:
   1261a:	55                   	push   %rbp
   1261b:	48 89 e5             	mov    %rsp,%rbp
   1261e:	48 83 ec 10          	sub    $0x10,%rsp
   12622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1262a:	48 89 c7             	mov    %rax,%rdi
   1262d:	e8 6a 14 00 00       	call   13a9c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   12632:	90                   	nop
   12633:	c9                   	leave
   12634:	c3                   	ret
   12635:	90                   	nop

0000000000012636 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   12636:	55                   	push   %rbp
   12637:	48 89 e5             	mov    %rsp,%rbp
   1263a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1263e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12642:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1264d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12654:	00 
   12655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12659:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   12660:	00 
	{ }
   12661:	90                   	nop
   12662:	5d                   	pop    %rbp
   12663:	c3                   	ret

0000000000012664 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
   12664:	55                   	push   %rbp
   12665:	48 89 e5             	mov    %rsp,%rbp
   12668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1266c:	90                   	nop
   1266d:	5d                   	pop    %rbp
   1266e:	c3                   	ret
   1266f:	90                   	nop

0000000000012670 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   12670:	55                   	push   %rbp
   12671:	48 89 e5             	mov    %rsp,%rbp
   12674:	48 83 ec 20          	sub    $0x20,%rsp
   12678:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1267c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12680:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   12684:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12689:	74 17                	je     126a2 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1268b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1268f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12693:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12697:	48 89 ce             	mov    %rcx,%rsi
   1269a:	48 89 c7             	mov    %rax,%rdi
   1269d:	e8 05 14 00 00       	call   13aa7 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   126a2:	90                   	nop
   126a3:	c9                   	leave
   126a4:	c3                   	ret
   126a5:	90                   	nop

00000000000126a6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   126a6:	55                   	push   %rbp
   126a7:	48 89 e5             	mov    %rsp,%rbp
   126aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   126ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126b2:	5d                   	pop    %rbp
   126b3:	c3                   	ret

00000000000126b4 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   126b4:	55                   	push   %rbp
   126b5:	48 89 e5             	mov    %rsp,%rbp
   126b8:	48 83 ec 20          	sub    $0x20,%rsp
   126bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   126c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   126c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126d0:	48 89 d6             	mov    %rdx,%rsi
   126d3:	48 89 c7             	mov    %rax,%rdi
   126d6:	e8 fa 13 00 00       	call   13ad5 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   126db:	90                   	nop
   126dc:	c9                   	leave
   126dd:	c3                   	ret

00000000000126de <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   126de:	55                   	push   %rbp
   126df:	48 89 e5             	mov    %rsp,%rbp
   126e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   126ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126ee:	48 8b 10             	mov    (%rax),%rdx
   126f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126f5:	48 89 10             	mov    %rdx,(%rax)
   126f8:	90                   	nop
   126f9:	5d                   	pop    %rbp
   126fa:	c3                   	ret
   126fb:	90                   	nop

00000000000126fc <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   126fc:	55                   	push   %rbp
   126fd:	48 89 e5             	mov    %rsp,%rbp
   12700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12708:	5d                   	pop    %rbp
   12709:	c3                   	ret

000000000001270a <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   1270a:	55                   	push   %rbp
   1270b:	48 89 e5             	mov    %rsp,%rbp
   1270e:	53                   	push   %rbx
   1270f:	48 83 ec 18          	sub    $0x18,%rsp
   12713:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12717:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1271b:	e8 5e d7 ff ff       	call   fe7e <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   12720:	48 89 03             	mov    %rax,(%rbx)
	{ }
   12723:	90                   	nop
   12724:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12728:	c9                   	leave
   12729:	c3                   	ret

000000000001272a <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   1272a:	55                   	push   %rbp
   1272b:	48 89 e5             	mov    %rsp,%rbp
   1272e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   12732:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12736:	48 8b 00             	mov    (%rax),%rax
   12739:	5d                   	pop    %rbp
   1273a:	c3                   	ret

000000000001273b <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   1273b:	55                   	push   %rbp
   1273c:	48 89 e5             	mov    %rsp,%rbp
   1273f:	53                   	push   %rbx
   12740:	48 83 ec 38          	sub    $0x38,%rsp
   12744:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12748:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   1274c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12750:	48 8b 00             	mov    (%rax),%rax
   12753:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12757:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1275b:	48 89 c7             	mov    %rax,%rdi
   1275e:	e8 6d d7 ff ff       	call   fed0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   12763:	48 89 c3             	mov    %rax,%rbx
   12766:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1276a:	48 8b 00             	mov    (%rax),%rax
   1276d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12771:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   12775:	48 89 c7             	mov    %rax,%rdi
   12778:	e8 53 d7 ff ff       	call   fed0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1277d:	48 29 c3             	sub    %rax,%rbx
   12780:	48 89 da             	mov    %rbx,%rdx
   12783:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12787:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   1278b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1278f:	48 89 d6             	mov    %rdx,%rsi
   12792:	48 89 c7             	mov    %rax,%rdi
   12795:	e8 0e d7 ff ff       	call   fea8 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   1279a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   1279e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   127a2:	c9                   	leave
   127a3:	c3                   	ret

00000000000127a4 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   127a4:	55                   	push   %rbp
   127a5:	48 89 e5             	mov    %rsp,%rbp
   127a8:	48 83 ec 20          	sub    $0x20,%rsp
   127ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   127b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127b4:	48 89 c7             	mov    %rax,%rdi
   127b7:	e8 14 d7 ff ff       	call   fed0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   127bc:	48 89 c1             	mov    %rax,%rcx
   127bf:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   127c6:	9b c4 20 
   127c9:	48 89 c8             	mov    %rcx,%rax
   127cc:	48 f7 ea             	imul   %rdx
   127cf:	48 89 d0             	mov    %rdx,%rax
   127d2:	48 c1 f8 07          	sar    $0x7,%rax
   127d6:	48 c1 f9 3f          	sar    $0x3f,%rcx
   127da:	48 89 ca             	mov    %rcx,%rdx
   127dd:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   127e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   127e4:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   127e8:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   127ec:	48 89 d6             	mov    %rdx,%rsi
   127ef:	48 89 c7             	mov    %rax,%rdi
   127f2:	e8 05 13 00 00       	call   13afc <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   127f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   127fb:	c9                   	leave
   127fc:	c3                   	ret
   127fd:	90                   	nop

00000000000127fe <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   127fe:	55                   	push   %rbp
   127ff:	48 89 e5             	mov    %rsp,%rbp
   12802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12806:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1280a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1280e:	48 8b 10             	mov    (%rax),%rdx
   12811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12815:	48 89 10             	mov    %rdx,(%rax)
   12818:	90                   	nop
   12819:	5d                   	pop    %rbp
   1281a:	c3                   	ret
   1281b:	90                   	nop

000000000001281c <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1281c:	55                   	push   %rbp
   1281d:	48 89 e5             	mov    %rsp,%rbp
   12820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12828:	5d                   	pop    %rbp
   12829:	c3                   	ret

000000000001282a <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   1282a:	55                   	push   %rbp
   1282b:	48 89 e5             	mov    %rsp,%rbp
   1282e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12832:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12836:	48 8b 40 08          	mov    0x8(%rax),%rax
   1283a:	5d                   	pop    %rbp
   1283b:	c3                   	ret

000000000001283c <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   1283c:	55                   	push   %rbp
   1283d:	48 89 e5             	mov    %rsp,%rbp
   12840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12844:	90                   	nop
   12845:	5d                   	pop    %rbp
   12846:	c3                   	ret

0000000000012847 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   12847:	55                   	push   %rbp
   12848:	48 89 e5             	mov    %rsp,%rbp
   1284b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1284f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   12853:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12857:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1285b:	48 c1 f8 03          	sar    $0x3,%rax
    }
   1285f:	5d                   	pop    %rbp
   12860:	c3                   	ret

0000000000012861 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   12861:	55                   	push   %rbp
   12862:	48 89 e5             	mov    %rsp,%rbp
   12865:	48 83 ec 20          	sub    $0x20,%rsp
   12869:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1286d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12871:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12875:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   12879:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1287d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12881:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12885:	48 89 ce             	mov    %rcx,%rsi
   12888:	48 89 c7             	mov    %rax,%rdi
   1288b:	e8 b4 12 00 00       	call   13b44 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   12890:	c9                   	leave
   12891:	c3                   	ret

0000000000012892 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   12892:	55                   	push   %rbp
   12893:	48 89 e5             	mov    %rsp,%rbp
   12896:	48 83 ec 10          	sub    $0x10,%rsp
   1289a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1289e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   128a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   128a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128aa:	48 89 d6             	mov    %rdx,%rsi
   128ad:	48 89 c7             	mov    %rax,%rdi
   128b0:	e8 c4 12 00 00       	call   13b79 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   128b5:	90                   	nop
   128b6:	c9                   	leave
   128b7:	c3                   	ret

00000000000128b8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   128b8:	55                   	push   %rbp
   128b9:	48 89 e5             	mov    %rsp,%rbp
   128bc:	53                   	push   %rbx
   128bd:	48 83 ec 28          	sub    $0x28,%rsp
   128c1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   128c5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   128c9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   128cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   128d1:	48 89 c6             	mov    %rax,%rsi
   128d4:	bf 08 00 00 00       	mov    $0x8,%edi
   128d9:	e8 52 25 ff ff       	call   4e30 <_ZnwmPv>
   128de:	48 89 c3             	mov    %rax,%rbx
   128e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128e5:	48 89 c7             	mov    %rax,%rdi
   128e8:	e8 29 ed ff ff       	call   11616 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   128ed:	48 8b 00             	mov    (%rax),%rax
   128f0:	48 89 03             	mov    %rax,(%rbx)
   128f3:	90                   	nop
   128f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   128f8:	c9                   	leave
   128f9:	c3                   	ret

00000000000128fa <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   128fa:	55                   	push   %rbp
   128fb:	48 89 e5             	mov    %rsp,%rbp
   128fe:	53                   	push   %rbx
   128ff:	48 83 ec 38          	sub    $0x38,%rsp
   12903:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12907:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1290b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1290f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12913:	48 89 c7             	mov    %rax,%rdi
   12916:	e8 6d 12 00 00       	call   13b88 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1291b:	48 89 c3             	mov    %rax,%rbx
   1291e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12922:	48 89 c7             	mov    %rax,%rdi
   12925:	e8 02 db ff ff       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1292a:	48 29 c3             	sub    %rax,%rbx
   1292d:	48 89 da             	mov    %rbx,%rdx
   12930:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12934:	48 39 c2             	cmp    %rax,%rdx
   12937:	0f 92 c0             	setb   %al
   1293a:	84 c0                	test   %al,%al
   1293c:	74 0c                	je     1294a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   1293e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12942:	48 89 c7             	mov    %rax,%rdi
   12945:	e8 26 18 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   1294a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1294e:	48 89 c7             	mov    %rax,%rdi
   12951:	e8 d6 da ff ff       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   12956:	48 89 c3             	mov    %rax,%rbx
   12959:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1295d:	48 89 c7             	mov    %rax,%rdi
   12960:	e8 c7 da ff ff       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   12965:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12969:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1296d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12971:	48 89 d6             	mov    %rdx,%rsi
   12974:	48 89 c7             	mov    %rax,%rdi
   12977:	e8 9d 11 00 00       	call   13b19 <_ZSt3maxImERKT_S2_S2_>
   1297c:	48 8b 00             	mov    (%rax),%rax
   1297f:	48 01 d8             	add    %rbx,%rax
   12982:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12986:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1298a:	48 89 c7             	mov    %rax,%rdi
   1298d:	e8 9a da ff ff       	call   1042c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   12992:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12996:	72 12                	jb     129aa <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   12998:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1299c:	48 89 c7             	mov    %rax,%rdi
   1299f:	e8 e4 11 00 00       	call   13b88 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   129a4:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   129a8:	73 0e                	jae    129b8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   129aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129ae:	48 89 c7             	mov    %rax,%rdi
   129b1:	e8 d2 11 00 00       	call   13b88 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   129b6:	eb 04                	jmp    129bc <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   129b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   129bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   129c0:	c9                   	leave
   129c1:	c3                   	ret

00000000000129c2 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   129c2:	55                   	push   %rbp
   129c3:	48 89 e5             	mov    %rsp,%rbp
   129c6:	53                   	push   %rbx
   129c7:	48 83 ec 18          	sub    $0x18,%rsp
   129cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   129d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129d7:	48 89 c7             	mov    %rax,%rdi
   129da:	e8 29 ec ff ff       	call   11608 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   129df:	48 8b 18             	mov    (%rax),%rbx
   129e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   129e6:	48 89 c7             	mov    %rax,%rdi
   129e9:	e8 1a ec ff ff       	call   11608 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   129ee:	48 8b 00             	mov    (%rax),%rax
   129f1:	48 89 da             	mov    %rbx,%rdx
   129f4:	48 29 c2             	sub    %rax,%rdx
   129f7:	48 89 d0             	mov    %rdx,%rax
   129fa:	48 c1 f8 03          	sar    $0x3,%rax
   129fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12a02:	c9                   	leave
   12a03:	c3                   	ret

0000000000012a04 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12a04:	55                   	push   %rbp
   12a05:	48 89 e5             	mov    %rsp,%rbp
   12a08:	48 83 ec 20          	sub    $0x20,%rsp
   12a0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12a14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12a18:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12a1c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12a20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a24:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a2c:	48 89 c7             	mov    %rax,%rdi
   12a2f:	e8 76 11 00 00       	call   13baa <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12a34:	c9                   	leave
   12a35:	c3                   	ret

0000000000012a36 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   12a36:	55                   	push   %rbp
   12a37:	48 89 e5             	mov    %rsp,%rbp
   12a3a:	48 83 ec 20          	sub    $0x20,%rsp
   12a3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12a42:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   12a46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a4a:	48 8b 00             	mov    (%rax),%rax
   12a4d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12a51:	48 c1 e2 03          	shl    $0x3,%rdx
   12a55:	48 f7 da             	neg    %rdx
   12a58:	48 01 d0             	add    %rdx,%rax
   12a5b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12a5f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   12a63:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   12a67:	48 89 d6             	mov    %rdx,%rsi
   12a6a:	48 89 c7             	mov    %rax,%rdi
   12a6d:	e8 78 eb ff ff       	call   115ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12a72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a76:	c9                   	leave
   12a77:	c3                   	ret

0000000000012a78 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   12a78:	55                   	push   %rbp
   12a79:	48 89 e5             	mov    %rsp,%rbp
   12a7c:	53                   	push   %rbx
   12a7d:	48 83 ec 28          	sub    $0x28,%rsp
   12a81:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12a85:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   12a89:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12a8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a91:	48 89 c7             	mov    %rax,%rdi
   12a94:	e8 c5 ed ff ff       	call   1185e <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12a99:	48 89 c6             	mov    %rax,%rsi
   12a9c:	48 89 df             	mov    %rbx,%rdi
   12a9f:	e8 6a 11 00 00       	call   13c0e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   12aa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12aa8:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   12aac:	90                   	nop
   12aad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12ab1:	c9                   	leave
   12ab2:	c3                   	ret
   12ab3:	90                   	nop

0000000000012ab4 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   12ab4:	55                   	push   %rbp
   12ab5:	48 89 e5             	mov    %rsp,%rbp
   12ab8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   12abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ac0:	5d                   	pop    %rbp
   12ac1:	c3                   	ret

0000000000012ac2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   12ac2:	55                   	push   %rbp
   12ac3:	48 89 e5             	mov    %rsp,%rbp
   12ac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12aca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   12ace:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ad2:	8b 10                	mov    (%rax),%edx
   12ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ad8:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   12ada:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12ade:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12ae2:	48 8b 46 04          	mov    0x4(%rsi),%rax
   12ae6:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   12aea:	48 89 41 04          	mov    %rax,0x4(%rcx)
   12aee:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   12af2:	48 8b 46 14          	mov    0x14(%rsi),%rax
   12af6:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   12afa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12afe:	5d                   	pop    %rbp
   12aff:	c3                   	ret

0000000000012b00 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   12b00:	55                   	push   %rbp
   12b01:	48 89 e5             	mov    %rsp,%rbp
   12b04:	53                   	push   %rbx
   12b05:	48 83 ec 18          	sub    $0x18,%rsp
   12b09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   12b11:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12b15:	48 89 c7             	mov    %rax,%rdi
   12b18:	e8 43 11 00 00       	call   13c60 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   12b1d:	48 89 c3             	mov    %rax,%rbx
   12b20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b24:	48 89 c7             	mov    %rax,%rdi
   12b27:	e8 26 11 00 00       	call   13c52 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   12b2c:	48 89 de             	mov    %rbx,%rsi
   12b2f:	48 89 c7             	mov    %rax,%rdi
   12b32:	e8 37 11 00 00       	call   13c6e <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   12b37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b3b:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   12b3f:	90                   	nop
   12b40:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12b44:	c9                   	leave
   12b45:	c3                   	ret

0000000000012b46 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   12b46:	55                   	push   %rbp
   12b47:	48 89 e5             	mov    %rsp,%rbp
   12b4a:	48 83 ec 10          	sub    $0x10,%rsp
   12b4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   12b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b56:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12b5a:	84 c0                	test   %al,%al
   12b5c:	74 0c                	je     12b6a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   12b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b62:	48 89 c7             	mov    %rax,%rdi
   12b65:	e8 5e 11 00 00       	call   13cc8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   12b6a:	90                   	nop
   12b6b:	c9                   	leave
   12b6c:	c3                   	ret
   12b6d:	90                   	nop

0000000000012b6e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12b6e:	55                   	push   %rbp
   12b6f:	48 89 e5             	mov    %rsp,%rbp
   12b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b76:	90                   	nop
   12b77:	5d                   	pop    %rbp
   12b78:	c3                   	ret

0000000000012b79 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12b79:	55                   	push   %rbp
   12b7a:	48 89 e5             	mov    %rsp,%rbp
   12b7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   12b81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b85:	48 8b 40 18          	mov    0x18(%rax),%rax
   12b89:	5d                   	pop    %rbp
   12b8a:	c3                   	ret

0000000000012b8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12b8b:	55                   	push   %rbp
   12b8c:	48 89 e5             	mov    %rsp,%rbp
   12b8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   12b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b97:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b9b:	5d                   	pop    %rbp
   12b9c:	c3                   	ret
   12b9d:	90                   	nop

0000000000012b9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12b9e:	55                   	push   %rbp
   12b9f:	48 89 e5             	mov    %rsp,%rbp
   12ba2:	48 83 ec 10          	sub    $0x10,%rsp
   12ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12baa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   12bae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bb6:	48 89 d6             	mov    %rdx,%rsi
   12bb9:	48 89 c7             	mov    %rax,%rdi
   12bbc:	e8 1b 11 00 00       	call   13cdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   12bc1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12bc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bc9:	48 89 d6             	mov    %rdx,%rsi
   12bcc:	48 89 c7             	mov    %rax,%rdi
   12bcf:	e8 46 11 00 00       	call   13d1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   12bd4:	90                   	nop
   12bd5:	c9                   	leave
   12bd6:	c3                   	ret
   12bd7:	90                   	nop

0000000000012bd8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   12bd8:	55                   	push   %rbp
   12bd9:	48 89 e5             	mov    %rsp,%rbp
   12bdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   12be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be4:	48 8b 40 10          	mov    0x10(%rax),%rax
   12be8:	5d                   	pop    %rbp
   12be9:	c3                   	ret

0000000000012bea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   12bea:	55                   	push   %rbp
   12beb:	48 89 e5             	mov    %rsp,%rbp
   12bee:	53                   	push   %rbx
   12bef:	48 83 ec 18          	sub    $0x18,%rsp
   12bf3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12bf7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   12bfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bff:	48 89 c7             	mov    %rax,%rdi
   12c02:	e8 49 11 00 00       	call   13d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12c07:	48 89 c3             	mov    %rax,%rbx
   12c0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c0e:	48 89 c7             	mov    %rax,%rdi
   12c11:	e8 16 ee ff ff       	call   11a2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   12c16:	48 89 c6             	mov    %rax,%rsi
   12c19:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12c1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c21:	48 89 d1             	mov    %rdx,%rcx
   12c24:	48 89 da             	mov    %rbx,%rdx
   12c27:	48 89 c7             	mov    %rax,%rdi
   12c2a:	e8 33 11 00 00       	call   13d62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   12c2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12c33:	c9                   	leave
   12c34:	c3                   	ret
   12c35:	90                   	nop

0000000000012c36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12c36:	55                   	push   %rbp
   12c37:	48 89 e5             	mov    %rsp,%rbp
   12c3a:	48 83 ec 20          	sub    $0x20,%rsp
   12c3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   12c42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c46:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12c4a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12c4e:	48 89 d6             	mov    %rdx,%rsi
   12c51:	48 89 c7             	mov    %rax,%rdi
   12c54:	e8 39 06 00 00       	call   13292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   12c59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c5d:	c9                   	leave
   12c5e:	c3                   	ret
   12c5f:	90                   	nop

0000000000012c60 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   12c60:	55                   	push   %rbp
   12c61:	48 89 e5             	mov    %rsp,%rbp
   12c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   12c68:	90                   	nop
   12c69:	5d                   	pop    %rbp
   12c6a:	c3                   	ret
   12c6b:	90                   	nop

0000000000012c6c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   12c6c:	55                   	push   %rbp
   12c6d:	48 89 e5             	mov    %rsp,%rbp
   12c70:	48 83 ec 10          	sub    $0x10,%rsp
   12c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   12c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c7c:	48 83 c0 20          	add    $0x20,%rax
   12c80:	48 89 c7             	mov    %rax,%rdi
   12c83:	e8 70 11 00 00       	call   13df8 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   12c88:	c9                   	leave
   12c89:	c3                   	ret

0000000000012c8a <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   12c8a:	55                   	push   %rbp
   12c8b:	48 89 e5             	mov    %rsp,%rbp
   12c8e:	48 83 ec 10          	sub    $0x10,%rsp
   12c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   12c9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ca2:	48 89 d6             	mov    %rdx,%rsi
   12ca5:	48 89 c7             	mov    %rax,%rdi
   12ca8:	e8 83 13 ff ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   12cad:	c1 e8 1f             	shr    $0x1f,%eax
   12cb0:	c9                   	leave
   12cb1:	c3                   	ret

0000000000012cb2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12cb2:	55                   	push   %rbp
   12cb3:	48 89 e5             	mov    %rsp,%rbp
   12cb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12cba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cbe:	5d                   	pop    %rbp
   12cbf:	c3                   	ret

0000000000012cc0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   12cc0:	55                   	push   %rbp
   12cc1:	48 89 e5             	mov    %rsp,%rbp
   12cc4:	53                   	push   %rbx
   12cc5:	48 83 ec 18          	sub    $0x18,%rsp
   12cc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ccd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   12cd1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12cd5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12cd9:	48 89 c7             	mov    %rax,%rdi
   12cdc:	e8 d1 ff ff ff       	call   12cb2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   12ce1:	48 89 c6             	mov    %rax,%rsi
   12ce4:	48 89 df             	mov    %rbx,%rdi
   12ce7:	e8 26 11 00 00       	call   13e12 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   12cec:	90                   	nop
   12ced:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12cf1:	c9                   	leave
   12cf2:	c3                   	ret

0000000000012cf3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12cf3:	55                   	push   %rbp
   12cf4:	48 89 e5             	mov    %rsp,%rbp
   12cf7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cff:	5d                   	pop    %rbp
   12d00:	c3                   	ret

0000000000012d01 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12d01:	55                   	push   %rbp
   12d02:	48 89 e5             	mov    %rsp,%rbp
   12d05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d0d:	5d                   	pop    %rbp
   12d0e:	c3                   	ret

0000000000012d0f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12d0f:	55                   	push   %rbp
   12d10:	48 89 e5             	mov    %rsp,%rbp
   12d13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12d17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d1b:	5d                   	pop    %rbp
   12d1c:	c3                   	ret
   12d1d:	90                   	nop

0000000000012d1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   12d1e:	55                   	push   %rbp
   12d1f:	48 89 e5             	mov    %rsp,%rbp
   12d22:	41 54                	push   %r12
   12d24:	53                   	push   %rbx
   12d25:	48 83 ec 30          	sub    $0x30,%rsp
   12d29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12d2d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12d31:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12d35:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   12d39:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   12d3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d41:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12d45:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   12d48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12d4c:	48 89 c7             	mov    %rax,%rdi
   12d4f:	e8 bb ff ff ff       	call   12d0f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12d54:	49 89 c4             	mov    %rax,%r12
   12d57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12d5b:	48 89 c7             	mov    %rax,%rdi
   12d5e:	e8 9e ff ff ff       	call   12d01 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12d63:	48 89 c3             	mov    %rax,%rbx
   12d66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d6a:	48 89 c7             	mov    %rax,%rdi
   12d6d:	e8 81 ff ff ff       	call   12cf3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12d72:	48 89 c6             	mov    %rax,%rsi
   12d75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d79:	4c 89 e1             	mov    %r12,%rcx
   12d7c:	48 89 da             	mov    %rbx,%rdx
   12d7f:	48 89 c7             	mov    %rax,%rdi
   12d82:	e8 bf 10 00 00       	call   13e46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   12d87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d8b:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   12d8f:	90                   	nop
   12d90:	48 83 c4 30          	add    $0x30,%rsp
   12d94:	5b                   	pop    %rbx
   12d95:	41 5c                	pop    %r12
   12d97:	5d                   	pop    %rbp
   12d98:	c3                   	ret
   12d99:	90                   	nop

0000000000012d9a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   12d9a:	55                   	push   %rbp
   12d9b:	48 89 e5             	mov    %rsp,%rbp
   12d9e:	48 83 ec 10          	sub    $0x10,%rsp
   12da2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   12da6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12daa:	48 8b 40 08          	mov    0x8(%rax),%rax
   12dae:	48 85 c0             	test   %rax,%rax
   12db1:	74 1a                	je     12dcd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   12db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12db7:	48 8b 00             	mov    (%rax),%rax
   12dba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12dbe:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   12dc2:	48 89 d6             	mov    %rdx,%rsi
   12dc5:	48 89 c7             	mov    %rax,%rdi
   12dc8:	e8 d1 fd ff ff       	call   12b9e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   12dcd:	90                   	nop
   12dce:	c9                   	leave
   12dcf:	c3                   	ret

0000000000012dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12dd0:	55                   	push   %rbp
   12dd1:	48 89 e5             	mov    %rsp,%rbp
   12dd4:	53                   	push   %rbx
   12dd5:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   12ddc:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   12de3:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   12dea:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   12df1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   12df8:	48 89 c7             	mov    %rax,%rdi
   12dfb:	e8 c2 10 00 00       	call   13ec2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   12e00:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   12e07:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12e0e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12e15:	48 89 c7             	mov    %rax,%rdi
   12e18:	e8 33 0f 00 00       	call   13d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12e1d:	48 39 c3             	cmp    %rax,%rbx
   12e20:	0f 94 c0             	sete   %al
   12e23:	84 c0                	test   %al,%al
   12e25:	0f 84 c8 00 00 00    	je     12ef3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   12e2b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12e32:	48 89 c7             	mov    %rax,%rdi
   12e35:	e8 b0 10 00 00       	call   13eea <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   12e3a:	48 85 c0             	test   %rax,%rax
   12e3d:	74 44                	je     12e83 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12e3f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12e46:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12e4d:	48 89 c7             	mov    %rax,%rdi
   12e50:	e8 a7 10 00 00       	call   13efc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12e55:	48 8b 00             	mov    (%rax),%rax
   12e58:	48 89 c7             	mov    %rax,%rdi
   12e5b:	e8 ae 10 00 00       	call   13f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12e60:	48 89 c1             	mov    %rax,%rcx
   12e63:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12e6a:	48 89 c2             	mov    %rax,%rdx
   12e6d:	48 89 ce             	mov    %rcx,%rsi
   12e70:	48 89 df             	mov    %rbx,%rdi
   12e73:	e8 96 ec ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12e78:	84 c0                	test   %al,%al
   12e7a:	74 07                	je     12e83 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12e7c:	b8 01 00 00 00       	mov    $0x1,%eax
   12e81:	eb 05                	jmp    12e88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   12e83:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   12e88:	84 c0                	test   %al,%al
   12e8a:	74 49                	je     12ed5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   12e8c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12e93:	48 89 c7             	mov    %rax,%rdi
   12e96:	e8 61 10 00 00       	call   13efc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12e9b:	48 89 c2             	mov    %rax,%rdx
   12e9e:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   12ea5:	00 00 00 00 
   12ea9:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   12eb0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   12eb7:	48 89 ce             	mov    %rcx,%rsi
   12eba:	48 89 c7             	mov    %rax,%rdi
   12ebd:	e8 66 10 00 00       	call   13f28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12ec2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12ec9:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12ed0:	e9 43 03 00 00       	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   12ed5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   12edc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12ee3:	48 89 d6             	mov    %rdx,%rsi
   12ee6:	48 89 c7             	mov    %rax,%rdi
   12ee9:	e8 6a 10 00 00       	call   13f58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   12eee:	e9 25 03 00 00       	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   12ef3:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12efa:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12f01:	48 89 c7             	mov    %rax,%rdi
   12f04:	e8 05 10 00 00       	call   13f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12f09:	48 89 c2             	mov    %rax,%rdx
   12f0c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12f13:	48 89 c6             	mov    %rax,%rsi
   12f16:	48 89 df             	mov    %rbx,%rdi
   12f19:	e8 f0 eb ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12f1e:	84 c0                	test   %al,%al
   12f20:	0f 84 66 01 00 00    	je     1308c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   12f26:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12f2d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   12f34:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12f3b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12f42:	48 89 c7             	mov    %rax,%rdi
   12f45:	e8 84 11 00 00       	call   140ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12f4a:	48 8b 00             	mov    (%rax),%rax
   12f4d:	48 39 c3             	cmp    %rax,%rbx
   12f50:	0f 94 c0             	sete   %al
   12f53:	84 c0                	test   %al,%al
   12f55:	74 4c                	je     12fa3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   12f57:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12f5e:	48 89 c7             	mov    %rax,%rdi
   12f61:	e8 68 11 00 00       	call   140ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12f66:	48 89 c3             	mov    %rax,%rbx
   12f69:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12f70:	48 89 c7             	mov    %rax,%rdi
   12f73:	e8 56 11 00 00       	call   140ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12f78:	48 89 c1             	mov    %rax,%rcx
   12f7b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   12f82:	48 89 da             	mov    %rbx,%rdx
   12f85:	48 89 ce             	mov    %rcx,%rsi
   12f88:	48 89 c7             	mov    %rax,%rdi
   12f8b:	e8 50 11 00 00       	call   140e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   12f90:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   12f97:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   12f9e:	e9 75 02 00 00       	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   12fa3:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12faa:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   12fb1:	48 89 c7             	mov    %rax,%rdi
   12fb4:	e8 6b 11 00 00       	call   14124 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   12fb9:	48 8b 00             	mov    (%rax),%rax
   12fbc:	48 89 c7             	mov    %rax,%rdi
   12fbf:	e8 4a 0f 00 00       	call   13f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12fc4:	48 89 c1             	mov    %rax,%rcx
   12fc7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12fce:	48 89 c2             	mov    %rax,%rdx
   12fd1:	48 89 ce             	mov    %rcx,%rsi
   12fd4:	48 89 df             	mov    %rbx,%rdi
   12fd7:	e8 32 eb ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12fdc:	84 c0                	test   %al,%al
   12fde:	0f 84 8a 00 00 00    	je     1306e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   12fe4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   12feb:	48 89 c7             	mov    %rax,%rdi
   12fee:	e8 86 fb ff ff       	call   12b79 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12ff3:	48 85 c0             	test   %rax,%rax
   12ff6:	0f 94 c0             	sete   %al
   12ff9:	84 c0                	test   %al,%al
   12ffb:	74 3e                	je     1303b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   12ffd:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   13004:	00 00 00 00 
   13008:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   1300f:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   13016:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   1301d:	48 89 ce             	mov    %rcx,%rsi
   13020:	48 89 c7             	mov    %rax,%rdi
   13023:	e8 00 0f 00 00       	call   13f28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13028:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   1302f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   13036:	e9 dd 01 00 00       	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   1303b:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   13042:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   13049:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   13050:	48 89 ce             	mov    %rcx,%rsi
   13053:	48 89 c7             	mov    %rax,%rdi
   13056:	e8 85 10 00 00       	call   140e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1305b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   13062:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   13069:	e9 aa 01 00 00       	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   1306e:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13075:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1307c:	48 89 d6             	mov    %rdx,%rsi
   1307f:	48 89 c7             	mov    %rax,%rdi
   13082:	e8 d1 0e 00 00       	call   13f58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13087:	e9 8c 01 00 00       	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   1308c:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13093:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1309a:	48 89 c7             	mov    %rax,%rdi
   1309d:	e8 6c 0e 00 00       	call   13f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   130a2:	48 89 c1             	mov    %rax,%rcx
   130a5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   130ac:	48 89 c2             	mov    %rax,%rdx
   130af:	48 89 ce             	mov    %rcx,%rsi
   130b2:	48 89 df             	mov    %rbx,%rdi
   130b5:	e8 54 ea ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   130ba:	84 c0                	test   %al,%al
   130bc:	0f 84 2c 01 00 00    	je     131ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   130c2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   130c9:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   130d0:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   130d7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   130de:	48 89 c7             	mov    %rax,%rdi
   130e1:	e8 16 0e 00 00       	call   13efc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   130e6:	48 8b 00             	mov    (%rax),%rax
   130e9:	48 39 c3             	cmp    %rax,%rbx
   130ec:	0f 94 c0             	sete   %al
   130ef:	84 c0                	test   %al,%al
   130f1:	74 3a                	je     1312d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   130f3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   130fa:	48 89 c7             	mov    %rax,%rdi
   130fd:	e8 fa 0d 00 00       	call   13efc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13102:	48 89 c2             	mov    %rax,%rdx
   13105:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   1310c:	00 
   1310d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   13111:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   13115:	48 89 ce             	mov    %rcx,%rsi
   13118:	48 89 c7             	mov    %rax,%rdi
   1311b:	e8 08 0e 00 00       	call   13f28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13120:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13124:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   13128:	e9 eb 00 00 00       	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   1312d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13134:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   1313b:	48 89 c7             	mov    %rax,%rdi
   1313e:	e8 09 10 00 00       	call   1414c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   13143:	48 8b 00             	mov    (%rax),%rax
   13146:	48 89 c7             	mov    %rax,%rdi
   13149:	e8 c0 0d 00 00       	call   13f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1314e:	48 89 c2             	mov    %rax,%rdx
   13151:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13158:	48 89 c6             	mov    %rax,%rsi
   1315b:	48 89 df             	mov    %rbx,%rdi
   1315e:	e8 ab e9 ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13163:	84 c0                	test   %al,%al
   13165:	74 6c                	je     131d3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   13167:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1316e:	48 89 c7             	mov    %rax,%rdi
   13171:	e8 03 fa ff ff       	call   12b79 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13176:	48 85 c0             	test   %rax,%rax
   13179:	0f 94 c0             	sete   %al
   1317c:	84 c0                	test   %al,%al
   1317e:	74 2c                	je     131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   13180:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   13187:	00 
   13188:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1318f:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   13193:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13197:	48 89 ce             	mov    %rcx,%rsi
   1319a:	48 89 c7             	mov    %rax,%rdi
   1319d:	e8 86 0d 00 00       	call   13f28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   131a2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   131a6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   131aa:	eb 6c                	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   131ac:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   131b3:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   131ba:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   131be:	48 89 ce             	mov    %rcx,%rsi
   131c1:	48 89 c7             	mov    %rax,%rdi
   131c4:	e8 17 0f 00 00       	call   140e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   131c9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   131cd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   131d1:	eb 45                	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   131d3:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   131da:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   131e1:	48 89 d6             	mov    %rdx,%rsi
   131e4:	48 89 c7             	mov    %rax,%rdi
   131e7:	e8 6c 0d 00 00       	call   13f58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   131ec:	eb 2a                	jmp    13218 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   131ee:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   131f5:	00 
   131f6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   131fa:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   13201:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13205:	48 89 ce             	mov    %rcx,%rsi
   13208:	48 89 c7             	mov    %rax,%rdi
   1320b:	e8 18 0d 00 00       	call   13f28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13210:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13214:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   13218:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1321c:	c9                   	leave
   1321d:	c3                   	ret

000000000001321e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   1321e:	55                   	push   %rbp
   1321f:	48 89 e5             	mov    %rsp,%rbp
   13222:	48 83 ec 10          	sub    $0x10,%rsp
   13226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   1322a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1322e:	48 8b 40 08          	mov    0x8(%rax),%rax
   13232:	48 89 c7             	mov    %rax,%rdi
   13235:	e8 3a 0f 00 00       	call   14174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   1323a:	c9                   	leave
   1323b:	c3                   	ret

000000000001323c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   1323c:	55                   	push   %rbp
   1323d:	48 89 e5             	mov    %rsp,%rbp
   13240:	48 83 ec 30          	sub    $0x30,%rsp
   13244:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13248:	48 89 d1             	mov    %rdx,%rcx
   1324b:	48 89 f0             	mov    %rsi,%rax
   1324e:	48 89 fa             	mov    %rdi,%rdx
   13251:	48 89 ca             	mov    %rcx,%rdx
   13254:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13258:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   1325c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13260:	48 8b 00             	mov    (%rax),%rax
   13263:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13267:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1326b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1326f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   13273:	48 89 c7             	mov    %rax,%rdi
   13276:	e8 25 0f 00 00       	call   141a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   1327b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   1327f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13283:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1328a:	00 
	  return __it;
   1328b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1328f:	c9                   	leave
   13290:	c3                   	ret
   13291:	90                   	nop

0000000000013292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   13292:	55                   	push   %rbp
   13293:	48 89 e5             	mov    %rsp,%rbp
   13296:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1329a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1329e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   132a6:	48 89 10             	mov    %rdx,(%rax)
   132a9:	90                   	nop
   132aa:	5d                   	pop    %rbp
   132ab:	c3                   	ret

00000000000132ac <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   132ac:	55                   	push   %rbp
   132ad:	48 89 e5             	mov    %rsp,%rbp
   132b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   132b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   132b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   132bc:	48 8b 10             	mov    (%rax),%rdx
   132bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132c3:	48 89 10             	mov    %rdx,(%rax)
   132c6:	90                   	nop
   132c7:	5d                   	pop    %rbp
   132c8:	c3                   	ret
   132c9:	90                   	nop

00000000000132ca <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   132ca:	55                   	push   %rbp
   132cb:	48 89 e5             	mov    %rsp,%rbp
   132ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   132d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132d6:	5d                   	pop    %rbp
   132d7:	c3                   	ret

00000000000132d8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   132d8:	55                   	push   %rbp
   132d9:	48 89 e5             	mov    %rsp,%rbp
   132dc:	48 83 ec 10          	sub    $0x10,%rsp
   132e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   132e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   132e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   132ec:	48 89 c7             	mov    %rax,%rdi
   132ef:	e8 70 0f 00 00       	call   14264 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   132f4:	48 89 c2             	mov    %rax,%rdx
   132f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132fb:	48 89 d6             	mov    %rdx,%rsi
   132fe:	48 89 c7             	mov    %rax,%rdi
   13301:	e8 de 66 ff ff       	call   99e4 <_ZNSaIP9VkImage_TEC1ERKS1_>
   13306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1330a:	c9                   	leave
   1330b:	c3                   	ret

000000000001330c <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1330c:	55                   	push   %rbp
   1330d:	48 89 e5             	mov    %rsp,%rbp
   13310:	48 83 ec 10          	sub    $0x10,%rsp
   13314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13318:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   1331c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13320:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13324:	48 89 d6             	mov    %rdx,%rsi
   13327:	48 89 c7             	mov    %rax,%rdi
   1332a:	e8 43 0f 00 00       	call   14272 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   1332f:	90                   	nop
   13330:	c9                   	leave
   13331:	c3                   	ret

0000000000013332 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   13332:	55                   	push   %rbp
   13333:	48 89 e5             	mov    %rsp,%rbp
   13336:	48 83 ec 30          	sub    $0x30,%rsp
   1333a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1333e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   13342:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13346:	48 89 c7             	mov    %rax,%rdi
   13349:	e8 18 7b ff ff       	call   ae66 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   1334e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13352:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13356:	48 89 d6             	mov    %rdx,%rsi
   13359:	48 89 c7             	mov    %rax,%rdi
   1335c:	e8 37 0f 00 00       	call   14298 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   13361:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13365:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13369:	48 89 d6             	mov    %rdx,%rsi
   1336c:	48 89 c7             	mov    %rax,%rdi
   1336f:	e8 24 0f 00 00       	call   14298 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   13374:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13378:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1337c:	48 89 d6             	mov    %rdx,%rsi
   1337f:	48 89 c7             	mov    %rax,%rdi
   13382:	e8 11 0f 00 00       	call   14298 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   13387:	90                   	nop
   13388:	c9                   	leave
   13389:	c3                   	ret

000000000001338a <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   1338a:	55                   	push   %rbp
   1338b:	48 89 e5             	mov    %rsp,%rbp
   1338e:	48 83 ec 10          	sub    $0x10,%rsp
   13392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13396:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   1339a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1339e:	48 89 c7             	mov    %rax,%rdi
   133a1:	e8 2f 0f 00 00       	call   142d5 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   133a6:	90                   	nop
   133a7:	c9                   	leave
   133a8:	c3                   	ret
   133a9:	90                   	nop

00000000000133aa <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   133aa:	55                   	push   %rbp
   133ab:	48 89 e5             	mov    %rsp,%rbp
   133ae:	48 83 ec 10          	sub    $0x10,%rsp
   133b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   133b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133ba:	48 89 c7             	mov    %rax,%rdi
   133bd:	e8 64 0f 00 00       	call   14326 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   133c2:	48 89 c7             	mov    %rax,%rdi
   133c5:	e8 19 0f 00 00       	call   142e3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   133ca:	c9                   	leave
   133cb:	c3                   	ret

00000000000133cc <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   133cc:	55                   	push   %rbp
   133cd:	48 89 e5             	mov    %rsp,%rbp
   133d0:	48 83 ec 20          	sub    $0x20,%rsp
   133d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   133dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   133e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   133e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133e8:	48 89 d6             	mov    %rdx,%rsi
   133eb:	48 89 c7             	mov    %rax,%rdi
   133ee:	e8 41 0f 00 00       	call   14334 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   133f3:	c9                   	leave
   133f4:	c3                   	ret
   133f5:	90                   	nop

00000000000133f6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   133f6:	55                   	push   %rbp
   133f7:	48 89 e5             	mov    %rsp,%rbp
   133fa:	53                   	push   %rbx
   133fb:	48 83 ec 38          	sub    $0x38,%rsp
   133ff:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13403:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13407:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1340b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1340f:	48 89 c7             	mov    %rax,%rdi
   13412:	e8 93 ff ff ff       	call   133aa <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13417:	48 89 c3             	mov    %rax,%rbx
   1341a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1341e:	48 89 c7             	mov    %rax,%rdi
   13421:	e8 f2 e9 ff ff       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13426:	48 29 c3             	sub    %rax,%rbx
   13429:	48 89 da             	mov    %rbx,%rdx
   1342c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13430:	48 39 c2             	cmp    %rax,%rdx
   13433:	0f 92 c0             	setb   %al
   13436:	84 c0                	test   %al,%al
   13438:	74 0c                	je     13446 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1343a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1343e:	48 89 c7             	mov    %rax,%rdi
   13441:	e8 2a 0d ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   13446:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1344a:	48 89 c7             	mov    %rax,%rdi
   1344d:	e8 c6 e9 ff ff       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13452:	48 89 c3             	mov    %rax,%rbx
   13455:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13459:	48 89 c7             	mov    %rax,%rdi
   1345c:	e8 b7 e9 ff ff       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13461:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13465:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13469:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1346d:	48 89 d6             	mov    %rdx,%rsi
   13470:	48 89 c7             	mov    %rax,%rdi
   13473:	e8 a1 06 00 00       	call   13b19 <_ZSt3maxImERKT_S2_S2_>
   13478:	48 8b 00             	mov    (%rax),%rax
   1347b:	48 01 d8             	add    %rbx,%rax
   1347e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   13482:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13486:	48 89 c7             	mov    %rax,%rdi
   13489:	e8 8a e9 ff ff       	call   11e18 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1348e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13492:	72 12                	jb     134a6 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   13494:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13498:	48 89 c7             	mov    %rax,%rdi
   1349b:	e8 0a ff ff ff       	call   133aa <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   134a0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   134a4:	73 0e                	jae    134b4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   134a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   134aa:	48 89 c7             	mov    %rax,%rdi
   134ad:	e8 f8 fe ff ff       	call   133aa <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   134b2:	eb 04                	jmp    134b8 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   134b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   134b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   134bc:	c9                   	leave
   134bd:	c3                   	ret

00000000000134be <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   134be:	55                   	push   %rbp
   134bf:	48 89 e5             	mov    %rsp,%rbp
   134c2:	48 83 ec 10          	sub    $0x10,%rsp
   134c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   134ce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   134d3:	74 15                	je     134ea <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   134d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   134dd:	48 89 d6             	mov    %rdx,%rsi
   134e0:	48 89 c7             	mov    %rax,%rdi
   134e3:	e8 75 0e 00 00       	call   1435d <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   134e8:	eb 05                	jmp    134ef <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   134ea:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   134ef:	c9                   	leave
   134f0:	c3                   	ret

00000000000134f1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   134f1:	55                   	push   %rbp
   134f2:	48 89 e5             	mov    %rsp,%rbp
   134f5:	48 83 ec 20          	sub    $0x20,%rsp
   134f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13501:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13505:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   13509:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1350d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13511:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13519:	48 89 c7             	mov    %rax,%rdi
   1351c:	e8 66 0e 00 00       	call   14387 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   13521:	c9                   	leave
   13522:	c3                   	ret

0000000000013523 <_ZNSt6vectorI6ShaderSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   13523:	55                   	push   %rbp
   13524:	48 89 e5             	mov    %rsp,%rbp
   13527:	48 83 ec 20          	sub    $0x20,%rsp
   1352b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1352f:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   13536:	ff ff 07 
   13539:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1353d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13541:	48 89 c7             	mov    %rax,%rdi
   13544:	e8 a1 0e 00 00       	call   143ea <_ZNSt16allocator_traitsISaI6ShaderEE8max_sizeERKS1_>
   13549:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1354d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   13551:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13555:	48 89 d6             	mov    %rdx,%rsi
   13558:	48 89 c7             	mov    %rax,%rdi
   1355b:	e8 9d 1d ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
   13560:	48 8b 00             	mov    (%rax),%rax
      }
   13563:	c9                   	leave
   13564:	c3                   	ret
   13565:	90                   	nop

0000000000013566 <_ZNSaI6ShaderEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   13566:	55                   	push   %rbp
   13567:	48 89 e5             	mov    %rsp,%rbp
   1356a:	48 83 ec 10          	sub    $0x10,%rsp
   1356e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   13576:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1357a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1357e:	48 89 d6             	mov    %rdx,%rsi
   13581:	48 89 c7             	mov    %rax,%rdi
   13584:	e8 7b 0e 00 00       	call   14404 <_ZNSt15__new_allocatorI6ShaderEC1ERKS1_>
   13589:	90                   	nop
   1358a:	c9                   	leave
   1358b:	c3                   	ret

000000000001358c <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1358c:	55                   	push   %rbp
   1358d:	48 89 e5             	mov    %rsp,%rbp
   13590:	48 83 ec 10          	sub    $0x10,%rsp
   13594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13598:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1359c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135a4:	48 89 d6             	mov    %rdx,%rsi
   135a7:	48 89 c7             	mov    %rax,%rdi
   135aa:	e8 b7 ff ff ff       	call   13566 <_ZNSaI6ShaderEC1ERKS0_>
   135af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b3:	48 89 c7             	mov    %rax,%rdi
   135b6:	e8 59 0e 00 00       	call   14414 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   135bb:	90                   	nop
   135bc:	c9                   	leave
   135bd:	c3                   	ret

00000000000135be <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   135be:	55                   	push   %rbp
   135bf:	48 89 e5             	mov    %rsp,%rbp
   135c2:	48 83 ec 10          	sub    $0x10,%rsp
   135c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   135ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135d6:	48 89 d6             	mov    %rdx,%rsi
   135d9:	48 89 c7             	mov    %rax,%rdi
   135dc:	e8 61 0e 00 00       	call   14442 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm>
   135e1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   135e5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   135e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135ec:	48 8b 10             	mov    (%rax),%rdx
   135ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135f3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   135f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135fb:	48 8b 00             	mov    (%rax),%rax
   135fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13602:	48 c1 e2 04          	shl    $0x4,%rdx
   13606:	48 01 c2             	add    %rax,%rdx
   13609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1360d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   13611:	90                   	nop
   13612:	c9                   	leave
   13613:	c3                   	ret

0000000000013614 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   13614:	55                   	push   %rbp
   13615:	48 89 e5             	mov    %rsp,%rbp
   13618:	48 83 ec 20          	sub    $0x20,%rsp
   1361c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13620:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13624:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   13628:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1362d:	74 17                	je     13646 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1362f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13633:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13637:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1363b:	48 89 ce             	mov    %rcx,%rsi
   1363e:	48 89 c7             	mov    %rax,%rdi
   13641:	e8 2f 0e 00 00       	call   14475 <_ZNSt16allocator_traitsISaI6ShaderEE10deallocateERS1_PS0_m>
      }
   13646:	90                   	nop
   13647:	c9                   	leave
   13648:	c3                   	ret

0000000000013649 <_ZSt27__uninitialized_default_n_aIP6ShadermS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   13649:	55                   	push   %rbp
   1364a:	48 89 e5             	mov    %rsp,%rbp
   1364d:	48 83 ec 20          	sub    $0x20,%rsp
   13651:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13655:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13659:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1365d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13665:	48 89 d6             	mov    %rdx,%rsi
   13668:	48 89 c7             	mov    %rax,%rdi
   1366b:	e8 33 0e 00 00       	call   144a3 <_ZSt25__uninitialized_default_nIP6ShadermET_S2_T0_>
   13670:	c9                   	leave
   13671:	c3                   	ret

0000000000013672 <_ZSt8_DestroyIP6ShaderEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13672:	55                   	push   %rbp
   13673:	48 89 e5             	mov    %rsp,%rbp
   13676:	48 83 ec 10          	sub    $0x10,%rsp
   1367a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1367e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13682:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1368a:	48 89 d6             	mov    %rdx,%rsi
   1368d:	48 89 c7             	mov    %rax,%rdi
   13690:	e8 37 0e 00 00       	call   144cc <_ZNSt12_Destroy_auxILb1EE9__destroyIP6ShaderEEvT_S4_>
    }
   13695:	90                   	nop
   13696:	c9                   	leave
   13697:	c3                   	ret

0000000000013698 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   13698:	55                   	push   %rbp
   13699:	48 89 e5             	mov    %rsp,%rbp
   1369c:	48 83 ec 10          	sub    $0x10,%rsp
   136a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   136a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   136ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136b0:	48 89 d6             	mov    %rdx,%rsi
   136b3:	48 89 c7             	mov    %rax,%rdi
   136b6:	e8 21 0e 00 00       	call   144dc <_ZNSaI14VkDynamicStateEC1ERKS0_>
   136bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136bf:	48 89 c7             	mov    %rax,%rdi
   136c2:	e8 3b 0e 00 00       	call   14502 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   136c7:	90                   	nop
   136c8:	c9                   	leave
   136c9:	c3                   	ret

00000000000136ca <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   136ca:	55                   	push   %rbp
   136cb:	48 89 e5             	mov    %rsp,%rbp
   136ce:	48 83 ec 20          	sub    $0x20,%rsp
   136d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   136da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   136de:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   136e3:	74 17                	je     136fc <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   136e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   136ed:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   136f1:	48 89 ce             	mov    %rcx,%rsi
   136f4:	48 89 c7             	mov    %rax,%rdi
   136f7:	e8 34 0e 00 00       	call   14530 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>
      }
   136fc:	90                   	nop
   136fd:	c9                   	leave
   136fe:	c3                   	ret
   136ff:	90                   	nop

0000000000013700 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>:
   13700:	55                   	push   %rbp
   13701:	48 89 e5             	mov    %rsp,%rbp
   13704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1370c:	48 8b 40 08          	mov    0x8(%rax),%rax
   13710:	5d                   	pop    %rbp
   13711:	c3                   	ret

0000000000013712 <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   13712:	55                   	push   %rbp
   13713:	48 89 e5             	mov    %rsp,%rbp
   13716:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1371a:	90                   	nop
   1371b:	5d                   	pop    %rbp
   1371c:	c3                   	ret

000000000001371d <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1371d:	55                   	push   %rbp
   1371e:	48 89 e5             	mov    %rsp,%rbp
   13721:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13725:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   13729:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1372d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   13731:	48 c1 f8 02          	sar    $0x2,%rax
    }
   13735:	5d                   	pop    %rbp
   13736:	c3                   	ret

0000000000013737 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   13737:	55                   	push   %rbp
   13738:	48 89 e5             	mov    %rsp,%rbp
   1373b:	53                   	push   %rbx
   1373c:	48 83 ec 28          	sub    $0x28,%rsp
   13740:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13744:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   13748:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1374c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13750:	48 89 d6             	mov    %rdx,%rsi
   13753:	48 89 c7             	mov    %rax,%rdi
   13756:	e8 81 0d 00 00       	call   144dc <_ZNSaI14VkDynamicStateEC1ERKS0_>
   1375b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1375f:	48 89 c7             	mov    %rax,%rdi
   13762:	e8 f7 0d 00 00       	call   1455e <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>
   13767:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1376b:	0f 92 c3             	setb   %bl
   1376e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13772:	48 89 c7             	mov    %rax,%rdi
   13775:	e8 06 d6 ff ff       	call   10d80 <_ZNSaI14VkDynamicStateED1Ev>
   1377a:	84 db                	test   %bl,%bl
   1377c:	74 0f                	je     1378d <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   1377e:	48 8d 05 93 5f 00 00 	lea    0x5f93(%rip),%rax        # 19718 <_ZN6__pstl9execution2v1L5unseqE+0x3d9>
   13785:	48 89 c7             	mov    %rax,%rdi
   13788:	e8 e3 09 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   1378d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   13791:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13795:	c9                   	leave
   13796:	c3                   	ret
   13797:	90                   	nop

0000000000013798 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13798:	55                   	push   %rbp
   13799:	48 89 e5             	mov    %rsp,%rbp
   1379c:	48 83 ec 10          	sub    $0x10,%rsp
   137a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   137a8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   137ad:	74 15                	je     137c4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x2c>
   137af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   137b7:	48 89 d6             	mov    %rdx,%rsi
   137ba:	48 89 c7             	mov    %rax,%rdi
   137bd:	e8 de 0d 00 00       	call   145a0 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>
   137c2:	eb 05                	jmp    137c9 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x31>
   137c4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   137c9:	c9                   	leave
   137ca:	c3                   	ret

00000000000137cb <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   137cb:	55                   	push   %rbp
   137cc:	48 89 e5             	mov    %rsp,%rbp
   137cf:	48 83 ec 20          	sub    $0x20,%rsp
   137d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   137db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   137df:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   137e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   137e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   137eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137ef:	48 89 ce             	mov    %rcx,%rsi
   137f2:	48 89 c7             	mov    %rax,%rdi
   137f5:	e8 d0 0d 00 00       	call   145ca <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
    }
   137fa:	c9                   	leave
   137fb:	c3                   	ret

00000000000137fc <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   137fc:	55                   	push   %rbp
   137fd:	48 89 e5             	mov    %rsp,%rbp
   13800:	48 83 ec 10          	sub    $0x10,%rsp
   13804:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13808:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1380c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13814:	48 89 d6             	mov    %rdx,%rsi
   13817:	48 89 c7             	mov    %rax,%rdi
   1381a:	e8 e0 0d 00 00       	call   145ff <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>
    }
   1381f:	90                   	nop
   13820:	c9                   	leave
   13821:	c3                   	ret

0000000000013822 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13822:	55                   	push   %rbp
   13823:	48 89 e5             	mov    %rsp,%rbp
   13826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1382a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1382e:	5d                   	pop    %rbp
   1382f:	c3                   	ret

0000000000013830 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   13830:	55                   	push   %rbp
   13831:	48 89 e5             	mov    %rsp,%rbp
   13834:	48 83 ec 20          	sub    $0x20,%rsp
   13838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1383c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13840:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   13844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13848:	48 89 c7             	mov    %rax,%rdi
   1384b:	e8 d2 ff ff ff       	call   13822 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   13850:	48 89 c2             	mov    %rax,%rdx
   13853:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1385b:	48 89 ce             	mov    %rcx,%rsi
   1385e:	48 89 c7             	mov    %rax,%rdi
   13861:	e8 a8 0d 00 00       	call   1460e <_ZNSt15__new_allocatorIP12VkPipeline_TE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
   13866:	90                   	nop
   13867:	c9                   	leave
   13868:	c3                   	ret
   13869:	90                   	nop

000000000001386a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   1386a:	55                   	push   %rbp
   1386b:	48 89 e5             	mov    %rsp,%rbp
   1386e:	53                   	push   %rbx
   1386f:	48 83 ec 68          	sub    $0x68,%rsp
   13873:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   13877:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1387b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1387f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13883:	48 8d 15 54 5e 00 00 	lea    0x5e54(%rip),%rdx        # 196de <_ZN6__pstl9execution2v1L5unseqE+0x39f>
   1388a:	be 01 00 00 00       	mov    $0x1,%esi
   1388f:	48 89 c7             	mov    %rax,%rdi
   13892:	e8 b9 0d 00 00       	call   14650 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc>
   13897:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   1389b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1389f:	48 8b 00             	mov    (%rax),%rax
   138a2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   138a6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   138aa:	48 8b 40 08          	mov    0x8(%rax),%rax
   138ae:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   138b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   138b6:	48 89 c7             	mov    %rax,%rdi
   138b9:	e8 3e 31 ff ff       	call   69fc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
   138be:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   138c2:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   138c6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   138ca:	48 89 d6             	mov    %rdx,%rsi
   138cd:	48 89 c7             	mov    %rax,%rdi
   138d0:	e8 43 0e 00 00       	call   14718 <_ZN9__gnu_cxxmiIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   138d5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   138d9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   138dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   138e1:	48 89 d6             	mov    %rdx,%rsi
   138e4:	48 89 c7             	mov    %rax,%rdi
   138e7:	e8 6e 0e 00 00       	call   1475a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   138ec:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   138f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138f4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   138f8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   138fc:	48 89 c7             	mov    %rax,%rdi
   138ff:	e8 1e ff ff ff       	call   13822 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   13904:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   13907:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1390b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   13912:	00 
	  _Alloc_traits::construct(this->_M_impl,
   13913:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13917:	48 01 c1             	add    %rax,%rcx
   1391a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1391e:	48 89 ce             	mov    %rcx,%rsi
   13921:	48 89 c7             	mov    %rax,%rdi
   13924:	e8 07 ff ff ff       	call   13830 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   13929:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   13930:	00 
					 __new_start, _M_get_Tp_allocator());
   13931:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13935:	48 89 c7             	mov    %rax,%rdi
   13938:	e8 69 ed ff ff       	call   126a6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1393d:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   13940:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13944:	48 89 c7             	mov    %rax,%rdi
   13947:	e8 8a 31 ff ff       	call   6ad6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1394c:	48 8b 30             	mov    (%rax),%rsi
   1394f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13953:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13957:	48 89 d9             	mov    %rbx,%rcx
   1395a:	48 89 c7             	mov    %rax,%rdi
   1395d:	e8 2b 0e 00 00       	call   1478d <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   13962:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   13966:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   1396b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1396f:	48 89 c7             	mov    %rax,%rdi
   13972:	e8 2f ed ff ff       	call   126a6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13977:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1397a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1397e:	48 89 c7             	mov    %rax,%rdi
   13981:	e8 50 31 ff ff       	call   6ad6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   13986:	48 8b 00             	mov    (%rax),%rax
   13989:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1398d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   13991:	48 89 d9             	mov    %rbx,%rcx
   13994:	48 89 c7             	mov    %rax,%rdi
   13997:	e8 f1 0d 00 00       	call   1478d <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1399c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   139a0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   139a4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   139a8:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   139ac:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   139b0:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   139b4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   139b8:	48 89 ce             	mov    %rcx,%rsi
   139bb:	48 89 c7             	mov    %rax,%rdi
   139be:	e8 ad ec ff ff       	call   12670 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   139c3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   139c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   139cb:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   139ce:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   139d2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   139d6:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   139da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   139e5:	00 
   139e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139ea:	48 01 c2             	add    %rax,%rdx
   139ed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   139f1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   139f5:	90                   	nop
   139f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   139fa:	c9                   	leave
   139fb:	c3                   	ret

00000000000139fc <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   139fc:	55                   	push   %rbp
   139fd:	48 89 e5             	mov    %rsp,%rbp
   13a00:	48 83 ec 20          	sub    $0x20,%rsp
   13a04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   13a08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a0c:	48 89 c7             	mov    %rax,%rdi
   13a0f:	e8 0e 30 ff ff       	call   6a22 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
   13a14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13a18:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13a1c:	be 01 00 00 00       	mov    $0x1,%esi
   13a21:	48 89 c7             	mov    %rax,%rdi
   13a24:	e8 97 0d 00 00       	call   147c0 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEmiEl>
   13a29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13a2d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   13a31:	48 89 c7             	mov    %rax,%rdi
   13a34:	e8 6d 30 ff ff       	call   6aa6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
      }
   13a39:	c9                   	leave
   13a3a:	c3                   	ret
   13a3b:	90                   	nop

0000000000013a3c <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
   13a3c:	55                   	push   %rbp
   13a3d:	48 89 e5             	mov    %rsp,%rbp
   13a40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a44:	90                   	nop
   13a45:	5d                   	pop    %rbp
   13a46:	c3                   	ret

0000000000013a47 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   13a47:	55                   	push   %rbp
   13a48:	48 89 e5             	mov    %rsp,%rbp
   13a4b:	48 83 ec 20          	sub    $0x20,%rsp
   13a4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a57:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13a5b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13a5f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13a63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a67:	48 89 ce             	mov    %rcx,%rsi
   13a6a:	48 89 c7             	mov    %rax,%rdi
   13a6d:	e8 90 0d 00 00       	call   14802 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   13a72:	90                   	nop
   13a73:	c9                   	leave
   13a74:	c3                   	ret

0000000000013a75 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13a75:	55                   	push   %rbp
   13a76:	48 89 e5             	mov    %rsp,%rbp
   13a79:	48 83 ec 10          	sub    $0x10,%rsp
   13a7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13a85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a8d:	48 89 d6             	mov    %rdx,%rsi
   13a90:	48 89 c7             	mov    %rax,%rdi
   13a93:	e8 9b 0d 00 00       	call   14833 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   13a98:	90                   	nop
   13a99:	c9                   	leave
   13a9a:	c3                   	ret
   13a9b:	90                   	nop

0000000000013a9c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   13a9c:	55                   	push   %rbp
   13a9d:	48 89 e5             	mov    %rsp,%rbp
   13aa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13aa4:	90                   	nop
   13aa5:	5d                   	pop    %rbp
   13aa6:	c3                   	ret

0000000000013aa7 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   13aa7:	55                   	push   %rbp
   13aa8:	48 89 e5             	mov    %rsp,%rbp
   13aab:	48 83 ec 20          	sub    $0x20,%rsp
   13aaf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ab3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13ab7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13abb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13abf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ac7:	48 89 ce             	mov    %rcx,%rsi
   13aca:	48 89 c7             	mov    %rax,%rdi
   13acd:	e8 70 0d 00 00       	call   14842 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   13ad2:	90                   	nop
   13ad3:	c9                   	leave
   13ad4:	c3                   	ret

0000000000013ad5 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13ad5:	55                   	push   %rbp
   13ad6:	48 89 e5             	mov    %rsp,%rbp
   13ad9:	48 83 ec 10          	sub    $0x10,%rsp
   13add:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ae1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13ae5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aed:	48 89 d6             	mov    %rdx,%rsi
   13af0:	48 89 c7             	mov    %rax,%rdi
   13af3:	e8 7b 0d 00 00       	call   14873 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   13af8:	90                   	nop
   13af9:	c9                   	leave
   13afa:	c3                   	ret
   13afb:	90                   	nop

0000000000013afc <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   13afc:	55                   	push   %rbp
   13afd:	48 89 e5             	mov    %rsp,%rbp
   13b00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   13b08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b0c:	48 8b 10             	mov    (%rax),%rdx
   13b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b13:	48 89 10             	mov    %rdx,(%rax)
   13b16:	90                   	nop
   13b17:	5d                   	pop    %rbp
   13b18:	c3                   	ret

0000000000013b19 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   13b19:	55                   	push   %rbp
   13b1a:	48 89 e5             	mov    %rsp,%rbp
   13b1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   13b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b29:	48 8b 10             	mov    (%rax),%rdx
   13b2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b30:	48 8b 00             	mov    (%rax),%rax
   13b33:	48 39 c2             	cmp    %rax,%rdx
   13b36:	73 06                	jae    13b3e <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   13b38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b3c:	eb 04                	jmp    13b42 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   13b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   13b42:	5d                   	pop    %rbp
   13b43:	c3                   	ret

0000000000013b44 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   13b44:	55                   	push   %rbp
   13b45:	48 89 e5             	mov    %rsp,%rbp
   13b48:	48 83 ec 30          	sub    $0x30,%rsp
   13b4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13b50:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13b54:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   13b58:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   13b5c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   13b60:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13b64:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13b68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b6c:	48 89 ce             	mov    %rcx,%rsi
   13b6f:	48 89 c7             	mov    %rax,%rdi
   13b72:	e8 0b 0d 00 00       	call   14882 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   13b77:	c9                   	leave
   13b78:	c3                   	ret

0000000000013b79 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   13b79:	55                   	push   %rbp
   13b7a:	48 89 e5             	mov    %rsp,%rbp
   13b7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13b85:	90                   	nop
   13b86:	5d                   	pop    %rbp
   13b87:	c3                   	ret

0000000000013b88 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   13b88:	55                   	push   %rbp
   13b89:	48 89 e5             	mov    %rsp,%rbp
   13b8c:	48 83 ec 10          	sub    $0x10,%rsp
   13b90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   13b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b98:	48 89 c7             	mov    %rax,%rdi
   13b9b:	e8 10 0d 00 00       	call   148b0 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   13ba0:	48 89 c7             	mov    %rax,%rdi
   13ba3:	e8 5b 61 ff ff       	call   9d03 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   13ba8:	c9                   	leave
   13ba9:	c3                   	ret

0000000000013baa <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   13baa:	55                   	push   %rbp
   13bab:	48 89 e5             	mov    %rsp,%rbp
   13bae:	41 54                	push   %r12
   13bb0:	53                   	push   %rbx
   13bb1:	48 83 ec 20          	sub    $0x20,%rsp
   13bb5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13bb9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13bbd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13bc1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   13bc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13bc9:	48 89 c7             	mov    %rax,%rdi
   13bcc:	e8 ed 0c 00 00       	call   148be <_ZSt12__niter_baseIPPKcET_S3_>
   13bd1:	49 89 c4             	mov    %rax,%r12
   13bd4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13bd8:	48 89 c7             	mov    %rax,%rdi
   13bdb:	e8 de 0c 00 00       	call   148be <_ZSt12__niter_baseIPPKcET_S3_>
   13be0:	48 89 c3             	mov    %rax,%rbx
   13be3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13be7:	48 89 c7             	mov    %rax,%rdi
   13bea:	e8 cf 0c 00 00       	call   148be <_ZSt12__niter_baseIPPKcET_S3_>
   13bef:	48 89 c7             	mov    %rax,%rdi
   13bf2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13bf6:	48 89 c1             	mov    %rax,%rcx
   13bf9:	4c 89 e2             	mov    %r12,%rdx
   13bfc:	48 89 de             	mov    %rbx,%rsi
   13bff:	e8 c8 0c 00 00       	call   148cc <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   13c04:	48 83 c4 20          	add    $0x20,%rsp
   13c08:	5b                   	pop    %rbx
   13c09:	41 5c                	pop    %r12
   13c0b:	5d                   	pop    %rbp
   13c0c:	c3                   	ret
   13c0d:	90                   	nop

0000000000013c0e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   13c0e:	55                   	push   %rbp
   13c0f:	48 89 e5             	mov    %rsp,%rbp
   13c12:	48 83 ec 10          	sub    $0x10,%rsp
   13c16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   13c1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c22:	48 89 c7             	mov    %rax,%rdi
   13c25:	e8 34 dc ff ff       	call   1185e <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13c2a:	48 89 c1             	mov    %rax,%rcx
   13c2d:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   13c31:	48 8b 01             	mov    (%rcx),%rax
   13c34:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13c38:	48 89 06             	mov    %rax,(%rsi)
   13c3b:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   13c3f:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   13c43:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   13c47:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   13c4b:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   13c4f:	90                   	nop
   13c50:	c9                   	leave
   13c51:	c3                   	ret

0000000000013c52 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   13c52:	55                   	push   %rbp
   13c53:	48 89 e5             	mov    %rsp,%rbp
   13c56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   13c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c5e:	5d                   	pop    %rbp
   13c5f:	c3                   	ret

0000000000013c60 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13c60:	55                   	push   %rbp
   13c61:	48 89 e5             	mov    %rsp,%rbp
   13c64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c6c:	5d                   	pop    %rbp
   13c6d:	c3                   	ret

0000000000013c6e <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   13c6e:	55                   	push   %rbp
   13c6f:	48 89 e5             	mov    %rsp,%rbp
   13c72:	53                   	push   %rbx
   13c73:	48 83 ec 18          	sub    $0x18,%rsp
   13c77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   13c7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c83:	48 89 c6             	mov    %rax,%rsi
   13c86:	bf 1c 00 00 00       	mov    $0x1c,%edi
   13c8b:	e8 a0 11 ff ff       	call   4e30 <_ZnwmPv>
   13c90:	48 89 c3             	mov    %rax,%rbx
   13c93:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c97:	48 89 c7             	mov    %rax,%rdi
   13c9a:	e8 c1 ff ff ff       	call   13c60 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   13c9f:	48 89 c1             	mov    %rax,%rcx
   13ca2:	48 8b 01             	mov    (%rcx),%rax
   13ca5:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13ca9:	48 89 03             	mov    %rax,(%rbx)
   13cac:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   13cb0:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   13cb4:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   13cb8:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   13cbc:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   13cc0:	90                   	nop
   13cc1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13cc5:	c9                   	leave
   13cc6:	c3                   	ret
   13cc7:	90                   	nop

0000000000013cc8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   13cc8:	55                   	push   %rbp
   13cc9:	48 89 e5             	mov    %rsp,%rbp
   13ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   13cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cd4:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   13cd8:	90                   	nop
   13cd9:	5d                   	pop    %rbp
   13cda:	c3                   	ret
   13cdb:	90                   	nop

0000000000013cdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13cdc:	55                   	push   %rbp
   13cdd:	48 89 e5             	mov    %rsp,%rbp
   13ce0:	53                   	push   %rbx
   13ce1:	48 83 ec 18          	sub    $0x18,%rsp
   13ce5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ce9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   13ced:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13cf1:	48 89 c7             	mov    %rax,%rdi
   13cf4:	e8 73 ef ff ff       	call   12c6c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   13cf9:	48 89 c3             	mov    %rax,%rbx
   13cfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d00:	48 89 c7             	mov    %rax,%rdi
   13d03:	e8 28 0c 00 00       	call   14930 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13d08:	48 89 de             	mov    %rbx,%rsi
   13d0b:	48 89 c7             	mov    %rax,%rdi
   13d0e:	e8 2b 0c 00 00       	call   1493e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   13d13:	90                   	nop
   13d14:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d18:	c9                   	leave
   13d19:	c3                   	ret

0000000000013d1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13d1a:	55                   	push   %rbp
   13d1b:	48 89 e5             	mov    %rsp,%rbp
   13d1e:	48 83 ec 10          	sub    $0x10,%rsp
   13d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   13d2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d2e:	48 89 c7             	mov    %rax,%rdi
   13d31:	e8 fa 0b 00 00       	call   14930 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13d36:	48 89 c1             	mov    %rax,%rcx
   13d39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13d3d:	ba 01 00 00 00       	mov    $0x1,%edx
   13d42:	48 89 c6             	mov    %rax,%rsi
   13d45:	48 89 cf             	mov    %rcx,%rdi
   13d48:	e8 17 0c 00 00       	call   14964 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   13d4d:	90                   	nop
   13d4e:	c9                   	leave
   13d4f:	c3                   	ret

0000000000013d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   13d50:	55                   	push   %rbp
   13d51:	48 89 e5             	mov    %rsp,%rbp
   13d54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   13d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d5c:	48 83 c0 08          	add    $0x8,%rax
   13d60:	5d                   	pop    %rbp
   13d61:	c3                   	ret

0000000000013d62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13d62:	55                   	push   %rbp
   13d63:	48 89 e5             	mov    %rsp,%rbp
   13d66:	53                   	push   %rbx
   13d67:	48 83 ec 38          	sub    $0x38,%rsp
   13d6b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13d6f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13d73:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13d77:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   13d7b:	eb 56                	jmp    13dd3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   13d7d:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13d81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d85:	48 89 c7             	mov    %rax,%rdi
   13d88:	e8 e7 03 00 00       	call   14174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13d8d:	48 89 c1             	mov    %rax,%rcx
   13d90:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13d94:	48 89 c2             	mov    %rax,%rdx
   13d97:	48 89 ce             	mov    %rcx,%rsi
   13d9a:	48 89 df             	mov    %rbx,%rdi
   13d9d:	e8 6c dd ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13da2:	83 f0 01             	xor    $0x1,%eax
   13da5:	84 c0                	test   %al,%al
   13da7:	74 1a                	je     13dc3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   13da9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13dad:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   13db1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13db5:	48 89 c7             	mov    %rax,%rdi
   13db8:	e8 ce ed ff ff       	call   12b8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13dbd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13dc1:	eb 10                	jmp    13dd3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   13dc3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13dc7:	48 89 c7             	mov    %rax,%rdi
   13dca:	e8 aa ed ff ff       	call   12b79 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13dcf:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   13dd3:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13dd8:	75 a3                	jne    13d7d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   13dda:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13dde:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13de2:	48 89 d6             	mov    %rdx,%rsi
   13de5:	48 89 c7             	mov    %rax,%rdi
   13de8:	e8 a5 f4 ff ff       	call   13292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13ded:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   13df1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13df5:	c9                   	leave
   13df6:	c3                   	ret
   13df7:	90                   	nop

0000000000013df8 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   13df8:	55                   	push   %rbp
   13df9:	48 89 e5             	mov    %rsp,%rbp
   13dfc:	48 83 ec 10          	sub    $0x10,%rsp
   13e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   13e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e08:	48 89 c7             	mov    %rax,%rdi
   13e0b:	e8 82 0b 00 00       	call   14992 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   13e10:	c9                   	leave
   13e11:	c3                   	ret

0000000000013e12 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   13e12:	55                   	push   %rbp
   13e13:	48 89 e5             	mov    %rsp,%rbp
   13e16:	53                   	push   %rbx
   13e17:	48 83 ec 18          	sub    $0x18,%rsp
   13e1b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13e1f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   13e23:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13e27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13e2b:	48 89 c7             	mov    %rax,%rdi
   13e2e:	e8 7f ee ff ff       	call   12cb2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   13e33:	48 89 c6             	mov    %rax,%rsi
   13e36:	48 89 df             	mov    %rbx,%rdi
   13e39:	e8 62 0b 00 00       	call   149a0 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   13e3e:	90                   	nop
   13e3f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13e43:	c9                   	leave
   13e44:	c3                   	ret
   13e45:	90                   	nop

0000000000013e46 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   13e46:	55                   	push   %rbp
   13e47:	48 89 e5             	mov    %rsp,%rbp
   13e4a:	41 54                	push   %r12
   13e4c:	53                   	push   %rbx
   13e4d:	48 83 ec 30          	sub    $0x30,%rsp
   13e51:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13e55:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13e59:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13e5d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   13e61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e65:	48 89 c7             	mov    %rax,%rdi
   13e68:	e8 59 0b 00 00       	call   149c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   13e6d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   13e71:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13e75:	48 89 c7             	mov    %rax,%rdi
   13e78:	e8 92 ee ff ff       	call   12d0f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   13e7d:	49 89 c4             	mov    %rax,%r12
   13e80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13e84:	48 89 c7             	mov    %rax,%rdi
   13e87:	e8 75 ee ff ff       	call   12d01 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   13e8c:	48 89 c3             	mov    %rax,%rbx
   13e8f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13e93:	48 89 c7             	mov    %rax,%rdi
   13e96:	e8 58 ee ff ff       	call   12cf3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   13e9b:	48 89 c2             	mov    %rax,%rdx
   13e9e:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   13ea2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ea6:	4d 89 e0             	mov    %r12,%r8
   13ea9:	48 89 d9             	mov    %rbx,%rcx
   13eac:	48 89 c7             	mov    %rax,%rdi
   13eaf:	e8 3a 0b 00 00       	call   149ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   13eb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   13eb8:	48 83 c4 30          	add    $0x30,%rsp
   13ebc:	5b                   	pop    %rbx
   13ebd:	41 5c                	pop    %r12
   13ebf:	5d                   	pop    %rbp
   13ec0:	c3                   	ret
   13ec1:	90                   	nop

0000000000013ec2 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   13ec2:	55                   	push   %rbp
   13ec3:	48 89 e5             	mov    %rsp,%rbp
   13ec6:	48 83 ec 20          	sub    $0x20,%rsp
   13eca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   13ece:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ed2:	48 8b 10             	mov    (%rax),%rdx
   13ed5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13ed9:	48 89 d6             	mov    %rdx,%rsi
   13edc:	48 89 c7             	mov    %rax,%rdi
   13edf:	e8 ae f3 ff ff       	call   13292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ee8:	c9                   	leave
   13ee9:	c3                   	ret

0000000000013eea <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13eea:	55                   	push   %rbp
   13eeb:	48 89 e5             	mov    %rsp,%rbp
   13eee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   13ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ef6:	48 8b 40 28          	mov    0x28(%rax),%rax
   13efa:	5d                   	pop    %rbp
   13efb:	c3                   	ret

0000000000013efc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   13efc:	55                   	push   %rbp
   13efd:	48 89 e5             	mov    %rsp,%rbp
   13f00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   13f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f08:	48 83 c0 20          	add    $0x20,%rax
   13f0c:	5d                   	pop    %rbp
   13f0d:	c3                   	ret

0000000000013f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   13f0e:	55                   	push   %rbp
   13f0f:	48 89 e5             	mov    %rsp,%rbp
   13f12:	48 83 ec 10          	sub    $0x10,%rsp
   13f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   13f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f1e:	48 89 c7             	mov    %rax,%rdi
   13f21:	e8 4e 02 00 00       	call   14174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13f26:	c9                   	leave
   13f27:	c3                   	ret

0000000000013f28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   13f28:	55                   	push   %rbp
   13f29:	48 89 e5             	mov    %rsp,%rbp
   13f2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13f34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   13f38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13f3c:	48 8b 10             	mov    (%rax),%rdx
   13f3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f43:	48 89 10             	mov    %rdx,(%rax)
   13f46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f4a:	48 8b 10             	mov    (%rax),%rdx
   13f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f51:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13f55:	90                   	nop
   13f56:	5d                   	pop    %rbp
   13f57:	c3                   	ret

0000000000013f58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13f58:	55                   	push   %rbp
   13f59:	48 89 e5             	mov    %rsp,%rbp
   13f5c:	53                   	push   %rbx
   13f5d:	48 83 ec 78          	sub    $0x78,%rsp
   13f61:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   13f65:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   13f69:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13f6d:	48 89 c7             	mov    %rax,%rdi
   13f70:	e8 b7 da ff ff       	call   11a2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   13f75:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   13f79:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13f7d:	48 89 c7             	mov    %rax,%rdi
   13f80:	e8 cb fd ff ff       	call   13d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   13f85:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   13f89:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   13f8d:	eb 51                	jmp    13fe0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   13f8f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f93:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   13f97:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13f9b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f9f:	48 89 c7             	mov    %rax,%rdi
   13fa2:	e8 cd 01 00 00       	call   14174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13fa7:	48 89 c2             	mov    %rax,%rdx
   13faa:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13fae:	48 89 c6             	mov    %rax,%rsi
   13fb1:	48 89 df             	mov    %rbx,%rdi
   13fb4:	e8 55 db ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13fb9:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   13fbc:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   13fc0:	74 0e                	je     13fd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   13fc2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13fc6:	48 89 c7             	mov    %rax,%rdi
   13fc9:	e8 bd eb ff ff       	call   12b8b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13fce:	eb 0c                	jmp    13fdc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   13fd0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13fd4:	48 89 c7             	mov    %rax,%rdi
   13fd7:	e8 9d eb ff ff       	call   12b79 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13fdc:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   13fe0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13fe4:	48 85 c0             	test   %rax,%rax
   13fe7:	75 a6                	jne    13f8f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   13fe9:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   13fed:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13ff1:	48 89 d6             	mov    %rdx,%rsi
   13ff4:	48 89 c7             	mov    %rax,%rdi
   13ff7:	e8 96 f2 ff ff       	call   13292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   13ffc:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   14000:	74 54                	je     14056 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   14002:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14006:	48 89 c7             	mov    %rax,%rdi
   14009:	e8 b2 0a 00 00       	call   14ac0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   1400e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14012:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   14016:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1401a:	48 89 d6             	mov    %rdx,%rsi
   1401d:	48 89 c7             	mov    %rax,%rdi
   14020:	e8 8d da ff ff       	call   11ab2 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   14025:	84 c0                	test   %al,%al
   14027:	74 21                	je     1404a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   14029:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1402d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   14031:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   14035:	48 89 ce             	mov    %rcx,%rsi
   14038:	48 89 c7             	mov    %rax,%rdi
   1403b:	e8 aa 0a 00 00       	call   14aea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   14040:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14044:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14048:	eb 7d                	jmp    140c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   1404a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1404e:	48 89 c7             	mov    %rax,%rdi
   14051:	e8 ce 00 00 00       	call   14124 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   14056:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1405a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1405e:	48 89 c7             	mov    %rax,%rdi
   14061:	e8 a8 fe ff ff       	call   13f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14066:	48 89 c1             	mov    %rax,%rcx
   14069:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1406d:	48 89 c2             	mov    %rax,%rdx
   14070:	48 89 ce             	mov    %rcx,%rsi
   14073:	48 89 df             	mov    %rbx,%rdi
   14076:	e8 93 da ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1407b:	84 c0                	test   %al,%al
   1407d:	74 21                	je     140a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   1407f:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   14083:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   14087:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1408b:	48 89 ce             	mov    %rcx,%rsi
   1408e:	48 89 c7             	mov    %rax,%rdi
   14091:	e8 54 0a 00 00       	call   14aea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   14096:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1409a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1409e:	eb 27                	jmp    140c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   140a0:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   140a7:	00 
   140a8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   140ac:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   140b0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   140b4:	48 89 ce             	mov    %rcx,%rsi
   140b7:	48 89 c7             	mov    %rax,%rdi
   140ba:	e8 69 fe ff ff       	call   13f28 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   140bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   140c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   140c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   140cb:	c9                   	leave
   140cc:	c3                   	ret
   140cd:	90                   	nop

00000000000140ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   140ce:	55                   	push   %rbp
   140cf:	48 89 e5             	mov    %rsp,%rbp
   140d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   140d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140da:	48 83 c0 18          	add    $0x18,%rax
   140de:	5d                   	pop    %rbp
   140df:	c3                   	ret

00000000000140e0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   140e0:	55                   	push   %rbp
   140e1:	48 89 e5             	mov    %rsp,%rbp
   140e4:	48 83 ec 20          	sub    $0x20,%rsp
   140e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   140f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   140f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   140f8:	48 89 c7             	mov    %rax,%rdi
   140fb:	e8 2e 0a 00 00       	call   14b2e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14100:	48 8b 10             	mov    (%rax),%rdx
   14103:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14107:	48 89 10             	mov    %rdx,(%rax)
   1410a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1410e:	48 89 c7             	mov    %rax,%rdi
   14111:	e8 18 0a 00 00       	call   14b2e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14116:	48 8b 10             	mov    (%rax),%rdx
   14119:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1411d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14121:	90                   	nop
   14122:	c9                   	leave
   14123:	c3                   	ret

0000000000014124 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   14124:	55                   	push   %rbp
   14125:	48 89 e5             	mov    %rsp,%rbp
   14128:	48 83 ec 10          	sub    $0x10,%rsp
   1412c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   14130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14134:	48 8b 00             	mov    (%rax),%rax
   14137:	48 89 c7             	mov    %rax,%rdi
   1413a:	e8 81 02 ff ff       	call   43c0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   1413f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14143:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   14146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1414a:	c9                   	leave
   1414b:	c3                   	ret

000000000001414c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1414c:	55                   	push   %rbp
   1414d:	48 89 e5             	mov    %rsp,%rbp
   14150:	48 83 ec 10          	sub    $0x10,%rsp
   14154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   14158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1415c:	48 8b 00             	mov    (%rax),%rax
   1415f:	48 89 c7             	mov    %rax,%rdi
   14162:	e8 99 00 ff ff       	call   4200 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   14167:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1416b:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   1416e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14172:	c9                   	leave
   14173:	c3                   	ret

0000000000014174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   14174:	55                   	push   %rbp
   14175:	48 89 e5             	mov    %rsp,%rbp
   14178:	48 83 ec 20          	sub    $0x20,%rsp
   1417c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   14180:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14184:	48 89 c7             	mov    %rax,%rdi
   14187:	e8 b0 09 00 00       	call   14b3c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1418c:	48 89 c2             	mov    %rax,%rdx
   1418f:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   14193:	48 89 d6             	mov    %rdx,%rsi
   14196:	48 89 c7             	mov    %rax,%rdi
   14199:	e8 bc 09 00 00       	call   14b5a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   1419e:	c9                   	leave
   1419f:	c3                   	ret

00000000000141a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   141a0:	55                   	push   %rbp
   141a1:	48 89 e5             	mov    %rsp,%rbp
   141a4:	41 54                	push   %r12
   141a6:	53                   	push   %rbx
   141a7:	48 83 ec 30          	sub    $0x30,%rsp
   141ab:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   141af:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   141b3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   141b7:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   141bb:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   141c0:	75 43                	jne    14205 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   141c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141c6:	48 89 c7             	mov    %rax,%rdi
   141c9:	e8 82 fb ff ff       	call   13d50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   141ce:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   141d2:	74 31                	je     14205 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   141d4:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   141d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   141dc:	48 89 c7             	mov    %rax,%rdi
   141df:	e8 2a fd ff ff       	call   13f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   141e4:	49 89 c4             	mov    %rax,%r12
   141e7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   141eb:	48 89 c7             	mov    %rax,%rdi
   141ee:	e8 81 ff ff ff       	call   14174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   141f3:	4c 89 e2             	mov    %r12,%rdx
   141f6:	48 89 c6             	mov    %rax,%rsi
   141f9:	48 89 df             	mov    %rbx,%rdi
   141fc:	e8 0d d9 ff ff       	call   11b0e <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14201:	84 c0                	test   %al,%al
   14203:	74 07                	je     1420c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   14205:	b8 01 00 00 00       	mov    $0x1,%eax
   1420a:	eb 05                	jmp    14211 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   1420c:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   14211:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   14214:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14218:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   1421c:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   14220:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14224:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   14228:	89 c7                	mov    %eax,%edi
   1422a:	e8 21 fe fe ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   1422f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14233:	48 8b 40 28          	mov    0x28(%rax),%rax
   14237:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1423b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1423f:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   14243:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   14247:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1424b:	48 89 d6             	mov    %rdx,%rsi
   1424e:	48 89 c7             	mov    %rax,%rdi
   14251:	e8 3c f0 ff ff       	call   13292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14256:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   1425a:	48 83 c4 30          	add    $0x30,%rsp
   1425e:	5b                   	pop    %rbx
   1425f:	41 5c                	pop    %r12
   14261:	5d                   	pop    %rbp
   14262:	c3                   	ret
   14263:	90                   	nop

0000000000014264 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14264:	55                   	push   %rbp
   14265:	48 89 e5             	mov    %rsp,%rbp
   14268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1426c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14270:	5d                   	pop    %rbp
   14271:	c3                   	ret

0000000000014272 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14272:	55                   	push   %rbp
   14273:	48 89 e5             	mov    %rsp,%rbp
   14276:	48 83 ec 10          	sub    $0x10,%rsp
   1427a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1427e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   14282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14286:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1428a:	48 89 d6             	mov    %rdx,%rsi
   1428d:	48 89 c7             	mov    %rax,%rdi
   14290:	e8 03 63 ff ff       	call   a598 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   14295:	90                   	nop
   14296:	c9                   	leave
   14297:	c3                   	ret

0000000000014298 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   14298:	55                   	push   %rbp
   14299:	48 89 e5             	mov    %rsp,%rbp
   1429c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   142a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   142a8:	48 8b 10             	mov    (%rax),%rdx
   142ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142af:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   142b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   142b6:	48 8b 50 08          	mov    0x8(%rax),%rdx
   142ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142be:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   142c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   142c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   142ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   142d2:	90                   	nop
   142d3:	5d                   	pop    %rbp
   142d4:	c3                   	ret

00000000000142d5 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   142d5:	55                   	push   %rbp
   142d6:	48 89 e5             	mov    %rsp,%rbp
   142d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   142dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142e1:	5d                   	pop    %rbp
   142e2:	c3                   	ret

00000000000142e3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   142e3:	55                   	push   %rbp
   142e4:	48 89 e5             	mov    %rsp,%rbp
   142e7:	48 83 ec 20          	sub    $0x20,%rsp
   142eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   142ef:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   142f6:	ff ff 0f 
   142f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   142fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14301:	48 89 c7             	mov    %rax,%rdi
   14304:	e8 63 08 00 00       	call   14b6c <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   14309:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1430d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14311:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14315:	48 89 d6             	mov    %rdx,%rsi
   14318:	48 89 c7             	mov    %rax,%rdi
   1431b:	e8 dd 0f ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
   14320:	48 8b 00             	mov    (%rax),%rax
      }
   14323:	c9                   	leave
   14324:	c3                   	ret
   14325:	90                   	nop

0000000000014326 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14326:	55                   	push   %rbp
   14327:	48 89 e5             	mov    %rsp,%rbp
   1432a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1432e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14332:	5d                   	pop    %rbp
   14333:	c3                   	ret

0000000000014334 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14334:	55                   	push   %rbp
   14335:	48 89 e5             	mov    %rsp,%rbp
   14338:	48 83 ec 20          	sub    $0x20,%rsp
   1433c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14340:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14344:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14348:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1434c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14350:	48 89 d6             	mov    %rdx,%rsi
   14353:	48 89 c7             	mov    %rax,%rdi
   14356:	e8 2b 08 00 00       	call   14b86 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   1435b:	c9                   	leave
   1435c:	c3                   	ret

000000000001435d <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1435d:	55                   	push   %rbp
   1435e:	48 89 e5             	mov    %rsp,%rbp
   14361:	48 83 ec 10          	sub    $0x10,%rsp
   14365:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14369:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1436d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14375:	ba 00 00 00 00       	mov    $0x0,%edx
   1437a:	48 89 ce             	mov    %rcx,%rsi
   1437d:	48 89 c7             	mov    %rax,%rdi
   14380:	e8 5f 08 00 00       	call   14be4 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   14385:	c9                   	leave
   14386:	c3                   	ret

0000000000014387 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14387:	55                   	push   %rbp
   14388:	48 89 e5             	mov    %rsp,%rbp
   1438b:	41 54                	push   %r12
   1438d:	53                   	push   %rbx
   1438e:	48 83 ec 20          	sub    $0x20,%rsp
   14392:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14396:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1439a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1439e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   143a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143a6:	48 89 c7             	mov    %rax,%rdi
   143a9:	e8 97 08 00 00       	call   14c45 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   143ae:	49 89 c4             	mov    %rax,%r12
   143b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   143b5:	48 89 c7             	mov    %rax,%rdi
   143b8:	e8 88 08 00 00       	call   14c45 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   143bd:	48 89 c3             	mov    %rax,%rbx
   143c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143c4:	48 89 c7             	mov    %rax,%rdi
   143c7:	e8 79 08 00 00       	call   14c45 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   143cc:	48 89 c7             	mov    %rax,%rdi
   143cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   143d3:	48 89 c1             	mov    %rax,%rcx
   143d6:	4c 89 e2             	mov    %r12,%rdx
   143d9:	48 89 de             	mov    %rbx,%rsi
   143dc:	e8 72 08 00 00       	call   14c53 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   143e1:	48 83 c4 20          	add    $0x20,%rsp
   143e5:	5b                   	pop    %rbx
   143e6:	41 5c                	pop    %r12
   143e8:	5d                   	pop    %rbp
   143e9:	c3                   	ret

00000000000143ea <_ZNSt16allocator_traitsISaI6ShaderEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   143ea:	55                   	push   %rbp
   143eb:	48 89 e5             	mov    %rsp,%rbp
   143ee:	48 83 ec 10          	sub    $0x10,%rsp
   143f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   143f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143fa:	48 89 c7             	mov    %rax,%rdi
   143fd:	e8 b4 08 00 00       	call   14cb6 <_ZNKSt15__new_allocatorI6ShaderE8max_sizeEv>
      }
   14402:	c9                   	leave
   14403:	c3                   	ret

0000000000014404 <_ZNSt15__new_allocatorI6ShaderEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   14404:	55                   	push   %rbp
   14405:	48 89 e5             	mov    %rsp,%rbp
   14408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1440c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14410:	90                   	nop
   14411:	5d                   	pop    %rbp
   14412:	c3                   	ret
   14413:	90                   	nop

0000000000014414 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14414:	55                   	push   %rbp
   14415:	48 89 e5             	mov    %rsp,%rbp
   14418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1441c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14420:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1442b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14432:	00 
   14433:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14437:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1443e:	00 
	{ }
   1443f:	90                   	nop
   14440:	5d                   	pop    %rbp
   14441:	c3                   	ret

0000000000014442 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   14442:	55                   	push   %rbp
   14443:	48 89 e5             	mov    %rsp,%rbp
   14446:	48 83 ec 10          	sub    $0x10,%rsp
   1444a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1444e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   14452:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14457:	74 15                	je     1446e <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm+0x2c>
   14459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1445d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14461:	48 89 d6             	mov    %rdx,%rsi
   14464:	48 89 c7             	mov    %rax,%rdi
   14467:	e8 64 08 00 00       	call   14cd0 <_ZNSt16allocator_traitsISaI6ShaderEE8allocateERS1_m>
   1446c:	eb 05                	jmp    14473 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm+0x31>
   1446e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   14473:	c9                   	leave
   14474:	c3                   	ret

0000000000014475 <_ZNSt16allocator_traitsISaI6ShaderEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14475:	55                   	push   %rbp
   14476:	48 89 e5             	mov    %rsp,%rbp
   14479:	48 83 ec 20          	sub    $0x20,%rsp
   1447d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14481:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14485:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   14489:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1448d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14491:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14495:	48 89 ce             	mov    %rcx,%rsi
   14498:	48 89 c7             	mov    %rax,%rdi
   1449b:	e8 5a 08 00 00       	call   14cfa <_ZNSt15__new_allocatorI6ShaderE10deallocateEPS0_m>
   144a0:	90                   	nop
   144a1:	c9                   	leave
   144a2:	c3                   	ret

00000000000144a3 <_ZSt25__uninitialized_default_nIP6ShadermET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   144a3:	55                   	push   %rbp
   144a4:	48 89 e5             	mov    %rsp,%rbp
   144a7:	48 83 ec 20          	sub    $0x20,%rsp
   144ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   144af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   144b3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   144b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   144bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144bf:	48 89 d6             	mov    %rdx,%rsi
   144c2:	48 89 c7             	mov    %rax,%rdi
   144c5:	e8 60 08 00 00       	call   14d2a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6ShadermEET_S4_T0_>
    }
   144ca:	c9                   	leave
   144cb:	c3                   	ret

00000000000144cc <_ZNSt12_Destroy_auxILb1EE9__destroyIP6ShaderEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   144cc:	55                   	push   %rbp
   144cd:	48 89 e5             	mov    %rsp,%rbp
   144d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   144d8:	90                   	nop
   144d9:	5d                   	pop    %rbp
   144da:	c3                   	ret
   144db:	90                   	nop

00000000000144dc <_ZNSaI14VkDynamicStateEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   144dc:	55                   	push   %rbp
   144dd:	48 89 e5             	mov    %rsp,%rbp
   144e0:	48 83 ec 10          	sub    $0x10,%rsp
   144e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   144ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   144f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144f4:	48 89 d6             	mov    %rdx,%rsi
   144f7:	48 89 c7             	mov    %rax,%rdi
   144fa:	e8 89 08 00 00       	call   14d88 <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>
   144ff:	90                   	nop
   14500:	c9                   	leave
   14501:	c3                   	ret

0000000000014502 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14502:	55                   	push   %rbp
   14503:	48 89 e5             	mov    %rsp,%rbp
   14506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1450a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1450e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14519:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14520:	00 
   14521:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14525:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1452c:	00 
	{ }
   1452d:	90                   	nop
   1452e:	5d                   	pop    %rbp
   1452f:	c3                   	ret

0000000000014530 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14530:	55                   	push   %rbp
   14531:	48 89 e5             	mov    %rsp,%rbp
   14534:	48 83 ec 20          	sub    $0x20,%rsp
   14538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1453c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14540:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   14544:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14548:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1454c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14550:	48 89 ce             	mov    %rcx,%rsi
   14553:	48 89 c7             	mov    %rax,%rdi
   14556:	e8 3d 08 00 00       	call   14d98 <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>
   1455b:	90                   	nop
   1455c:	c9                   	leave
   1455d:	c3                   	ret

000000000001455e <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1455e:	55                   	push   %rbp
   1455f:	48 89 e5             	mov    %rsp,%rbp
   14562:	48 83 ec 20          	sub    $0x20,%rsp
   14566:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1456a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14571:	ff ff 1f 
   14574:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14578:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1457c:	48 89 c7             	mov    %rax,%rdi
   1457f:	e8 45 08 00 00       	call   14dc9 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>
   14584:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14588:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1458c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14590:	48 89 d6             	mov    %rdx,%rsi
   14593:	48 89 c7             	mov    %rax,%rdi
   14596:	e8 62 0d ff ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
   1459b:	48 8b 00             	mov    (%rax),%rax
      }
   1459e:	c9                   	leave
   1459f:	c3                   	ret

00000000000145a0 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   145a0:	55                   	push   %rbp
   145a1:	48 89 e5             	mov    %rsp,%rbp
   145a4:	48 83 ec 10          	sub    $0x10,%rsp
   145a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   145b0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   145b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145b8:	ba 00 00 00 00       	mov    $0x0,%edx
   145bd:	48 89 ce             	mov    %rcx,%rsi
   145c0:	48 89 c7             	mov    %rax,%rdi
   145c3:	e8 1c 08 00 00       	call   14de4 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>
   145c8:	c9                   	leave
   145c9:	c3                   	ret

00000000000145ca <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   145ca:	55                   	push   %rbp
   145cb:	48 89 e5             	mov    %rsp,%rbp
   145ce:	48 83 ec 30          	sub    $0x30,%rsp
   145d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   145d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   145da:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   145de:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   145e2:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   145e6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   145ea:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   145ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   145f2:	48 89 ce             	mov    %rcx,%rsi
   145f5:	48 89 c7             	mov    %rax,%rdi
   145f8:	e8 48 08 00 00       	call   14e45 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>
    }
   145fd:	c9                   	leave
   145fe:	c3                   	ret

00000000000145ff <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>:
   145ff:	55                   	push   %rbp
   14600:	48 89 e5             	mov    %rsp,%rbp
   14603:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14607:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1460b:	90                   	nop
   1460c:	5d                   	pop    %rbp
   1460d:	c3                   	ret

000000000001460e <_ZNSt15__new_allocatorIP12VkPipeline_TE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1460e:	55                   	push   %rbp
   1460f:	48 89 e5             	mov    %rsp,%rbp
   14612:	53                   	push   %rbx
   14613:	48 83 ec 28          	sub    $0x28,%rsp
   14617:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1461b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1461f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   14623:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14627:	48 89 c6             	mov    %rax,%rsi
   1462a:	bf 08 00 00 00       	mov    $0x8,%edi
   1462f:	e8 fc 07 ff ff       	call   4e30 <_ZnwmPv>
   14634:	48 89 c3             	mov    %rax,%rbx
   14637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1463b:	48 89 c7             	mov    %rax,%rdi
   1463e:	e8 df f1 ff ff       	call   13822 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   14643:	48 8b 00             	mov    (%rax),%rax
   14646:	48 89 03             	mov    %rax,(%rbx)
   14649:	90                   	nop
   1464a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1464e:	c9                   	leave
   1464f:	c3                   	ret

0000000000014650 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   14650:	55                   	push   %rbp
   14651:	48 89 e5             	mov    %rsp,%rbp
   14654:	53                   	push   %rbx
   14655:	48 83 ec 38          	sub    $0x38,%rsp
   14659:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1465d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14661:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   14665:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14669:	48 89 c7             	mov    %rax,%rdi
   1466c:	e8 01 08 00 00       	call   14e72 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>
   14671:	48 89 c3             	mov    %rax,%rbx
   14674:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14678:	48 89 c7             	mov    %rax,%rdi
   1467b:	e8 14 08 00 00       	call   14e94 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   14680:	48 29 c3             	sub    %rax,%rbx
   14683:	48 89 da             	mov    %rbx,%rdx
   14686:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1468a:	48 39 c2             	cmp    %rax,%rdx
   1468d:	0f 92 c0             	setb   %al
   14690:	84 c0                	test   %al,%al
   14692:	74 0c                	je     146a0 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   14694:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14698:	48 89 c7             	mov    %rax,%rdi
   1469b:	e8 d0 fa fe ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   146a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146a4:	48 89 c7             	mov    %rax,%rdi
   146a7:	e8 e8 07 00 00       	call   14e94 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   146ac:	48 89 c3             	mov    %rax,%rbx
   146af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146b3:	48 89 c7             	mov    %rax,%rdi
   146b6:	e8 d9 07 00 00       	call   14e94 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   146bb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   146bf:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   146c3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   146c7:	48 89 d6             	mov    %rdx,%rsi
   146ca:	48 89 c7             	mov    %rax,%rdi
   146cd:	e8 47 f4 ff ff       	call   13b19 <_ZSt3maxImERKT_S2_S2_>
   146d2:	48 8b 00             	mov    (%rax),%rax
   146d5:	48 01 d8             	add    %rbx,%rax
   146d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   146dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146e0:	48 89 c7             	mov    %rax,%rdi
   146e3:	e8 ac 07 00 00       	call   14e94 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   146e8:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   146ec:	72 12                	jb     14700 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   146ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146f2:	48 89 c7             	mov    %rax,%rdi
   146f5:	e8 78 07 00 00       	call   14e72 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>
   146fa:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   146fe:	73 0e                	jae    1470e <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   14700:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14704:	48 89 c7             	mov    %rax,%rdi
   14707:	e8 66 07 00 00       	call   14e72 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>
   1470c:	eb 04                	jmp    14712 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1470e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   14712:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14716:	c9                   	leave
   14717:	c3                   	ret

0000000000014718 <_ZN9__gnu_cxxmiIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   14718:	55                   	push   %rbp
   14719:	48 89 e5             	mov    %rsp,%rbp
   1471c:	53                   	push   %rbx
   1471d:	48 83 ec 18          	sub    $0x18,%rsp
   14721:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14725:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
   14729:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1472d:	48 89 c7             	mov    %rax,%rdi
   14730:	e8 a1 23 ff ff       	call   6ad6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14735:	48 8b 18             	mov    (%rax),%rbx
   14738:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1473c:	48 89 c7             	mov    %rax,%rdi
   1473f:	e8 92 23 ff ff       	call   6ad6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   14744:	48 8b 00             	mov    (%rax),%rax
   14747:	48 89 da             	mov    %rbx,%rdx
   1474a:	48 29 c2             	sub    %rax,%rdx
   1474d:	48 89 d0             	mov    %rdx,%rax
   14750:	48 c1 f8 03          	sar    $0x3,%rax
   14754:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14758:	c9                   	leave
   14759:	c3                   	ret

000000000001475a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1475a:	55                   	push   %rbp
   1475b:	48 89 e5             	mov    %rsp,%rbp
   1475e:	48 83 ec 10          	sub    $0x10,%rsp
   14762:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14766:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1476a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1476f:	74 15                	je     14786 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   14771:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14775:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14779:	48 89 d6             	mov    %rdx,%rsi
   1477c:	48 89 c7             	mov    %rax,%rdi
   1477f:	e8 33 07 00 00       	call   14eb7 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   14784:	eb 05                	jmp    1478b <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   14786:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1478b:	c9                   	leave
   1478c:	c3                   	ret

000000000001478d <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1478d:	55                   	push   %rbp
   1478e:	48 89 e5             	mov    %rsp,%rbp
   14791:	48 83 ec 20          	sub    $0x20,%rsp
   14795:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14799:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1479d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   147a1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   147a5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   147a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   147ad:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   147b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147b5:	48 89 c7             	mov    %rax,%rdi
   147b8:	e8 24 07 00 00       	call   14ee1 <_ZSt12__relocate_aIPP12VkPipeline_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   147bd:	c9                   	leave
   147be:	c3                   	ret
   147bf:	90                   	nop

00000000000147c0 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   147c0:	55                   	push   %rbp
   147c1:	48 89 e5             	mov    %rsp,%rbp
   147c4:	48 83 ec 20          	sub    $0x20,%rsp
   147c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   147d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147d4:	48 8b 00             	mov    (%rax),%rax
   147d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   147db:	48 c1 e2 03          	shl    $0x3,%rdx
   147df:	48 f7 da             	neg    %rdx
   147e2:	48 01 d0             	add    %rdx,%rax
   147e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   147e9:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   147ed:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   147f1:	48 89 d6             	mov    %rdx,%rsi
   147f4:	48 89 c7             	mov    %rax,%rdi
   147f7:	e8 bc 22 ff ff       	call   6ab8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   147fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14800:	c9                   	leave
   14801:	c3                   	ret

0000000000014802 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14802:	55                   	push   %rbp
   14803:	48 89 e5             	mov    %rsp,%rbp
   14806:	48 83 ec 20          	sub    $0x20,%rsp
   1480a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1480e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14812:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14816:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1481a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14821:	00 
   14822:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14826:	48 89 d6             	mov    %rdx,%rsi
   14829:	48 89 c7             	mov    %rax,%rdi
   1482c:	e8 4f fb fe ff       	call   4380 <_ZdlPvm@plt>
      }
   14831:	c9                   	leave
   14832:	c3                   	ret

0000000000014833 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   14833:	55                   	push   %rbp
   14834:	48 89 e5             	mov    %rsp,%rbp
   14837:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1483b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1483f:	90                   	nop
   14840:	5d                   	pop    %rbp
   14841:	c3                   	ret

0000000000014842 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14842:	55                   	push   %rbp
   14843:	48 89 e5             	mov    %rsp,%rbp
   14846:	48 83 ec 20          	sub    $0x20,%rsp
   1484a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1484e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14852:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14856:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1485a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14861:	00 
   14862:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14866:	48 89 d6             	mov    %rdx,%rsi
   14869:	48 89 c7             	mov    %rax,%rdi
   1486c:	e8 0f fb fe ff       	call   4380 <_ZdlPvm@plt>
      }
   14871:	c9                   	leave
   14872:	c3                   	ret

0000000000014873 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   14873:	55                   	push   %rbp
   14874:	48 89 e5             	mov    %rsp,%rbp
   14877:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1487b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1487f:	90                   	nop
   14880:	5d                   	pop    %rbp
   14881:	c3                   	ret

0000000000014882 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   14882:	55                   	push   %rbp
   14883:	48 89 e5             	mov    %rsp,%rbp
   14886:	48 83 ec 20          	sub    $0x20,%rsp
   1488a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1488e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14892:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   14896:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1489a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1489e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148a2:	48 89 ce             	mov    %rcx,%rsi
   148a5:	48 89 c7             	mov    %rax,%rdi
   148a8:	e8 97 06 00 00       	call   14f44 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   148ad:	c9                   	leave
   148ae:	c3                   	ret
   148af:	90                   	nop

00000000000148b0 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   148b0:	55                   	push   %rbp
   148b1:	48 89 e5             	mov    %rsp,%rbp
   148b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   148b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148bc:	5d                   	pop    %rbp
   148bd:	c3                   	ret

00000000000148be <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   148be:	55                   	push   %rbp
   148bf:	48 89 e5             	mov    %rsp,%rbp
   148c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   148c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148ca:	5d                   	pop    %rbp
   148cb:	c3                   	ret

00000000000148cc <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   148cc:	55                   	push   %rbp
   148cd:	48 89 e5             	mov    %rsp,%rbp
   148d0:	48 83 ec 30          	sub    $0x30,%rsp
   148d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   148d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   148dc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   148e0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   148e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   148e8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   148ec:	48 c1 f8 03          	sar    $0x3,%rax
   148f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   148f4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   148f9:	7e 1f                	jle    1491a <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   148fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148ff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14906:	00 
   14907:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1490b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1490f:	48 89 ce             	mov    %rcx,%rsi
   14912:	48 89 c7             	mov    %rax,%rdi
   14915:	e8 26 fd fe ff       	call   4640 <memmove@plt>
      return __result + __count;
   1491a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1491e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14925:	00 
   14926:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1492a:	48 01 d0             	add    %rdx,%rax
    }
   1492d:	c9                   	leave
   1492e:	c3                   	ret
   1492f:	90                   	nop

0000000000014930 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   14930:	55                   	push   %rbp
   14931:	48 89 e5             	mov    %rsp,%rbp
   14934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1493c:	5d                   	pop    %rbp
   1493d:	c3                   	ret

000000000001493e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   1493e:	55                   	push   %rbp
   1493f:	48 89 e5             	mov    %rsp,%rbp
   14942:	48 83 ec 10          	sub    $0x10,%rsp
   14946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1494a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   1494e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14956:	48 89 d6             	mov    %rdx,%rsi
   14959:	48 89 c7             	mov    %rax,%rdi
   1495c:	e8 4b 06 00 00       	call   14fac <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   14961:	90                   	nop
   14962:	c9                   	leave
   14963:	c3                   	ret

0000000000014964 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14964:	55                   	push   %rbp
   14965:	48 89 e5             	mov    %rsp,%rbp
   14968:	48 83 ec 20          	sub    $0x20,%rsp
   1496c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14970:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14974:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   14978:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1497c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14984:	48 89 ce             	mov    %rcx,%rsi
   14987:	48 89 c7             	mov    %rax,%rdi
   1498a:	e8 3d 06 00 00       	call   14fcc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   1498f:	90                   	nop
   14990:	c9                   	leave
   14991:	c3                   	ret

0000000000014992 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   14992:	55                   	push   %rbp
   14993:	48 89 e5             	mov    %rsp,%rbp
   14996:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   1499a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1499e:	5d                   	pop    %rbp
   1499f:	c3                   	ret

00000000000149a0 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   149a0:	55                   	push   %rbp
   149a1:	48 89 e5             	mov    %rsp,%rbp
   149a4:	48 83 ec 10          	sub    $0x10,%rsp
   149a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   149b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149b4:	48 89 c7             	mov    %rax,%rdi
   149b7:	e8 f6 e2 ff ff       	call   12cb2 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   149bc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   149c0:	48 89 02             	mov    %rax,(%rdx)
   149c3:	90                   	nop
   149c4:	c9                   	leave
   149c5:	c3                   	ret

00000000000149c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   149c6:	55                   	push   %rbp
   149c7:	48 89 e5             	mov    %rsp,%rbp
   149ca:	48 83 ec 10          	sub    $0x10,%rsp
   149ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   149d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149d6:	48 89 c7             	mov    %rax,%rdi
   149d9:	e8 52 ff ff ff       	call   14930 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   149de:	be 01 00 00 00       	mov    $0x1,%esi
   149e3:	48 89 c7             	mov    %rax,%rdi
   149e6:	e8 1b 06 00 00       	call   15006 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   149eb:	c9                   	leave
   149ec:	c3                   	ret
   149ed:	90                   	nop

00000000000149ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   149ee:	55                   	push   %rbp
   149ef:	48 89 e5             	mov    %rsp,%rbp
   149f2:	41 56                	push   %r14
   149f4:	41 55                	push   %r13
   149f6:	41 54                	push   %r12
   149f8:	53                   	push   %rbx
   149f9:	48 83 ec 30          	sub    $0x30,%rsp
   149fd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14a01:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14a05:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14a09:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   14a0d:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   14a11:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a15:	48 89 c6             	mov    %rax,%rsi
   14a18:	bf 48 00 00 00       	mov    $0x48,%edi
   14a1d:	e8 0e 04 ff ff       	call   4e30 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   14a22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14a26:	48 89 c7             	mov    %rax,%rdi
   14a29:	e8 e1 e2 ff ff       	call   12d0f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14a2e:	49 89 c6             	mov    %rax,%r14
   14a31:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14a35:	48 89 c7             	mov    %rax,%rdi
   14a38:	e8 c4 e2 ff ff       	call   12d01 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14a3d:	49 89 c5             	mov    %rax,%r13
   14a40:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a44:	48 89 c7             	mov    %rax,%rdi
   14a47:	e8 a7 e2 ff ff       	call   12cf3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   14a4c:	49 89 c4             	mov    %rax,%r12
   14a4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a53:	48 89 c7             	mov    %rax,%rdi
   14a56:	e8 11 e2 ff ff       	call   12c6c <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   14a5b:	48 89 c3             	mov    %rax,%rbx
   14a5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a62:	48 89 c7             	mov    %rax,%rdi
   14a65:	e8 c6 fe ff ff       	call   14930 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14a6a:	4d 89 f0             	mov    %r14,%r8
   14a6d:	4c 89 e9             	mov    %r13,%rcx
   14a70:	4c 89 e2             	mov    %r12,%rdx
   14a73:	48 89 de             	mov    %rbx,%rsi
   14a76:	48 89 c7             	mov    %rax,%rdi
   14a79:	e8 b2 05 00 00       	call   15030 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   14a7e:	eb 33                	jmp    14ab3 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   14a80:	48 89 c7             	mov    %rax,%rdi
   14a83:	e8 98 f6 fe ff       	call   4120 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   14a88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14a8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a90:	48 89 d6             	mov    %rdx,%rsi
   14a93:	48 89 c7             	mov    %rax,%rdi
   14a96:	e8 7f f2 ff ff       	call   13d1a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   14a9b:	e8 10 fb fe ff       	call   45b0 <__cxa_rethrow@plt>
	  __catch(...)
   14aa0:	48 89 c3             	mov    %rax,%rbx
   14aa3:	e8 a8 fb fe ff       	call   4650 <__cxa_end_catch@plt>
   14aa8:	48 89 d8             	mov    %rbx,%rax
   14aab:	48 89 c7             	mov    %rax,%rdi
   14aae:	e8 0d fc fe ff       	call   46c0 <_Unwind_Resume@plt>
	}
   14ab3:	48 83 c4 30          	add    $0x30,%rsp
   14ab7:	5b                   	pop    %rbx
   14ab8:	41 5c                	pop    %r12
   14aba:	41 5d                	pop    %r13
   14abc:	41 5e                	pop    %r14
   14abe:	5d                   	pop    %rbp
   14abf:	c3                   	ret

0000000000014ac0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14ac0:	55                   	push   %rbp
   14ac1:	48 89 e5             	mov    %rsp,%rbp
   14ac4:	48 83 ec 20          	sub    $0x20,%rsp
   14ac8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   14acc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ad0:	48 8b 50 18          	mov    0x18(%rax),%rdx
   14ad4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14ad8:	48 89 d6             	mov    %rdx,%rsi
   14adb:	48 89 c7             	mov    %rax,%rdi
   14ade:	e8 af e7 ff ff       	call   13292 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14ae3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ae7:	c9                   	leave
   14ae8:	c3                   	ret
   14ae9:	90                   	nop

0000000000014aea <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   14aea:	55                   	push   %rbp
   14aeb:	48 89 e5             	mov    %rsp,%rbp
   14aee:	48 83 ec 20          	sub    $0x20,%rsp
   14af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14af6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14afa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14afe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14b02:	48 89 c7             	mov    %rax,%rdi
   14b05:	e8 92 05 00 00       	call   1509c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   14b0a:	48 8b 10             	mov    (%rax),%rdx
   14b0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b11:	48 89 10             	mov    %rdx,(%rax)
   14b14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b18:	48 89 c7             	mov    %rax,%rdi
   14b1b:	e8 0e 00 00 00       	call   14b2e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14b20:	48 8b 10             	mov    (%rax),%rdx
   14b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b27:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14b2b:	90                   	nop
   14b2c:	c9                   	leave
   14b2d:	c3                   	ret

0000000000014b2e <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14b2e:	55                   	push   %rbp
   14b2f:	48 89 e5             	mov    %rsp,%rbp
   14b32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b3a:	5d                   	pop    %rbp
   14b3b:	c3                   	ret

0000000000014b3c <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   14b3c:	55                   	push   %rbp
   14b3d:	48 89 e5             	mov    %rsp,%rbp
   14b40:	48 83 ec 10          	sub    $0x10,%rsp
   14b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   14b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b4c:	48 83 c0 20          	add    $0x20,%rax
   14b50:	48 89 c7             	mov    %rax,%rdi
   14b53:	e8 52 05 00 00       	call   150aa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   14b58:	c9                   	leave
   14b59:	c3                   	ret

0000000000014b5a <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   14b5a:	55                   	push   %rbp
   14b5b:	48 89 e5             	mov    %rsp,%rbp
   14b5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14b62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   14b66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14b6a:	5d                   	pop    %rbp
   14b6b:	c3                   	ret

0000000000014b6c <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14b6c:	55                   	push   %rbp
   14b6d:	48 89 e5             	mov    %rsp,%rbp
   14b70:	48 83 ec 10          	sub    $0x10,%rsp
   14b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b7c:	48 89 c7             	mov    %rax,%rdi
   14b7f:	e8 40 05 00 00       	call   150c4 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   14b84:	c9                   	leave
   14b85:	c3                   	ret

0000000000014b86 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   14b86:	55                   	push   %rbp
   14b87:	48 89 e5             	mov    %rsp,%rbp
   14b8a:	48 83 ec 20          	sub    $0x20,%rsp
   14b8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b92:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   14b96:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14b9b:	74 40                	je     14bdd <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   14b9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ba1:	48 89 c7             	mov    %rax,%rdi
   14ba4:	e8 35 05 00 00       	call   150de <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   14ba9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   14bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bb1:	48 89 c7             	mov    %rax,%rdi
   14bb4:	e8 33 05 00 00       	call   150ec <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   14bb9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14bbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14bc2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14bc6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14bca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bce:	48 89 ce             	mov    %rcx,%rsi
   14bd1:	48 89 c7             	mov    %rax,%rdi
   14bd4:	e8 3a 05 00 00       	call   15113 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   14bd9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   14bdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14be1:	c9                   	leave
   14be2:	c3                   	ret
   14be3:	90                   	nop

0000000000014be4 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14be4:	55                   	push   %rbp
   14be5:	48 89 e5             	mov    %rsp,%rbp
   14be8:	48 83 ec 20          	sub    $0x20,%rsp
   14bec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14bf4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14bf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bfc:	48 89 c7             	mov    %rax,%rdi
   14bff:	e8 54 05 00 00       	call   15158 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   14c04:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14c08:	0f 92 c0             	setb   %al
   14c0b:	0f b6 c0             	movzbl %al,%eax
   14c0e:	48 85 c0             	test   %rax,%rax
   14c11:	0f 95 c0             	setne  %al
   14c14:	84 c0                	test   %al,%al
   14c16:	74 1a                	je     14c32 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   14c18:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14c1f:	ff ff 1f 
   14c22:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14c26:	73 05                	jae    14c2d <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   14c28:	e8 33 f6 fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   14c2d:	e8 ae f4 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14c32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14c36:	48 c1 e0 03          	shl    $0x3,%rax
   14c3a:	48 89 c7             	mov    %rax,%rdi
   14c3d:	e8 2e f7 fe ff       	call   4370 <_Znwm@plt>
   14c42:	90                   	nop
      }
   14c43:	c9                   	leave
   14c44:	c3                   	ret

0000000000014c45 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   14c45:	55                   	push   %rbp
   14c46:	48 89 e5             	mov    %rsp,%rbp
   14c49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14c4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c51:	5d                   	pop    %rbp
   14c52:	c3                   	ret

0000000000014c53 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   14c53:	55                   	push   %rbp
   14c54:	48 89 e5             	mov    %rsp,%rbp
   14c57:	48 83 ec 30          	sub    $0x30,%rsp
   14c5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c5f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14c63:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14c67:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   14c6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c6f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   14c73:	48 c1 f8 03          	sar    $0x3,%rax
   14c77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   14c7b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14c80:	7e 1f                	jle    14ca1 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   14c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c86:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14c8d:	00 
   14c8e:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   14c92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14c96:	48 89 ce             	mov    %rcx,%rsi
   14c99:	48 89 c7             	mov    %rax,%rdi
   14c9c:	e8 9f f9 fe ff       	call   4640 <memmove@plt>
      return __result + __count;
   14ca1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ca5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14cac:	00 
   14cad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14cb1:	48 01 d0             	add    %rdx,%rax
    }
   14cb4:	c9                   	leave
   14cb5:	c3                   	ret

0000000000014cb6 <_ZNKSt15__new_allocatorI6ShaderE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14cb6:	55                   	push   %rbp
   14cb7:	48 89 e5             	mov    %rsp,%rbp
   14cba:	48 83 ec 10          	sub    $0x10,%rsp
   14cbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14cc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cc6:	48 89 c7             	mov    %rax,%rdi
   14cc9:	e8 9e 04 00 00       	call   1516c <_ZNKSt15__new_allocatorI6ShaderE11_M_max_sizeEv>
   14cce:	c9                   	leave
   14ccf:	c3                   	ret

0000000000014cd0 <_ZNSt16allocator_traitsISaI6ShaderEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   14cd0:	55                   	push   %rbp
   14cd1:	48 89 e5             	mov    %rsp,%rbp
   14cd4:	48 83 ec 10          	sub    $0x10,%rsp
   14cd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14ce0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ce8:	ba 00 00 00 00       	mov    $0x0,%edx
   14ced:	48 89 ce             	mov    %rcx,%rsi
   14cf0:	48 89 c7             	mov    %rax,%rdi
   14cf3:	e8 88 04 00 00       	call   15180 <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv>
   14cf8:	c9                   	leave
   14cf9:	c3                   	ret

0000000000014cfa <_ZNSt15__new_allocatorI6ShaderE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14cfa:	55                   	push   %rbp
   14cfb:	48 89 e5             	mov    %rsp,%rbp
   14cfe:	48 83 ec 20          	sub    $0x20,%rsp
   14d02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14d0a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14d0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d12:	48 c1 e0 04          	shl    $0x4,%rax
   14d16:	48 89 c2             	mov    %rax,%rdx
   14d19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14d1d:	48 89 d6             	mov    %rdx,%rsi
   14d20:	48 89 c7             	mov    %rax,%rdi
   14d23:	e8 58 f6 fe ff       	call   4380 <_ZdlPvm@plt>
      }
   14d28:	c9                   	leave
   14d29:	c3                   	ret

0000000000014d2a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6ShadermEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   14d2a:	55                   	push   %rbp
   14d2b:	48 89 e5             	mov    %rsp,%rbp
   14d2e:	48 83 ec 20          	sub    $0x20,%rsp
   14d32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14d36:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   14d3a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14d3f:	74 40                	je     14d81 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6ShadermEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   14d41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d45:	48 89 c7             	mov    %rax,%rdi
   14d48:	e8 94 04 00 00       	call   151e1 <_ZSt11__addressofI6ShaderEPT_RS1_>
   14d4d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   14d51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d55:	48 89 c7             	mov    %rax,%rdi
   14d58:	e8 92 04 00 00       	call   151ef <_ZSt10_ConstructI6ShaderJEEvPT_DpOT0_>
	      ++__first;
   14d5d:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14d62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14d66:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14d6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d72:	48 89 ce             	mov    %rcx,%rsi
   14d75:	48 89 c7             	mov    %rax,%rdi
   14d78:	e8 a1 04 00 00       	call   1521e <_ZSt6fill_nIP6ShadermS0_ET_S2_T0_RKT1_>
   14d7d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   14d81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14d85:	c9                   	leave
   14d86:	c3                   	ret
   14d87:	90                   	nop

0000000000014d88 <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   14d88:	55                   	push   %rbp
   14d89:	48 89 e5             	mov    %rsp,%rbp
   14d8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14d94:	90                   	nop
   14d95:	5d                   	pop    %rbp
   14d96:	c3                   	ret
   14d97:	90                   	nop

0000000000014d98 <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14d98:	55                   	push   %rbp
   14d99:	48 89 e5             	mov    %rsp,%rbp
   14d9c:	48 83 ec 20          	sub    $0x20,%rsp
   14da0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14da4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14da8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14dac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14db0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14db7:	00 
   14db8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14dbc:	48 89 d6             	mov    %rdx,%rsi
   14dbf:	48 89 c7             	mov    %rax,%rdi
   14dc2:	e8 b9 f5 fe ff       	call   4380 <_ZdlPvm@plt>
      }
   14dc7:	c9                   	leave
   14dc8:	c3                   	ret

0000000000014dc9 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14dc9:	55                   	push   %rbp
   14dca:	48 89 e5             	mov    %rsp,%rbp
   14dcd:	48 83 ec 10          	sub    $0x10,%rsp
   14dd1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dd9:	48 89 c7             	mov    %rax,%rdi
   14ddc:	e8 81 04 00 00       	call   15262 <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>
      }
   14de1:	c9                   	leave
   14de2:	c3                   	ret
   14de3:	90                   	nop

0000000000014de4 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14de4:	55                   	push   %rbp
   14de5:	48 89 e5             	mov    %rsp,%rbp
   14de8:	48 83 ec 20          	sub    $0x20,%rsp
   14dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14df0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14df4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14df8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14dfc:	48 89 c7             	mov    %rax,%rdi
   14dff:	e8 78 04 00 00       	call   1527c <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   14e04:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14e08:	0f 92 c0             	setb   %al
   14e0b:	0f b6 c0             	movzbl %al,%eax
   14e0e:	48 85 c0             	test   %rax,%rax
   14e11:	0f 95 c0             	setne  %al
   14e14:	84 c0                	test   %al,%al
   14e16:	74 1a                	je     14e32 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   14e18:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   14e1f:	ff ff 3f 
   14e22:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14e26:	73 05                	jae    14e2d <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   14e28:	e8 33 f4 fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   14e2d:	e8 ae f2 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14e32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e36:	48 c1 e0 02          	shl    $0x2,%rax
   14e3a:	48 89 c7             	mov    %rax,%rdi
   14e3d:	e8 2e f5 fe ff       	call   4370 <_Znwm@plt>
   14e42:	90                   	nop
      }
   14e43:	c9                   	leave
   14e44:	c3                   	ret

0000000000014e45 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   14e45:	55                   	push   %rbp
   14e46:	48 89 e5             	mov    %rsp,%rbp
   14e49:	48 83 ec 20          	sub    $0x20,%rsp
   14e4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e51:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14e55:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   14e59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14e5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14e61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e65:	48 89 ce             	mov    %rcx,%rsi
   14e68:	48 89 c7             	mov    %rax,%rdi
   14e6b:	e8 20 04 00 00       	call   15290 <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
   14e70:	c9                   	leave
   14e71:	c3                   	ret

0000000000014e72 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   14e72:	55                   	push   %rbp
   14e73:	48 89 e5             	mov    %rsp,%rbp
   14e76:	48 83 ec 10          	sub    $0x10,%rsp
   14e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e82:	48 89 c7             	mov    %rax,%rdi
   14e85:	e8 94 04 00 00       	call   1531e <_ZNKSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14e8a:	48 89 c7             	mov    %rax,%rdi
   14e8d:	e8 49 04 00 00       	call   152db <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   14e92:	c9                   	leave
   14e93:	c3                   	ret

0000000000014e94 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14e94:	55                   	push   %rbp
   14e95:	48 89 e5             	mov    %rsp,%rbp
   14e98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ea0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ea8:	48 8b 00             	mov    (%rax),%rax
   14eab:	48 29 c2             	sub    %rax,%rdx
   14eae:	48 89 d0             	mov    %rdx,%rax
   14eb1:	48 c1 f8 03          	sar    $0x3,%rax
   14eb5:	5d                   	pop    %rbp
   14eb6:	c3                   	ret

0000000000014eb7 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14eb7:	55                   	push   %rbp
   14eb8:	48 89 e5             	mov    %rsp,%rbp
   14ebb:	48 83 ec 10          	sub    $0x10,%rsp
   14ebf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ec3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14ec7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14ecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ecf:	ba 00 00 00 00       	mov    $0x0,%edx
   14ed4:	48 89 ce             	mov    %rcx,%rsi
   14ed7:	48 89 c7             	mov    %rax,%rdi
   14eda:	e8 4d 04 00 00       	call   1532c <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   14edf:	c9                   	leave
   14ee0:	c3                   	ret

0000000000014ee1 <_ZSt12__relocate_aIPP12VkPipeline_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14ee1:	55                   	push   %rbp
   14ee2:	48 89 e5             	mov    %rsp,%rbp
   14ee5:	41 54                	push   %r12
   14ee7:	53                   	push   %rbx
   14ee8:	48 83 ec 20          	sub    $0x20,%rsp
   14eec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ef0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14ef4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14ef8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14efc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f00:	48 89 c7             	mov    %rax,%rdi
   14f03:	e8 85 04 00 00       	call   1538d <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>
   14f08:	49 89 c4             	mov    %rax,%r12
   14f0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f0f:	48 89 c7             	mov    %rax,%rdi
   14f12:	e8 76 04 00 00       	call   1538d <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>
   14f17:	48 89 c3             	mov    %rax,%rbx
   14f1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f1e:	48 89 c7             	mov    %rax,%rdi
   14f21:	e8 67 04 00 00       	call   1538d <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>
   14f26:	48 89 c7             	mov    %rax,%rdi
   14f29:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14f2d:	48 89 c1             	mov    %rax,%rcx
   14f30:	4c 89 e2             	mov    %r12,%rdx
   14f33:	48 89 de             	mov    %rbx,%rsi
   14f36:	e8 60 04 00 00       	call   1539b <_ZSt14__relocate_a_1IP12VkPipeline_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14f3b:	48 83 c4 20          	add    $0x20,%rsp
   14f3f:	5b                   	pop    %rbx
   14f40:	41 5c                	pop    %r12
   14f42:	5d                   	pop    %rbp
   14f43:	c3                   	ret

0000000000014f44 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   14f44:	55                   	push   %rbp
   14f45:	48 89 e5             	mov    %rsp,%rbp
   14f48:	53                   	push   %rbx
   14f49:	48 83 ec 28          	sub    $0x28,%rsp
   14f4d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14f51:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14f55:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   14f59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f5d:	48 89 c7             	mov    %rax,%rdi
   14f60:	e8 99 04 00 00       	call   153fe <_ZSt12__miter_baseIPKPKcET_S4_>
   14f65:	48 89 c3             	mov    %rax,%rbx
   14f68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f6c:	48 89 c7             	mov    %rax,%rdi
   14f6f:	e8 8a 04 00 00       	call   153fe <_ZSt12__miter_baseIPKPKcET_S4_>
   14f74:	48 89 c1             	mov    %rax,%rcx
   14f77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f7b:	48 89 c2             	mov    %rax,%rdx
   14f7e:	48 89 de             	mov    %rbx,%rsi
   14f81:	48 89 cf             	mov    %rcx,%rdi
   14f84:	e8 83 04 00 00       	call   1540c <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   14f89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14f8d:	c9                   	leave
   14f8e:	c3                   	ret
   14f8f:	90                   	nop

0000000000014f90 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   14f90:	55                   	push   %rbp
   14f91:	48 89 e5             	mov    %rsp,%rbp
   14f94:	48 83 ec 10          	sub    $0x10,%rsp
   14f98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fa0:	48 89 c7             	mov    %rax,%rdi
   14fa3:	e8 28 f2 fe ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14fa8:	90                   	nop
   14fa9:	c9                   	leave
   14faa:	c3                   	ret
   14fab:	90                   	nop

0000000000014fac <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   14fac:	55                   	push   %rbp
   14fad:	48 89 e5             	mov    %rsp,%rbp
   14fb0:	48 83 ec 10          	sub    $0x10,%rsp
   14fb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   14fbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14fc0:	48 89 c7             	mov    %rax,%rdi
   14fc3:	e8 c8 ff ff ff       	call   14f90 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   14fc8:	90                   	nop
   14fc9:	c9                   	leave
   14fca:	c3                   	ret
   14fcb:	90                   	nop

0000000000014fcc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14fcc:	55                   	push   %rbp
   14fcd:	48 89 e5             	mov    %rsp,%rbp
   14fd0:	48 83 ec 20          	sub    $0x20,%rsp
   14fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14fdc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14fe0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14fe4:	48 89 d0             	mov    %rdx,%rax
   14fe7:	48 c1 e0 03          	shl    $0x3,%rax
   14feb:	48 01 d0             	add    %rdx,%rax
   14fee:	48 c1 e0 03          	shl    $0x3,%rax
   14ff2:	48 89 c2             	mov    %rax,%rdx
   14ff5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14ff9:	48 89 d6             	mov    %rdx,%rsi
   14ffc:	48 89 c7             	mov    %rax,%rdi
   14fff:	e8 7c f3 fe ff       	call   4380 <_ZdlPvm@plt>
      }
   15004:	c9                   	leave
   15005:	c3                   	ret

0000000000015006 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   15006:	55                   	push   %rbp
   15007:	48 89 e5             	mov    %rsp,%rbp
   1500a:	48 83 ec 10          	sub    $0x10,%rsp
   1500e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15012:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15016:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1501a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1501e:	ba 00 00 00 00       	mov    $0x0,%edx
   15023:	48 89 ce             	mov    %rcx,%rsi
   15026:	48 89 c7             	mov    %rax,%rdi
   15029:	e8 48 04 00 00       	call   15476 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   1502e:	c9                   	leave
   1502f:	c3                   	ret

0000000000015030 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   15030:	55                   	push   %rbp
   15031:	48 89 e5             	mov    %rsp,%rbp
   15034:	41 54                	push   %r12
   15036:	53                   	push   %rbx
   15037:	48 83 ec 30          	sub    $0x30,%rsp
   1503b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1503f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15043:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15047:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   1504b:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1504f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15053:	48 89 c7             	mov    %rax,%rdi
   15056:	e8 b4 dc ff ff       	call   12d0f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1505b:	49 89 c4             	mov    %rax,%r12
   1505e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15062:	48 89 c7             	mov    %rax,%rdi
   15065:	e8 97 dc ff ff       	call   12d01 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1506a:	48 89 c3             	mov    %rax,%rbx
   1506d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15071:	48 89 c7             	mov    %rax,%rdi
   15074:	e8 7a dc ff ff       	call   12cf3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15079:	48 89 c2             	mov    %rax,%rdx
   1507c:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   15080:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15084:	4d 89 e0             	mov    %r12,%r8
   15087:	48 89 d9             	mov    %rbx,%rcx
   1508a:	48 89 c7             	mov    %rax,%rdi
   1508d:	e8 76 04 00 00       	call   15508 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   15092:	90                   	nop
   15093:	48 83 c4 30          	add    $0x30,%rsp
   15097:	5b                   	pop    %rbx
   15098:	41 5c                	pop    %r12
   1509a:	5d                   	pop    %rbp
   1509b:	c3                   	ret

000000000001509c <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1509c:	55                   	push   %rbp
   1509d:	48 89 e5             	mov    %rsp,%rbp
   150a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   150a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150a8:	5d                   	pop    %rbp
   150a9:	c3                   	ret

00000000000150aa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   150aa:	55                   	push   %rbp
   150ab:	48 89 e5             	mov    %rsp,%rbp
   150ae:	48 83 ec 10          	sub    $0x10,%rsp
   150b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   150b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ba:	48 89 c7             	mov    %rax,%rdi
   150bd:	e8 f6 04 00 00       	call   155b8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   150c2:	c9                   	leave
   150c3:	c3                   	ret

00000000000150c4 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   150c4:	55                   	push   %rbp
   150c5:	48 89 e5             	mov    %rsp,%rbp
   150c8:	48 83 ec 10          	sub    $0x10,%rsp
   150cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   150d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150d4:	48 89 c7             	mov    %rax,%rdi
   150d7:	e8 7c 00 00 00       	call   15158 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   150dc:	c9                   	leave
   150dd:	c3                   	ret

00000000000150de <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   150de:	55                   	push   %rbp
   150df:	48 89 e5             	mov    %rsp,%rbp
   150e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   150e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ea:	5d                   	pop    %rbp
   150eb:	c3                   	ret

00000000000150ec <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   150ec:	55                   	push   %rbp
   150ed:	48 89 e5             	mov    %rsp,%rbp
   150f0:	48 83 ec 10          	sub    $0x10,%rsp
   150f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   150f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150fc:	48 89 c6             	mov    %rax,%rsi
   150ff:	bf 08 00 00 00       	mov    $0x8,%edi
   15104:	e8 27 fd fe ff       	call   4e30 <_ZnwmPv>
   15109:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   15110:	90                   	nop
   15111:	c9                   	leave
   15112:	c3                   	ret

0000000000015113 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   15113:	55                   	push   %rbp
   15114:	48 89 e5             	mov    %rsp,%rbp
   15117:	48 83 ec 20          	sub    $0x20,%rsp
   1511b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1511f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15123:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   15127:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1512b:	48 89 c7             	mov    %rax,%rdi
   1512e:	e8 93 04 00 00       	call   155c6 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   15133:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15137:	48 89 c7             	mov    %rax,%rdi
   1513a:	e8 03 fd fe ff       	call   4e42 <_ZSt17__size_to_integerm>
   1513f:	48 89 c1             	mov    %rax,%rcx
   15142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15146:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1514a:	48 89 ce             	mov    %rcx,%rsi
   1514d:	48 89 c7             	mov    %rax,%rdi
   15150:	e8 7c 04 00 00       	call   155d1 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   15155:	c9                   	leave
   15156:	c3                   	ret
   15157:	90                   	nop

0000000000015158 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15158:	55                   	push   %rbp
   15159:	48 89 e5             	mov    %rsp,%rbp
   1515c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15160:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   15167:	ff ff 0f 
      }
   1516a:	5d                   	pop    %rbp
   1516b:	c3                   	ret

000000000001516c <_ZNKSt15__new_allocatorI6ShaderE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1516c:	55                   	push   %rbp
   1516d:	48 89 e5             	mov    %rsp,%rbp
   15170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15174:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   1517b:	ff ff 07 
      }
   1517e:	5d                   	pop    %rbp
   1517f:	c3                   	ret

0000000000015180 <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15180:	55                   	push   %rbp
   15181:	48 89 e5             	mov    %rsp,%rbp
   15184:	48 83 ec 20          	sub    $0x20,%rsp
   15188:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1518c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15190:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15198:	48 89 c7             	mov    %rax,%rdi
   1519b:	e8 cc ff ff ff       	call   1516c <_ZNKSt15__new_allocatorI6ShaderE11_M_max_sizeEv>
   151a0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   151a4:	0f 92 c0             	setb   %al
   151a7:	0f b6 c0             	movzbl %al,%eax
   151aa:	48 85 c0             	test   %rax,%rax
   151ad:	0f 95 c0             	setne  %al
   151b0:	84 c0                	test   %al,%al
   151b2:	74 1a                	je     151ce <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   151b4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   151bb:	ff ff 0f 
   151be:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   151c2:	73 05                	jae    151c9 <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   151c4:	e8 97 f0 fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   151c9:	e8 12 ef fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   151ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151d2:	48 c1 e0 04          	shl    $0x4,%rax
   151d6:	48 89 c7             	mov    %rax,%rdi
   151d9:	e8 92 f1 fe ff       	call   4370 <_Znwm@plt>
   151de:	90                   	nop
      }
   151df:	c9                   	leave
   151e0:	c3                   	ret

00000000000151e1 <_ZSt11__addressofI6ShaderEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   151e1:	55                   	push   %rbp
   151e2:	48 89 e5             	mov    %rsp,%rbp
   151e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   151e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151ed:	5d                   	pop    %rbp
   151ee:	c3                   	ret

00000000000151ef <_ZSt10_ConstructI6ShaderJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   151ef:	55                   	push   %rbp
   151f0:	48 89 e5             	mov    %rsp,%rbp
   151f3:	48 83 ec 10          	sub    $0x10,%rsp
   151f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   151fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151ff:	48 89 c6             	mov    %rax,%rsi
   15202:	bf 10 00 00 00       	mov    $0x10,%edi
   15207:	e8 24 fc fe ff       	call   4e30 <_ZnwmPv>
   1520c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   15213:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1521a:	00 
    }
   1521b:	90                   	nop
   1521c:	c9                   	leave
   1521d:	c3                   	ret

000000000001521e <_ZSt6fill_nIP6ShadermS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1521e:	55                   	push   %rbp
   1521f:	48 89 e5             	mov    %rsp,%rbp
   15222:	48 83 ec 20          	sub    $0x20,%rsp
   15226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1522a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1522e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   15232:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15236:	48 89 c7             	mov    %rax,%rdi
   15239:	e8 f0 03 00 00       	call   1562e <_ZSt19__iterator_categoryIP6ShaderENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1523e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15242:	48 89 c7             	mov    %rax,%rdi
   15245:	e8 f8 fb fe ff       	call   4e42 <_ZSt17__size_to_integerm>
   1524a:	48 89 c1             	mov    %rax,%rcx
   1524d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15251:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15255:	48 89 ce             	mov    %rcx,%rsi
   15258:	48 89 c7             	mov    %rax,%rdi
   1525b:	e8 d9 03 00 00       	call   15639 <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   15260:	c9                   	leave
   15261:	c3                   	ret

0000000000015262 <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15262:	55                   	push   %rbp
   15263:	48 89 e5             	mov    %rsp,%rbp
   15266:	48 83 ec 10          	sub    $0x10,%rsp
   1526a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1526e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15272:	48 89 c7             	mov    %rax,%rdi
   15275:	e8 02 00 00 00       	call   1527c <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   1527a:	c9                   	leave
   1527b:	c3                   	ret

000000000001527c <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1527c:	55                   	push   %rbp
   1527d:	48 89 e5             	mov    %rsp,%rbp
   15280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15284:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1528b:	ff ff 1f 
      }
   1528e:	5d                   	pop    %rbp
   1528f:	c3                   	ret

0000000000015290 <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   15290:	55                   	push   %rbp
   15291:	48 89 e5             	mov    %rsp,%rbp
   15294:	53                   	push   %rbx
   15295:	48 83 ec 28          	sub    $0x28,%rsp
   15299:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1529d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   152a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   152a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   152a9:	48 89 c7             	mov    %rax,%rdi
   152ac:	e8 e3 03 00 00       	call   15694 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   152b1:	48 89 c3             	mov    %rax,%rbx
   152b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152b8:	48 89 c7             	mov    %rax,%rdi
   152bb:	e8 d4 03 00 00       	call   15694 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   152c0:	48 89 c1             	mov    %rax,%rcx
   152c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152c7:	48 89 c2             	mov    %rax,%rdx
   152ca:	48 89 de             	mov    %rbx,%rsi
   152cd:	48 89 cf             	mov    %rcx,%rdi
   152d0:	e8 cd 03 00 00       	call   156a2 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
    }
   152d5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   152d9:	c9                   	leave
   152da:	c3                   	ret

00000000000152db <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   152db:	55                   	push   %rbp
   152dc:	48 89 e5             	mov    %rsp,%rbp
   152df:	48 83 ec 20          	sub    $0x20,%rsp
   152e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   152e7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   152ee:	ff ff 0f 
   152f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   152f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152f9:	48 89 c7             	mov    %rax,%rdi
   152fc:	e8 0b 04 00 00       	call   1570c <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   15301:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   15305:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15309:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1530d:	48 89 d6             	mov    %rdx,%rsi
   15310:	48 89 c7             	mov    %rax,%rdi
   15313:	e8 e5 ff fe ff       	call   52fd <_ZSt3minImERKT_S2_S2_>
   15318:	48 8b 00             	mov    (%rax),%rax
      }
   1531b:	c9                   	leave
   1531c:	c3                   	ret
   1531d:	90                   	nop

000000000001531e <_ZNKSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1531e:	55                   	push   %rbp
   1531f:	48 89 e5             	mov    %rsp,%rbp
   15322:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15326:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1532a:	5d                   	pop    %rbp
   1532b:	c3                   	ret

000000000001532c <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1532c:	55                   	push   %rbp
   1532d:	48 89 e5             	mov    %rsp,%rbp
   15330:	48 83 ec 20          	sub    $0x20,%rsp
   15334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15338:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1533c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15344:	48 89 c7             	mov    %rax,%rdi
   15347:	e8 da 03 00 00       	call   15726 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1534c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15350:	0f 92 c0             	setb   %al
   15353:	0f b6 c0             	movzbl %al,%eax
   15356:	48 85 c0             	test   %rax,%rax
   15359:	0f 95 c0             	setne  %al
   1535c:	84 c0                	test   %al,%al
   1535e:	74 1a                	je     1537a <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15360:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15367:	ff ff 1f 
   1536a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1536e:	73 05                	jae    15375 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15370:	e8 eb ee fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15375:	e8 66 ed fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1537a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1537e:	48 c1 e0 03          	shl    $0x3,%rax
   15382:	48 89 c7             	mov    %rax,%rdi
   15385:	e8 e6 ef fe ff       	call   4370 <_Znwm@plt>
   1538a:	90                   	nop
      }
   1538b:	c9                   	leave
   1538c:	c3                   	ret

000000000001538d <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>:
    __niter_base(_Iterator __it)
   1538d:	55                   	push   %rbp
   1538e:	48 89 e5             	mov    %rsp,%rbp
   15391:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15399:	5d                   	pop    %rbp
   1539a:	c3                   	ret

000000000001539b <_ZSt14__relocate_a_1IP12VkPipeline_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1539b:	55                   	push   %rbp
   1539c:	48 89 e5             	mov    %rsp,%rbp
   1539f:	48 83 ec 30          	sub    $0x30,%rsp
   153a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   153a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   153ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   153af:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   153b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   153b7:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   153bb:	48 c1 f8 03          	sar    $0x3,%rax
   153bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   153c3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   153c8:	7e 1f                	jle    153e9 <_ZSt14__relocate_a_1IP12VkPipeline_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   153ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ce:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   153d5:	00 
   153d6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   153da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   153de:	48 89 ce             	mov    %rcx,%rsi
   153e1:	48 89 c7             	mov    %rax,%rdi
   153e4:	e8 57 f2 fe ff       	call   4640 <memmove@plt>
      return __result + __count;
   153e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ed:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   153f4:	00 
   153f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   153f9:	48 01 d0             	add    %rdx,%rax
    }
   153fc:	c9                   	leave
   153fd:	c3                   	ret

00000000000153fe <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   153fe:	55                   	push   %rbp
   153ff:	48 89 e5             	mov    %rsp,%rbp
   15402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15406:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1540a:	5d                   	pop    %rbp
   1540b:	c3                   	ret

000000000001540c <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1540c:	55                   	push   %rbp
   1540d:	48 89 e5             	mov    %rsp,%rbp
   15410:	41 54                	push   %r12
   15412:	53                   	push   %rbx
   15413:	48 83 ec 20          	sub    $0x20,%rsp
   15417:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1541b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1541f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   15423:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15427:	48 89 c7             	mov    %rax,%rdi
   1542a:	e8 8f f4 ff ff       	call   148be <_ZSt12__niter_baseIPPKcET_S3_>
   1542f:	49 89 c4             	mov    %rax,%r12
   15432:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15436:	48 89 c7             	mov    %rax,%rdi
   15439:	e8 fc 02 00 00       	call   1573a <_ZSt12__niter_baseIPKPKcET_S4_>
   1543e:	48 89 c3             	mov    %rax,%rbx
   15441:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15445:	48 89 c7             	mov    %rax,%rdi
   15448:	e8 ed 02 00 00       	call   1573a <_ZSt12__niter_baseIPKPKcET_S4_>
   1544d:	4c 89 e2             	mov    %r12,%rdx
   15450:	48 89 de             	mov    %rbx,%rsi
   15453:	48 89 c7             	mov    %rax,%rdi
   15456:	e8 ed 02 00 00       	call   15748 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1545b:	48 89 c2             	mov    %rax,%rdx
   1545e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   15462:	48 89 d6             	mov    %rdx,%rsi
   15465:	48 89 c7             	mov    %rax,%rdi
   15468:	e8 08 03 00 00       	call   15775 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1546d:	48 83 c4 20          	add    $0x20,%rsp
   15471:	5b                   	pop    %rbx
   15472:	41 5c                	pop    %r12
   15474:	5d                   	pop    %rbp
   15475:	c3                   	ret

0000000000015476 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15476:	55                   	push   %rbp
   15477:	48 89 e5             	mov    %rsp,%rbp
   1547a:	48 83 ec 20          	sub    $0x20,%rsp
   1547e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15482:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15486:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1548a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1548e:	48 89 c7             	mov    %rax,%rdi
   15491:	e8 f2 02 00 00       	call   15788 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   15496:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1549a:	0f 92 c0             	setb   %al
   1549d:	0f b6 c0             	movzbl %al,%eax
   154a0:	48 85 c0             	test   %rax,%rax
   154a3:	0f 95 c0             	setne  %al
   154a6:	84 c0                	test   %al,%al
   154a8:	74 1a                	je     154c4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   154aa:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   154b1:	38 8e 03 
   154b4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   154b8:	73 05                	jae    154bf <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   154ba:	e8 a1 ed fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   154bf:	e8 1c ec fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   154c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   154c8:	48 89 d0             	mov    %rdx,%rax
   154cb:	48 c1 e0 03          	shl    $0x3,%rax
   154cf:	48 01 d0             	add    %rdx,%rax
   154d2:	48 c1 e0 03          	shl    $0x3,%rax
   154d6:	48 89 c7             	mov    %rax,%rdi
   154d9:	e8 92 ee fe ff       	call   4370 <_Znwm@plt>
   154de:	90                   	nop
      }
   154df:	c9                   	leave
   154e0:	c3                   	ret
   154e1:	90                   	nop

00000000000154e2 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   154e2:	55                   	push   %rbp
   154e3:	48 89 e5             	mov    %rsp,%rbp
   154e6:	48 83 ec 10          	sub    $0x10,%rsp
   154ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   154f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   154fa:	48 89 d6             	mov    %rdx,%rsi
   154fd:	48 89 c7             	mov    %rax,%rdi
   15500:	e8 97 02 00 00       	call   1579c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   15505:	90                   	nop
   15506:	c9                   	leave
   15507:	c3                   	ret

0000000000015508 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   15508:	55                   	push   %rbp
   15509:	48 89 e5             	mov    %rsp,%rbp
   1550c:	41 56                	push   %r14
   1550e:	41 55                	push   %r13
   15510:	41 54                	push   %r12
   15512:	53                   	push   %rbx
   15513:	48 83 ec 40          	sub    $0x40,%rsp
   15517:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1551b:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1551f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   15523:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   15527:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1552b:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   1552f:	48 89 de             	mov    %rbx,%rsi
   15532:	bf 28 00 00 00       	mov    $0x28,%edi
   15537:	e8 f4 f8 fe ff       	call   4e30 <_ZnwmPv>
   1553c:	49 89 c4             	mov    %rax,%r12
   1553f:	41 be 01 00 00 00    	mov    $0x1,%r14d
   15545:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15549:	48 89 c7             	mov    %rax,%rdi
   1554c:	e8 be d7 ff ff       	call   12d0f <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15551:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   15555:	48 89 c7             	mov    %rax,%rdi
   15558:	e8 a4 d7 ff ff       	call   12d01 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1555d:	48 89 c2             	mov    %rax,%rdx
   15560:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   15564:	48 89 d6             	mov    %rdx,%rsi
   15567:	48 89 c7             	mov    %rax,%rdi
   1556a:	e8 73 ff ff ff       	call   154e2 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1556f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15573:	48 89 c7             	mov    %rax,%rdi
   15576:	e8 78 d7 ff ff       	call   12cf3 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1557b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1557f:	48 89 c6             	mov    %rax,%rsi
   15582:	4c 89 e7             	mov    %r12,%rdi
   15585:	e8 30 02 00 00       	call   157ba <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   1558a:	eb 1e                	jmp    155aa <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   1558c:	49 89 c5             	mov    %rax,%r13
   1558f:	45 84 f6             	test   %r14b,%r14b
   15592:	74 0b                	je     1559f <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   15594:	48 89 de             	mov    %rbx,%rsi
   15597:	4c 89 e7             	mov    %r12,%rdi
   1559a:	e8 54 a8 ff ff       	call   fdf3 <_ZdlPvS_>
   1559f:	4c 89 e8             	mov    %r13,%rax
   155a2:	48 89 c7             	mov    %rax,%rdi
   155a5:	e8 16 f1 fe ff       	call   46c0 <_Unwind_Resume@plt>
   155aa:	48 83 c4 40          	add    $0x40,%rsp
   155ae:	5b                   	pop    %rbx
   155af:	41 5c                	pop    %r12
   155b1:	41 5d                	pop    %r13
   155b3:	41 5e                	pop    %r14
   155b5:	5d                   	pop    %rbp
   155b6:	c3                   	ret
   155b7:	90                   	nop

00000000000155b8 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   155b8:	55                   	push   %rbp
   155b9:	48 89 e5             	mov    %rsp,%rbp
   155bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   155c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155c4:	5d                   	pop    %rbp
   155c5:	c3                   	ret

00000000000155c6 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   155c6:	55                   	push   %rbp
   155c7:	48 89 e5             	mov    %rsp,%rbp
   155ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   155ce:	90                   	nop
   155cf:	5d                   	pop    %rbp
   155d0:	c3                   	ret

00000000000155d1 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   155d1:	55                   	push   %rbp
   155d2:	48 89 e5             	mov    %rsp,%rbp
   155d5:	48 83 ec 20          	sub    $0x20,%rsp
   155d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   155e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   155e5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   155ea:	75 06                	jne    155f2 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   155ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155f0:	eb 3a                	jmp    1562c <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   155f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   155f6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   155fd:	00 
   155fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15602:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   15606:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1560a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1560e:	48 89 ce             	mov    %rcx,%rsi
   15611:	48 89 c7             	mov    %rax,%rdi
   15614:	e8 cb 01 00 00       	call   157e4 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   15619:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1561d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15624:	00 
   15625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15629:	48 01 d0             	add    %rdx,%rax
    }
   1562c:	c9                   	leave
   1562d:	c3                   	ret

000000000001562e <_ZSt19__iterator_categoryIP6ShaderENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   1562e:	55                   	push   %rbp
   1562f:	48 89 e5             	mov    %rsp,%rbp
   15632:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   15636:	90                   	nop
   15637:	5d                   	pop    %rbp
   15638:	c3                   	ret

0000000000015639 <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   15639:	55                   	push   %rbp
   1563a:	48 89 e5             	mov    %rsp,%rbp
   1563d:	48 83 ec 20          	sub    $0x20,%rsp
   15641:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15645:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15649:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1564d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15652:	75 06                	jne    1565a <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   15654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15658:	eb 38                	jmp    15692 <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x59>
      std::__fill_a(__first, __first + __n, __value);
   1565a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1565e:	48 c1 e0 04          	shl    $0x4,%rax
   15662:	48 89 c2             	mov    %rax,%rdx
   15665:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15669:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1566d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15675:	48 89 ce             	mov    %rcx,%rsi
   15678:	48 89 c7             	mov    %rax,%rdi
   1567b:	e8 92 01 00 00       	call   15812 <_ZSt8__fill_aIP6ShaderS0_EvT_S2_RKT0_>
      return __first + __n;
   15680:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15684:	48 c1 e0 04          	shl    $0x4,%rax
   15688:	48 89 c2             	mov    %rax,%rdx
   1568b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1568f:	48 01 d0             	add    %rdx,%rax
    }
   15692:	c9                   	leave
   15693:	c3                   	ret

0000000000015694 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>:
    __miter_base(_Iterator __it)
   15694:	55                   	push   %rbp
   15695:	48 89 e5             	mov    %rsp,%rbp
   15698:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1569c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156a0:	5d                   	pop    %rbp
   156a1:	c3                   	ret

00000000000156a2 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   156a2:	55                   	push   %rbp
   156a3:	48 89 e5             	mov    %rsp,%rbp
   156a6:	41 54                	push   %r12
   156a8:	53                   	push   %rbx
   156a9:	48 83 ec 20          	sub    $0x20,%rsp
   156ad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   156b1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   156b5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   156b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   156bd:	48 89 c7             	mov    %rax,%rdi
   156c0:	e8 89 01 00 00       	call   1584e <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>
   156c5:	49 89 c4             	mov    %rax,%r12
   156c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   156cc:	48 89 c7             	mov    %rax,%rdi
   156cf:	e8 6c 01 00 00       	call   15840 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   156d4:	48 89 c3             	mov    %rax,%rbx
   156d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156db:	48 89 c7             	mov    %rax,%rdi
   156de:	e8 5d 01 00 00       	call   15840 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   156e3:	4c 89 e2             	mov    %r12,%rdx
   156e6:	48 89 de             	mov    %rbx,%rsi
   156e9:	48 89 c7             	mov    %rax,%rdi
   156ec:	e8 6b 01 00 00       	call   1585c <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   156f1:	48 89 c2             	mov    %rax,%rdx
   156f4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   156f8:	48 89 d6             	mov    %rdx,%rsi
   156fb:	48 89 c7             	mov    %rax,%rdi
   156fe:	e8 86 01 00 00       	call   15889 <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>
    }
   15703:	48 83 c4 20          	add    $0x20,%rsp
   15707:	5b                   	pop    %rbx
   15708:	41 5c                	pop    %r12
   1570a:	5d                   	pop    %rbp
   1570b:	c3                   	ret

000000000001570c <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1570c:	55                   	push   %rbp
   1570d:	48 89 e5             	mov    %rsp,%rbp
   15710:	48 83 ec 10          	sub    $0x10,%rsp
   15714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1571c:	48 89 c7             	mov    %rax,%rdi
   1571f:	e8 78 01 00 00       	call   1589c <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   15724:	c9                   	leave
   15725:	c3                   	ret

0000000000015726 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15726:	55                   	push   %rbp
   15727:	48 89 e5             	mov    %rsp,%rbp
   1572a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1572e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   15735:	ff ff 0f 
      }
   15738:	5d                   	pop    %rbp
   15739:	c3                   	ret

000000000001573a <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   1573a:	55                   	push   %rbp
   1573b:	48 89 e5             	mov    %rsp,%rbp
   1573e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15746:	5d                   	pop    %rbp
   15747:	c3                   	ret

0000000000015748 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   15748:	55                   	push   %rbp
   15749:	48 89 e5             	mov    %rsp,%rbp
   1574c:	48 83 ec 20          	sub    $0x20,%rsp
   15750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15754:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15758:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1575c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15760:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15768:	48 89 ce             	mov    %rcx,%rsi
   1576b:	48 89 c7             	mov    %rax,%rdi
   1576e:	e8 43 01 00 00       	call   158b6 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   15773:	c9                   	leave
   15774:	c3                   	ret

0000000000015775 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   15775:	55                   	push   %rbp
   15776:	48 89 e5             	mov    %rsp,%rbp
   15779:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1577d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   15781:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15785:	5d                   	pop    %rbp
   15786:	c3                   	ret
   15787:	90                   	nop

0000000000015788 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15788:	55                   	push   %rbp
   15789:	48 89 e5             	mov    %rsp,%rbp
   1578c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15790:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   15797:	1c c7 01 
      }
   1579a:	5d                   	pop    %rbp
   1579b:	c3                   	ret

000000000001579c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   1579c:	55                   	push   %rbp
   1579d:	48 89 e5             	mov    %rsp,%rbp
   157a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   157a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   157b0:	48 8b 12             	mov    (%rdx),%rdx
   157b3:	48 89 10             	mov    %rdx,(%rax)
      { }
   157b6:	90                   	nop
   157b7:	5d                   	pop    %rbp
   157b8:	c3                   	ret
   157b9:	90                   	nop

00000000000157ba <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   157ba:	55                   	push   %rbp
   157bb:	48 89 e5             	mov    %rsp,%rbp
   157be:	48 83 ec 20          	sub    $0x20,%rsp
   157c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   157ca:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   157ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   157d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157d6:	48 89 ce             	mov    %rcx,%rsi
   157d9:	48 89 c7             	mov    %rax,%rdi
   157dc:	e8 03 01 00 00       	call   158e4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   157e1:	90                   	nop
   157e2:	c9                   	leave
   157e3:	c3                   	ret

00000000000157e4 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   157e4:	55                   	push   %rbp
   157e5:	48 89 e5             	mov    %rsp,%rbp
   157e8:	48 83 ec 20          	sub    $0x20,%rsp
   157ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   157f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15804:	48 89 ce             	mov    %rcx,%rsi
   15807:	48 89 c7             	mov    %rax,%rdi
   1580a:	e8 1f 01 00 00       	call   1592e <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1580f:	90                   	nop
   15810:	c9                   	leave
   15811:	c3                   	ret

0000000000015812 <_ZSt8__fill_aIP6ShaderS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   15812:	55                   	push   %rbp
   15813:	48 89 e5             	mov    %rsp,%rbp
   15816:	48 83 ec 20          	sub    $0x20,%rsp
   1581a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1581e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15822:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   15826:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1582a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1582e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15832:	48 89 ce             	mov    %rcx,%rsi
   15835:	48 89 c7             	mov    %rax,%rdi
   15838:	e8 2c 01 00 00       	call   15969 <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   1583d:	90                   	nop
   1583e:	c9                   	leave
   1583f:	c3                   	ret

0000000000015840 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>:
    __niter_base(_Iterator __it)
   15840:	55                   	push   %rbp
   15841:	48 89 e5             	mov    %rsp,%rbp
   15844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1584c:	5d                   	pop    %rbp
   1584d:	c3                   	ret

000000000001584e <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>:
    __niter_base(_Iterator __it)
   1584e:	55                   	push   %rbp
   1584f:	48 89 e5             	mov    %rsp,%rbp
   15852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1585a:	5d                   	pop    %rbp
   1585b:	c3                   	ret

000000000001585c <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1585c:	55                   	push   %rbp
   1585d:	48 89 e5             	mov    %rsp,%rbp
   15860:	48 83 ec 20          	sub    $0x20,%rsp
   15864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15868:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1586c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   15870:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15874:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15878:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1587c:	48 89 ce             	mov    %rcx,%rsi
   1587f:	48 89 c7             	mov    %rax,%rdi
   15882:	e8 1d 01 00 00       	call   159a4 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   15887:	c9                   	leave
   15888:	c3                   	ret

0000000000015889 <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   15889:	55                   	push   %rbp
   1588a:	48 89 e5             	mov    %rsp,%rbp
   1588d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15891:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   15895:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15899:	5d                   	pop    %rbp
   1589a:	c3                   	ret
   1589b:	90                   	nop

000000000001589c <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1589c:	55                   	push   %rbp
   1589d:	48 89 e5             	mov    %rsp,%rbp
   158a0:	48 83 ec 10          	sub    $0x10,%rsp
   158a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   158a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158ac:	48 89 c7             	mov    %rax,%rdi
   158af:	e8 72 fe ff ff       	call   15726 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   158b4:	c9                   	leave
   158b5:	c3                   	ret

00000000000158b6 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   158b6:	55                   	push   %rbp
   158b7:	48 89 e5             	mov    %rsp,%rbp
   158ba:	48 83 ec 20          	sub    $0x20,%rsp
   158be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   158c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   158c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   158ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   158ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   158d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158d6:	48 89 ce             	mov    %rcx,%rsi
   158d9:	48 89 c7             	mov    %rax,%rdi
   158dc:	e8 f0 00 00 00       	call   159d1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   158e1:	c9                   	leave
   158e2:	c3                   	ret
   158e3:	90                   	nop

00000000000158e4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   158e4:	55                   	push   %rbp
   158e5:	48 89 e5             	mov    %rsp,%rbp
   158e8:	53                   	push   %rbx
   158e9:	48 83 ec 28          	sub    $0x28,%rsp
   158ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   158f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   158f5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   158f9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   158fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15901:	48 89 c7             	mov    %rax,%rdi
   15904:	e8 27 01 00 00       	call   15a30 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   15909:	48 89 c7             	mov    %rax,%rdi
   1590c:	e8 39 01 00 00       	call   15a4a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   15911:	48 89 c6             	mov    %rax,%rsi
   15914:	48 89 df             	mov    %rbx,%rdi
   15917:	e8 a4 e8 fe ff       	call   41c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   1591c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15920:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   15927:	90                   	nop
   15928:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1592c:	c9                   	leave
   1592d:	c3                   	ret

000000000001592e <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1592e:	55                   	push   %rbp
   1592f:	48 89 e5             	mov    %rsp,%rbp
   15932:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15936:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1593a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1593e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15942:	48 8b 00             	mov    (%rax),%rax
   15945:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   15949:	eb 10                	jmp    1595b <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1594b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1594f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15953:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   15956:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1595b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1595f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   15963:	75 e6                	jne    1594b <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   15965:	90                   	nop
   15966:	90                   	nop
   15967:	5d                   	pop    %rbp
   15968:	c3                   	ret

0000000000015969 <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   15969:	55                   	push   %rbp
   1596a:	48 89 e5             	mov    %rsp,%rbp
   1596d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15971:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15975:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   15979:	eb 1b                	jmp    15996 <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x2d>
	*__first = __value;
   1597b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1597f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15983:	48 8b 50 08          	mov    0x8(%rax),%rdx
   15987:	48 8b 00             	mov    (%rax),%rax
   1598a:	48 89 01             	mov    %rax,(%rcx)
   1598d:	48 89 51 08          	mov    %rdx,0x8(%rcx)
      for (; __first != __last; ++__first)
   15991:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)
   15996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1599a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1599e:	75 db                	jne    1597b <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   159a0:	90                   	nop
   159a1:	90                   	nop
   159a2:	5d                   	pop    %rbp
   159a3:	c3                   	ret

00000000000159a4 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   159a4:	55                   	push   %rbp
   159a5:	48 89 e5             	mov    %rsp,%rbp
   159a8:	48 83 ec 20          	sub    $0x20,%rsp
   159ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   159b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   159b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   159bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   159c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159c4:	48 89 ce             	mov    %rcx,%rsi
   159c7:	48 89 c7             	mov    %rax,%rdi
   159ca:	e8 89 00 00 00       	call   15a58 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>
    }
   159cf:	c9                   	leave
   159d0:	c3                   	ret

00000000000159d1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   159d1:	55                   	push   %rbp
   159d2:	48 89 e5             	mov    %rsp,%rbp
   159d5:	48 83 ec 30          	sub    $0x30,%rsp
   159d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   159dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   159e1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   159e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   159e9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   159ed:	48 c1 f8 03          	sar    $0x3,%rax
   159f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   159f5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   159fa:	74 1f                	je     15a1b <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   159fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a00:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15a07:	00 
   15a08:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15a0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a10:	48 89 ce             	mov    %rcx,%rsi
   15a13:	48 89 c7             	mov    %rax,%rdi
   15a16:	e8 25 ec fe ff       	call   4640 <memmove@plt>
	  return __result + _Num;
   15a1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a1f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15a26:	00 
   15a27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a2b:	48 01 d0             	add    %rdx,%rax
	}
   15a2e:	c9                   	leave
   15a2f:	c3                   	ret

0000000000015a30 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   15a30:	55                   	push   %rbp
   15a31:	48 89 e5             	mov    %rsp,%rbp
   15a34:	48 83 ec 10          	sub    $0x10,%rsp
   15a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   15a3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a40:	48 89 c7             	mov    %rax,%rdi
   15a43:	e8 6f 00 00 00       	call   15ab7 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   15a48:	c9                   	leave
   15a49:	c3                   	ret

0000000000015a4a <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15a4a:	55                   	push   %rbp
   15a4b:	48 89 e5             	mov    %rsp,%rbp
   15a4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a56:	5d                   	pop    %rbp
   15a57:	c3                   	ret

0000000000015a58 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   15a58:	55                   	push   %rbp
   15a59:	48 89 e5             	mov    %rsp,%rbp
   15a5c:	48 83 ec 30          	sub    $0x30,%rsp
   15a60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15a64:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15a68:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   15a6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15a70:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15a74:	48 c1 f8 02          	sar    $0x2,%rax
   15a78:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   15a7c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15a81:	74 1f                	je     15aa2 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   15a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a87:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15a8e:	00 
   15a8f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15a93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a97:	48 89 ce             	mov    %rcx,%rsi
   15a9a:	48 89 c7             	mov    %rax,%rdi
   15a9d:	e8 9e eb fe ff       	call   4640 <memmove@plt>
	  return __result + _Num;
   15aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aa6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15aad:	00 
   15aae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ab2:	48 01 d0             	add    %rdx,%rax
	}
   15ab5:	c9                   	leave
   15ab6:	c3                   	ret

0000000000015ab7 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   15ab7:	55                   	push   %rbp
   15ab8:	48 89 e5             	mov    %rsp,%rbp
   15abb:	48 83 ec 10          	sub    $0x10,%rsp
   15abf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   15ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ac7:	48 89 c7             	mov    %rax,%rdi
   15aca:	e8 02 00 00 00       	call   15ad1 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   15acf:	c9                   	leave
   15ad0:	c3                   	ret

0000000000015ad1 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   15ad1:	55                   	push   %rbp
   15ad2:	48 89 e5             	mov    %rsp,%rbp
   15ad5:	48 83 ec 10          	sub    $0x10,%rsp
   15ad9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ae1:	48 89 c7             	mov    %rax,%rdi
   15ae4:	e8 02 00 00 00       	call   15aeb <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   15ae9:	c9                   	leave
   15aea:	c3                   	ret

0000000000015aeb <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   15aeb:	55                   	push   %rbp
   15aec:	48 89 e5             	mov    %rsp,%rbp
   15aef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15af3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15af7:	48 8b 00             	mov    (%rax),%rax
   15afa:	5d                   	pop    %rbp
   15afb:	c3                   	ret

0000000000015afc <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   15afc:	55                   	push   %rbp
   15afd:	48 89 e5             	mov    %rsp,%rbp
   15b00:	48 83 ec 10          	sub    $0x10,%rsp
   15b04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b08:	48 8d 15 b1 01 01 00 	lea    0x101b1(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
   15b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b13:	48 89 10             	mov    %rdx,(%rax)
   15b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b1a:	48 89 c7             	mov    %rax,%rdi
   15b1d:	e8 de eb fe ff       	call   4700 <_ZNSt9exceptionD2Ev@plt>
   15b22:	90                   	nop
   15b23:	c9                   	leave
   15b24:	c3                   	ret
   15b25:	90                   	nop

0000000000015b26 <_ZNSt19bad_optional_accessD0Ev>:
   15b26:	55                   	push   %rbp
   15b27:	48 89 e5             	mov    %rsp,%rbp
   15b2a:	48 83 ec 10          	sub    $0x10,%rsp
   15b2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b36:	48 89 c7             	mov    %rax,%rdi
   15b39:	e8 be ff ff ff       	call   15afc <_ZNSt19bad_optional_accessD1Ev>
   15b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b42:	be 08 00 00 00       	mov    $0x8,%esi
   15b47:	48 89 c7             	mov    %rax,%rdi
   15b4a:	e8 31 e8 fe ff       	call   4380 <_ZdlPvm@plt>
   15b4f:	c9                   	leave
   15b50:	c3                   	ret

Disassembly of section .fini:

0000000000015b54 <_fini>:
   15b54:	48 83 ec 08          	sub    $0x8,%rsp
   15b58:	48 83 c4 08          	add    $0x8,%rsp
   15b5c:	c3                   	ret
